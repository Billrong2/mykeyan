{"UNKNOWN to If":[{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (url != null) com.bumptech.glide.Glide.with(getContext()).load(android.net.Uri.parse(url)).placeholder(R.drawable.photo_msg).into(uiPic);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6821/buggy-version/sdk.src.main.java.com.magnet.magnetchat.ui.views.chatlist.list.DefaultMMXPictureMessageView.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)", "com.bumptech.glide.Glide.with(getContext()).load(android.net.Uri.parse(url)).placeholder(R.drawable.photo_msg).into(android.widget.ImageView)", "com.bumptech.glide.Glide.with(getContext()).load(android.net.Uri.parse(url))", "com.bumptech.glide.Glide.with(getContext()).load(android.net.Uri.parse(url)).placeholder(R.drawable.photo_msg)"], "Fixed commit": "5bb38fbeda5467b94209bb5b29461efab7eedc45", "Url": "https://api.github.com/repos/magnetsystems/message-chatkit-android", "Date": "2016-06-08T11:59:50Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((path.contains(\".\")) || (path.contains(\"(\"))) { path = reverseRoute(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3324/buggy-version/src.main.java.act.route.Router.java", "BodyUseAPI": ["act.route.Router.reverseRoute(java.lang.String)"], "Fixed commit": "e2782aa22857b41d7a69c182faa1e27cf44ed51a", "Url": "https://api.github.com/repos/actframework/actframework", "Date": "2017-03-19T08:23:49Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.KITKAT)) { android.content.ContentValues values = new android.content.ContentValues(); values.put(\"address\", phoneNumber); values.put(\"date\", java.lang.System.currentTimeMillis()); values.put(\"body\", message); _context.getContentResolver().insert(android.net.Uri.parse(\"content://sms/sent\"), values); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5214/buggy-version/src.com.googlecode.gtalksms.cmd.smsCmd.SmsManager.java", "BodyUseAPI": [], "Fixed commit": "1652e36633354c9c1af6789e5b67d3ee10082e7c", "Url": "https://api.github.com/repos/Yakoo63/GTalkSMS", "Date": "2014-08-31T13:33:09Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.LOLLIPOP)) { java.lang.String[] perms = new java.lang.String[]{ \"android.permission.READ_EXTERNAL_STORAGE\", \"android.permission.WRITE_EXTERNAL_STORAGE\" }; int permsRequestCode = 200; requestPermissions(perms, permsRequestCode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6137/buggy-version/app.src.main.java.de.th_nuernberg.harwedu.labcert.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "62568c9af0e3458442cc697989fb297d89dbe030", "Url": "https://api.github.com/repos/harwedu/LabCert", "Date": "2016-06-06T18:40:55Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (frame.isMaximized()) { uk.co.hexeption.darkforge.utils.RenderUtils.drawHLine(frame.getX(), ((frame.getX()) + (dimension.width)), frame.getY(), -1937735552); }else { uk.co.hexeption.darkforge.utils.RenderUtils.drawHLine(frame.getX(), (((frame.getX()) + (dimension.width)) - 1), frame.getY(), -1937735552); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/990/buggy-version/src.main.java.uk.co.hexeption.darkforge.gui.gui.theme.themes.darkforge.DarkForgeFrame.java", "BodyUseAPI": ["java.awt.Frame.getX()", "java.awt.Frame.getX()", "java.awt.Frame.getX()", "uk.co.hexeption.darkforge.utils.RenderUtils.drawHLine(int,int,int,int)", "java.awt.Frame.getX()", "java.awt.Frame.getY()", "uk.co.hexeption.darkforge.utils.RenderUtils.drawHLine(int,int,int,int)", "java.awt.Frame.getY()"], "Fixed commit": "155fad53c310742da2d05077bcf7e6e9409c93d5", "Url": "https://api.github.com/repos/Strezzed/DarkForge", "Date": "2017-03-24T13:31:17Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((chatMessage.additionalData) != null) { json.put(\"additionalData\", chatMessage.additionalData.copy()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/459/buggy-version/src.main.java.com.universeprojects.eventserver.ChatMessageCodec.java", "BodyUseAPI": ["io.vertx.core.json.JsonObject.put(java.lang.String,chatMessage.additionalData.copy())", "chatMessage.additionalData.copy()"], "Fixed commit": "5760759201f1090a97e332b9c7e401f5bb487025", "Url": "https://api.github.com/repos/UniverseProjects/EventServer", "Date": "2017-09-03T15:06:49Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((map.get(\"userId\")) != null) { user.setUserId(java.lang.Long.parseLong(map.get(\"userId\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3882/buggy-version/src.main.java.com.spittr.utils.convert.UserConvert.java", "BodyUseAPI": ["com.spittr.model.User.setUserId(long)", "java.lang.Long.parseLong(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "6cdbbf984625cfd440d87a420156c878c5b30781", "Url": "https://api.github.com/repos/CodeTheft/spring-boot-demo", "Date": "2017-09-07T13:17:28Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((userSemanticTypes) == null) || (userSemanticTypes.isEmpty())) this.semanticTypeStatus = ColumnSemanticTypeStatus.Unassigned;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2253/buggy-version/karma-common.src.main.java.edu.isi.karma.rep.alignment.ColumnNode.java", "BodyUseAPI": [], "Fixed commit": "ba02f83e101e52840d98eee37aa2da268c671e30", "Url": "https://api.github.com/repos/usc-isi-i2/Web-Karma", "Date": "2015-05-28T23:38:09Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (key.equals(\"refresh\")) { setSummaries(); }else if ((key.equals(de.fahrgemeinschaft.SettingsActivity.REMEMBER)) && (!(prefs.getBoolean(key, false)))) { prefs.edit().remove(\"password\").commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2928/buggy-version/src.de.fahrgemeinschaft.SettingsActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "android.content.SharedPreferences.getBoolean(java.lang.String,boolean)"], "Fixed commit": "a1fe52d45e12600505744991ee07ee3ea0f3f01d", "Url": "https://api.github.com/repos/fahrgemeinschaft/android-app", "Date": "2013-08-11T18:55:53Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["emailText.getText().toString().trim()", "passText.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((android.text.TextUtils.isEmpty(email)) && (android.text.TextUtils.isEmpty(pass))) { android.widget.Toast.makeText(this, \"Fill up the details to continue...\", Toast.LENGTH_SHORT).show(); logInProgress.dismiss(); }else if ((!(android.text.TextUtils.isEmpty(email))) && (android.text.TextUtils.isEmpty(pass))) { android.widget.Toast.makeText(this, \"Enter your password in the required field...\", Toast.LENGTH_SHORT).show(); logInProgress.dismiss(); }else if ((!(android.text.TextUtils.isEmpty(pass))) && (android.text.TextUtils.isEmpty(email))) { android.widget.Toast.makeText(this, \"Enter your email id in the required field...\", Toast.LENGTH_SHORT).show(); logInProgress.dismiss(); }else { mAuth.signInWithEmailAndPassword(email, pass).addOnCompleteListener(new com.google.android.gms.tasks.OnCompleteListener<com.google.firebase.auth.AuthResult>() { @java.lang.Override public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult> task) { if (task.isSuccessful()) { logInProgress.dismiss(); startActivity(new android.content.Intent(com.example.android.wallpics.SignInActivity.this, com.example.android.wallpics.MainActivity.class).addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)); finish(); } if (!(task.isSuccessful())) { logInProgress.dismiss(); android.widget.Toast.makeText(getApplicationContext(), \"Sign In Failed\", Toast.LENGTH_SHORT).show(); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1325/buggy-version/app.src.main.java.com.example.android.wallpics.SignInActivity.java", "BodyUseAPI": ["mAuth.signInWithEmailAndPassword(email, pass).addOnCompleteListener(com.google.android.gms.tasks.OnCompleteListener<com.google.firebase.auth.AuthResult>)", "android.text.TextUtils.isEmpty(java.lang.String)", "android.text.TextUtils.isEmpty(java.lang.String)", "android.text.TextUtils.isEmpty(java.lang.String)", "android.text.TextUtils.isEmpty(java.lang.String)", "com.google.firebase.auth.FirebaseAuth.signInWithEmailAndPassword(java.lang.String,java.lang.String)"], "Fixed commit": "f958976f79defc5441950b8ac51ddfda183b337e", "Url": "https://api.github.com/repos/rachitbhutani1998/WallPics", "Date": "2017-03-09T13:20:14Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((models.Fleet.findByName(name)) != null) { play.Logger.debug(\"Error at adding fleet\"); flash(\"error\", \"Fleet with that name already exists!\"); return redirect(\"/addFleet\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7728/buggy-version/app.controllers.FleetController.java", "BodyUseAPI": [], "Fixed commit": "0dd4da03ef8feee196356587e834794ff6219db1", "Url": "https://api.github.com/repos/nvuchinic/FleetManagement.v1", "Date": "2015-08-13T07:33:29Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((view.getRequirementNote().getText().compareTo(\"\")) == 0)) saveNote();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7591/buggy-version/RequirementManager.src.edu.wpi.cs.wpisuitetng.modules.requirementmanager.requirement.SaveRequirementController.java", "BodyUseAPI": [], "Fixed commit": "b6d4bfdfb86e57473a79e4c4eb46728ae5156d39", "Url": "https://api.github.com/repos/gsisko/wpi-suite-tng", "Date": "2013-04-20T18:36:52Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.thumbtack.research.nosql.scenarios.ConsistencyBScenario.detailedLog.isDebugEnabled()) { net.thumbtack.research.nosql.scenarios.ConsistencyBScenario.detailedLog.debug(((key) + \"\\t{}\\t{}\"), time, newTimestamp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2709/buggy-version/nosql-research.src.main.java.net.thumbtack.research.nosql.scenarios.ConsistencyBScenario.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,long,long)"], "Fixed commit": "e9ac17ebc5a679a9677d747d3a8efe1427dec117", "Url": "https://api.github.com/repos/aremnev/nosql-test", "Date": "2013-08-14T11:23:30Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ea instanceof uk.antiperson.stackmob.events.entity.Skeleton) { if (config.getFilecon().getBoolean(\"creature.kill-all.drops.skeletons-dont-multiply-bows\")) { if (is.getType().equals(Material.BOW)) { continue; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/848/buggy-version/src.main.java.uk.antiperson.stackmob.events.entity.DeathEvent.java", "BodyUseAPI": [], "Fixed commit": "11750d74383af8ebc726ea62016d7b79d0bb3785", "Url": "https://api.github.com/repos/dwaynehulsman/StackMob", "Date": "2017-08-05T08:17:30Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userID.equalsIgnoreCase(\"ALL\")) sub_query = \" \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3222/buggy-version/GameResult_Web.WebContent.com.dao.PlayersMoneyChange.java", "BodyUseAPI": [], "Fixed commit": "e16531549b3f861b42ea2ee4f510dc84fd1c8078", "Url": "https://api.github.com/repos/fanntone/GameResult_Web", "Date": "2017-02-06T09:58:44Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["aom.scripting.xs.scoping.XSTypeChecker.type(comparison.getLeft())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (left == (aom.scripting.xs.scoping.XSTypeChecker.Type.VECTOR)) error(\"Comparing vectors doesn't work\", XsPackage.Literals.EQUALS_EXPRESSION__LEFT); else check(equalOrNumbers(left, aom.scripting.xs.scoping.XSTypeChecker.type(comparison.getRight())), \"Compared values must be of the same type, but found %1$s and %2$s\", null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7078/buggy-version/aom.scripting.xs.src.aom.scripting.xs.scoping.XSTypeChecker.java", "BodyUseAPI": ["aom.scripting.xs.scoping.XSTypeChecker.XSTypeCheckingSwitch.equalOrNumbers(aom.scripting.xs.scoping.XSTypeChecker.Type,aom.scripting.xs.scoping.XSTypeChecker.Type)", "aom.scripting.xs.scoping.XSTypeChecker.XSTypeCheckingSwitch.check(boolean,java.lang.String,<nulltype>)"], "Fixed commit": "79cb5e87c076eb6293f3a7d2ba5a9b67a5a92eeb", "Url": "https://api.github.com/repos/Njol/aomxsgrammar", "Date": "2016-12-02T00:44:13Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true || (!(eu.vranckaert.heart.rate.monitor.BuildConfig.DEBUG))) { menu.removeItem(R.id.debug_settings); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4135/buggy-version/mobile.src.main.java.eu.vranckaert.heart.rate.monitor.controller.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "82930eee145f68296475fa07f50e8b5852e73704", "Url": "https://api.github.com/repos/dirkvranckaert/HeartRateMonitor", "Date": "2016-03-23T09:25:17Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((json.containsKey(tag)) && (!(type.isInstance(json.get(tag))))) { return fallback; }else { throw new org.geotools.mbstyle.parse.MBFormatException(((((((context.getSimpleName()) + \" requires \\\"\") + tag) + \"\\\" \") + (type.getSimpleName())) + \" field\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1048/buggy-version/modules.unsupported.mbstyle.src.main.java.org.geotools.mbstyle.parse.MBObjectParser.java", "BodyUseAPI": ["java.lang.Class<T>.getSimpleName()"], "Fixed commit": "c5c51e96d10085580cc9eebda8f8032cc6c438d7", "Url": "https://api.github.com/repos/vickdw/geotools", "Date": "2017-04-25T14:27:00Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((writableParams.length) != (tajoParams.length)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2467/buggy-version/tajo-plan.src.main.java.org.apache.tajo.plan.function.HiveFunctionInvoke.java", "BodyUseAPI": [], "Fixed commit": "c3a217dcb9999f8beeefb7a6759f28aa514de31a", "Url": "https://api.github.com/repos/eminency/tajo", "Date": "2016-05-02T03:41:06Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.RouteController.findShortestPath(com.Node,com.Node,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (shortestPath == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3211/buggy-version/src.main.java.com.RouteController.java", "BodyUseAPI": [], "Fixed commit": "3fbe264f55db4cfd4554af0a3dc1f9c3311cd6a0", "Url": "https://api.github.com/repos/JDSustar/wayfinding-osu-capstone-api", "Date": "2015-04-15T18:50:17Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.RouteController.findShortestPath(com.Node,com.Node,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (shortestPath == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3211/buggy-version/src.main.java.com.RouteController.java", "BodyUseAPI": [], "Fixed commit": "3fbe264f55db4cfd4554af0a3dc1f9c3311cd6a0", "Url": "https://api.github.com/repos/JDSustar/wayfinding-osu-capstone-api", "Date": "2015-04-15T18:50:17Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.parent.getClient().getStartTime()) != 0) { user_info_total_rendertime_this_session_value.setText(com.sheepit.client.Utils.humanDuration(new java.util.Date(((new java.util.Date().getTime()) - (this.parent.getClient().getStartTime()))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1422/buggy-version/src.com.sheepit.client.standalone.swing.activity.Working.java", "BodyUseAPI": ["com.sheepit.client.Utils.humanDuration(java.util.Date)", "com.sheepit.client.standalone.GuiSwing.getClient()", "javax.swing.JLabel.setText(com.sheepit.client.Utils.humanDuration(new java.util.Date(((new java.util.Date().getTime()) - (this.parent.getClient().getStartTime())))))", "this.parent.getClient().getStartTime()"], "Fixed commit": "abd70bd18bb607327dce9a890bf331602f57d2d8", "Url": "https://api.github.com/repos/laurent-clouet/sheepit-client", "Date": "2016-09-23T12:34:49Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bot.UrlGrabber.grabUrl(event.getMessage())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (urlInMessage != null) { java.lang.String title = titleGrabber.grabTitle(urlInMessage); sendTitleToChannelIfFound(event, title); title = setTitleEmptyStringIfNotFound(title); bot.restcalls.Link link = createLinkToSave(event, urlInMessage, title); bot.restcalls.RestAccessor.getInstance().addLink(link); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2364/buggy-version/src.main.java.bot.Bot.java", "BodyUseAPI": ["bot.Bot.createLinkToSave(org.pircbotx.hooks.events.MessageEvent,java.lang.String,java.lang.String)", "bot.TitleGrabber.grabTitle(java.lang.String)"], "Fixed commit": "d5d25b9559dd67ac17ea775ff72aa73c2862dbd6", "Url": "https://api.github.com/repos/xorrr/takt1", "Date": "2013-10-26T19:32:36Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.AsyncPlayerChatEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(user.hasPermission(\"reactchat.receive\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3476/buggy-version/src.me.stupiddrew9.reactchat.listeners.ChatListener.java", "BodyUseAPI": [], "Fixed commit": "158d1e63d972be5e52bc26b708459c3a0a9c39e1", "Url": "https://api.github.com/repos/drewdorris/ReactChat", "Date": "2017-10-02T01:43:51Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player.hasPermission(\"reactchat.react\"))) { player.sendMessage(((net.md_5.bungee.api.ChatColor.GOLD) + \"You don't have permission to do this.\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3476/buggy-version/src.me.stupiddrew9.reactchat.commands.ReactCommand.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(((net.md_5.bungee.api.ChatColor.GOLD) + \"You don't have permission to do this.\"))"], "Fixed commit": "158d1e63d972be5e52bc26b708459c3a0a9c39e1", "Url": "https://api.github.com/repos/drewdorris/ReactChat", "Date": "2017-10-02T01:43:51Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (queryLimit > 0) { rowCount = java.lang.Math.min(queryLimit, tableModel.getRowCount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4794/buggy-version/engine.core.source.org.pentaho.reporting.engine.classic.core.function.formula.MultiValueQueryFunction.java", "BodyUseAPI": ["java.lang.Math.min(int,int)"], "Fixed commit": "ed6131335eb93c023921edbb8baacf24a93dc24c", "Url": "https://api.github.com/repos/tmorgner/pentaho-reporting", "Date": "2015-04-27T15:25:46Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newValue == null) newValue = 0L;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7004/buggy-version/src.com.anddev.parsers.Parser.java", "BodyUseAPI": [], "Fixed commit": "33e636ffdda079ec1f50c2c23cbe0ff0fabf7c92", "Url": "https://api.github.com/repos/mvarnagiris/AndDevUtils", "Date": "2013-01-28T11:13:28Z"},
{"Line": "=>970", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (completed.equals(peer.getAvailablePieces())) { peer.send(PeerMessage.NotInterestedMessage.craft()); if (!(peer.isInterested())) { peer.unbind(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6199/buggy-version/src.main.java.com.turn.ttorrent.client.Client.java", "BodyUseAPI": ["com.turn.ttorrent.client.peer.SharingPeer.send(PeerMessage.NotInterestedMessage.craft())", "com.turn.ttorrent.client.peer.SharingPeer.unbind(boolean)", "com.turn.ttorrent.client.peer.SharingPeer.isInterested()"], "Fixed commit": "d2adb1721203db46b2ccd00b6367642323adbb45", "Url": "https://api.github.com/repos/JetBrains/ttorrent-lib", "Date": "2017-12-12T14:57:41Z"},
{"Line": "=>712", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.libj.xquery.compiler.AST.getNodeType(body)) == (LIST)) && ((body.size()) == 1)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/770/buggy-version/src.main.java.org.libj.xquery.compiler.EvalAssembler.java", "BodyUseAPI": [], "Fixed commit": "c61c995b51aee1aca4f912b399a2566711f284b1", "Url": "https://api.github.com/repos/iambus/xquery-b", "Date": "2012-08-19T15:00:59Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mca.core.MCA.getInstance().babyRequests.size()) > 0) { if (mca.core.MCA.getInstance().babyRequests.get(playerTarget.getCommandSenderName()).equals(player.getCommandSenderName())) { doesTargetWantBaby = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1258/buggy-version/Minecraft.1.7.2.src.main.java.mca.client.gui.GuiInteractionPlayer.java", "BodyUseAPI": ["mca.core.MCA.getInstance().babyRequests.get(playerTarget.getCommandSenderName()).equals(player.getCommandSenderName())", "mca.core.MCA.getInstance().babyRequests.get(playerTarget.getCommandSenderName())"], "Fixed commit": "aed9e0af0bc4901fe5f9b1e087855daaf88cb51e", "Url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive", "Date": "2014-03-29T17:20:43Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gm.cardgame.dominion.DominionPlayer.promptToChooseOneCard(<nulltype>,java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(cardToPlay.isTrashed())) { playArea.add(cardToPlay); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/614/buggy-version/src.org.gm.cardgame.dominion.DominionGame.java", "BodyUseAPI": ["java.util.List<org.gm.cardgame.dominion.cards.DominionCard>.add(org.gm.cardgame.dominion.cards.DominionCard)"], "Fixed commit": "8b67767e2123e3fd62b4ca21054bb4fe25278c82", "Url": "https://api.github.com/repos/glenwinters/dominion", "Date": "2013-03-21T15:42:16Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s8w.getPlayer().needsToDiscard()) { gameStatus.setText(\"Your turn has ended! Please discard cards as required...\"); }else { gameStatus.setText(\"It's the opponent's turn! Please hold on...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5646/buggy-version/src.app.java", "BodyUseAPI": [], "Fixed commit": "84a4703bf967f6ad5191ecd8034b227e94543942", "Url": "https://api.github.com/repos/ChooJeremy/bugfree-spice", "Date": "2013-12-13T14:08:42Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == (net.csu333.surrogate.frontend.PackageDefinitionActivity.ACTIVITY_COPY)) { net.csu333.surrogate.common.Rule r = data.getParcelableExtra(\"result\"); mPackageRules.rules.add(r); mRuleAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7496/buggy-version/app.src.main.java.net.csu333.surrogate.frontend.PackageDefinitionActivity.java", "BodyUseAPI": [], "Fixed commit": "466f5686ee96da1cdcf0916211b8bb699b3de3fe", "Url": "https://api.github.com/repos/csu333/Surrogate", "Date": "2017-01-28T07:24:48Z"},
{"Line": "=>1118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldDeserializer != null) { com.alibaba.fastjson.util.FieldInfo fieldInfo = fieldDeserializer.fieldInfo; if (((fieldInfo.parserFeatures) & (Feature.DisableFieldSmartMatch.mask)) != 0) { return null; } java.lang.Class fieldClass = fieldInfo.fieldClass; if (is && ((fieldClass != (boolean.class)) && (fieldClass != (java.lang.Boolean.class)))) { fieldDeserializer = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5828/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.java", "BodyUseAPI": [], "Fixed commit": "528f695ed365f019b68fb11c97d9a57f7df74d9f", "Url": "https://api.github.com/repos/FlakyTestDetection/fastjson", "Date": "2017-10-21T13:34:09Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((addresses.size()) > 0) { return addresses.get(0); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2725/buggy-version/app.src.main.java.com.groceryfinder.android.groceryfinder.GroceryListFragment.java", "BodyUseAPI": ["java.util.List<android.location.Address>.get(int)"], "Fixed commit": "89f82461e8f1fcfd877c119502d874080dce86eb", "Url": "https://api.github.com/repos/GroceryStoreApp/GroceryFinder", "Date": "2017-05-17T17:45:52Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (task.getIntermediateTables().get().isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3508/buggy-version/embulk-output-jdbc.src.main.java.org.embulk.output.jdbc.AbstractJdbcOutputPlugin.java", "BodyUseAPI": [], "Fixed commit": "95475cc0bfc6908592bd457e7d53bda5ba83533e", "Url": "https://api.github.com/repos/embulk/embulk-output-jdbc", "Date": "2016-11-25T04:22:08Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Node.GivenName.equals(Node.ReferenceName)) && (Node.Type.IsFuncType())) { Node.ReferenceName = Node.Type.StringfySignature(Node.GivenName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1955/buggy-version/src.zen.parser.ZenSourceGenerator.java", "BodyUseAPI": ["Node.Type.StringfySignature(Node.GivenName)"], "Fixed commit": "7015315925b5e6818997eec8554f669f1d404bcc", "Url": "https://api.github.com/repos/sekiguchi-nagisa/libzen", "Date": "2014-01-17T08:11:01Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((name != null) && ((name.trim().length()) > 0)) { return com.thermaleagle.experiments.n21.service.N21Level.valueOf(name); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/9044/buggy-version/experiments.n21vitals.src.com.thermaleagle.experiments.n21.service.N21Level.java", "BodyUseAPI": ["com.thermaleagle.experiments.n21.service.N21Level.valueOf(java.lang.String)"], "Fixed commit": "3b2ca8ff6d3a42e550b600cc0fa959bf21c13e37", "Url": "https://api.github.com/repos/thermaleagle/experiments", "Date": "2014-08-13T00:32:08Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((this.archiveDocument) == null)) { if (!(this.archiveDocument.getId().equals(\"\"))) { getDocument().setArchiveDocument(this.archiveDocument); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/900/buggy-version/swing.ui.src.main.java.org.sola.clients.swing.ui.source.DocumentPanel.java", "BodyUseAPI": [], "Fixed commit": "9de31ddb7859b6dc4d692ea2fc773cac0ce6aff9", "Url": "https://api.github.com/repos/SOLA-FAO/clients", "Date": "2013-02-18T13:50:20Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameterValues(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((type.length) == 2) { request.setAttribute(\"gotCompliment\", \"compliment\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1913/buggy-version/Project.src.java.ccms.controller.processCase.java", "BodyUseAPI": [], "Fixed commit": "7d6eee7bf18f755fbaccc0ccc82ffb24b9ff214f", "Url": "https://api.github.com/repos/limtingzhi/CCMS", "Date": "2016-11-07T13:50:59Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (null != flds) { final int n = java.lang.Math.min(headerFlds.length, flds.length); if ((n > 0) || ((flds[0].trim().length()) > 0)) { for (int i = 0; i < n; ++i) { mp.put(headerFlds[i], com.winvector.util.HBurster.intern(flds[i], interner)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1984/buggy-version/src.com.winvector.util.HBurster.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)", "java.lang.String.trim()", "java.lang.Math.min(int,int)", "java.lang.String.length()", "com.winvector.util.HBurster.intern(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "5fc3ee462085c1124f079ea81060b18f06e95b6f", "Url": "https://api.github.com/repos/WinVector/SQLScrewdriver", "Date": "2012-10-13T22:15:01Z"},
{"Line": "=>754", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c instanceof com.kodemore.servlet.ScEncodedValueIF) track(((com.kodemore.servlet.ScEncodedValueIF) (c)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/393/buggy-version/java.source.com.kodemore.servlet.control.ScGrid.java", "BodyUseAPI": [], "Fixed commit": "c6fd1cc1638031858a15eab4dd6148e33cb8c626", "Url": "https://api.github.com/repos/accucode/paragon-server", "Date": "2013-08-07T00:30:24Z"},
{"Line": "=>1436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.wizards.datatransfer.ImportOperation.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(status.isOK())) throw new java.lang.reflect.InvocationTargetException(new org.eclipse.core.runtime.CoreException(status));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2658/buggy-version/bundles.org.eclipse.ui.ide.src.org.eclipse.ui.internal.wizards.datatransfer.WizardProjectsImportPage.java", "BodyUseAPI": [], "Fixed commit": "dfe61b2c79977df80c8208405770347d157b862d", "Url": "https://api.github.com/repos/Gamma32/eclipse.platform.ui", "Date": "2013-07-17T12:04:18Z"},
{"Line": "=>1374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.wizards.datatransfer.ImportOperation.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(status.isOK())) throw new java.lang.reflect.InvocationTargetException(new org.eclipse.core.runtime.CoreException(status));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2658/buggy-version/bundles.org.eclipse.ui.ide.src.org.eclipse.ui.internal.wizards.datatransfer.WizardProjectsImportPage.java", "BodyUseAPI": [], "Fixed commit": "dfe61b2c79977df80c8208405770347d157b862d", "Url": "https://api.github.com/repos/Gamma32/eclipse.platform.ui", "Date": "2013-07-17T12:04:18Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(character.isDead())) { scoreRenderer.score = (++(score)) / 10; world.moveLeft(pixelsPerFrame); collisionHandler.handlePossibleCollision(); character.update(); if ((world.getPosition()) < ((-(tileSize)) * (chunkWidth))) { world.incrementStartIndex(); world.setPosition(0); world.updateChunk(generator.generateChunk()); } if (hasFallenDown()) { character.setDead(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3686/buggy-version/core.src.com.grupptva.runnergame.game.model.GameLogic.java", "BodyUseAPI": ["com.grupptva.runnergame.game.model.gamecharacter.GameCharacter.update()", "com.grupptva.runnergame.game.model.gamecharacter.GameCharacter.setDead(boolean)"], "Fixed commit": "3062cb02970083d37c2c4afe0e2decb203f2ab26", "Url": "https://api.github.com/repos/Aoldo/GruppTv-Project", "Date": "2017-05-25T17:58:11Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nutz.lang.Mirror<?>.getGenericsTypes()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((ts != null) && ((ts.length) == 2)) { keyType = ts[0]; valueType = ts[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3061/buggy-version/src.org.nutz.mapl.impl.convert.ObjConvertImpl.java", "BodyUseAPI": [], "Fixed commit": "b59d675e5b177a13ae69737b59f6a15feb7f3ffe", "Url": "https://api.github.com/repos/FlakyTestDetection/nutz", "Date": "2017-10-13T06:05:12Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updateLastShot) lastShot = java.util.Optional.of(shot);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/678/buggy-version/src.main.java.com.shootoff.camera.DeduplicationProcessor.java", "BodyUseAPI": [], "Fixed commit": "cff74375983390162f1220bab257062293c1c423", "Url": "https://api.github.com/repos/phrack/ShootOFF", "Date": "2016-08-16T13:01:06Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(scategory.contentEquals(\"\"))) { savedInstanceState.putInt(com.shriyansh.foodbasket.CreateFoodFragment.FOOD_CATEGORY, java.lang.Integer.parseInt(scategory)); }else { savedInstanceState.putInt(com.shriyansh.foodbasket.CreateFoodFragment.FOOD_CATEGORY, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7577/buggy-version/FoodBasket.app.src.main.java.com.shriyansh.foodbasket.CreateFoodFragment.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "android.os.Bundle.putInt(java.lang.String,int)"], "Fixed commit": "5d2d8f6be6d6aaa64d579d4e75cb18b9715c5a52", "Url": "https://api.github.com/repos/shriyanshgautam/androidfundamentalfinalproject", "Date": "2015-03-16T10:09:44Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sspiciness.contentEquals(\"\"))) { savedInstanceState.putInt(com.shriyansh.foodbasket.CreateFoodFragment.FOOD_SPICINESS, java.lang.Integer.parseInt(sspiciness)); }else { savedInstanceState.putInt(com.shriyansh.foodbasket.CreateFoodFragment.FOOD_SPICINESS, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7577/buggy-version/FoodBasket.app.src.main.java.com.shriyansh.foodbasket.CreateFoodFragment.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "android.os.Bundle.putInt(java.lang.String,int)"], "Fixed commit": "5d2d8f6be6d6aaa64d579d4e75cb18b9715c5a52", "Url": "https://api.github.com/repos/shriyanshgautam/androidfundamentalfinalproject", "Date": "2015-03-16T10:09:44Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(basePrice.getText().toString().contentEquals(\"\"))) { savedInstanceState.putDouble(com.shriyansh.foodbasket.CreateFoodFragment.FOOD_PRICE, java.lang.Double.parseDouble(basePrice.getText().toString())); }else { savedInstanceState.putDouble(com.shriyansh.foodbasket.CreateFoodFragment.FOOD_PRICE, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7577/buggy-version/FoodBasket.app.src.main.java.com.shriyansh.foodbasket.CreateFoodFragment.java", "BodyUseAPI": ["basePrice.getText().toString()", "android.widget.EditText.getText()", "android.os.Bundle.putDouble(java.lang.String,double)", "java.lang.Double.parseDouble(basePrice.getText().toString())"], "Fixed commit": "5d2d8f6be6d6aaa64d579d4e75cb18b9715c5a52", "Url": "https://api.github.com/repos/shriyanshgautam/androidfundamentalfinalproject", "Date": "2015-03-16T10:09:44Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(serves.getText().toString().contentEquals(\"\"))) { savedInstanceState.putInt(com.shriyansh.foodbasket.CreateFoodFragment.FOOD_SERVES, java.lang.Integer.parseInt(serves.getText().toString())); }else { savedInstanceState.putInt(com.shriyansh.foodbasket.CreateFoodFragment.FOOD_SERVES, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7577/buggy-version/FoodBasket.app.src.main.java.com.shriyansh.foodbasket.CreateFoodFragment.java", "BodyUseAPI": ["serves.getText().toString()", "android.widget.EditText.getText()", "android.os.Bundle.putInt(java.lang.String,int)", "java.lang.Integer.parseInt(serves.getText().toString())"], "Fixed commit": "5d2d8f6be6d6aaa64d579d4e75cb18b9715c5a52", "Url": "https://api.github.com/repos/shriyanshgautam/androidfundamentalfinalproject", "Date": "2015-03-16T10:09:44Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sdkInt <= 15) { mSettings = super.getSettings(); return mSettings; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/549/buggy-version/browser.src.main.java.com.liskovsoft.browser.other.HeadersBrowserWebView.java", "BodyUseAPI": [], "Fixed commit": "e39e5701f97fbf7bfaec28a8a0813f1d74a6f596", "Url": "https://api.github.com/repos/yuliskov/SmartYouTubeTV", "Date": "2017-01-25T07:26:58Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((BlockManager.dropDownFlag) == 0) { for (i = k; i > (k - 3); i--) { board[(i + 1)][j] = board[i][j]; } board[(k - 2)][j] = '-'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4258/buggy-version/src.BlockManager.java", "BodyUseAPI": [], "Fixed commit": "659718be7a8454006a8d09fae7ee1219952f4b96", "Url": "https://api.github.com/repos/miservilla/Columns1", "Date": "2017-05-02T20:51:19Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isNotEmpty(technology.getFunctionalFrameworks())) { techDAO.setFunctionalFrameworks(getFrameworkIds(technology.getFunctionalFrameworks())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5534/buggy-version/phresco-service-impl.src.main.java.com.photon.phresco.service.converters.TechnologyConverter.java", "BodyUseAPI": ["com.photon.phresco.commons.model.Technology.getFunctionalFrameworks()", "com.photon.phresco.service.dao.TechnologyDAO.setFunctionalFrameworks(java.util.List<java.lang.String>)", "com.photon.phresco.service.converters.TechnologyConverter.getFrameworkIds(technology.getFunctionalFrameworks())"], "Fixed commit": "31e9c599ed00d2d94a05ba2cfd6a1f3f82fb33ce", "Url": "https://api.github.com/repos/photon-infotech/service", "Date": "2013-05-22T11:27:01Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((editText) != null) context = editText.getContext(); else context = textInputLayout.getContext();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/9034/buggy-version/validator.src.main.java.com.fedorov.andrii.validator.SimpleValidator.java", "BodyUseAPI": [], "Fixed commit": "105005bcce2d6eb6d2648c5d5e97568b9fd7a5bc", "Url": "https://api.github.com/repos/fedorov-andrii/homelibrary", "Date": "2016-10-30T17:25:00Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mNation.census.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((detailedRank.worldRank) > 0) { censusContent.append(java.lang.String.format(java.util.Locale.US, getString(R.string.card_overview_other_census_world), com.lloydtorres.stately.helpers.SparkleHelper.getPrettifiedNumber(detailedRank.worldRank), com.lloydtorres.stately.helpers.SparkleHelper.getPrettifiedNumber(detailedRank.worldRankPercent))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6676/buggy-version/Stately.app.src.main.java.com.lloydtorres.stately.nation.OverviewSubFragment.java", "BodyUseAPI": ["java.lang.String.format(java.util.Locale,getString(R.string.card_overview_other_census_world),com.lloydtorres.stately.helpers.SparkleHelper.getPrettifiedNumber(detailedRank.worldRank),com.lloydtorres.stately.helpers.SparkleHelper.getPrettifiedNumber(detailedRank.worldRankPercent))", "android.widget.TextView.append(java.lang.String)", "com.lloydtorres.stately.helpers.SparkleHelper.getPrettifiedNumber(detailedRank.worldRankPercent)", "com.lloydtorres.stately.helpers.SparkleHelper.getPrettifiedNumber(detailedRank.worldRank)"], "Fixed commit": "c37c8ea1fba975dd052ddc1bc9ff839e608376e8", "Url": "https://api.github.com/repos/lloydtorres/stately", "Date": "2016-04-16T04:18:14Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((censusData.worldRankPercent) <= 0) { value.setText(context.getString(R.string.census_blank)); cardHolder.setCardBackgroundColor(android.support.v4.content.ContextCompat.getColor(context, R.color.colorSecondaryText)); }else { value.setText(java.lang.String.format(context.getString(R.string.census_percent), com.lloydtorres.stately.helpers.SparkleHelper.getPrettifiedNumber(censusData.worldRankPercent))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6676/buggy-version/Stately.app.src.main.java.com.lloydtorres.stately.census.CensusRecyclerAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "java.lang.String.format(context.getString(R.string.census_percent),com.lloydtorres.stately.helpers.SparkleHelper.getPrettifiedNumber(censusData.worldRankPercent))", "com.lloydtorres.stately.helpers.SparkleHelper.getPrettifiedNumber(censusData.worldRankPercent)"], "Fixed commit": "c37c8ea1fba975dd052ddc1bc9ff839e608376e8", "Url": "https://api.github.com/repos/lloydtorres/stately", "Date": "2016-04-16T04:18:14Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((censusData.worldRank) <= 0) { value.setText(context.getString(R.string.census_blank)); cardHolder.setCardBackgroundColor(android.support.v4.content.ContextCompat.getColor(context, R.color.colorSecondaryText)); }else { value.setText(java.lang.String.format(context.getString(R.string.census_rank), com.lloydtorres.stately.helpers.SparkleHelper.getPrettifiedNumber(censusData.worldRank))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6676/buggy-version/Stately.app.src.main.java.com.lloydtorres.stately.census.CensusRecyclerAdapter.java", "BodyUseAPI": ["java.lang.String.format(context.getString(R.string.census_rank),com.lloydtorres.stately.helpers.SparkleHelper.getPrettifiedNumber(censusData.worldRank))", "com.lloydtorres.stately.helpers.SparkleHelper.getPrettifiedNumber(censusData.worldRank)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "c37c8ea1fba975dd052ddc1bc9ff839e608376e8", "Url": "https://api.github.com/repos/lloydtorres/stately", "Date": "2016-04-16T04:18:14Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["FMLDeobfuscatingRemapper.INSTANCE.mapFieldName(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((opcode == (GETFIELD)) && ((srgName.equals(ak.potionextension.asm.PotionEffectTransformer.CustomMethodVisitor1.TARGET_FIELD_DEV)) || (srgName.equals(ak.potionextension.asm.PotionEffectTransformer.CustomMethodVisitor1.TARGET_FIELD)))) && (desc.equals(\"I\"))) && (!(check))) { check = true; PotionExtensionCorePlugin.LOGGER.info(\"onUpdate:change id in [0 - 255]\"); super.visitIntInsn(ak.potionextension.asm.SIPUSH, 256); super.visitInsn(ak.potionextension.asm.IADD); super.visitIntInsn(ak.potionextension.asm.SIPUSH, 256); super.visitInsn(ak.potionextension.asm.IREM); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2964/buggy-version/src.main.java.ak.potionextension.asm.PotionEffectTransformer.java", "BodyUseAPI": [], "Fixed commit": "729ec361cab0cbf69686b87234ed664cd8e3f4e3", "Url": "https://api.github.com/repos/aksource/PotionExtension", "Date": "2015-03-06T15:07:43Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.habzy.image.models.ViewParams.ShownStyle.Pick_Single) == (mParams.getShownStyle())) { mModelsList.get(mCurrentItem).isSeleted = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5906/buggy-version/source.src.com.habzy.image.viewpager.wrap.ViewPagerDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "7a468eb799fd8c5a682882a70668bee7e7d7190c", "Url": "https://api.github.com/repos/habzy/GridImagePicker", "Date": "2014-10-22T09:51:17Z"},
{"Line": "=>963", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((ctx != null) && ((ctx.getClient()) != null)) { ctx.getClient().onMetaInfosReceived(infos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4079/buggy-version/spark.src.main.java.org.apache.zeppelin.spark.SparkInterpreter.java", "BodyUseAPI": ["org.apache.zeppelin.interpreter.InterpreterContext.getClient()", "ctx.getClient().onMetaInfosReceived(java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "8f08385862ad6e45c37122ca4f25499e6e8635a5", "Url": "https://api.github.com/repos/karuppayya/zeppelin", "Date": "2016-11-09T17:23:09Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkPermissions(request, response, roles))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6836/buggy-version/src.main.java.com.gmail.at.ivanehreshi.epam.touragency.security.SecurityFilter.java", "BodyUseAPI": [], "Fixed commit": "c15e0a3b5744454a1441f0d969236016dbc26d58", "Url": "https://api.github.com/repos/IvanEh/tour-agency", "Date": "2017-01-25T16:07:26Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rs.next()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5629/buggy-version/Bank.src.bank.dao.ClientDao.java", "BodyUseAPI": [], "Fixed commit": "bcd96e404a3568845ed0909109c7b2be960d674d", "Url": "https://api.github.com/repos/l0huan08/bank", "Date": "2014-09-19T18:39:16Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((searchBar.getText().toString().length()) > 0) { cancelButton.setImageResource(R.drawable.cancel); java.lang.String acronymResult = dataMap.get(searchBar.getText().toString().toUpperCase()); if ((acronymResult != null) && (!(acronymResult.isEmpty()))) { android.widget.Toast.makeText(getApplicationContext(), (\"\" + acronymResult), Toast.LENGTH_LONG).show(); } }else { cancelButton.setImageResource(R.drawable.trasnparent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5485/buggy-version/src.app.programming.acronym.MainActivity.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(searchBar.getText().toString().toUpperCase())", "searchBar.getText().toString()", "searchBar.getText().toString().toUpperCase()", "android.widget.EditText.getText()"], "Fixed commit": "6899b80d68f411519fdd3510a67bb6f01b98338d", "Url": "https://api.github.com/repos/alexanderpadin/acronym-database", "Date": "2014-08-10T20:46:54Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tmp.size()) != 0) { java.lang.System.out.print(tmp.get(randLoc).getHP()); t.attackUnit(tmp.get(randLoc)); java.lang.System.out.print(((\", \" + (tmp.get(randLoc).getHP())) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5585/buggy-version/src.com.voracious.dragons.common.GameState.java", "BodyUseAPI": ["java.io.PrintStream.print(tmp.get(randLoc).getHP())", "java.util.ArrayList<com.voracious.dragons.client.units.Unit>.get(int)", "java.util.ArrayList<com.voracious.dragons.client.units.Unit>.get(int)", "java.util.ArrayList<com.voracious.dragons.client.units.Unit>.get(int)", "com.voracious.dragons.client.towers.Tower.attackUnit(tmp.get(randLoc))", "java.io.PrintStream.print(((\", \" + (tmp.get(randLoc).getHP())) + \"\\n\"))", "tmp.get(randLoc).getHP()", "tmp.get(randLoc).getHP()"], "Fixed commit": "e3c5915a634a55bcf4bfccabc8dfa50cd9ff1eb3", "Url": "https://api.github.com/repos/VoraciousSoftworks/Here-There-Be-Dragons", "Date": "2013-04-30T00:08:46Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((obss.length) > 9) { if ((obss[9]) != null) { if (obss[9].toString().equals(\"1\")) { patient.setDead(true); }else if (obss[9].toString().equals(\"0\")) { patient.setDead(false); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4439/buggy-version/api.src.main.java.org.openmrs.module.hospitalcore.db.hibernate.HibernateHospitalCoreDAO.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.Object.toString()", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "6c260747b96f3faaa4b5d8136159817393870f3a", "Url": "https://api.github.com/repos/hispindia/hospitalcore", "Date": "2014-04-16T06:25:58Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUser()) != null) { user = getUser().getName(); }else { user = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8823/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.document.ODatabaseDocumentEmbedded.java", "BodyUseAPI": [], "Fixed commit": "a6c108c752f5857bc4e630b92e750d16c5ddba56", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-10-03T15:23:04Z"},
{"Line": "=>2817", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fileTab.getSelectedIndex()) >= 0) { try { org.fife.ui.rtextarea.RTextScrollPane t = ((org.fife.ui.rtextarea.RTextScrollPane) (fileTab.getComponentAt(fileTab.getSelectedIndex()))); org.fife.ui.rsyntaxtextarea.RSyntaxTextArea selectedArea = ((org.fife.ui.rsyntaxtextarea.RSyntaxTextArea) (t.getTextArea())); selectedArea.print(); } catch (java.awt.print.PrinterException ex) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3068/buggy-version/DomainMathIDE.src.org.domainmath.gui.MainFrame.java", "BodyUseAPI": ["javax.swing.JTabbedPane.getSelectedIndex()", "javax.swing.JTabbedPane.getComponentAt(int)"], "Fixed commit": "79639b7171bf97da4a3bff880d2790cb0473c742", "Url": "https://api.github.com/repos/vinukn/domainmath-ide", "Date": "2013-05-22T12:16:18Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (len <= 0) { }else if (log == null) { log = new nu.xom.Element(\"loggedTime\"); nu.xom.Element instance = new nu.xom.Element(\"log\"); instance.addAttribute(new nu.xom.Attribute(\"date\", date)); instance.addAttribute(new nu.xom.Attribute(\"len\", java.lang.Long.toString(len))); log.appendChild(instance); _element.appendChild(log); }else { nu.xom.Element instance = new nu.xom.Element(\"log\"); instance.addAttribute(new nu.xom.Attribute(\"date\", date)); instance.addAttribute(new nu.xom.Attribute(\"len\", java.lang.Long.toString(len))); log.appendChild(instance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8374/buggy-version/src.net.sf.memoranda.TaskImpl.java", "BodyUseAPI": ["java.lang.Long.toString(long)", "nu.xom.Element.addAttribute(nu.xom.Attribute)", "java.lang.Long.toString(long)", "nu.xom.Element.addAttribute(nu.xom.Attribute)"], "Fixed commit": "ecbfd247fc01c005c84b270b88c1a4aed068285f", "Url": "https://api.github.com/repos/cst316/spring16project-Ada", "Date": "2016-03-29T18:37:59Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { instruction.replace(\"\u8d77\u70b9\", \"\u60a8\u5f53\u524d\u7684\u4f4d\u7f6e\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7510/buggy-version/src.main.java.net.chat.utils.BaiduAPI.java", "BodyUseAPI": [], "Fixed commit": "787ec238ee9ced3a82e8a65a921145dabf90ead0", "Url": "https://api.github.com/repos/linking12/WeiChat", "Date": "2013-11-18T14:34:01Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((seg.split.size()) != 0) { seg = seg.split.values().iterator().next(); position = seg.getTrackPosition((-(position.remaining()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1738/buggy-version/sim.src.map.intersection.Segment.java", "BodyUseAPI": ["java.util.Collection<map.intersection.Segment>.iterator()", "java.util.Iterator<map.intersection.Segment>.next()", "java.util.HashMap<java.lang.Integer, map.intersection.Segment>.values()"], "Fixed commit": "32401781aa53507b35b3c1bf145784f6aaa566f4", "Url": "https://api.github.com/repos/AndreJSON/KEX", "Date": "2016-04-13T14:18:24Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["m.getProperties().asMap()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (props.containsKey(\"FORMAT_EXP_PARSED\")) { formatString = ((java.lang.String) (m.getPropertyValue(props.get(\"FORMAT_EXP_PARSED\")))); }else if (props.containsKey(\"FORMAT_EXP\")) { formatString = ((java.lang.String) (m.getPropertyValue(props.get(\"FORMAT_EXP\")))); }else if (props.containsKey(\"FORMAT\")) { formatString = ((java.lang.String) (m.getPropertyValue(props.get(\"FORMAT\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8282/buggy-version/saiku-core.saiku-service.src.main.java.org.saiku.service.olap.totals.TotalsListsBuilder.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.olap4j.metadata.Property>.get(java.lang.String)", "org.olap4j.metadata.Measure.getPropertyValue(props.get(\"FORMAT_EXP_PARSED\"))", "org.olap4j.metadata.Measure.getPropertyValue(props.get(\"FORMAT_EXP\"))", "org.olap4j.metadata.Measure.getPropertyValue(props.get(\"FORMAT\"))", "java.util.Map<java.lang.String, org.olap4j.metadata.Property>.containsKey(java.lang.String)", "java.util.Map<java.lang.String, org.olap4j.metadata.Property>.get(java.lang.String)", "java.util.Map<java.lang.String, org.olap4j.metadata.Property>.containsKey(java.lang.String)", "java.util.Map<java.lang.String, org.olap4j.metadata.Property>.get(java.lang.String)"], "Fixed commit": "4fd8e67066ee0b600bc83741699fa336994563c3", "Url": "https://api.github.com/repos/pstoellberger/saiku", "Date": "2014-05-08T18:42:32Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.osmand.util.Algorithms.isEmpty(getName()))) { return lang; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5757/buggy-version/OsmAnd-java.src.net.osmand.data.Amenity.java", "BodyUseAPI": [], "Fixed commit": "ab8140aacfa39f9ee9dddc051ce0732c07f6a75d", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2015-06-12T20:31:02Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (me.xephore.virustotal2bind.packets.IPAddressPacket.isIp(a)) { bind += ((((\"zone \\\"\" + a) + \"\\\" {\\n\") + \" type master;\\n\") + \" file \\\"/etc/bind/blocked.db\\\";\\n\") + \"};\\n\"; }else { java.lang.System.out.println((\"WARNING: unknown url or regex could not determine what this is!: \" + a)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1409/buggy-version/src.me.xephore.virustotal2bind.packets.PacketResolutionDecoder.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "81c75d9ad6f5825db7004806d9856d3401f12764", "Url": "https://api.github.com/repos/xize/VirusTotal2Bind", "Date": "2015-07-12T12:46:05Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node instanceof org.apache.flex.compiler.tree.as.INonResolvingIdentifierNode) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1788/buggy-version/src.main.java.randori.compiler.internal.utils.ExpressionUtils.java", "BodyUseAPI": [], "Fixed commit": "bf353c8f10118137e09be7d17b32affef891cf20", "Url": "https://api.github.com/repos/RandoriAS/randori-compiler", "Date": "2013-04-12T18:53:35Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (0 == (com.zion.htf.adapter.LineUpPagerAdapter.stages.size())) { org.michenux.android.db.sqlite.SQLiteDatabaseHelper dbHelper = com.zion.htf.Application.getDbHelper(); android.database.Cursor cursor = dbHelper.getReadableDatabase().rawQuery(\"SELECT * FROM lst__stages;\", null); while (cursor.moveToNext()) { com.zion.htf.adapter.LineUpPagerAdapter.stages.add(cursor.getString(0)); } cursor.close(); dbHelper.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2954/buggy-version/src.com.zion.htf.adapter.LineUpPagerAdapter.java", "BodyUseAPI": [], "Fixed commit": "2f034e2d90245bfef2f981ab21e8cb10f4349603", "Url": "https://api.github.com/repos/sbooob/Hadra-Trance-Festival", "Date": "2013-08-15T23:28:17Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(parser.isComplete())) { buffer.compact(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8666/buggy-version/api.src.main.java.org.xnio.http.HttpUpgrade.java", "BodyUseAPI": [], "Fixed commit": "34eccfbc14d0c13b8bf40cffb351ff98e5a06b6d", "Url": "https://api.github.com/repos/stuartwdouglas/xnio", "Date": "2014-09-15T04:14:35Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.configClass.equals(definedIn)) { loadedFields.add(fieldName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8258/buggy-version/uv-dpu-api-helpers.src.main.java.eu.unifiedviews.helpers.dpu.config.ConfigWrap.java", "BodyUseAPI": [], "Fixed commit": "48eb2b9c36c52e132c30e07b6716e6d9d7bd3254", "Url": "https://api.github.com/repos/UnifiedViews/Plugin-DevEnv", "Date": "2014-08-12T11:29:09Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((code.type.receiver()) != null) { environment.pop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6227/buggy-version/src.wyil.transforms.ConstantPropagation.java", "BodyUseAPI": [], "Fixed commit": "94001de7cd02cdc49e14481d628ba452a0db428c", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-07-29T05:52:45Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!match) { register.declaredGears.add(spec); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5764/buggy-version/AndroidGears.src.Utilities.GearSpecRegistrar.java", "BodyUseAPI": [], "Fixed commit": "34cc007412caa47230974e0f9d4b94be8e029e4e", "Url": "https://api.github.com/repos/AndroidGears/Plugin", "Date": "2014-04-08T05:50:53Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (options != null) { if (options.matches(flavor.product)) { products.add(flavor.product); } }else { products.add(flavor.product); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4117/buggy-version/src.main.java.org.dasein.cloud.openstack.nova.os.compute.NovaServer.java", "BodyUseAPI": ["org.dasein.cloud.compute.VirtualMachineProductFilterOptions.matches(org.dasein.cloud.compute.VirtualMachineProduct)"], "Fixed commit": "7007b5f7460f39afbbeeb68283ae2f79240738e6", "Url": "https://api.github.com/repos/daniellemayne/dasein-cloud-openstack", "Date": "2014-08-13T10:14:05Z"},
{"Line": "=>765", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) instanceof nokogiri.XmlDocument) { org.w3c.dom.Node node = ((org.w3c.dom.Document) (this.node)).getDocumentElement(); if (node == null) { textContent = \"\"; }else { textContent = ((org.w3c.dom.Document) (this.node)).getDocumentElement().getTextContent().trim(); } }else { textContent = this.node.getTextContent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5559/buggy-version/ext.java.nokogiri.XmlNode.java", "BodyUseAPI": [], "Fixed commit": "96f81d324522d05bd5e17d0e77bda5a6c15bda8e", "Url": "https://api.github.com/repos/libc/nokogiri", "Date": "2012-06-12T14:02:07Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((java.lang.reflect.Array.get(value, index)) == null) { printInspectedName(java.lang.reflect.Array.get(value, index), ((((fields[i].getName()) + \"[\") + (java.lang.Integer.toString(index))) + \"] = \")); }else { printInspectedName(java.lang.reflect.Array.get(value, index).hashCode(), ((((fields[i].getName()) + \"[\") + (java.lang.Integer.toString(index))) + \"] address (HashCode) \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6764/buggy-version/Inspector.java", "BodyUseAPI": ["Inspector.printInspectedName(int,java.lang.String)", "java.lang.Integer.toString(int)", "java.lang.Object.hashCode()", "java.lang.reflect.Array.get(java.lang.Object,int)", "java.lang.Integer.toString(int)", "Inspector.printInspectedName(java.lang.Object,java.lang.String)", "java.lang.reflect.Array.get(java.lang.Object,int)"], "Fixed commit": "4e7e8b17dcca914658c41d22411438e9e2ae3b56", "Url": "https://api.github.com/repos/rsbarhey/CPSC501-A2", "Date": "2015-10-21T18:05:21Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fd.isEnum()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5243/buggy-version/atom-codegen.src.main.java.oo.atom.codegen.bytebuddy.matchers.atomspec.AllFieldsArePrivateFinal.java", "BodyUseAPI": [], "Fixed commit": "a7e9f8ae6126d2f9e7699caac2130c038c59c23b", "Url": "https://api.github.com/repos/skapral/oo-atom", "Date": "2017-07-19T05:35:46Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Optional<io.github.retz.protocol.data.Job>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((job.state()) == Job.JobState.FINISHED) || ((job.state()) == Job.JobState.KILLED)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6817/buggy-version/retz-server.src.main.java.io.github.retz.web.JobRequestHandler.java", "BodyUseAPI": [], "Fixed commit": "0f8dcf5fc5e24bab26bf4aed566ee10118e5030b", "Url": "https://api.github.com/repos/ueshin/retz", "Date": "2017-02-20T08:04:14Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.objectMapper.canSerialize(clazz, causeRef)) && (canWrite(mediaType))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4997/buggy-version/web.src.main.java.top.jhechem.web.converter.JsonMessageConverter.java", "BodyUseAPI": [], "Fixed commit": "c5a07e042dfeb21466e39b48dd23c21ccf49fd39", "Url": "https://api.github.com/repos/devonkey/jhechem", "Date": "2017-08-05T17:48:57Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(top.jhechem.web.converter.JsonMessageConverter.jackson23Available)) || (!(logger.isWarnEnabled()))) { return (this.objectMapper.canSerialize(clazz)) && (canWrite(mediaType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4997/buggy-version/web.src.main.java.top.jhechem.web.converter.JsonMessageConverter.java", "BodyUseAPI": [], "Fixed commit": "c5a07e042dfeb21466e39b48dd23c21ccf49fd39", "Url": "https://api.github.com/repos/devonkey/jhechem", "Date": "2017-08-05T17:48:57Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((20 * (java.lang.Math.log10(((getAmplitudeEMA()) / ampl)))) > 0) values.add((20 * (java.lang.Math.log10(((getAmplitudeEMA()) / ampl)))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2750/buggy-version/app.src.main.java.com.mapmyindia.smartcity.Sound.java", "BodyUseAPI": ["java.lang.Math.log10(double)", "java.util.ArrayList<java.lang.Double>.add(double)"], "Fixed commit": "e5b2e0000ce208ac8c21b50681789084d90f0558", "Url": "https://api.github.com/repos/faisal3325/Kaizen", "Date": "2016-12-11T17:03:13Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (containsKey(k)) { result.put(k, get(k)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7490/buggy-version/src.main.java.nl.vpro.magnolia.jsr107.AdaptedCache.java", "BodyUseAPI": ["nl.vpro.magnolia.jsr107.AdaptedCache<K, V>.get(K)", "java.util.Map<K, V>.put(K,V)"], "Fixed commit": "72803f98beaef4b058fa3fa8b8c806ba60ed6613", "Url": "https://api.github.com/repos/vpro/jsr107-magnolia", "Date": "2016-08-05T10:02:27Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((version) == null) version = com.orientechnologies.orient.core.version.OVersionFactory.instance().createUntrackedVersion();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1158/buggy-version/server.src.main.java.com.orientechnologies.orient.server.task.ODeleteRecordDistributedTask.java", "BodyUseAPI": [], "Fixed commit": "3b52d81e3880e4f83e94c1d1bbaf8e90c0ac6052", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2013-02-08T10:20:32Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((version) == null) version = com.orientechnologies.orient.core.version.OVersionFactory.instance().createUntrackedVersion();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1158/buggy-version/server.src.main.java.com.orientechnologies.orient.server.task.ODeleteRecordDistributedTask.java", "BodyUseAPI": [], "Fixed commit": "3b52d81e3880e4f83e94c1d1bbaf8e90c0ac6052", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2013-02-08T10:20:32Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s1.distanceTo(s2)) <= ((double) (distance))) { if (getTimeDistance(s1.time, s2.time, timeresolution, interval)) { joinResult.set((((r.toText(new org.apache.hadoop.io.Text()).toString()) + \"\\t\") + (s.toText(new org.apache.hadoop.io.Text()).toString()))); output.collect(cellId, joinResult); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3305/buggy-version/src.main.java.edu.umn.cs.sthadoop.operations.STJoin.java", "BodyUseAPI": ["edu.umn.cs.sthadoop.operations.STJoin.STJoinReduce.1.getTimeDistance(s1.time,s2.time,java.lang.String,int)"], "Fixed commit": "1dc3fd17c5b8647cb39d43cbdca101c89c61c226", "Url": "https://api.github.com/repos/lmarabi/st-hadoop", "Date": "2017-04-09T21:34:48Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (value != null) { if (value instanceof java.lang.String) { java.lang.String text = ((java.lang.String) (value)); entityBuilder.addTextBody(key, text, org.apache.http.entity.ContentType.create(\"*/*\", charset)); }else if (value instanceof java.io.File) { java.io.File file = ((java.io.File) (value)); entityBuilder.addBinaryBody(key, file); }else { java.lang.String canonicalName = value.getClass().getCanonicalName(); throw new java.lang.UnsupportedOperationException((((\"No Handler found for \" + canonicalName) + \". Only String or File is accepted, \") + \"because http parameters knows no other types.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4255/buggy-version/src.main.java.net.sourceforge.jwbf.core.actions.HttpActionClient.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getCanonicalName()", "java.lang.Object.getClass()"], "Fixed commit": "f51831f2eee288e9642d90d492120576a6df2511", "Url": "https://api.github.com/repos/eldur/jwbf", "Date": "2015-01-05T12:05:07Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (table.getElementClass().equals(org.gephi.graph.api.Node.class)) { mapHelper.nodeIndexToIds.put(index, id); }else { mapHelper.edgeIndexToIds.put(index, id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6466/buggy-version/modules.GraphAPI.src.main.java.org.gephi.graph.LegacyAttributePersistenceProvider.java", "BodyUseAPI": [], "Fixed commit": "0b9867cf37288f83d19be83e72c78e75ea20db58", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2016-01-27T21:40:03Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((targets.length()) > 2) targets = targets.substring(2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5858/buggy-version/fihgu.teleport.elements.WarpPoint.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "e006b2c9f8d51db9efddb98672c63319dfd2d881", "Url": "https://api.github.com/repos/emris/FihgusMods", "Date": "2014-03-05T11:25:17Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(twitterManager.searchTweetsNext())) { android.widget.Toast.makeText(this, \"\u753b\u50cf\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8738/buggy-version/app.src.main.java.com.elzup.pictter.pictter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "015f54a0f70cf9865036d1142bff7c0064c99e5d", "Url": "https://api.github.com/repos/gachapdev/pictter", "Date": "2015-05-23T10:18:54Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextQuery) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8738/buggy-version/app.src.main.java.com.elzup.pictter.pictter.TwitterManager.java", "BodyUseAPI": [], "Fixed commit": "015f54a0f70cf9865036d1142bff7c0064c99e5d", "Url": "https://api.github.com/repos/gachapdev/pictter", "Date": "2015-05-23T10:18:54Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (basePath != null) { basePath.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8321/buggy-version/src.main.java.io.mooxmirror.bench.util.UnzipUtil.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "8739d1cf4529b66af1545ea004364d3529e26c9e", "Url": "https://api.github.com/repos/lnsp/bench-server", "Date": "2016-08-14T22:14:55Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.zip.ZipInputStream.getNextEntry()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (entry.isDirectory()) { path.mkdir(); }else { extractFile(zipIn, filePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8321/buggy-version/src.main.java.io.mooxmirror.bench.util.UnzipUtil.java", "BodyUseAPI": [], "Fixed commit": "8739d1cf4529b66af1545ea004364d3529e26c9e", "Url": "https://api.github.com/repos/lnsp/bench-server", "Date": "2016-08-14T22:14:55Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((java.lang.Integer.valueOf(dccey.getText().toString())) == 0) && ((java.lang.Integer.valueOf(dccem.getText().toString())) == 0)) && ((java.lang.Integer.valueOf(dcced.getText().toString())) == 0)) { android.widget.Toast.makeText(this, \"ERROR(Invalid): Age\", Toast.LENGTH_SHORT).show(); dccey.setError(\"This data is invalid! \"); android.util.Log.i(edu.aku.hassannaqvi.dss_census.activities.SectionCActivity.TAG, \"dccey: This data is invalid!\"); return false; }else { dccey.setError(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7253/buggy-version/app.src.main.java.edu.aku.hassannaqvi.dss_census.activities.SectionCActivity.java", "BodyUseAPI": ["android.widget.EditText.setError(java.lang.String)", "android.widget.EditText.setError(<nulltype>)"], "Fixed commit": "7b3d006d8ba6bb5c4472598a65ec6d627064e485", "Url": "https://api.github.com/repos/shznaqvi/DSS-Census", "Date": "2017-11-03T12:36:52Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((expr.length) == 4) { final byte[] s = checkStr(expr[3], ctx); path = ((s.length) > 0) ? concat(s, token(\"/\")) : s; }else { path = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5733/buggy-version/src.main.java.org.basex.query.func.FNDb.java", "BodyUseAPI": [], "Fixed commit": "72c4e9767e4c0cd5b9b952b0ab1eadf7f253b7b9", "Url": "https://api.github.com/repos/dimitarp/basex", "Date": "2011-06-30T13:02:10Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((places.size()) != 0) { mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(com.goodenoughapps.rally.Util.getBounds(places), 128)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5205/buggy-version/app.src.main.java.com.goodenoughapps.rally.MainActivity.java", "BodyUseAPI": ["com.goodenoughapps.rally.Util.getBounds(java.util.List<com.google.android.gms.location.places.Place>)", "com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(com.goodenoughapps.rally.Util.getBounds(places),int)", "com.google.android.gms.maps.GoogleMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(com.goodenoughapps.rally.Util.getBounds(places), 128))"], "Fixed commit": "2e840c35c78928d6c245cd4e8fc458acc6f25610", "Url": "https://api.github.com/repos/GoodEnoughSoftware/Rally", "Date": "2017-01-02T21:57:21Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((error == null) || ((error.length()) == 0)) { mTextInputLayout.setErrorEnabled(false); }else { mTextInputLayout.setErrorEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5927/buggy-version/phone-field.src.main.java.com.lamudi.phonefield.PhoneInputLayout.java", "BodyUseAPI": [], "Fixed commit": "1237aabea77f5ec7083966279ebb788bd8a58d74", "Url": "https://api.github.com/repos/lamudi-gmbh/android-phone-field", "Date": "2016-05-13T14:09:04Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Event.Module.NWScript.getItemInSlot(InventorySlot.LEFTHAND,Event.Module.NWObject)", "Event.Module.NWScript.getPCItemLastEquipped()", "Event.Module.NWScript.getItemInSlot(InventorySlot.RIGHTHAND,Event.Module.NWObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((oItem != rightHand) && (oItem != leftHand)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1926/buggy-version/src.Event.Module.OnPlayerEquipItem.java", "BodyUseAPI": [], "Fixed commit": "4f4ec4739893a91bb50e3628a90ad389e8cbc93c", "Url": "https://api.github.com/repos/zunath/CyberpunkZombieSurvival_JVM", "Date": "2017-01-13T14:35:51Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((variableFigure) != null) { variableFigure.setBorder(new org.talend.designer.core.ui.editor.connections.LineBorder(org.eclipse.draw2d.ColorConstants.darkGray, ((org.eclipse.swt.SWT.LEFT) | (org.eclipse.swt.SWT.RIGHT)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8539/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.editor.connections.ConnectionTraceFigure.java", "BodyUseAPI": [], "Fixed commit": "2b714fb92446f61b912d10d0ca83910da669101d", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2014-06-26T21:23:12Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((variableFigure) != null) { variableFigure.setBackgroundColor(ColorConstants.white); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8539/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.editor.connections.ConnectionTraceFigure.java", "BodyUseAPI": [], "Fixed commit": "2b714fb92446f61b912d10d0ca83910da669101d", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2014-06-26T21:23:12Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((variableFigure) != null) { variableFigure.setBackgroundColor(org.talend.designer.core.ui.editor.connections.ConnectionTraceFigure.BACKGROUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8539/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.editor.connections.ConnectionTraceFigure.java", "BodyUseAPI": [], "Fixed commit": "2b714fb92446f61b912d10d0ca83910da669101d", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2014-06-26T21:23:12Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((variableFigure) != null) { variableFigure.setOpaque(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8539/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.editor.connections.ConnectionTraceFigure.java", "BodyUseAPI": [], "Fixed commit": "2b714fb92446f61b912d10d0ca83910da669101d", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2014-06-26T21:23:12Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mAutoIncubating)) configSpeed(); else mMessageText = \"You can't\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3076/buggy-version/app.src.main.java.com.mumu.pokemongogo.HeadService.java", "BodyUseAPI": [], "Fixed commit": "d51ec7e6f3b4189cb94448e976d38da486f12a27", "Url": "https://api.github.com/repos/josh-hsu/PokemonGoGo", "Date": "2016-08-31T03:15:19Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((editText2.getText().length()) == 0) { android.widget.Toast.makeText(getApplicationContext(), \"Text kann nicht leer sein.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/465/buggy-version/app.src.main.java.com.example.bmrsqd.memo.EditNotesActivity.java", "BodyUseAPI": [], "Fixed commit": "c39553dedf3ad501252fc9e1a6e5c58ff8da523f", "Url": "https://api.github.com/repos/Alex-e38/Memo", "Date": "2017-12-03T22:41:34Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (col != null) { currCol = col; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2958/buggy-version/src.org.seqcode.viz.genomicplot.ChipSeqFigurePaintable.java", "BodyUseAPI": [], "Fixed commit": "a9cf31a772a4e3720ba3af618885723852d34884", "Url": "https://api.github.com/repos/seqcode/seqcode-core", "Date": "2017-05-31T15:46:35Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((oName.equals(\"exptMotifColor\")) && ((tokens.length) == 5)) { experiments.get(oVal).exptMotifColor = new java.awt.Color(new java.lang.Integer(tokens[2]), new java.lang.Integer(tokens[3]), new java.lang.Integer(tokens[4])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2958/buggy-version/src.org.seqcode.viz.genomicplot.FigureOptions.java", "BodyUseAPI": [], "Fixed commit": "a9cf31a772a4e3720ba3af618885723852d34884", "Url": "https://api.github.com/repos/seqcode/seqcode-core", "Date": "2017-05-31T15:46:35Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Tree.NamedArgumentList.getSequencedArgument()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (sa != null) { if (models.contains(sa.getParameter().getModel())) { int fromOffset = com.redhat.ceylon.eclipse.util.Nodes.getNodeStartOffset(sa); int toOffset = com.redhat.ceylon.eclipse.util.Nodes.getNodeEndOffset(sa); tfc.addEdit(new org.eclipse.text.edits.DeleteEdit(fromOffset, (toOffset - fromOffset))); results.add(sa); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2322/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.refactor.CollectParametersRefactoring.java", "BodyUseAPI": ["java.util.List<Tree.StatementOrArgument>.add(Tree.SequencedArgument)", "com.redhat.ceylon.eclipse.util.Nodes.getNodeEndOffset(Tree.SequencedArgument)", "sa.getParameter().getModel()", "Tree.SequencedArgument.getParameter()", "java.util.Set<com.redhat.ceylon.compiler.typechecker.model.MethodOrValue>.contains(sa.getParameter().getModel())", "com.redhat.ceylon.eclipse.util.Nodes.getNodeStartOffset(Tree.SequencedArgument)"], "Fixed commit": "8e5e25ad4613dbb6424b9066c0e5e51748baa2af", "Url": "https://api.github.com/repos/eclipse/ceylon-ide-eclipse", "Date": "2015-03-01T00:59:54Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.lagunov.tellmesomething.persistence.DriverManagerConnectionSupplier.jdbcClass) == null) { me.lagunov.tellmesomething.persistence.DriverManagerConnectionSupplier.jdbcClass = java.lang.Class.forName(\"com.mysql.jdbc.Driver\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2137/buggy-version/src.main.java.me.lagunov.tellmesomething.persistence.DriverManagerConnectionSupplier.java", "BodyUseAPI": [], "Fixed commit": "5c9b9e0be46e0d492617a3b7ed9d8cc05f9a6149", "Url": "https://api.github.com/repos/dopamint/board", "Date": "2017-01-19T17:37:45Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.glkwhr.snakegame.Snake.movePoint(com.glkwhr.snakegame.Point,com.glkwhr.snakegame.Snake.Dir)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(tail.equals(nextHead))) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3580/buggy-version/src.com.glkwhr.snakegame.Snake.java", "BodyUseAPI": [], "Fixed commit": "f6b8bf8073d6caecd5cbd2a146054bab9383af3a", "Url": "https://api.github.com/repos/glkwhr/SnakeGame", "Date": "2017-08-29T11:48:40Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((createDoObj.getUrl()) != null) && (!(createDoObj.getUrl().isEmpty()))) { setDataOnEdit(createDoObj.getUrl()); imageWebUploadUrlTxtBox.setText(createDoObj.getUrl()); getUiHandlers().imageWebUpload(createDoObj.getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5644/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.image.upload.ImageUploadView.java", "BodyUseAPI": ["getUiHandlers().imageWebUpload(createDoObj.getUrl())", "org.ednovo.gooru.application.shared.model.folder.CreateDo.getUrl()", "org.ednovo.gooru.application.shared.model.folder.CreateDo.getUrl()", "com.google.gwt.user.client.ui.TextBox.setText(createDoObj.getUrl())", "org.ednovo.gooru.application.shared.model.folder.CreateDo.getUrl()", "org.ednovo.gooru.client.mvp.image.upload.ImageUploadView.setDataOnEdit(createDoObj.getUrl())"], "Fixed commit": "ab1c347ee1ee3391900ba8c87e69a12a91e65353", "Url": "https://api.github.com/repos/chandrasekharv/Gooru-Web", "Date": "2015-10-02T03:14:11Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player.getWorld()) != (currentLoc.getWorld())) { remove(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6248/buggy-version/src.com.projectkorra.projectkorra.airbending.AirCombo.java", "BodyUseAPI": [], "Fixed commit": "c6dfe0027acb350ba3b9e3a53af72f56700becb1", "Url": "https://api.github.com/repos/philip-iv/ProjectKorra", "Date": "2015-11-25T01:18:57Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((start.getWorld()) != (end.getWorld())) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6248/buggy-version/src.com.projectkorra.projectkorra.event.HorizontalVelocityChangeEvent.java", "BodyUseAPI": [], "Fixed commit": "c6dfe0027acb350ba3b9e3a53af72f56700becb1", "Url": "https://api.github.com/repos/philip-iv/ProjectKorra", "Date": "2015-11-25T01:18:57Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!connectedToPara) { com.erudika.scoold.ScooldServer.logger.error(\"No connection to Para backend - make sure that your keys are valid.\"); return pc; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3374/buggy-version/src.main.java.com.erudika.scoold.ScooldServer.java", "BodyUseAPI": [], "Fixed commit": "e5bee7fbf7e3845397a01cca3a7a18a58ac06414", "Url": "https://api.github.com/repos/Erudika/scoold", "Date": "2017-08-11T15:50:08Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((runningAppSession) != null) { runningAppSession.close(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1118/buggy-version/src.com.example.connect_sdk_sampler.fragments.AppsFragment.java", "BodyUseAPI": [], "Fixed commit": "618120279d44a20ef92e80c7f12613c547b2b209", "Url": "https://api.github.com/repos/snikk/Connect-SDK-Android-API-Sampler", "Date": "2014-04-21T20:46:14Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.stream.JsonReader.nextString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (next != null) { return com.codebutler.farebot.core.ByteArray.createFromBase64(next); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3704/buggy-version/farebot-core.src.main.java.com.codebutler.farebot.core.ByteArray.java", "BodyUseAPI": ["com.codebutler.farebot.core.ByteArray.createFromBase64(java.lang.String)"], "Fixed commit": "46c165c722139abe1e8af7846774b83d7c8963f0", "Url": "https://api.github.com/repos/codebutler/farebot", "Date": "2017-02-06T02:44:37Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBarCode) == null) { cancel(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/502/buggy-version/src.net.xjcook.scanner.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "09b68429cf4f3f478f8dc7a9f3a821f501a9ddc4", "Url": "https://api.github.com/repos/xjcook/Scanner", "Date": "2014-03-08T08:38:47Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (bitLength == null) { java.lang.System.exit(0); }else { try { tool = new rsa.RSA(java.lang.Integer.parseInt(bitLength)); } catch (java.lang.NumberFormatException e) { javax.swing.JOptionPane.showMessageDialog(this, \"Please provide a legal integer!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6871/buggy-version/src.rsa.RSAFrame.java", "BodyUseAPI": [], "Fixed commit": "93553fad1bb5853b47c0c8a2e0223a6dd204421c", "Url": "https://api.github.com/repos/johanbrook/RSA", "Date": "2011-11-24T22:48:34Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.orienteer.birt.orientdb.impl.Query.getOrMakeDBResult(db.command(query).execute(parameters))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (dbResult.isEmpty()) { com.orientechnologies.orient.core.record.impl.ODocument newDoc = new com.orientechnologies.orient.core.record.impl.ODocument(); newDoc.field(\"result\", ((java.lang.Object) (null))); curMetaData = new org.orienteer.birt.orientdb.impl.ResultSetMetaData(newDoc); }else { curMetaData = new org.orienteer.birt.orientdb.impl.ResultSetMetaData(dbResult.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7225/buggy-version/org.orienteer.birt.orientdb.src.org.orienteer.birt.orientdb.impl.Query.java", "BodyUseAPI": ["java.util.List<com.orientechnologies.orient.core.record.impl.ODocument>.get(int)"], "Fixed commit": "0a87832a951ee2cf35ec281ccad2331e6b3ba979", "Url": "https://api.github.com/repos/OrienteerBAP/orientdb-oda-birt", "Date": "2017-07-31T06:29:27Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.orienteer.birt.orientdb.impl.HttpQuery.doQuery(org.orienteer.birt.orientdb.impl.Query.truncateQuery(query),int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (resultList.isEmpty()) { com.orientechnologies.orient.core.record.impl.ODocument newDoc = new com.orientechnologies.orient.core.record.impl.ODocument(); newDoc.field(\"result\", ((java.lang.Object) (null))); curMetaData = new org.orienteer.birt.orientdb.impl.ResultSetMetaData(newDoc); }else { curMetaData = new org.orienteer.birt.orientdb.impl.ResultSetMetaData(resultList.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7225/buggy-version/org.orienteer.birt.orientdb.src.org.orienteer.birt.orientdb.impl.HttpQuery.java", "BodyUseAPI": ["java.util.List<com.orientechnologies.orient.core.record.impl.ODocument>.get(int)"], "Fixed commit": "0a87832a951ee2cf35ec281ccad2331e6b3ba979", "Url": "https://api.github.com/repos/OrienteerBAP/orientdb-oda-birt", "Date": "2017-07-31T06:29:27Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataType == (DataType.OHLC)) { time = org.investovator.dataPlayBackEngine.utils.DateUtils.incrementTimeByDays(1, time); }else if (dataType == (DataType.TICKER)) { time = org.investovator.dataPlayBackEngine.utils.DateUtils.incrementTimeBySeconds(1, time); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6879/buggy-version/src.main.java.org.investovator.dataPlayBackEngine.data.BogusHistoryDataGenerator.java", "BodyUseAPI": [], "Fixed commit": "8748dde96d5b7e1d320b78ef9be6d65171010157", "Url": "https://api.github.com/repos/investovator/investovator-dataplaybackengine", "Date": "2013-10-18T05:06:15Z"},
{"Line": "=>858", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ExpressionConstants.JAVA_TYPE.equals(expressionType)) { return org.bonitasoft.studio.common.ExpressionConstants.JAVA_TYPE; }else if (ExpressionConstants.XPATH_TYPE.equals(expressionType)) { return org.bonitasoft.studio.common.ExpressionConstants.XPATH_TYPE; }else if (ExpressionConstants.URL_ATTRIBUTE_TYPE.equals(expressionType)) { return org.bonitasoft.studio.common.ExpressionConstants.URL_ATTRIBUTE_TYPE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3012/buggy-version/bundles.plugins.org.bonitasoft.studio.expression.editor.src.org.bonitasoft.studio.expression.editor.viewer.ExpressionViewer.java", "BodyUseAPI": ["ExpressionConstants.URL_ATTRIBUTE_TYPE.equals(java.lang.String)", "ExpressionConstants.XPATH_TYPE.equals(java.lang.String)"], "Fixed commit": "c38823db067fdd84e67f34fa76512abf2db1eac4", "Url": "https://api.github.com/repos/bonitasoft/bonita-studio", "Date": "2013-10-10T08:13:20Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bonitasoft.studio.model.expression.Operation.getRightOperand()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (actionExp == null) { actionExp = ExpressionFactory.eINSTANCE.createExpression(); if ((actionExpressionFilter) instanceof org.bonitasoft.studio.expression.editor.filter.AvailableExpressionTypeFilter) { if (!(((org.bonitasoft.studio.expression.editor.filter.AvailableExpressionTypeFilter) (actionExpressionFilter)).getContentTypes().contains(ExpressionConstants.CONSTANT_TYPE))) { if (!(((org.bonitasoft.studio.expression.editor.filter.AvailableExpressionTypeFilter) (actionExpressionFilter)).getContentTypes().isEmpty())) { actionExp.setType(((org.bonitasoft.studio.expression.editor.filter.AvailableExpressionTypeFilter) (actionExpressionFilter)).getContentTypes().iterator().next()); } } } if ((editingDomain) != null) { editingDomain.getCommandStack().execute(org.eclipse.emf.edit.command.SetCommand.create(editingDomain, action, ExpressionPackage.Literals.OPERATION__RIGHT_OPERAND, actionExp)); }else { action.setRightOperand(actionExp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3012/buggy-version/bundles.plugins.org.bonitasoft.studio.expression.editor.src.org.bonitasoft.studio.expression.editor.operation.OperationViewer.java", "BodyUseAPI": [], "Fixed commit": "c38823db067fdd84e67f34fa76512abf2db1eac4", "Url": "https://api.github.com/repos/bonitasoft/bonita-studio", "Date": "2013-10-10T08:13:20Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.codesourcery.jasm16.parser.IParseContext.peek()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tok.hasType(TokenType.PICK)) { this.addressingMode = de.codesourcery.jasm16.AddressingMode.INTERNAL_EXPRESSION; addChild(new de.codesourcery.jasm16.ast.RegisterReferenceNode().parse(context), context); final de.codesourcery.jasm16.ast.ASTNode expr = new de.codesourcery.jasm16.ast.ExpressionNode().parse(context); validateRegisterRefCount(context, expr, 0); addChild(expr, context); return this; }else if (((tok.hasType(TokenType.PUSH)) || (tok.hasType(TokenType.POP))) || (tok.hasType(TokenType.PEEK))) { this.addressingMode = de.codesourcery.jasm16.AddressingMode.INTERNAL_EXPRESSION; addChild(new de.codesourcery.jasm16.ast.RegisterReferenceNode().parse(context), context); return this; }else if (tok.hasType(TokenType.ANGLE_BRACKET_OPEN)) { this.addressingMode = de.codesourcery.jasm16.AddressingMode.INTERNAL_EXPRESSION; mergeWithAllTokensTextRegion(context.read(TokenType.ANGLE_BRACKET_OPEN)); final de.codesourcery.jasm16.ast.ASTNode expr = wrapExpression(new de.codesourcery.jasm16.ast.ExpressionNode().parseInternal(context), context); validateRegisterRefCount(context, expr, 1); addChild(expr, context); mergeWithAllTokensTextRegion(context.read(TokenType.ANGLE_BRACKET_CLOSE)); return this; }else if ((tok.hasType(TokenType.CHARACTERS)) || (tok.hasType(TokenType.STRING_DELIMITER))) { if ((tok.hasType(TokenType.CHARACTERS)) && (nextTokenIsRegisterIdentifier(context))) { this.addressingMode = de.codesourcery.jasm16.AddressingMode.REGISTER; final de.codesourcery.jasm16.ast.ASTNode node = new de.codesourcery.jasm16.ast.RegisterReferenceNode().parse(context); addChild(node, context); }else { this.addressingMode = de.codesourcery.jasm16.AddressingMode.IMMEDIATE; de.codesourcery.jasm16.ast.ASTNode expr = new de.codesourcery.jasm16.ast.ExpressionNode().parse(context); validateRegisterRefCount(context, expr, 0); addChild(expr, context); } }else if (((isMinusOperator(tok)) || (tok.hasType(TokenType.NUMBER_LITERAL))) || (tok.hasType(TokenType.PARENS_OPEN))) { this.addressingMode = de.codesourcery.jasm16.AddressingMode.IMMEDIATE; final de.codesourcery.jasm16.ast.ASTNode expression = wrapExpression(new de.codesourcery.jasm16.ast.ExpressionNode().parse(context), context); validateRegisterRefCount(context, expression, 0); addChild(expression, context); }else { throw new de.codesourcery.jasm16.exceptions.ParseException((\"Unexpected operand token: \" + (tok.getType())), tok); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5912/buggy-version/src.main.java.de.codesourcery.jasm16.ast.OperandNode.java", "BodyUseAPI": ["de.codesourcery.jasm16.lexer.IToken.hasType(TokenType.POP)", "de.codesourcery.jasm16.lexer.IToken.hasType(TokenType.ANGLE_BRACKET_OPEN)", "de.codesourcery.jasm16.lexer.IToken.getType()", "de.codesourcery.jasm16.lexer.IToken.hasType(TokenType.PEEK)", "de.codesourcery.jasm16.lexer.IToken.hasType(TokenType.STRING_DELIMITER)", "de.codesourcery.jasm16.lexer.IToken.hasType(TokenType.PUSH)", "de.codesourcery.jasm16.lexer.IToken.hasType(TokenType.CHARACTERS)", "de.codesourcery.jasm16.lexer.IToken.hasType(TokenType.NUMBER_LITERAL)", "de.codesourcery.jasm16.ast.OperandNode.isMinusOperator(de.codesourcery.jasm16.lexer.IToken)", "de.codesourcery.jasm16.lexer.IToken.hasType(TokenType.PARENS_OPEN)", "de.codesourcery.jasm16.lexer.IToken.hasType(TokenType.CHARACTERS)"], "Fixed commit": "68e7836d7c7a277b11abc4c5f1f4c0676d381ede", "Url": "https://api.github.com/repos/toby1984/jASM_16", "Date": "2012-04-30T14:29:17Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (\"pick\".equalsIgnoreCase(buffer)) { currentTokens.add(new de.codesourcery.jasm16.lexer.Token(TokenType.PICK, buffer, startIndex)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5912/buggy-version/src.main.java.de.codesourcery.jasm16.lexer.Lexer.java", "BodyUseAPI": ["java.util.List<de.codesourcery.jasm16.lexer.IToken>.add(de.codesourcery.jasm16.lexer.Token)"], "Fixed commit": "68e7836d7c7a277b11abc4c5f1f4c0676d381ede", "Url": "https://api.github.com/repos/toby1984/jASM_16", "Date": "2012-04-30T14:29:17Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (correctAnswer == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7665/buggy-version/src.quizzically.models.MultipleChoiceQuestion.java", "BodyUseAPI": [], "Fixed commit": "55a697646b215ca726cc66d96de6df633557eb17", "Url": "https://api.github.com/repos/adi3/quizzically", "Date": "2014-03-05T12:05:32Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["stratos.game.craft.Vehicle.journey()", "stratos.game.craft.Stage.localSector()", "verse.journeys.destinationFor(stratos.game.craft.Vehicle)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((j != null) && (goes == locale)) { j.reattemptLanding(); }else { j = stratos.game.craft.Journey.configForTrader(ship, locale, goes, world); if (j != null) j.beginJourney(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/9182/buggy-version/src.stratos.game.craft.PilotUtils.java", "BodyUseAPI": ["stratos.game.craft.Journey.configForTrader(stratos.game.craft.Vehicle,stratos.game.craft.Sector,stratos.game.craft.Sector,stratos.game.craft.Stage)", "stratos.game.craft.Journey.reattemptLanding()"], "Fixed commit": "b87c8195013e0a800cca90b9ffa49581a5536c55", "Url": "https://api.github.com/repos/Morgan-Allen/Presidium-Graphics-Overhaul", "Date": "2016-03-17T10:51:32Z"},
{"Line": "=>853", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.bitcoin.core.Transaction.getValueSentFromMe(perWalletModelData.getWallet())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((valueSentFromMe != null) && ((valueSentFromMe.compareTo(java.math.BigInteger.ZERO)) > 0)) { logger.debug(((((((\"Sent \" + (org.multibit.Localiser.bitcoinValueToString4(valueSentFromMe, true, false))) + \" from \") + (from.toString())) + \" from wallet '\") + (perWalletModelData.getWalletDescription())) + \"'\")); perWalletModelData.setTransactionDirty(true); dataHasChanged = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7855/buggy-version/src.main.java.org.multibit.viewsystem.swing.MultiBitFrame.java", "BodyUseAPI": ["org.multibit.Localiser.bitcoinValueToString4(java.math.BigInteger,boolean,boolean)", "org.slf4j.Logger.debug(((((((\"Sent \" + (org.multibit.Localiser.bitcoinValueToString4(valueSentFromMe, true, false))) + \" from \") + (from.toString())) + \" from wallet '\") + (perWalletModelData.getWalletDescription())) + \"'\"))"], "Fixed commit": "4084fa1d28f39f31b5fd03bbc30a2dd039753b81", "Url": "https://api.github.com/repos/Multibit-Legacy/multibit", "Date": "2011-12-12T12:45:00Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.Uri.getScheme()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ContentResolver.SCHEME_FILE.equals(scheme)) { if (!(org.mariotaku.twidere.util.ImageValidator.checkImageValidity(mUri.getPath()))) throw new java.io.IOException(\"Invalid image\"); }else { if (!(org.mariotaku.twidere.util.Utils.isValidImage(is))) throw new java.io.IOException(\"Invalid image\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4070/buggy-version/src.org.mariotaku.gallery3d.util.MediaItem.java", "BodyUseAPI": [], "Fixed commit": "a27034eaf77389a707253b8c6db53700ec390079", "Url": "https://api.github.com/repos/mariotaku/twidere", "Date": "2013-01-07T03:08:02Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (request.getParameter(\"commentType\").equals(\"Rejected\")) { Controllers.RequestDispatcher dispatcher = getServletContext().getRequestDispatcher(((\"/ChangeIssueState?issueID=\" + (request.getParameter(\"issueID\"))) + \"&state=Resolved\")); dispatcher.forward(request, response); }else { Controllers.RequestDispatcher dispatcher = getServletContext().getRequestDispatcher((\"/Issue?issueID=\" + (request.getParameter(\"issueID\")))); dispatcher.forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1273/buggy-version/WEB-INF.classes.Controllers.ChangeCommentType.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "Controllers.RequestDispatcher.forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "getServletContext().getRequestDispatcher(((\"/ChangeIssueState?issueID=\" + (request.getParameter(\"issueID\"))) + \"&state=Resolved\"))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "getServletContext().getRequestDispatcher((\"/Issue?issueID=\" + (request.getParameter(\"issueID\"))))", "Controllers.RequestDispatcher.forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"], "Fixed commit": "67319935dac5eb349fac3961799504ddc5db9825", "Url": "https://api.github.com/repos/theMiniTitan/Knowledge-base-ticketing", "Date": "2016-11-05T08:21:27Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getHealth()) < 20) { player.setHealth(((player.getHealth()) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5628/buggy-version/src.me.slaps.iCoLand.HealTask.java", "BodyUseAPI": ["org.bukkit.entity.Player.setHealth(((player.getHealth()) + 1))", "org.bukkit.entity.Player.getHealth()"], "Fixed commit": "39df95b4e187c248a95a70e34b5968264e619d0b", "Url": "https://api.github.com/repos/iConomy/iCoLand", "Date": "2011-04-03T01:32:51Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.lim_bo56.settings.listeners.AsyncPlayerChatEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (Cache.WORLDS_ALLOWED.contains(player.getWorld().getName())) { if (!(cPlayer.hasChat())) { event.getRecipients().remove(player); event.setCancelled(true); player.sendMessage(me.lim_bo56.settings.config.MessageConfiguration.get(\"Chat-Disabled\")); }else if (cPlayer.hasChat()) { event.getRecipients().add(player); event.setCancelled(false); for (org.bukkit.entity.Player online : org.bukkit.Bukkit.getOnlinePlayers()) { me.lim_bo56.settings.player.CustomPlayer customPlayer = new me.lim_bo56.settings.player.CustomPlayer(online); if (!(customPlayer.hasChat())) event.getRecipients().remove(online); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5343/buggy-version/src.me.lim_bo56.settings.listeners.PlayerListener.java", "BodyUseAPI": ["event.getRecipients().add(org.bukkit.entity.Player)", "event.getRecipients().remove(org.bukkit.entity.Player)", "org.bukkit.entity.Player.sendMessage(me.lim_bo56.settings.config.MessageConfiguration.get(\"Chat-Disabled\"))"], "Fixed commit": "92b9b5df50a113937a4021ab262bbb364b8c76bd", "Url": "https://api.github.com/repos/limbo56/PlayerSettings", "Date": "2016-12-03T01:23:50Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fstmt.getExpression()) != null) { wstmt.setExpression(((edu.rice.cs.caper.bayou.application.dom_driver.Expression) (edu.rice.cs.caper.bayou.application.dom_driver.ASTNode.copySubtree(wstmt.getAST(), fstmt.getExpression())))); }else { wstmt.setExpression(wstmt.getAST().newBooleanLiteral(true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2391/buggy-version/src.main.java.edu.rice.cs.caper.bayou.application.dom_driver.CFGFeature.java", "BodyUseAPI": ["edu.rice.cs.caper.bayou.application.dom_driver.ForStatement.getExpression()", "edu.rice.cs.caper.bayou.application.dom_driver.WhileStatement.setExpression(((edu.rice.cs.caper.bayou.application.dom_driver.Expression) (edu.rice.cs.caper.bayou.application.dom_driver.ASTNode.copySubtree(wstmt.getAST(), fstmt.getExpression()))))", "edu.rice.cs.caper.bayou.application.dom_driver.ASTNode.copySubtree(wstmt.getAST(),fstmt.getExpression())"], "Fixed commit": "eb9124ca332fbe6edd3c4f65c71173b0e447feef", "Url": "https://api.github.com/repos/ylu1317/bayou", "Date": "2017-10-12T20:21:56Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(stmt_list.isEmpty())) { this.cfg = this.gen_cfg(input.getBody().statements(), input); this.cfg_to_dot(); }else { this.cfg = null; this.nodes = new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2391/buggy-version/src.main.java.edu.rice.cs.caper.bayou.application.dom_driver.CFGFeature.java", "BodyUseAPI": [], "Fixed commit": "eb9124ca332fbe6edd3c4f65c71173b0e447feef", "Url": "https://api.github.com/repos/ylu1317/bayou", "Date": "2017-10-12T20:21:56Z"},
{"Line": "=>3684", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(cleanup.get())) || ((addedCells.get()) > 0)) { cleanup.set(true); if (((debugLevel) > 1) && (!(cleanup.get()))) java.lang.System.out.println(((\"Added \" + (addedCells.get())) + \" during border cleanup\")); addedCells.set(0); umax = 0; vmax = 0; vmin = PATTERN_GRID.length; umin = PATTERN_GRID[0].length; for (int i = 0; i < (PATTERN_GRID.length); i++) for (int j = 0; j < (PATTERN_GRID[i].length); j++) { if (((PATTERN_GRID[i][j]) != null) && ((PATTERN_GRID[i][j][0]) != null)) { if (vmin > i) vmin = i; if (vmax < i) vmax = i; if (umin > j) umin = j; if (umax < j) umax = j; } } int[] uvNew = new int[2]; for (uvNew[1] = vmin; (uvNew[1]) <= vmax; (uvNew[1])++) for (uvNew[0] = umin; (uvNew[0]) <= umax; (uvNew[0])++) if (isCellDefined(PATTERN_GRID, uvNew)) { for (dir = 0; dir < (directionsUV.length); dir++) { iUV[0] = (uvNew[0]) + (directionsUV[dir][0]); iUV[1] = (uvNew[1]) + (directionsUV[dir][1]); if ((!(isCellDefined(PATTERN_GRID, iUV))) && (!(isCellDeleted(PATTERN_GRID, iUV)))) { putInWaveList(waveFrontList, uvNew, dir); break; } } } if (global_debug_level > 1) java.lang.System.out.println((\"***** Starting cleanup, wave length=\" + (waveFrontList.size()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/654/buggy-version/src.main.java.MatchSimulatedPattern.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicBoolean.get()", "java.io.PrintStream.println(java.lang.String)", "java.util.concurrent.atomic.AtomicInteger.get()", "java.util.concurrent.atomic.AtomicInteger.set(int)", "java.util.concurrent.atomic.AtomicBoolean.set(boolean)"], "Fixed commit": "95e22adf213d6624281b8c1302465be3728bfeec", "Url": "https://api.github.com/repos/Elphel/imagej-elphel", "Date": "2014-11-10T00:23:38Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Double.parseDouble(wpm)) > 150) wpm = \"10\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5270/buggy-version/src.connection.Server.java", "BodyUseAPI": [], "Fixed commit": "261985e9b742fb02103f7d53b9f5ac818ea9b920", "Url": "https://api.github.com/repos/winChawakorn/TypingThrower", "Date": "2017-07-18T02:19:44Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position < 0) || (position >= (dataList.size()))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2249/buggy-version/library.src.main.java.com.carlosdelachica.easyrecycleradapters.adapter.CommonRecyclerAdapter.java", "BodyUseAPI": [], "Fixed commit": "76bd6f46be1fbb14d9d4e73bd423405b18e9f985", "Url": "https://api.github.com/repos/CarlosMChica/easyrecycleradapters", "Date": "2015-01-17T20:07:40Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((transaction) == null) || (transaction.wasCommitted())) { transaction = session.beginTransaction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4390/buggy-version/complete.src.main.java.com.zhubo.global.ResourceManager.java", "BodyUseAPI": [], "Fixed commit": "c399f3b34ebe1776b3c269456a07c1d91384667a", "Url": "https://api.github.com/repos/expPATHoli/zhubo_backend", "Date": "2016-10-04T07:04:48Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mySelfie.entity.User.getId_user()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((user.getId_user()) != me_id) { com.mySelfie.function.NotificationUtils.setLikeOnTaggedSelfieNotification(user.getId_user(), generatedId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7840/buggy-version/src.com.mySelfie.servlet.PostServlet.java", "BodyUseAPI": ["com.mySelfie.entity.User.getId_user()", "com.mySelfie.function.NotificationUtils.setLikeOnTaggedSelfieNotification(user.getId_user(),int)"], "Fixed commit": "b90724457f4cf80f55d8a9c9a49756468fda7fd0", "Url": "https://api.github.com/repos/MichelangeloDiamanti/mySelfie", "Date": "2015-07-20T14:42:26Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (button != 0) { fragmentTransaction.addToBackStack(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5890/buggy-version/app.src.main.java.be.vives.citroentjes.sportrijk.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "57761067564c6870210b958a6a572ee2581e3690", "Url": "https://api.github.com/repos/Cedric-Cornelis/Sportrijk", "Date": "2014-11-15T02:04:32Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((swipeContainer) != null) { swipeContainer.setRefreshing(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2993/buggy-version/app.src.main.java.com.codepath.apps.simpletwitterclient.fragments.TweetsListFragment.java", "BodyUseAPI": [], "Fixed commit": "140a0e22ccaf01d48b8585cfff17e1cbd4ff5cd0", "Url": "https://api.github.com/repos/richardpon/AdvancedTwitterClient", "Date": "2015-06-02T06:50:13Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (pagelet == null) { pagelet = new com.pratilipi.data.client.PratilipiContentData.Pagelet(text, com.pratilipi.data.client.PratilipiContentData.PageletType.TEXT); pageletList.add(pagelet); }else { pagelet = new com.pratilipi.data.client.PratilipiContentData.Pagelet((((pagelet.getData()) + \" \") + text), com.pratilipi.data.client.PratilipiContentData.PageletType.TEXT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6930/buggy-version/src.main.java.com.pratilipi.common.util.PratilipiContentUtil.java", "BodyUseAPI": ["com.pratilipi.data.client.PratilipiContentData.Pagelet.getData()"], "Fixed commit": "edcb0a988c5ff67f9b22e7030a07c0b65c1aecb3", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-07-22T02:26:07Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSignOutButtons) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1441/buggy-version/mobile.src.main.java.ch.renuo.emotionpulse.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "2ab087c0d52bfcfb558f78e955774912377056f9", "Url": "https://api.github.com/repos/lukaselmer/emotion-pulse", "Date": "2014-10-11T05:26:15Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outboundRequest != null) { outboundReceptionStatus = new org.mifos.mifospaymentbridge.model.Status(); outboundReceptionStatus.setCode(java.lang.String.valueOf(TransactionStatus.REQUEST_RECEPTION_SUCCESS_CODE)); outboundReceptionStatus.setDescription(TransactionStatus.REQUEST_RECEPTION_SUCCESS); outboundReceptionStatus.setStatusCategory(StatusCategory.GATEWAY_CATEGORY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7948/buggy-version/mifos-payment.src.main.java.org.mifos.mifospaymentbridge.controller.OutboundController.java", "BodyUseAPI": [], "Fixed commit": "d1884c7b5c50eb5008792865f6c6b0cde8a23ab7", "Url": "https://api.github.com/repos/vladimirfomene/mifos-payment-gateway", "Date": "2017-09-21T17:10:12Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) getSupportActionBar().setIcon(icon); else android.util.Log.e(\"Null catch\", \"Actionbar = Null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5645/buggy-version/BestSlopes2.app.src.main.java.com.best_slopes.bestslopes.ViewTrailActivity.java", "BodyUseAPI": [], "Fixed commit": "309ff2203c72265abec9d5eca843cfa4a32a84eb", "Url": "https://api.github.com/repos/thePurpleMonkey/cs496-spring2016", "Date": "2016-05-05T19:31:02Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((instance.getSslPort()) == null) { port = instance.getPort(); scheme = \"http\"; }else { port = ((instance.getSslPort()) >= 0) ? instance.getSslPort() : instance.getPort(); scheme = ((instance.getSslPort()) >= 0) ? \"https\" : \"http\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1247/buggy-version/server.src.main.java.io.druid.curator.discovery.ServerDiscoverySelector.java", "BodyUseAPI": ["org.apache.curator.x.discovery.ServiceInstance.getSslPort()", "org.apache.curator.x.discovery.ServiceInstance.getSslPort()", "org.apache.curator.x.discovery.ServiceInstance.getPort()", "org.apache.curator.x.discovery.ServiceInstance.getSslPort()", "org.apache.curator.x.discovery.ServiceInstance.getPort()"], "Fixed commit": "f7a4e54faaf3b728d95648bfa48770ac37c8a611", "Url": "https://api.github.com/repos/pjain1/druid", "Date": "2017-08-17T07:52:10Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPainter) == null) { throw new java.lang.IllegalStateException(\"Color slider needs a Painter class to know how to paint the color!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/660/buggy-version/library.src.main.java.com.grosner.painter.ColorSlider.java", "BodyUseAPI": [], "Fixed commit": "548e728a9ea7edccce4efd947235ec34db0832a5", "Url": "https://api.github.com/repos/agrosner/Painter", "Date": "2014-07-18T18:00:25Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((millis) >= 0) && ((nanos) >= 0)) java.lang.Thread.sleep(millis, nanos);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3680/buggy-version/src.business.util.FPSManager.java", "BodyUseAPI": [], "Fixed commit": "7e817eaee2b273168a5a122974f46287b3e1f6ca", "Url": "https://api.github.com/repos/stancelrobert/Great-balls-of-fire", "Date": "2017-04-17T20:45:31Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(e.getValue().isObject())) propHandle = node.findProperty(e.getKey(), e.getValue()); else { org.hypergraphdb.HGHandle matchedValue = node.match(e.getValue(), exact); propHandle = node.findProperty(e.getKey(), matchedValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1651/buggy-version/src.java.mjson.hgdb.HGJsonQuery.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, mjson.Json>.getKey()", "mjson.hgdb.HyperNodeJson.findProperty(e.getKey(),e.getValue())", "java.util.Map.Entry<java.lang.String, mjson.Json>.getValue()", "java.util.Map.Entry<java.lang.String, mjson.Json>.getValue()", "java.util.Map.Entry<java.lang.String, mjson.Json>.getKey()", "mjson.hgdb.HyperNodeJson.findProperty(e.getKey(),org.hypergraphdb.HGHandle)", "mjson.hgdb.HyperNodeJson.match(e.getValue(),boolean)"], "Fixed commit": "6901c77572ff11d384abfb5d842d60ea311df719", "Url": "https://api.github.com/repos/hypergraphdb/mjson", "Date": "2017-02-26T17:13:46Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pluginAppTheme == 0) && (pd.isStandalone())) { pluginAppTheme = android.R.style.Theme_DeviceDefault; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5302/buggy-version/PluginCore.src.com.plugin.core.PluginInjector.java", "BodyUseAPI": [], "Fixed commit": "98d2b6ca80630ec187331a2fbb4cbe86543b09d9", "Url": "https://api.github.com/repos/limpoxe/Android-Plugin-Framework", "Date": "2016-06-14T10:13:57Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((kvClient) != null) kvClient.disconnect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5778/buggy-version/src.app_kvClient.KVClient.java", "BodyUseAPI": [], "Fixed commit": "8cf07781f485895abb257b448bf31dc36399f000", "Url": "https://api.github.com/repos/PushkarBettadpur/ds", "Date": "2017-02-09T18:12:57Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.oneclicks.wifi_school.SchoolWifiManager.getSchoolWifiPortal(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (WifiPortal[0].equals(\"\")) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/662/buggy-version/oneclicks_wifi_android.src.main.java.cn.oneclicks.wifi_school.SchoolWifiManager.java", "BodyUseAPI": [], "Fixed commit": "906c5ef5a7e0416aa418e74351b917c684933a84", "Url": "https://api.github.com/repos/billzyx/oneclicks_wifi_android", "Date": "2016-10-10T12:53:00Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.oneclicks.wifi_school.SchoolWifiManager.getSchoolWifiPortal(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (WifiPortal[0].equals(\"\")) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/662/buggy-version/oneclicks_wifi_android.src.main.java.cn.oneclicks.wifi_school.SchoolWifiManager.java", "BodyUseAPI": [], "Fixed commit": "906c5ef5a7e0416aa418e74351b917c684933a84", "Url": "https://api.github.com/repos/billzyx/oneclicks_wifi_android", "Date": "2016-10-10T12:53:00Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((associationId) != null) && (((subnetId) != null) || ((tableId) != null))) { throw new com.anttoolkit.aws.ec2.tasks.routetable.BuildException(\"Either association id or subnet and route table id should be specified\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1657/buggy-version/dev.modules.native.aws-ec2.src.main.java.com.anttoolkit.aws.ec2.tasks.routetable.DisassociateRouteTableTask.java", "BodyUseAPI": [], "Fixed commit": "915a198569c5168193ba6ecc08856a6c0da7e53f", "Url": "https://api.github.com/repos/irudyak/ant-toolkit", "Date": "2015-08-27T21:17:55Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cancelNotification) { notificationDismiss(ctx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7052/buggy-version/app.src.main.java.com.eveningoutpost.dexdrip.UtilityModels.AlertPlayer.java", "BodyUseAPI": [], "Fixed commit": "f5183ad66b3f5e3affcbe1f78f08f251171f699e", "Url": "https://api.github.com/repos/jamorham/xDrip-plus", "Date": "2017-01-11T15:30:05Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (kids == null) { kids = new java.util.ArrayList<java.lang.Long>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2927/buggy-version/app.src.main.java.com.team11.hackernews.api.accessors.StoryAccessor.java", "BodyUseAPI": [], "Fixed commit": "d4ed247dffcf9db005747726add646c7c92c1ad4", "Url": "https://api.github.com/repos/Ter0/HackerNews", "Date": "2014-12-01T00:00:15Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= (com.tmall.top.PollingWebSocketServlet._clients.size())) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8213/buggy-version/src.main.java.com.tmall.top.PollingWebSocketServlet.java", "BodyUseAPI": [], "Fixed commit": "5f183533a16cc3e984e94a479b0473ecccdf6bce", "Url": "https://api.github.com/repos/wsky/top-push", "Date": "2012-12-05T03:25:25Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (android.app.Activity.RESULT_CANCELED)) { this.callbackContext.error(\"cancel\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/357/buggy-version/src.android.com.phonegap.plugins.barcodescanner.BarcodeScanner.java", "BodyUseAPI": [], "Fixed commit": "900b4daf508f1b91435387353deac07fb7d8e5f5", "Url": "https://api.github.com/repos/Mobishift/BarcodeScanner", "Date": "2015-04-22T11:58:55Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bitmap) != null) uploadFile(postid);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6440/buggy-version/app.src.main.java.kr.ac.hansung.bababob.ReviewWriteActivity.java", "BodyUseAPI": [], "Fixed commit": "27e76357ed349ca37c4f7f9001233c04f9134fad", "Url": "https://api.github.com/repos/Jina-Kim/BABABOB", "Date": "2017-12-08T13:40:33Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bitmap) != null) { bitmap = MediaStore.Images.Media.getBitmap(getContentResolver(), data.getData()); bitmap = MediaStore.Images.Media.getBitmap(getContentResolver(), data.getData()); selected_iv.setImageBitmap(bitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6440/buggy-version/app.src.main.java.kr.ac.hansung.bababob.ReviewWriteActivity.java", "BodyUseAPI": [], "Fixed commit": "27e76357ed349ca37c4f7f9001233c04f9134fad", "Url": "https://api.github.com/repos/Jina-Kim/BABABOB", "Date": "2017-12-08T13:40:33Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBaseActivity) instanceof org.eyeseetea.malariacare.DashboardActivity) { ((org.eyeseetea.malariacare.DashboardActivity) (mBaseActivity)).executeLogout(); }else { logout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/9023/buggy-version/app.src.ereferrals.java.org.eyeseetea.malariacare.strategies.BaseActivityStrategy.java", "BodyUseAPI": [], "Fixed commit": "dfbb30b50620efa6793b5c8796c7908fc1bc3df9", "Url": "https://api.github.com/repos/EyeSeeTea/pictureapp", "Date": "2017-05-12T15:38:41Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (parsedDate != null) { formattedDate = dt2.format(parsedDate); play.Logger.debug((\"Formatted Date:\" + formattedDate)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/349/buggy-version/app.controllers.com.contactmanager.ReportsController.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(java.util.Date)"], "Fixed commit": "0912ece268d9c6a7576bf2d0c3881efd5c312680", "Url": "https://api.github.com/repos/pawanmit/contactmanager", "Date": "2013-08-22T20:34:42Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.android.angrybird.util.Utils.listNotNull(mItemList)) { java.util.Collections.sort(mItemList, new java.util.Comparator<com.android.angrybird.database.Item>() { java.text.DateFormat dateFormat = new java.text.SimpleDateFormat(\"dd-MM-yyyy\"); @java.lang.Override public int compare(com.android.angrybird.database.Item o1, com.android.angrybird.database.Item o2) { try { return dateFormat.parse(o2.getDate()).compareTo(dateFormat.parse(o1.getDate())); } catch (java.text.ParseException e) { return 0; } } }); mAdapter.sortList(mItemList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/683/buggy-version/app.src.main.java.com.android.angrybird.activity.ItemListActivity.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.List<com.android.angrybird.database.Item>,java.util.Comparator<com.android.angrybird.database.Item>)", "com.android.angrybird.adapter.ItemListAdapter.sortList(java.util.List<com.android.angrybird.database.Item>)"], "Fixed commit": "c144eac3818dde1c577bed824c81d0c3682fdd7a", "Url": "https://api.github.com/repos/Abhishek92/AngryBird", "Date": "2017-07-03T15:51:25Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNavSelectId) == (item.getItemId())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/801/buggy-version/app.src.main.java.com.lsc.anything.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6084c2a887699a6171e4115e377f29fc1612ce4e", "Url": "https://api.github.com/repos/lsclst/AnyThing", "Date": "2017-11-13T02:10:11Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.exadel.training.service.impl.Training.getLessonList()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (removeLesson && (lessonList != null)) { lessonList.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7548/buggy-version/training.src.main.java.com.exadel.training.service.impl.TrainingServiceImpl.java", "BodyUseAPI": ["java.util.List<com.exadel.training.service.impl.Lesson>.clear()"], "Fixed commit": "399799676fdb6693241cae7bb9688465e3a2bd38", "Url": "https://api.github.com/repos/MrArtem/Training-Management-System", "Date": "2015-10-28T05:51:49Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Hour == 0) { Hour = 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2626/buggy-version/app.src.main.java.com.shannor.theloyaltynetwork.model.Post.java", "BodyUseAPI": [], "Fixed commit": "d10b3f227a6119f00c91ed5e8f01a113c2faacce", "Url": "https://api.github.com/repos/Shannor/TheLoyaltyNetwork", "Date": "2015-12-25T05:49:55Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parts.length) > 2) { java.lang.String column = parts[((parts.length) - 1)]; java.lang.String table = parts[0]; for (int i = 1; i < ((parts.length) - 1); i++) table += \".\" + (parts[i]); return new de.metanome.algorithm_integration.ColumnIdentifier(table, column); }else { return new de.metanome.algorithm_integration.ColumnIdentifier(parts[0], parts[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7485/buggy-version/algorithm_integration.src.main.java.de.metanome.algorithm_integration.ColumnIdentifier.java", "BodyUseAPI": [], "Fixed commit": "f4fc82770d121e30eeec84bb2e9af3f0c35af1be", "Url": "https://api.github.com/repos/Jens-Ehrlich/Metanome", "Date": "2015-02-19T19:47:02Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entities) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6992/buggy-version/BOLT.src.editor.Editor.java", "BodyUseAPI": [], "Fixed commit": "2fcb6126f3bb726d689e87a0be3db8952503613b", "Url": "https://api.github.com/repos/Ichmed/BOLT", "Date": "2013-08-02T14:30:15Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (w.isEmployee(this)) { total_wage += w.wage; }else { total_wage += w.job_add.wage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5926/buggy-version/src.agents.Firm.java", "BodyUseAPI": [], "Fixed commit": "98add9011b067d3c74db5407c47e700b56080ad0", "Url": "https://api.github.com/repos/AzHass/lmdss", "Date": "2014-01-10T00:23:55Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.util.UUID, java.util.List<java.util.UUID>>.get(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (uuids == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7597/buggy-version/src.vg.civcraft.mc.prisonpearl.managers.BroadcastManager.java", "BodyUseAPI": [], "Fixed commit": "b04eece1f440bc116542f1c7589d4872b836e7dd", "Url": "https://api.github.com/repos/Civcraft/PrisonPearl", "Date": "2016-02-27T17:17:21Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.sun.mail.imap.protocol.BODYSTRUCTURE.parseDebug) java.lang.System.out.println((\"DEBUG IMAP: multipart description \" + (description)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3228/buggy-version/mail.src.main.java.com.sun.mail.imap.protocol.BODYSTRUCTURE.java", "BodyUseAPI": [], "Fixed commit": "db92da602c0729f5f45b2fb4684229b84a08c10b", "Url": "https://api.github.com/repos/javaee/javamail", "Date": "2017-10-23T23:00:11Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((arr.size()) < 7) { android.util.Log.v(\"check \uac12 : \", java.lang.String.valueOf(check)); arr.add(num); android.util.Log.v(\"data \ub0a0\uc9dc\", java.lang.String.valueOf(arr.size())); android.widget.Toast.makeText(this, (num + \"\uc774 \uc800\uc7a5\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \"), Toast.LENGTH_SHORT).show(); for (int i = 0; i < (arr.size()); i++) { for (int j = 0; j <= i; j++) { if ((arr.get(j)) != null) data += (arr.get(j)) + \" \"; } data += \"&\"; } android.util.Log.v(\"data \uac12 : \", data); java.lang.String[] ch = data.split(\"&\"); for (int i = 1; i < ((ch.length) + 1); i++) { if (ch[(i - 1)].contains(\"null\")) { java.lang.String[] ch2; ch2 = ch[(i - 1)].split(\"null\"); com.example.user.junier.Day.daydata = ch2[1]; }else { if (i == 7) { android.util.Log.v(\"\uc624\ub958 \", ch[(i - 1)]); } com.example.user.junier.Day.daydata = ch[(i - 1)]; } } day.setText(com.example.user.junier.TextViewHelper.shrinkWithWordUnit(day, com.example.user.junier.Day.daydata, 100)); }else { android.widget.Toast.makeText(getApplicationContext(), \"7\uc77c\uc774\ud6c4\ub294 \uc120\ud0dd\ud558\uc2e4\uc218 \uc5c6\uc2b5\ub2c8\ub2e4\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5422/buggy-version/app.src.main.java.com.example.user.junier.Day.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.get(int)", "java.lang.String.valueOf(int)", "java.util.ArrayList<java.lang.String>.get(int)", "android.util.Log.v(java.lang.String,java.lang.String)"], "Fixed commit": "0e3920471329f0a692ef05ef29ddfc37dc4d1c10", "Url": "https://api.github.com/repos/syeutyu/PlanW", "Date": "2017-08-03T10:43:17Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (geom.isEmpty()) { return 2; }else { return java.lang.Double.isNaN(geom.getCoordinate().z) ? 2 : 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1939/buggy-version/modules.plugin.jdbc.jdbc-oracle.src.main.java.org.geotools.data.oracle.sdo.SDO.java", "BodyUseAPI": ["java.lang.Double.isNaN(geom.getCoordinate().z)", "com.vividsolutions.jts.geom.Geometry.getCoordinate()"], "Fixed commit": "13f5e554ecc7cc15a43355d21e68e3b4992e3200", "Url": "https://api.github.com/repos/mtoonen/geotools", "Date": "2016-06-29T08:14:26Z"},
{"Line": "=>1101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(polygon.isEmpty())) { org.geotools.data.oracle.sdo.SDO.addCoordinates(list, org.geotools.data.oracle.sdo.SDO.counterClockWise(polygon.getFactory().getCoordinateSequenceFactory(), polygon.getExteriorRing().getCoordinateSequence())); for (int i = 0; i < holes; i++) { org.geotools.data.oracle.sdo.SDO.addCoordinates(list, org.geotools.data.oracle.sdo.SDO.clockWise(polygon.getFactory().getCoordinateSequenceFactory(), polygon.getInteriorRingN(i).getCoordinateSequence())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1939/buggy-version/modules.plugin.jdbc.jdbc-oracle.src.main.java.org.geotools.data.oracle.sdo.SDO.java", "BodyUseAPI": ["com.vividsolutions.jts.geom.Polygon.getExteriorRing()", "org.geotools.data.oracle.sdo.SDO.counterClockWise(polygon.getFactory().getCoordinateSequenceFactory(),polygon.getExteriorRing().getCoordinateSequence())", "polygon.getInteriorRingN(i).getCoordinateSequence()", "com.vividsolutions.jts.geom.Polygon.getInteriorRingN(int)", "org.geotools.data.oracle.sdo.SDO.clockWise(polygon.getFactory().getCoordinateSequenceFactory(),polygon.getInteriorRingN(i).getCoordinateSequence())", "polygon.getExteriorRing().getCoordinateSequence()", "com.vividsolutions.jts.geom.Polygon.getFactory()", "org.geotools.data.oracle.sdo.SDO.addCoordinates(java.util.List,com.vividsolutions.jts.geom.CoordinateSequence)", "polygon.getFactory().getCoordinateSequenceFactory()", "org.geotools.data.oracle.sdo.SDO.addCoordinates(java.util.List,com.vividsolutions.jts.geom.CoordinateSequence)", "polygon.getFactory().getCoordinateSequenceFactory()", "com.vividsolutions.jts.geom.Polygon.getFactory()"], "Fixed commit": "13f5e554ecc7cc15a43355d21e68e3b4992e3200", "Url": "https://api.github.com/repos/mtoonen/geotools", "Date": "2016-06-29T08:14:26Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.osgi.framework.BundleContext.getServiceReferences(java.lang.String,(((((((((\"(&(\" + (org.coderthoughts.cloud.framework.service.api.FrameworkStatusAddition.SERVICE_VARIABLES_KEY)) + \"=\") + name) + \")\") + \"(\") + (org.coderthoughts.cloud.framework.service.api.FrameworkStatusAddition.SERVICE_IDS_KEY)) + \"=\") + serviceID) + \"))\"))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (additionRefs != null) { sortServiceReferences(additionRefs); for (org.osgi.framework.ServiceReference ref : additionRefs) { org.coderthoughts.cloud.framework.service.api.FrameworkStatusAddition addition = ((org.coderthoughts.cloud.framework.service.api.FrameworkStatusAddition) (bundleContext.getService(ref))); return addition.getServiceVariable(serviceID, name, client); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/764/buggy-version/cloud-infra-framework-service.src.main.java.org.coderthoughts.cloud.framework.service.impl.FrameworkStatusImpl.java", "BodyUseAPI": ["org.coderthoughts.cloud.framework.service.impl.FrameworkStatusImpl.sortServiceReferences(org.osgi.framework.ServiceReference[])"], "Fixed commit": "cd711bc97d48d9e2d5e263609cf06ca6ca369dc1", "Url": "https://api.github.com/repos/bosschaert/osgi-cloud-infra-src", "Date": "2013-03-24T23:12:02Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (hideHeader != null) { keyValue.put(org.talend.dataprep.api.service.settings.views.api.list.ListDetailsSettings.Builder.HIDE_HEADER, hideHeader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5268/buggy-version/dataprep-api.src.main.java.org.talend.dataprep.api.service.settings.views.api.list.ListDetailsSettings.java", "BodyUseAPI": ["java.util.Map.put(java.lang.String,java.lang.Boolean)"], "Fixed commit": "1a90eca7bfea7e30772e5a7573f38ad25c621e6e", "Url": "https://api.github.com/repos/Talend/data-prep", "Date": "2017-04-20T07:59:19Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isXuPan) { shelfNo = currShelfET; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5887/buggy-version/src.cn.burgeon.core.ui.check.CheckScanActivity.java", "BodyUseAPI": [], "Fixed commit": "4a0f606316b17d63bc942cbf2c807e36fd0e18b5", "Url": "https://api.github.com/repos/kukucat0322/Gtroo", "Date": "2014-07-28T07:34:47Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ScrollView.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (drawerPage != null) currentDrawer = drawerPage.getDrawerType();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1902/buggy-version/src.edu.cmu.hcii.novo.kadarbra.ProcedureActivity.java", "BodyUseAPI": ["edu.cmu.hcii.novo.kadarbra.page.DrawerPageInterface.getDrawerType()"], "Fixed commit": "6c02d939f4a798f63bf0204ea9cf92f43064dd1d", "Url": "https://api.github.com/repos/cmuellerrr/kadARbra", "Date": "2013-07-18T22:58:59Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((indexXmlVersion) < (CacheWolf.Profile.CURRENTFILEFORMAT)) && (!convertWarningDisplayed)) { if ((indexXmlVersion) < (CacheWolf.Profile.CURRENTFILEFORMAT)) { convertWarningDisplayed = true; new ewe.ui.MessageBox(CacheWolf.MyLocale.getMsg(144, \"Warning\"), CacheWolf.MyLocale.getMsg(4407, \"The profile files are not in the current format.%0aTherefore they are now converted to the current format. Depending of the size of the profile and the computer involved this may take some minutes. Please bear with us until the conversion is done.\"), ewe.ui.FormBase.OKB).execute(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2818/buggy-version/src.CacheWolf.Profile.java", "BodyUseAPI": [], "Fixed commit": "02c67ce5c2b44f2e19094f1a2b54baafd927f2a4", "Url": "https://api.github.com/repos/cachewolf/cachewolf", "Date": "2009-05-26T19:19:57Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xyz.service.data.ConnectionInfo.fromJSONString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (connInfo == null) { com.xyz.service.mosqproxy.client.MosqProxyClient.logger.warn(\"[lid:{}][{}] cann't connection!\", logIndex, caller); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2040/buggy-version/src.com.xyz.service.mosqproxy.client.MosqProxyClient.java", "BodyUseAPI": [], "Fixed commit": "55dce326c29d126df6d16e127f029628f6e0d7a2", "Url": "https://api.github.com/repos/houjixin/mosqProxyJar", "Date": "2017-08-09T02:55:11Z"},
{"Line": "=>692", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((yDiff) > 0) || ((java.lang.Math.abs(yDiff)) < (touchSlop))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5306/buggy-version/library.src.main.java.com.ajguan.library.EasyRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "496b474fcce299a7e002d15f5d9e3f0c44cfb4c0", "Url": "https://api.github.com/repos/anzaizai/EasyRefreshLayout", "Date": "2017-03-27T03:17:39Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((autoShootCheck) != null) { autoShootCheck.addListener(new com.badlogic.gdx.scenes.scene2d.utils.ChangeListener() { @java.lang.Override public void changed(uk.co.redfruit.gdx.skyisfalling.screens.ChangeEvent event, com.badlogic.gdx.scenes.scene2d.Actor actor) { prefs.autoShoot = autoShootCheck.isChecked(); prefs.save(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3904/buggy-version/core.src.uk.co.redfruit.gdx.skyisfalling.screens.OptionsScreen.java", "BodyUseAPI": [], "Fixed commit": "7c354065152eac9b70cff5ed3479e460c8a489b6", "Url": "https://api.github.com/repos/phunni/SkyIsFalling", "Date": "2016-10-07T13:59:24Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((boxes) == null) || ((pos.across) < 0)) || ((pos.across) >= (boxes.length))) return '\\u0000';", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3450/buggy-version/app.src.main.java.com.totsp.crossword.view.BoardEditText.java", "BodyUseAPI": [], "Fixed commit": "72ebb09d8c61c682dd5c309765cb149352a15308", "Url": "https://api.github.com/repos/yourealwaysbe/shortyz", "Date": "2015-04-10T07:15:59Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((boxes) == null) || ((pos.across) < 0)) || ((pos.across) >= (boxes.length))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3450/buggy-version/app.src.main.java.com.totsp.crossword.view.BoardEditText.java", "BodyUseAPI": [], "Fixed commit": "72ebb09d8c61c682dd5c309765cb149352a15308", "Url": "https://api.github.com/repos/yourealwaysbe/shortyz", "Date": "2015-04-10T07:15:59Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getGroupCount()) == 0) return convertView;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4509/buggy-version/app.src.main.java.in.andres.kandroid.DashProjectsAdapter.java", "BodyUseAPI": [], "Fixed commit": "0777f3be93b551c1d1f210398ea3e6156986250d", "Url": "https://api.github.com/repos/andresth/Kandroid", "Date": "2017-04-21T23:06:47Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((e.getFirebaseId()) == null) { e.setFirebaseId(d.getKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8737/buggy-version/app.src.main.java.com.BUddy.android.SearchFragment.java", "BodyUseAPI": ["com.BUddy.android.BUEvent.setFirebaseId(d.getKey())"], "Fixed commit": "5334cc862b8d81b4492c43e7e720d519a8181b19", "Url": "https://api.github.com/repos/kolike92/final-project", "Date": "2016-12-04T17:11:20Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.linkedin.camus.etl.kafka.common.EtlRequest, com.linkedin.camus.etl.kafka.common.EtlKey>.get(com.linkedin.camus.etl.kafka.common.EtlRequest)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (key == null) { request.setOffset(((request.getEarliestOffset()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5698/buggy-version/camus-etl-kafka.src.main.java.com.linkedin.camus.etl.kafka.mapred.EtlInputFormat.java", "BodyUseAPI": [], "Fixed commit": "7add395f0e7171f466343d50dee4344890cd411e", "Url": "https://api.github.com/repos/bbaugher/camus", "Date": "2013-11-25T20:59:09Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mScreenShotBitmap) != null) && (!(mScreenShotBitmap.isRecycled()))) mScreenShotBitmap.recycle();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/910/buggy-version/src.com.way.screenshot.TakeScreenshotService.java", "BodyUseAPI": ["android.graphics.Bitmap.recycle()"], "Fixed commit": "f86c073fac632c734920a99de5c69c8f93dd7a6e", "Url": "https://api.github.com/repos/way1989/TeleCine", "Date": "2015-10-09T00:51:07Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mImageReader) != null) mImageReader.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/910/buggy-version/src.com.way.screenshot.TakeScreenshotService.java", "BodyUseAPI": [], "Fixed commit": "f86c073fac632c734920a99de5c69c8f93dd7a6e", "Url": "https://api.github.com/repos/way1989/TeleCine", "Date": "2015-10-09T00:51:07Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mProjection) != null) mProjection.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/910/buggy-version/src.com.way.screenshot.TakeScreenshotService.java", "BodyUseAPI": [], "Fixed commit": "f86c073fac632c734920a99de5c69c8f93dd7a6e", "Url": "https://api.github.com/repos/way1989/TeleCine", "Date": "2015-10-09T00:51:07Z"},
{"Line": "=>1238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ch == '\\u000b') { newcount += 4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3612/buggy-version/src.main.java.com.alibaba.fastjson.serializer.SerializeWriter.java", "BodyUseAPI": [], "Fixed commit": "4be3edb8a29d9eed5db65828ac6f2fb7ba7aa440", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2013-12-30T13:32:13Z"},
{"Line": "=>1297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ch == '\\u2028') { buf[(bufIndex++)] = '\\\\'; buf[(bufIndex++)] = 'u'; buf[(bufIndex++)] = com.alibaba.fastjson.parser.CharTypes.digits[((ch >>> 12) & 15)]; buf[(bufIndex++)] = com.alibaba.fastjson.parser.CharTypes.digits[((ch >>> 8) & 15)]; buf[(bufIndex++)] = com.alibaba.fastjson.parser.CharTypes.digits[((ch >>> 4) & 15)]; buf[(bufIndex++)] = com.alibaba.fastjson.parser.CharTypes.digits[(ch & 15)]; valueEnd += 5; }else { buf[(bufIndex++)] = ch; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3612/buggy-version/src.main.java.com.alibaba.fastjson.serializer.SerializeWriter.java", "BodyUseAPI": [], "Fixed commit": "4be3edb8a29d9eed5db65828ac6f2fb7ba7aa440", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2013-12-30T13:32:13Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.tuple.Pair<java.lang.Integer, java.lang.Integer>.getRight()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (stressIndex >= (str.length)) { ru.gopstop.bot.engine.stress.WordStressMap.LOGGER.warn((((\"WEIRD BUG \" + (new java.lang.String(str))) + \" - \") + stressIndex)); return new java.lang.String(str); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2091/buggy-version/src.main.java.ru.gopstop.bot.engine.stress.WordStressMap.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.warn(java.lang.String)"], "Fixed commit": "107288c064912e9d3d6d9598a3769a186e48140c", "Url": "https://api.github.com/repos/SammyVimes/gopstopbot", "Date": "2016-08-01T18:17:39Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(folder.exists())) { folder.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6658/buggy-version/src-pos.com.openbravo.pos.forms.StartPOS.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "837ea6a59fab64b727aab74443c4e525cbf2b97b", "Url": "https://api.github.com/repos/nordpos/nordpos", "Date": "2014-11-27T11:37:52Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(map.containsKey(x))) { map.put(x, y); }else { if (y < (map.get(x))) { map.put(x, y); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4779/buggy-version/tetris.Piece.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.Integer>.put(int,int)", "java.util.Map<java.lang.Integer, java.lang.Integer>.put(int,int)", "java.util.Map<java.lang.Integer, java.lang.Integer>.get(int)"], "Fixed commit": "63cf9a8ee5354cdc0af409335e05a01280b31c1e", "Url": "https://api.github.com/repos/britlovefan/TetrisGame", "Date": "2016-04-18T02:55:57Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((playerChoice[1]) != 0) { com.company.Game.playGame(playerChoice[0], playerChoice[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7754/buggy-version/src.com.company.Game.java", "BodyUseAPI": ["com.company.Game.playGame(int,int)"], "Fixed commit": "b838776e5628a6db5bd94a20214bc2d682e100de", "Url": "https://api.github.com/repos/Christopher154/The-Best-Game-Ever", "Date": "2017-10-03T13:32:59Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mListingsStackProvider.getTopListing().getSubCategories().isEmpty()) { mListingsStackProvider.removeListing(); removeToolbarText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7292/buggy-version/app.src.main.java.nz.co.cjc.base.features.categoriesandlistings.logic.CategoriesAndListingsViewLogic.java", "BodyUseAPI": ["nz.co.cjc.base.features.listingsstack.providers.contract.ListingsStackProvider.removeListing()"], "Fixed commit": "4f894e42ced8b20324dc8c59bad4a8bb030bea09", "Url": "https://api.github.com/repos/chrisjcooper/project", "Date": "2016-05-07T05:38:16Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (header) { if (((noBitplanes == (com.sync.PNGconv.ST_HIGH)) || (noBitplanes == (com.sync.PNGconv.ST_MEDIUM))) || (noBitplanes == (com.sync.PNGconv.ST_LOW))) { headerlength = 17; }else { headerlength = 1 << noBitplanes; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7090/buggy-version/src.com.sync.PNGconv.java", "BodyUseAPI": [], "Fixed commit": "87561fedfe32fd5a6b74f30cbd350d0337410b7f", "Url": "https://api.github.com/repos/troed/PNGconv", "Date": "2015-08-22T15:30:36Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CountriesFetcher.CountryList.indexOfIso(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (defaultIdx < 0) defaultIdx = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5706/buggy-version/intlphoneinput.src.main.java.net.rimoto.intlphoneinput.IntlPhoneInput.java", "BodyUseAPI": [], "Fixed commit": "f4163d9de5d8658b10c988941f71094c7474dc4a", "Url": "https://api.github.com/repos/jarrodholliday/IntlPhoneInput", "Date": "2016-11-07T19:43:57Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (throwable instanceof java.io.FileNotFoundException) { throw new org.apache.hadoop.hbase.DoNotRetryIOException(throwable); }else if (throwable instanceof java.io.IOException) { throw ((java.io.IOException) (throwable)); }else { throw new java.io.IOException(throwable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7402/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HMobStore.java", "BodyUseAPI": [], "Fixed commit": "0c6e20570af00d437ca29f008c323a77a66ca6e4", "Url": "https://api.github.com/repos/JingchengDu/hbase", "Date": "2017-05-15T06:57:23Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.cloud.datastore.Datastore.get(com.google.cloud.datastore.Key)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (entity == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6268/buggy-version/Datasource-GCP-Datastore.src.main.java.com.patrickwilson.ardm.datasource.gcp.datastore.GCPDatastoreDatasourceAdaptor.java", "BodyUseAPI": [], "Fixed commit": "946a4f83c5356c0c7a5cf5027e8bd2f866c07d94", "Url": "https://api.github.com/repos/patrickianwilson/AbstractDataRepositories", "Date": "2017-01-11T22:08:16Z"},
{"Line": "=>1847", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.isi.wings.ontapi.KBAPI.getClassOfInstance(edu.isi.wings.ontapi.KBObject)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (exprcls == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5882/buggy-version/planner.src.main.java.edu.isi.wings.workflow.template.api.impl.kb.TemplateKB.java", "BodyUseAPI": [], "Fixed commit": "e8ad75d1ccb50f25aaa55caf79573e52924f7cca", "Url": "https://api.github.com/repos/KnowledgeCaptureAndDiscovery/wings", "Date": "2015-08-19T23:32:45Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.opendaylight.yangtools.yang.data.impl.codec.xml.XmlStreamUtils.hasAttributes(data)) { writer.writeStartElement(pfx, qname.getLocalName(), ns); org.opendaylight.yangtools.yang.data.impl.codec.xml.RandomPrefix randomPrefix = new org.opendaylight.yangtools.yang.data.impl.codec.xml.RandomPrefix(); org.opendaylight.yangtools.yang.data.impl.codec.xml.XmlStreamUtils.writeAttributes(writer, ((org.opendaylight.yangtools.yang.data.api.AttributesContainer) (data)), randomPrefix); writer.writeEndElement(); }else { writer.writeEmptyElement(pfx, qname.getLocalName(), ns); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7309/buggy-version/yang.yang-data-impl.src.main.java.org.opendaylight.yangtools.yang.data.impl.codec.xml.XmlStreamUtils.java", "BodyUseAPI": [], "Fixed commit": "d86cd691d7818ac31bd3943a31b22ac55d6b0e31", "Url": "https://api.github.com/repos/opendaylight/yangtools", "Date": "2014-09-05T22:27:51Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((postSectionElement.subtitle) != null) postSectionElement.subtitle.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4590/buggy-version/android.src.com.matji.sandwich.adapter.PostSectionedAdapter.java", "BodyUseAPI": ["android.widget.TextView.setVisibility(View.GONE)"], "Fixed commit": "57c3f459a1136494281469d25155cc183699de80", "Url": "https://api.github.com/repos/bi2one/Matji_Sandwich", "Date": "2011-08-25T12:10:26Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (generateDataUriCss) { try { optimizer.generateDataUriCss(toDir); } catch (java.io.IOException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6586/buggy-version/src.com.googlecode.pngtastic.ant.PngOptimizerTask.java", "BodyUseAPI": [], "Fixed commit": "da0ca99c26a7a8511cacec3e6e6b8d78daf317f6", "Url": "https://api.github.com/repos/depsypher/pngtastic", "Date": "2013-07-13T01:12:52Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ref.updater.gameState) == (shared.Updater.GameState.PLAY)) { ref.updater.send(\"<pause true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7645/buggy-version/EliteEngine.src.game.Input.java", "BodyUseAPI": [], "Fixed commit": "e60dc483ef6e0af1737a4d104b8e7814462aca29", "Url": "https://api.github.com/repos/Silverjust/Elite-Engine", "Date": "2015-06-13T18:02:00Z"},
{"Line": "=>802", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lockManager) != null) { lockManager.setNumberOfBuckets(hashTableBuckets.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4196/buggy-version/src.main.org.deidentifier.arx.framework.check.groupify.HashGroupify.java", "BodyUseAPI": [], "Fixed commit": "7fae3c7b3e1f5fa7f756b84181211f1119b71b28", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-10-21T18:06:49Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["suadb.record.CID.dimensionValues()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(newCID.equals(curCID))) { moveToCid(new suadb.record.CID(newCID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8928/buggy-version/suadb-server.src.suadb.query.afl.BetweenScan.java", "BodyUseAPI": ["suadb.query.afl.BetweenScan.moveToCid(suadb.record.CID)"], "Fixed commit": "297e6763b9370da3930c7ddcb565452e3f7139f8", "Url": "https://api.github.com/repos/RonyK/SuaDB", "Date": "2016-12-11T21:32:50Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["description.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(itemDescription))) { itemDate += \",\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3414/buggy-version/ToDoList_Final.app.src.main.java.com.rpruitt.ToDoList.ToDoListActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "aee40c0e31f28ae374e3b1a906a4a75403da8a79", "Url": "https://api.github.com/repos/ronaldrpruitt/ucla-android-homework", "Date": "2016-06-05T21:22:31Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bingo.lang.json.JSONObject.map()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((map.entrySet().size()) == 1) && (map.keySet().iterator().next().equals(\"d\"))) { map = ((java.util.Map<java.lang.String, java.lang.Object>) (map.get(\"d\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/713/buggy-version/odata-core.src.main.java.bingo.odata.format.json.JsonEntityReader.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "ce1e36e6609b4d4e7a231e0bfe1bdfd07db756c6", "Url": "https://api.github.com/repos/bingo-open-source/bingo-odata", "Date": "2013-06-19T03:16:59Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bingo.meta.edm.EdmProperty.getType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (type.isSimple()) { if (entityType.getKeys().toSet().contains(name)) { builder.setKey(new bingo.odata.model.ODataKeyImpl(value)); }else builder.addProperty(name, bingo.odata.format.json.JsonReaderUtils.readValue(type.asSimple(), value)); }else { throw bingo.odata.ODataErrors.notImplemented(\"complex type not implemented\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/713/buggy-version/odata-core.src.main.java.bingo.odata.format.json.JsonEntityReader.java", "BodyUseAPI": ["bingo.odata.model.ODataEntityBuilder.addProperty(java.lang.String,bingo.odata.format.json.JsonReaderUtils.readValue(type.asSimple(), value))", "bingo.odata.format.json.JsonReaderUtils.readValue(type.asSimple(),java.lang.Object)", "bingo.meta.edm.EdmType.asSimple()"], "Fixed commit": "ce1e36e6609b4d4e7a231e0bfe1bdfd07db756c6", "Url": "https://api.github.com/repos/bingo-open-source/bingo-odata", "Date": "2013-06-19T03:16:59Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((x > 0) && (y > 0)) croppedBmp = android.graphics.Bitmap.createBitmap(b, x, y, defaultDial.getWidth(), defaultDial.getHeight()); else croppedBmp = b;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1326/buggy-version/src.com.xlythe.minecraftclock.ClockWidget.java", "BodyUseAPI": ["android.graphics.Bitmap.createBitmap(android.graphics.Bitmap,int,int,defaultDial.getWidth(),defaultDial.getHeight())"], "Fixed commit": "8b69b2c2b1c4fcb27c8de4b704f7a4dd84cf9afc", "Url": "https://api.github.com/repos/Xlythe/MinecraftClock", "Date": "2013-04-24T00:27:08Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (damage == (-1)) damage = 8;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5749/buggy-version/ItemChocoboFeather.java", "BodyUseAPI": [], "Fixed commit": "8af0197b14f7a03aec04958bd2b55cd40698b166", "Url": "https://api.github.com/repos/ArnoSaxena/chococraft", "Date": "2012-05-17T16:13:01Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(com.example.annizhang.bitlyapp.ScanLink.possible_url.contains(\"http://\"))) && (!(com.example.annizhang.bitlyapp.ScanLink.possible_url.contains(\"https://\")))) { com.example.annizhang.bitlyapp.ScanLink.scanned_link = \"http://\" + (com.example.annizhang.bitlyapp.ScanLink.possible_url.toLowerCase()); }else { com.example.annizhang.bitlyapp.ScanLink.scanned_link = com.example.annizhang.bitlyapp.ScanLink.possible_url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5953/buggy-version/app.src.main.java.com.example.annizhang.bitlyapp.ScanLink.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "3e0e4d4671d93ffc33324368aa9349561f342e4c", "Url": "https://api.github.com/repos/BitlyHackWeek/BitlyApp", "Date": "2017-07-27T18:08:57Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.uragan.DAO.GameDAOImpl.getById(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (game != null) { org.hibernate.Hibernate.initialize(game.getTickets()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7918/buggy-version/src.main.java.com.uragan.DAO.GameDAOImpl.java", "BodyUseAPI": ["org.hibernate.Hibernate.initialize(game.getTickets())", "com.uragan.model.Game.getTickets()"], "Fixed commit": "0d1e35160033d3b8e9c5f9941f58ef822c0b68c3", "Url": "https://api.github.com/repos/YuraLubinec/uragan_tickets", "Date": "2017-02-02T12:16:02Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.type) == null) this.type = ((org.ow2.easywsdl.schema.api.Type) (this.parent.getSchema().getType(new javax.xml.namespace.QName(this.getSchema().getTargetNamespace(), this.model.getType().getLocalPart()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/531/buggy-version/EasySchema_2.3.src.org.ow2.easywsdl.schema.impl.ElementImpl.java", "BodyUseAPI": [], "Fixed commit": "687206f77a611ab5624e21ee1db96b26daa76060", "Url": "https://api.github.com/repos/vkumar-adeptia/EasySchema", "Date": "2015-03-17T10:56:52Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (permissions.containsKey(role)) { permissions.get(role).add(c); }else { permissions.add(role, c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4090/buggy-version/src.main.java.com.marklogic.client.ext.util.DefaultDocumentPermissionsParser.java", "BodyUseAPI": ["permissions.get(role).add(com.marklogic.client.io.DocumentMetadataHandle.Capability)", "com.marklogic.client.io.DocumentMetadataHandle.DocumentPermissions.add(java.lang.String,com.marklogic.client.io.DocumentMetadataHandle.Capability)", "com.marklogic.client.io.DocumentMetadataHandle.DocumentPermissions.get(java.lang.String)"], "Fixed commit": "0cd2c08488af8f959a578cff79511a409d44240b", "Url": "https://api.github.com/repos/marklogic-community/ml-javaclient-util", "Date": "2017-06-13T15:23:18Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.componentPositions) != null) { builder.addAll(this.componentPositions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2757/buggy-version/core.src.main.java.org.apache.calcite.sql.SqlIdentifier.java", "BodyUseAPI": [], "Fixed commit": "eba9342fdd20814225158658d38dfaef7d49a8d4", "Url": "https://api.github.com/repos/vkorukanti/calcite", "Date": "2015-03-20T17:29:28Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.calcite.util.Util.last(names).startsWith(\"*\")) { return org.apache.calcite.sql.validate.SqlMonotonicity.NOT_MONOTONIC; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2757/buggy-version/core.src.main.java.org.apache.calcite.sql.SqlIdentifier.java", "BodyUseAPI": [], "Fixed commit": "eba9342fdd20814225158658d38dfaef7d49a8d4", "Url": "https://api.github.com/repos/vkorukanti/calcite", "Date": "2015-03-20T17:29:28Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BlackKing.checked) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1904/buggy-version/src.chessgame.GameFrame.java", "BodyUseAPI": [], "Fixed commit": "cfdc277675c52d365228eb2147190d43a4d3849c", "Url": "https://api.github.com/repos/AlyMohamedAly/ChessGame", "Date": "2017-10-26T20:05:20Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (WhiteKing.checked) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1904/buggy-version/src.chessgame.GameFrame.java", "BodyUseAPI": [], "Fixed commit": "cfdc277675c52d365228eb2147190d43a4d3849c", "Url": "https://api.github.com/repos/AlyMohamedAly/ChessGame", "Date": "2017-10-26T20:05:20Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.ai.myplugin.sensor.LocationSensor.LOCATION.equals(string)) string = java.net.URLEncoder.encode(string);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2741/buggy-version/src.main.java.com.ai.myplugin.sensor.LocationSensor.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String)"], "Fixed commit": "66f0665eb4ad9d40a8cd322971372b7639c7b1a1", "Url": "https://api.github.com/repos/pizuricv/BayesAppPluginProject", "Date": "2014-01-11T17:43:56Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.ieeta.anonymouspatientdata.core.impl.AnonDatabase.getPatientNameByPatientMapId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (patientName.isPresent()) { hM.put(\"PatientName\", patientName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2313/buggy-version/src.main.java.pt.ieeta.anonymouspatientdata.core.impl.ResultConverter.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,java.util.Optional<java.lang.String>)"], "Fixed commit": "7ea8b624e22122f5bb2b2d83289359ed9ca17bc3", "Url": "https://api.github.com/repos/jorgeMFS/AnonymousWrapper", "Date": "2016-10-07T14:42:06Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hM.get(\"PatientID\")) == null) return searchReasult;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2313/buggy-version/src.main.java.pt.ieeta.anonymouspatientdata.core.impl.ResultConverter.java", "BodyUseAPI": [], "Fixed commit": "7ea8b624e22122f5bb2b2d83289359ed9ca17bc3", "Url": "https://api.github.com/repos/jorgeMFS/AnonymousWrapper", "Date": "2016-10-07T14:42:06Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.ieeta.anonymouspatientdata.core.impl.AnonDatabase.getPatientNameByPatientMapId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (patientName.isPresent()) { hM.put(\"PatientID\", patientName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2313/buggy-version/src.main.java.pt.ieeta.anonymouspatientdata.core.impl.ResultConverter.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,java.util.Optional<java.lang.String>)"], "Fixed commit": "7ea8b624e22122f5bb2b2d83289359ed9ca17bc3", "Url": "https://api.github.com/repos/jorgeMFS/AnonymousWrapper", "Date": "2016-10-07T14:42:06Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((x < 0) || (x > (level.map.width))) || (y < 0)) || (y > (level.map.height))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1546/buggy-version/Roguish.src.com.me.Roguish.Controller.LevelController.java", "BodyUseAPI": [], "Fixed commit": "9e88461c1913b46e1cacbec7e7ff66e84676a364", "Url": "https://api.github.com/repos/Diolex/Roguish", "Date": "2013-03-19T02:41:14Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.datastax.driver.core.policies.MetricsUtil.hostMetricName(java.lang.String,com.datastax.driver.core.policies.Host)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(metrics.getRegistry().getNames().contains(metricName))) { com.datastax.driver.core.policies.LatencyAwarePolicy.logger.info((\"Adding gauge \" + metricName)); metrics.getRegistry().register(metricName, new com.codahale.metrics.Gauge<java.lang.Long>() { @java.lang.Override public java.lang.Long getValue() { com.datastax.driver.core.policies.LatencyAwarePolicy.TimestampedAverage latency = latencyTracker.latencyOf(host); return latency == null ? -1 : latency.average; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5305/buggy-version/driver-core.src.main.java.com.datastax.driver.core.policies.LatencyAwarePolicy.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String)", "metrics.getRegistry().register(java.lang.String,com.codahale.metrics.Gauge<java.lang.Long>)", "com.datastax.driver.core.policies.Metrics.getRegistry()"], "Fixed commit": "dd1d2369a45bd8f54a1efcd2bf7e947fab62ad23", "Url": "https://api.github.com/repos/datastax/java-driver", "Date": "2017-11-10T00:08:33Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPrivateCount()) != 0) { de.mpg.imeji.presentation.util.BeanHelper.info(sessionBean.getMessage(\"album_Private_Content\").replace(\"XXX_COUNT_XXX\", ((getPrivateCount()) + \"\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7075/buggy-version/src.main.java.de.mpg.imeji.presentation.album.AlbumBean.java", "BodyUseAPI": [], "Fixed commit": "44fd5a007cd5f2dd2bccb32863e845ed113eeab5", "Url": "https://api.github.com/repos/imeji-community/imeji", "Date": "2014-07-29T08:13:37Z"},
{"Line": "=>1431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count) > 0) com.serotonin.m2m2.db.dao.DataPointDao.clearPointHierarchyCache();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1433/buggy-version/Core.src.com.serotonin.m2m2.db.dao.DataPointDao.java", "BodyUseAPI": [], "Fixed commit": "7fed610fa241b72f797c697b9daca02350e73697", "Url": "https://api.github.com/repos/infiniteautomation/ma-core-public", "Date": "2017-07-20T16:37:35Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.ignite.configuration.IgniteConfiguration.getMarshaller()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(marsh instanceof org.apache.ignite.marshaller.portable.PortableMarshaller)) throw new org.apache.ignite.IgniteException((((\"Unsupported marshaller (only \" + (org.apache.ignite.marshaller.portable.PortableMarshaller.class.getName())) + \" can be used when running Apache Ignite.NET): \") + (marsh.getClass().getName()))); else if (((org.apache.ignite.marshaller.portable.PortableMarshaller) (marsh)).isCompactFooter()) throw new org.apache.ignite.IgniteException(((\"Unsupported \" + (org.apache.ignite.marshaller.portable.PortableMarshaller.class.getName())) + \" mode. CompactFooters can't be used when running Apache Ignite.NET.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4773/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.platform.dotnet.PlatformDotNetConfigurationClosure.java", "BodyUseAPI": ["marsh.getClass().getName()", "org.apache.ignite.marshaller.Marshaller.getClass()"], "Fixed commit": "ef948d5a9aae97c0b31eb9c5fb65d1d2efd25ee7", "Url": "https://api.github.com/repos/ptupitsyn/ignite", "Date": "2015-11-13T10:25:19Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.deeplearning4j.nn.updater.GradientUpdater.stateSizeForInputSize(entry.getValue().length())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (thisSize == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2814/buggy-version/deeplearning4j-nn.src.main.java.org.deeplearning4j.nn.updater.LayerUpdater.java", "BodyUseAPI": [], "Fixed commit": "f36ad8626a843e71ed85cfee66b9582bf3162b5d", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2016-09-08T07:17:41Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["routeDetail.stops.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (stopDetail.type.equals(VRPConstants.DEPOT)) { if (i == 0) { stopDetail.arrivalTime = stopDetail.leaveTime; }else { stopDetail.leaveTime = stopDetail.arrivalTime; } stopDetail.waitingTime = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6250/buggy-version/com.opendoorlogistics.jsprit.src.com.opendoorlogistics.components.jsprit.CalculateRouteDetailsV2.java", "BodyUseAPI": [], "Fixed commit": "e5028c790ac066ad088db4239e18ea32b6cdf57a", "Url": "https://api.github.com/repos/PGWelch/com.opendoorlogistics", "Date": "2014-11-20T14:01:40Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sw == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3995/buggy-version/src.main.java.net.floodlightcontroller.core.internal.RoleChanger.java", "BodyUseAPI": [], "Fixed commit": "388f09b5602baf55111277601c078a65b89746e1", "Url": "https://api.github.com/repos/geddings/floodlight", "Date": "2013-01-02T19:33:17Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (message.getBody().equals(IcapMessageElementEnum.REQBODY)) { message.getHttpRequest().addHeader(name, trailer.getHeader(name)); }else if (message.getBody().equals(IcapMessageElementEnum.RESBODY)) { message.getHttpResponse().addHeader(name, trailer.getHeader(name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8135/buggy-version/src.main.java.ch.mimo.netty.handler.codec.icap.IcapChunkAggregator.java", "BodyUseAPI": ["ch.mimo.netty.handler.codec.icap.IcapMessage.getHttpRequest()", "ch.mimo.netty.handler.codec.icap.IcapMessage.getBody()", "ch.mimo.netty.handler.codec.icap.IcapMessage.getHttpResponse()", "message.getBody().equals(IcapMessageElementEnum.RESBODY)", "message.getHttpRequest().addHeader(java.lang.String,trailer.getHeader(name))", "message.getHttpResponse().addHeader(java.lang.String,trailer.getHeader(name))"], "Fixed commit": "62e23b16776be8e7b4a7dc05e32d2b60ca5f141d", "Url": "https://api.github.com/repos/jmimo/netty-icap", "Date": "2011-04-17T09:58:15Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(directory.exists())) { directory.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8389/buggy-version/app.src.main.java.de.unidue.mse.thewesleycrusher.schnitzeljagd.StartActivity.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "1c97d5ea75228262ba5f0da21b8e3c1fa4ea6fab", "Url": "https://api.github.com/repos/leifii/Schnitzeljagd", "Date": "2017-07-18T16:05:22Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mwController) != null) unbindDevice();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2684/buggy-version/app.src.main.java.it.vibwear.app.VibWearActivity.java", "BodyUseAPI": [], "Fixed commit": "6e2f4b03679468685f34e3ee5cbbeae24a26c162", "Url": "https://api.github.com/repos/biospank/vibwear-studio", "Date": "2015-06-25T22:13:55Z"},
{"Line": "=>832", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((columnTypes[i]) == null) { throw new java.lang.IllegalArgumentException(java.lang.String.format(\"'%s' cannot be specified as column type\", types[i])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3877/buggy-version/src.main.java.com.treasure_data.td_import.prepare.PrepareConfiguration.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)"], "Fixed commit": "71adcf1c47ba48f58bbe5634ef574cd5caa11fd9", "Url": "https://api.github.com/repos/treasure-data/td-import-java", "Date": "2013-10-31T07:17:01Z"},
{"Line": "=>741", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (createGeneric) { key = new org.structr.core.property.GenericProperty(dbName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7936/buggy-version/structr-core.src.main.java.org.structr.core.EntityContext.java", "BodyUseAPI": [], "Fixed commit": "68438c9655c947a1f667c48912037ede6f4b7b14", "Url": "https://api.github.com/repos/structr/structr", "Date": "2013-02-08T12:15:11Z"},
{"Line": "=>765", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (createGeneric) { key = new org.structr.core.property.GenericProperty(jsonName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7936/buggy-version/structr-core.src.main.java.org.structr.core.EntityContext.java", "BodyUseAPI": [], "Fixed commit": "68438c9655c947a1f667c48912037ede6f4b7b14", "Url": "https://api.github.com/repos/structr/structr", "Date": "2013-02-08T12:15:11Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.structr.core.EntityContext.getPropertyKeyForJSONName(java.lang.Class,java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (key == null) { key = org.structr.core.EntityContext.getPropertyKeyForJSONName(sourceNodeType, org.structr.common.CaseHelper.toLowerCamelCase(rawName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7936/buggy-version/structr-rest.src.main.java.org.structr.rest.resource.Resource.java", "BodyUseAPI": [], "Fixed commit": "68438c9655c947a1f667c48912037ede6f4b7b14", "Url": "https://api.github.com/repos/structr/structr", "Date": "2013-02-08T12:15:11Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tabPanelHeaderBackground.getParent()) != null) ribbon.setComponentZOrder(tabPanelHeaderBackground, ((ribbon.getComponentCount()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2027/buggy-version/substance-flamingo.src.main.java.org.pushingpixels.substance.flamingo.ribbon.ui.SubstanceRibbonUI.java", "BodyUseAPI": ["org.pushingpixels.substance.flamingo.ribbon.ui.SubstanceRibbonUI.SubstanceRibbonLayout.setComponentZOrder(javax.swing.JComponent,((ribbon.getComponentCount()) - 1))"], "Fixed commit": "9accdbc8c661001bfecd4ee16645fb8d61367fdf", "Url": "https://api.github.com/repos/Icy-imaging/Icy-Insubstantial", "Date": "2014-07-18T16:34:14Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (escapeSlash) { replacementStr += escapeSlash(sel.content); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/9236/buggy-version/src.main.java.com.sandy.jnmaker.ui.helper.PopupEditMenu.java", "BodyUseAPI": [], "Fixed commit": "2d359b51c20cdc43591ac28c539091bf5111f5f0", "Url": "https://api.github.com/repos/deb-sandeep/JoveNotesMaker", "Date": "2016-01-05T12:52:58Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.PlayerDeathEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((deader.getInventory().getHelmet().getType()) == (org.bukkit.Material.WOOL)) { deader.getInventory().setHelmet(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5946/buggy-version/src.main.java.syam.flaggame.listener.FGPlayerListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.getInventory()", "deader.getInventory().setHelmet(<nulltype>)"], "Fixed commit": "cc2f1068505c2b2e1b62dd43e72dbda4e206ce4b", "Url": "https://api.github.com/repos/syamn/FlagGame", "Date": "2012-10-14T13:48:22Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getInventory().getHelmet().getType()) == (org.bukkit.Material.WOOL)) { player.getInventory().setHelmet(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5946/buggy-version/src.main.java.syam.flaggame.util.Actions.java", "BodyUseAPI": ["player.getInventory().setHelmet(<nulltype>)", "org.bukkit.entity.Player.getInventory()"], "Fixed commit": "cc2f1068505c2b2e1b62dd43e72dbda4e206ce4b", "Url": "https://api.github.com/repos/syamn/FlagGame", "Date": "2012-10-14T13:48:22Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user == null) { return (owner.getUser()) == null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7751/buggy-version/components.entity-access-rules.api.src.main.java.org.phenotips.data.permissions.internal.DefaultEntityAccess.java", "BodyUseAPI": [], "Fixed commit": "ce4d3f9aaaa641338e02665ae331fc1620899e67", "Url": "https://api.github.com/repos/phenotips/phenotips", "Date": "2017-09-22T20:31:55Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.entity) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7751/buggy-version/components.entity-access-rules.api.src.main.java.org.phenotips.data.permissions.internal.DefaultEntityAccess.java", "BodyUseAPI": [], "Fixed commit": "ce4d3f9aaaa641338e02665ae331fc1620899e67", "Url": "https://api.github.com/repos/phenotips/phenotips", "Date": "2017-09-22T20:31:55Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dim == 1) { if (player.isEntityAlive()) { worldObj.spawnEntityInWorld(player); player.setLocationAndAngles(((xCoord) + 0.5), yCoord, ((zCoord) + 0.5), (((face) - 2) * 90.0F), 0.0F); worldObj.updateEntityWithOptionalForce(player, false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8999/buggy-version/sync.common.tileentity.TileEntityDualVertical.java", "BodyUseAPI": [], "Fixed commit": "ebe5fb8041ea42713c4e7f94732ccf888880a4c1", "Url": "https://api.github.com/repos/iChun/Sync", "Date": "2013-12-14T19:17:11Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((scopes != null) && (!(scopes.isEmpty()))) { uriBuilder.queryParam(\"scope\", scopes.stream().collect(java.util.stream.Collectors.joining(org.zalando.planb.provider.ScopeProperties.SPACE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/546/buggy-version/src.main.java.org.zalando.planb.provider.realms.UpstreamUserRealm.java", "BodyUseAPI": ["org.springframework.web.util.UriComponentsBuilder.queryParam(java.lang.String,java.lang.Object)", "java.util.Set<java.lang.String>.stream()", "java.util.stream.Stream<java.lang.String>.collect(java.util.stream.Collector<java.lang.CharSequence, ?, java.lang.String>)"], "Fixed commit": "023ee7515c86843bbae2e0a2331b23fa1999b0ee", "Url": "https://api.github.com/repos/zalando-stups/planb-provider", "Date": "2016-03-15T09:59:00Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(IdentityEventConstants.EventProperty.USER_STORE_MANAGER)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(userStoreManager.isReadOnly())) { userStoreManager.setUserClaimValues(userName, newClaims, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6066/buggy-version/components.org.wso2.carbon.identity.account.lock.src.main.java.org.wso2.carbon.identity.account.lock.handler.AccountLockHandler.java", "BodyUseAPI": ["org.wso2.carbon.user.core.UserStoreManager.setUserClaimValues(java.lang.String,java.util.Map<java.lang.String, java.lang.String>,<nulltype>)"], "Fixed commit": "8f46d4cbaec4c9929d5ae3a10921738aa87eb944", "Url": "https://api.github.com/repos/IsuraD/identity-event-handler-account-lock", "Date": "2016-07-01T22:33:55Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.graphaware.module.timetree.api.TimedEvents.attachEvent(com.graphaware.module.timetree.api.Node,com.graphaware.module.timetree.api.DynamicRelationshipType.withName(event.getEvent().getRelationshipType()),com.graphaware.module.timetree.domain.TimeInstant.fromValueObject(event.getTimeInstant()))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (attached) { response.setStatus(HttpStatus.CREATED.value()); }else { response.setStatus(HttpStatus.OK.value()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5404/buggy-version/src.main.java.com.graphaware.module.timetree.api.TimedEventsApi.java", "BodyUseAPI": [], "Fixed commit": "169481095bc30cb0332b843350f7a46c54ebcacd", "Url": "https://api.github.com/repos/leusonmario/neo4j-timetree", "Date": "2015-02-15T17:45:24Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.orthus.ATLChecker.ATLChecker.PackName) != \"Default\") { com.orthus.ATLChecker.ATLChecker.LatestVersion = com.orthus.ATLChecker.Json.JsonReader.main(com.orthus.ATLChecker.ATLChecker.PackName); }else { com.orthus.ATLChecker.ATLChecker.LatestVersion = com.orthus.ATLChecker.ATLChecker.LocalVersion; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5336/buggy-version/src.main.java.com.orthus.ATLChecker.ATLChecker.java", "BodyUseAPI": [], "Fixed commit": "18cce0840bb9d2ccdfe76a77fd315885abe828a5", "Url": "https://api.github.com/repos/nodecraft/ATLChecker", "Date": "2015-03-30T23:41:23Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.user.client.ui.Widget.getOffsetWidth()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (width > 0) frame.setWidth((width + \"px\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4835/buggy-version/jbpm-form-modeler-panels.jbpm-form-modeler-editor.jbpm-form-modeler-editor-client.src.main.java.org.jbpm.formModeler.editor.client.editors.FormModelerPanelViewImpl.java", "BodyUseAPI": ["com.google.gwt.user.client.ui.Frame.setWidth(java.lang.String)"], "Fixed commit": "fdae3ff77db81ff8446a7be54dfce33a0749ff30", "Url": "https://api.github.com/repos/droolsjbpm/jbpm-form-modeler", "Date": "2014-03-18T16:05:53Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (height > 0) frame.setHeight((height + \"px\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4835/buggy-version/jbpm-form-modeler-panels.jbpm-form-modeler-editor.jbpm-form-modeler-editor-client.src.main.java.org.jbpm.formModeler.editor.client.editors.FormModelerPanelViewImpl.java", "BodyUseAPI": ["com.google.gwt.user.client.ui.Frame.setHeight(java.lang.String)"], "Fixed commit": "fdae3ff77db81ff8446a7be54dfce33a0749ff30", "Url": "https://api.github.com/repos/droolsjbpm/jbpm-form-modeler", "Date": "2014-03-18T16:05:53Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((searchAI.path.size()) > 1) { searchAI.path.removeLast(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6256/buggy-version/common.buildcraft.robots.boards.BoardRobotPlanter.java", "BodyUseAPI": ["searchAI.path.removeLast()"], "Fixed commit": "4dfca53a35fd8c2a89006f968452450a36319bee", "Url": "https://api.github.com/repos/BuildCraft/BuildCraft", "Date": "2015-03-28T12:31:39Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getSession().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((order.getParcels().size()) == 0) { request.getSession().setAttribute(\"ErrorMessage\", \"There is no parcels\"); response.sendRedirect(((request.getContextPath()) + \"/NewOrder\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2604/buggy-version/src.main.java.servlets.AddOrderServlet.java", "BodyUseAPI": [], "Fixed commit": "17fe0f392898d7330cf9d1f107c48e963c7387c0", "Url": "https://api.github.com/repos/NetCrackerTraining/StorkExpress", "Date": "2016-11-29T13:43:27Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.adaptive.tools.nibble.common.AbstractEmulator.getCurrentEmulator()) != null) { app = me.adaptive.tools.nibble.common.AbstractEmulator.getCurrentEmulator().getApp(); app.log(level, category, message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4379/buggy-version/adaptive-fx.adaptive-arp-fx-impl-nibble.src.main.java.me.adaptive.arp.impl.LoggingDelegate.java", "BodyUseAPI": [], "Fixed commit": "ae46b3430b7cc241570dd5e407bce84690f0b4b1", "Url": "https://api.github.com/repos/AdaptiveMe/adaptive-arp-javafx", "Date": "2015-05-20T11:12:01Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.adaptive.tools.nibble.common.AbstractEmulator.getCurrentEmulator()) != null) { app = me.adaptive.tools.nibble.common.AbstractEmulator.getCurrentEmulator().getApp(); app.log(level, \"GENERAL\", message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4379/buggy-version/adaptive-fx.adaptive-arp-fx-impl-nibble.src.main.java.me.adaptive.arp.impl.LoggingDelegate.java", "BodyUseAPI": [], "Fixed commit": "ae46b3430b7cc241570dd5e407bce84690f0b4b1", "Url": "https://api.github.com/repos/AdaptiveMe/adaptive-arp-javafx", "Date": "2015-05-20T11:12:01Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.server.MinecraftServer.getServer().getConfigurationManager()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (manager == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3431/buggy-version/src.main.java.chylex.hee.proxy.NotificationCommonProxy.java", "BodyUseAPI": [], "Fixed commit": "5de246de554375da2d11759320aa01184f9a2b62", "Url": "https://api.github.com/repos/chylex/Hardcore-Ender-Expansion", "Date": "2015-09-11T16:10:16Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((name.length()) > 16) name = name.substring(0, 16);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2635/buggy-version/src.me.libraryaddict.Hungergames.Managers.ScoreboardManager.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "528a167a5d8696db853565ba9333c80b68612e16", "Url": "https://api.github.com/repos/libraryaddict/LibsHungergames", "Date": "2013-05-05T02:46:00Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((string.length()) > 16) string = string.substring(0, 16);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2635/buggy-version/src.me.libraryaddict.Hungergames.Managers.ScoreboardManager.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "528a167a5d8696db853565ba9333c80b68612e16", "Url": "https://api.github.com/repos/libraryaddict/LibsHungergames", "Date": "2013-05-05T02:46:00Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((name.length()) > 16) name = name.substring(0, 16);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2635/buggy-version/src.me.libraryaddict.Hungergames.Managers.ScoreboardManager.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "528a167a5d8696db853565ba9333c80b68612e16", "Url": "https://api.github.com/repos/libraryaddict/LibsHungergames", "Date": "2013-05-05T02:46:00Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataSets != null) { dataSetIds = new java.util.ArrayList<>(); for (eu.dzhw.fdz.metadatamanagement.datasetmanagement.domain.DataSet dataSet : dataSets) { dataSetIds.add(dataSet.getId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8951/buggy-version/src.main.java.eu.dzhw.fdz.metadatamanagement.searchmanagement.documents.VariableSearchDocument.java", "BodyUseAPI": [], "Fixed commit": "c5d68ac618882475f396edbcaf87e0feb766a7b2", "Url": "https://api.github.com/repos/dzhw/metadatamanagement", "Date": "2016-12-08T14:09:51Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((resultText.endsWith(\"+\")) || (resultText.endsWith(\"-\"))) || (resultText.endsWith(\"x\"))) || (resultText.endsWith(\"/\"))) op = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7228/buggy-version/app.src.main.java.com.tea.licorne.rainbowcalculatrice.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "040bb937b5fe6fb67f56736a8aec3aefea734d81", "Url": "https://api.github.com/repos/LicorneArcEnCiel/RainbowCalculator", "Date": "2016-03-15T09:26:14Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r < 0) { r = p + r; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4852/buggy-version/parser.src.de.skuzzle.polly.parsing.util.Fields.java", "BodyUseAPI": [], "Fixed commit": "0b06ec78fe2a8937d567b07073ba34d049d70842", "Url": "https://api.github.com/repos/skuzzle/polly", "Date": "2012-05-31T07:17:42Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(active)) || ((totalWaitTime) == 0)) { pauseTime = startPause; }else { pauseTime = totalWaitTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2165/buggy-version/disturber-jar.src.main.java.com.dmytrobilokha.disturber.network.ConnectionRetryStateHolder.java", "BodyUseAPI": [], "Fixed commit": "6bcd87f82d107b0e7ceb35e000cdc417b2127d24", "Url": "https://api.github.com/repos/dmytro-bilokha/disturber", "Date": "2017-10-12T17:38:03Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (token.value().matches(\"\\\\s*\")) { }else { if (currentNode == null) { sxyml.SXYML.syntaxError(\"Text is not allowed outside of any element\", token); continue; } if (currentTextNode == null) { currentTextNode = currentNode.addTextNode(token.value()); }else { currentTextNode.pushContent(token.value()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4008/buggy-version/src.sxyml.SXYML.java", "BodyUseAPI": ["TokenReader.Token.value()", "sxyml.SXYML.syntaxError(java.lang.String,TokenReader.Token)", "sxyml.Element.addTextNode(token.value())", "sxyml.TextNode.pushContent(token.value())", "TokenReader.Token.value()"], "Fixed commit": "05aa0ef49615c846ee418d79c216a34aa43724db", "Url": "https://api.github.com/repos/sigurdsvela/SxyMarkup", "Date": "2013-11-18T21:53:12Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (caseReply.isEmpty()) { return \"Empty reply\"; }else { for (int i = 0; i < (selectedFollowUp.size()); i++) { javax.persistence.Query query = entityManager.createQuery(\"SELECT fu FROM FollowUp fu WHERE fu.followUpId = :followUpId\"); query.setParameter(\"followUpId\", selectedFollowUp.get(i).getFollowUpId()); java.util.List resultList2 = query.getResultList(); ejb.customer.entity.FollowUp fu = ((ejb.customer.entity.FollowUp) (resultList2.get(0))); fu.setFollowUpStatus(\"Solved\"); fu.setFollowUpSolution(caseReply); entityManager.flush(); } ejb.customer.entity.EnquiryCase ec = ((ejb.customer.entity.EnquiryCase) (resultList.get(0))); ec.setCaseReply(caseReply); if ((followUps.size()) == 0) { ec.setCaseStatus(\"Solved\"); }else { for (int a = 0; a < (followUps.size()); a++) { javax.persistence.Query query = entityManager.createQuery(\"SELECT fu FROM FollowUp fu WHERE fu.followUpId = :followUpId\"); query.setParameter(\"followUpId\", followUps.get(a).getFollowUpId()); java.util.List resultList3 = query.getResultList(); ejb.customer.entity.FollowUp f = ((ejb.customer.entity.FollowUp) (resultList3.get(0))); if (!(f.getFollowUpStatus().equalsIgnoreCase(\"Solved\"))) { ec.setCaseStatus(\"In Progress\"); break; }else { ec.setCaseStatus(\"Solved\"); } } } return \"Successful\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7313/buggy-version/RetailBankingSystem-ejb.src.java.ejb.customer.session.EnquirySessionBean.java", "BodyUseAPI": ["ejb.customer.entity.EnquiryCase.setCaseReply(java.lang.String)", "ejb.customer.entity.FollowUp.setFollowUpSolution(java.lang.String)"], "Fixed commit": "99daf9a5048f8c201bc93e9b339df5ad09dab4e5", "Url": "https://api.github.com/repos/HanFW/waves", "Date": "2016-10-16T02:16:40Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msg.equals(\"Empty reply\")) { message = new javax.faces.application.FacesMessage(javax.faces.application.FacesMessage.SEVERITY_ERROR, \"Please do not leave reply empty\", \"Empty reply\"); context.addMessage(null, message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7313/buggy-version/RetailBankingSystem-war.src.java.managedbean.customer.employee.EnquiryManagerManagedBean.java", "BodyUseAPI": [], "Fixed commit": "99daf9a5048f8c201bc93e9b339df5ad09dab4e5", "Url": "https://api.github.com/repos/HanFW/waves", "Date": "2016-10-16T02:16:40Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.reflect.Modifier.isAbstract(field.getModifiers())) { com.bretpatterson.schemagen.graphql.impl.GraphQLObjectMapper.LOGGER.info(\"Ignoring types {} abstract field {} \", type, field); return com.google.common.base.Optional.absent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1224/buggy-version/src.main.java.com.bretpatterson.schemagen.graphql.impl.GraphQLObjectMapper.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,java.lang.reflect.Type,java.lang.reflect.Field)"], "Fixed commit": "7fcc6a7988295d2558188d5f17dadfb8ac943e0f", "Url": "https://api.github.com/repos/bpatters/schemagen-graphql", "Date": "2016-09-03T14:23:33Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (newFields != null) { for (graphql.schema.GraphQLFieldDefinition f : newFields) { if (!(fieldNames.contains(f.getName()))) { fieldNames.add(f.getName()); fields.add(f); }else { com.bretpatterson.schemagen.graphql.impl.GraphQLObjectMapper.LOGGER.info(\"Ignoring duplicate field {} from type {}\", f.getName(), classItem.getName()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1224/buggy-version/src.main.java.com.bretpatterson.schemagen.graphql.impl.GraphQLObjectMapper.java", "BodyUseAPI": [], "Fixed commit": "7fcc6a7988295d2558188d5f17dadfb8ac943e0f", "Url": "https://api.github.com/repos/bpatters/schemagen-graphql", "Date": "2016-09-03T14:23:33Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.util.Arrays.equals(opcode, RequestPacket.readOpcode)) || (java.util.Arrays.equals(opcode, RequestPacket.writeOpcode))) { mode = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8452/buggy-version/src.IntermediateHost.java", "BodyUseAPI": [], "Fixed commit": "35fd281dcca19b54369742cd95102ec7540a7bb9", "Url": "https://api.github.com/repos/GabbyGenereux/SYSC3303", "Date": "2016-11-27T02:36:01Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["document.getText(previousLineRange).trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (text.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4633/buggy-version/src.main.java.codes.ai.snippet.IntentionExtractor.java", "BodyUseAPI": [], "Fixed commit": "06048b803c61ef1a57dac55a428f00b9383fd2cd", "Url": "https://api.github.com/repos/aicodes/idea-plugin", "Date": "2016-10-24T16:22:21Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mIPresenter) != null) { com.yydcdut.note.utils.PermissionUtils.permissionResult(mIPresenter, permissions, grantResults, requestCode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1497/buggy-version/app.src.main.java.com.yydcdut.note.mvp.v.BaseFragment.java", "BodyUseAPI": [], "Fixed commit": "8db08113e4d0e918d63dceb97cbb718c13b00744", "Url": "https://api.github.com/repos/yydcdut/PhotoNoter", "Date": "2016-01-07T04:42:08Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mIPresenter) != null) { com.yydcdut.note.utils.PermissionUtils.permissionResult(mIPresenter, permissions, grantResults, requestCode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1497/buggy-version/app.src.main.java.com.yydcdut.note.mvp.v.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "8db08113e4d0e918d63dceb97cbb718c13b00744", "Url": "https://api.github.com/repos/yydcdut/PhotoNoter", "Date": "2016-01-07T04:42:08Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mIPresenter) != null) { mIPresenter.detachView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1497/buggy-version/app.src.main.java.com.yydcdut.note.mvp.v.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "8db08113e4d0e918d63dceb97cbb718c13b00744", "Url": "https://api.github.com/repos/yydcdut/PhotoNoter", "Date": "2016-01-07T04:42:08Z"},
{"Line": "=>1228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (d < 200.0) { com.hutchgroup.elog.common.CanMessages.Speed = (java.lang.Math.round(d)) + \"\"; com.hutchgroup.elog.common.CanMessages._vehicleInfo.setSpeed(com.hutchgroup.elog.common.CanMessages.Speed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/569/buggy-version/app.src.main.java.com.hutchgroup.elog.common.CanMessages.java", "BodyUseAPI": ["java.lang.Math.round(java.lang.Double)"], "Fixed commit": "6a5e373709002cdca1652df42cbd7a240744745c", "Url": "https://api.github.com/repos/HutchBusinessGroup/ELDv3.0", "Date": "2017-01-26T15:23:02Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jcas.getDocumentText()) != null) { int snippetend = jcas.getDocumentText().length(); snippetend = (100 > snippetend) ? 100 : snippetend; edu.uab.ccts.nlp.medics.DocumentMetaDataAnnotator.LOG.info((\"Text snippet:\" + (jcas.getDocumentText().substring(0, snippetend)))); }else edu.uab.ccts.nlp.medics.DocumentMetaDataAnnotator.LOG.warn(\"No text to annotate with MetaData?!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7878/buggy-version/src.main.java.edu.uab.ccts.nlp.medics.DocumentMetaDataAnnotator.java", "BodyUseAPI": ["jcas.getDocumentText().substring(int,int)", "jcas.getDocumentText().length()", "org.apache.uima.jcas.JCas.getDocumentText()", "org.apache.uima.jcas.JCas.getDocumentText()", "org.slf4j.Logger.info((\"Text snippet:\" + (jcas.getDocumentText().substring(0, snippetend))))"], "Fixed commit": "fb80a4e6532069a78f47aca7811a74e61844a929", "Url": "https://api.github.com/repos/ozborn/medics-schema", "Date": "2016-03-22T14:38:45Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (username == null) throw new java.lang.Exception(\"Username is null.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7602/buggy-version/src.imageshare.servlets.UserProfileServlet.java", "BodyUseAPI": [], "Fixed commit": "3b0e9d7b27f202172beca143c92295399072c4fe", "Url": "https://api.github.com/repos/CMPUT391-Proj/ImageShare-2.0", "Date": "2014-11-23T22:05:38Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.widget.EditText) (findViewById(R.id.editText1))).getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((text.length()) != 0) { upenn.cis350.campusmap.Controller.Searcher searcher = new upenn.cis350.campusmap.Controller.GeneralSearcher(this, apikey, hasLocationSensor, lattitude, longitude, radius); searcher.execute(text); }else { displayDialog(\"Please enter text to search.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/977/buggy-version/CampusMap.src.upenn.cis350.campusmap.Controller.MainActivity.java", "BodyUseAPI": ["upenn.cis350.campusmap.Controller.Searcher.execute(java.lang.String)"], "Fixed commit": "7a544ea74063f3b6b66d428fcb82fcb06d5de4a8", "Url": "https://api.github.com/repos/nikkil331/CampusMaps", "Date": "2014-04-15T02:18:14Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue().getV().length) > 0) { pw.print(entry.getValue().getV()[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3175/buggy-version/app.src.main.java.org.greengin.nquireit.controllers.activities.senseit.SenseItDataController.java", "BodyUseAPI": ["java.io.PrintWriter.print(entry.getValue().getV()[0])", "entry.getValue().getV()", "java.util.Map.Entry<java.lang.String, org.greengin.nquireit.utils.TimeValue>.getValue()"], "Fixed commit": "ef2ce5b1c223a13a51d17f121ca31217a87c8c07", "Url": "https://api.github.com/repos/evilfer/sense-it-web", "Date": "2015-01-19T23:13:18Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (json.has(\"position\")) { p.setPosition(java.lang.String.valueOf(json.get(\"position\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5341/buggy-version/src.main.java.com.prvalue.wechat.controller.PersonController.java", "BodyUseAPI": ["java.lang.String.valueOf(json.get(\"position\"))", "com.prvalue.wechat.model.Person.setPosition(java.lang.String)", "org.json.JSONObject.get(java.lang.String)"], "Fixed commit": "ad0b21a7468879d2a69f706fa6d0d9c710053a23", "Url": "https://api.github.com/repos/PRVALUE/wechat-spring-mvc", "Date": "2015-07-29T09:45:05Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tessell.model.properties.AbstractProperty<P, T>.get()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((newValue == null) && ((defaultValue) != null)) { value.set(defaultValue); newValue = defaultValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6701/buggy-version/user.src.main.java.org.tessell.model.properties.AbstractProperty.java", "BodyUseAPI": [], "Fixed commit": "231203650673db830ef4b93ca4f65876a55fcaca", "Url": "https://api.github.com/repos/stephenh/tessell", "Date": "2013-04-03T16:23:14Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.System.in.available()) != 0) { int key = java.lang.System.in.read(); if (key == 107) { return 999; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/284/buggy-version/Pong.java", "BodyUseAPI": ["java.io.InputStream.read()"], "Fixed commit": "0cb354b0c2cf1583d210807d2385449506810c3e", "Url": "https://api.github.com/repos/nicolecheng/final2", "Date": "2016-06-10T04:41:13Z"},
{"Line": "=>869", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.System.in.available()) != 0) { int key = java.lang.System.in.read(); if (key == 107) { return 999; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/284/buggy-version/Pacman.java", "BodyUseAPI": ["java.io.InputStream.read()"], "Fixed commit": "0cb354b0c2cf1583d210807d2385449506810c3e", "Url": "https://api.github.com/repos/nicolecheng/final2", "Date": "2016-06-10T04:41:13Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (state.getGame().isCheckmate()) new crazygames.android.anytimechess.utils.Alerts(getContext()).displayMessage(\"Checkmate\"); else if (state.getGame().isCheck()) new crazygames.android.anytimechess.utils.Alerts(getContext()).displayMessage(\"Check\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2670/buggy-version/anytimechess-app.src.main.java.crazygames.android.anytimechess.layouts.BoardLayout.java", "BodyUseAPI": ["crazygames.android.anytimechess.comm.message.State.getGame()", "state.getGame().isCheck()"], "Fixed commit": "00b7ed5bf5aebeb7a3e1a78ff30ed1847133e3da", "Url": "https://api.github.com/repos/marcelotomazini/anytimechess", "Date": "2015-01-21T15:31:02Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((queue.size()) > 0) { ServerThread thread = queue.remove(); thread.setToSender(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3274/buggy-version/Server.java", "BodyUseAPI": ["java.util.Queue<ServerThread>.remove()"], "Fixed commit": "62b6d5627e98a9fc875e44673645e32a6b29412e", "Url": "https://api.github.com/repos/BBK-PiJ-2014-23/UDP", "Date": "2015-04-22T17:23:57Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == errors) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6786/buggy-version/uk.ac.diamond.scisoft.analysis.src.uk.ac.diamond.scisoft.analysis.dataset.LazyDataset.java", "BodyUseAPI": [], "Fixed commit": "6aa4bbf19142dedb130b2101fe0f9171cd173dcf", "Url": "https://api.github.com/repos/DawnScience/scisoft-core", "Date": "2013-09-02T09:46:02Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (colTypes[i].equalsIgnoreCase(SourceColumn.LDM_TYPE_DATE)) { row[i] = new org.joda.time.DateTime(cols[i].getValue()); }else { row[i] = cols[i].getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6173/buggy-version/connector.src.main.java.com.gooddata.connector.SfdcConnector.java", "BodyUseAPI": ["cols[i].getValue()", "cols[i].getValue()"], "Fixed commit": "1e4be699a73041598a385bb0a77036ce104271fa", "Url": "https://api.github.com/repos/lkundrak/GoodData-CL", "Date": "2011-08-02T21:20:53Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tvShowStored) { new com.afollestad.materialdialogs.MaterialDialog.Builder(ctx).title(\"Remove this TV show\").callback(new com.afollestad.materialdialogs.MaterialDialog.ButtonCallback() { @java.lang.Override public void onPositive(com.afollestad.materialdialogs.MaterialDialog dialog) { super.onPositive(dialog); final com.eseo.allmytvshows.model.realm.RealmTvShow realmTvShow = iTvShowDao.findByName(contents.get(i).getOriginal_name()); if (realmTvShow != null) { final long idRealmTvShow = realmTvShow.getId(); iTvShowDao.remove(realmTvShow); com.eseo.allmytvshows.managers.TvShowApplication.getBus().post(new com.eseo.allmytvshows.model.Data(com.eseo.allmytvshows.model.Data.REFRESH_ALL_DATA_MY_SHOWS_ADAPTER, idRealmTvShow)); } } @java.lang.Override public void onNegative(com.afollestad.materialdialogs.MaterialDialog dialog) { super.onNegative(dialog); tvShowViewHolder.added.setChecked((!isChecked)); } }).content(((\"Are you sure to remove '\" + (contents.get(i).getOriginal_name())) + \"' from your favorite tv shows ?\")).positiveText(\"Continue\").negativeText(\"Abort\").show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/9220/buggy-version/app.src.main.java.com.eseo.allmytvshows.ui.adapters.BestTvShowsAdapter.java", "BodyUseAPI": [], "Fixed commit": "0493420de0dca9d9797022202c61e5b6573fe179", "Url": "https://api.github.com/repos/chomatdam/Allmytvshows", "Date": "2015-10-05T13:16:36Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!tvShowStored) { new com.afollestad.materialdialogs.MaterialDialog.Builder(ctx).title(\"Add a new TV show\").callback(new com.afollestad.materialdialogs.MaterialDialog.ButtonCallback() { @java.lang.Override public void onPositive(com.afollestad.materialdialogs.MaterialDialog dialog) { super.onPositive(dialog); com.eseo.allmytvshows.managers.TvShowService tvShowService = new com.eseo.allmytvshows.managers.TvShowService(ctx, contents.get(i)); tvShowService.getDataTVShow(); } @java.lang.Override public void onNegative(com.afollestad.materialdialogs.MaterialDialog dialog) { super.onNegative(dialog); tvShowViewHolder.added.setChecked((!isChecked)); } }).content(((\"Are you sure to add '\" + (contents.get(i).getOriginal_name())) + \"' to your favorite tv shows ?\")).positiveText(\"Continue\").negativeText(\"Abort\").show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/9220/buggy-version/app.src.main.java.com.eseo.allmytvshows.ui.adapters.BestTvShowsAdapter.java", "BodyUseAPI": [], "Fixed commit": "0493420de0dca9d9797022202c61e5b6573fe179", "Url": "https://api.github.com/repos/chomatdam/Allmytvshows", "Date": "2015-10-05T13:16:36Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vehicle) != null) { vehicle.addItemsToInventory(animal.killForFood()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4733/buggy-version/src.model.Party.java", "BodyUseAPI": [], "Fixed commit": "3bcb0e9a1dd095304043503072f179663deb32f1", "Url": "https://api.github.com/repos/Tanner/Oregon-Trail", "Date": "2011-10-27T19:58:58Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vehicle) != null) { for (model.Item.ITEM_TYPE itemType : vehicle.getInventory().getPopulatedSlots()) { if (itemType.isFood()) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4733/buggy-version/src.model.Party.java", "BodyUseAPI": [], "Fixed commit": "3bcb0e9a1dd095304043503072f179663deb32f1", "Url": "https://api.github.com/repos/Tanner/Oregon-Trail", "Date": "2011-10-27T19:58:58Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vehicle) != null) { vehicle.addItemsToInventory(person.killForFood()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4733/buggy-version/src.model.Party.java", "BodyUseAPI": [], "Fixed commit": "3bcb0e9a1dd095304043503072f179663deb32f1", "Url": "https://api.github.com/repos/Tanner/Oregon-Trail", "Date": "2011-10-27T19:58:58Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (placeholder.getChildren().contains(calendarView.getAgenda())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8014/buggy-version/src.main.java.seedu.taskell.ui.DisplayPanel.java", "BodyUseAPI": [], "Fixed commit": "b75c604fcdd6eae7c5bceeef5c5796939ec6a4e0", "Url": "https://api.github.com/repos/CS2103AUG2016-W15-C3/main", "Date": "2016-10-30T17:39:05Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((task.getId()) == null) { new android.app.AlertDialog.Builder(this).setTitle(\"\u4e0d\u80fd\u6dfb\u52a0\u91cd\u590d\u7684\u4efb\u52a1\").setCancelable(true).setPositiveButton(\"\u786e\u5b9a\", null).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/702/buggy-version/app.src.main.java.com.app.slidecheck.SlideCheckOperation.java", "BodyUseAPI": [], "Fixed commit": "3ab6610b667ff031780ff30773b9c06723fd45eb", "Url": "https://api.github.com/repos/szwnba/SlideCheck", "Date": "2014-11-21T18:19:14Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((project.getId()) == null) { new android.app.AlertDialog.Builder(this).setTitle(\"\u4e0d\u80fd\u6dfb\u52a0\u91cd\u590d\u7684\u9879\u76ee\").setCancelable(true).setPositiveButton(\"\u786e\u5b9a\", null).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/702/buggy-version/app.src.main.java.com.app.slidecheck.ProjectOperation.java", "BodyUseAPI": [], "Fixed commit": "3ab6610b667ff031780ff30773b9c06723fd45eb", "Url": "https://api.github.com/repos/szwnba/SlideCheck", "Date": "2014-11-21T18:19:14Z"},
{"Line": "=>801", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (listener != null) { listener.onLoginCompleted(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1749/buggy-version/app.src.main.java.com.tarunisrani.dailykharcha.android.BackendService.java", "BodyUseAPI": ["com.tarunisrani.dailykharcha.listeners.FirebaseListener.onLoginCompleted(<nulltype>)"], "Fixed commit": "cdf6343f03446ce73635b3a6f244c164f6cf21b9", "Url": "https://api.github.com/repos/tarunisrani/DailyKharcha", "Date": "2017-04-20T06:58:26Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((answer.equals(\"0\")) && ((questionList.get(i).getType()) == (QuestionType.MULTIPLE_CHOICE))) score++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8498/buggy-version/src.ge.freeuni.quizwebsite.controller.servlet.GradeQuiz.java", "BodyUseAPI": [], "Fixed commit": "5b1ddae37b411d378b2e2e4b7203ef2522296535", "Url": "https://api.github.com/repos/sabak/QuizWebsite", "Date": "2017-05-30T10:43:07Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((aTargetType != null) && (aTargetType.isArray())) { java.lang.Object tempResultArray = java.lang.reflect.Array.newInstance(aTargetType.getComponentType(), 1); java.lang.reflect.Array.set(tempResultArray, 0, convertSingleValueToTargetType(aTargetType.getComponentType(), aParameterizedType, aValue, aConversionContext, someVisitedValues)); return tempResultArray; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2464/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.java", "BodyUseAPI": ["java.lang.reflect.Array.newInstance(java.lang.Class<?>,int)", "java.lang.reflect.Array.set(java.lang.Object,int,java.lang.Object)", "java.lang.Class<?>.getComponentType()", "java.lang.Class<?>.getComponentType()", "de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.convertSingleValueToTargetType(java.lang.Class<?>,java.lang.Class<?>,java.lang.Object,de.gebit.integrity.parameter.conversion.ConversionContext,java.util.Set<java.lang.Object>)"], "Fixed commit": "8fff0f175f55d47b0b0db14f68cfcb2df57e6cab", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2017-12-07T17:25:31Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS) { if (file.startsWith(\"/\")) { return file.substring(1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1026/buggy-version/crosscuting.src.main.java.pl.edu.uj.jnode.crosscuting.Resources.java", "BodyUseAPI": [], "Fixed commit": "e94fc5afb88d4669dbdde4d35669aafc309e8305", "Url": "https://api.github.com/repos/msemik/jNode", "Date": "2016-05-01T17:09:43Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (session.isClosed()) { org.eclipse.moquette.spi.impl.ProtocolProcessor.LOG.warn(\"channel was closed. client <{}>\", msg.getClientID()); session.close(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1055/buggy-version/broker.src.main.java.org.eclipse.moquette.spi.impl.ProtocolProcessor.java", "BodyUseAPI": ["org.eclipse.moquette.server.ServerChannel.close(boolean)"], "Fixed commit": "323c7a79649480a1743ff8d81bf8b5ef030a1918", "Url": "https://api.github.com/repos/runafter/moquette", "Date": "2015-09-21T12:24:34Z"},
{"Line": "=>1621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.novartis.ecrs.ui.utility.ADFUtils.findOperation(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((oper.getErrors().size()) > 0) com.novartis.ecrs.ui.utility.ADFUtils.showFacesMessage(uiBundle.getString(\"INTERNAL_ERROR\"), FacesMessage.SEVERITY_ERROR); else { if (this.flowType.equalsIgnoreCase(ViewConstants.FLOW_TYPE_CREATE)) { com.novartis.ecrs.ui.utility.ADFUtils.navigateToControlFlowCase(\"home\"); }else { com.novartis.ecrs.ui.utility.ADFUtils.navigateToControlFlowCase(\"reloadSearchPage\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1408/buggy-version/ECRS.ECRSViewController.src.com.novartis.ecrs.ui.bean.ManageCRSBean.java", "BodyUseAPI": [], "Fixed commit": "83a0f8d28d0ea0391069c7e9e2c8a45de3864ad1", "Url": "https://api.github.com/repos/hpothuri/ecrs", "Date": "2015-11-12T14:00:40Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getGrid()) != null) { getGrid().removeMember(this); getGrid().resetMembers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6198/buggy-version/src.main.java.com.dynious.refinedrelocation.grid.GridMemberHandler.java", "BodyUseAPI": [], "Fixed commit": "60b1f1f4d5e4ee995465632ad2b0ebd64a8b204f", "Url": "https://api.github.com/repos/Dynious/RefinedRelocation", "Date": "2014-06-11T18:12:55Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o instanceof org.docx4j.dml.picture.Pic) return ((org.docx4j.dml.picture.Pic) (o));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4083/buggy-version/src.main.java.org.docx4j.dml.GraphicData.java", "BodyUseAPI": [], "Fixed commit": "d8e715c9f3839fae415a1010539fecfc02b75e9b", "Url": "https://api.github.com/repos/plutext/docx4j", "Date": "2014-12-17T04:36:46Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.navercorp.pinpoint.bootstrap.context.TraceContext.currentRawTraceObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(trace.canSampled())) { if (isDebug) { logger.debug(\"set Sampling flag=false\"); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/121/buggy-version/profiler.src.main.java.com.navercorp.pinpoint.profiler.modifier.connector.cxf.interceptor.CxfClientInvokeMethodInterceptor.java", "BodyUseAPI": [], "Fixed commit": "f5fbec4757caa3af794becc5b1618b7fa64e2e99", "Url": "https://api.github.com/repos/barneykim/pinpoint", "Date": "2016-08-05T12:59:51Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((definition.getMessageNode().getParent()) != null) && ((definition.getMessageNode().getParent().getParent()) != null)) { com.google.javascript.rhino.JSDocInfo docInfo = definition.getMessageNode().getParent().getParent().getJSDocInfo(); java.lang.String blockDescription = docInfo.getBlockDescription(); if ((blockDescription != null) && (blockDescription.startsWith(\"SOY MESSAGE ID: \"))) { id = blockDescription.substring(\"SOY MESSAGE ID: \".length()).trim(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3804/buggy-version/src.com.google.javascript.jscomp.AltiplaJsMessageExtractor.java", "BodyUseAPI": ["definition.getMessageNode().getParent().getParent().getJSDocInfo()", "definition.getMessageNode().getParent().getParent()", "com.google.javascript.jscomp.JsMessageDefinition.getMessageNode()", "definition.getMessageNode().getParent()"], "Fixed commit": "f244403cad304152e790f1487cce1cecf592ea85", "Url": "https://api.github.com/repos/altipla-consulting/arb-extractor", "Date": "2015-01-30T21:34:27Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rendering.text.equals(\"\"))) { printAttribute(\"alt\", rendering.text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5358/buggy-version/src.main.java.org.pegdown.ToHtmlSerializer.java", "BodyUseAPI": ["org.pegdown.ToHtmlSerializer.printAttribute(java.lang.String,rendering.text)"], "Fixed commit": "e6ee8a83874edb72657952cfd0958322e6b21054", "Url": "https://api.github.com/repos/zipfworks/pegdown", "Date": "2015-08-18T15:45:14Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.sagebionetworks.repo.model.dbo.DMLUtils.hasNonPrimaryKeyColumns(mapping))) { main.append(\"IGNORE \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5339/buggy-version/lib.jdomodels.src.main.java.org.sagebionetworks.repo.model.dbo.DMLUtils.java", "BodyUseAPI": [], "Fixed commit": "47ce5d232cc290234412cd85b0d5e4d3281a0f4c", "Url": "https://api.github.com/repos/kaysoky/Synapse-Repository-Services", "Date": "2013-10-11T18:25:08Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["DiabPatientOrganizer.DATE_FORMAT.format(java.util.Date)", "java.util.regex.Matcher.group(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (formattedDate.equals(toReplace)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3317/buggy-version/src.com.osdiab.patient_organizer.WordDocPatientDocument.java", "BodyUseAPI": [], "Fixed commit": "dd8e84d472c8753f3cbb51e530d982ae754a1ca2", "Url": "https://api.github.com/repos/osdiab/diab-patient-organizer", "Date": "2014-12-20T08:06:53Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(nodeTemplate.getCapabilities().isEmpty())) { result.setCapabilities(capabilities); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2628/buggy-version/org.opentosca.yamlconverter.main.src.main.java.org.opentosca.yamlconverter.switchmapper.NodeTemplatesSubSwitch.java", "BodyUseAPI": [], "Fixed commit": "cd26dde8ef0b8f9d741d361870db7c238dbc1dab", "Url": "https://api.github.com/repos/seeebiii/YAML_Transformer", "Date": "2015-03-03T17:20:30Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (responseIsChunked(response)) { consumer = new rx.apache.http.consumers.ResponseConsumerChunked(observer, subscription); }else { consumer = new rx.apache.http.consumers.ResponseConsumerBasic(observer, subscription); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8512/buggy-version/src.main.java.rx.apache.http.consumers.ResponseConsumerDelegate.java", "BodyUseAPI": [], "Fixed commit": "fdacac791406c0631ae29d02369f2fb4019f69ab", "Url": "https://api.github.com/repos/ylecaillez/RxApacheHttp", "Date": "2014-10-16T13:22:57Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (registeredForCSEvents) { CSEventBus.INSTANCE.unsubscribe(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4352/buggy-version/src.main.java.org.multibit.viewsystem.swing.action.SendBitcoinNowAction.java", "BodyUseAPI": [], "Fixed commit": "4dff6caa3d5e17b3e393bdead65c893ac0712d9b", "Url": "https://api.github.com/repos/coinspark/sparkbit", "Date": "2015-02-26T00:15:58Z"},
{"Line": "=>5385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.codename1.impl.javase.JavaSEPort.netMonitor) != null) { com.codename1.impl.javase.NetworkRequestObject nr = com.codename1.impl.javase.JavaSEPort.netMonitor.getByConnection(((java.net.URLConnection) (connection))); if (nr != null) { nr.setMethod(method.toUpperCase()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2747/buggy-version/Ports.JavaSE.src.com.codename1.impl.javase.JavaSEPort.java", "BodyUseAPI": [], "Fixed commit": "cd6d96438453deffd72f78d6bc68468e15f00041", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2015-04-06T18:58:24Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (moveAbility.callIsAble()) { poker().call(); }else if (moveAbility.allInIsAble()) { poker().allIn(); }else { poker().fold(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3217/buggy-version/core.src.main.java.com.lamtev.poker.core.ai.SimpleAI.java", "BodyUseAPI": ["com.lamtev.poker.core.ai.SimpleAI.allInIsAble()"], "Fixed commit": "0b69d34e2a50b8bf17bf43ef2b08d09e15c8f80d", "Url": "https://api.github.com/repos/lamtev/poker", "Date": "2017-08-09T18:20:27Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (repoObj.isRepositoryManager()) { repoObj.setMirroredRepositories(resolveMirrors(repoObj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4031/buggy-version/src.main.java.org.jvnet.hudson.plugins.repositoryconnector.aether.Aether.java", "BodyUseAPI": ["org.sonatype.aether.repository.RemoteRepository.setMirroredRepositories(java.util.List<org.sonatype.aether.repository.RemoteRepository>)", "org.jvnet.hudson.plugins.repositoryconnector.aether.Aether.resolveMirrors(org.sonatype.aether.repository.RemoteRepository)"], "Fixed commit": "3fda9dbf0d8250d5a278122198e7b3e9aa74af19", "Url": "https://api.github.com/repos/mrumpf/repository-connector-plugin", "Date": "2014-12-03T11:04:14Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (check.equals(\"\")) { new ac.codebuddy.hacktarl.MainActivity.getClinics().execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/922/buggy-version/src.ac.codebuddy.hacktarl.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "596584ca18ed701441a18c99e7f077e2c8b1d38f", "Url": "https://api.github.com/repos/mengmengmengmeng/HackTarlac", "Date": "2015-01-25T04:05:23Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.vim25.mo.VirtualMachine.getCustomValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (customFieldValues == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/9158/buggy-version/src.main.java.com.netflix.simianarmy.client.libvirt.VSphereClient.java", "BodyUseAPI": [], "Fixed commit": "265ca2b2ffb3b8a31c8b51faecea3979d48d78e9", "Url": "https://api.github.com/repos/lucciano/SimianArmy", "Date": "2012-08-27T09:22:46Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == ((data.size()) - 1)) { }else { content.append(java.lang.System.getProperty(\"line.separator\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8997/buggy-version/src.tools.ExcuteMain.java", "BodyUseAPI": [], "Fixed commit": "e1f54ad3414b4c02c7bc7e9480ccdfc45eb7f07b", "Url": "https://api.github.com/repos/majiang-java/toolsFileMaker", "Date": "2016-05-05T07:59:22Z"},
{"Line": "=>699", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((levelFourCode.getCommonCoreDotNotation()) != null) { levelFourMapCodes.add(getCode(levelFourCode, null, org.ednovo.gooru.domain.service.taxonomy.NODE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7361/buggy-version/api.src.main.java.org.ednovo.gooru.domain.service.taxonomy.TaxonomyServiceImpl.java", "BodyUseAPI": ["org.ednovo.gooru.domain.service.taxonomy.TaxonomyServiceImpl.getCode(org.ednovo.gooru.core.api.model.Code,<nulltype>,org.ednovo.gooru.domain.service.taxonomy.NODE)", "java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.add(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "2c0e86af9cf28980bb832258bb8f29a99273e515", "Url": "https://api.github.com/repos/saravanab/Gooru-Core-API-1", "Date": "2014-08-06T06:44:07Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["competition.subsystems.vision.VisionSubsystem.getBoulderInfo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ballInfo == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/480/buggy-version/CompetitionTemplate.src.competition.subsystems.vision.VisionSubsystem.java", "BodyUseAPI": [], "Fixed commit": "ad01416fbcca6a3b1a16ae0dd7b104932addfb6f", "Url": "https://api.github.com/repos/Team488/TeamXbot2016", "Date": "2016-02-24T05:23:28Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getClass()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (clazz.equals(ai.labs.runtime.BaseRuntime.class)) { clazz.getMethod(\"init\").invoke(injectee); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6451/buggy-version/runtime-impl.src.main.java.ai.labs.runtime.bootstrap.RuntimeModule.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(java.lang.Object)", "java.lang.Class<?>.getMethod(java.lang.String)"], "Fixed commit": "4e756e60ebfe770af99cda4d056554269d695bb4", "Url": "https://api.github.com/repos/EdtechFoundry/EDDI", "Date": "2017-08-11T13:24:03Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.caly.calyandroid.adapter.EventListAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (eventModel.isHeader) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7491/buggy-version/app.src.main.java.io.caly.calyandroid.activity.EventListActivity.java", "BodyUseAPI": [], "Fixed commit": "63212921563342bf3a562049f97ba8ec991360fc", "Url": "https://api.github.com/repos/CalyFactory/caly-android", "Date": "2017-05-11T14:29:15Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (name.toLowerCase().endsWith(\"city\")) name = name.replace(\" City\", \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1318/buggy-version/src.main.java.ua.nick.weather.service.UserServiceImpl.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "9fa82b0add95f1c5185c5337631aab1da7876f75", "Url": "https://api.github.com/repos/Manic1Nick/WeatherTester_Wide", "Date": "2017-07-30T08:55:26Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.result) != null) { this.resultString = this.result.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/651/buggy-version/src.main.java.org.jenkinsci.plugins.ironmqnotifier.IronMQNotifier.java", "BodyUseAPI": [], "Fixed commit": "5f2e48972fbced5f6438c3b41a5e4dcef71b733a", "Url": "https://api.github.com/repos/jenkinsci/ironmq-notifier-plugin", "Date": "2016-06-21T03:15:51Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { player.getPlayer().seekTo((position - 1), true); player.getPlayer().playVideo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2066/buggy-version/src.gui.src.main.java.cz.filmtit.client.widgets.YoutubeVideoWidget.java", "BodyUseAPI": [], "Fixed commit": "59fb7542725c604a073e57ec7a77fda2b7a42639", "Url": "https://api.github.com/repos/LordMathis/FilmTit", "Date": "2017-03-01T13:14:25Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { player.setCurrentTime(position); player.play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2066/buggy-version/src.gui.src.main.java.cz.filmtit.client.widgets.FileVideoWidget.java", "BodyUseAPI": [], "Fixed commit": "59fb7542725c604a073e57ec7a77fda2b7a42639", "Url": "https://api.github.com/repos/LordMathis/FilmTit", "Date": "2017-03-01T13:14:25Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alvazan.orm.api.z8spi.meta.DboColumnMeta.convertTypeToString(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((classMeta.getMetaFieldByCol(null, colName)) != null) com.alvazan.orm.api.z8spi.meta.ReflectionUtil.putFieldValue(newproxy, classMeta.getMetaFieldByCol(null, colName).getField(), columnValue);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3661/buggy-version/input.javasrc.com.alvazan.orm.impl.meta.data.MetaEmbeddedEntity.java", "BodyUseAPI": ["com.alvazan.orm.impl.meta.data.MetaAbstractClass<PROXY>.getMetaFieldByCol(<nulltype>,java.lang.String)", "classMeta.getMetaFieldByCol(null, colName).getField()", "com.alvazan.orm.api.z8spi.meta.ReflectionUtil.putFieldValue(java.lang.Object,classMeta.getMetaFieldByCol(null, colName).getField(),java.lang.Object)"], "Fixed commit": "ae2f382408339c8b748fcefbadeb8820240aa5bb", "Url": "https://api.github.com/repos/deanhiller/playorm", "Date": "2013-01-16T08:43:11Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.reflect.Modifier.isTransient(singleField.getModifiers())) || (java.lang.reflect.Modifier.isStatic(singleField.getModifiers()))) || (singleField.isAnnotationPresent(com.alvazan.orm.api.base.anno.NoSqlTransient.class))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3661/buggy-version/input.javasrc.com.alvazan.orm.impl.meta.data.MetaEmbeddedEntity.java", "BodyUseAPI": [], "Fixed commit": "ae2f382408339c8b748fcefbadeb8820240aa5bb", "Url": "https://api.github.com/repos/deanhiller/playorm", "Date": "2013-01-16T08:43:11Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.color) != null) { this.displayPanel.setBackground(this.color); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8169/buggy-version/src.main.java.com.jadencode.main.pluginbuilder.contenteditors.ColorEditor.java", "BodyUseAPI": [], "Fixed commit": "c93ec7a6ab65aa21fc5391aff0e03ffa5e852f52", "Url": "https://api.github.com/repos/ahornerr/Modular-Weapons", "Date": "2016-06-21T01:19:23Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((moveX == 1) && ((player.x) <= (((world.world_height) - ((screen_height) / 2)) - 1))) && ((player.x) > (((screen_height) / 2) - 1))) { camera.move(moveX, moveY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8205/buggy-version/Concentric.src.com.clusterflux.concentric.GameActivity.java", "BodyUseAPI": ["com.clusterflux.concentric.Camera.move(int,int)"], "Fixed commit": "b0915cefcb95e148c6ce8446ea96ae0c2e7a182e", "Url": "https://api.github.com/repos/clusterflux/flux", "Date": "2013-01-17T11:27:46Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sapia.console.CmdLine.parse(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (main.containsOption(org.sapia.corus.client.cli.CorusCli.UBIK_OPT, true)) { java.lang.System.setProperty(Consts.LOG_LEVEL, main.getOptNotNull(org.sapia.corus.client.cli.CorusCli.UBIK_OPT).getValueNotNull()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3833/buggy-version/modules.client.src.main.java.org.sapia.corus.client.cli.CorusCli.java", "BodyUseAPI": ["java.lang.System.setProperty(Consts.LOG_LEVEL,main.getOptNotNull(org.sapia.corus.client.cli.CorusCli.UBIK_OPT).getValueNotNull())", "main.getOptNotNull(org.sapia.corus.client.cli.CorusCli.UBIK_OPT).getValueNotNull()", "org.sapia.console.CmdLine.getOptNotNull(java.lang.String)"], "Fixed commit": "aa2dd8d5c57642fbd2aff82418d4cfcdb5e8a21b", "Url": "https://api.github.com/repos/sapia-oss/corus", "Date": "2015-03-20T06:55:49Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hosts.isEmpty()) { return new org.sapia.corus.client.common.OptionalValue<java.util.Collection<org.sapia.corus.client.services.cluster.CorusHost>>(null); }else { return new org.sapia.corus.client.common.OptionalValue<java.util.Collection<org.sapia.corus.client.services.cluster.CorusHost>>(hosts.peek()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3833/buggy-version/modules.client.src.main.java.org.sapia.corus.client.facade.HostSelectionContextImpl.java", "BodyUseAPI": ["java.util.Stack<java.util.Collection<org.sapia.corus.client.services.cluster.CorusHost>>.peek()"], "Fixed commit": "aa2dd8d5c57642fbd2aff82418d4cfcdb5e8a21b", "Url": "https://api.github.com/repos/sapia-oss/corus", "Date": "2015-03-20T06:55:49Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((out_count) >= 3) { checkifgameset(); checkifinnset(); }else if (on_3rd_base) { raise_score(current_team()); on_3rd_base = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2473/buggy-version/app.src.main.java.com.example.q.neobjukbaseball.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "183c4a45c902daaa4e624fa5af4071eb8351a78f", "Url": "https://api.github.com/repos/JaeRyoungKa/CS496_Project5", "Date": "2016-07-23T08:51:10Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentBuild == null) { return new java.util.HashSet<hudson.model.User>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7432/buggy-version/src.main.java.hudson.plugins.claim.AbstractClaimBuildAction.java", "BodyUseAPI": [], "Fixed commit": "75c242886f489cec2ad849952e365d76c4f24b4e", "Url": "https://api.github.com/repos/asgoyal/claim-plugin", "Date": "2013-01-28T19:57:03Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (anagramLength > 0) { populateKnownLettersLayout(anagramLength); shuffleLetters(); showReshuffleFAB(); shuffleButton.setText(R.string.clear); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4497/buggy-version/app.src.main.java.com.thonners.crosswordmaker.ManualAnagramPageFragment.java", "BodyUseAPI": ["com.thonners.crosswordmaker.ManualAnagramPageFragment.populateKnownLettersLayout(int)"], "Fixed commit": "3063a999a3d2763852b523d8db1d40139bf057c8", "Url": "https://api.github.com/repos/Thonners/CrosswordMaker", "Date": "2016-10-28T22:06:32Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (parentProcess == null) parentProcess = ((java.lang.Process) (session.createCriteria(java.lang.Process.class).add(org.hibernate.criterion.Restrictions.eq(com.wipro.ats.bdre.md.dao.ProcessDAO.PROCESSCODE, processCode)).uniqueResult()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7084/buggy-version/md-dao.src.main.java.com.wipro.ats.bdre.md.dao.ProcessDAO.java", "BodyUseAPI": [], "Fixed commit": "a8cf415481ee54fc46fed6275429f0b2b5e050c3", "Url": "https://api.github.com/repos/shubham2913/openbdre", "Date": "2017-09-21T09:01:23Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["grasp.Main.instance().context()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((appcon != null) && (appcon.isDebugging())) { tree.dump(log); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3425/buggy-version/grasp-core.src.grasp.lang.Compiler.java", "BodyUseAPI": [], "Fixed commit": "54167340952a3bda657ba50b791ce39601d5192d", "Url": "https://api.github.com/repos/LakshithadeSilva/grasp", "Date": "2015-01-05T16:39:23Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e == null) return derefSet;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6920/buggy-version/Implementation.Compiler.src.share.classes.com.sun.tools.javac.comp.CheckEffects.java", "BodyUseAPI": [], "Fixed commit": "fe4b601fdd167f8908aa7d59fae5c04ea5b7b99c", "Url": "https://api.github.com/repos/bocchino/JavaRG", "Date": "2012-07-08T22:34:12Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sun.tools.javac.tree.JCTree.JCExpression.getSymbol()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((sym != null) && (((sym.flags()) & (com.sun.tools.javac.code.Flags.STATIC)) != 0)) return derefSet;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6920/buggy-version/Implementation.Compiler.src.share.classes.com.sun.tools.javac.comp.CheckEffects.java", "BodyUseAPI": [], "Fixed commit": "fe4b601fdd167f8908aa7d59fae5c04ea5b7b99c", "Url": "https://api.github.com/repos/bocchino/JavaRG", "Date": "2012-07-08T22:34:12Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(request.containsHeader(header))) { request.addHeader(header, clientHeaderMap.get(header)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3309/buggy-version/library.src.main.java.com.loopj.android.http.AsyncHttpClient.java", "BodyUseAPI": ["org.apache.http.HttpRequest.addHeader(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "e98e072e114535b622571d01d3968138db7b1f64", "Url": "https://api.github.com/repos/wuyexiong/android-async-http", "Date": "2014-03-12T11:52:57Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["struct.parent().get(tree.geom.Point)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.jgrapht.Graphs.neighborListOf(graph, expandingPoint).contains(parentPoint)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6769/buggy-version/src.main.java.planners.LazyThetaStarR.java", "BodyUseAPI": [], "Fixed commit": "5ab59ba9d6a4cd95d27feb8199a11c06728e9fea", "Url": "https://api.github.com/repos/hoangtungdinh/UAVPathPlanning", "Date": "2016-04-04T15:47:30Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (exceptions.contains(ex.getClass())) { java.lang.System.out.println(\"---------------------------------\"); java.lang.System.out.println(\"Exception had been caught\"); java.lang.System.out.println((\"Message :: \" + (ex.getMessage()))); java.lang.System.out.println(\"---------------------------------\"); return com.pramesh.exceptionHandler.response.ExceptionResponse.createResponse(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6432/buggy-version/exceptionInterceptor-ejb.src.main.java.com.pramesh.exceptionHandler.interceptor.ExceptionInterceptor.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "com.pramesh.exceptionHandler.response.ExceptionResponse.createResponse(java.lang.String)", "java.lang.Exception.getMessage()", "java.lang.Exception.getMessage()"], "Fixed commit": "92d8b6e7f90795000c717136dc57c78a02aef848", "Url": "https://api.github.com/repos/prameshbhattarai/javaee-exceptionBinding", "Date": "2017-04-18T14:52:53Z"},
{"Line": "=>748", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextMonth > 12) nextMonth -= 12;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8563/buggy-version/src.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "603e3aaa5dae1469bb5d195d047f34a6767ba1c2", "Url": "https://api.github.com/repos/cs2103w7Group4/todo_manager", "Date": "2014-11-06T11:13:40Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((exp.getCause()) != null) { strReturn = exp.getCause().getMessage(); }else { strReturn = exp.getLocalizedMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6584/buggy-version/AppPOS.src.main.java.com.magestore.app.pos.ui.AbstractActivity.java", "BodyUseAPI": ["java.lang.Exception.getLocalizedMessage()", "java.lang.Throwable.getMessage()", "java.lang.Exception.getCause()"], "Fixed commit": "bfa1f28cc924f323f6f474ee73bad407e2790653", "Url": "https://api.github.com/repos/miketrueplus/MagestorePOSAndroid", "Date": "2017-08-23T03:43:13Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.getHeaders().getContentType()) == null) { response.setContentType(\"text/html\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8464/buggy-version/app.src.main.java.ro.polak.webserver.servlet.Servlet.java", "BodyUseAPI": ["ro.polak.webserver.servlet.HTTPResponse.setContentType(java.lang.String)"], "Fixed commit": "8720d3bd16238c4f3e918a23c377e967fd2f2f24", "Url": "https://api.github.com/repos/piotrpolak/android-http-server", "Date": "2015-09-29T16:51:06Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.olingo.server.core.requests.DataRequest.ReferenceRequest.getQueryParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((id == null) && (isCollection())) { throw new org.apache.olingo.server.core.uri.parser.UriParserSemanticException(\"$id not specified for delete of reference\", org.apache.olingo.server.api.deserializer.DeserializerException.MessageKeys.RESOURCE_NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6796/buggy-version/lib.server-core-ext.src.main.java.org.apache.olingo.server.core.requests.DataRequest.java", "BodyUseAPI": [], "Fixed commit": "44ff6c95c011048eb93022071403387f65a17dde", "Url": "https://api.github.com/repos/rareddy/olingo-odata4", "Date": "2015-04-21T20:10:25Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.parse.ParseQuery<com.parse.ParseUser>.getFirst()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((user == null) || ((user.getString(\"flagISA\")) == null)) android.support.design.widget.Snackbar.make(new android.view.View(contesto), \"riprova\", Snackbar.LENGTH_SHORT); else { if (user.getString(\"flagISA\").equals(\"Persona\")) { i = new android.content.Intent(contesto, com.clothapp.profile.UserProfileActivity.class); }else { i = new android.content.Intent(contesto, com.clothapp.profile_shop.ShopProfileActivity.class); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3687/buggy-version/app.src.main.java.com.clothapp.profile.utils.ProfileUtils.java", "BodyUseAPI": ["user.getString(\"flagISA\").equals(java.lang.String)", "com.parse.ParseUser.getString(java.lang.String)"], "Fixed commit": "50b0a072b69d17920c0e116a2876f9ad25008382", "Url": "https://api.github.com/repos/ClothAppProject/ClothAppAndroid", "Date": "2016-03-14T23:35:07Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((startBlock >= 0) && (endBlock >= 0)) { finalOutput = output.substring((startBlock + 4), endBlock); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2380/buggy-version/rwiki.rwiki-util.radeox.src.java.org.radeox.filter.XHTMLFilter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "450aca455411bbfcd9d8b0651fce32322f3f8907", "Url": "https://api.github.com/repos/bjones86/sakai", "Date": "2016-11-15T16:27:38Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) item = new com.jinjunhang.onlineclass.ui.cell.AlbumTypeCell2(getActivity(), albumType); else item = new com.jinjunhang.onlineclass.ui.cell.AlbumTypeCell(getActivity(), albumType);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4595/buggy-version/app.src.main.java.com.jinjunhang.onlineclass.ui.fragment.MainPageFragment.java", "BodyUseAPI": [], "Fixed commit": "d353a81b0f6335bfddc9d8e9030ba2deb21315fb", "Url": "https://api.github.com/repos/jjhlzn/OnlineClassAndroid", "Date": "2016-07-25T00:22:24Z"},
{"Line": "=>834", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((java.lang.Integer.parseInt(s3q301c.getText().toString())) < 1) || ((java.lang.Integer.parseInt(s3q301c.getText().toString())) > 16)) || (!(((java.lang.Integer.parseInt(s3q301c.getText().toString())) == 91) || ((java.lang.Integer.parseInt(s3q301c.getText().toString())) == 92)))) { s3q301c.setError(\"Invalid Education Range 1-16\"); android.widget.Toast.makeText(getApplicationContext(), \"Invalid Education Range 1-16 \\r\\n\", Toast.LENGTH_LONG).show(); s3q301c.requestFocus(); return false; }else { s3q301c.setError(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7820/buggy-version/app.src.main.java.edu.aku.hassannaqvi.mnch_src.Section3Activity.java", "BodyUseAPI": ["android.widget.EditText.setError(java.lang.String)", "android.widget.EditText.requestFocus()", "android.widget.EditText.setError(<nulltype>)"], "Fixed commit": "aa6cb65b8771b83ed4ad99fd879170b78d5c2c26", "Url": "https://api.github.com/repos/shznaqvi/MNCH-SRC", "Date": "2017-02-22T10:15:51Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 21) { android.view.Window window = getWindow(); window.setStatusBarColor(Color.TRANSPARENT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6072/buggy-version/app.src.main.java.com.tneciv.zhihudaily.detail.view.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "27baafdbaaf7824671ee485bfaca3c8d1c91c320", "Url": "https://api.github.com/repos/Tneciv/Isolate", "Date": "2016-02-19T09:41:27Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ev.getSide().isServer()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8007/buggy-version/src.tconstruct.plugins.nei.NotEnoughItems.java", "BodyUseAPI": [], "Fixed commit": "68202792b67680da0154ef1e8abb899dca4a2f99", "Url": "https://api.github.com/repos/SlimeKnights/TinkersConstruct", "Date": "2013-10-28T21:41:46Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == 0) { workout.onResume(workout); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5554/buggy-version/src.org.runnerup.view.RunActivity.java", "BodyUseAPI": [], "Fixed commit": "42ba3112eb70c9523f018368ab6c2ce11a3916f1", "Url": "https://api.github.com/repos/jonasoreland/runnerup", "Date": "2013-04-13T15:09:32Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inputType) == null) { inputType = omnikryptec.net.InputType.ofValue(inputTypeValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/659/buggy-version/src.omnikryptec.net.InputEvent.java", "BodyUseAPI": [], "Fixed commit": "29ca0f9218855fe3a76b9e336434585902cf053b", "Url": "https://api.github.com/repos/OmniKryptec/OmniKryptec-Engine", "Date": "2017-06-30T20:10:07Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blocksCalculated == 0) { return new int[]{ 135, 135, 135 }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7370/buggy-version/src.main.java.com.vel0cityx.chameleoncreepers.BiomeColors.java", "BodyUseAPI": [], "Fixed commit": "a5b474b19d5c2de409493c9ade8be60fd58deef0", "Url": "https://api.github.com/repos/VelocityRa/ChameleonCreepersMod", "Date": "2016-05-28T13:14:35Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.Run<?, ?>.getAction(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (buildAction == null) { build.addAction(new hudson.plugins.plot.PlotBuildAction(build, plots)); }else { buildAction.addPlots(plots); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5216/buggy-version/src.main.java.hudson.plugins.plot.PlotBuilder.java", "BodyUseAPI": ["hudson.plugins.plot.PlotBuildAction.addPlots(java.util.List<hudson.plugins.plot.Plot>)"], "Fixed commit": "46354b08dc29da47b9e4150447a1bb67d0885044", "Url": "https://api.github.com/repos/MarkusDNC/plot-plugin", "Date": "2016-08-11T06:04:04Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (block.getName().equals(\"top.fpu_mul+x6_mul.mul_r2+u5^FF_NODE~29416\")) { int d = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1479/buggy-version/src.circuit.block.TimingGraph.java", "BodyUseAPI": [], "Fixed commit": "90745201db265f9ba7681c7bc198917fdb7cc7de", "Url": "https://api.github.com/repos/EliasVansteenkiste/FPGA-CAD-Framework", "Date": "2015-11-23T18:49:20Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.wisdom.dao.CreditPayDao.getPayRecord(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((payRecord.getReturnState()) != (cn.wisdom.dao.constant.ApplyState.Applying)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8651/buggy-version/src.main.java.cn.wisdom.service.CreditServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "b5307488b22a574b2c245872a7e86213aa850975", "Url": "https://api.github.com/repos/ooclrickliu/credit", "Date": "2016-07-30T01:18:57Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (halfRows)) { this.eraseFirstScreen(); i = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/422/buggy-version/T2_01_zadaca_3.src.mvc.View.java", "BodyUseAPI": [], "Fixed commit": "f72ab76c0f976147fe6fd5c930017df7be55c40a", "Url": "https://api.github.com/repos/lpredova/UzDiz3", "Date": "2016-01-04T14:54:17Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((constantPools[i]) instanceof com.baislsl.decompiler.DoubleTag) || ((constantPools[i]) instanceof com.baislsl.decompiler.LongTag)) { constantPools[(++i)] = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2272/buggy-version/src.main.java.com.baislsl.decompiler.ClassReader.java", "BodyUseAPI": [], "Fixed commit": "6121a8b9ae5f17976ff089dcb59e21bf2107d4a6", "Url": "https://api.github.com/repos/baislsl/java-class-reader", "Date": "2017-09-13T12:16:21Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (n != null) { addRawData(numberFormat.format(n)); }else { writeNull(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3235/buggy-version/bonaparte-core.src.main.java.de.jpaw.bonaparte.core.CSVComposer2.java", "BodyUseAPI": ["de.jpaw.bonaparte.core.CSVComposer2.format(java.lang.Integer)", "de.jpaw.bonaparte.core.CSVComposer2.addRawData(numberFormat.format(n))"], "Fixed commit": "f49bd4719a41fc4ae96cba850581b2b9fe757d21", "Url": "https://api.github.com/repos/jpaw/bonaparte-java", "Date": "2013-12-11T20:42:41Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (string.contains(\"key_mgmt=WPA-EAP\")) { actualPassword = \"key_mgmt=WPA-EAP\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7809/buggy-version/WifiSync.src.com.smorenburgds.wifisync.utils.WifiBackupAgent.java", "BodyUseAPI": [], "Fixed commit": "3ff0d8d5d8e4de492981a78eb6c3d8585ed6896f", "Url": "https://api.github.com/repos/IvoryAguado/WifiSync", "Date": "2014-11-23T18:27:13Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (string.contains(\"key_mgmt=NONE\")) { actualPassword = \"key_mgmt=NONE\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7809/buggy-version/WifiSync.src.com.smorenburgds.wifisync.utils.WifiBackupAgent.java", "BodyUseAPI": [], "Fixed commit": "3ff0d8d5d8e4de492981a78eb6c3d8585ed6896f", "Url": "https://api.github.com/repos/IvoryAguado/WifiSync", "Date": "2014-11-23T18:27:13Z"},
{"Line": "=>1471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t1.getKind()) == (javax.lang.model.type.TypeKind.ARRAY)) { if ((t2.getKind()) != (javax.lang.model.type.TypeKind.ARRAY)) return false; return sameType(t1.getComponentType(), t2.getComponentType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4026/buggy-version/src.com.redhat.ceylon.compiler.loader.AbstractModelLoader.java", "BodyUseAPI": ["com.redhat.ceylon.compiler.loader.mirror.TypeMirror.getComponentType()", "com.redhat.ceylon.compiler.loader.AbstractModelLoader.sameType(t1.getComponentType(),t2.getComponentType())"], "Fixed commit": "02bc13317eebfe1c66bc23366a6f242ea509b280", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2012-03-12T10:15:45Z"},
{"Line": "=>1476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((t2.getKind()) == (javax.lang.model.type.TypeKind.ARRAY)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4026/buggy-version/src.com.redhat.ceylon.compiler.loader.AbstractModelLoader.java", "BodyUseAPI": [], "Fixed commit": "02bc13317eebfe1c66bc23366a6f242ea509b280", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2012-03-12T10:15:45Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["src1.getIntervalPerVar().hasEmptyIntervals()", "src2.getIntervalPerVar().hasEmptyIntervals()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (src1Unreachable && src2Unreachable) { trg.copyFrom(src1); }else if ((!src1Unreachable) && (!src2Unreachable)) { trg.copyFrom(src1); trg.mergeWith(src2); }else if (!src1Unreachable) { trg.copyFrom(src1); }else { trg.copyFrom(src2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5565/buggy-version/analysis.src.ch.ethz.pa.Analysis.java", "BodyUseAPI": [], "Fixed commit": "d3629ad15fd9e93a12dc6cbf31f5ce380ed6323d", "Url": "https://api.github.com/repos/ganzm/ProgramAnalysisHS2013", "Date": "2013-12-13T15:36:04Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (emailAndPw == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4284/buggy-version/HIOFCommuting.src.no.hiof.hiofommuting.database.HandleLogin.java", "BodyUseAPI": [], "Fixed commit": "387bc59d4d337fb71c4634f3ac29835839cfcd11", "Url": "https://api.github.com/repos/jonkjenn/hiofcommutingclient", "Date": "2014-07-28T19:34:04Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["no.hiof.hiofommuting.database.HandleLogin.getCookie(getActivity())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (c == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4284/buggy-version/HIOFCommuting.src.no.hiof.hiofcommuting.register.FinishProfileFragment.java", "BodyUseAPI": [], "Fixed commit": "387bc59d4d337fb71c4634f3ac29835839cfcd11", "Url": "https://api.github.com/repos/jonkjenn/hiofcommutingclient", "Date": "2014-07-28T19:34:04Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((swipeLayout.getOpenStatus()) == (SwipeLayout.Status.Close)) { swipeLayout.open(SwipeLayout.DragEdge.Bottom); }else { swipeLayout.close(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6184/buggy-version/Vibernate-2.src.main.java.com.napontaratan.vibernate.view.TimerWeekView.java", "BodyUseAPI": ["com.daimajia.swipe.SwipeLayout.close(boolean)", "com.daimajia.swipe.SwipeLayout.open(SwipeLayout.DragEdge.Bottom)"], "Fixed commit": "a1d5d2118b14d0377151f60c275a9682d731faf8", "Url": "https://api.github.com/repos/D-PLAN/Vibernate-2", "Date": "2015-05-22T07:16:38Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == numOfBlocks) count = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4942/buggy-version/src.p2p.simulator.core.Simulator.java", "BodyUseAPI": [], "Fixed commit": "6dd371287d175f98fd0970dc5a14c32d4b8188a2", "Url": "https://api.github.com/repos/sarise/PublishSubcribe-Chord", "Date": "2011-12-21T18:02:51Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.AuthorEntry.AUTHOR))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (authors != null) { java.lang.String[] authorsArr = authors.split(\",\"); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setLines(authorsArr.length); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(authors.replace(\",\", \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6602/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": ["((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "7086f479066e7788b21c30fb4cc2465cf9d1163a", "Url": "https://api.github.com/repos/carolinewang/Super-Duo", "Date": "2016-01-05T19:41:27Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chooser) != null) image = chooser.getSelectedFile().getAbsolutePath();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8047/buggy-version/ruralHouses.src.gui.AddRuralHouseGUI.java", "BodyUseAPI": [], "Fixed commit": "b378f24142e579169d76bc83f7126b05035eb30b", "Url": "https://api.github.com/repos/amujika/ruralHouses", "Date": "2013-05-17T17:33:11Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processes) == null) { this.processes = processes; }else { this.processes.clear(); this.processes.addAll(processes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1180/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Batch.java", "BodyUseAPI": [], "Fixed commit": "b8038844d08bcfcc0efecc98c8f5cc94746c3168", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batches) == null) { this.batches = batches; }else { this.batches.clear(); this.batches.addAll(batches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1180/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Process.java", "BodyUseAPI": [], "Fixed commit": "b8038844d08bcfcc0efecc98c8f5cc94746c3168", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (id == null) { if (type.equals(\"digital\")) { web.StateServlet.LOG.info(\"Create digital trigger {}\", name); triggerController.create(new web.DigitTrigger(name)); }else if (type.equals(\"analog\")) { web.StateServlet.LOG.info(\"Create analog trigger {}\", name); triggerController.create(new web.AnalogTrigger(name)); } }else { web.AbstractTrigger trigger = triggerController.get(java.lang.Integer.parseInt(id)); web.StateServlet.LOG.info(\"Update trigger {}. New name is {}\", trigger, name); trigger.setName(name); triggerController.update(trigger); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8478/buggy-version/src.main.java.web.StateServlet.java", "BodyUseAPI": ["web.rest.TriggerRestController.get(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "5d1cd40fc3759ed1aa32cdd5cf8bc173ec60bb0d", "Url": "https://api.github.com/repos/rublin/SmartSpace", "Date": "2016-06-23T07:49:44Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (comment != null) { sqlStrings.add(dialect.getTableComment(comment)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/25/buggy-version/hibernate-core.src.main.java.org.hibernate.tool.schema.internal.StandardTableExporter.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(dialect.getTableComment(comment))", "org.hibernate.dialect.Dialect.getTableComment(java.lang.String)"], "Fixed commit": "99675ce0f8681e00d05eb0a7d1817c7bc664f3c4", "Url": "https://api.github.com/repos/hibernate/hibernate-orm", "Date": "2013-07-19T21:08:53Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.headerView)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (headerView != null) headerView.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6262/buggy-version/android.app.src.main.java.com.lipi.notifica.Utilities.java", "BodyUseAPI": ["android.view.View.setVisibility(View.GONE)"], "Fixed commit": "531b49b08bf436054ec4aedd3d700980ab993244", "Url": "https://api.github.com/repos/coders-circle/notifica", "Date": "2016-02-25T13:45:57Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.isAirBlock(botY.down())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8446/buggy-version/src.main.java.com.wynprice.betterunderground.generation.structureGen.GenerateStoneStalactite.java", "BodyUseAPI": [], "Fixed commit": "fc37d8b43b468303bd0981ca6e7c6e6a06467e81", "Url": "https://api.github.com/repos/Wyn-Price/betterunderground", "Date": "2017-08-24T19:01:03Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nicholasnie.call_with_argora.Model.UserModel.query(java.lang.String,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (0 == (cursor.getCount())) { android.content.ContentValues contentValues = new android.content.ContentValues(); contentValues.put(\"userName\", userId); model.add(\"user\", contentValues); }else { int i; cursor.moveToFirst(); for (i = 0; i < (cursor.getCount()); i++) { if (userId.equals(cursor.getString(cursor.getColumnIndex(\"userName\")))) { break; } cursor.moveToNext(); } if (i == ((cursor.getCount()) - 1)) { android.content.ContentValues contentValues = new android.content.ContentValues(); contentValues.put(\"userName\", userId); model.add(\"user\", contentValues); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/716/buggy-version/app.src.main.java.com.nicholasnie.call_with_argora.Presenter.LoginPresenter.java", "BodyUseAPI": ["android.database.Cursor.getCount()", "android.database.Cursor.getColumnIndex(java.lang.String)", "android.database.Cursor.moveToFirst()", "android.database.Cursor.getString(cursor.getColumnIndex(\"userName\"))", "android.database.Cursor.getCount()", "android.database.Cursor.moveToNext()", "java.lang.String.equals(cursor.getString(cursor.getColumnIndex(\"userName\")))"], "Fixed commit": "ad4f5d06307e24f59151ba80e03011df27b3e6b1", "Url": "https://api.github.com/repos/NYH001/call-with-argora", "Date": "2017-12-21T14:56:49Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optLong(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (end == (-1)) end = start;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1524/buggy-version/src.com.zehjot.smartday.SectionMapFragment.java", "BodyUseAPI": [], "Fixed commit": "b0cfb7cc62476181fb03ebf7312996d0fdf8a7e8", "Url": "https://api.github.com/repos/Chrisius/SmartDay", "Date": "2013-08-03T11:01:01Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((event.getPlayer().getItemInHand().getType()) == (org.bukkit.Material.LEASH)) && (plugin.getConfig().getBoolean(\"auto-claim-on-lead\", true))) { }else { event.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4169/buggy-version/src.main.java.com.norcode.bukkit.livestocklock.EntityListener.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerInteractEntityEvent.setCancelled(boolean)"], "Fixed commit": "0c4dd7391991255111f6ffcd86d4f0c81154d864", "Url": "https://api.github.com/repos/andrepl/LivestockLock", "Date": "2013-08-24T13:37:49Z"},
{"Line": "=>692", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (action == null) { android.util.Log.d(com.matoski.adbm.service.ManagerService.LOG_TAG, \"onStartCommand: no action in extras\"); return android.app.Service.START_STICKY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4729/buggy-version/src.com.matoski.adbm.service.ManagerService.java", "BodyUseAPI": [], "Fixed commit": "881f0041d61734ff0cfcbca6d1c0d1eca68e9131", "Url": "https://api.github.com/repos/ilijamt/android-adbm", "Date": "2013-11-15T09:43:25Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getLastKnownLocation(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mLocation == null) { locationManager.requestLocationUpdates(provider, 1000, 0, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7333/buggy-version/app.src.main.java.edu.fsu.cs.mobile.project1app.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "bb9722667c8db5aff3927b5abbd195dee2fa5e73", "Url": "https://api.github.com/repos/Mobile-Team-6/project1", "Date": "2017-07-14T19:47:49Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (uri != null) { int sessionIdIdx = uri.indexOf(\";jsessionid=\"); if (sessionIdIdx != (-1)) { uri = uri.substring(0, sessionIdIdx); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/796/buggy-version/openFaces.source.org.openfaces.util.ResourceFilter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "a339842cf77a0a32fb62244269a8c872e46c007e", "Url": "https://api.github.com/repos/openfaces/OpenFaces", "Date": "2011-10-04T16:21:27Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p1.name.equals(getResources().getString(R.string.all_songs_playlist_name))) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5649/buggy-version/app.src.main.java.itukraine.com.ua.bestmobile.fragment.AllPlaylistsFragment.java", "BodyUseAPI": [], "Fixed commit": "ffcefb11433d883e30716213243ddc23f3a1731f", "Url": "https://api.github.com/repos/ITUkraine/BestMobile", "Date": "2015-12-28T12:33:08Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p2.name.equals(getResources().getString(R.string.all_songs_playlist_name))) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5649/buggy-version/app.src.main.java.itukraine.com.ua.bestmobile.fragment.AllPlaylistsFragment.java", "BodyUseAPI": [], "Fixed commit": "ffcefb11433d883e30716213243ddc23f3a1731f", "Url": "https://api.github.com/repos/ITUkraine/BestMobile", "Date": "2015-12-28T12:33:08Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(subDir.isDirectory())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3451/buggy-version/face.src.com.berak.face.Reco.java", "BodyUseAPI": [], "Fixed commit": "39933e47a4e6d05e88fd4f4ccf34c5e7fd612ed8", "Url": "https://api.github.com/repos/berak/android", "Date": "2013-07-16T14:39:56Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxy - miny) < (mHandleBarHeight)) { if ((getMeasuredHeight()) < (mHandleBarHeight)) { mStatusBar.switchToSettings(); }else { if (((android.view.MotionEvent.ACTION_DOWN) == (event.getActionMasked())) && ((event.getY(0)) < (mHandleBarHeight))) { mStatusBar.switchToSettings(); }else { mStatusBar.flipToSettings(); } } mOkToFlip = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4882/buggy-version/packages.SystemUI.src.com.android.systemui.statusbar.phone.NotificationPanelView.java", "BodyUseAPI": [], "Fixed commit": "29fdb24c86b4bdf9b51a2e58def0e192bc169e91", "Url": "https://api.github.com/repos/ddominator/android_frameworks_base", "Date": "2013-02-24T22:16:59Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(plThread.isAlive())) plThread = new java.lang.Thread(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8622/buggy-version/GomokuServerGUI.src.gomokuserver.Player.java", "BodyUseAPI": [], "Fixed commit": "1f2cc39fd87e55d1951c9c932ec23db35d48b55e", "Url": "https://api.github.com/repos/BusriJarkomTB2/ReturnOfPoi", "Date": "2015-12-04T11:28:02Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(plThread.isAlive())) plThread = new java.lang.Thread(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8622/buggy-version/GomokuServer.src.gomokuserver.Player.java", "BodyUseAPI": [], "Fixed commit": "1f2cc39fd87e55d1951c9c932ec23db35d48b55e", "Url": "https://api.github.com/repos/BusriJarkomTB2/ReturnOfPoi", "Date": "2015-12-04T11:28:02Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, java.util.List<java.lang.String>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (implicitLinks != null) { links.addAll(implicitLinks); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2235/buggy-version/src.main.java.de.tudarmstadt.lt.wiki.hadoop.XmlProcessorMap.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>)"], "Fixed commit": "d8149e3a26a468fe0aa3b5c0e502f1ef862a8c10", "Url": "https://api.github.com/repos/johannessimon/wiki-link-processor", "Date": "2014-11-12T21:44:06Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, java.util.List<java.lang.String>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (explicitLinks != null) { links.addAll(explicitLinks); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2235/buggy-version/src.main.java.de.tudarmstadt.lt.wiki.hadoop.XmlProcessorMap.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>)"], "Fixed commit": "d8149e3a26a468fe0aa3b5c0e502f1ef862a8c10", "Url": "https://api.github.com/repos/johannessimon/wiki-link-processor", "Date": "2014-11-12T21:44:06Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.animation.ValueAnimator.getAnimatedValue()", "com.james.status.views.StatusView.getDefaultColor()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (color == backgroundColor) { if (color == (android.graphics.Color.BLACK)) color = android.graphics.Color.WHITE; else if (color == (android.graphics.Color.WHITE)) color = android.graphics.Color.BLACK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/61/buggy-version/app.src.main.java.com.james.status.views.StatusView.java", "BodyUseAPI": [], "Fixed commit": "ef6c13f0b30b203c807de16dfa9b3ae8785107c6", "Url": "https://api.github.com/repos/TheAndroidMaster/Status", "Date": "2016-09-08T10:21:11Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prev.type.equals(TType.LSQUARE_BRACKET)) { throw new com.laytonsmith.aliasengine.functions.exceptions.ConfigCompileException(\"Empty array_get operator ([])\", t.line_num); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/958/buggy-version/src.main.java.com.laytonsmith.aliasengine.MScriptCompiler.java", "BodyUseAPI": [], "Fixed commit": "d670f9bcb1aa7e0c67263f5e31e93fff0a50159a", "Url": "https://api.github.com/repos/EngineHub/CommandHelper", "Date": "2011-08-24T03:25:17Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getInputText().length()) <= 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5372/buggy-version/src.com.allexit.solidkingdom.menus.TextInputObject.java", "BodyUseAPI": [], "Fixed commit": "96cd1de7293ba8223d9171c81274482f1cbdaf48", "Url": "https://api.github.com/repos/Allexit/Solid-Kingdom", "Date": "2013-12-18T17:27:51Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chapter.getPageCount()) == 0) indexItem.addProperty(\"chapterNo\", chapterNo); else indexItem.addProperty(\"chapterNo\", (chapterNo++));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5307/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java", "BodyUseAPI": [], "Fixed commit": "65bee5477afaff970540908993aac79e25e667d2", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-07-25T09:53:28Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.index.OIndex<?>.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (lastIndexResult != null) result.addAll(applyTailIndexes(lastIndexResult));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/468/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OChainedIndexProxy.java", "BodyUseAPI": ["com.orientechnologies.orient.core.sql.OChainedIndexProxy<T>.applyTailIndexes(java.lang.Object)", "java.util.Set<com.orientechnologies.orient.core.db.record.OIdentifiable>.addAll(java.util.List<com.orientechnologies.orient.core.db.record.OIdentifiable>)"], "Fixed commit": "e9523413a4390a7485857467f3d5cd197290e5f3", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-08-03T13:06:25Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((message.length) > 65535) { throw new java.lang.IllegalArgumentException(\"Message must be less than an unsigned short in length\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/9001/buggy-version/client-connect-api.src.main.java.lilypad.client.connect.api.request.impl.MessageRequest.java", "BodyUseAPI": [], "Fixed commit": "0696a1b8cb16d444c1a4b57c16ca01fea9f1aa0e", "Url": "https://api.github.com/repos/LilyPad/JLilyPad", "Date": "2014-06-06T18:11:27Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((recipients.size()) > 65535) { throw new java.lang.IllegalArgumentException(\"Recipients must be less than an unsigned short in size\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/9001/buggy-version/client-connect-api.src.main.java.lilypad.client.connect.api.request.impl.MessageRequest.java", "BodyUseAPI": [], "Fixed commit": "0696a1b8cb16d444c1a4b57c16ca01fea9f1aa0e", "Url": "https://api.github.com/repos/LilyPad/JLilyPad", "Date": "2014-06-06T18:11:27Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.dom.IfStatement.getElseStatement()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (elseStatement instanceof org.eclipse.jdt.core.dom.Block) { final org.eclipse.jdt.core.dom.Block elseBlock = ((org.eclipse.jdt.core.dom.Block) (elseStatement)); this.optionalElseBlocks.put(node, elseBlock); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1203/buggy-version/src.jp.ac.osaka_u.ist.sdl.prevol.methodanalyzer.ASTAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "866a364c2aaf8a48ca5686dc2c2ef1463437d7f6", "Url": "https://api.github.com/repos/k-hotta/prevol", "Date": "2013-08-02T10:59:57Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((idPersona.equals(getLoggedPersonaId())) || ((getLoggedPersonaId()) == null)) || (isBypass == true)) return idPersona; else throw new br.com.soapboxrace.definition.ServerExceptions.PersonaIdMismatchException(getLoggedPersonaId(), idPersona);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/572/buggy-version/src.main.java.br.com.soapboxrace.engine.Personas.java", "BodyUseAPI": [], "Fixed commit": "be2f4809d75009c4be2bc192f5df8f79ec33c2ee", "Url": "https://api.github.com/repos/berkay2578/soapbox-race", "Date": "2016-05-18T23:41:06Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.evolutioncoding.areashop.regions.BuyRegion.isInResellingMode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isResell) { requiredMoney = getFormattedResellPrice(); }else { requiredMoney = getFormattedPrice(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2171/buggy-version/src.nl.evolutioncoding.areashop.regions.BuyRegion.java", "BodyUseAPI": [], "Fixed commit": "5bae5ecf67e8a01000377464fcf72b12c906d98a", "Url": "https://api.github.com/repos/NLthijs48/AreaShop", "Date": "2015-01-12T16:11:08Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBet) { if (i == 0) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5868/buggy-version/src.com.kickass.MCDuel.Commands.CommandHandler.java", "BodyUseAPI": [], "Fixed commit": "bd610efe11a0acbf969edb7ebe7ce1714365c304", "Url": "https://api.github.com/repos/Rza1337/MCDuel", "Date": "2014-08-09T16:26:52Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (encodePassword) { final java.lang.String plaintextPassword = user.getPassword(); final java.lang.String encodedPassword = passwordEncoder.encode(plaintextPassword); user.setPassword(encodedPassword); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4720/buggy-version/src.main.java.uk.co.yottr.service.UserService.java", "BodyUseAPI": [], "Fixed commit": "e5a1e864fa21cf9a7a20dce39914d0f63abb43b7", "Url": "https://api.github.com/repos/mikehartley/yottr", "Date": "2014-09-27T22:42:33Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reader) != null) { reader.searchMapIndex(sr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7967/buggy-version/OsmAnd-java.src.net.osmand.map.OsmandRegions.java", "BodyUseAPI": [], "Fixed commit": "f6692765f256a44ec58dac4129935a723657e1d1", "Url": "https://api.github.com/repos/poretsky/Osmand", "Date": "2013-10-26T22:37:32Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reader) != null) { reader.searchMapIndex(sr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7967/buggy-version/OsmAnd-java.src.net.osmand.map.OsmandRegions.java", "BodyUseAPI": [], "Fixed commit": "f6692765f256a44ec58dac4129935a723657e1d1", "Url": "https://api.github.com/repos/poretsky/Osmand", "Date": "2013-10-26T22:37:32Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reader) != null) { reader.searchMapIndex(sr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7967/buggy-version/OsmAnd-java.src.net.osmand.map.OsmandRegions.java", "BodyUseAPI": [], "Fixed commit": "f6692765f256a44ec58dac4129935a723657e1d1", "Url": "https://api.github.com/repos/poretsky/Osmand", "Date": "2013-10-26T22:37:32Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y.isHitGround()) { newObjectNeeded = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/9029/buggy-version/core.src.com.dualdigital.cupidshooter.PlayGame.java", "BodyUseAPI": [], "Fixed commit": "6d19b2726e71e84dcbcd1023c126892ff62dc672", "Url": "https://api.github.com/repos/tundetunde/CupidShooter", "Date": "2016-01-16T22:25:49Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((productOrders.get(i).getSuppliers()) != null) for (model.productOrder.Supplier s : productOrders.get(i).getSuppliers()) sum += s.getPrice();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4217/buggy-version/SupplyChainManager.src.view.productOrder.ProductOrderListView.java", "BodyUseAPI": ["java.util.ArrayList<model.productOrder.ProductOrder>.get(int)", "productOrders.get(i).getSuppliers()"], "Fixed commit": "f6f2a78fd9488548b148544f5132f5d6b785eef5", "Url": "https://api.github.com/repos/arianbakh/OOD", "Date": "2017-08-10T11:23:59Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cs3500.music.view.ConcreteGuiViewPanel.calculateY(cs3500.music.view.NoteRep)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (noteY <= ((cs3500.music.view.ConcreteGuiViewPanel.NOTE_HEIGHT) / 2)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4240/buggy-version/src.cs3500.music.view.ConcreteGuiViewPanel.java", "BodyUseAPI": [], "Fixed commit": "7c95f1bba8ac21c8583272f4d51d8ef0fffd4a05", "Url": "https://api.github.com/repos/Arianna2028/MusicEditor", "Date": "2016-04-05T11:19:50Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((coneforest.psi.core.PsiInteger) (ops[0])).intValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nValue == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8669/buggy-version/src.java.coneforest.psi.core._roll.java", "BodyUseAPI": [], "Fixed commit": "db0fedc11f276f663f8cdafc12d3f7dabd8f9314", "Url": "https://api.github.com/repos/urbic/psylla", "Date": "2015-06-20T20:10:56Z"},
{"Line": "=>724", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (lineToDelete == null) return java.lang.String.format(backend.Storage.MESSAGE_ERROR_INVALID_LINE_ACCESS, lineNumber);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8065/buggy-version/src.backend.Storage.java", "BodyUseAPI": [], "Fixed commit": "dd89e567be69d1744af71dbad0e0b6c81c75642a", "Url": "https://api.github.com/repos/cs2103aug2015-w15-2j/WhatToDo", "Date": "2015-10-07T07:12:47Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(this.toFile.endsWith(\"/\"))) this.toFile += \"/\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6439/buggy-version/native-src.android.app.src.main.java.mobilemind.com.br.nativescript.backgroundtask.UnzipTask.java", "BodyUseAPI": [], "Fixed commit": "a3499233e481d7a1cfa0c7303a8f102d358163ba", "Url": "https://api.github.com/repos/mobilemindtec/nativescript-background-task", "Date": "2016-06-10T14:15:32Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["server.getCounterEngine().getCounterIconFileName(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (scouter.util.StringUtil.isEmpty(imgName)) { return scouter.client.util.ImageUtil.UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/177/buggy-version/scouter.client.src.scouter.client.Images.java", "BodyUseAPI": [], "Fixed commit": "def3d1cd92115f3318324e2860b448b342bbe5b5", "Url": "https://api.github.com/repos/scouter-project/scouter", "Date": "2015-09-25T06:51:39Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["server.getCounterEngine().getCounterIconFileName(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (scouter.util.StringUtil.isEmpty(imgName)) { return scouter.client.util.ImageUtil.getImageDescriptor(ImageUtil.UNKNOWN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/177/buggy-version/scouter.client.src.scouter.client.Images.java", "BodyUseAPI": [], "Fixed commit": "def3d1cd92115f3318324e2860b448b342bbe5b5", "Url": "https://api.github.com/repos/scouter-project/scouter", "Date": "2015-09-25T06:51:39Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((fileFilter) != null) && (fileFilter.autoSync(file))) { autoSyncFiles.add(file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5728/buggy-version/library.src.main.java.me.denley.notary.DirectoryObserver.java", "BodyUseAPI": ["java.util.List<me.denley.notary.File>.add(me.denley.notary.File)"], "Fixed commit": "160eda359ab2e596dcb7755fd833e24f750447b5", "Url": "https://api.github.com/repos/denley/Notary", "Date": "2015-03-19T08:32:43Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stack.stackSize) > 0) { activator.sendItem(stack, direction.getOpposite()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5197/buggy-version/common.buildcraft.transport.stripes.StripesHandlerShears.java", "BodyUseAPI": ["buildcraft.api.transport.IStripesActivator.sendItem(net.minecraft.item.ItemStack,direction.getOpposite())"], "Fixed commit": "02477afb99ee0cacb8a23020e4ba29f63a196551", "Url": "https://api.github.com/repos/BuildCraft/BuildCraft", "Date": "2015-05-17T09:47:01Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stack.attemptDamageItem(1, player.getRNG())) { (stack.stackSize)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5197/buggy-version/common.buildcraft.transport.stripes.StripesHandlerShears.java", "BodyUseAPI": [], "Fixed commit": "02477afb99ee0cacb8a23020e4ba29f63a196551", "Url": "https://api.github.com/repos/BuildCraft/BuildCraft", "Date": "2015-05-17T09:47:01Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) != null) { for (final long ancestorId : parent.getAncestors()) { ancestorIds.add(ancestorId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3474/buggy-version/src.jp.ac.osaka_u.ist.sdl.ectec.analyzer.sourceanalyzer.crd.AbstractCRDCreator.java", "BodyUseAPI": [], "Fixed commit": "150bdb51e50bf8dab1f4fa25b58cd647aa86610e", "Url": "https://api.github.com/repos/kusumotolab/ECTEC", "Date": "2013-09-22T12:29:51Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getTag()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((mMoniterMap) != null) && (!(mMoniterMap.containsKey(mPackageList.get(holder.position).getmPackageName())))) { mMoniterMap.put(mPackageList.get(holder.position).getmPackageName(), ((long) (0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2495/buggy-version/src.com.asgj.android.appusage.ui.widgets.PreferenceListAdapter.java", "BodyUseAPI": ["mPackageList.get(holder.position).getmPackageName()", "java.util.ArrayList<com.asgj.android.appusage.Utility.ResolveInfo>.get(int)", "java.util.HashMap<java.lang.String, java.lang.Long>.put(mPackageList.get(holder.position).getmPackageName(),int)"], "Fixed commit": "a0a487490f55bb7b8d4352ac16066c555a60e560", "Url": "https://api.github.com/repos/gaurav133/PhoneUse", "Date": "2015-07-20T14:53:17Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (bAuthor != null) author = bAuthor.toUserString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1983/buggy-version/LibraryManager.src.MetadataFinder.java", "BodyUseAPI": [], "Fixed commit": "962e505b4030cb5fc713234f09286a6c31d61856", "Url": "https://api.github.com/repos/rosshudgins/Thema", "Date": "2015-05-04T03:22:48Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (bYear != null) year = bYear.toUserString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1983/buggy-version/LibraryManager.src.MetadataFinder.java", "BodyUseAPI": [], "Fixed commit": "962e505b4030cb5fc713234f09286a6c31d61856", "Url": "https://api.github.com/repos/rosshudgins/Thema", "Date": "2015-05-04T03:22:48Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (bJournal != null) journal = bJournal.toUserString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1983/buggy-version/LibraryManager.src.MetadataFinder.java", "BodyUseAPI": [], "Fixed commit": "962e505b4030cb5fc713234f09286a6c31d61856", "Url": "https://api.github.com/repos/rosshudgins/Thema", "Date": "2015-05-04T03:22:48Z"},
{"Line": "=>874", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((t.toString().toLowerCase().indexOf(s.toString().toLowerCase())) != (-1)) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/240/buggy-version/src.github.daneren2005.dsub.util.Util.java", "BodyUseAPI": [], "Fixed commit": "087a7dd150d7f0180e92c47e5a43adfbd8aa91c4", "Url": "https://api.github.com/repos/daneren2005/Subsonic", "Date": "2014-12-16T01:48:48Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getView()) != null) { getListAdapter().changeCursor(null); setListAdapter(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1110/buggy-version/app.src.main.java.org.fasola.fasolaminutes.CursorListFragment.java", "BodyUseAPI": [], "Fixed commit": "b207c9c07c22ecc248e58ec223959904c902b93f", "Url": "https://api.github.com/repos/mrichards42/fasola_android", "Date": "2015-04-25T19:54:01Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.lang.model.util.ElementFilter.fieldsIn(java.util.Collection<? extends javax.lang.model.element.Element>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fields.size()) == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3702/buggy-version/kitten-processor.src.main.java.com.example.KittenBinderProcessor.java", "BodyUseAPI": [], "Fixed commit": "c3d017dbf57b0fd22a5219104b4b5d17baa16db6", "Url": "https://api.github.com/repos/springwong/KittenBinder", "Date": "2017-03-06T03:26:14Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent.getToolbar()) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6223/buggy-version/CodenameOne.src.com.codename1.ui.MenuBar.java", "BodyUseAPI": [], "Fixed commit": "2c9c90923230455b6f3da3d382d79f983c58794e", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-05-16T10:06:59Z"},
{"Line": "=>618", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((w.getObject()) == null) { throw new java.lang.RuntimeException(((\"Received null object for id \" + (m.get(\"id\"))) + \" this shouldn't happen.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7329/buggy-version/src.ca.weblite.codename1.db.DAO.java", "BodyUseAPI": [], "Fixed commit": "aa33e00de7168b8b49513b55188f3a64651ac9aa", "Url": "https://api.github.com/repos/shannah/cn1-data-access-lib", "Date": "2014-07-03T00:11:20Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((executionCallback) != null) { future.andThen(executionCallback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1264/buggy-version/hazelcast.src.main.java.com.hazelcast.spi.impl.operationservice.impl.InvocationBuilderImpl.java", "BodyUseAPI": [], "Fixed commit": "c366a87296e30ad69fa791e2acc738494a25f894", "Url": "https://api.github.com/repos/pveentjer/hazelcast", "Date": "2016-03-19T16:02:13Z"},
{"Line": "=>1147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.runwaysdk.query.EntityQuery.getMdAttributeROfromMap(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((mdAttributeIF != null) && (mdAttributeIF.getType().equals(MdAttributeTerm.CLASS))) { this.checkValidAttributeRequest(name, this.mdEntityIF, mdAttributeIF, MdAttributeTerm.CLASS); }else { this.checkValidAttributeRequest(name, this.mdEntityIF, mdAttributeIF, MdAttributeReferenceInfo.CLASS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/9017/buggy-version/runwaysdk-server.src.main.java.com.runwaysdk.query.EntityQuery.java", "BodyUseAPI": ["com.runwaysdk.query.EntityQuery.checkValidAttributeRequest(java.lang.String,com.runwaysdk.dataaccess.MdEntityDAOIF,com.runwaysdk.dataaccess.MdAttributeDAOIF,MdAttributeTerm.CLASS)", "com.runwaysdk.query.EntityQuery.checkValidAttributeRequest(java.lang.String,com.runwaysdk.dataaccess.MdEntityDAOIF,com.runwaysdk.dataaccess.MdAttributeDAOIF,MdAttributeReferenceInfo.CLASS)"], "Fixed commit": "9e1060ec098e93910e938dde72711d20c8bea828", "Url": "https://api.github.com/repos/terraframe/Runway-SDK", "Date": "2014-07-01T01:35:22Z"},
{"Line": "=>889", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_msg) != null) _msg.setVisible(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3289/buggy-version/src.ihm.InGame_IHM.java", "BodyUseAPI": [], "Fixed commit": "2dc3f98e282a0de20704fdf72570e121d9dbe748", "Url": "https://api.github.com/repos/Turok21/TweetEnOr", "Date": "2015-12-10T12:38:19Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xyz.edmw.Forum.getUser()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (user != null) { navViewHolder.setUser(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4326/buggy-version/app.src.main.java.xyz.edmw.MainActivity.java", "BodyUseAPI": ["xyz.edmw.NavViewHolder.setUser(xyz.edmw.User)"], "Fixed commit": "5f30280bb155017a71668fcc88de8a844278a521", "Url": "https://api.github.com/repos/leeyikjiun/EDMW", "Date": "2016-01-21T17:05:25Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((block.getType()) == (org.bukkit.Material.AIR)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/973/buggy-version/src.main.java.net.skrypt.spigot.skryptcore.api.block.listener.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "85e162ba3858fd974b4f126d91f28d7e5c46b607", "Url": "https://api.github.com/repos/TheSkrypt/skryptcoreapi", "Date": "2017-07-09T17:06:20Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (block == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/973/buggy-version/src.main.java.net.skrypt.spigot.skryptcore.api.block.listener.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "85e162ba3858fd974b4f126d91f28d7e5c46b607", "Url": "https://api.github.com/repos/TheSkrypt/skryptcoreapi", "Date": "2017-07-09T17:06:20Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.photon.phresco.plugins.model.Mojos.Mojo.Configuration.Parameters.Parameter.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (com.photon.phresco.ui.phrescoexplorer.REQ_TEST_TYPE.equals(key)) { parameter.setValue(fromPage); }else if (com.photon.phresco.ui.phrescoexplorer.LOGO.equals(key)) { parameter.setValue(getLogoImageString(userId, customerId)); }else if (com.photon.phresco.ui.phrescoexplorer.THEME.equals(key)) { parameter.setValue(getThemeColorJson(userId, customerId)); }else if (com.photon.phresco.ui.phrescoexplorer.REQ_REPORT_NAME.equals(key)) { parameter.setValue(pdfName); }else if (com.photon.phresco.ui.phrescoexplorer.TECHNOLOGY_NAME.equals(key)) { parameter.setValue(technology.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2807/buggy-version/com.photon.phresco.ui.src.com.photon.phresco.ui.phrescoexplorer.ReportPage.java", "BodyUseAPI": ["com.photon.phresco.ui.phrescoexplorer.THEME.equals(java.lang.String)", "com.photon.phresco.ui.phrescoexplorer.TECHNOLOGY_NAME.equals(java.lang.String)", "com.photon.phresco.ui.phrescoexplorer.LOGO.equals(java.lang.String)", "com.photon.phresco.ui.phrescoexplorer.REQ_REPORT_NAME.equals(java.lang.String)"], "Fixed commit": "4eab9e5dc661c5c1c5b68fdd57113895cb322f72", "Url": "https://api.github.com/repos/photon-infotech/phresco-eclipse", "Date": "2013-08-23T06:13:38Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(deadPrj.contains(((Projectile) (o))))) deadPrj.addAll(moveProjectile(((Projectile) (o))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/665/buggy-version/Asm.lab3.mazewar.MazeImpl.java", "BodyUseAPI": ["java.util.Collection.addAll(java.util.Collection)", "MazeImpl.moveProjectile(java.lang.Object)"], "Fixed commit": "4c18c212dbbaafb2b1b99dc060e27aad4d0c9314", "Url": "https://api.github.com/repos/ypsun/ece419", "Date": "2015-02-26T22:02:58Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cookie == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3390/buggy-version/src.main.java.com.xiuhao.pagelet.servlet.cookie.EncryptCookie.java", "BodyUseAPI": [], "Fixed commit": "0c87e22f1a340f09a8631ab78ef55f0066ca590f", "Url": "https://api.github.com/repos/seanlinwang/commons", "Date": "2014-06-13T16:09:18Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(strokeRate)) { resetPeriod = org.walley.strokeme.StrokeMeActivity.maxResetPeriod; }else { resetPeriod = java.lang.Math.min(org.walley.strokeme.StrokeMeActivity.maxResetPeriod, (3.0 / ((strokeRate) / 60.0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5092/buggy-version/strokeme.src.org.walley.strokeme.StrokeMeActivity.java", "BodyUseAPI": [], "Fixed commit": "3baaa6b83fa41a39695aa6169e98b2f0fc5e6dba", "Url": "https://api.github.com/repos/johnwalley/strokeme", "Date": "2011-09-06T12:42:44Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(vcard.iterator().hasNext())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2731/buggy-version/rdap-webapp.src.main.java.org.restfulwhois.rdap.core.entity.model.jcard.Jcard.java", "BodyUseAPI": [], "Fixed commit": "6c9c6eeb641a0dfe7a826ece6826df0bd5144442", "Url": "https://api.github.com/repos/cnnic/rdap", "Date": "2014-12-05T06:09:56Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((workout.get(homeCircuitIndex).getExercise(homeExerciseIndex).getName()) != \"test\") { com.main.toledo.gymtrackr.Exercise tempExercise = workout.get(homeCircuitIndex).getExercise(homeExerciseIndex); workout.get(homeCircuitIndex).removeExercise(homeExerciseIndex); android.util.Log.d(\"TOUCH TEST\", (((\"DEST CIRC INDEX: \" + destinationCircuitIndex) + \" DEST EX INDEX: \") + destinationExerciseIndex)); workout.get(destinationCircuitIndex).addExerciseAtIndex(destinationExerciseIndex, tempExercise); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/9226/buggy-version/app.src.main.java.com.main.toledo.gymtrackr.WorkspaceExpandableListAdapterMKII.java", "BodyUseAPI": ["workout.get(destinationCircuitIndex).addExerciseAtIndex(int,com.main.toledo.gymtrackr.Exercise)", "workout.get(homeCircuitIndex).getExercise(int)", "java.util.ArrayList<com.main.toledo.gymtrackr.Circuit>.get(int)", "java.util.ArrayList<com.main.toledo.gymtrackr.Circuit>.get(int)", "workout.get(homeCircuitIndex).removeExercise(int)", "java.util.ArrayList<com.main.toledo.gymtrackr.Circuit>.get(int)"], "Fixed commit": "dd4137b919b77be111fd8316d4d3041c404ae688", "Url": "https://api.github.com/repos/kodieGlosser/FitnessApp", "Date": "2015-02-23T03:15:06Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (paintData != null) { paintData = paintData.clone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7147/buggy-version/src.main.java.riskyken.armourersWorkshop.common.skin.ArmourerWorldHelper.java", "BodyUseAPI": ["int[].clone()"], "Fixed commit": "16456582a64e7978748979aa2156edebbdb10a3c", "Url": "https://api.github.com/repos/RiskyKen/Armourers-Workshop", "Date": "2016-06-10T20:39:48Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tmp.getVectorRepresentation().size()) > 0) { minMaxList.add(java.util.Collections.max(tmp.getVectorRepresentation())); minMaxList.add(java.util.Collections.min(tmp.getVectorRepresentation())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8528/buggy-version/src.main.java.com.textclustering.kmeans.KMeans.java", "BodyUseAPI": ["java.util.Collections.max(tmp.getVectorRepresentation())", "java.util.LinkedList<java.lang.Double>.add(java.lang.Object)", "com.data.Document.TextDocument.getVectorRepresentation()", "java.util.Collections.min(tmp.getVectorRepresentation())", "java.util.LinkedList<java.lang.Double>.add(java.lang.Object)", "com.data.Document.TextDocument.getVectorRepresentation()"], "Fixed commit": "75725cfedaf72af8f062116ab3942759487edee6", "Url": "https://api.github.com/repos/GeorgeDittmar/TextClustering", "Date": "2014-01-19T07:13:37Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.size()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2000/buggy-version/src.dna.graph.datastructures.DArray.java", "BodyUseAPI": [], "Fixed commit": "749f4a43f6034ceba09f1f7899a0185a45d311af", "Url": "https://api.github.com/repos/NicoHaase/DNA", "Date": "2013-10-08T01:01:22Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mShouldClose) { close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5122/buggy-version/android-stream-lib.src.main.java.org.ohmage.streams.StreamWriter.java", "BodyUseAPI": [], "Fixed commit": "219209b55e8bb66584841e04ea310465ee49e004", "Url": "https://api.github.com/repos/ohmage/android-stream-lib", "Date": "2014-05-23T22:12:39Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mBuffer.isEmpty())) { mShouldClose = true; }else { mContext.unbindService(this); dataService = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5122/buggy-version/android-stream-lib.src.main.java.org.ohmage.streams.StreamWriter.java", "BodyUseAPI": [], "Fixed commit": "219209b55e8bb66584841e04ea310465ee49e004", "Url": "https://api.github.com/repos/ohmage/android-stream-lib", "Date": "2014-05-23T22:12:39Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((numberOfTabs - 1) != (com.imarkusi.design_support_library_example.activities.MainActivity.TAB_LIMIT)) { setupViewPager(numberOfTabs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5094/buggy-version/app.src.main.java.com.imarkusi.design_support_library_example.activities.MainActivity.java", "BodyUseAPI": ["com.imarkusi.design_support_library_example.activities.MainActivity.setupViewPager(int)"], "Fixed commit": "eb979829cdc2952d30fab1778b050e00387bea18", "Url": "https://api.github.com/repos/markusi7/design-support-library-example", "Date": "2015-10-11T20:12:10Z"},
{"Line": "=>761", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.biojava.bio.structure.io.SeqRes2AtomAligner.getMatchingAtomRes(org.biojava.bio.structure.Chain,java.util.List<org.biojava.bio.structure.Chain>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (atomChain == null) { org.biojava.bio.structure.io.mmcif.SimpleMMcifConsumer.logger.warn(\"Could not map SEQRES chain with asym_id={} to any ATOM chain. Most likely there's no observed residues in the chain.\", seqResChain.getChainID()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8745/buggy-version/biojava3-structure.src.main.java.org.biojava.bio.structure.io.mmcif.SimpleMMcifConsumer.java", "BodyUseAPI": [], "Fixed commit": "9b09e4d1903e51b9dea3c60de34fb709e7722a44", "Url": "https://api.github.com/repos/josemduarte/biojava", "Date": "2015-01-22T15:30:06Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (menu != null) { menu.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7174/buggy-version/app.src.main.java.com.zai.nomwell.fragments.MyListsFragment.java", "BodyUseAPI": ["android.view.Menu.clear()"], "Fixed commit": "1f1e88d6025c4bd5be20345d82f9ff35f6cbad56", "Url": "https://api.github.com/repos/sjunaidkhaan/NomWell", "Date": "2015-12-21T10:39:49Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(fieldAllIDs)) { fieldAllIDs = java.lang.Integer.toString(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7437/buggy-version/web.app.dao.AdvSearchDAO.java", "BodyUseAPI": [], "Fixed commit": "9ff38fa252852c97559108cda0ba9f38ac1a7817", "Url": "https://api.github.com/repos/linkedin/WhereHows", "Date": "2016-03-15T00:07:08Z"},
{"Line": "=>952", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(flagExists(\"allow-break\"))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/123/buggy-version/src.main.java.br.net.fabiozumbi12.RedProtect.Region.java", "BodyUseAPI": [], "Fixed commit": "7fff5635de84942d2ab350cbb9c7c0bc0e55b7a7", "Url": "https://api.github.com/repos/FabioZumbi12/RedProtect", "Date": "2016-05-09T06:01:20Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((RedProtect.v.startsWith(\"1.9\")) && ((e.getItem()) != null)) { m = e.getItem().getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/123/buggy-version/src.main.java.br.net.fabiozumbi12.RedProtect.listeners.RPMine18.java", "BodyUseAPI": ["e.getItem().getType()", "org.bukkit.event.player.PlayerInteractEvent.getItem()"], "Fixed commit": "7fff5635de84942d2ab350cbb9c7c0bc0e55b7a7", "Url": "https://api.github.com/repos/FabioZumbi12/RedProtect", "Date": "2016-05-09T06:01:20Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p2.getInventory().getItemInMainHand()) != null) { mp2 = p2.getInventory().getItemInMainHand().getType(); }else { mp2 = p2.getInventory().getItemInOffHand().getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/123/buggy-version/src.main.java.br.net.fabiozumbi12.RedProtect.listeners.RPEntityListener.java", "BodyUseAPI": ["p2.getInventory().getItemInMainHand().getType()", "org.bukkit.entity.Player.getInventory()", "p2.getInventory().getItemInMainHand()", "org.bukkit.entity.Player.getInventory()", "p2.getInventory().getItemInOffHand().getType()", "p2.getInventory().getItemInOffHand()"], "Fixed commit": "7fff5635de84942d2ab350cbb9c7c0bc0e55b7a7", "Url": "https://api.github.com/repos/FabioZumbi12/RedProtect", "Date": "2016-05-09T06:01:20Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg == argc) { if ((data2[(x++)]) != (data[i])) { return false; } if ((x + 1) == (data2.length)) { return x == (data2.length); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4746/buggy-version/src.main.java.net.aufdemrand.denizencore.utilities.CoreUtilities.java", "BodyUseAPI": [], "Fixed commit": "a4bfe78256baeb13e509cd965e15d5bfcfa502a8", "Url": "https://api.github.com/repos/DenizenScript/Denizen-Core", "Date": "2015-06-29T20:31:20Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (r != null) { r.received(buffer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2884/buggy-version/ninio-http.src.main.java.com.davfx.ninio.http.HttpLimit.java", "BodyUseAPI": ["com.davfx.ninio.http.HttpContentReceiver.received(java.nio.ByteBuffer)"], "Fixed commit": "5b943eeed3ab37ac07f51d6953dff0d018ea5bff", "Url": "https://api.github.com/repos/davidfauthoux/ninio", "Date": "2016-09-16T15:23:27Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (r != null) { r.ended(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2884/buggy-version/ninio-http.src.main.java.com.davfx.ninio.http.HttpLimit.java", "BodyUseAPI": ["com.davfx.ninio.http.HttpContentReceiver.ended()"], "Fixed commit": "5b943eeed3ab37ac07f51d6953dff0d018ea5bff", "Url": "https://api.github.com/repos/davidfauthoux/ninio", "Date": "2016-09-16T15:23:27Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (r != null) { r.received(buffer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2884/buggy-version/ninio-http.src.main.java.com.davfx.ninio.http.HttpTimeout.java", "BodyUseAPI": ["com.davfx.ninio.http.HttpContentReceiver.received(java.nio.ByteBuffer)"], "Fixed commit": "5b943eeed3ab37ac07f51d6953dff0d018ea5bff", "Url": "https://api.github.com/repos/davidfauthoux/ninio", "Date": "2016-09-16T15:23:27Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (r != null) { r.ended(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2884/buggy-version/ninio-http.src.main.java.com.davfx.ninio.http.HttpTimeout.java", "BodyUseAPI": ["com.davfx.ninio.http.HttpContentReceiver.ended()"], "Fixed commit": "5b943eeed3ab37ac07f51d6953dff0d018ea5bff", "Url": "https://api.github.com/repos/davidfauthoux/ninio", "Date": "2016-09-16T15:23:27Z"},
{"Line": "=>2293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rPrefers.contains(prefer))) rPrefers.add(prefer);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6495/buggy-version/logic.Player.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "cc33b7ed141bb91e8114f9a7c70ac4ad32388724", "Url": "https://api.github.com/repos/vossnarrator/TheNarrator", "Date": "2017-12-19T04:59:07Z"},
{"Line": "=>2297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(_tPrefers.contains(prefer))) _tPrefers.add(prefer);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6495/buggy-version/logic.Player.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "cc33b7ed141bb91e8114f9a7c70ac4ad32388724", "Url": "https://api.github.com/repos/vossnarrator/TheNarrator", "Date": "2017-12-19T04:59:07Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(registeredPermissions.containsKey(t.getResourceKey()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6021/buggy-version/hypersocket-core.src.main.java.com.hypersocket.permissions.PermissionServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "4144d2845d7ed01a46c92157b04cbff436b24f0a", "Url": "https://api.github.com/repos/ludup/hypersocket-framework", "Date": "2015-01-06T18:41:05Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (webLibFolder.exists()) { signJarParams.addResource(webOutputDir, \"lib\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2059/buggy-version/src.main.java.com.zenjava.javafx.maven.plugin.WebMojo.java", "BodyUseAPI": [], "Fixed commit": "b5fd5390293bfd93335fdebaa5644b7cfde53d82", "Url": "https://api.github.com/repos/FibreFoX/javafx-maven-plugin", "Date": "2015-04-29T07:53:11Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (_defectTable.isEditing()) { _defectTable.getCellEditor().cancelCellEditing(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3599/buggy-version/src.net.sf.memoranda.ui.DefectTrackingPanel.java", "BodyUseAPI": ["net.sf.memoranda.ui.DefectFormTable.getCellEditor()", "_defectTable.getCellEditor().cancelCellEditing()"], "Fixed commit": "d1f633a24f9847d4908692169d34eb954fbd3588", "Url": "https://api.github.com/repos/ser316asu/Zehlendorf_SER316", "Date": "2017-04-28T03:40:03Z"},
{"Line": "=>3653", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (listener != null) { listener.nodeMoved(oldNodeId, newNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4193/buggy-version/src.org.exist.xquery.XQueryContext.java", "BodyUseAPI": ["org.exist.storage.UpdateListener.nodeMoved(org.exist.numbering.NodeId,org.exist.dom.persistent.NodeHandle)"], "Fixed commit": "d55ce5f71e07dad00229e1bcb707fd6b03626921", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2015-12-08T13:22:12Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.Ben12345rocks.VotingPlugin.Config.Config.getInstance().getLoadTopVoterWeekly()) { list.add(com.Ben12345rocks.VotingPlugin.Objects.TopVoter.Weekly); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7236/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.TopVoter.java", "BodyUseAPI": [], "Fixed commit": "24af26ff501698dc55be7fcc1c3ff5dcd96b7d0a", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2017-04-17T15:05:53Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.Ben12345rocks.VotingPlugin.Config.Config.getInstance().getLoadTopVoterAllTime()) { list.add(com.Ben12345rocks.VotingPlugin.Objects.TopVoter.AllTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7236/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.TopVoter.java", "BodyUseAPI": [], "Fixed commit": "24af26ff501698dc55be7fcc1c3ff5dcd96b7d0a", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2017-04-17T15:05:53Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.Ben12345rocks.VotingPlugin.Config.Config.getInstance().getLoadTopVoterMonthly()) { list.add(com.Ben12345rocks.VotingPlugin.Objects.TopVoter.Monthly); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7236/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.TopVoter.java", "BodyUseAPI": [], "Fixed commit": "24af26ff501698dc55be7fcc1c3ff5dcd96b7d0a", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2017-04-17T15:05:53Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (method != null) { method.setAccessible(true); try { return ((org.bukkit.event.HandlerList) (method.invoke(null))); } catch (java.lang.IllegalAccessException e) { e.printStackTrace(); } catch (java.lang.IllegalArgumentException e) { e.printStackTrace(); } catch (java.lang.reflect.InvocationTargetException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3790/buggy-version/src.main.java.org.bukkit.plugin.SimplePluginManager.java", "BodyUseAPI": ["java.lang.reflect.Method.setAccessible(boolean)", "java.lang.reflect.Method.invoke(<nulltype>)"], "Fixed commit": "30b50d31fae55386663cb651968239caf28f3df4", "Url": "https://api.github.com/repos/St-Arai/Experiment1-1", "Date": "2013-06-17T05:54:35Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vg.civcraft.mc.citadel.Utility.getRealBlock(org.bukkit.block.Block)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (blocks.contains(block)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3268/buggy-version/src.vg.civcraft.mc.citadel.listener.EntityListener.java", "BodyUseAPI": [], "Fixed commit": "5f4d9b04a5cf3ec789b96f9896adc177f8be7f58", "Url": "https://api.github.com/repos/Civcraft/Citadel", "Date": "2015-03-08T21:29:27Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONArray.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"\u5c0f\u6d0b\u5c71\".equals(autoStationDataObject.get(\"STATIONNAME\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2578/buggy-version/src.main.java.com.adc.disasterforecast.task.RealTimeControlTask.java", "BodyUseAPI": [], "Fixed commit": "20b5b916cac3b0b4ee70ac33c86824ee8dc94a13", "Url": "https://api.github.com/repos/Victor-ZHC/weathervisualization", "Date": "2017-12-19T04:47:28Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentCategory) != null) && (savedInstanceState == null)) { categoryTitle.setText(currentCategory.title); categoryDate.setText(com.best.memorize4me.util.DateUtils.dateToString(currentCategory.date)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6966/buggy-version/app.src.main.java.com.best.memorize4me.Create_new_item.java", "BodyUseAPI": [], "Fixed commit": "0ddd65e70fa0f067a0aa3133bae0fae4bbe4c92d", "Url": "https://api.github.com/repos/pballart/Memorize4me", "Date": "2015-07-09T10:16:19Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.jar.JarEntry.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((name.equals(bathe.BatheBooter.WEB_JAR_PREFIX)) || (name.equals(bathe.BatheBooter.WEB_CLASSES_PREFIX))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7020/buggy-version/src.main.java.bathe.BatheBooter.java", "BodyUseAPI": [], "Fixed commit": "c98e1bf49e019da191cfe75372b8380fdbb21f27", "Url": "https://api.github.com/repos/rvowles/bathe-booter", "Date": "2014-05-13T02:46:24Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.content.ContextCompat.checkSelfPermission(this, android.Manifest.permission.READ_PHONE_STATE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ android.Manifest.permission.READ_PHONE_STATE }, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4806/buggy-version/app.src.main.java.com.moon.myreadapp.ui.base.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "c13bea14118227804c70acdbd424a70108dcad11", "Url": "https://api.github.com/repos/moonChenHaohui/ANDROID-MVVM-RSS", "Date": "2016-04-08T05:01:50Z"},
{"Line": "=>2376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lexer.token()) == (com.alibaba.druid.sql.parser.Token.UNIQUE)) { com.alibaba.druid.sql.ast.statement.SQLUnique unique = this.exprParser.parseUnique(); com.alibaba.druid.sql.ast.statement.SQLAlterTableAddConstraint item = new com.alibaba.druid.sql.ast.statement.SQLAlterTableAddConstraint(unique); stmt.addItem(item); }else { throw new com.alibaba.druid.sql.parser.ParserException((((\"TODO \" + (lexer.token())) + \" \") + (lexer.stringVal()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/754/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.java", "BodyUseAPI": ["com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.token()", "com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.stringVal()"], "Fixed commit": "9b5e528007418d74912fcc7d49d46674f7df726f", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2016-07-23T09:12:22Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (refinements != null) { newRefinements.addAll(java.util.Arrays.asList(refinements)); for (java.lang.String extraQF : extra) { newRefinements.remove(extraQF); } refinements = new java.lang.String[newRefinements.size()]; refinements = newRefinements.toArray(refinements); for (java.lang.String qf : refinements) { log.info((\"ref: \" + qf)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2912/buggy-version/api2-war.src.main.java.eu.europeana.api2.v2.web.controller.SearchController.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.String[])", "java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>)"], "Fixed commit": "eccc4aa47fadd747b8cdd9c0ad9999b1af3c0fad", "Url": "https://api.github.com/repos/europeana/api2", "Date": "2015-02-20T07:59:15Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (null != value) { element.appendChild(buildElement(value, field.getName(), document)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2692/buggy-version/src.main.java.com.elmsw.XppIO.java", "BodyUseAPI": ["com.elmsw.XppIO.buildElement(java.lang.Object,java.lang.String,org.w3c.dom.Document)", "org.w3c.dom.Element.appendChild(org.w3c.dom.Element)"], "Fixed commit": "779bae1aa78adc4661bd6940ccd3ee03146c3566", "Url": "https://api.github.com/repos/lmeadors/xppio", "Date": "2012-10-26T15:03:34Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (sender != null) sender.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/677/buggy-version/src.org.graphstream.gama.extension.GSManager.java", "BodyUseAPI": ["org.graphstream.gama.extension.sender.GSSender.close()"], "Fixed commit": "d1a49a247fc278c9a6a006eec001a4587f8fe906", "Url": "https://api.github.com/repos/graphstream/gs-gama", "Date": "2014-02-20T17:44:23Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (fieldType.isAssignableFrom(java.util.EnumMap.class)) { if (isParameterizedType(fieldGenericType)) { java.lang.reflect.Type type = ((java.lang.reflect.ParameterizedType) (fieldGenericType)).getActualTypeArguments()[0]; map = new java.util.EnumMap(((java.lang.Class<?>) (type))); }else { return null; } }else { map = ((java.util.Map<java.lang.Object, java.lang.Object>) (objectFactory.createInstance(fieldType))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4610/buggy-version/random-beans.src.main.java.io.github.benas.randombeans.MapPopulator.java", "BodyUseAPI": ["io.github.benas.randombeans.ObjectFactory.createInstance(java.lang.Class<?>)"], "Fixed commit": "fc9232b7d522090407f0cd62322e183dd206bcf8", "Url": "https://api.github.com/repos/benas/random-beans", "Date": "2016-10-28T20:53:16Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((counters) != null) { countNumber = (java.lang.String.valueOf(counters.size())) + \" counters\"; }else { countNumber = \"0 counters\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8800/buggy-version/app.src.main.java.com.example.jrforest_countbook.MainList.java", "BodyUseAPI": [], "Fixed commit": "5741ed5aeb4e1a8f35178fc3be116815fd242e8a", "Url": "https://api.github.com/repos/jrforest/jrforest-CountBook", "Date": "2017-10-02T18:50:13Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (portEndPos == (-1)) { throw new java.lang.IllegalArgumentException((\"sWebHdfs URL is invalid: Can not found file path. \" + sourceFileUrl)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3959/buggy-version/contrib.hadoop-store-builder.src.java.voldemort.store.readonly.fetcher.HdfsFetcher.java", "BodyUseAPI": [], "Fixed commit": "e68470ff4ba9b618a1e6f5e88fd4be98c1225568", "Url": "https://api.github.com/repos/squarY/voldemort", "Date": "2015-11-19T19:52:26Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (secondColonPos == (-1)) { throw new java.lang.IllegalArgumentException((\"sWebHdfs URL is invalid: Can not found port. \" + sourceFileUrl)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3959/buggy-version/contrib.hadoop-store-builder.src.java.voldemort.store.readonly.fetcher.HdfsFetcher.java", "BodyUseAPI": [], "Fixed commit": "e68470ff4ba9b618a1e6f5e88fd4be98c1225568", "Url": "https://api.github.com/repos/squarY/voldemort", "Date": "2015-11-19T19:52:26Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (firstColonPos != (-1)) { java.lang.String protocol = url.substring(0, firstColonPos); if (protocol.equalsIgnoreCase(\"swebhdfs\")) { int secondColonPos = url.indexOf(\":\", (firstColonPos + 1)); if (secondColonPos == (-1)) { throw new java.lang.IllegalArgumentException((\"sWebHdfs URL is invalid: Can not found port. \" + sourceFileUrl)); } int portEndPos = url.indexOf(\"/\", secondColonPos); if (portEndPos == (-1)) { throw new java.lang.IllegalArgumentException((\"sWebHdfs URL is invalid: Can not found file path. \" + sourceFileUrl)); } url = (((voldemortConfig.getHdfsFetchProtocol()) + (url.substring(firstColonPos, (secondColonPos + 1)))) + (voldemortConfig.getHdfsFetchPort())) + (url.substring(portEndPos)); voldemort.store.readonly.fetcher.HdfsFetcher.logger.info((((\"SSL is not enabled in this node. Replaced original url:\" + sourceFileUrl) + \" to new url:\") + url)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3959/buggy-version/contrib.hadoop-store-builder.src.java.voldemort.store.readonly.fetcher.HdfsFetcher.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String,int)"], "Fixed commit": "e68470ff4ba9b618a1e6f5e88fd4be98c1225568", "Url": "https://api.github.com/repos/squarY/voldemort", "Date": "2015-11-19T19:52:26Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["coll.getGeometry().getWorldTranslation()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(map.units.isEmpty(hit_geom.x, hit_geom.z))) { unit = map.units.getUnitsAt(hit_geom.x, hit_geom.z).get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6065/buggy-version/src.mygame.BattleState.java", "BodyUseAPI": ["map.units.getUnitsAt(hit_geom.x, hit_geom.z).get(int)", "map.units.getUnitsAt(hit_geom.x,hit_geom.z)"], "Fixed commit": "e92c49b229c81bd9245ca3f9dc993621e374292f", "Url": "https://api.github.com/repos/szendrodi-krisztian/RTS-project", "Date": "2016-02-18T21:11:13Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentModel) != null) { currentModel.refresh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/9107/buggy-version/src.edu.clemson.lph.civet.CivetInbox.java", "BodyUseAPI": [], "Fixed commit": "02ff3fa6223a456f0c2fd2f8b77e6a40d2197ed8", "Url": "https://api.github.com/repos/mkm1879/Civet", "Date": "2015-06-22T19:33:09Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (game.objects.containsKey(object.getObjectId())) { game.objects.get(object.getObjectId()).recievePositionUpdate(object.getPosX(), object.getPosY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6180/buggy-version/OnlineBoxGame.src.game.GameClientThread.java", "BodyUseAPI": ["proto.GameStateExchangeProto.GameStateExchange.GroupObjectUpdate.ObjectUpdate.getPosY()", "proto.GameStateExchangeProto.GameStateExchange.GroupObjectUpdate.ObjectUpdate.getObjectId()", "game.objects.get(object.getObjectId()).recievePositionUpdate(object.getPosX(),object.getPosY())", "proto.GameStateExchangeProto.GameStateExchange.GroupObjectUpdate.ObjectUpdate.getPosX()", "game.objects.get(object.getObjectId())"], "Fixed commit": "7e575977aaa10cb1cd208bf1e5a5bbef9e8d2f08", "Url": "https://api.github.com/repos/amindell11/UDPServerClientApplication", "Date": "2016-06-21T20:49:00Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.FireworkEffect.getFadeColors()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(fade.isEmpty())) { java.util.List<java.lang.Integer> fadeInts = fade.stream().map(Color::asRGB).collect(java.util.stream.Collectors.toList()); explosion.putIntArray(\"FadeColors\", com.google.common.primitives.Ints.toArray(fadeInts)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6804/buggy-version/src.main.java.net.glowstone.inventory.GlowMetaFireworkEffect.java", "BodyUseAPI": ["fade.stream().map(Color::asRGB)", "java.util.List<org.bukkit.Color>.stream()", "fade.stream().map(Color::asRGB).collect(java.util.stream.Collector<java.lang.Object, ?, java.util.List<java.lang.Object>>)"], "Fixed commit": "ca8e5fb43593c6b2f737b32b7961d1433232a44a", "Url": "https://api.github.com/repos/GlowstoneMC/Glowstone", "Date": "2016-02-23T18:06:04Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 2) { java.lang.System.out.println(\"Usage: java -jar FFinder.jar [filename to find] [directory name or archive name to find the file in]...\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2755/buggy-version/src.net.futapyon.util.FFinder.java", "BodyUseAPI": [], "Fixed commit": "a8735e46832029690607f273388aa104a45e4039", "Url": "https://api.github.com/repos/futapyon/FFinder", "Date": "2014-02-17T03:38:54Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getProject().getTaskManager().getTaskHierarchy().hasNestedTasks(net.sourceforge.ganttproject.task.Task)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!hasNested) { (myPreviousChildlessTaskCount)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4943/buggy-version/org.ganttproject.impex.htmlpdf.src.org.ganttproject.impex.htmlpdf.itext.ThemeImpl.java", "BodyUseAPI": [], "Fixed commit": "d51d5c9ba8e0bdfd6b6ad61e9a0eab7388414c8e", "Url": "https://api.github.com/repos/bardsoftware/ganttproject", "Date": "2017-04-02T00:21:34Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mTransactions.getItems().size()) != 0) { if (!(com.moneyifyapp.utils.Utils.getDefaultCurrency(getActivity()).equals(mTransactions.getItems().get(0)))) { for (int i = 0; i < (mTransactions.getItems().size()); ++i) { mTransactions.getItems().get(i).mCurrency = com.moneyifyapp.utils.Utils.getDefaultCurrency(getActivity()); } mAdapter.notifyDataSetChanged(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5588/buggy-version/app.src.main.java.com.moneyifyapp.activities.expenses.fragments.ExpenseListFragment.java", "BodyUseAPI": ["mTransactions.getItems().get(int)", "com.moneyifyapp.utils.Utils.getDefaultCurrency(getActivity()).equals(mTransactions.getItems().get(0))", "mTransactions.getItems().size()", "com.moneyifyapp.model.MonthTransactions.getItems()", "com.moneyifyapp.model.MonthTransactions.getItems()", "com.moneyifyapp.model.MonthTransactions.getItems()", "mTransactions.getItems().get(int)"], "Fixed commit": "2d6da6f82800d5ed77abd7f60e8691b7db043045", "Url": "https://api.github.com/repos/zonnie/MoneyifyApp", "Date": "2014-07-12T07:51:38Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.controller2.Controller.getInstance().hasUserIO()) { java.lang.System.out.println(\"Do you want to empty the Vacuum (Enter y for yes)? \"); userResponse = yesEmptyMe.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3397/buggy-version/controller2.src.main.java.org.controller2.DirtCapacity.java", "BodyUseAPI": [], "Fixed commit": "c6cf186dc7238f062c92f3ef09df50548ead0521", "Url": "https://api.github.com/repos/apodraz2/CleanSweeperVacuum", "Date": "2014-11-17T20:26:51Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getServer().getPlayer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (targetPlayer != null) { playerName = targetPlayer.getName(); playerDisplayName = targetPlayer.getDisplayName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/75/buggy-version/src.com.randrdevelopment.propertygroup.command.commands.CreatePropertyCommand.java", "BodyUseAPI": ["org.bukkit.entity.Player.getDisplayName()", "org.bukkit.entity.Player.getName()"], "Fixed commit": "965972a5f02ac70db03c0972a76a1407b2e78ccb", "Url": "https://api.github.com/repos/fireball1725/PropertyGroup", "Date": "2012-03-25T13:13:28Z"},
{"Line": "=>1815", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (emptyWait) { if ((poolingCount) >= (notEmptyWaitThreadCount)) { (createTaskCount)--; return; } if (((activeCount) + (poolingCount)) >= (maxActive)) { (createTaskCount)--; return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5408/buggy-version/src.main.java.com.alibaba.druid.pool.DruidDataSource.java", "BodyUseAPI": [], "Fixed commit": "965c923757291f23503ad8f3e523c32d4dea0484", "Url": "https://api.github.com/repos/majinju/druid", "Date": "2016-02-05T06:44:28Z"},
{"Line": "=>1811", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((createError) != null) && ((poolingCount) == 0)) { emptyWait = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5408/buggy-version/src.main.java.com.alibaba.druid.pool.DruidDataSource.java", "BodyUseAPI": [], "Fixed commit": "965c923757291f23503ad8f3e523c32d4dea0484", "Url": "https://api.github.com/repos/majinju/druid", "Date": "2016-02-05T06:44:28Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.utils.web.HeadUtils.needRotatePic(com.backend.FileInfo)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((size < 400) && needRoatate) { img += \"</div>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3586/buggy-version/photoweb.src.com.utils.web.GenerateHTML.java", "BodyUseAPI": [], "Fixed commit": "d7f1bb2c65794740f0eb76a17104327fc35e6e72", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2017-02-12T11:36:51Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.utils.web.HeadUtils.needRotatePic(com.backend.FileInfo)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((size < 400) && needRoatate) { java.lang.String style = (((\"width:\" + size) + \"px;height: \") + (isVideo ? size + 20 : size)) + \"px;text-align: center;vertical-align: middle;display: table-cell;\"; img += ((\"<dvi style=\" + \"\\\"\") + style) + \"\\\">\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3586/buggy-version/photoweb.src.com.utils.web.GenerateHTML.java", "BodyUseAPI": [], "Fixed commit": "d7f1bb2c65794740f0eb76a17104327fc35e6e72", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2017-02-12T11:36:51Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stack == null) || ((stack.getItem()) == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7964/buggy-version/common.net.silentchaos512.gems.core.util.InventoryHelper.java", "BodyUseAPI": [], "Fixed commit": "915a0c3409f07f303f44c17d09af82c0420fa85c", "Url": "https://api.github.com/repos/SilentChaos512/SilentGems", "Date": "2016-02-09T06:58:27Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkStateAtStartup) { switchStateChanged(state, thunderSounder, messages); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/970/buggy-version/src.de.majortom.profisounder.thundersound.switches.AbstractStateChange.java", "BodyUseAPI": [], "Fixed commit": "cd08f5cb890aea5b09f13e468860a2ddac3f433d", "Url": "https://api.github.com/repos/MajorTom4711/ProfiSounder", "Date": "2014-11-17T19:47:46Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.oreilly.servlet.MultipartRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((testoPost.equals(\"\")) || (testoPost == null)) { testoPost = \"Ho caricato: \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4813/buggy-version/WebFinal.src.java.servlet.addPostAppoggio.java", "BodyUseAPI": [], "Fixed commit": "682bc5e39b0f0e8e06fea7f3b5780c651668e82e", "Url": "https://api.github.com/repos/babolForFun/WebFinale", "Date": "2013-11-28T09:14:34Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cc.getName().equals(\"org.jhotdraw.util.JDOStorageFormat\")) java.lang.System.out.println();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6651/buggy-version/NullSpy.src.ch.unibe.scg.nullSpy.instrumentator.controller.LocalVariableAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "b24c53206f00b549e22bd196c7de9e975293f5fd", "Url": "https://api.github.com/repos/litran8/nullpointer-javassist", "Date": "2016-07-05T13:09:13Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javassist.CtBehavior.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (behaviorName.equals(\"retrieveAll\")) java.lang.System.out.println();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6651/buggy-version/NullSpy.src.ch.unibe.scg.nullSpy.instrumentator.controller.LocalVariableAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "b24c53206f00b549e22bd196c7de9e975293f5fd", "Url": "https://api.github.com/repos/litran8/nullpointer-javassist", "Date": "2016-07-05T13:09:13Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chessgame.GameFrame.Tiles[i][j].getPiece()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(ThisPiece instanceof chessgame.King)) { if (ThisPiece.getColor().equals(MyColor)) { for (int k = 0; k < 8; k++) { for (int l = 0; l < 8; l++) { if (ThisPiece.canMove(chessgame.GameFrame.Tiles[i][j], chessgame.GameFrame.Tiles[k][l])) { if (canBlock(currentKing, Threats[0], k, l)) { return; } } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/681/buggy-version/src.chessgame.GameFrame.java", "BodyUseAPI": ["chessgame.Piece.getColor()", "ThisPiece.getColor().equals(java.lang.String)", "chessgame.Piece.canMove(chessgame.GameFrame.Tiles[i][j],chessgame.GameFrame.Tiles[k][l])"], "Fixed commit": "7768dd06d63819ebd98c37d7269f5e905dfd91e6", "Url": "https://api.github.com/repos/AlyMohamedAly/ChessGame", "Date": "2017-10-30T00:31:14Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (color) { chessgame.GameFrame.Tiles[k][l].setBackground(java.awt.Color.red); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/681/buggy-version/src.chessgame.GameFrame.java", "BodyUseAPI": [], "Fixed commit": "7768dd06d63819ebd98c37d7269f5e905dfd91e6", "Url": "https://api.github.com/repos/AlyMohamedAly/ChessGame", "Date": "2017-10-30T00:31:14Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((labelTxt != null) && (!(\"\".equals(labelTxt)))) && (!(\"[]\".equals(labelTxt)))) parent.schedule(new org.mitre.neoprofiler.profiler.LabelProfiler((\"\" + l)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7617/buggy-version/src.main.java.org.mitre.neoprofiler.profiler.NodesProfiler.java", "BodyUseAPI": [], "Fixed commit": "6eeab5c6d96bc96e4f2d50d20723a250f78df190", "Url": "https://api.github.com/repos/moxious/neoprofiler", "Date": "2014-05-12T13:11:57Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<com.firebase.client.DataSnapshot>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((data.getKey()) != \"History\") { java.lang.String key = data.getKey(); java.lang.String val = data.getValue(java.lang.String.class); map.put(key, val); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2918/buggy-version/app.src.main.java.ucsd.cse110fa16.group14.ipark.iLink.java", "BodyUseAPI": ["com.firebase.client.DataSnapshot.getValue(java.lang.Class)", "com.firebase.client.DataSnapshot.getKey()"], "Fixed commit": "585906927594d3cfbe7351f95c80ec6f81f20614", "Url": "https://api.github.com/repos/peternmai/iPark", "Date": "2016-11-09T07:37:25Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tabata.isRunning()) { playSound(R.raw.bell_ring); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3577/buggy-version/src.com.vorsk.crossfitr.TabataActivity.java", "BodyUseAPI": [], "Fixed commit": "078a309bca290ddcf14d9106d94688bbd0bcb353", "Url": "https://api.github.com/repos/mrlanrat/CrossFitr", "Date": "2012-06-03T20:44:29Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.day.cq.wcm.api.PageModification.getType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (type == (PageModification.ModificationType.CREATED)) { com.headwire.aemsolrsearch.geometrixxmedia.solr.index.DefaultSolrIndexListenerService.LOG.info(\"Page created {}\", modificationPath); addOrUpdatePage(modification); }else if (type == (PageModification.ModificationType.MODIFIED)) { com.headwire.aemsolrsearch.geometrixxmedia.solr.index.DefaultSolrIndexListenerService.LOG.info(\"Page modified {}\", modificationPath); addOrUpdatePage(modification); }else if (type == (PageModification.ModificationType.MOVED)) { com.headwire.aemsolrsearch.geometrixxmedia.solr.index.DefaultSolrIndexListenerService.LOG.info(\"Page moved from '{}' to '{}'\", modificationPath, modification.getDestination()); addOrUpdatePage(modification); indexService.deleteAndCommit(modificationPath); }else { com.headwire.aemsolrsearch.geometrixxmedia.solr.index.DefaultSolrIndexListenerService.LOG.info(\"Unsupported page modification detected: '{}'\", type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/804/buggy-version/aemsolrsearch-geometrixx-media-sample.src.main.java.com.headwire.aemsolrsearch.geometrixxmedia.solr.index.DefaultSolrIndexListenerService.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,PageModification.ModificationType)"], "Fixed commit": "14249426710e03e3fbcb2d75352f4e8ebce2606e", "Url": "https://api.github.com/repos/headwirecom/aem-solr-search", "Date": "2014-11-21T23:03:24Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.ParameterizedType.getActualTypeArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((argumentTypes[i]) instanceof java.lang.reflect.ParameterizedType) { resolvedClasses[i] = ((java.lang.Class<?>) (((java.lang.reflect.ParameterizedType) (argumentTypes[i])).getRawType())); }else { resolvedClasses[i] = ((java.lang.Class<?>) (argumentTypes[i])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5939/buggy-version/blaze-common-utils.src.main.java.com.blazebit.reflection.ReflectionUtils.java", "BodyUseAPI": ["java.lang.reflect.Type.getRawType()"], "Fixed commit": "c849ed7812c7bf1bb949a7ffcf073fe01332ccc5", "Url": "https://api.github.com/repos/Blazebit/blaze-utils", "Date": "2015-05-03T04:00:35Z"},
{"Line": "=>739", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getGenericExceptionTypes()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((genericExceptionTypes[i]) instanceof java.lang.reflect.ParameterizedType) { exceptionTypes[i] = ((java.lang.Class<?>) (((java.lang.reflect.ParameterizedType) (genericExceptionTypes[i])).getRawType())); }else { exceptionTypes[i] = ((java.lang.Class<?>) (genericExceptionTypes[i])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5939/buggy-version/blaze-common-utils.src.main.java.com.blazebit.reflection.ReflectionUtils.java", "BodyUseAPI": ["java.lang.reflect.Type.getRawType()"], "Fixed commit": "c849ed7812c7bf1bb949a7ffcf073fe01332ccc5", "Url": "https://api.github.com/repos/Blazebit/blaze-utils", "Date": "2015-05-03T04:00:35Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mongodb.DBCollection.findOne(com.mongodb.BasicDBObject)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (res == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4648/buggy-version/mongo-firsthops.src.main.java.ch.x42.terye.persistence.PersistenceManager.java", "BodyUseAPI": [], "Fixed commit": "d0a998f6b36a6329fd70362f72e3120a01a1e759", "Url": "https://api.github.com/repos/bdelacretaz/terye", "Date": "2012-09-26T14:36:18Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.UserHandle.myUserId()) != (android.os.UserHandle.USER_OWNER)) { android.preference.PreferenceCategory options = ((android.preference.PreferenceCategory) (findPreference(com.android.settings.deviceinfo.Memory.PREF_OPTIONS_CATEGORY))); getPreferenceScreen().removePreference(options); }else { mMsob.setValue(java.lang.String.valueOf(Settings.System.getInt(getActivity().getContentResolver(), Settings.System.MEDIA_SCANNER_ON_BOOT, 0))); mMsob.setSummary(mMsob.getEntry()); mMsob.setOnPreferenceChangeListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3674/buggy-version/src.com.android.settings.deviceinfo.Memory.java", "BodyUseAPI": [], "Fixed commit": "b48766fd9f79c48cdfe22c7d2689b374b431ba61", "Url": "https://api.github.com/repos/AICP/packages_apps_Settings", "Date": "2014-12-03T18:37:53Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.example.hq.usermanager.Newsdata.get(bundle.getString(\"ID\")).isComplete()) mHandler.post(new java.lang.Runnable() { @java.lang.Override public void run() { prepare(); } });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4528/buggy-version/modules.BigNews.app.src.main.java.com.example.john.bignews.Reader.java", "BodyUseAPI": [], "Fixed commit": "305c6ea5081d52c8833e7612d0caaa0239695751", "Url": "https://api.github.com/repos/hockey-for-NOI/TsinghuaBigNews", "Date": "2017-09-13T07:06:43Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pType < 0) return 0; else return ((float) (com.piepenguin.rfwindmill.lib.ModConfiguration.rotorEnergyMultiplier[pType]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1639/buggy-version/src.main.java.com.piepenguin.rfwindmill.lib.ModConfiguration.java", "BodyUseAPI": [], "Fixed commit": "0ca0d7ec6c58849eaf2bd47f3f7166ec7700eeb0", "Url": "https://api.github.com/repos/dbMansfield/rfwindmill", "Date": "2015-06-12T19:01:21Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((vm.getId()) % (fr.unice.vicc.scheduler.FaultToleranceVmAllocationPolicy.multiple)) == 0) { reserve.get(vm).deallocatePesForVm(vm); reserve.remove(vm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/646/buggy-version/src.main.java.fr.unice.vicc.scheduler.FaultToleranceVmAllocationPolicy.java", "BodyUseAPI": ["reserve.get(vm).deallocatePesForVm(org.cloudbus.cloudsim.Vm)", "java.util.Map<org.cloudbus.cloudsim.Vm, org.cloudbus.cloudsim.Host>.remove(org.cloudbus.cloudsim.Vm)", "java.util.Map<org.cloudbus.cloudsim.Vm, org.cloudbus.cloudsim.Host>.get(org.cloudbus.cloudsim.Vm)"], "Fixed commit": "ae55dc65fb3c19e2f0ac88e421177403f3324bca", "Url": "https://api.github.com/repos/poffuomo/vicc-project", "Date": "2017-02-17T22:13:07Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mPreviousText) != null) && ((text.length()) > (mPreviousText.length()))) { java.lang.String difference = com.alihafizji.library.StringUtil.difference(text, mPreviousText); if (!(difference.equals(com.alihafizji.library.CreditCardEditText.SEPARATOR))) { addSeparatorToText(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/9097/buggy-version/library.src.main.java.com.alihafizji.library.CreditCardEditText.java", "BodyUseAPI": ["com.alihafizji.library.StringUtil.difference(java.lang.String,java.lang.String)"], "Fixed commit": "e53b4575e84198c5675c6815f0a2015237d35f1a", "Url": "https://api.github.com/repos/aliHafizji/CreditCardEditText", "Date": "2017-06-22T09:49:25Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((b) != null) { aboutUsIntent.putExtras(b); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1831/buggy-version/BMI3.app.src.main.java.itac.yzu.bmi3.IdealWeightActivity.java", "BodyUseAPI": [], "Fixed commit": "dcb55f39b8411d71728d1dae11f31489a981939a", "Url": "https://api.github.com/repos/Oschangkai/Embedded_System", "Date": "2017-10-27T05:45:49Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (\"CmdSet\".equals(pairArray[0].replaceAll(\"\\\\s+\", \"\"))) { java.lang.String cmdSet = fields[i].substring(fields[i].indexOf(\"[\")); newPairs.put(pairArray[0].replaceAll(\"\\\\s+\", \"\"), cmdSet.replaceAll(\"\\\\s+\", \"\")); }else { newPairs.put(pairArray[0].replaceAll(\"\\\\s+\", \"\"), pairArray[1].replaceAll(\"\\\\s+\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6599/buggy-version/metron-platform.metron-parsers.src.main.java.org.apache.metron.parsers.ciscoacs.GrokCiscoACSParser.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "6926e721ec5fa30322576d43cbf6985638bb131d", "Url": "https://api.github.com/repos/DomenicPuzio/incubator-metron", "Date": "2016-06-06T17:54:13Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (end < ((arr.length) - 1)) { curSum = curSum + (arr[(++end)]); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/925/buggy-version/src.subarraysum.SubarraySumMatching.java", "BodyUseAPI": [], "Fixed commit": "5d68c1078ab7034098e462cd64cd71be7f5150c6", "Url": "https://api.github.com/repos/daniel-chu/algorithms-java", "Date": "2017-10-14T23:03:45Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springfield.fs.FsNode.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (videoId != null) { if (!(screen.getProperty(\"videoId\").equals(videoId))) { screen.setProperty(\"videoId\", videoId); loadScreen(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5616/buggy-version/src.org.springfield.lou.application.types.player.PlayerController.java", "BodyUseAPI": ["org.springfield.lou.application.types.player.PlayerController.setProperty(java.lang.String,java.lang.String)", "screen.getProperty(\"videoId\").equals(java.lang.String)"], "Fixed commit": "9b260209d5e75bb15f2fda8847d07beafc007609", "Url": "https://api.github.com/repos/Noterik/smt_mecanexdemoplayerapp", "Date": "2015-12-23T16:01:54Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (action.equals(\"video_stop\")) { form.getEntries().add(new org.restlet.ext.html.FormData(\"duration\", java.lang.Double.toString(((java.lang.Double) (data.get(\"duration\")))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5616/buggy-version/src.org.springfield.lou.application.types.player.PlayerController.java", "BodyUseAPI": [], "Fixed commit": "9b260209d5e75bb15f2fda8847d07beafc007609", "Url": "https://api.github.com/repos/Noterik/smt_mecanexdemoplayerapp", "Date": "2015-12-23T16:01:54Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.iis.mto.serverloadbalancer.ServerLoadBalancer.findLessLoadedServer(java.util.List<edu.iis.mto.serverloadbalancer.Server>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (lessLoadedServer != null) { lessLoadedServer.addVm(vm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6025/buggy-version/src.main.java.edu.iis.mto.serverloadbalancer.ServerLoadBalancer.java", "BodyUseAPI": ["edu.iis.mto.serverloadbalancer.Server.addVm(edu.iis.mto.serverloadbalancer.Vm)"], "Fixed commit": "ca5bf737e3f600015a65d8e9145ccafc335b4a5d", "Url": "https://api.github.com/repos/AdamPiech/loadBalancerKataMto", "Date": "2016-06-14T12:20:48Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y == (mLastY)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5361/buggy-version/smooth-app-bar-layout.src.main.java.me.henrytao.smoothappbarlayout.SmoothAppBarLayout.java", "BodyUseAPI": [], "Fixed commit": "e107fcc34c557eefa4e7686ae379877281eae04a", "Url": "https://api.github.com/repos/henrytao-me/smooth-app-bar-layout", "Date": "2016-09-10T09:47:56Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entry.contents.matches(\".*\\\\sNO\\\\s((?!PI).)*\\\\sPG\\\\s.*\")) bad.addNewEntry(entry, \"PG t\u016bl\u012bt p\u0113c NO, bez PI\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7932/buggy-version/src.lv.ailab.dict.tezaurs.checker.EntryChecks.java", "BodyUseAPI": ["lv.ailab.dict.tezaurs.checker.BadEntries.addNewEntry(DictionaryFragment.Entry,java.lang.String)"], "Fixed commit": "0655b802a0e0777314c14dd2f73850994bd5ce97", "Url": "https://api.github.com/repos/lauma/Dictionary", "Date": "2016-02-22T12:19:05Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entry.contents.matches(\".*\\\\sNO\\\\s((?!AN).)*\\\\sAG\\\\s.*\")) bad.addNewEntry(entry, \"AG t\u016bl\u012bt p\u0113c NO, bez AN\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7932/buggy-version/src.lv.ailab.dict.tezaurs.checker.EntryChecks.java", "BodyUseAPI": ["lv.ailab.dict.tezaurs.checker.BadEntries.addNewEntry(DictionaryFragment.Entry,java.lang.String)"], "Fixed commit": "0655b802a0e0777314c14dd2f73850994bd5ce97", "Url": "https://api.github.com/repos/lauma/Dictionary", "Date": "2016-02-22T12:19:05Z"},
{"Line": "=>611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entry.fullText.matches(\".*\\\\.\\\\s+\\\\..*\")) dict.bad.addNewEntry(entry, \"\u0160\u0137irklis satur sec\u012bgus, ar atstarpi atdal\u012btus punktus\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7932/buggy-version/src.lv.ailab.dict.tezaurs.checker.EntryChecks.java", "BodyUseAPI": ["dict.bad.addNewEntry(DictionaryFragment.Entry,java.lang.String)"], "Fixed commit": "0655b802a0e0777314c14dd2f73850994bd5ce97", "Url": "https://api.github.com/repos/lauma/Dictionary", "Date": "2016-02-22T12:19:05Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getCurrActivity().isFinishing())) com.held.utils.DialogUtils.showProgressBar();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7103/buggy-version/held.app.src.main.java.com.held.fragment.FeedFragment.java", "BodyUseAPI": [], "Fixed commit": "ec9d75473ed2bf4656de044d04bb51581baba9fc", "Url": "https://api.github.com/repos/maheshLad93/held-android", "Date": "2015-11-30T12:45:53Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getCurrActivity().isFinishing())) com.held.utils.DialogUtils.stopProgressDialog();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7103/buggy-version/held.app.src.main.java.com.held.fragment.FeedFragment.java", "BodyUseAPI": [], "Fixed commit": "ec9d75473ed2bf4656de044d04bb51581baba9fc", "Url": "https://api.github.com/repos/maheshLad93/held-android", "Date": "2015-11-30T12:45:53Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((get(map, key)) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3727/buggy-version/src.ca.weblite.codename1.mapper.DataMapper.java", "BodyUseAPI": [], "Fixed commit": "245becd4600d9f18b5b8e37ad997861f028cd2b3", "Url": "https://api.github.com/repos/shannah/cn1-data-utils", "Date": "2015-07-12T17:29:17Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (port > 0) { url = \"restlet:%s://%s:%s/%s?restletMethod=%s\"; url = java.lang.String.format(url, scheme, host, port, path, restrict); }else { url = \"restlet:/%s?restletMethod=%s\"; url = java.lang.String.format(url, path, restrict); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8434/buggy-version/components.camel-restlet.src.main.java.org.apache.camel.component.restlet.RestletComponent.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)"], "Fixed commit": "52fb5f142e46a41fe33624cedb4aebebcb19af30", "Url": "https://api.github.com/repos/apache/camel", "Date": "2015-01-08T06:42:48Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.yizhiru.thulac4j.process.Ruler.rulePoc()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((cleaned.length()) == 0) return getResult(cleaned, new int[0]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5227/buggy-version/src.main.java.io.github.yizhiru.thulac4j.Segmenter.java", "BodyUseAPI": ["io.github.yizhiru.thulac4j.Segmenter<T>.getResult(java.lang.String,int[])"], "Fixed commit": "1a191053eed4a9c82f7e9cb4148bf74ab2b155b7", "Url": "https://api.github.com/repos/yizhiru/thulac4j", "Date": "2017-03-10T02:46:52Z"},
{"Line": "=>1446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == null) { return uop.hashCode(); }else { return (type.hashCode()) + (uop.hashCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7954/buggy-version/src.wyil.lang.Code.java", "BodyUseAPI": [], "Fixed commit": "62e48b7d9a992ecd1f416a75d8f250609b39ee56", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-06-01T02:18:26Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mLPassword.getText().toString()", "mLEmail.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(Register.users.get(i).getEmail().equals(email))) & (!(Register.users.get(i).getPassword().equals(password)))) { android.widget.Toast.makeText(getApplicationContext(), \"Incorrect email or password!\", Toast.LENGTH_SHORT).show(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8115/buggy-version/bitBay.app.src.main.java.ba.bitcamp.android.bitbay.Login.java", "BodyUseAPI": [], "Fixed commit": "3be741c7c99e8b51d6b792a0a3c559b2823aff94", "Url": "https://api.github.com/repos/adiscehajic/bitbayAndroid", "Date": "2015-10-22T22:41:17Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((endHour) >= 24) endHour -= 24;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5775/buggy-version/app.src.main.java.com.adtproject.timeschedule.Activity.Models.Event.java", "BodyUseAPI": [], "Fixed commit": "0244f764a6fb3b264ee85cab0b4246147d24b015", "Url": "https://api.github.com/repos/gunhappy/TimeSchedule", "Date": "2016-06-05T16:56:06Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((b & 128) == 0) { ++count; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2385/buggy-version/Client.helper.Wrapper.java", "BodyUseAPI": [], "Fixed commit": "e93cd7632230b90270a6a4a126771796e0823b7c", "Url": "https://api.github.com/repos/minhtri1396/KingChessOnline", "Date": "2017-05-25T14:04:54Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((b & 128) == 0) { ++count; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2385/buggy-version/Server.helper.Wrapper.java", "BodyUseAPI": [], "Fixed commit": "e93cd7632230b90270a6a4a126771796e0823b7c", "Url": "https://api.github.com/repos/minhtri1396/KingChessOnline", "Date": "2017-05-25T14:04:54Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (verbatim.hasVerbatimField(GbifTerm.typifiedName)) { occ.setTypifiedName(verbatim.getVerbatimField(GbifTerm.typifiedName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4407/buggy-version/occurrence-processor.src.main.java.org.gbif.occurrence.processor.interpreting.VerbatimOccurrenceInterpreter.java", "BodyUseAPI": ["org.gbif.api.model.occurrence.Occurrence.setTypifiedName(verbatim.getVerbatimField(GbifTerm.typifiedName))", "org.gbif.api.model.occurrence.VerbatimOccurrence.getVerbatimField(GbifTerm.typifiedName)"], "Fixed commit": "edc6c6e90bda56311fefef7a490c52faa4372532", "Url": "https://api.github.com/repos/gbif/occurrence", "Date": "2014-06-04T16:50:08Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (readExtensions) { verb.setExtensions(org.gbif.occurrence.persistence.util.OccurrenceBuilder.readVerbatimExtensions(row)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4407/buggy-version/occurrence-persistence.src.main.java.org.gbif.occurrence.persistence.util.OccurrenceBuilder.java", "BodyUseAPI": [], "Fixed commit": "edc6c6e90bda56311fefef7a490c52faa4372532", "Url": "https://api.github.com/repos/gbif/occurrence", "Date": "2014-06-04T16:50:08Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(priceString))) { formattedPrice = decimalFormat.format(java.lang.Double.valueOf(priceString)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6981/buggy-version/app.src.main.java.com.example.android.inventoryapp.EditorActivity.java", "BodyUseAPI": ["java.text.DecimalFormat.format(java.lang.Double)", "java.lang.Double.valueOf(java.lang.String)"], "Fixed commit": "c594f21a7fafc2ac4ea39c23c18aa3d0144a9644", "Url": "https://api.github.com/repos/VladKilliakov/InventoryApp", "Date": "2017-01-04T20:00:23Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (method == null) output.add(line);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/179/buggy-version/src.main.java.net.minecraftforge.gradle.extrastuff.FmlCleanup.java", "BodyUseAPI": [], "Fixed commit": "6b327d4ccc182e9546712d988e65db7f519d577d", "Url": "https://api.github.com/repos/MinecraftForge/ForgeGradle", "Date": "2014-03-10T08:49:54Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tf.getValue()) != null) && ((tf.getValue().length()) > 0)) { l.confirm(tf.getValue()); close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6524/buggy-version/src.main.java.fi.pss.cleanbeach.ui.views.locations.ReportDirtyPopover.java", "BodyUseAPI": ["com.vaadin.ui.TextArea.getValue()", "fi.pss.cleanbeach.ui.views.locations.ReportDirtyPopover.ConfirmThrashListener.confirm(tf.getValue())"], "Fixed commit": "34091e269591e3d10af2a0db22726190da4a6598", "Url": "https://api.github.com/repos/tmattsso/CleanBeach", "Date": "2014-05-03T10:03:40Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((astNode.getFirstAncestor(PHPGrammar.CLASS_VARIABLE_DECLARATION)) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7531/buggy-version/php-checks.src.main.java.org.sonar.php.checks.SelfKeywordUsageCheck.java", "BodyUseAPI": [], "Fixed commit": "0e19ed52abece8ece6e6b35d7cb6ff9ef6695e69", "Url": "https://api.github.com/repos/sanyatuning/sonar-php", "Date": "2015-02-15T11:04:49Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(randori.compiler.internal.utils.ExpressionUtils.isSuperExpression(node.getNameNode()))) { walkArguments(node); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1194/buggy-version/src.main.java.randori.compiler.internal.codegen.js.emitter.FunctionCallEmitter.java", "BodyUseAPI": ["randori.compiler.internal.codegen.js.emitter.FunctionCallEmitter.walkArguments(org.apache.flex.compiler.tree.as.IFunctionCallNode)"], "Fixed commit": "dd2c58d6dcb0db50f1271b05e8bfb3c6328fd03e", "Url": "https://api.github.com/repos/RandoriAS/randori-compiler", "Date": "2013-07-15T16:21:21Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((roomForm.getServices()) != null) service = roomForm.getServices(); else service = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4854/buggy-version/endpoints-skeleton-archetype.src.main.java.com.google.appengine.archetypes.spi.AdminApi.java", "BodyUseAPI": ["com.google.appengine.archetypes.forms.RoomForm.getServices()"], "Fixed commit": "1f90113aa6ecf40881deb32a8052338260d7f2c8", "Url": "https://api.github.com/repos/lkinash/ENSE-Project", "Date": "2017-01-11T21:32:59Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((productForm.getBarcodeNumber()) < 1) barcode = 0; else barcode = productForm.getBarcodeNumber();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4854/buggy-version/endpoints-skeleton-archetype.src.main.java.com.google.appengine.archetypes.spi.AdminApi.java", "BodyUseAPI": ["com.google.appengine.archetypes.forms.ProductForm.getBarcodeNumber()"], "Fixed commit": "1f90113aa6ecf40881deb32a8052338260d7f2c8", "Url": "https://api.github.com/repos/lkinash/ENSE-Project", "Date": "2017-01-11T21:32:59Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPage) > 0) return currentPage; else return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7441/buggy-version/app.src.main.java.com.teioh.m_feed.Models.Chapter.java", "BodyUseAPI": [], "Fixed commit": "2b1b86ca783c7227000a34aeba10076d7ffc63fc", "Url": "https://api.github.com/repos/amgregoi/M-Feed", "Date": "2016-11-12T08:35:51Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n.isCtg) for (int k = sC + 1; k < (al.attrNum()); k++) tmp_f[t_i][(k - 1)] = features[j][k]; else for (int k = sC; k < (al.attrNum()); k++) tmp_f[t_i][k] = features[j][k];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/418/buggy-version/src.auxiliary.DecisionTree.java", "BodyUseAPI": [], "Fixed commit": "3abd90e9940c33439d4a6d115f4275a24ed03714", "Url": "https://api.github.com/repos/ChangLiuNJU/Data-Mining-Assignment2", "Date": "2013-10-04T05:39:29Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tagTask) != null) tagTask.cancel(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5634/buggy-version/src.com.pindroid.activity.AddBookmark.java", "BodyUseAPI": [], "Fixed commit": "d0567a7a49f02cba8dc4b279c7174a60c66d08a6", "Url": "https://api.github.com/repos/maxpower47/PinDroid", "Date": "2011-03-18T14:18:31Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((titleTask) != null) titleTask.cancel(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5634/buggy-version/src.com.pindroid.activity.AddBookmark.java", "BodyUseAPI": [], "Fixed commit": "d0567a7a49f02cba8dc4b279c7174a60c66d08a6", "Url": "https://api.github.com/repos/maxpower47/PinDroid", "Date": "2011-03-18T14:18:31Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection) != null) { try { connection.close(); } catch (java.sql.SQLException sqlEx) { } connection = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7900/buggy-version/src.org.citydb.plugins.spreadsheet_gen.concurrent.SPSHGWorker.java", "BodyUseAPI": [], "Fixed commit": "0196bedc47847a71ce2a45daf80bae5d7e9a2c1a", "Url": "https://api.github.com/repos/3dcitydb/plugin-spreadsheet-generator", "Date": "2015-03-10T15:38:33Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (simulate) { representations = new java.util.ArrayList<eu.europeana.cloud.common.model.Representation>(); }else { representations = mcs.getRepresentations(cloudId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4200/buggy-version/tools.ecloud-cleaner.src.main.java.eu.europeana.cloud.cleaner.ECloudCleaner.java", "BodyUseAPI": [], "Fixed commit": "3ca3f4de399c0ec79ac9c0585e92e4c925f7c8ae", "Url": "https://api.github.com/repos/europeana/Europeana-Cloud", "Date": "2017-08-31T06:59:08Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (simulate) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4200/buggy-version/tools.ecloud-cleaner.src.main.java.eu.europeana.cloud.cleaner.ECloudCleaner.java", "BodyUseAPI": [], "Fixed commit": "3ca3f4de399c0ec79ac9c0585e92e4c925f7c8ae", "Url": "https://api.github.com/repos/europeana/Europeana-Cloud", "Date": "2017-08-31T06:59:08Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connectButton) != null) { connectButton.setTitle(getResources().getString(R.string.menu_disconnect)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/903/buggy-version/DroidPlanner.src.com.droidplanner.SuperActivity.java", "BodyUseAPI": [], "Fixed commit": "26a393480b30f9406fab0e1c522a3f102e985c32", "Url": "https://api.github.com/repos/arthurbenemann/droidplanner", "Date": "2013-04-12T20:44:17Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connectButton) != null) { connectButton.setTitle(getResources().getString(R.string.menu_connect)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/903/buggy-version/DroidPlanner.src.com.droidplanner.SuperActivity.java", "BodyUseAPI": [], "Fixed commit": "26a393480b30f9406fab0e1c522a3f102e985c32", "Url": "https://api.github.com/repos/arthurbenemann/droidplanner", "Date": "2013-04-12T20:44:17Z"},
{"Line": "=>7055", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (force) { ((org.pentaho.di.base.AbstractMeta) (tabObject)).setChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5979/buggy-version/ui.src.org.pentaho.di.ui.spoon.Spoon.java", "BodyUseAPI": [], "Fixed commit": "e3acd0a7cc755265c79f1c62bfcbb42a0c9ec922", "Url": "https://api.github.com/repos/eliofreitas/pentaho-kettle", "Date": "2017-01-18T19:45:41Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getVat()) != null) && (!(getVat().equals(\"\")))) { return getVat().setScale(2, java.math.RoundingMode.HALF_UP); }else { return java.math.BigDecimal.ZERO; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1933/buggy-version/src.java.com.smi.travel.datalayer.entity.CreditNoteDetail.java", "BodyUseAPI": [], "Fixed commit": "ea9f1101a910aad956af8b10a81feb7163351c80", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-10-07T07:12:16Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.hadoop.hbase.util.Bytes.equals(HConstants.ROOT_TABLE_NAME, renv.getRegion().getTableDesc().getName())) { org.apache.hadoop.hbase.master.RegionServerGroupAdminEndpoint.groupInfoManager = new org.apache.hadoop.hbase.master.GroupInfoManagerImpl(env.getConfiguration(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2450/buggy-version/src.main.java.org.apache.hadoop.hbase.master.RegionServerGroupAdminEndpoint.java", "BodyUseAPI": [], "Fixed commit": "4e72f73ab80698754e866356b960f32051c54899", "Url": "https://api.github.com/repos/francisliu/hbase", "Date": "2012-10-08T07:00:45Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (separator.equals(\"\\\\\")) { separator = \"\\\\\\\\\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6232/buggy-version/src.jscompile.JSCompile.java", "BodyUseAPI": [], "Fixed commit": "56aed9b62bf92382099ac4b8fd30c26f07e995bd", "Url": "https://api.github.com/repos/rliota/JSCompile", "Date": "2015-03-13T21:07:59Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (lowercaseCommand.startsWith(\"warte\")) { int seconds = java.lang.Integer.parseInt(lowercaseCommand.split(\" \")[1]); java.util.concurrent.TimeUnit.SECONDS.sleep(seconds); }else if (lowercaseCommand.startsWith(\"links\")) { int degrees = java.lang.Integer.parseInt(lowercaseCommand.split(\" \")[1]); drone.left(degrees); }else if (lowercaseCommand.startsWith(\"rechts\")) { int degrees = java.lang.Integer.parseInt(lowercaseCommand.split(\" \")[1]); drone.right(degrees); }else { java.lang.System.out.println((\"Kommando nicht implementiert: \" + command)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/9090/buggy-version/src.main.java.de.bischinger.parrot.gui.CommandInputConsumer.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "1a8ca342dc501b464ceae1ef2f7a24710f150640", "Url": "https://api.github.com/repos/AlexBischof/JumpingSumoProt", "Date": "2015-10-19T18:12:16Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((worldObj) != null) { worldObj.markBlockForUpdate(xCoord, yCoord, zCoord); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/609/buggy-version/src.powercrystals.minefactoryreloaded.tile.machine.TileEntityLaserDrill.java", "BodyUseAPI": [], "Fixed commit": "7eca923ede5d0fc6f7276a5da9064ba69997dbc3", "Url": "https://api.github.com/repos/skyboy/MineFactoryReloaded", "Date": "2016-05-28T20:55:54Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files != null) { for (java.io.File file : files) { if ((file.isFile()) && (file.getName().endsWith(\".log\"))) { long update = file.lastModified(); if (update > latestUpdate) { latestUpdate = update; latestFile = file; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5274/buggy-version/src.com.ubhave.datahandler.store.DataStorage.java", "BodyUseAPI": [], "Fixed commit": "16645d5446b48910e534d2610911d47929397ded", "Url": "https://api.github.com/repos/nlathia/SensorDataManager", "Date": "2013-04-02T10:18:08Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (estimation == 0) return java.util.Collections.emptyList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1876/buggy-version/src.main.java.scrum.client.project.PlanningPokerStoryFinder.java", "BodyUseAPI": [], "Fixed commit": "2b212abf4c21072b43b565a7ed0e576f4b12d57e", "Url": "https://api.github.com/repos/Kunagi/kunagi", "Date": "2012-03-21T23:07:18Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (matcher.equals(matched)) { return true; }else if (matched != null) { try { javax.xml.parsers.DocumentBuilderFactory documentBuilderFactory = javax.xml.parsers.DocumentBuilderFactory.newInstance(); javax.xml.parsers.DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder(); documentBuilder.setErrorHandler(new org.xml.sax.ErrorHandler() { @java.lang.Override public void warning(org.xml.sax.SAXParseException exception) throws org.xml.sax.SAXException { org.mockserver.matchers.XPathStringMatcher.logger.debug(((((\"SAXParseException while performing match between [\" + (matcher)) + \"] and [\") + matched) + \"]\"), exception); } @java.lang.Override public void error(org.xml.sax.SAXParseException exception) throws org.xml.sax.SAXException { org.mockserver.matchers.XPathStringMatcher.logger.debug(((((\"SAXParseException while performing match between [\" + (matcher)) + \"] and [\") + matched) + \"]\"), exception); } @java.lang.Override public void fatalError(org.xml.sax.SAXParseException exception) throws org.xml.sax.SAXException { org.mockserver.matchers.XPathStringMatcher.logger.debug(((((\"SAXParseException while performing match between [\" + (matcher)) + \"] and [\") + matched) + \"]\"), exception); } }); return ((java.lang.Boolean) (xpathExpression.evaluate(documentBuilder.parse(new org.xml.sax.InputSource(new java.io.StringReader(matched))), javax.xml.xpath.XPathConstants.BOOLEAN))); } catch (java.lang.Exception e) { org.mockserver.matchers.XPathStringMatcher.logger.trace((((((\"Error while matching xpath [\" + (matcher)) + \"] against string [\") + matched) + \"] assuming no match - \") + (e.getMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1709/buggy-version/mockserver-core.src.main.java.org.mockserver.matchers.XPathStringMatcher.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,org.xml.sax.SAXParseException)", "javax.xml.parsers.DocumentBuilder.parse(org.xml.sax.InputSource)", "javax.xml.xpath.XPathExpression.evaluate(org.w3c.dom.Document,javax.xml.namespace.QName)", "javax.xml.parsers.DocumentBuilder.setErrorHandler(org.xml.sax.ErrorHandler)", "org.slf4j.Logger.trace(java.lang.String)", "org.slf4j.Logger.debug(java.lang.String,org.xml.sax.SAXParseException)", "org.slf4j.Logger.debug(java.lang.String,org.xml.sax.SAXParseException)"], "Fixed commit": "d25d52aa3229efaab7cdfeee97fe71529d1ab09c", "Url": "https://api.github.com/repos/jamesdbloom/mockserver", "Date": "2014-05-27T21:50:12Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeCount) > 0) { throw new java.sql.SQLException((\"can not restart, activeCount not zero. \" + (activeCount))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8866/buggy-version/src.main.java.com.alibaba.druid.pool.DruidDataSource.java", "BodyUseAPI": [], "Fixed commit": "7cc45ad594d760d8037d7de68f9429f6ef76fa0a", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2014-09-23T16:55:04Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entrepot) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3986/buggy-version/titan-shippment.src.model.planning.InterfacePlanning.java", "BodyUseAPI": [], "Fixed commit": "f8a476c6db0e537e517905315504e218c5cecb24", "Url": "https://api.github.com/repos/LeonardA-L/hm-devOO", "Date": "2014-11-11T11:50:17Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4223/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "d710bc5fa2dac5bbb1efe02a47bdb3eec72f2216", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (accessoryValves.isEmpty()) { invalidateMultiBlock(); pneumaticCraft.common.tileentity.TileEntityPressureChamberValve.checkIfProperlyFormed(worldObj, xCoord, yCoord, zCoord); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/287/buggy-version/src.pneumaticCraft.common.tileentity.TileEntityPressureChamberValve.java", "BodyUseAPI": [], "Fixed commit": "187e3c0a672d4dac269cb46cf6a0a341a142b1e0", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-05-18T20:45:39Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myCursor.getCount()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/21/buggy-version/app.src.main.java.wochstuidos.powerhourAnywhere.PowerHour.java", "BodyUseAPI": [], "Fixed commit": "af496b503d074ce4178d1d25d18dc9174c22e379", "Url": "https://api.github.com/repos/WOCHStudios/PowerHour", "Date": "2016-02-12T00:45:03Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((CurrentSelectedType) != \"ALL\") { EqualALl = true; }else { EqualALl = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/420/buggy-version/app.src.main.java.com.fci.e_com.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "30db1d5e9111af8b18a04643f7f249901f6aedcd", "Url": "https://api.github.com/repos/E-Com-PP/e_com", "Date": "2017-12-05T23:02:58Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mDanmakus) != null) && ((mDanmakus.size()) > 0)) { for (int i = 0; i < (mDanmakus.size()); i++) { org.zhgeaits.zgdanmaku.model.ZGDanmaku danmaku = mDanmakus.get(i); if (danmaku != null) { danmaku.setViewSize(width, height); danmaku.initVertexData(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4112/buggy-version/library.src.main.java.org.zhgeaits.zgdanmaku.view.ZGBaseDanmakuRenderer.java", "BodyUseAPI": ["java.util.List<org.zhgeaits.zgdanmaku.model.ZGDanmaku>.get(int)", "java.util.List<org.zhgeaits.zgdanmaku.model.ZGDanmaku>.size()"], "Fixed commit": "9d3c268420962065c0352017fd842534092125de", "Url": "https://api.github.com/repos/zhgeaits/ZGDanmaku", "Date": "2016-08-05T09:48:09Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((ps.parse_type) == null) _parse_type = ParserType.AUTO;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6746/buggy-version/h2o-core.src.main.java.water.parser.ParseSetup.java", "BodyUseAPI": [], "Fixed commit": "d4588e48b4fdb71c88f952a9a854d645202ca210", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-03-13T02:28:07Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((ps.separator) == 0) _separator = water.parser.ParseSetup.AUTO_SEP;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6746/buggy-version/h2o-core.src.main.java.water.parser.ParseSetup.java", "BodyUseAPI": [], "Fixed commit": "d4588e48b4fdb71c88f952a9a854d645202ca210", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-03-13T02:28:07Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ibm.research.rdf.store.sparql11.sqltemplate.StarBothSQLTemplate.get(entryTermVar.getName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((pair.snd) != null) { entrySqlToSparql.add((((pair.snd) + \" AS \") + (pair.snd))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6017/buggy-version/com.ibm.research.quetzal.core.src.com.ibm.research.rdf.store.sparql11.sqltemplate.StarBothSQLTemplate.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add((((pair.snd) + \" AS \") + (pair.snd)))"], "Fixed commit": "b2f46515fd75ade9c28c39ecc6b949afb542613a", "Url": "https://api.github.com/repos/Quetzal-RDF/quetzal", "Date": "2015-03-16T01:42:44Z"},
{"Line": "=>1033", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clearMap && ((markerCluster) != null)) { markerCluster.clearMarkers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3078/buggy-version/GMSClient3.src.com.jstakun.gms.android.ui.GMSClient2OSMMainActivity.java", "BodyUseAPI": [], "Fixed commit": "dabdc157dedae6d23d577188d60d77352be34eac", "Url": "https://api.github.com/repos/jstakun/gms-world-client", "Date": "2016-07-28T13:23:00Z"},
{"Line": "=>1213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((markerCluster) != null) { markerCluster.clearMarkers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3078/buggy-version/GMSClient3.src.com.jstakun.gms.android.ui.GMSClient2OSMMainActivity.java", "BodyUseAPI": [], "Fixed commit": "dabdc157dedae6d23d577188d60d77352be34eac", "Url": "https://api.github.com/repos/jstakun/gms-world-client", "Date": "2016-07-28T13:23:00Z"},
{"Line": "=>1072", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clearMap && ((mapProvider) == (com.jstakun.gms.android.config.ConfigurationManager.OSM_MAPS))) && ((markerCluster) != null)) { markerCluster.clearMarkers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3078/buggy-version/GMSClient3.src.com.jstakun.gms.android.ui.GMSClient2MainActivity.java", "BodyUseAPI": [], "Fixed commit": "dabdc157dedae6d23d577188d60d77352be34eac", "Url": "https://api.github.com/repos/jstakun/gms-world-client", "Date": "2016-07-28T13:23:00Z"},
{"Line": "=>1304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mapProvider) == (com.jstakun.gms.android.config.ConfigurationManager.OSM_MAPS)) && ((markerCluster) != null)) { markerCluster.clearMarkers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3078/buggy-version/GMSClient3.src.com.jstakun.gms.android.ui.GMSClient2MainActivity.java", "BodyUseAPI": [], "Fixed commit": "dabdc157dedae6d23d577188d60d77352be34eac", "Url": "https://api.github.com/repos/jstakun/gms-world-client", "Date": "2016-07-28T13:23:00Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (validation.equals(\"success\")) { ValidationNumber.setText(\"\"); IDNumber.setText(\"\"); Vote.setSelectedIndex(0); Text.setText(\"Success! Your vote has been cast\"); }else { Text.setText(validation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4759/buggy-version/src.UserGuiVoting.java", "BodyUseAPI": ["javax.swing.JLabel.setText(java.lang.String)"], "Fixed commit": "1d89ce7eb1e04123f0a44eb036f3217ced796dca", "Url": "https://api.github.com/repos/blueeclypse/Voting419", "Date": "2015-05-04T02:43:59Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((observableResult.get().length()) != (Const.ZERO_VALUE)) && (!(observableResult.get().equals(Const.ZERO)))) { mCurrentValue = observableResult.get(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/641/buggy-version/app.src.main.java.kultprosvet.com.calculator.Calculator.java", "BodyUseAPI": ["android.databinding.ObservableField<java.lang.String>.get()"], "Fixed commit": "14486a79fbd0408108c804543eeec57df322b2da", "Url": "https://api.github.com/repos/roma-sck/Calculator", "Date": "2016-07-08T22:57:02Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (falseOrEndSkip != 0) ptgs.remove(((trueSkip + falseOrEndSkip) - 3));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1008/buggy-version/src.java.org.apache.poi.ss.formula.WorkbookEvaluator.java", "BodyUseAPI": ["java.util.LinkedList<org.apache.poi.ss.formula.Ptg>.remove(int)"], "Fixed commit": "1c809e589affb9f6fc08fdbe50292e65d5072b32", "Url": "https://api.github.com/repos/TicTacLab/poi", "Date": "2015-11-09T16:28:52Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ido.main.GUI.agendaContainer.isVisible()) { ido.main.GUI.getFrame().setBounds(0, 0, 1080, 730); }else ido.main.GUI.maxWindowNoAgenda();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3549/buggy-version/V0.0.src.ido.main.GUI.java", "BodyUseAPI": [], "Fixed commit": "f85cbc55b8e51493f23b346a0a0ca6d32eda2fb8", "Url": "https://api.github.com/repos/cs2103Taug2014-t09-2j/main", "Date": "2014-11-01T12:29:27Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMe()) return edu.usc.csci201.tanks.common.TankType.USER; else if (isOnMyTeam()) return edu.usc.csci201.tanks.common.TankType.TEAM; else return edu.usc.csci201.tanks.common.TankType.OPPONENT;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1288/buggy-version/app.src.main.java.edu.usc.csci201.tanks.PlayerInfo.java", "BodyUseAPI": [], "Fixed commit": "c8b460beb7cf386f7751e8fc0e9672e374401f39", "Url": "https://api.github.com/repos/The-Real-CSCI201/TanksAndroid", "Date": "2014-11-30T22:31:10Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((posy) < ((Main.HEIGHT) - 100)) { g.drawLine(0, posy, Main.WIDTH, posy); g.drawString(debugstrn, posx, posy); }else { g.drawLine(0, ((Main.HEIGHT) - 100), Main.WIDTH, ((Main.HEIGHT) - 100)); g.drawString(debugstrn, posx, ((Main.HEIGHT) - 100)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/9012/buggy-version/src.me.daniel.draw.Paint.java", "BodyUseAPI": ["java.awt.Graphics.drawString(java.lang.String,int,((Main.HEIGHT) - 100))", "java.awt.Graphics.drawLine(int,((Main.HEIGHT) - 100),Main.WIDTH,((Main.HEIGHT) - 100))"], "Fixed commit": "e656ff0e2aebf23ccdbd4eae521bc7bdac1e8450", "Url": "https://api.github.com/repos/dashaw92/mup2", "Date": "2016-04-19T15:29:43Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((HRoll < 1) || (DDice < 1)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7536/buggy-version/StatTrack.src.Attack.java", "BodyUseAPI": [], "Fixed commit": "2b087724d1126d2d3f5b2b39cae0a99ef6208108", "Url": "https://api.github.com/repos/khoff0626/StatTrack", "Date": "2016-02-03T03:12:12Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["surnameView.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(surname)) { surnameView.setError(getString(R.string.error_field_required)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8449/buggy-version/app.src.main.java.com.freeteam01.androidnewsgroupreader.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "cb85bf4beeac061e7986710efdf0b3596b493a26", "Url": "https://api.github.com/repos/johanneskopf/AndroidNewsGroupReader", "Date": "2017-06-05T18:59:18Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["forenameView.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(forename)) { forenameView.setError(getString(R.string.error_field_required)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8449/buggy-version/app.src.main.java.com.freeteam01.androidnewsgroupreader.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "cb85bf4beeac061e7986710efdf0b3596b493a26", "Url": "https://api.github.com/repos/johanneskopf/AndroidNewsGroupReader", "Date": "2017-06-05T18:59:18Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.fau.amos.virtualledger.android.bankingOverview.localStorage.BankAccessCredentialDB.getPin(authenticationProvider.getEmail(),bankAccess.getId(),bankAccount.getBankid())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pin != null) { final de.fau.amos.virtualledger.dtos.BankAccountSync bankAccountSync = new de.fau.amos.virtualledger.dtos.BankAccountSync(bankAccess.getId(), bankAccount.getBankid(), pin); bankAccountSyncList.add(bankAccountSync); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5226/buggy-version/app.src.main.java.de.fau.amos.virtualledger.android.data.BankingDataManager.java", "BodyUseAPI": [], "Fixed commit": "295478cf3f596e7d6e621c2511c99a64daf9032a", "Url": "https://api.github.com/repos/BankingBoys/amos-ss17-proj7", "Date": "2017-06-09T10:39:23Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["capstat.model.UserLedger.getUserByNickname(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3730/buggy-version/src.main.java.capstat.application.LoginController.java", "BodyUseAPI": [], "Fixed commit": "b9f6fcd01ea3d1cefcb464225f54d07d43e90947", "Url": "https://api.github.com/repos/hjorthjort/CapStat", "Date": "2015-05-27T12:04:00Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getContext().getContentResolver().query(ContactsContract.Contacts.CONTENT_URI,java.lang.String[],java.lang.String,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (contactCursor.moveToFirst()) { int nameColumnIndex = contactCursor.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME); java.lang.String name = contactCursor.getString(nameColumnIndex); if (name != null) { nameTextView.setText(name); }else { nameTextView.setText(\"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3334/buggy-version/app.src.main.java.com.mad.achatz.fa_todo.ContactListAdapter.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME)", "android.database.Cursor.getString(int)"], "Fixed commit": "6dd1845be3684f15d88bf611b55eb3f1ea108130", "Url": "https://api.github.com/repos/achatzSWT/MAD", "Date": "2016-05-08T12:27:16Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ID == (com.projectreddog.deathcube.reference.Reference.GUI_STARTING_GEAR_CONFIG)) { net.minecraft.tileentity.TileEntity entity = world.getTileEntity(new net.minecraft.util.BlockPos(x, y, z)); if (entity != null) { if (entity instanceof com.projectreddog.deathcube.tileentity.TileEntityStartingGearConfig) { return new com.projectreddog.deathcube.container.ContainerStartingGearConfig(player.inventory, ((com.projectreddog.deathcube.tileentity.TileEntityStartingGearConfig) (entity))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6815/buggy-version/src.main.java.com.projectreddog.deathcube.client.gui.GuiHandler.java", "BodyUseAPI": [], "Fixed commit": "d820f3e5d599741c473aee1d2cb14ed3e1116f5b", "Url": "https://api.github.com/repos/trayer3/DeathCube", "Date": "2015-04-24T19:11:51Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sqlite.jdbc3.JDBC3ResultSet.getBytes(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bytes != null) { return new java.io.ByteArrayInputStream(bytes); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3203/buggy-version/src.main.java.org.sqlite.jdbc3.JDBC3ResultSet.java", "BodyUseAPI": [], "Fixed commit": "7dd0335e05b1d0f43b0d3d801cc7265db56fe2f5", "Url": "https://api.github.com/repos/xerial/sqlite-jdbc", "Date": "2015-10-26T15:24:38Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((nameTypePair.length) > 1) { tproperty.setPropertyName(nameTypePair[0]); tproperty.setPropertyType(com.wuetherich.osgi.ds.annotations.xml.TjavaTypes.fromValue(nameTypePair[1])); }else { tproperty.setPropertyValue(strings[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7782/buggy-version/com.wuetherich.osgi.ds.annotations.src.com.wuetherich.osgi.ds.annotations.internal.AbstractComponentDescription.java", "BodyUseAPI": ["com.wuetherich.osgi.ds.annotations.xml.Tproperty.setPropertyName(java.lang.String)", "com.wuetherich.osgi.ds.annotations.xml.TjavaTypes.fromValue(java.lang.String)", "com.wuetherich.osgi.ds.annotations.xml.Tproperty.setPropertyType(com.wuetherich.osgi.ds.annotations.xml.TjavaTypes.fromValue(nameTypePair[1]))"], "Fixed commit": "a9abfeda18ed7eee217afd25a6a2fbf04596f520", "Url": "https://api.github.com/repos/wuetherich/ds-annotation-builder", "Date": "2012-12-17T05:55:59Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"app\".equals(channel)) { redisSmsCode = session.getAttribute(recoverSmsVerifyKey); }else { redisSmsCode = session.getAttribute(smsVerifyKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3954/buggy-version/module.src.main.java.com.jia16.uc.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "cc63b1f33dd31bf6a3b98406644dfcd68af1d631", "Url": "https://api.github.com/repos/HarvestFIS/uc", "Date": "2017-08-18T06:21:48Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.AlertDialog.findViewById(R.id.wager_value)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(wagerEditText.getText().toString().equals(\"\"))) wagerVal = java.lang.Integer.parseInt(wagerEditText.getText().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6591/buggy-version/app.src.main.java.com.seniordesign.wolfpack.quizinator.activities.GamePlayActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(wagerEditText.getText().toString())", "wagerEditText.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "c119689f821f03aaa3ec2b467fc3509566cbfdeb", "Url": "https://api.github.com/repos/TeamWolfpack/Quizinator", "Date": "2017-04-07T00:07:07Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2820/buggy-version/daisy-ejb.src.main.java.at.technikum.mic16.prj.dao.PlacedOrderDAO.java", "BodyUseAPI": [], "Fixed commit": "99795e0859fba0b3dc79d0c15ce70847d6c9251a", "Url": "https://api.github.com/repos/leandre84/daisy", "Date": "2017-06-10T00:50:55Z"},
{"Line": "=>802", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.semanticweb.owlapi.model.OWLClassExpression.getOperand()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(operand.isAnonymous())) { if (isDefaultNegation()) { return new java.util.TreeSet<org.semanticweb.owlapi.model.OWLIndividual>(com.google.common.collect.Sets.difference(individuals, classInstancesPos.get(operand))); }else { return ((java.util.TreeSet<org.semanticweb.owlapi.model.OWLIndividual>) (classInstancesNeg.get(operand).clone())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4880/buggy-version/components-core.src.main.java.org.dllearner.reasoning.ClosedWorldReasoner.java", "BodyUseAPI": ["java.util.Map<org.semanticweb.owlapi.model.OWLClass, java.util.TreeSet<org.semanticweb.owlapi.model.OWLIndividual>>.get(org.semanticweb.owlapi.model.OWLClassExpression)", "classInstancesNeg.get(operand).clone()", "com.google.common.collect.Sets.difference(java.util.TreeSet<org.semanticweb.owlapi.model.OWLIndividual>,classInstancesPos.get(operand))", "java.util.Map<org.semanticweb.owlapi.model.OWLClass, java.util.TreeSet<org.semanticweb.owlapi.model.OWLIndividual>>.get(org.semanticweb.owlapi.model.OWLClassExpression)"], "Fixed commit": "f2d8bd4dfd7524ab2c6443f73a7b65deb7e7d155", "Url": "https://api.github.com/repos/SmartDataAnalytics/DL-Learner", "Date": "2015-03-05T12:19:50Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.talabrek.ultimateskyblock.handler.AsyncWorldEditHandler.getAWE()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (awe != null) { us.talabrek.ultimateskyblock.util.VersionUtil.Version version = us.talabrek.ultimateskyblock.util.VersionUtil.getVersion(awe.getDescription().getVersion()); java.lang.String className = null; if (version.isLT(\"3.0\")) { className = \"us.talabrek.ultimateskyblock.handler.asyncworldedit.AWE211Adaptor\"; }else { className = \"us.talabrek.ultimateskyblock.handler.asyncworldedit.AWE311Adaptor\"; } try { us.talabrek.ultimateskyblock.handler.AsyncWorldEditHandler.adaptor = ((us.talabrek.ultimateskyblock.handler.asyncworldedit.AWEAdaptor) (java.lang.Class.forName(className).<us.talabrek.ultimateskyblock.handler.asyncworldedit.AWEAdaptor>newInstance())); } catch (java.lang.InstantiationException | java.lang.IllegalAccessException | java.lang.ClassNotFoundException e) { us.talabrek.ultimateskyblock.handler.AsyncWorldEditHandler.log.log(java.util.logging.Level.WARNING, (\"Unable to locate AWE adaptor for version \" + version)); us.talabrek.ultimateskyblock.handler.AsyncWorldEditHandler.adaptor = us.talabrek.ultimateskyblock.handler.AsyncWorldEditHandler.NULL_ADAPTOR; } }else { us.talabrek.ultimateskyblock.handler.AsyncWorldEditHandler.adaptor = us.talabrek.ultimateskyblock.handler.AsyncWorldEditHandler.NULL_ADAPTOR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1052/buggy-version/uSkyBlock-Core.src.main.java.us.talabrek.ultimateskyblock.handler.AsyncWorldEditHandler.java", "BodyUseAPI": ["us.talabrek.ultimateskyblock.util.VersionUtil.getVersion(awe.getDescription().getVersion())", "awe.getDescription().getVersion()", "org.bukkit.plugin.Plugin.getDescription()"], "Fixed commit": "8d727b30719fc759cf39fdb58a54775691f12ebb", "Url": "https://api.github.com/repos/rlf/uSkyBlock", "Date": "2015-09-30T23:16:54Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["md.getEntitySchema().getIdentityFields()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (identityFields != null) { for (com.redhat.lightblue.metadata.Field x : identityFields) projectFields.add(new com.redhat.lightblue.query.FieldProjection(x.getFullPath(), true, false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3026/buggy-version/crud.src.main.java.com.redhat.lightblue.crud.mongo.MongoCRUDController.java", "BodyUseAPI": [], "Fixed commit": "ccf894e7f199a7c943bb52aa8767689617bee8b5", "Url": "https://api.github.com/repos/bserdar/lightblue-mongo", "Date": "2014-12-12T20:48:41Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFragmentManager().findFragmentByTag(Form.NAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (form == null) { getFragmentManager().beginTransaction().add(R.id.appactivity, new scs2682.exercise06.ui.Form(), Form.NAME).addToBackStack(null).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2967/buggy-version/app.src.main.java.scs2682.exercise06.AppActivity.java", "BodyUseAPI": [], "Fixed commit": "8d85f02f7145550cb14980e25403e2db5ebda5cb", "Url": "https://api.github.com/repos/DanielKulesza/AndroidSessionMid", "Date": "2016-11-08T21:53:15Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getEntity()) instanceof org.bukkit.entity.Player) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8968/buggy-version/src.com.untamedears.realisticbiomes.listener.SpawnListener.java", "BodyUseAPI": [], "Fixed commit": "828cb63dd7966a1f0d24562f428c6be9a02705f6", "Url": "https://api.github.com/repos/rourke750/RealisticBiomes", "Date": "2013-08-18T15:10:36Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(information.isServicePathQueryValid())) { return makeErrorResponse(new sif3.common.ws.ErrorDetails(Status.BAD_REQUEST.getStatusCode(), \"Invalid service path\"), ResponseAction.QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7138/buggy-version/SIF3InfraREST.sif3InfraREST.src.sif3.infra.rest.resource.DataModelResource.java", "BodyUseAPI": [], "Fixed commit": "9fddf43b7ef3753d96e95eb53da99e15365afa98", "Url": "https://api.github.com/repos/nsip/sif3-framework-java", "Date": "2014-11-24T00:57:27Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMultiplayer()) { task.cancel(); timer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8676/buggy-version/src.main.java.org.investovator.dataplaybackengine.player.DailySummaryDataPLayer.java", "BodyUseAPI": [], "Fixed commit": "704c3c14c7bb21495720602b94b75d52ce669c1b", "Url": "https://api.github.com/repos/investovator/investovator-dataplaybackengine", "Date": "2013-11-01T18:12:34Z"},
{"Line": "=>1942", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((span.getMillis()) <= 0) throw new railo.runtime.exp.ApplicationException(\"value must be a positive number\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2083/buggy-version/railo-java.railo-core.src.railo.runtime.config.ConfigWebAdmin.java", "BodyUseAPI": [], "Fixed commit": "2ed191309d6a1d34918436ed90abeecdbee87c62", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-06-07T06:49:47Z"},
{"Line": "=>4529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((ts != null) && ((ts.getMillis()) > 0)) config.setRequestTimeout(ts); else if (hasCS) config.setRequestTimeout(configServer.getRequestTimeout());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2083/buggy-version/railo-java.railo-core.src.railo.runtime.config.ConfigWebFactory.java", "BodyUseAPI": ["railo.runtime.config.ConfigImpl.setRequestTimeout(railo.runtime.type.dt.TimeSpan)"], "Fixed commit": "2ed191309d6a1d34918436ed90abeecdbee87c62", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-06-07T06:49:47Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDateArray) { org.joda.time.format.DateTimeFormatter dateTimeFormatter = org.joda.time.format.ISODateTimeFormat.dateTime().withZoneUTC(); java.util.List<java.lang.String> stringDateList = new java.util.ArrayList<java.lang.String>(); for (java.util.Date date : dateArray) { stringDateList.add(dateTimeFormatter.print(date.getTime())); } setField(fieldName, mapper.writeValueAsString(stringDateList), ExtensionFieldType.STRING, true); return this; }else { setField(fieldName, mapper.writeValueAsString(values), ExtensionFieldType.STRING, true); return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1281/buggy-version/scim.src.main.java.org.gluu.oxtrust.model.scim2.Extension.java", "BodyUseAPI": [], "Fixed commit": "ec9335ff3a612591be7c3b3057eabbac9a235070", "Url": "https://api.github.com/repos/GluuFederation/oxTrust", "Date": "2016-02-27T04:14:21Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (okToChangeUserName) { org.springframework.security.core.Authentication authentication1 = new org.springframework.security.authentication.UsernamePasswordAuthenticationToken(currentUser.getUsername(), \"\", authentication.getAuthorities()); org.springframework.security.core.context.SecurityContextHolder.getContext().setAuthentication(authentication1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/914/buggy-version/src.main.java.com.ut.dph.controller.profileController.java", "BodyUseAPI": [], "Fixed commit": "25a770e1bdd4a0b764e200c8b14dc0f5654d19f2", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2014-11-05T05:03:15Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFragment) != null) { if ((mFragment.getCurrentAnimator()) != null) { mFragment.getCurrentAnimator().cancel(); }else { this.finish(); } }else { this.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6300/buggy-version/app.src.main.java.swetabh.suman.com.imageloadingapp.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "59aeb69b7e762983ec4a87aabd945c05c93144f6", "Url": "https://api.github.com/repos/developer-swetabh/ImageLoadingApp", "Date": "2017-01-28T19:14:32Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (langChange) { app.navi.Navigator.refresh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4705/buggy-version/src.app.editors.settings.SettingsPage.java", "BodyUseAPI": [], "Fixed commit": "dc7762832705f2cf2ca2c46ce9b6cb51933da51b", "Url": "https://api.github.com/repos/GreenDelta/epd-editor", "Date": "2017-08-01T09:07:27Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getContainerRegistrationMode()) == null) { errors.add(new org.motechproject.whp.common.error.ErrorWithParameters(\"container.registration.mode.invalid.error\", request.getContainerId())); return errors; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7517/buggy-version/whp-container.src.main.java.org.motechproject.whp.container.validation.CmfAdminContainerRegistrationValidator.java", "BodyUseAPI": ["java.util.List<org.motechproject.whp.common.error.ErrorWithParameters>.add(org.motechproject.whp.common.error.ErrorWithParameters)", "org.motechproject.whp.container.contract.CmfAdminContainerRegistrationRequest.getContainerId()"], "Fixed commit": "28a6096810b5b9dfa048d935b74ff26d204aef4c", "Url": "https://api.github.com/repos/motech/motech-whp", "Date": "2012-11-07T06:54:57Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.dbdeploy.AntTarget.createUndoOutputPrintStream(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (undoOutputPrintStream != null) { undoOutputPrintStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5346/buggy-version/dbdeploy.src.java.net.sf.dbdeploy.AntTarget.java", "BodyUseAPI": ["java.io.PrintStream.close()"], "Fixed commit": "4bbca10d73c504886855a3c9323055491600e108", "Url": "https://api.github.com/repos/sudr/dbdeploy", "Date": "2007-01-09T15:28:45Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getUsed_seats().trim().equalsIgnoreCase(\"\")) || (event.getTotal_seats().trim().equalsIgnoreCase(\"\"))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7436/buggy-version/src.com.google.zxing.client.android.CaptureActivity.java", "BodyUseAPI": [], "Fixed commit": "211b3d90a5cf827522ad8a53945c33d04e3b7caa", "Url": "https://api.github.com/repos/farellano/zxing-android-minimal", "Date": "2015-05-28T22:38:56Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tempSongID.equals(mPlayerMetaData.currentTrack.uri))) { android.util.Log.i(\"hostplayeractivity\", tempSongID); try { java.lang.Thread.sleep(100); } catch (java.lang.Exception e) { e.printStackTrace(); } mPlayer.queue(mOperationCallback, tempSongID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8313/buggy-version/app.src.main.java.ip.partyplaylist.activity.HostPlayerActivity.java", "BodyUseAPI": ["com.spotify.sdk.android.player.Player.queue(Player.OperationCallback,java.lang.String)", "android.util.Log.i(java.lang.String,java.lang.String)"], "Fixed commit": "2537287724294c17e6e9ae33b607e5f5c220e900", "Url": "https://api.github.com/repos/iporollo/Partify", "Date": "2017-01-18T06:21:03Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.res.TypedArray.getResourceId(R.styleable.TitleView_title_background,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (backgroundId == (-1)) { mToolbar.setBackgroundDrawable(this.getBackground()); }else { mToolbar.setBackgroundResource(backgroundId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4828/buggy-version/easyutil.src.main.java.com.bncggle.easyutil.widget.TitleView.java", "BodyUseAPI": ["android.support.v7.widget.Toolbar.setBackgroundResource(int)"], "Fixed commit": "3a86a1c12ba28fddee884b58ff5af25dfab8285f", "Url": "https://api.github.com/repos/PATHowujiang/easy", "Date": "2017-08-02T14:17:44Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pos) == (str.length())) { int result = in.read(cbuf, off, len); if (result <= 0) { return -1; } str = new java.lang.String(cbuf, off, result); str = crypter.decrypt(str); pos = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1027/buggy-version/ss17-tpe.src.de.hsMannheim.ss17.tpe.martinDavid.uebung3.CaesarReader.java", "BodyUseAPI": [], "Fixed commit": "23787051413e753484b81ca8421d09ff2c6ac2c6", "Url": "https://api.github.com/repos/TPE-exercises/repo16", "Date": "2017-05-09T12:31:01Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filesCount > 0) { if (((version != null) && (version.supportsRemoteThumbnails())) && (imagesCount == filesCount)) { switchToGridView(); }else { switchToListView(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8030/buggy-version/src.com.owncloud.android.ui.fragment.OCFileListFragment.java", "BodyUseAPI": [], "Fixed commit": "ab8cfce7319a6d4d832e4f9642a48a46ab6783a8", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2015-06-22T13:37:38Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.qbusict.cupboard.CupboardFactory.cupboard().withDatabase(getReadableDatabase()).query(com.chubarich.mobiweather.data.db.model.WeatherData.class).get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (weatherData == null) return io.reactivex.Single.error(new com.chubarich.mobiweather.data.db.exceptions.NoCachedWeatherException());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5195/buggy-version/app.src.main.java.com.chubarich.mobiweather.data.db.DbHelperImpl.java", "BodyUseAPI": [], "Fixed commit": "30ac835617bc28ac20cf6afe989140cc409ae728", "Url": "https://api.github.com/repos/chubarich/MobiWeather", "Date": "2017-07-15T15:34:59Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.mikephil.charting.data.ChartData<?>.getDataSetByIndex(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dataSet instanceof com.github.mikephil.charting.interfaces.datasets.ICandleDataSet) && ((((com.github.mikephil.charting.interfaces.datasets.ICandleDataSet) (dataSet)).getDecreasingColor()) != (com.github.mikephil.charting.utils.ColorTemplate.COLOR_NONE))) { colors.add(((com.github.mikephil.charting.interfaces.datasets.ICandleDataSet) (dataSet)).getDecreasingColor()); colors.add(((com.github.mikephil.charting.interfaces.datasets.ICandleDataSet) (dataSet)).getIncreasingColor()); labels.add(null); labels.add(dataSet.getLabel()); }else { for (int j = 0; (j < (clrs.size())) && (j < entryCount); j++) { if ((j < ((clrs.size()) - 1)) && (j < (entryCount - 1))) { labels.add(null); }else { java.lang.String label = data.getDataSetByIndex(i).getLabel(); labels.add(label); } colors.add(clrs.get(j)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1146/buggy-version/MPChartLib.src.com.github.mikephil.charting.renderer.LegendRenderer.java", "BodyUseAPI": ["com.github.mikephil.charting.interfaces.datasets.IDataSet.getIncreasingColor()", "java.util.List<java.lang.Integer>.add(((com.github.mikephil.charting.interfaces.datasets.ICandleDataSet) (dataSet)).getIncreasingColor())", "java.util.List<java.lang.Integer>.add(((com.github.mikephil.charting.interfaces.datasets.ICandleDataSet) (dataSet)).getDecreasingColor())", "com.github.mikephil.charting.interfaces.datasets.IDataSet.getDecreasingColor()", "com.github.mikephil.charting.interfaces.datasets.IDataSet.getLabel()", "java.util.List<java.lang.String>.add(dataSet.getLabel())"], "Fixed commit": "2d7e2382d23856c3a45fc17b37361a056d9f6b3d", "Url": "https://api.github.com/repos/PhilJay/MPAndroidChart", "Date": "2015-12-07T20:17:44Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getClickedBlock()) != null) { if (event.getClickedBlock().getType().equals(Material.CAKE_BLOCK)) { org.bukkit.configuration.file.FileConfiguration cfg = specialConfig.config(\"plugins//CakeGame//player.yml\"); java.lang.String PlayerId = getPlayerConfigId.fromUUID(event.getPlayer().getUniqueId().toString()); if (cfg.getString(((\"Player\" + PlayerId) + \".noCake\")).equals(\"true\")) { event.setCancelled(true); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4775/buggy-version/src.net.BundR.cake.event.player.PlayerEat.java", "BodyUseAPI": ["event.getPlayer().getUniqueId()", "net.BundR.cake.event.player.PlayerEat.fromUUID(event.getPlayer().getUniqueId().toString())", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "event.getPlayer().getUniqueId().toString()", "org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()", "event.getClickedBlock().getType()", "event.getClickedBlock().getType().equals(Material.CAKE_BLOCK)", "org.bukkit.event.player.PlayerInteractEvent.setCancelled(boolean)"], "Fixed commit": "ff1b17b41c357f05e03b5198b077cc6846d4230e", "Url": "https://api.github.com/repos/Alone2/CakeGame2", "Date": "2017-12-31T18:47:49Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pagerPos == (mCurrentPagerPos)) { refreshUI(newCursor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2570/buggy-version/src.net.fred.feedex.fragment.EntryFragment.java", "BodyUseAPI": [], "Fixed commit": "d547ba02a2ffb79f043aecc792d38b39beb208f9", "Url": "https://api.github.com/repos/HoloAddict/FeedEx", "Date": "2013-12-13T01:47:59Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["khoavin.sillylearningenglish.SYSTEM.ToolFactory.ArrayConvert.toArrayList(getDataSource())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (position > ((lessonUnits.get(0).getCurrentProgressUnit()) + 1)) { mViewHolder.SingleItem.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1882/buggy-version/app.src.main.java.khoavin.sillylearningenglish.Function.TrainingRoom.LessonDetail.View.ProgressListAdapter.java", "BodyUseAPI": [], "Fixed commit": "b8568ce44ca8d78945fdd78b92de5f440774771d", "Url": "https://api.github.com/repos/huynhkhoavin/AddictiveEnglish", "Date": "2017-05-15T12:14:18Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(vegetableCollection.isEmpty())) { vegetableCollection.forEach(java.lang.System.out::println); }else java.lang.System.out.println(\"No corresponding search results!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8117/buggy-version/src.com.nika.salad.Main.java", "BodyUseAPI": ["java.util.Collection<com.nika.salad.vegetable.Vegetable>.forEach(java.lang.System.out::println)"], "Fixed commit": "07726ab0620875e9c388a61a4b47d5211007d50f", "Url": "https://api.github.com/repos/nshkuratova/Auto-Task2.1", "Date": "2017-03-14T10:05:12Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ListIterator<nappydevelopment.nappy_the_ingenious.data.WikiCharacter>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((curCharacter.getWikiImage()) == null) { java.lang.System.out.println(\"Image Null\"); }else { imgPat = new javafx.scene.paint.ImagePattern(nappydevelopment.nappy_the_ingenious.util.Utils.getScaledInstance(curCharacter.getWikiImage(), 90, 90, java.awt.RenderingHints.VALUE_INTERPOLATION_BICUBIC, 0.8, true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3396/buggy-version/src.main.java.nappydevelopment.nappy_the_ingenious.gui.wikiStage.WikiStageView.java", "BodyUseAPI": ["nappydevelopment.nappy_the_ingenious.data.WikiCharacter.getWikiImage()", "nappydevelopment.nappy_the_ingenious.util.Utils.getScaledInstance(curCharacter.getWikiImage(),int,int,java.lang.Object,double,boolean)"], "Fixed commit": "c5d051bd793900491cb2d4ab932bef8a278ed2df", "Url": "https://api.github.com/repos/nappydevelopment/Nappy-the-ingenious", "Date": "2015-12-03T13:31:51Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((rollButton.getVisibility()) == (android.view.View.VISIBLE)) && ((v.getId()) != (rollButton.getId()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6570/buggy-version/app.src.main.java.com.jeffreychan.yutnori.BoardActivity.java", "BodyUseAPI": [], "Fixed commit": "477f24a0908ef27769e515587796666324351ff9", "Url": "https://api.github.com/repos/superjeffreyc/Yut", "Date": "2017-06-22T23:17:03Z"},
{"Line": "=>2308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ac3Remux) { audioType = \"A_AC3\"; }else if (dtsRemux) { if (params.mediaRenderer.isMuxDTSToMpeg()) { audioType = \"A_DTS\"; }else { audioType = \"A_LPCM\"; } }else { audioType = \"A_LPCM\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4250/buggy-version/src.main.java.net.pms.encoders.MEncoderVideo.java", "BodyUseAPI": [], "Fixed commit": "683d92a234f66e794faff50d2da91eb0320cab9c", "Url": "https://api.github.com/repos/Raptor399/ps3mediaserver", "Date": "2012-07-13T23:51:56Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (twilightforest.block.enums.BossVariant.values()[i].hasTrophy()) { java.lang.String variant = \"inventory_\" + (twilightforest.block.enums.BossVariant.values()[i].getName()); net.minecraft.client.renderer.block.model.ModelResourceLocation mrl = new net.minecraft.client.renderer.block.model.ModelResourceLocation(getRegistryName(), variant); net.minecraftforge.client.model.ModelLoader.setCustomModelResourceLocation(this, i, mrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/336/buggy-version/src.main.java.twilightforest.item.ItemTFTrophy.java", "BodyUseAPI": ["twilightforest.block.enums.BossVariant.values()[i].getName()", "net.minecraftforge.client.model.ModelLoader.setCustomModelResourceLocation(twilightforest.item.ItemTFTrophy,int,net.minecraft.client.renderer.block.model.ModelResourceLocation)"], "Fixed commit": "11bafd22c244eab37d8988293240dd0fb8c6cafd", "Url": "https://api.github.com/repos/TeamTwilight/twilightforest", "Date": "2017-10-09T01:59:42Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(current.data.equals(word))) && ((current.children.size()) == 0)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5675/buggy-version/src.assignment05.TagTree.java", "BodyUseAPI": [], "Fixed commit": "8cb2948894e51baf602a66211002f97b474282fa", "Url": "https://api.github.com/repos/Boden-Archuleta/CS-2420-Assignment-05", "Date": "2017-10-27T02:37:19Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isInitDemo) { ((urgenda.gui.SimpleTaskController) (displayHolder.getChildren().get(_selectedTaskIndex.getValue()))).setSelected(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3064/buggy-version/src.urgenda.gui.DisplayController.java", "BodyUseAPI": [], "Fixed commit": "19b52c4f0e65b369aba3865c0e293c12ac852172", "Url": "https://api.github.com/repos/cs2103jan2016-t16-3j/main", "Date": "2016-04-04T06:22:43Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cursor.getCount()) != 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7480/buggy-version/src.it.sasabz.android.sasabus.classes.Favorit.java", "BodyUseAPI": [], "Fixed commit": "8e598049de8149267297f1015c9cefa48f8f9944", "Url": "https://api.github.com/repos/markuswindegger/SASAbus", "Date": "2012-08-17T11:29:34Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (revisionProperty == null) { return null; }else { return revisionProperty.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2016/buggy-version/muikku-core-plugins.src.main.java.fi.muikku.plugins.material.HtmlMaterialController.java", "BodyUseAPI": ["fi.muikku.plugins.material.coops.model.HtmlMaterialRevisionProperty.getValue()"], "Fixed commit": "3420586b8647dc2fe38cee5941d51233038bb6cf", "Url": "https://api.github.com/repos/otavanopisto/muikku", "Date": "2015-01-21T11:32:17Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.muikku.plugins.material.HtmlMaterialController.getRevisionProperty(fi.muikku.plugins.material.model.HtmlMaterial,java.lang.Long,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (title == null) { title = htmlMaterial.getTitle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2016/buggy-version/muikku-core-plugins.src.main.java.fi.muikku.plugins.material.HtmlMaterialController.java", "BodyUseAPI": [], "Fixed commit": "3420586b8647dc2fe38cee5941d51233038bb6cf", "Url": "https://api.github.com/repos/otavanopisto/muikku", "Date": "2015-01-21T11:32:17Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connection == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5817/buggy-version/src.sourcePackage.Database.java", "BodyUseAPI": [], "Fixed commit": "406ba63d6bed561e74b0c9d94c6600f0881c3885", "Url": "https://api.github.com/repos/IKhaduri/QuizWebsite", "Date": "2016-06-08T10:39:21Z"},
{"Line": "=>882", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (clazz == null) { clazz = com.alibaba.fastjson.parser.TypeUtils.getClassFromMapping(typeName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6588/buggy-version/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java", "BodyUseAPI": [], "Fixed commit": "3124e67942604c551a2dc1d0fc340f38f55504a2", "Url": "https://api.github.com/repos/FlakyTestDetection/fastjson", "Date": "2017-11-04T06:50:12Z"},
{"Line": "=>922", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (clazz == null) { clazz = com.alibaba.fastjson.parser.TypeUtils.loadClass(typeName, defaultClassLoader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6588/buggy-version/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java", "BodyUseAPI": [], "Fixed commit": "3124e67942604c551a2dc1d0fc340f38f55504a2", "Url": "https://api.github.com/repos/FlakyTestDetection/fastjson", "Date": "2017-11-04T06:50:12Z"},
{"Line": "=>910", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (clazz == null) { clazz = com.alibaba.fastjson.parser.TypeUtils.loadClass(typeName, defaultClassLoader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6588/buggy-version/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java", "BodyUseAPI": [], "Fixed commit": "3124e67942604c551a2dc1d0fc340f38f55504a2", "Url": "https://api.github.com/repos/FlakyTestDetection/fastjson", "Date": "2017-11-04T06:50:12Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (folderLevel == 2) { com.google.gwt.dom.client.Element element1 = uiObject.getElement().getParentElement().getParentElement(); element1.getStyle().setPaddingLeft(0, Unit.PX); element1.getStyle().setMarginLeft((-12), Unit.PX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/606/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java", "BodyUseAPI": [], "Fixed commit": "4f07af3ee737b81dc39bc7a15ee9aaf44f05b44a", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2015-04-01T20:54:02Z"},
{"Line": "=>1183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mEditorNote) == null) { dialog = null; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1396/buggy-version/src.com.ichi2.anki.CardEditor.java", "BodyUseAPI": [], "Fixed commit": "a4af73801a4635cdfa6d3d5fb75665a3c3b0247e", "Url": "https://api.github.com/repos/nicolas-raoul/Anki-Android", "Date": "2012-07-28T12:17:32Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!count) out.write(\"BUILDING : None\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1736/buggy-version/discWorld_Build1_Team15.src.com.app.BoardGame.java", "BodyUseAPI": [], "Fixed commit": "4c156d542b1b8c59bad2035d432c74dde907ade4", "Url": "https://api.github.com/repos/pratik12/Team15_discWorld", "Date": "2015-02-02T01:53:16Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.joker.fourfun.ui.PictureDetailActivity.getIntent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (intent.hasExtra(Constants.PICTURE_DETAILS_BUNDLE)) { android.os.Bundle bundle = intent.getBundleExtra(Constants.PICTURE_DETAILS_BUNDLE); mPicture = bundle.getParcelable(Constants.PICTURE_DETAILS_IMG); mPosition = bundle.getInt(Constants.PICTURE_DETAILS_ONE_POSITION, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7935/buggy-version/client.FourFun.app.src.main.java.com.joker.fourfun.ui.PictureDetailActivity.java", "BodyUseAPI": ["android.content.Intent.getBundleExtra(Constants.PICTURE_DETAILS_BUNDLE)"], "Fixed commit": "513daff0507e77dbf2a1763314fc8de6851f1721", "Url": "https://api.github.com/repos/4FunApp/4Fun", "Date": "2017-01-17T16:11:38Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resourceFile.isFile()) { return new java.net.URL(\"file\", \"\", 0, resourceFile.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7905/buggy-version/smos-reader.src.main.java.org.esa.beam.dataio.smos.dddb.ResourceHandler.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()"], "Fixed commit": "c8cfbc41e234d2acdf95288eb55b26e5fdf7204e", "Url": "https://api.github.com/repos/bcdev/smos-box", "Date": "2014-05-13T13:33:51Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newpanel == (currentPanel)) { return replacePanel(newpanel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2863/buggy-version/src.PanelSwitchingPanel.java", "BodyUseAPI": ["PanelSwitchingPanel.replacePanel(javax.swing.JPanel)"], "Fixed commit": "3c2471ab79a84b4c55350053acabe915ba193ca2", "Url": "https://api.github.com/repos/hageldave/UsefulStuff", "Date": "2014-01-08T21:18:54Z"},
{"Line": "=>682", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.firstinspires.ftc.teamcode.FtcAutoShelby.alliance) == (Field.Alliance.BLUE)) desHdg = 90;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4792/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.FtcAutoShelby.java", "BodyUseAPI": [], "Fixed commit": "b0edccd77cd8c4ccf355ead82f72a777705df1bd", "Url": "https://api.github.com/repos/shelbyRobots/shelby-ftc-app", "Date": "2016-12-24T01:34:55Z"},
{"Line": "=>1000", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(Status_anterior.toString().equals(Status))) { Nivel_anterior = Level; Status_anterior = Status; com.example.diego.camara.Actividades.MainActivity.ClienteTCP = new com.example.diego.camara.Funciones.ConexionIP(com.example.diego.camara.Actividades.MainActivity.IpPublica, 9001, (((((((((((((((((\" \" + (com.example.diego.camara.Actividades.MainActivity.IdRadiobase)) + \" \") + (com.example.diego.camara.Actividades.MainActivity.STATUS_INFO)) + \" \") + Level) + \" \") + Voltage) + \" \") + Temperature) + \" \") + Status) + \" \") + Health) + \" \") + (com.example.diego.camara.Actividades.MainActivity.Latitud)) + \",\") + (com.example.diego.camara.Actividades.MainActivity.Longitud))); com.example.diego.camara.Actividades.MainActivity.ClienteTCP.start(); android.util.Log.d(com.example.diego.camara.Actividades.MainActivity.TAG, (((((((((((((((((((\"Status Info IpServer: \" + (com.example.diego.camara.Actividades.MainActivity.IpPublica)) + \" Puerto: 9001 \") + (com.example.diego.camara.Actividades.MainActivity.IdRadiobase)) + \" \") + (com.example.diego.camara.Actividades.MainActivity.STATUS_INFO)) + \" \") + Level) + \" \") + Voltage) + \" \") + Temperature) + \" \") + Status) + \" \") + Health) + \" \") + (com.example.diego.camara.Actividades.MainActivity.Latitud)) + \",\") + (com.example.diego.camara.Actividades.MainActivity.Longitud))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4567/buggy-version/app.src.main.java.com.example.diego.camara.Actividades.MainActivity.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)"], "Fixed commit": "28597f4586b08d3cd154df50563863350fce11ce", "Url": "https://api.github.com/repos/AndroidStudioProyects/Camara", "Date": "2015-10-22T19:18:42Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.systemservices.impl.vdc.DbsvcQuorumMonitor.updateSiteMonitorResult(com.emc.storageos.coordinator.client.model.Site)", "standbySite.getState().equals(SiteState.STANDBY_SYNCED)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isStandbySynced && ((monitorResult.getDbQuorumLostSince()) != 0)) { if (((java.lang.System.currentTimeMillis()) - (monitorResult.getDbQuorumLostSince())) >= (drUtil.getDrIntConfig(DrUtil.KEY_STANDBY_DEGRADE_THRESHOLD, com.emc.storageos.systemservices.impl.vdc.DbsvcQuorumMonitor.STANDBY_DEGRADED_THRESHOLD))) { com.emc.storageos.systemservices.impl.vdc.DbsvcQuorumMonitor.log.info(\"Db quorum lost over 15 minutes, degrading site {}\", standbySite.getName()); sitesToDegrade.add(standbySite); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8667/buggy-version/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.DbsvcQuorumMonitor.java", "BodyUseAPI": ["com.emc.storageos.coordinator.client.model.SiteMonitorResult.getDbQuorumLostSince()"], "Fixed commit": "f98fc652afc12f257fc63bdc5d4455ebbd1ac962", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-01-05T02:35:11Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.simsilica.lemur.component.SpringGridLayout.getChild(int,int)", "com.simsilica.lemur.grid.GridModel<com.simsilica.lemur.Panel>.getCell(int,int,com.jme3.scene.Node)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (child != existing) { if (((alpha) != null) && ((alpha) != 1)) { child.setAlpha(alpha); } layout.addChild(child, (r - (row)), (c - (column))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5059/buggy-version/extensions.LemurProto.src.main.java.com.simsilica.lemur.GridPanel.java", "BodyUseAPI": ["com.simsilica.lemur.Panel.setAlpha(java.lang.Float)", "com.simsilica.lemur.component.SpringGridLayout.addChild(com.simsilica.lemur.Panel,int,int)"], "Fixed commit": "04e93a1a4a5f3280d0c91bea5e97044f4d023fd7", "Url": "https://api.github.com/repos/jMonkeyEngine-Contributions/Lemur", "Date": "2015-11-09T07:09:24Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_temporalSubset) != null) { return new opendap.wcs.v2_0.TemporalDimensionSubset(_temporalSubset); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2971/buggy-version/src.opendap.wcs.v2_0.DescribeEOCoverageSetRequest.java", "BodyUseAPI": [], "Fixed commit": "01da2264fb3f773c8d30b7623e2a1f9a347b0876", "Url": "https://api.github.com/repos/OPENDAP/olfs", "Date": "2016-10-11T23:35:15Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((peek.character) == '#') { source.getNextCharacter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4372/buggy-version/src.main.java.com.rezzedup.map.parser.Scanner.java", "BodyUseAPI": [], "Fixed commit": "8052a552acbb6a00a37c395a896189010c7bdf55", "Url": "https://api.github.com/repos/rum-map/rum-java", "Date": "2017-05-25T08:05:14Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getInventory().getItem(event.getPreviousSlot())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(castitems.containsValue(olditem))) { player.getInventory().setHeldItemSlot(event.getPreviousSlot()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6827/buggy-version/src.Cast.Casts.CastsInventory.java", "BodyUseAPI": [], "Fixed commit": "dea8f1bcd8c6059884a6200021a476d03155e361", "Url": "https://api.github.com/repos/SirGoldenNugget/Casters", "Date": "2017-03-09T23:22:02Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((references) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7880/buggy-version/src.main.java.com.alibaba.fastjson.serializer.JSONSerializer.java", "BodyUseAPI": [], "Fixed commit": "b661b2b1d9bfde836a08162b9d6affcfcfc8b58e", "Url": "https://api.github.com/repos/VictorZeng/fastjson", "Date": "2016-11-12T19:14:25Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.IdentityHashMap<java.lang.Object, com.alibaba.fastjson.serializer.SerialContext>.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (refContext == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7880/buggy-version/src.main.java.com.alibaba.fastjson.serializer.JSONSerializer.java", "BodyUseAPI": [], "Fixed commit": "b661b2b1d9bfde836a08162b9d6affcfcfc8b58e", "Url": "https://api.github.com/repos/VictorZeng/fastjson", "Date": "2016-11-12T19:14:25Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mYear) <= (mMaxYear)) && ((mYear) >= (mMinYear))) { if ((((mMonth) > (mEndMonth)) || ((mMonth) < (mStartMonth))) && ((mYear) == (mMaxYear))) { mMonthNumPaint.setColor(mDayDisabledTextColor); }else { mMonthNumPaint.setColor(mDayTextColor); } }else { mMonthNumPaint.setColor(mDayDisabledTextColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5757/buggy-version/datetimepicker-library.src.com.fourmob.datetimepicker.date.SimpleMonthView.java", "BodyUseAPI": [], "Fixed commit": "e6dfcff4e57f449cc779e2602c5fa6a2c5182d79", "Url": "https://api.github.com/repos/contrudar/datetimepicker", "Date": "2015-10-30T18:43:28Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mYear) <= (mMaxYear)) && ((mYear) >= (mMinYear))) { if ((((mMonth) > (mEndMonth)) || ((mMonth) < (mStartMonth))) && ((mYear) == (mMaxYear))) { return null; } }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5757/buggy-version/datetimepicker-library.src.com.fourmob.datetimepicker.date.SimpleMonthView.java", "BodyUseAPI": [], "Fixed commit": "e6dfcff4e57f449cc779e2602c5fa6a2c5182d79", "Url": "https://api.github.com/repos/contrudar/datetimepicker", "Date": "2015-10-30T18:43:28Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subject == null) { subject = new org.apache.zeppelin.user.AuthenticationInfo(org.apache.commons.lang.StringUtils.EMPTY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5730/buggy-version/zeppelin-server.src.main.java.org.apache.zeppelin.socket.NotebookServer.java", "BodyUseAPI": [], "Fixed commit": "17eae84c0c259c6181df2ac49a63349adced2ed7", "Url": "https://api.github.com/repos/khalidhuseynov/zeppelin", "Date": "2016-09-21T04:20:13Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subject == null) { subject = new org.apache.zeppelin.user.AuthenticationInfo(org.apache.commons.lang.StringUtils.EMPTY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5730/buggy-version/zeppelin-server.src.main.java.org.apache.zeppelin.socket.NotebookServer.java", "BodyUseAPI": [], "Fixed commit": "17eae84c0c259c6181df2ac49a63349adced2ed7", "Url": "https://api.github.com/repos/khalidhuseynov/zeppelin", "Date": "2016-09-21T04:20:13Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (binder instanceof org.zkoss.bind.AnnotateBinder) new org.zkoss.bind.impl.AnnotateBinderHelper(binder).initComponentBindings(comp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8501/buggy-version/zkbind.src.org.zkoss.bind.tracker.impl.BindUiLifeCycle.java", "BodyUseAPI": ["org.zkoss.bind.impl.AnnotateBinderHelper.initComponentBindings(org.zkoss.zk.ui.Component)"], "Fixed commit": "c0db6a6c4807daeaa2dcd436b033932e0510aba6", "Url": "https://api.github.com/repos/leeyt/zk", "Date": "2012-06-15T14:19:42Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3669/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "2c757e938c081fb3dd57f833ac363f2b6e41388b", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-11T21:04:56Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (options.logDimensions) options.log.info((\"Input: \" + inputDimension));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1444/buggy-version/src.main.java.kricket.neural.cnn.CNN.java", "BodyUseAPI": [], "Fixed commit": "d6b588262f2351ce5905735decce7079c78343da", "Url": "https://api.github.com/repos/Kricket/neural", "Date": "2014-12-17T16:00:42Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (options.logDimensions) options.log.info((((layer.getClass().getSimpleName()) + \" => \") + inputDimension));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1444/buggy-version/src.main.java.kricket.neural.cnn.CNN.java", "BodyUseAPI": [], "Fixed commit": "d6b588262f2351ce5905735decce7079c78343da", "Url": "https://api.github.com/repos/Kricket/neural", "Date": "2014-12-17T16:00:42Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((kbArticle.getKbFolderId()) == (com.liferay.knowledgebase.model.KBFolderConstants.DEFAULT_PARENT_FOLDER_ID)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4061/buggy-version/portlets.knowledge-base-portlet.docroot.WEB-INF.src.com.liferay.knowledgebase.display.selector.KBFolderKBArticleSelector.java", "BodyUseAPI": [], "Fixed commit": "92576c421ea324b5e38ffbcef403e0fc2fdca422", "Url": "https://api.github.com/repos/liferay-re/liferay-plugins", "Date": "2017-03-29T07:52:07Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.Toolkit.getScreenSize()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((frame.getHeight()) >= ((screenSize.getHeight()) - 100)) { frame.setSize(frame.getWidth(), (((int) (screenSize.getHeight())) - 100)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8358/buggy-version/src.gui.GUI.java", "BodyUseAPI": ["javax.swing.JFrame.setSize(int,int)", "java.awt.Dimension.getHeight()", "javax.swing.JFrame.getWidth()"], "Fixed commit": "5216e0f39022e0f28f60e3a1ce45aa2db2a61cfa", "Url": "https://api.github.com/repos/teamevolve/EVOLVE", "Date": "2017-10-23T04:29:16Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getStringExtra(KeyUtils.KEY_SEARCH_TEXT)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(mSearchText.equals(\"\"))) { new com.bellkung.anidesu.api.NetworkConnectionManager().fetchSeriesSearchData(this, mSearchText, ApiConfig.FETCH_ANIME_SEARCH); }else { initialView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8183/buggy-version/AniDesu.app.src.main.java.com.bellkung.anidesu.controller.AnimeSearchActivity.java", "BodyUseAPI": ["com.bellkung.anidesu.api.NetworkConnectionManager.fetchSeriesSearchData(com.bellkung.anidesu.controller.AnimeSearchActivity,java.lang.String,ApiConfig.FETCH_ANIME_SEARCH)"], "Fixed commit": "fddeeec8023a12d2f154bacfacf9d7055f751f0a", "Url": "https://api.github.com/repos/wirunpong-j/ANIDESU-Android", "Date": "2017-12-07T18:45:23Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.errai.ioc.rebind.ioc.injector.api.InjectionContext.getQualifiedInjector(org.jboss.errai.codegen.meta.MetaClass,org.jboss.errai.ioc.rebind.ioc.metadata.QualifyingMetadata)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!alwaysProxyDependent) && (inj.isDependent())) { if ((inj.isCreated()) && (!(inj.isRendered()))) { throw new org.jboss.errai.ioc.rebind.ioc.exception.InjectionFailure(((\"unresolveable cycle on dependent scoped bean: \" + (inj.getInjectedType().getFullyQualifiedName())) + \"; does the bean intersect with a normal scope?\")); } return inj.getBeanInstance(injectableInstance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1042/buggy-version/errai-ioc.src.main.java.org.jboss.errai.ioc.rebind.ioc.injector.InjectUtil.java", "BodyUseAPI": ["org.jboss.errai.ioc.rebind.ioc.injector.Injector.isRendered()", "inj.getInjectedType().getFullyQualifiedName()", "org.jboss.errai.ioc.rebind.ioc.injector.Injector.getBeanInstance(org.jboss.errai.ioc.rebind.ioc.injector.api.InjectableInstance)", "org.jboss.errai.ioc.rebind.ioc.injector.Injector.isCreated()", "org.jboss.errai.ioc.rebind.ioc.injector.Injector.getInjectedType()"], "Fixed commit": "b578cd801a465134c4a7bbae0d2e5a2267952f43", "Url": "https://api.github.com/repos/jfuerth/errai", "Date": "2012-05-13T17:19:30Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kette.holeLager().suchenProdukt(de.planspiel.cafe.Produkttyp)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (p != null) { p.setzePreis(vkpreis); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6617/buggy-version/Planspiel.src.de.planspiel.entscheidung.VerkaufspreisEntscheidung.java", "BodyUseAPI": ["de.planspiel.cafe.Produkt.setzePreis(double)"], "Fixed commit": "8bd7b695dc439b9c45bdc344b6dac72e18f73bf4", "Url": "https://api.github.com/repos/MarcNBecker/Planspiel", "Date": "2013-11-04T19:45:03Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (protocol.equals(\"local\")) { doButton(R.id.toggleButton_local); }else if (protocol.equals(\"r-osgi\")) { doButton(R.id.toggleButton_rosgi); }else if (protocol.equals(\"udp\")) { doButton(R.id.toggleButton_udp); }else if (protocol.equals(\"restlet\")) { doButton(R.id.toggleButton_other); }else { throw new java.lang.RuntimeException((\"UNKNOWN PROTOCOL: \" + protocol)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6764/buggy-version/version2.androidclient.src.be.ugent.ods.osgi.OSGIMainActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "7bbd054480165f57136e7598df13a0c95e88b5c4", "Url": "https://api.github.com/repos/jerrevds/ODS", "Date": "2012-12-06T00:21:35Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((words.length) == 0) { words = new java.lang.String[]{ \"\" }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2265/buggy-version/src.main.java.org.jboss.pressgang.ccms.model.utils.TopicUtilities.java", "BodyUseAPI": [], "Fixed commit": "45390b0fa378ef2f15b4c8a112500adc7b1c638b", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSModel", "Date": "2014-04-03T02:26:12Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPassphrase) != null) { mPassphrase.removeFromMemory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3514/buggy-version/OpenKeychain.src.main.java.org.sufficientlysecure.keychain.ui.EncryptTextActivity.java", "BodyUseAPI": [], "Fixed commit": "5bdac11ef84d9ce5990536110280d7857165cf10", "Url": "https://api.github.com/repos/Hiperzone/open-keychain", "Date": "2015-03-23T10:17:01Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["staticFamily.StaticApp.findClassByJavaName(c.getOuterClass())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (outerC != null) outerC.addInnerClass(c.getJavaName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6067/buggy-version/src.analysis.StaticInfo.java", "BodyUseAPI": ["staticFamily.StaticClass.addInnerClass(c.getJavaName())"], "Fixed commit": "abf8bd487100c0be5758632fd2789f943e8889b9", "Url": "https://api.github.com/repos/Wenhao-Chen/StaticComponent", "Date": "2015-03-26T21:27:05Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.greenfox.jasper.repos.MainEventRepo.findAllWaitingForExecution(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((listedEvents.size()) != 0) { for (com.greenfox.jasper.services.MainEvent listedEvent : listedEvents) { processEventTest(listedEvent); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4520/buggy-version/src.main.java.com.greenfox.jasper.services.MainEventServices.java", "BodyUseAPI": [], "Fixed commit": "dfa1f3ebfbf2afb276fd3cdf97054c830ee44b04", "Url": "https://api.github.com/repos/greenfox-zerda-raptors/ClashOfZerdaTeamJasper", "Date": "2017-02-08T11:28:35Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.AuthenticationController.getUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (user != null) { user.setAccessToken(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2448/buggy-version/app.controllers.AuthenticationController.java", "BodyUseAPI": ["models.classes.User.setAccessToken(<nulltype>)"], "Fixed commit": "a7a019e1d3f28211d2e06411717d190b905f984f", "Url": "https://api.github.com/repos/felipebonezi/livre.to", "Date": "2014-06-05T03:55:37Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(unchangedValues.containsKey(target))) { unchangedValues.put(target, path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3213/buggy-version/src.main.java.com.flipkart.zjsonpatch.JsonDiff.java", "BodyUseAPI": ["java.util.Map<com.fasterxml.jackson.databind.JsonNode, java.util.List<java.lang.Object>>.put(com.fasterxml.jackson.databind.JsonNode,java.util.List<java.lang.Object>)"], "Fixed commit": "62e17d4bdc1941f2c6294a209eb32b750e4f6b86", "Url": "https://api.github.com/repos/flipkart-incubator/zjsonpatch", "Date": "2017-08-31T20:16:10Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentToken.getType()) != (EOL)) { errorHandling.errorAdd((((\"Unexpected token '\" + (currentToken.output())) + \"' at position: \") + (lexer.getPosition()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8480/buggy-version/MentalMath.app.src.main.java.moinoue.mentalmath.Parser.java", "BodyUseAPI": ["moinoue.mentalmath.Token.output()", "moinoue.mentalmath.ErrorHandling.errorAdd((((\"Unexpected token '\" + (currentToken.output())) + \"' at position: \") + (lexer.getPosition())))"], "Fixed commit": "cfe0bf572fa0fda77a4b99c052107904a540c3ce", "Url": "https://api.github.com/repos/moinoue/MentalMath", "Date": "2016-11-30T08:08:02Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < ((libs.length) - 1)) { vector.add(new java.io.ByteArrayInputStream(IOUtil.LINE.getBytes(java.nio.charset.StandardCharsets.UTF_8))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/446/buggy-version/src.main.java.org.ansj.dic.impl.File2Stream.java", "BodyUseAPI": [], "Fixed commit": "ae988802c420cd4e2b2307eba1657522748f2cb4", "Url": "https://api.github.com/repos/shi-yuan/ansj_seg", "Date": "2017-12-09T09:20:56Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.isDragging) != isDragging) { this.isDragging = isDragging; if (this.isDragging) { this.startDragging(); }else { this.finishDragging(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2398/buggy-version/src.io.github.zachohara.percussionpacker.cardentity.CardEntity.java", "BodyUseAPI": [], "Fixed commit": "b278bd038966ac35a2d1e32ea51b098bcad7fce3", "Url": "https://api.github.com/repos/ZachOhara/Percussion-Packer", "Date": "2016-05-28T02:58:13Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subtitles == null) { pct.droid.base.utils.ThreadUtils.runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { mSubtitles.setText(R.string.no_subs_available); } }); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/324/buggy-version/mobile.src.main.java.pct.droid.fragments.MovieDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "3ce43a17aba41b3213b1569f373ee3141a033e80", "Url": "https://api.github.com/repos/popcorn-official/popcorn-android", "Date": "2015-04-20T16:25:17Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mPriceEditText.getText().toString().equals(source.toString())) { return super.filter(source, start, end, dest, dstart, dend); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/286/buggy-version/app.src.main.java.com.carltaylordev.recordlisterandroidclient.UserInterface.EditListing.Info2Fragment.java", "BodyUseAPI": ["android.text.method.DigitsKeyListener.filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)"], "Fixed commit": "e9dc7f9c737d6584f8da52809928d78f140dfb2a", "Url": "https://api.github.com/repos/carltaylor43/Record-Lister-Android-Client", "Date": "2017-06-08T09:43:49Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.st_ddt.crazyutil.databases.ConfigurationDatabase.newInstance(org.bukkit.configuration.ConfigurationSection,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((data.getName()) == null) { java.lang.System.err.println(((\"Entry \" + key) + \" was corrupted and could be fixed.\")); if (nameCase) config.set((((((path) + \".\") + key) + \".\") + (columnNames[0])), key); else config.set((((((path) + \".\") + (key.toLowerCase())) + \".\") + (columnNames[0])), key); return loadEntry(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6024/buggy-version/CrazyCore.src.de.st_ddt.crazyutil.databases.ConfigurationDatabase.java", "BodyUseAPI": [], "Fixed commit": "4b249965e03d4933acfb662844f013b131a0c718", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2012-12-28T15:53:18Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(indexes.isEmpty())) { currentIndex = indexes.get(currentIndex); java.util.Collections.sort(indexes); }else { currentIndex = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1660/buggy-version/app.src.main.java.com.lwm.app.player.LocalPlayer.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.List<java.lang.Integer>)", "java.util.List<java.lang.Integer>.get(int)"], "Fixed commit": "3b9bb040d2ce1fa703d2ddd1ec7aae8464a7e580", "Url": "https://api.github.com/repos/s0nerik/LWM", "Date": "2014-04-18T19:56:49Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS) { pathString = pathString.substring(2).replace(\"\\\\\", \"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2136/buggy-version/src.main.java.org.molgenis.downloader.emx.tsv.ZipFileBackend.java", "BodyUseAPI": [], "Fixed commit": "2bb5ab75b20f491537cc19f4e33ba0f52a3a5571", "Url": "https://api.github.com/repos/tommydeboer/molgenis-EMX-downloader", "Date": "2017-04-11T14:15:42Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pos != 0) { ((android.widget.RadioButton) (findViewById(R.id.order))).setChecked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8801/buggy-version/Check.src.com.bg.check.ui.SelectReportActivity.java", "BodyUseAPI": [], "Fixed commit": "0d67d556082caf47d6ba1b81ce0c6193abbf2be4", "Url": "https://api.github.com/repos/dev-kit/001", "Date": "2012-07-31T13:22:53Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((c >= '\\u2e80') && (c <= '\\ufe4f')) { column++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4615/buggy-version/src.main.java.jetbrick.template.utils.StringUtils.java", "BodyUseAPI": [], "Fixed commit": "e121b8179bedd267726ca3a1dec7fcf0ca1952c9", "Url": "https://api.github.com/repos/subchen/jetbrick-template", "Date": "2013-12-03T12:56:10Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stack.getItemDamage()) != 2) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7418/buggy-version/src.main.java.biomesoplenty.common.items.ItemBOPFood.java", "BodyUseAPI": [], "Fixed commit": "a3060ae8e0c3a20354440b6dd537d0a129c2fad3", "Url": "https://api.github.com/repos/Glitchfiend/BiomesOPlenty", "Date": "2014-08-13T08:15:01Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (interval <= 0) throw new java.text.ParseException((\"cron interval cannot be zero: \" + exp), 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2108/buggy-version/araqne-cron.src.main.java.org.araqne.cron.impl.CronField.java", "BodyUseAPI": [], "Fixed commit": "5bd8f43b06f0d2ab092f3ad189fcbaf3e94231ca", "Url": "https://api.github.com/repos/araqne/core", "Date": "2015-07-18T16:21:50Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.text.ParseException) throw ((java.text.ParseException) (e));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2108/buggy-version/araqne-cron.src.main.java.org.araqne.cron.impl.CronField.java", "BodyUseAPI": [], "Fixed commit": "5bd8f43b06f0d2ab092f3ad189fcbaf3e94231ca", "Url": "https://api.github.com/repos/araqne/core", "Date": "2015-07-18T16:21:50Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"true\".equals(prettyJson)) { gsonBuilder.setPrettyPrinting(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4006/buggy-version/rest-servlet.src.main.java.org.hawkular.inventory.rest.json.GsonMessageBodyHandler.java", "BodyUseAPI": [], "Fixed commit": "6cd85318d63cb6977cb763c98b473c90b1581ff1", "Url": "https://api.github.com/repos/Jiri-Kremser/hawkular-inventory", "Date": "2015-04-23T12:38:34Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.health) > 0) { (health)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2504/buggy-version/SC-Net.src.shortcircuit.shared.Player.java", "BodyUseAPI": [], "Fixed commit": "c65c84e32fc3ee1a26d6a648ab22165e3d6d4f0a", "Url": "https://api.github.com/repos/ShortCircuitGame/Short-Circuit", "Date": "2014-05-02T23:39:57Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.timerTask) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3929/buggy-version/src.main.java.main.TimeoutTimer.java", "BodyUseAPI": [], "Fixed commit": "f1dfcc7437378a3e5a79e81116c47f6020266cd6", "Url": "https://api.github.com/repos/linuxboss182/SoftEng-2017", "Date": "2017-05-01T00:06:33Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.timer) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3929/buggy-version/src.main.java.main.TimeoutTimer.java", "BodyUseAPI": [], "Fixed commit": "f1dfcc7437378a3e5a79e81116c47f6020266cd6", "Url": "https://api.github.com/repos/linuxboss182/SoftEng-2017", "Date": "2017-05-01T00:06:33Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.jpa.spi.AbstractEntityManagerImpl.CriteriaQueryTransformer.TupleImpl.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((result != null) && (!(type.isInstance(result)))) { throw new java.lang.IllegalArgumentException(java.lang.String.format(\"Requested tuple value [index=%s, realType=%s] cannot be assigned to requested type [%s]\", i, result.getClass().getName(), type.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6809/buggy-version/hibernate-entitymanager.src.main.java.org.hibernate.jpa.spi.AbstractEntityManagerImpl.java", "BodyUseAPI": ["java.lang.Class<X>.getName()", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.String.format(java.lang.String,int,java.lang.String,java.lang.String)"], "Fixed commit": "6162a4b3944470dcd7b50ec6940bd1969fea3812", "Url": "https://api.github.com/repos/javaprog/hibernate-orm", "Date": "2013-08-16T00:01:07Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.jpa.spi.AbstractEntityManagerImpl.TupleBuilderTransformer.HqlTupleImpl.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((result != null) && (!(type.isInstance(result)))) { throw new java.lang.IllegalArgumentException(java.lang.String.format(\"Requested tuple value [index=%s, realType=%s] cannot be assigned to requested type [%s]\", i, result.getClass().getName(), type.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6809/buggy-version/hibernate-entitymanager.src.main.java.org.hibernate.jpa.spi.AbstractEntityManagerImpl.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Class<X>.getName()", "java.lang.Object.getClass()", "java.lang.String.format(java.lang.String,int,java.lang.String,java.lang.String)"], "Fixed commit": "6162a4b3944470dcd7b50ec6940bd1969fea3812", "Url": "https://api.github.com/repos/javaprog/hibernate-orm", "Date": "2013-08-16T00:01:07Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pTag.getElementsByTag(\"p\").last()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (pTagText != null) { pTagVal = com.cisco.dse.global.migration.config.FrameworkUtils.extractHtmlBlobContent(pTagText, \"\", locale, sb, urlMap); if (\"<p></p>\".equals(pTagVal)) { pTag = pElements.first(); pTagText = pTag.getElementsByTag(\"p\").first(); pTagVal = com.cisco.dse.global.migration.config.FrameworkUtils.extractHtmlBlobContent(pTagText, \"\", locale, sb, urlMap); } if (textNodeTwo != null) { textNodeTwo.setProperty(\"text\", pTagVal); } }else { sb.append(Constants.CHILD_TEXT_ELEMENT_NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4354/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.rproductlisting.RProductListingVariation1.java", "BodyUseAPI": ["com.cisco.dse.global.migration.config.FrameworkUtils.extractHtmlBlobContent(org.jsoup.nodes.Element,java.lang.String,java.lang.String,java.lang.StringBuilder,java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "6a0c67fb1f2f561f3369d968729d62f73ceb1769", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2016-01-04T10:26:41Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msg.getSender()) == null) { java.lang.System.out.printf(\"\\n%s\\n\", ((ru.mail.track.message.SendMessage) (msg)).getMessage()); }else { java.lang.System.out.printf(\"\\n%s\\n\", ((ru.mail.track.message.CommandResultMessage) (msg)).getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2288/buggy-version/new_messenger.src.main.java.ru.mail.track.net.ThreadedClient.java", "BodyUseAPI": [], "Fixed commit": "9c08b712679b655954f2517b7e323998b9b85916", "Url": "https://api.github.com/repos/rakhimovv/JavaMessenger", "Date": "2015-11-23T23:02:40Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.rezeck.photoservice.MainActivity.pt) != null) { com.example.rezeck.photoservice.MainActivity.pt.isrunning = false; com.example.rezeck.photoservice.MainActivity.pt.cancel(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2384/buggy-version/PhotoService.app.src.main.java.com.example.rezeck.photoservice.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8efb3e33b376d300d781a6507952f5a467c2a022", "Url": "https://api.github.com/repos/h3ct0r/AndroidAutomaticPicTaker", "Date": "2016-06-01T21:15:58Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getComponent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (componentName != null) { if (com.qihoo360.replugin.helper.LogDebug.LOG) { com.qihoo360.replugin.helper.LogDebug.d(\"loadClass\", (((((\"isHookingClass(\" + plugin) + \",\") + (componentName.getClassName())) + \") = \") + (isDynamicClass(plugin, componentName.getClassName())))); } if (isDynamicClass(plugin, componentName.getClassName())) { intent.setComponent(new android.content.ComponentName(com.qihoo360.replugin.base.IPC.getPackageName(), componentName.getClassName())); activity.startActivity(intent); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7601/buggy-version/replugin-host-library.replugin-host-lib.src.main.java.com.qihoo360.loader2.PmInternalImpl.java", "BodyUseAPI": ["android.content.ComponentName.getClassName()", "com.qihoo360.loader2.PmInternalImpl.isDynamicClass(java.lang.String,componentName.getClassName())", "android.content.ComponentName.getClassName()", "android.content.Intent.setComponent(android.content.ComponentName)", "com.qihoo360.replugin.helper.LogDebug.d(java.lang.String,(((((\"isHookingClass(\" + plugin) + \",\") + (componentName.getClassName())) + \") = \") + (isDynamicClass(plugin, componentName.getClassName()))))", "android.content.ComponentName.getClassName()", "com.qihoo360.loader2.PmInternalImpl.isDynamicClass(java.lang.String,componentName.getClassName())", "android.content.ComponentName.getClassName()"], "Fixed commit": "a13f8898d53f4b51e4411c1397cd717694201379", "Url": "https://api.github.com/repos/wangfuda/RePlugin", "Date": "2017-07-19T02:17:16Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["query.setLockMode(LockModeType.PESSIMISTIC_WRITE).getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((localStorageHostRefVOS.size()) > 0) { ref = localStorageHostRefVOS.get(0); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8063/buggy-version/plugin.localstorage.src.main.java.org.zstack.storage.primary.local.LocalStorageCapacityRecalculator.java", "BodyUseAPI": ["java.util.List<org.zstack.storage.primary.local.LocalStorageHostRefVO>.get(int)"], "Fixed commit": "61a9114a68f40d59c986bc1ab2393a3acc04bd9b", "Url": "https://api.github.com/repos/MaJin1996/zstack", "Date": "2017-03-15T04:22:55Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dough.cuts(shapes[2].rotations()[0], startPt)) { return startMv; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7855/buggy-version/cc2.g9.Player.java", "BodyUseAPI": [], "Fixed commit": "f3193572ac25ffefac2ee0614bd326eb586ea9ec", "Url": "https://api.github.com/repos/tingtingtwice/Cookie_Cutter_Grp9", "Date": "2015-11-09T16:48:59Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (main.isTablet) { ((android.widget.EditText) (main.findViewById(R.id.tasks_new))).setOnFocusChangeListener(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1273/buggy-version/src.de.azapps.mirakel.main_activity.TaskFragment.java", "BodyUseAPI": ["de.azapps.mirakel.main_activity.MainActivity.findViewById(R.id.tasks_new)", "((android.widget.EditText) (main.findViewById(R.id.tasks_new))).setOnFocusChangeListener(<nulltype>)"], "Fixed commit": "a47adad3e01500cd31835deeefd472942d0e6790", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-09-22T13:30:53Z"},
{"Line": "=>1268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((max_num_kvs) > 0) { scan.setBatchSize(max_num_kvs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5245/buggy-version/src.Scanner.java", "BodyUseAPI": [], "Fixed commit": "27f61d07903477fe7c08d10892d9cc5ced3a37ec", "Url": "https://api.github.com/repos/danburkert/asynchbase", "Date": "2014-06-19T19:07:06Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.xabber.android.data.xaccount.XabberAccountManager.getInstance().getAccount()) != null) com.xabber.android.data.xaccount.XabberAccountManager.getInstance().updateAccountSettings();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4018/buggy-version/xabber.src.main.java.com.xabber.android.ui.activity.AccountListActivity.java", "BodyUseAPI": [], "Fixed commit": "ac04e2b43845ac019a42e938896a27913bf43693", "Url": "https://api.github.com/repos/redsolution/xabber-android", "Date": "2017-09-26T10:34:35Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.xabber.android.data.xaccount.XabberAccountManager.getInstance().getAccount()) != null) com.xabber.android.data.xaccount.XabberAccountManager.getInstance().updateAccountSettings();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4018/buggy-version/xabber.src.main.java.com.xabber.android.ui.dialog.AccountColorDialog.java", "BodyUseAPI": [], "Fixed commit": "ac04e2b43845ac019a42e938896a27913bf43693", "Url": "https://api.github.com/repos/redsolution/xabber-android", "Date": "2017-09-26T10:34:35Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mod instanceof io.swagger.models.ModelImpl)) { return model; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4395/buggy-version/modules.swagger-codegen.src.main.java.io.swagger.codegen.languages.HaskellServantCodegen.java", "BodyUseAPI": [], "Fixed commit": "3cd37bf5e935140b32191d7c314a1389aea9c406", "Url": "https://api.github.com/repos/yogev-stratoscale/swagger-codegen", "Date": "2016-07-27T10:07:35Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedTime > currentTime) { fromTimeEditText.setText(((hourOfDay + \":\") + minute)); }else { makeToast(\"Please select a valid time\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8516/buggy-version/app.src.main.java.com.ayana.e_park.UserActivites.BookParkingActivity.java", "BodyUseAPI": [], "Fixed commit": "dde3e3be53befa99ba13f7e8cdff520c3a85341a", "Url": "https://api.github.com/repos/Sehalsein/EPark", "Date": "2017-12-15T17:18:13Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(activity.isFinishing())) { final com.addrone.model.MagnetCalibDialog dialog = new com.addrone.model.MagnetCalibDialog(activity) { @java.lang.Override public void onButtonMagnetCalibClick(com.addrone.viewmodel.ButtonCalibId buttonCalibId) { new java.lang.Thread(new com.addrone.viewmodel.ControlViewModel.MagnetCalibMenu(buttonCalibId)).start(); dismiss(); } }; dialog.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2094/buggy-version/app.src.main.java.com.addrone.viewmodel.ControlViewModel.java", "BodyUseAPI": [], "Fixed commit": "e68cd786303704d77bdbbbd51f52a85f640f72e4", "Url": "https://api.github.com/repos/nawbar23/AdDroneApplication", "Date": "2017-02-02T13:44:22Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((v.getId()) == (R.id.toSendTest)) { android.content.Intent gotoSendText = new android.content.Intent(this, com.example.coljlee.lds_zxing.SendTest.class); startActivity(gotoSendText); }else if ((v.getId()) == (R.id.settings_button)) { android.content.Intent intent = new android.content.Intent(this, com.example.coljlee.lds_zxing.ConfigurationScreen.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2439/buggy-version/app.src.main.java.com.example.coljlee.lds_zxing.BarMain.java", "BodyUseAPI": ["android.view.View.getId()"], "Fixed commit": "f960d50c74597016c9c0aed5ddf9ec53a6fccf33", "Url": "https://api.github.com/repos/amandaraeb/ECS193", "Date": "2016-02-20T03:46:38Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sslConfig.getTrustStorePath()) != null) { java.io.InputStream trustStoreIS = org.eclipse.jetty.util.resource.Resource.newResource(sslConfig.getTrustStorePath()).getInputStream(); final java.security.KeyStore trustStore = java.security.KeyStore.getInstance(sslConfig.getTrustStoreType()); trustStore.load(trustStoreIS, sslConfig.getTrustStorePassword().toCharArray()); final javax.net.ssl.TrustManagerFactory trustManagerFactory = javax.net.ssl.TrustManagerFactory.getInstance(javax.net.ssl.TrustManagerFactory.getDefaultAlgorithm()); trustManagerFactory.init(trustStore); trustManagers = trustManagerFactory.getTrustManagers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3014/buggy-version/src.main.java.com.discoverydns.dnsapiclient.internal.DefaultSSLContextFactory.java", "BodyUseAPI": ["com.discoverydns.dnsapiclient.config.DefaultSSLContextFactoryConfig.getTrustStorePassword()", "sslConfig.getTrustStorePassword().toCharArray()", "java.security.KeyStore.getInstance(sslConfig.getTrustStoreType())", "com.discoverydns.dnsapiclient.config.DefaultSSLContextFactoryConfig.getTrustStoreType()", "java.security.KeyStore.load(java.io.InputStream,sslConfig.getTrustStorePassword().toCharArray())", "org.eclipse.jetty.util.resource.Resource.newResource(sslConfig.getTrustStorePath()).getInputStream()", "com.discoverydns.dnsapiclient.config.DefaultSSLContextFactoryConfig.getTrustStorePath()", "org.eclipse.jetty.util.resource.Resource.newResource(sslConfig.getTrustStorePath())"], "Fixed commit": "6716e66a101ac1bcbf46eef7b2781d09e8003daf", "Url": "https://api.github.com/repos/discoverydns/dnsapi-client", "Date": "2014-02-04T23:54:36Z"},
{"Line": "=>1052", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(object instanceof mage.game.permanent.Permanent)) || (((mage.game.permanent.Permanent) (object)).canUseActivatedAbilities(game))) { for (mage.abilities.mana.ManaAbility ability : object.getAbilities().getManaAbilities(zone)) { if (ability.canActivate(playerId, game)) { useable.put(ability.getId(), ability); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8811/buggy-version/Mage.src.mage.players.PlayerImpl.java", "BodyUseAPI": ["object.getAbilities().getManaAbilities(mage.players.Zone)", "mage.abilities.mana.ManaAbility.canActivate(java.util.UUID,mage.game.Game)", "mage.MageObject.getAbilities()"], "Fixed commit": "30ea2188bfa4501b23bfe987ab914e1a9ba3c82e", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-08-24T04:56:47Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) != null) data.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7250/buggy-version/src.histogram.SimpleHistogramPanel.java", "BodyUseAPI": [], "Fixed commit": "3a21f2e984dd4caf41d240bd51c7d7932bd79dd4", "Url": "https://api.github.com/repos/pdroalves/SimpleHistogramPanel", "Date": "2013-05-27T03:43:26Z"},
{"Line": "=>632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.codename1.ui.Display.getInstance().isDesktop())) { requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6930/buggy-version/CodenameOne.src.com.codename1.ui.TextArea.java", "BodyUseAPI": [], "Fixed commit": "c9b9c14d28bcb89e6348b2b2eebb392226d61531", "Url": "https://api.github.com/repos/diamonddevgroup/CodenameOne", "Date": "2017-09-14T16:49:25Z"},
{"Line": "=>641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.codename1.ui.Display.getInstance().isDesktop())) { requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6930/buggy-version/CodenameOne.src.com.codename1.ui.TextArea.java", "BodyUseAPI": [], "Fixed commit": "c9b9c14d28bcb89e6348b2b2eebb392226d61531", "Url": "https://api.github.com/repos/diamonddevgroup/CodenameOne", "Date": "2017-09-14T16:49:25Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.codename1.ui.Display.getInstance().isDesktop())) { requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6930/buggy-version/CodenameOne.src.com.codename1.ui.Button.java", "BodyUseAPI": [], "Fixed commit": "c9b9c14d28bcb89e6348b2b2eebb392226d61531", "Url": "https://api.github.com/repos/diamonddevgroup/CodenameOne", "Date": "2017-09-14T16:49:25Z"},
{"Line": "=>591", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.codename1.ui.Display.getInstance().isDesktop())) { requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6930/buggy-version/CodenameOne.src.com.codename1.ui.Button.java", "BodyUseAPI": [], "Fixed commit": "c9b9c14d28bcb89e6348b2b2eebb392226d61531", "Url": "https://api.github.com/repos/diamonddevgroup/CodenameOne", "Date": "2017-09-14T16:49:25Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["a.getBody().replace(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (a.getBody().equals(censoredQuote)) censoredQuote = a.getBody().replace(capitalize(com.meeDamian.designAdvice.AdviceActivity.CURSE_WORD_RAW), capitalize(com.meeDamian.designAdvice.AdviceActivity.CURSE_WORD_CENSORED));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5126/buggy-version/mobile.src.main.java.com.meeDamian.designAdvice.AdviceActivity.java", "BodyUseAPI": ["com.meeDamian.common.Advice.getBody()", "a.getBody().replace(java.lang.String,java.lang.String)"], "Fixed commit": "ab94e0098f6fdc13b1dbe4799dc76bc3f00e4903", "Url": "https://api.github.com/repos/meeDamian/Good-Fucking-Design-Advice-Android", "Date": "2015-08-02T19:01:18Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (sid == null) { throw new java.lang.IllegalStateException(\"The Sid for an AuthorizedConnectApp can not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7124/buggy-version/src.java.com.twilio.sdk.resource.instance.AuthorizedConnectApp.java", "BodyUseAPI": [], "Fixed commit": "89ce8f79ac4642c5e1d14bfbaee4e9df2a4994b7", "Url": "https://api.github.com/repos/kevinburke/twilio-java", "Date": "2012-01-13T23:51:18Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(iterator.hasNext())) { this.stringBuilder.append(\"[]\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7965/buggy-version/src.org.tangsi.util.json.JsonRender.java", "BodyUseAPI": [], "Fixed commit": "331bd6839a2f6ded34c9210e8bf17bc830ad3e2f", "Url": "https://api.github.com/repos/tangside163/numbJson", "Date": "2015-05-24T02:38:08Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.cmput301f16t11.a2b.FileController.isNetworkAvailable(this)) { requests.addAll(com.cmput301f16t11.a2b.RequestController.getAcceptedByDrivers(com.cmput301f16t11.a2b.UserController.getUser(), this)); }else { requests.addAll(com.cmput301f16t11.a2b.RequestController.getOwnActiveRequests(com.cmput301f16t11.a2b.UserController.getUser(), this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/11/buggy-version/app.src.main.java.com.cmput301f16t11.a2b.RequestListActivity.java", "BodyUseAPI": [], "Fixed commit": "bbab973a62faadb3399d90a066b91e24429ed31e", "Url": "https://api.github.com/repos/CMPUT301F16T11/a2b", "Date": "2016-11-27T22:12:33Z"},
{"Line": "=>2407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((message) != null) && ((message) instanceof gov.nist.javax.sip.message.SIPRequest)) { return ((gov.nist.javax.sip.message.SIPRequest) (message)).getRemotePort(); }else if ((getTransaction()) != null) { if (org.mobicents.servlet.sip.message.SipServletRequestImpl.logger.isTraceEnabled()) { org.mobicents.servlet.sip.message.SipServletRequestImpl.logger.trace(\"transaction not null, returning packet source port\"); } if ((((gov.nist.javax.sip.stack.SIPTransaction) (getTransaction())).getPeerPacketSourceAddress()) != null) { return ((gov.nist.javax.sip.stack.SIPTransaction) (getTransaction())).getPeerPacketSourcePort(); }else { return ((gov.nist.javax.sip.stack.SIPTransaction) (getTransaction())).getPeerPort(); } }else { if (org.mobicents.servlet.sip.message.SipServletRequestImpl.logger.isTraceEnabled()) { org.mobicents.servlet.sip.message.SipServletRequestImpl.logger.trace(\"transaction null, returning top via port\"); } javax.sip.header.ViaHeader via = ((javax.sip.header.ViaHeader) (message.getHeader(ViaHeader.NAME))); if ((via == null) || (!(sipFactoryImpl.getSipApplicationDispatcher().isViaHeaderExternal(via)))) { return -1; }else { return (via.getPort()) <= 0 ? 5060 : via.getPort(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/9219/buggy-version/sip-servlets-impl.src.main.java.org.mobicents.servlet.sip.message.SipServletRequestImpl.java", "BodyUseAPI": [], "Fixed commit": "96e96b74d6dcd56cc026a51a709f69c9dfdaf4dd", "Url": "https://api.github.com/repos/AlerantAppNGIN/sip-servlets", "Date": "2015-12-30T11:54:54Z"},
{"Line": "=>2360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((message) != null) && ((message) instanceof gov.nist.javax.sip.message.SIPRequest)) && ((((gov.nist.javax.sip.message.SIPRequest) (message)).getRemoteAddress()) != null)) { return ((gov.nist.javax.sip.message.SIPRequest) (message)).getRemoteAddress().getHostAddress(); }else if ((getTransaction()) != null) { if (org.mobicents.servlet.sip.message.SipServletRequestImpl.logger.isTraceEnabled()) { org.mobicents.servlet.sip.message.SipServletRequestImpl.logger.trace(\"transaction not null, returning packet source ip address\"); } if ((((gov.nist.javax.sip.stack.SIPTransaction) (getTransaction())).getPeerPacketSourceAddress()) != null) { return ((gov.nist.javax.sip.stack.SIPTransaction) (getTransaction())).getPeerPacketSourceAddress().getHostAddress(); }else { return ((gov.nist.javax.sip.stack.SIPTransaction) (getTransaction())).getPeerAddress(); } }else { if (org.mobicents.servlet.sip.message.SipServletRequestImpl.logger.isTraceEnabled()) { org.mobicents.servlet.sip.message.SipServletRequestImpl.logger.trace(\"transaction null, returning top via ip address\"); } javax.sip.header.ViaHeader via = ((javax.sip.header.ViaHeader) (message.getHeader(ViaHeader.NAME))); if ((via == null) || (!(sipFactoryImpl.getSipApplicationDispatcher().isViaHeaderExternal(via)))) { return null; }else { return via.getHost(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/9219/buggy-version/sip-servlets-impl.src.main.java.org.mobicents.servlet.sip.message.SipServletRequestImpl.java", "BodyUseAPI": ["org.mobicents.servlet.sip.message.SipServletRequestImpl.getRemoteAddress()", "((gov.nist.javax.sip.message.SIPRequest) (message)).getRemoteAddress().getHostAddress()"], "Fixed commit": "96e96b74d6dcd56cc026a51a709f69c9dfdaf4dd", "Url": "https://api.github.com/repos/AlerantAppNGIN/sip-servlets", "Date": "2015-12-30T11:54:54Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mdevice) == null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8568/buggy-version/New_modules.Client2706.app.src.main.java.com.example.anonymous.client2706.WidgetService.java", "BodyUseAPI": [], "Fixed commit": "94fcfb74ed2f3ef481347b8c674eb964609a98b1", "Url": "https://api.github.com/repos/wolf00/Android", "Date": "2015-07-09T11:55:46Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["result.getTestContext().getSuite().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (allOpenDefects != null) { for (org.uncommons.reportng.ITestNGMethod method : result.getTestContext().getAllTestMethods()) { java.util.Set<org.uncommons.reportng.ITestResult> testResults = allOpenDefects.getResults(method); if (!(testResults.isEmpty())) { for (org.uncommons.reportng.ITestResult testResult : testResults) { specificTestOpenDefects.addResult(testResult, method); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/387/buggy-version/reportng.src.java.main.org.uncommons.reportng.ReportNGUtils.java", "BodyUseAPI": ["org.uncommons.reportng.IResultMap.getResults(org.uncommons.reportng.ITestNGMethod)"], "Fixed commit": "a3e4d98663006aeea9fac8cc7d804917e158f14b", "Url": "https://api.github.com/repos/ptsiakos77/reportng", "Date": "2016-01-19T09:23:27Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["result.getTestContext().getSuite().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (allFixedDefects != null) { for (org.uncommons.reportng.ITestNGMethod method : result.getTestContext().getAllTestMethods()) { java.util.Set<org.uncommons.reportng.ITestResult> testResults = allFixedDefects.getResults(method); if (!(testResults.isEmpty())) { for (org.uncommons.reportng.ITestResult testResult : testResults) { specificTestFixedDefects.addResult(testResult, method); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/387/buggy-version/reportng.src.java.main.org.uncommons.reportng.ReportNGUtils.java", "BodyUseAPI": ["org.uncommons.reportng.IResultMap.getResults(org.uncommons.reportng.ITestNGMethod)"], "Fixed commit": "a3e4d98663006aeea9fac8cc7d804917e158f14b", "Url": "https://api.github.com/repos/ptsiakos77/reportng", "Date": "2016-01-19T09:23:27Z"},
{"Line": "=>1464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEnableOverScroll()) mOverScrollChecker.updateVelocityY(((-velocityY) / 5), (velocityY > 0 ? -1 : 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3157/buggy-version/library.src.main.java.me.dkzwm.smoothrefreshlayout.SmoothRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "a9e7ca0435221026d67b3b8a7093c9f573755f55", "Url": "https://api.github.com/repos/dkzwm/SmoothRefreshLayout", "Date": "2017-06-23T09:26:11Z"},
{"Line": "=>1416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.storage.ceph.backup.CephBackupStorageVO.getFsid()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((org.zstack.core.db.Q.New(org.zstack.storage.ceph.primary.CephPrimaryStorageVO.class).eq(CephPrimaryStorageVO_.fsid, fsid).find()) == null) { dbf.removeByPrimaryKey(fsid, org.zstack.storage.ceph.backup.CephCapacityVO.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5593/buggy-version/plugin.ceph.src.main.java.org.zstack.storage.ceph.backup.CephBackupStorageBase.java", "BodyUseAPI": ["org.zstack.storage.ceph.backup.CephBackupStorageBase.removeByPrimaryKey(java.lang.String,java.lang.Class)"], "Fixed commit": "0ae2ed58544e83059810f8aa0046508c8aec7ebc", "Url": "https://api.github.com/repos/MaJin1996/zstack", "Date": "2017-03-20T01:34:58Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((v.getKingdom().getOwner()) == (v.getPlayer()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8257/buggy-version/src.org.theglicks.bukkit.fuedalism.commands.KingdomDisband.java", "BodyUseAPI": [], "Fixed commit": "1a1e41df2acba145789284bc2a3bfb01f2df34d0", "Url": "https://api.github.com/repos/stevenmg/Fuedalism", "Date": "2013-08-13T19:28:08Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (key.equals(getString(R.string.key_internal_browser))) { boolean isInternal = prefInternalBrowser.isChecked(); presenter.updateInternalBrowser(isInternal); com.phicdy.mycuration.tracker.GATrackerHelper.sendEvent(getString(R.string.change_browser_option), (prefInternalBrowser.isChecked() ? 1 : 0)); }else if (key.equals(getString(R.string.key_auto_update_in_main_ui))) { boolean isAutoUpdateInMainUi = prefAutoUpdateInMainUi.isChecked(); presenter.updateAutoUpdateInMainUi(isAutoUpdateInMainUi); com.phicdy.mycuration.tracker.GATrackerHelper.sendEvent(getString(R.string.change_auto_update_in_main_ui_option), (isAutoUpdateInMainUi ? 1 : 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1496/buggy-version/mycuration.src.main.java.com.phicdy.mycuration.view.fragment.SettingFragment.java", "BodyUseAPI": ["java.lang.String.equals(getString(R.string.key_auto_update_in_main_ui))"], "Fixed commit": "a9d9baad411d5e1b52f361a12bc16f6356852f94", "Url": "https://api.github.com/repos/phicdy/MyCuration", "Date": "2017-10-22T08:16:12Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (moveAfterDirectionChange) { this.direction = dir; moveAfterDirectionChange = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5533/buggy-version/src.main.java.org.florian_wagner.snake.core.Snake.java", "BodyUseAPI": [], "Fixed commit": "7a6964ddcb9276bbec18aefad59d8c724cbe28a3", "Url": "https://api.github.com/repos/FloWag/Snake", "Date": "2017-04-09T10:55:22Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((name.length()) > 0) name = name.substring(0, ((name.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7397/buggy-version/src.fpsGame.Main.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "96a0f23a5167cd9e064b21832573e385bfda060e", "Url": "https://api.github.com/repos/ConorDevilly/OOP_Game_Assignment", "Date": "2016-02-04T15:01:54Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (tmp != null) { return tmp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5044/buggy-version/src.Engine.Ghost.java", "BodyUseAPI": [], "Fixed commit": "d886bb032d58f9e264c14311032b052122c8dba1", "Url": "https://api.github.com/repos/bmoor/ConnectFour", "Date": "2014-05-13T13:32:06Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((snl.getCurrentPlayer().getName()) == \"Computer\") { snl.comRoll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/9238/buggy-version/src.snakesandladders.Squares.RethrowDiceSquare.java", "BodyUseAPI": ["snakesandladders.main.SnakesAndLaddersV20.comRoll()"], "Fixed commit": "6f39cdac7bf6337f04f3f4904b9571745363b107", "Url": "https://api.github.com/repos/EZELife/feethee", "Date": "2017-06-04T12:06:46Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((mImageUrl) == null) || (mImageUrl.isEmpty())) || (!(mImageUrl.startsWith(\"http\")))) { mImageView.setImageDrawable(mContext.getResources().getDrawable(mErrorImage)); }else { cn.hadcn.davinci.image.VolleyImageListener listener = new cn.hadcn.davinci.image.VolleyImageListener(mContext, mImageView, mImageCache); listener.setDefaultImage(mLoadingImage, mErrorImage); listener.setMaxSize(mMaxSize); mImageLoader.get(mImageUrl, listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7091/buggy-version/davinci.src.main.java.cn.hadcn.davinci.image.ReadImageTask.java", "BodyUseAPI": ["cn.hadcn.davinci.base.ImageLoader.get(java.lang.String,cn.hadcn.davinci.image.VolleyImageListener)"], "Fixed commit": "6afa22f60339ec0ff3a20287a684371c7989cb85", "Url": "https://api.github.com/repos/CPPAlien/DaVinci", "Date": "2016-05-05T13:21:04Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(State.STOPPED.equals(state))) { executeLine(program.getLines().get(currentLineNumber)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1244/buggy-version/src.main.java.pw.ry4n.dr.engine.sf.StormFrontInterpreter.java", "BodyUseAPI": [], "Fixed commit": "71226d31ed1ee274ef8d6309b67a1153c9e55288", "Url": "https://api.github.com/repos/ry4npw/dragonrealms-dobby", "Date": "2015-12-15T06:01:20Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (writeMDS) outMDS.flush();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5702/buggy-version/src.main.java.edu.indiana.soic.spidal.tools.ClusterExtractorSimple.java", "BodyUseAPI": [], "Fixed commit": "7b0aa2a3d078bbc8ad7ae8757a416b4949210e0d", "Url": "https://api.github.com/repos/DSC-SPIDAL/dapwc", "Date": "2017-07-28T17:28:39Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { getActivity().runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { mAdapter.notifyDataSetChanged(); setUIReady(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3253/buggy-version/app.src.main.java.watch.fight.android.fightbrowser.StreamBrowser.BrowserFragment.java", "BodyUseAPI": [], "Fixed commit": "abf38acb02f83e1b4619119857f0aa9d47fe11a7", "Url": "https://api.github.com/repos/thingdeux/FightWatchAndroidApplication", "Date": "2015-10-08T15:50:17Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ctrip.hermes.core.service.SystemClockService.now()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newExpireTime > (now + (2 * leaseTimeMillis))) { newExpireTime = now + (2 * leaseTimeMillis); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/831/buggy-version/hermes-metaserver.src.main.java.com.ctrip.hermes.metaserver.commons.BaseLeaseHolder.java", "BodyUseAPI": [], "Fixed commit": "5e626c89f59cb7091321eb5255ebec32299acce0", "Url": "https://api.github.com/repos/yiming187/hermes", "Date": "2015-09-06T09:17:14Z"},
{"Line": "=>747", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((day) == 1) && ((hour) == 5)) java.lang.System.out.println(\"I am here\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7039/buggy-version/src.Observer.Observer.java", "BodyUseAPI": [], "Fixed commit": "dd82213d0d3a434847d0fb3c3648bbe89fbd0e4c", "Url": "https://api.github.com/repos/poragchowdhury/PDAuctioneer", "Date": "2017-05-03T09:27:11Z"},
{"Line": "=>1076", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selected_map) != ((mapNames.size()) - 1)) com.mygdx.game.KambojaMain.setMapName(mapNames.get(selected_map));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5319/buggy-version/kamboja.core.src.com.mygdx.game.states.MapSelectState.java", "BodyUseAPI": ["com.mygdx.game.KambojaMain.setMapName(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "94ec35777081d3e51fecc56baba904e2ccf34e58", "Url": "https://api.github.com/repos/RotcivOcnarb/kamboja", "Date": "2017-11-21T00:03:45Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cursor.moveToFirst()) { movie_review_id = cursor.getInt(cursor.getColumnIndex(\"movie_id\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6643/buggy-version/app.src.main.java.com.example.mahes_000.moviesapp_udacity.moviedata.MovieProvider.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndex(java.lang.String)", "android.database.Cursor.getInt(cursor.getColumnIndex(\"movie_id\"))"], "Fixed commit": "9cd8bc10151d67b4b565c2e103c0d65a344d2caf", "Url": "https://api.github.com/repos/maheshbabugorantla/MoviesApp_Udacity", "Date": "2016-07-15T02:10:10Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cursor.moveToFirst()) { tv_review_id = cursor.getInt(cursor.getColumnIndex(MovieContract.TVReviews.COLUMN_TV_ID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6643/buggy-version/app.src.main.java.com.example.mahes_000.moviesapp_udacity.moviedata.MovieProvider.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndex(MovieContract.TVReviews.COLUMN_TV_ID)", "android.database.Cursor.getInt(cursor.getColumnIndex(MovieContract.TVReviews.COLUMN_TV_ID))"], "Fixed commit": "9cd8bc10151d67b4b565c2e103c0d65a344d2caf", "Url": "https://api.github.com/repos/maheshbabugorantla/MoviesApp_Udacity", "Date": "2016-07-15T02:10:10Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg instanceof java.lang.Enum<?>) { arg = ((java.lang.Enum<?>) (arg)).name(); resolved = true; }else if (arg instanceof java.lang.ThreadLocal) { arg = ((java.lang.ThreadLocal<?>) (arg)).get(); }else { resolved = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5500/buggy-version/squidb.src.com.yahoo.squidb.sql.DefaultArgumentResolver.java", "BodyUseAPI": [], "Fixed commit": "16b87596b532040fcc07ee25f2b88e5937edb5c5", "Url": "https://api.github.com/repos/yahoo/squidb", "Date": "2016-08-29T17:11:59Z"},
{"Line": "=>856", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(stateMachine.isComposite())) || ((stateMachine.isComposite()) && (!(stateMachine.getOwningState().isOverriding())))) { populateStateMetadatas(stateMachine.getSuperStateMachine(), results, overridedStates); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3726/buggy-version/Platform.Lifecycle.src.main.java.net.madz.lifecycle.meta.impl.builder.StateMachineMetaBuilderImpl.java", "BodyUseAPI": ["net.madz.lifecycle.meta.template.StateMachineMetadata.getSuperStateMachine()", "net.madz.lifecycle.meta.impl.builder.StateMachineMetaBuilderImpl.populateStateMetadatas(stateMachine.getSuperStateMachine(),java.util.ArrayList<net.madz.lifecycle.meta.template.StateMetadata>,java.util.ArrayList<net.madz.lifecycle.meta.template.StateMetadata>)"], "Fixed commit": "2203261dc5ea02c404d84ce93175c4f12af50944", "Url": "https://api.github.com/repos/zhongdj/Swordfish", "Date": "2013-11-13T03:58:42Z"},
{"Line": "=>852", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(overridedStates.contains(stateMachineMeta.getOwningState()))) { populateStates(results, stateMachineMeta, overridedStates); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3726/buggy-version/Platform.Lifecycle.src.main.java.net.madz.lifecycle.meta.impl.builder.StateMachineMetaBuilderImpl.java", "BodyUseAPI": ["net.madz.lifecycle.meta.impl.builder.StateMachineMetaBuilderImpl.populateStates(java.util.ArrayList<net.madz.lifecycle.meta.template.StateMetadata>,net.madz.lifecycle.meta.template.StateMachineMetadata,java.util.ArrayList<net.madz.lifecycle.meta.template.StateMetadata>)"], "Fixed commit": "2203261dc5ea02c404d84ce93175c4f12af50944", "Url": "https://api.github.com/repos/zhongdj/Swordfish", "Date": "2013-11-13T03:58:42Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i.range()) != null) { annotation.registerFix(new org.sonarlint.intellij.actions.NoSonarIntentionAction(i.range())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1230/buggy-version/src.main.java.org.sonarlint.intellij.editor.SonarExternalAnnotator.java", "BodyUseAPI": ["org.sonarlint.intellij.issue.IssuePointer.range()", "com.intellij.lang.annotation.Annotation.registerFix(org.sonarlint.intellij.actions.NoSonarIntentionAction)"], "Fixed commit": "c6fc34f35bf3b37e05a0e97e894219fd682a54da", "Url": "https://api.github.com/repos/SonarSource/sonarlint-intellij", "Date": "2016-01-13T08:20:55Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player.getCurrentEquippedItem()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3088/buggy-version/src.main.java.mrriegel.blockedlayers.handler.QuestHandler.java", "BodyUseAPI": [], "Fixed commit": "bf7969a8f39a256b46e3e79d040ed5ade98991a7", "Url": "https://api.github.com/repos/MrRiegel/Blocked-Layers", "Date": "2015-07-20T18:46:34Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (stream == null) { throw new org.apache.velocity.exception.ResourceNotFoundException(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/294/buggy-version/java-impl.src.com.intellij.codeInsight.generation.VelocityIncludesClassLoader.java", "BodyUseAPI": [], "Fixed commit": "f73f4178515c4c71d76b921ca006068b82f14588", "Url": "https://api.github.com/repos/consulo/consulo-java", "Date": "2017-08-28T10:05:46Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.model.getType().equals(AssociationTypes.EDGE)) { setMeth = \"\\n public boolean setPartnerRoleName(partnerClassName value)\" + (((((((((((((((\"\\n {\" + \"\\n boolean changed = false;\") + \"\\n \") + \"\\n if (this.partnerRoleName != value)\") + \"\\n {\") + \"\\n partnerClassName oldValue = this.partnerRoleName;\") + \"\\n \") + \"\\n this.partnerRoleName = value;\") + \"\\n \") + \"\\n PROPERTYCHANGEADD\") + \"\\n changed = true;\") + \"\\n }\") + \"\\n \") + \"\\n return changed;\") + \"\\n }\") + \"\\n\"); }else { setMeth = \"\\n public boolean setPartnerRoleName(partnerClassName value)\" + ((((((((((((((((((((((((((\"\\n {\" + \"\\n boolean changed = false;\") + \"\\n \") + \"\\n if (this.partnerRoleName != value)\") + \"\\n {\") + \"\\n partnerClassName oldValue = this.partnerRoleName;\") + \"\\n \") + \"\\n if (this.partnerRoleName != null)\") + \"\\n {\") + \"\\n this.partnerRoleName = null;\") + \"\\n oldValue.withoutMethodCall(this);\") + \"\\n }\") + \"\\n \") + \"\\n this.partnerRoleName = value;\") + \"\\n \") + \"\\n if (value != null)\") + \"\\n {\") + \"\\n value.withMyRoleName(this);\") + \"\\n }\") + \"\\n \") + \"\\n PROPERTYCHANGEADD\") + \"\\n changed = true;\") + \"\\n }\") + \"\\n \") + \"\\n return changed;\") + \"\\n }\") + \"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1321/buggy-version/src.main.java.org.sdmlib.models.classes.logic.GenAssociation.java", "BodyUseAPI": [], "Fixed commit": "4e1273b3d70ecdb813366af31cef6f80e527569a", "Url": "https://api.github.com/repos/fujaba/SDMLib", "Date": "2017-05-11T15:23:18Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bsChecker.ErrorQuotationForm.tokenize(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tokens[i].substring(((tokens[i].indexOf(\"\\\"\")) + 1)).contains(\"\\\"\")) start = i;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7077/buggy-version/src.bsChecker.ErrorQuotationForm.java", "BodyUseAPI": [], "Fixed commit": "1066bc65f680d1e80d3a88ea272b5115ed80df56", "Url": "https://api.github.com/repos/MXProgrammingClub/BSChecker", "Date": "2016-11-11T01:39:36Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cell.toString().contains(\"s\")) java.lang.System.out.println((\"SHIFT \" + (cell.toString()))); else if (cell.toString().contains(\"r\")) java.lang.System.out.print(((\"REDUCE \" + (cell.toString())) + \":\")); else if ((cell.toString().indexOf(\"acc\")) != (-1)) java.lang.System.out.println(\"ACCEPT\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4862/buggy-version/src.Parser.java", "BodyUseAPI": ["org.apache.poi.xssf.usermodel.XSSFCell.toString()", "cell.toString().indexOf(java.lang.String)", "org.apache.poi.xssf.usermodel.XSSFCell.toString()", "java.io.PrintStream.print(((\"REDUCE \" + (cell.toString())) + \":\"))", "cell.toString().contains(java.lang.String)", "java.io.PrintStream.println((\"SHIFT \" + (cell.toString())))", "org.apache.poi.xssf.usermodel.XSSFCell.toString()", "org.apache.poi.xssf.usermodel.XSSFCell.toString()"], "Fixed commit": "914cb931aef1b6742d16a3afaae25b752e4ff614", "Url": "https://api.github.com/repos/trishmoreno02/PNoise_Parser", "Date": "2017-04-16T13:35:29Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((orderBy != null) && (!(orderBy.trim().equals(\"\")))) { sql.append(\" ORDER BY ?\"); params.add(orderBy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/602/buggy-version/easydao.src.main.java.com.easy4j.easydao.base.DAOSupport.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.add(java.lang.String)"], "Fixed commit": "1895093e49c978992ac4172d34b926315d16515f", "Url": "https://api.github.com/repos/wangjie2013/easyFrame", "Date": "2014-03-17T08:37:41Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((offset > (-1)) && (pageSize > (-1))) { sql.append(\" LIMIT ?,?\"); params.add(offset); params.add(pageSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/602/buggy-version/easydao.src.main.java.com.easy4j.easydao.base.DAOSupport.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.add(int)", "java.util.List<java.lang.Object>.add(int)"], "Fixed commit": "1895093e49c978992ac4172d34b926315d16515f", "Url": "https://api.github.com/repos/wangjie2013/easyFrame", "Date": "2014-03-17T08:37:41Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mTestBasedOn.equalsIgnoreCase(\"ROOM\")) { testDetails.setTestItem(\"\"); }else { testDetails.setTestItem((\"\" + (testItemValue.getText()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3517/buggy-version/VALDOC.app.src.main.java.com.project.valdoc.RDACPHAVUserEntryActivity.java", "BodyUseAPI": [], "Fixed commit": "58c9d7cde153632cf32d7aa5d0fa65c2423b896c", "Url": "https://api.github.com/repos/avinashtiwari87/HelloAcTest", "Date": "2016-07-18T19:53:45Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inEntry == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2091/buggy-version/src.de.kumpelblase2.dragonslair.logging.LoggingManager.java", "BodyUseAPI": [], "Fixed commit": "212dc9d187bbc6dedd8d5d78c75cd099cd3c5676", "Url": "https://api.github.com/repos/kumpelblase2/Dragons-Lair", "Date": "2012-08-27T11:53:31Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != outerAnnotations) { if (null != annotations) { for (java.lang.String key : outerAnnotations.keySet()) { if (!(annotations.containsKey(key))) { annotations.put(key, outerAnnotations.get(key)); } } }else { annotations = outerAnnotations; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3627/buggy-version/src.main.java.org.ndexbio.xbel.splitter.StatementGroupSplitter.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.keySet()", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "206c5110c4f763ad07e8f29b8e14c83cd47dd4ae", "Url": "https://api.github.com/repos/cytoscape/ndex-task", "Date": "2014-09-11T07:46:52Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dk.magenta.databroker.core.DataProvider.getBulkwireCallbacks(dk.magenta.databroker.core.model.DataProviderEntity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (transactionCallbacks != null) { for (org.springframework.transaction.support.TransactionCallback transactionCallback : transactionCallbacks) { this.transactionTemplate.execute(transactionCallback); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4738/buggy-version/src.main.java.dk.magenta.databroker.core.DataProvider.java", "BodyUseAPI": [], "Fixed commit": "1847886a702e6a41a61306b28eaa050974422777", "Url": "https://api.github.com/repos/magenta-aps/databroker", "Date": "2015-03-20T12:25:11Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { java.lang.System.out.println(\"### VALUE BEING ADDED IS NULL!!!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3101/buggy-version/flink-runtime.src.main.java.org.apache.flink.runtime.state.hybrid.BucketList.java", "BodyUseAPI": [], "Fixed commit": "ae5590afcb6bbb3449b49f40ee778545e11b5cb5", "Url": "https://api.github.com/repos/sesteves/flink", "Date": "2016-10-13T16:36:17Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!isExport) { edu.wpi.cs.wpisuitetng.modules.requirementmanager.view.ViewEventController.getInstance().setOverviewTable(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6893/buggy-version/RequirementManager.src.edu.wpi.cs.wpisuitetng.modules.requirementmanager.view.overview.OverviewTable.java", "BodyUseAPI": [], "Fixed commit": "98d834e0be644f34450c4f920761b9acf37505a6", "Url": "https://api.github.com/repos/Team-Combat-Wombat/wpi-suite-tcw", "Date": "2014-04-22T01:41:42Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y == (this)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/9195/buggy-version/4_8puzzle.Board.java", "BodyUseAPI": [], "Fixed commit": "108b2bd18f5762997c719dceefff9aed85169c91", "Url": "https://api.github.com/repos/tologon/algs4", "Date": "2015-10-13T03:04:15Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((y.getClass()) != (this.getClass())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/9195/buggy-version/4_8puzzle.Board.java", "BodyUseAPI": [], "Fixed commit": "108b2bd18f5762997c719dceefff9aed85169c91", "Url": "https://api.github.com/repos/tologon/algs4", "Date": "2015-10-13T03:04:15Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/9195/buggy-version/4_8puzzle.Board.java", "BodyUseAPI": [], "Fixed commit": "108b2bd18f5762997c719dceefff9aed85169c91", "Url": "https://api.github.com/repos/tologon/algs4", "Date": "2015-10-13T03:04:15Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position.getSpeed()) > (org.traccar.MQTTDataHandler.minIdleSpeed)) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8515/buggy-version/src.org.traccar.MQTTDataHandler.java", "BodyUseAPI": [], "Fixed commit": "c5f1acdd141a8bad7c6b01bb3bf92ab87296696e", "Url": "https://api.github.com/repos/fleetr-eu/traccar", "Date": "2016-05-01T12:39:27Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((position.getAttributes().get(\"key\")) != null) { return java.lang.Integer.valueOf(position.getAttributes().get(\"key\").toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8515/buggy-version/src.org.traccar.MQTTDataHandler.java", "BodyUseAPI": ["org.traccar.model.Position.getAttributes()", "java.lang.Integer.valueOf(position.getAttributes().get(\"key\").toString())", "position.getAttributes().get(\"key\").toString()", "position.getAttributes().get(java.lang.String)"], "Fixed commit": "c5f1acdd141a8bad7c6b01bb3bf92ab87296696e", "Url": "https://api.github.com/repos/fleetr-eu/traccar", "Date": "2016-05-01T12:39:27Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.broadinstitute.sting.utils.variantcontext.VariantContextUtils.separateVariantContextsByType(java.util.Collection<org.broadinstitute.sting.utils.variantcontext.VariantContext>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((VCsByType.containsKey(VariantContext.Type.NO_VARIATION)) && ((VCsByType.size()) > 1)) { final java.util.List<org.broadinstitute.sting.utils.variantcontext.VariantContext> refs = VCsByType.remove(VariantContext.Type.NO_VARIATION); for (org.broadinstitute.sting.utils.variantcontext.VariantContext.Type type : VariantContext.Type.values()) { if (VCsByType.containsKey(type)) { VCsByType.get(type).addAll(refs); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1966/buggy-version/public.java.src.org.broadinstitute.sting.gatk.walkers.variantutils.CombineVariants.java", "BodyUseAPI": ["java.util.Map<VariantContext.Type, java.util.List<org.broadinstitute.sting.utils.variantcontext.VariantContext>>.containsKey(VariantContext.Type)", "java.util.Map<VariantContext.Type, java.util.List<org.broadinstitute.sting.utils.variantcontext.VariantContext>>.get(VariantContext.Type)", "java.util.Map<VariantContext.Type, java.util.List<org.broadinstitute.sting.utils.variantcontext.VariantContext>>.remove(VariantContext.Type.NO_VARIATION)", "VCsByType.get(type).addAll(java.util.List<org.broadinstitute.sting.utils.variantcontext.VariantContext>)"], "Fixed commit": "07c3bd32b35997ad21fa37ae3fda929b04adc29c", "Url": "https://api.github.com/repos/broadgsa/gatk", "Date": "2012-03-21T16:42:13Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((dims[index]) != null) || (index > (dims.length))) { throw new com.metamx.common.ISE(((\"Dimension: \\\"\" + dimension) + \"\\\" occured more than once in InputRow\")); }else { dims[index] = getDimVals(dimValues.get(dimension), dimensionValues); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8705/buggy-version/processing.src.main.java.io.druid.segment.incremental.IncrementalIndex.java", "BodyUseAPI": [], "Fixed commit": "debdd5517485eb473c06ad1ca07145c7afb8f041", "Url": "https://api.github.com/repos/tubemogul/druid", "Date": "2015-11-30T03:27:33Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(domain)) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5706/buggy-version/metron-platform.metron-common.src.main.java.org.apache.metron.common.typosquat.HomoglyphStrategy.java", "BodyUseAPI": [], "Fixed commit": "42af879d5fc1623fd9b24dd24af687292d9bcc73", "Url": "https://api.github.com/repos/cestella/incubator-metron", "Date": "2017-12-21T16:20:10Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (domain.startsWith(\"xn--\")) { domain = java.net.IDN.toUnicode(domain); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5706/buggy-version/metron-platform.metron-common.src.main.java.org.apache.metron.common.typosquat.HomoglyphStrategy.java", "BodyUseAPI": ["java.net.IDN.toUnicode(java.lang.String)"], "Fixed commit": "42af879d5fc1623fd9b24dd24af687292d9bcc73", "Url": "https://api.github.com/repos/cestella/incubator-metron", "Date": "2017-12-21T16:20:10Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["T.getPlugged()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (pluggedMeta == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8243/buggy-version/genericsystem-kernel.src.main.java.org.genericsystem.kernel.services.AncestorsService.java", "BodyUseAPI": [], "Fixed commit": "e3746395ed268de8eacf62fca39d1fa12a172097", "Url": "https://api.github.com/repos/genericsystem/genericsystem2014", "Date": "2014-05-05T09:35:45Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["parseObject.getNumber(Constants.PARSE_DIRECTION).intValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parseObjectDirection == direction) { radar = createRadarFromParse(parseObject); radars.add(radar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6829/buggy-version/app.src.main.java.com.mobilemakers.juansoler.appradar.ParseDataBase.java", "BodyUseAPI": [], "Fixed commit": "25cd6e77934505a7854b1b39eb783902e88376d9", "Url": "https://api.github.com/repos/juancruzgs/AppRadar", "Date": "2015-04-03T00:32:05Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (creatingRawClass) { for (org.jetbrains.mps.openapi.model.SNode tvd : jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getTargets(classifier, \"typeVariableDeclaration\", true)) { jetbrains.mps.internal.collections.runtime.MapSequence.fromMap(subs).put(tvd, jetbrains.mps.baseLanguage.typesystem.typeof_ClassCreator_InferenceRule._quotation_createNode_4w0o2k_a0a0a0l0b()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5568/buggy-version/languages.baseLanguage.baseLanguage.source_gen.jetbrains.mps.baseLanguage.typesystem.typeof_ClassCreator_InferenceRule.java", "BodyUseAPI": [], "Fixed commit": "7db45aaafd4c1c6b8de424d425cb516004c35660", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2013-12-04T16:07:07Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.h6ah4i.android.example.advrecyclerview.demo_eds_vp_sec_long.MyExpandableDraggableSwipeableSectionAdapter.isSectionHeader(holder))) { return REACTION_CAN_NOT_SWIPE_ANY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8726/buggy-version/example.src.main.java.com.h6ah4i.android.example.advrecyclerview.demo_eds_vp_sec_long.MyExpandableDraggableSwipeableSectionAdapter.java", "BodyUseAPI": [], "Fixed commit": "0c99fcd788eda0884570cdf0adbb52fa6e516afc", "Url": "https://api.github.com/repos/rmarau/android-advancedrecyclerview", "Date": "2016-03-04T20:19:53Z"},
{"Line": "=>836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sk.henrichg.phoneprofiles.GlobalData.isRooted(false)) { if (sk.henrichg.phoneprofiles.GlobalData.serviceBinaryExists()) featurePresented = sk.henrichg.phoneprofiles.GlobalData.PREFERENCE_ALLOWED; else { if ((PhoneProfilesHelper.PPHelperVersion) == (-1)) featurePresented = sk.henrichg.phoneprofiles.GlobalData.PREFERENCE_INSTALL_PPHELPER; else featurePresented = sk.henrichg.phoneprofiles.GlobalData.PREFERENCE_UPGRADE_PPHELPER; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6195/buggy-version/phoneProfiles.src.main.java.sk.henrichg.phoneprofiles.GlobalData.java", "BodyUseAPI": [], "Fixed commit": "e28471e814d8869e98b56331b6645beb34bbe1da", "Url": "https://api.github.com/repos/henrichg/PhoneProfiles", "Date": "2015-11-24T18:32:39Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.project.Project.getBaseDir()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (baseDir == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2414/buggy-version/src.mobi.hsz.idea.gitignore.daemon.MissingGitignoreNotificationProvider.java", "BodyUseAPI": [], "Fixed commit": "14c283b025a5fe68e3c719f5f71c478824faf5ca", "Url": "https://api.github.com/repos/hsz/idea-gitignore", "Date": "2016-03-20T09:37:20Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Values.DECLENSION_NOUNS[declension][number][Case].equals(\"\")) { return new Words.ConjugatedNoun(this, nominative, purpose, number, Values.CASE_NOMINATIVE, gender); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/23/buggy-version/src.Words.Noun.java", "BodyUseAPI": [], "Fixed commit": "bef5d965af04a38894719e6e17df003975cc202f", "Url": "https://api.github.com/repos/RLLatinGenerator/LatinGenerator", "Date": "2015-08-11T02:06:36Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((customerTable.getSelectionModel().getSelectedItem()) != null) main.showCustomerOrder(customerTable.getSelectionModel().getSelectedItem()); else { javafx.scene.control.Alert alert = new javafx.scene.control.Alert(javafx.scene.control.Alert.AlertType.ERROR); alert.setTitle(\"Error!\"); alert.setHeaderText(\"\"); alert.setContentText(\"Keinen Kunden ausgew\u00e4hlt!\"); alert.showAndWait(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6586/buggy-version/hik.src.main.java.de.hftStuttgart.hik.controller.TabViewController.java", "BodyUseAPI": ["de.hftStuttgart.hik.application.Main.showCustomerOrder(customerTable.getSelectionModel().getSelectedItem())", "customerTable.getSelectionModel().getSelectedItem()", "javafx.scene.control.TableView<de.hftStuttgart.hik.model.Customer>.getSelectionModel()"], "Fixed commit": "10f6bada81a3fd894b3d8f9191bac8550e39ce22", "Url": "https://api.github.com/repos/HighSpeedFinance/HighSpeedFinance", "Date": "2016-05-17T22:45:12Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((customerTable.getSelectionModel().getSelectedItem()) != null) main.showCustomerOrder(customerTable.getSelectionModel().getSelectedItem()); else { javafx.scene.control.Alert alert = new javafx.scene.control.Alert(javafx.scene.control.Alert.AlertType.ERROR); alert.setTitle(\"Error!\"); alert.setHeaderText(\"\"); alert.setContentText(\"Keinen Kunden ausgew\u00e4hlt!\"); alert.showAndWait(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6586/buggy-version/hik.src.main.java.de.hftStuttgart.hik.controller.NewCustomersAndSuppliersController.java", "BodyUseAPI": ["javafx.scene.control.TableView<de.hftStuttgart.hik.model.Customer>.getSelectionModel()", "de.hftStuttgart.hik.application.Main.showCustomerOrder(customerTable.getSelectionModel().getSelectedItem())", "customerTable.getSelectionModel().getSelectedItem()"], "Fixed commit": "10f6bada81a3fd894b3d8f9191bac8550e39ce22", "Url": "https://api.github.com/repos/HighSpeedFinance/HighSpeedFinance", "Date": "2016-05-17T22:45:12Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_dest) == null) throw new java.lang.IllegalArgumentException(\"Destination key cannot be null.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8151/buggy-version/h2o-core.src.main.java.hex.CreateFrame.java", "BodyUseAPI": [], "Fixed commit": "b46d9a24268d6e6469fbc7091350845bb8633bb8", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-03-04T02:00:35Z"},
{"Line": "=>1082", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rogue) && (this.colluding)) { peersim.bittorrent.CollusionManager.getInstance().markObtained(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8720/buggy-version/src.peersim.bittorrent.BitTorrent.java", "BodyUseAPI": [], "Fixed commit": "c4fae3dcdb8af281d5199036017758509cebcfbf", "Url": "https://api.github.com/repos/joshhebert/cs4516-peersim-mod", "Date": "2015-12-10T20:09:18Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(studentList.isSelectionEmpty())) { DisplayMatchesGUI.StudentMatch sm = new DisplayMatchesGUI.StudentMatch(new DisplayMatchesGUI()); sm.createFrame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6213/buggy-version/RoommateFinder.src.DisplayMatchesGUI.java", "BodyUseAPI": [], "Fixed commit": "5584ad6df0449e86f045d013118e3b4167c04187", "Url": "https://api.github.com/repos/DoughKnight/RoommateFinder", "Date": "2016-05-10T00:21:43Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canceled) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7102/buggy-version/src.main.java.com.killeent.Concurrency.Timer.java", "BodyUseAPI": [], "Fixed commit": "20dc8c20834f2462d2099b3372246781b3b45a2d", "Url": "https://api.github.com/repos/killeent/javalib", "Date": "2015-01-31T18:49:48Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(redirectUrl.startsWith(\"bonita/portal\"))) { return removeTokenFromUrl(redirectUrl, new java.util.ArrayList<java.lang.String>(tokens)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1410/buggy-version/common.common-server.src.main.java.org.bonitasoft.console.common.server.login.servlet.URLProtector.java", "BodyUseAPI": ["org.bonitasoft.console.common.server.login.servlet.URLProtector.removeTokenFromUrl(java.lang.String,java.util.ArrayList<java.lang.String>)"], "Fixed commit": "4cf1513df84294a0e23d6f6ed8b9cfa566b05299", "Url": "https://api.github.com/repos/bonitasoft/bonita-web", "Date": "2014-02-20T09:46:49Z"},
{"Line": "=>2242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((last - first) < 0) { last = first + (key.substring(first).indexOf(' ')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6874/buggy-version/components.formats-gpl.src.loci.formats.in.NativeND2Reader.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.indexOf(char)"], "Fixed commit": "b1a18ee980467ee43db5e2972ba7ae33d308b0d2", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-03-24T03:01:18Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.equals(\"achieve\")) { return new jade.lang.acl.ACLMessage(jade.lang.acl.ACLMessage.REQUEST); }else if ((((((p.equals(\"untell\")) || (p.equals(\"unachieve\"))) || (p.equals(\"askAll\"))) || (p.equals(\"askHow\"))) || (p.equals(\"tellHow\"))) || (p.equals(\"untellHow\"))) { jade.lang.acl.ACLMessage m = new jade.lang.acl.ACLMessage(jade.lang.acl.ACLMessage.INFORM_REF); m.addUserDefinedParameter(\"kqml-performative\", p); return m; }else if (p.toLowerCase().equals(\"accept_proposal\")) { return new jade.lang.acl.ACLMessage(jade.lang.acl.ACLMessage.ACCEPT_PROPOSAL); }else if (p.toLowerCase().equals(\"reject_proposal\")) { return new jade.lang.acl.ACLMessage(jade.lang.acl.ACLMessage.REJECT_PROPOSAL); }else if (p.toLowerCase().equals(\"query_if\")) { return new jade.lang.acl.ACLMessage(jade.lang.acl.ACLMessage.QUERY_IF); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3444/buggy-version/src.main.java.jason.infra.jade.JadeAg.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.equals(java.lang.String)", "java.lang.String.toLowerCase()", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "jade.lang.acl.ACLMessage.addUserDefinedParameter(java.lang.String,java.lang.String)", "java.lang.String.toLowerCase()", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "04dbf1d243b0de57a3cb99c8e5236ffaaa1c6fc4", "Url": "https://api.github.com/repos/jason-lang/jason", "Date": "2016-10-02T18:55:25Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ab) == null) { ab = getResApplication().getAddressBook(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2075/buggy-version/app.src.main.java.com.futurice.android.reservator.LobbyActivity.java", "BodyUseAPI": [], "Fixed commit": "22eb5e438bd5e1d342c0e487553bda5794b9a792", "Url": "https://api.github.com/repos/futurice/meeting-room-tablet", "Date": "2017-11-17T12:37:07Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((proxy) == null) { proxy = this.getResApplication().getDataProxy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2075/buggy-version/app.src.main.java.com.futurice.android.reservator.LobbyActivity.java", "BodyUseAPI": [], "Fixed commit": "22eb5e438bd5e1d342c0e487553bda5794b9a792", "Url": "https://api.github.com/repos/futurice/meeting-room-tablet", "Date": "2017-11-17T12:37:07Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((proxy) != null) { proxy.refreshRoomReservations(r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2075/buggy-version/app.src.main.java.com.futurice.android.reservator.LobbyActivity.java", "BodyUseAPI": [], "Fixed commit": "22eb5e438bd5e1d342c0e487553bda5794b9a792", "Url": "https://api.github.com/repos/futurice/meeting-room-tablet", "Date": "2017-11-17T12:37:07Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ab) != null) { ab.addDataUpdatedListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2075/buggy-version/app.src.main.java.com.futurice.android.reservator.LobbyActivity.java", "BodyUseAPI": [], "Fixed commit": "22eb5e438bd5e1d342c0e487553bda5794b9a792", "Url": "https://api.github.com/repos/futurice/meeting-room-tablet", "Date": "2017-11-17T12:37:07Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.block.BlockPlaceEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (player.hasPermission(\"xeconomy.createsign\")) block.setMetadata(\"maker\", new org.bukkit.metadata.FixedMetadataValue(main, player.getName()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6217/buggy-version/src.nl.voidcorp.economy.spigot.listeners.SignListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.getName()", "org.bukkit.block.Block.setMetadata(java.lang.String,org.bukkit.metadata.FixedMetadataValue)"], "Fixed commit": "ba40947a2d11b9f2e0c4c0b73757d40f6e292f3b", "Url": "https://api.github.com/repos/voidcorp/xEconomy", "Date": "2017-01-15T19:53:12Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (productCategory.equals(\"boughtBySomeone\")) { productList = com.mantracker.cs304.storage.DataStorage.getProductsBoughtBySomeone(); }else { if (productCategory.equals(\"all\")) { productList = com.mantracker.cs304.storage.DataStorage.getPopularProduct(productCategory); }else { productList = com.mantracker.cs304.storage.DataStorage.getProductByType(productCategory); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3844/buggy-version/src.main.java.com.mantracker.cs304.servlets.Servlet.java", "BodyUseAPI": ["com.mantracker.cs304.storage.DataStorage.getProductByType(java.lang.String)", "java.lang.String.equals(java.lang.String)", "com.mantracker.cs304.storage.DataStorage.getPopularProduct(java.lang.String)"], "Fixed commit": "72411722aaeff868bd52736f4bf2478bd85b6e0a", "Url": "https://api.github.com/repos/Clubbable/CS304", "Date": "2016-04-03T00:07:21Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getDataString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (dataString != null) { results = new android.net.Uri[]{ android.net.Uri.parse(dataString) }; }else { if ((mCM) != null) { results = new android.net.Uri[]{ android.net.Uri.parse(mCM) }; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7196/buggy-version/src.android.AquroWebView.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)"], "Fixed commit": "0043aad0f728e67fc90cf20d63b77352b3ea9afd", "Url": "https://api.github.com/repos/jnordstrom1983/cordova-plugin-aquro-webview", "Date": "2017-05-05T14:42:35Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/344/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "e5d4017b726bc56c6cd33e337f23a7f1cb5ff721", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (field.isAnnotationPresent(by.istin.android.xcore.gson.dbEntities.class)) { if (jsonValue.isJsonArray()) { by.istin.android.xcore.gson.JsonArray jsonArray = jsonValue.getAsJsonArray(); proceedSubEntities(type, jsonDeserializationContext, contentValues, field, fieldValue, jsonArray); }else { by.istin.android.xcore.gson.dbEntities entity = field.getAnnotation(by.istin.android.xcore.gson.dbEntities.class); java.lang.Class<?> clazz = entity.clazz(); by.istin.android.xcore.gson.JsonObject subEntityJsonObject = jsonValue.getAsJsonObject(); proceedSubEntity(type, jsonDeserializationContext, contentValues, field, fieldValue, clazz, subEntityJsonObject); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4682/buggy-version/xcore.src.by.istin.android.xcore.gson.AbstractValuesAdapter.java", "BodyUseAPI": ["java.lang.reflect.Field.getAnnotation(java.lang.Class)", "by.istin.android.xcore.gson.AbstractValuesAdapter<T>.proceedSubEntity(java.lang.reflect.Type,by.istin.android.xcore.gson.JsonDeserializationContext,android.content.ContentValues,java.lang.reflect.Field,java.lang.String,java.lang.Class<?>,by.istin.android.xcore.gson.JsonObject)", "by.istin.android.xcore.gson.AbstractValuesAdapter<T>.proceedSubEntities(java.lang.reflect.Type,by.istin.android.xcore.gson.JsonDeserializationContext,android.content.ContentValues,java.lang.reflect.Field,java.lang.String,by.istin.android.xcore.gson.JsonArray)"], "Fixed commit": "85fe5830044c5c48801d9d58aaac415c3a5db7e3", "Url": "https://api.github.com/repos/IstiN/android_xcore", "Date": "2013-10-27T16:35:59Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["railo.runtime.op.Caster.toString(req.getAttribute(\"javax.servlet.include.path_info\"),<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (railo.commons.lang.StringUtil.isEmpty(pathInfo)) pathInfo = req.getPathInfo();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7869/buggy-version/railo-java.railo-core.src.railo.runtime.type.scope.CGIImpl.java", "BodyUseAPI": [], "Fixed commit": "f80df136b3ec2ff43f366fd09948c637c0d4110b", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-09-14T09:16:47Z"},
{"Line": "=>964", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["haven.MapView.player()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (pl != null) this.cc = new haven.Coord(pl.getc());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4283/buggy-version/src.haven.MapView.java", "BodyUseAPI": ["haven.Gob.getc()"], "Fixed commit": "a9d1c086190a4d26fe75d7408283b756ddde4195", "Url": "https://api.github.com/repos/k-t/hafen-client", "Date": "2015-09-16T23:34:18Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(url))) { preferences.savePhotoOnlineUrl(url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/238/buggy-version/src.ch.pboos.emera.MainActivity.java", "BodyUseAPI": ["ch.pboos.emera.lib.Preferences.savePhotoOnlineUrl(java.lang.String)"], "Fixed commit": "e30d4373ee707a7372ab3d18a1f3b90c1fbf93a4", "Url": "https://api.github.com/repos/pboos/Emera", "Date": "2011-06-25T05:59:16Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()", "loanAccount.getTimeline().getActualDisbursementDate()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dueDate.get(2)) < (currentDate.get(java.util.Calendar.DAY_OF_MONTH))) { dueDate.set(1, ((currentDate.get(java.util.Calendar.MONTH)) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/531/buggy-version/app.src.main.java.org.mifos.mobilebanking.ui.fragments.LoanAccountsDetailFragment.java", "BodyUseAPI": ["java.util.Calendar.get(int)", "java.util.List<java.lang.Integer>.set(int,int)"], "Fixed commit": "b1c5130d5e53ac6a87989dd6e47cf7a8cec8f298", "Url": "https://api.github.com/repos/fazerlicourice7/mifos-mobile", "Date": "2017-12-10T20:40:56Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Core.NetworkManager.GetGameStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (status == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/953/buggy-version/Connect4_Core.src.Core.Game.java", "BodyUseAPI": [], "Fixed commit": "cce3e9eb60d848815ab665c818e0b70554dadf3f", "Url": "https://api.github.com/repos/RM-HS-Team1-CFT55/rmhst1_connect4_core", "Date": "2016-09-30T15:25:55Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((www.weride.com.fragments.SearchFragment.class) == (fragmentManager.findFragmentById(R.id.flContent).getClass())) { fragmentManager.popBackStack(www.weride.com.MainActivity.BACK_STACK_ID, FragmentManager.POP_BACK_STACK_INCLUSIVE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5738/buggy-version/app.src.main.java.www.weride.com.MainActivity.java", "BodyUseAPI": ["android.support.v4.app.FragmentManager.popBackStack(java.lang.String,FragmentManager.POP_BACK_STACK_INCLUSIVE)"], "Fixed commit": "1c9e3b83737b870b285c4bc5233df6416c66551f", "Url": "https://api.github.com/repos/bryanherrera72/WeRide", "Date": "2017-04-06T18:49:44Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gooru.nucleus.search.indexers.app.processors.event.handlers.ResourceEventsHandler.getParentContentIdTargetObj(io.vertx.core.json.JsonObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (parentContentId != null) { resourceIndexHandler.indexDocument(parentContentId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5244/buggy-version/src.main.java.org.gooru.nucleus.search.indexers.app.processors.event.handlers.ResourceEventsHandler.java", "BodyUseAPI": ["org.gooru.nucleus.search.indexers.app.processors.index.handlers.IndexHandler.indexDocument(java.lang.String)"], "Fixed commit": "c7a1d5527d78ae4b5d6adcedb63e9dfc3d817583", "Url": "https://api.github.com/repos/RenukaGurumurthy/nucleus-search-indexer", "Date": "2016-05-12T11:36:31Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (task == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8517/buggy-version/src.me.winter.trapgame.shared.Scheduler.java", "BodyUseAPI": [], "Fixed commit": "128d498b25d523ada5b61f059d0737bc30cce59b", "Url": "https://api.github.com/repos/WinterAlexander/TrapGame", "Date": "2016-05-05T18:37:38Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(scrolling)) { switch (v.getId()) { case R.id.cancel : dismiss(); break; case R.id.save : final java.lang.String sum = rezultValue_kg.concat(rezultValue_g); if (sum.isEmpty()) { android.widget.Toast.makeText(getActivity(), \"Please, set weight!\", Toast.LENGTH_SHORT).show(); }else { engine.insertWeightRow(sum, (\" \" + (comment.getText().toString()))); dismiss(); } break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5914/buggy-version/src.com.example.newborn.actiondialog.WeightDialog.java", "BodyUseAPI": [], "Fixed commit": "fc2c8d4aab8a84a84e57b3113d94c235688cb082", "Url": "https://api.github.com/repos/RuSTer1241/Observer", "Date": "2014-09-19T08:13:23Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((com.nyagosu.chickengenes.item.ItemChickenSyringeGene) (itemstack.getItem())).getGeneData(net.minecraft.item.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (add_gene == null) add_gene = new com.nyagosu.chickengenes.entity.GeneData();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6474/buggy-version/java.com.nyagosu.chickengenes.entity.EntityGeneChicken.java", "BodyUseAPI": [], "Fixed commit": "fc32eb74ceb92132e2c601b688e4c111fb1509f6", "Url": "https://api.github.com/repos/nyagosu3/ChickenGenes", "Date": "2016-07-15T15:49:12Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.item.ItemStack.getTagCompound()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (nbt == null) gene_data_string = new com.nyagosu.chickengenes.entity.GeneData().getDataString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6474/buggy-version/java.com.nyagosu.chickengenes.recipes.ChickenGenesSyringeRecipe.java", "BodyUseAPI": [], "Fixed commit": "fc32eb74ceb92132e2c601b688e4c111fb1509f6", "Url": "https://api.github.com/repos/nyagosu3/ChickenGenes", "Date": "2016-07-15T15:49:12Z"},
{"Line": "=>1333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isScalar()) { assert put.isScalar() : \"Invalid dimension. Can only insert a scalar in to another scalar\"; put(0, put.getScalar(0)); return this; }else if (isVector()) { assert (put.isScalar()) || ((put.isVector()) && ((put.length()) == (length()))) : \"Invalid dimension on insertion. Can only insert scalars input vectors\"; if (put.isScalar()) putScalar(slice, put.getComplex(0)); else for (int i = 0; i < (length()); i++) putScalar(i, put.getComplex(i)); return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2922/buggy-version/nd4j-api.src.main.java.org.nd4j.linalg.api.complex.BaseComplexNDArray.java", "BodyUseAPI": [], "Fixed commit": "b8203e26d2ed0f2d66d1fc401fd3048e350d2e1f", "Url": "https://api.github.com/repos/deeplearning4j/nd4j", "Date": "2015-08-11T19:59:25Z"},
{"Line": "=>1353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((put.length()) == 1) putScalar(slice, put.getComplex(0)); else if (put.isVector()) for (int i = 0; i < (put.length()); i++) view.putScalar(i, put.getComplex(i)); else { assert org.nd4j.linalg.util.Shape.shapeEquals(view.shape(), put.shape()); org.nd4j.linalg.api.complex.IComplexNDArray linear = ((org.nd4j.linalg.api.complex.IComplexNDArray) (view.linearView())); org.nd4j.linalg.api.complex.IComplexNDArray putLinearView = put.linearView(); for (int i = 0; i < (linear.length()); i++) { linear.putScalar(i, putLinearView.getComplex(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2922/buggy-version/nd4j-api.src.main.java.org.nd4j.linalg.api.complex.BaseComplexNDArray.java", "BodyUseAPI": ["org.nd4j.linalg.api.complex.IComplexNDArray.linearView()", "org.nd4j.linalg.api.complex.IComplexNDArray.getComplex(int)", "org.nd4j.linalg.api.complex.IComplexNDArray.getComplex(int)", "org.nd4j.linalg.api.complex.BaseComplexNDArray.putScalar(int,put.getComplex(0))", "org.nd4j.linalg.api.complex.IComplexNDArray.isVector()", "org.nd4j.linalg.api.complex.IComplexNDArray.shape()", "org.nd4j.linalg.api.complex.IComplexNDArray.length()", "org.nd4j.linalg.util.Shape.shapeEquals(view.shape(),put.shape())", "org.nd4j.linalg.api.complex.IComplexNDArray.putScalar(int,put.getComplex(i))"], "Fixed commit": "b8203e26d2ed0f2d66d1fc401fd3048e350d2e1f", "Url": "https://api.github.com/repos/deeplearning4j/nd4j", "Date": "2015-08-11T19:59:25Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"reboot\".equals(command)) { c = new java.lang.String[]{ \"/usr/bin/sudo\", \"/sbin/reboot\" }; }else if (\"shutdown\".equals(command)) { c = new java.lang.String[]{ \"/usr/bin/sudo\", \"/sbin/shutdown\", \"now\" }; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/766/buggy-version/src.net.ant.rc.rpi.Shell.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "c4a049c9372aeedb5f8fcc274a3913688bfa2424", "Url": "https://api.github.com/repos/ant2012/WebRC", "Date": "2013-10-19T01:10:03Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 16) { notification.bigContentView = com.xmh.deskcontrol.biz.NotificationController.view; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/932/buggy-version/DeskListener.src.main.java.com.xmh.deskcontrol.biz.NotificationController.java", "BodyUseAPI": [], "Fixed commit": "7ea11dcb2de3c44747d36d162126cae1b43e4f7a", "Url": "https://api.github.com/repos/xmh19936688/DeskListenerProject", "Date": "2016-04-28T12:19:15Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 16) { notification.bigContentView = com.xmh.deskcontrol.biz.NotificationController.view; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/932/buggy-version/DeskListener.src.main.java.com.xmh.deskcontrol.biz.NotificationController.java", "BodyUseAPI": [], "Fixed commit": "7ea11dcb2de3c44747d36d162126cae1b43e4f7a", "Url": "https://api.github.com/repos/xmh19936688/DeskListenerProject", "Date": "2016-04-28T12:19:15Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((newEquationParts.size()) != 0) && ((newEquationParts.get(((newEquationParts.size()) - 1))) == (Operators.PARENTHESES_CLOSE))) { newEquationParts.remove(((newEquationParts.size()) - 1)); placeValue--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2046/buggy-version/src.calculator.equation.Equation.java", "BodyUseAPI": ["java.util.List<calculator.equation.IEquationPart>.size()", "java.util.List<calculator.equation.IEquationPart>.remove(((newEquationParts.size()) - 1))"], "Fixed commit": "cfa6ccb8897dfc082027b17f06843cbaf5cfcb9f", "Url": "https://api.github.com/repos/Tommsy64/ConsoleCalculator", "Date": "2014-01-15T03:05:10Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Files.exists(java.nio.file.Path)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (exists) { timestamp = java.nio.file.Files.getLastModifiedTime(resourcePath).toMillis(); }else { timestamp = java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1560/buggy-version/org.eclipse.flux.watcher.src.main.java.org.eclipse.flux.watcher.fs.JDKProjectWatchService.java", "BodyUseAPI": [], "Fixed commit": "cf2487152e68de13e831696560750888e28e0856", "Url": "https://api.github.com/repos/fjodorver/flux", "Date": "2016-08-16T21:01:07Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.emf.ecore.util.EcoreUtil.getExistingAdapter(org.yakindu.base.types.TypeParameter,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (existingBinding != null) { existingBinding.setActualType(actualType); }else { param.eAdapters().add(new org.yakindu.base.types.TypeParameterBinding(actualType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6346/buggy-version/plugins.org.yakindu.base.expressions.src.org.yakindu.base.expressions.inferrer.ExpressionsTypeInferrer.java", "BodyUseAPI": ["org.yakindu.base.types.TypeParameterBinding.setActualType(org.yakindu.base.types.Type)"], "Fixed commit": "78cae683ad789deb43cf1340b144d304747dcb92", "Url": "https://api.github.com/repos/Yakindu/statecharts", "Date": "2016-06-13T14:48:16Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id != 4767) messageDigest = java.security.MessageDigest.getInstance(\"SHA-256\"); else messageDigest = java.security.MessageDigest.getInstance(\"SHA-512\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2871/buggy-version/simulator.de.upb.mf.simulator.deBruijn.DeBruijnHashing.java", "BodyUseAPI": [], "Fixed commit": "b2b2803e997c8d0a75d368d024a050b12a999ee7", "Url": "https://api.github.com/repos/Krakomat/Simulator", "Date": "2015-08-20T11:43:37Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Float.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (finalHash == 0) { try { messageDigest = java.security.MessageDigest.getInstance(\"SHA-512\"); } catch (java.security.NoSuchAlgorithmException e) { e.printStackTrace(); } messageDigest.update(stringToEncrypt.getBytes()); encryptedString = new java.lang.String(messageDigest.digest()); hash = ((encryptedString.hashCode()) < 0) ? (encryptedString.hashCode()) * (-1) : encryptedString.hashCode(); s = java.lang.String.valueOf((((float) (hash)) / (java.lang.Integer.MAX_VALUE))); s = s + hash; finalHash = java.lang.Float.valueOf(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2871/buggy-version/simulator.de.upb.mf.simulator.deBruijn.DeBruijnHashing.java", "BodyUseAPI": [], "Fixed commit": "b2b2803e997c8d0a75d368d024a050b12a999ee7", "Url": "https://api.github.com/repos/Krakomat/Simulator", "Date": "2015-08-20T11:43:37Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.jettison.json.JSONArray.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isNumeric(year)) result.setPubYear(new java.math.BigDecimal(year));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2345/buggy-version/src.main.java.org.earthChem.dal.rest.ReferenceDaoRestImpl.java", "BodyUseAPI": ["org.earthChem.domain.Reference.setPubYear(java.math.BigDecimal)"], "Fixed commit": "586cc4ec586f72e95bfd8d141cd25ea1148bfebc", "Url": "https://api.github.com/repos/earthchem/reference.earthchem.ieda", "Date": "2014-10-08T19:24:18Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.jettison.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isNumeric(year)) result.setPubYear(new java.math.BigDecimal(year));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2345/buggy-version/src.main.java.org.earthChem.dal.rest.ReferenceDaoRestImpl.java", "BodyUseAPI": ["org.earthChem.domain.Reference.setPubYear(java.math.BigDecimal)"], "Fixed commit": "586cc4ec586f72e95bfd8d141cd25ea1148bfebc", "Url": "https://api.github.com/repos/earthchem/reference.earthchem.ieda", "Date": "2014-10-08T19:24:18Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isNumeric(endPage)) result.setLastPage(new java.math.BigDecimal(endPage));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2345/buggy-version/src.main.java.org.earthChem.dal.rest.ReferenceDaoRestImpl.java", "BodyUseAPI": ["org.earthChem.domain.Reference.setLastPage(java.math.BigDecimal)"], "Fixed commit": "586cc4ec586f72e95bfd8d141cd25ea1148bfebc", "Url": "https://api.github.com/repos/earthchem/reference.earthchem.ieda", "Date": "2014-10-08T19:24:18Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isNumeric(startPage)) result.setFirstPage(new java.math.BigDecimal(startPage));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2345/buggy-version/src.main.java.org.earthChem.dal.rest.ReferenceDaoRestImpl.java", "BodyUseAPI": ["org.earthChem.domain.Reference.setFirstPage(java.math.BigDecimal)"], "Fixed commit": "586cc4ec586f72e95bfd8d141cd25ea1148bfebc", "Url": "https://api.github.com/repos/earthchem/reference.earthchem.ieda", "Date": "2014-10-08T19:24:18Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (card != null) { card.open(); item = duel.getCardSelector().remove(card); duel.setCardSelector(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/352/buggy-version/src.android.ygo.op.Drag.java", "BodyUseAPI": [], "Fixed commit": "b5090f1dccdcab8829f13f4dea91ae05fb5843e7", "Url": "https://api.github.com/repos/msk86/YGORoid", "Date": "2013-02-13T05:50:56Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mCursor.moveToPosition(position))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2027/buggy-version/app.src.main.java.com.keelanbyrne.keelan542.coffeelog.CoffeeRecyclerAdapter.java", "BodyUseAPI": [], "Fixed commit": "efea7d584d69767b04d842e58279d4786993a812", "Url": "https://api.github.com/repos/keelan542/CoffeeLog", "Date": "2017-08-16T17:34:07Z"},
{"Line": "=>693", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(megamek.client.ui.swing.DeploymentDisplay,java.lang.String,java.lang.String,int,<nulltype>,java.lang.Object[],<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (input != null) { if (input.equals(megamek.client.ui.Messages.getString(\"DeploymentDisplay.topbridge\"))) { ce().setElevation(height); }else { if ((ce().isNaval()) && ((ce().getMovementMode()) != (megamek.common.EntityMovementMode.SUBMARINE))) { ce().setElevation(0); }else { ce().setElevation(((deployhex.floor()) - (deployhex.surface()))); } } return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5815/buggy-version/megamek.src.megamek.client.ui.swing.DeploymentDisplay.java", "BodyUseAPI": ["java.lang.String.equals(megamek.client.ui.Messages.getString(\"DeploymentDisplay.topbridge\"))"], "Fixed commit": "9d37fa3bd79f9d3880955b0fda38be309179ce8a", "Url": "https://api.github.com/repos/NickAragua/megamek", "Date": "2017-12-11T04:51:23Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(targetItem.isAutoFilled())) { for (java.util.Iterator<com.wurmonline.server.items.Item> it = targetItem.getItems().iterator(); it.hasNext();) { contained = it.next(); if (((!(contained.isFood())) && (!(contained.isLiquid()))) || ((contained.isLiquid()) && ((contained.getTemplateId()) != 128))) { return result; } if (contained.isLiquid()) { contained.setQualityLevel(java.lang.Math.max(1, ((contained.getQualityLevel()) - (Server.rand.nextInt(10))))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7628/buggy-version/main.java.org.talor.wurmunlimited.mods.survival.Survival.java", "BodyUseAPI": ["targetItem.getItems().iterator()", "com.wurmonline.server.items.Item.getItems()"], "Fixed commit": "9c0d2ee77e5ee1356b9762913b1b3d9acf3c0102", "Url": "https://api.github.com/repos/modsandstuff/survival", "Date": "2017-02-08T20:13:31Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) != null) exp += size.getXP();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7339/buggy-version/Server.src.main.java.data_structures.treasure.Treasure.java", "BodyUseAPI": [], "Fixed commit": "f55f9b2ffd263a22c896f382c2baf574a8b23bc3", "Url": "https://api.github.com/repos/co0k/TreasureHunt", "Date": "2015-06-01T14:13:41Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((content) != null) exp += content.getXP();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7339/buggy-version/Server.src.main.java.data_structures.treasure.Treasure.java", "BodyUseAPI": [], "Fixed commit": "f55f9b2ffd263a22c896f382c2baf574a8b23bc3", "Url": "https://api.github.com/repos/co0k/TreasureHunt", "Date": "2015-06-01T14:13:41Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) != null) { exp += type.getXP(); if (((((type) instanceof data_structures.treasure.Quiz) && ((location) != null)) && ((((data_structures.treasure.Quiz) (type)).getLocationId()) != null)) && ((((data_structures.treasure.Quiz) (type)).getLocationId()) != (location.getId()))) exp *= 1.5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7339/buggy-version/Server.src.main.java.data_structures.treasure.Treasure.java", "BodyUseAPI": [], "Fixed commit": "f55f9b2ffd263a22c896f382c2baf574a8b23bc3", "Url": "https://api.github.com/repos/co0k/TreasureHunt", "Date": "2015-06-01T14:13:41Z"},
{"Line": "=>774", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (initialized) { initializeMaterial(listBox.getElement()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7254/buggy-version/gwt-material.src.main.java.gwt.material.design.client.ui.MaterialListValueBox.java", "BodyUseAPI": [], "Fixed commit": "34f163c95ea080f4e79339d25c18dfa71ea1d9e0", "Url": "https://api.github.com/repos/GwtMaterialDesign/gwt-material", "Date": "2016-08-03T09:51:58Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((world.getChunkAtTile(((int) (this.location.x)), ((int) (this.location.z)), false)) == null) { this.getClass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4015/buggy-version/src.client.net.specialattack.settling.client.util.camera.OverviewCamera.java", "BodyUseAPI": [], "Fixed commit": "545e8691a1e213cff32ff31a0b24d565b1bec512", "Url": "https://api.github.com/repos/mbl111/SettlingGame", "Date": "2013-04-19T18:04:11Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (imageURL != null) { if (!(imageURL.contains(\"http\"))) { try { android.graphics.Bitmap imageBitmap = com.example.guest.iamhere.viewHolders.FirebaseClaimViewHolder.decodeFromFirebaseBase64(imageURL); imageView.setImageBitmap(imageBitmap); } catch (java.io.IOException e) { e.printStackTrace(); } }else { com.squareup.picasso.Picasso.with(context).load(imageURL).resize(125, 125).centerCrop().into(imageView); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/842/buggy-version/app.src.main.java.com.example.guest.iamhere.viewHolders.FirebaseClaimViewHolder.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(context).load(java.lang.String)", "com.squareup.picasso.Picasso.with(context).load(imageURL).resize(125, 125).centerCrop()", "com.squareup.picasso.Picasso.with(context).load(imageURL).resize(125, 125).centerCrop().into(android.widget.ImageView)", "com.example.guest.iamhere.viewHolders.FirebaseClaimViewHolder.decodeFromFirebaseBase64(java.lang.String)", "com.squareup.picasso.Picasso.with(context).load(imageURL).resize(int,int)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "d6058cbce4d974008c8b7eb982a644bbc04ed111", "Url": "https://api.github.com/repos/Atticus29/swarmReporter", "Date": "2017-06-28T19:39:18Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((swarmReport.getImageString()) == null) { swarmReport.setImageString(\"https://coxshoney.com/wp-content/uploads/bee_swarm_man.jpg\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/842/buggy-version/app.src.main.java.com.example.guest.iamhere.viewHolders.FirebaseClaimViewHolder.java", "BodyUseAPI": ["com.example.guest.iamhere.models.SwarmReport.setImageString(java.lang.String)"], "Fixed commit": "d6058cbce4d974008c8b7eb982a644bbc04ed111", "Url": "https://api.github.com/repos/Atticus29/swarmReporter", "Date": "2017-06-28T19:39:18Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["au.gov.ga.earthsci.core.model.catalog.CatalogFactory.loadCatalog(java.net.URI)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (node == null) { node = new au.gov.ga.earthsci.core.model.catalog.ErrorCatalogTreeNode(new java.lang.Exception((\"Error loading catalog from URI: \" + (dto.catalogs[i].nodeURI)))); }else { node.setLabel(dto.catalogs[i].label); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/971/buggy-version/plugins.au.gov.ga.earthsci.core.src.au.gov.ga.earthsci.core.model.catalog.CatalogPersister.java", "BodyUseAPI": ["au.gov.ga.earthsci.core.model.catalog.ICatalogTreeNode.setLabel(java.lang.String)"], "Fixed commit": "504656eca304969a6247d7c396d216d22325d2d7", "Url": "https://api.github.com/repos/ga-m3dv/ga-earthsci-rcp", "Date": "2013-03-21T02:48:31Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstWord.equals(oop.ex6.main.Parser.START_COMMENT)) { return; }else if (endRow.find()) { row = row.substring(0, endRow.start()); }else { throw new oop.ex6.main.IllegalException(oop.ex6.main.Parser.BAD_FORMAT_ERROR, lineNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2193/buggy-version/src.oop.ex6.main.Parser.java", "BodyUseAPI": [], "Fixed commit": "fea24ddd6abb4a551781d43e43a39e89eeb84938", "Url": "https://api.github.com/repos/david-wies/ex6", "Date": "2016-06-13T16:02:48Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (phoneNumber.equals(\"\")) { customer = new library.Customer(name, address, psn); }else { customer = new library.Customer(name, address, psn, phoneNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2058/buggy-version/src.library.Library.java", "BodyUseAPI": [], "Fixed commit": "c042301a7bb70cb4e57a6f19bc08898a19ff7f88", "Url": "https://api.github.com/repos/LFredin/LibrarySystem2", "Date": "2017-11-30T21:57:39Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.next.webserver.http.HttpRequest.getRequestURI()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (filePath.equals(\"/\")) filePath = \"/index.html\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1237/buggy-version/WebServer.src.com.next.webserver.ServerThread.java", "BodyUseAPI": [], "Fixed commit": "fa9912571944a4ccc29296d31c0da14fc8c30a1f", "Url": "https://api.github.com/repos/jinius/SocketWebServer", "Date": "2014-01-05T11:06:33Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isEndOfInput()) { if (((numSkipped) == (skipInterval)) && ((res.returnStatus) == (org.apache.pig.backend.hadoop.executionengine.physicalLayer.POStatus.STATUS_OK))) { return createNumRowTuple(((org.apache.pig.data.Tuple) (res.result))); }else if ((newSample) != null) { return createNumRowTuple(((org.apache.pig.data.Tuple) (newSample.result))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/600/buggy-version/src.org.apache.pig.backend.hadoop.executionengine.spark.operator.POPoissonSampleSpark.java", "BodyUseAPI": [], "Fixed commit": "7a6c25bd1a9260968f161adb2a1c6d1bdea4faba", "Url": "https://api.github.com/repos/kePATHnda/pig", "Date": "2017-03-14T14:38:16Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.toString().endsWith(\"module-info.java\")) { continue; }else if (file.toString().endsWith(\".java\")) { kind = javax.tools.JavaFileObject.Kind.SOURCE; }else if (file.toString().endsWith(\".class\")) { kind = javax.tools.JavaFileObject.Kind.CLASS; }else { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2566/buggy-version/plugins.wildfly.src.main.java.org.fakereplace.integration.wildfly.autoupdate.ClassLoaderCompiler.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.nio.file.Path.toString()", "java.nio.file.Path.toString()"], "Fixed commit": "cf479b54ce3082564c51eaefd9bb7870e45789e4", "Url": "https://api.github.com/repos/fakereplace/fakereplace", "Date": "2017-07-13T01:59:40Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((jzMediaInterface) == null) jzMediaInterface = new cn.jzvd.JZMediaSystem();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1927/buggy-version/jiaozivideoplayer.src.main.java.cn.jzvd.JZMediaManager.java", "BodyUseAPI": [], "Fixed commit": "318c39b9cb3570d55b137c2917d49b84afbb30fb", "Url": "https://api.github.com/repos/sproypef/JiaoZiVideoPlayer", "Date": "2017-12-03T05:48:56Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j == 0) { java.util.Vector vect1 = this.lockTable.elements(dataObj); boolean wakeup = false; if ((vect.size()) == 0) { wakeup = true; }else { LockManager.TrxnObj obj = ((LockManager.TrxnObj) (vect.firstElement())); if ((obj.getXId()) == xid) { wakeup = true; } } if (wakeup) { this.waitTable.remove(waitObj); try { synchronized(waitObj.getThread()) { waitObj.getThread().notify(); } } catch (java.lang.Exception e) { java.lang.System.out.println((\"Exception on unlock\\n\" + (e.getMessage()))); } }else { break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8212/buggy-version/src.LockManager.LockManager.java", "BodyUseAPI": [], "Fixed commit": "7ffc5826f5296b73d7a1d7f36e07f9bcf1734914", "Url": "https://api.github.com/repos/aallai/the_reservator", "Date": "2011-11-28T16:19:38Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(o instanceof model.WaterQualityReport)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8152/buggy-version/src.model.WaterQualityReport.java", "BodyUseAPI": [], "Fixed commit": "c2d0a122b17b9bd82a4e7801d53f57ee5b64be94", "Url": "https://api.github.com/repos/SangChanKim/thepricklypears", "Date": "2016-11-16T17:40:26Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (condition == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1270/buggy-version/src.main.java.tigase.xmpp.Authorization.java", "BodyUseAPI": [], "Fixed commit": "4c440da462c3fc7eecdccd05037e128216513f02", "Url": "https://api.github.com/repos/kontalk/tigase-server", "Date": "2016-02-02T10:42:36Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gradeEntry.getAttempt()) != null) { parseExpression = patternAttempt.matcher(parseExpression).replaceAll(gradeEntry.getAttempt()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2147/buggy-version/app.src.main.java.de.mygrades.main.processor.GradesProcessor.java", "BodyUseAPI": ["java.util.regex.Matcher.replaceAll(gradeEntry.getAttempt())", "de.mygrades.database.dao.GradeEntry.getAttempt()"], "Fixed commit": "a72b1836aeeff6f091c2a8d37dbc4dfad7398502", "Url": "https://api.github.com/repos/MyGrades/mygrades-app", "Date": "2016-01-09T15:41:55Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gradeEntry.getExamId()) != null) { parseExpression = patternExamId.matcher(parseExpression).replaceAll(gradeEntry.getExamId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2147/buggy-version/app.src.main.java.de.mygrades.main.processor.GradesProcessor.java", "BodyUseAPI": ["java.util.regex.Matcher.replaceAll(gradeEntry.getExamId())", "de.mygrades.database.dao.GradeEntry.getExamId()"], "Fixed commit": "a72b1836aeeff6f091c2a8d37dbc4dfad7398502", "Url": "https://api.github.com/repos/MyGrades/mygrades-app", "Date": "2016-01-09T15:41:55Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gradeEntry.getName()) != null) { parseExpression = patternName.matcher(parseExpression).replaceAll(gradeEntry.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2147/buggy-version/app.src.main.java.de.mygrades.main.processor.GradesProcessor.java", "BodyUseAPI": ["de.mygrades.database.dao.GradeEntry.getName()", "java.util.regex.Matcher.replaceAll(gradeEntry.getName())"], "Fixed commit": "a72b1836aeeff6f091c2a8d37dbc4dfad7398502", "Url": "https://api.github.com/repos/MyGrades/mygrades-app", "Date": "2016-01-09T15:41:55Z"},
{"Line": "=>1711", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.currentTimeMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((now - (lastMapDataUpdate)) > maxUpdateFrequency) { java.lang.System.out.println(\"clearing map\"); mMap.clear(); lastMapDataUpdate = now; }else { java.lang.System.out.println((\"adding data, not clearing map \" + (now - (lastMapDataUpdate)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/9181/buggy-version/src.ca.cumulonimbus.barometernetwork.BarometerNetworkActivity.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "098321c041a2118d2426a44661abd2645d399524", "Url": "https://api.github.com/repos/JacobSheehy/pressureNET", "Date": "2013-06-21T10:45:54Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(f.getPath().startsWith(this.mountedVolume))) throw new fuse.FuseException(\"volume offline\").initErrno(Errno.ENOENT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6446/buggy-version/src.org.opendedup.sdfs.mgmt.Io.java", "BodyUseAPI": [], "Fixed commit": "16d1c8bb28ee400057305272256916aba2aac291", "Url": "https://api.github.com/repos/opendedup/sdfs", "Date": "2017-07-30T22:22:20Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(f.getPath().startsWith(this.mountedVolume))) { f = null; throw new fuse.FuseException(\"file exists\").initErrno(Errno.ENOENT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6446/buggy-version/src.fuse.SDFS.SDFSFileSystem.java", "BodyUseAPI": [], "Fixed commit": "16d1c8bb28ee400057305272256916aba2aac291", "Url": "https://api.github.com/repos/opendedup/sdfs", "Date": "2017-07-30T22:22:20Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v.getId()) == (R.id.nodeIndexFooter)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1577/buggy-version/src.com.atami.mgodroid.views.NodeIndexListFragment.java", "BodyUseAPI": [], "Fixed commit": "3b1a6322a25d32da1828c9d4a0cff52771b36513", "Url": "https://api.github.com/repos/SeanPONeil/MGoBlog", "Date": "2012-08-16T19:02:56Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result != null) { for (java.lang.String name : result) { if ((name != null) && (name.equals(mEvent.getmEventName()))) { following = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5660/buggy-version/app.src.main.java.team5_project.cs442.eventorganizer.activities.UpdateActivity.java", "BodyUseAPI": [], "Fixed commit": "443a1a31083a6cd74113cc6c90001ec2f72f810a", "Url": "https://api.github.com/repos/SangwonMoon/cs442_team5", "Date": "2015-11-16T06:11:50Z"},
{"Line": "=>1657", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rb.getBlock().getGenusName().equals(\"function\")) { java.lang.System.out.println(rb.getBlock().getBlockLabel()); newBlock = new edu.mit.blocks.codeblocks.Block(workspace, rb.getGenus(), rb.getBlock().getInitialLabel()); }else { newBlock = new edu.mit.blocks.codeblocks.Block(workspace, rb.getGenus(), rb.blockLabel.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7228/buggy-version/openblocks-master.src.main.java.edu.mit.blocks.renderable.RenderableBlock.java", "BodyUseAPI": ["edu.mit.blocks.renderable.RenderableBlock.getBlock()", "edu.mit.blocks.codeblocks.Block.getBlockLabel()", "edu.mit.blocks.renderable.RenderableBlock.getGenus()", "edu.mit.blocks.renderable.RenderableBlock.getGenus()", "edu.mit.blocks.codeblocks.Block.getInitialLabel()", "edu.mit.blocks.renderable.RenderableBlock.getBlock()", "edu.mit.blocks.renderable.NameLabel.getText()", "java.io.PrintStream.println(rb.getBlock().getBlockLabel())"], "Fixed commit": "b11de98a33551c18d4d4c018223aff1f1d0b4ff8", "Url": "https://api.github.com/repos/rk-lakshmanan/fiveBlocks", "Date": "2015-07-14T20:44:24Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasIntegerDigits) { if ((integerPrecision) == 1) { if ((bytes[integerStart]) == '0') { (parsedPrecision)--; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3494/buggy-version/storage-api.src.java.org.apache.hadoop.hive.decimal.ScaledParse.java", "BodyUseAPI": [], "Fixed commit": "b46e1c561aab237e065f66806b564953bb9f91cb", "Url": "https://api.github.com/repos/pudidic/hive", "Date": "2016-11-12T07:44:14Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.openConnection()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (connection instanceof java.net.HttpURLConnection) { final java.net.HttpURLConnection httpConnection = ((java.net.HttpURLConnection) (connection)); final int httpCode = httpConnection.getResponseCode(); if ((httpCode / 100) != 2) { throw new java.io.IOException((((\"HTTP error : \" + httpCode) + \" \") + (httpConnection.getResponseMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6526/buggy-version/src.main.java.fr.moribus.imageonmap.image.ImageRendererExecutor.java", "BodyUseAPI": [], "Fixed commit": "b5d41b25d047d0b6592462c2c10bb0a82375331c", "Url": "https://api.github.com/repos/zDevelopers/ImageOnMap", "Date": "2016-04-02T19:45:03Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.charAt(0)) == ')') { bracesCount--; postFixExpression.add((\"\" + (operatorStack.pop()))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4094/buggy-version/src.csci.hw2.Calculator.java", "BodyUseAPI": [], "Fixed commit": "4e0283c8ce98b90f0112947d5946d56fa68d179c", "Url": "https://api.github.com/repos/vishalbedi/CSCI-605", "Date": "2015-09-07T17:19:33Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.charAt(0)) == '(') { bracesCount++; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4094/buggy-version/src.csci.hw2.Calculator.java", "BodyUseAPI": [], "Fixed commit": "4e0283c8ce98b90f0112947d5946d56fa68d179c", "Url": "https://api.github.com/repos/vishalbedi/CSCI-605", "Date": "2015-09-07T17:19:33Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > existingDataLen) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4282/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "65ca24caf1a549868f072a117135a9155611534b", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-07T15:16:37Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((JSONAPI.instance.getServer().getPluginManager().getPlugin(\"Vault\")) != null) { com.alecgorge.minecraft.jsonapi.stringifier.BukkitStringifier.handle.put(\"EconomyResponse\", net.milkbowl.vault.economy.EconomyResponse.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4838/buggy-version/src.com.alecgorge.minecraft.jsonapi.stringifier.BukkitStringifier.java", "BodyUseAPI": [], "Fixed commit": "bbb62311334032e96125658fb1022feb62bbe2a1", "Url": "https://api.github.com/repos/alecgorge/jsonapi", "Date": "2012-04-05T20:12:21Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (renderNode != null) { if (renderNode.isWaste()) { renderNode.setWaste(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2968/buggy-version/android.sdk.src.main.java.com.taobao.weex.ui.component.binding.Statements.java", "BodyUseAPI": ["com.taobao.weex.ui.component.WXComponent.isWaste()", "com.taobao.weex.ui.component.WXComponent.setWaste(boolean)"], "Fixed commit": "09935a0a8b16b161e7828edc77532a7ff59b18fe", "Url": "https://api.github.com/repos/apache/incubator-weex", "Date": "2017-09-25T15:47:09Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.detail) == (org.eclipse.swt.SWT.TRAVERSE_RETURN)) { try { room.speak(text.getText()); } catch (java.io.IOException e1) { e1.printStackTrace(); } text.setText(\"\"); updateMessages(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8654/buggy-version/src.com.willluongo.asbestos.gui.AsbestosWindow.java", "BodyUseAPI": [], "Fixed commit": "e1fe72af858b4c1083fd3f8d8d44e9b260a00d01", "Url": "https://api.github.com/repos/willluongo/asbestos", "Date": "2013-10-04T23:03:29Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dragging) { dragging = false; executeAndRemember(new com.mygdx.game.textarea.SelectCommand(model, touchDownLocation, caretLocation)); }else { executeAndRemember(new com.mygdx.game.textarea.MoveToCommand(model, caretLocation)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8707/buggy-version/core.src.com.mygdx.game.textarea.TextAreaController.java", "BodyUseAPI": [], "Fixed commit": "f2e156c090cc8564e9b76f3039ebe50dcc339997", "Url": "https://api.github.com/repos/SpencerArtisan/glide", "Date": "2015-02-17T17:27:44Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pos1 == (-1)) pos1 = java.lang.Integer.MAX_VALUE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1271/buggy-version/src.main.java.SVGParser.java", "BodyUseAPI": [], "Fixed commit": "4c8a917332965e7e825b147fcb90ec54aa716ed7", "Url": "https://api.github.com/repos/fablab-neckar-alb/camm-gl3", "Date": "2015-11-13T03:07:50Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pos3 == (-1)) pos3 = java.lang.Integer.MAX_VALUE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1271/buggy-version/src.main.java.SVGParser.java", "BodyUseAPI": [], "Fixed commit": "4c8a917332965e7e825b147fcb90ec54aa716ed7", "Url": "https://api.github.com/repos/fablab-neckar-alb/camm-gl3", "Date": "2015-11-13T03:07:50Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pos2 == (-1)) pos2 = java.lang.Integer.MAX_VALUE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1271/buggy-version/src.main.java.SVGParser.java", "BodyUseAPI": [], "Fixed commit": "4c8a917332965e7e825b147fcb90ec54aa716ed7", "Url": "https://api.github.com/repos/fablab-neckar-alb/camm-gl3", "Date": "2015-11-13T03:07:50Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == 0) { probaA = 0.0; }else { probaA = count / (java.lang.Math.pow(data.getDomainSize(), atom.getPredicate().getArity())); for (fr.lirmm.graphik.graal.api.core.Term t : atom.getTerms(Term.Type.CONSTANT)) { probaA /= data.getDomainSize(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5704/buggy-version/graal-homomorphism.src.main.java.fr.lirmm.graphik.homorphism.utils.ProbaUtils.java", "BodyUseAPI": [], "Fixed commit": "190d18967575328870db690feb0985e7832a692e", "Url": "https://api.github.com/repos/graphik-team/graal", "Date": "2016-12-13T13:56:45Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jsonPort.get(\"vlans\").toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((vlanRange.length()) > 2) { vlanRange = vlanRange.substring(1, ((vlanRange.length()) - 1)); }else { vlanRange = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4190/buggy-version/AggregateWS.src.net.geni.aggregate.services.core.AggregateSdxCorsaClient.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "385b41057c079dbb9bc645081f87d48a5b9a3fbc", "Url": "https://api.github.com/repos/xi-yang/GENI-DCN-AM", "Date": "2017-09-01T15:07:36Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((customRule.getStatus()) != (templateRule.getStatus())) { customRule.setStatus(templateRule.getStatus()); changed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6168/buggy-version/sonar-server.src.main.java.org.sonar.server.rule.RegisterRules.java", "BodyUseAPI": ["org.sonar.core.rule.RuleDto.setStatus(templateRule.getStatus())", "org.sonar.core.rule.RuleDto.getStatus()"], "Fixed commit": "b1c27d7b983062e4236d43371bc14596819bc050", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-06-23T16:03:02Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3377/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.aggregator.Min.java", "BodyUseAPI": [], "Fixed commit": "ad19ba2db00ae7656ed43c2f712a639b6a50fed0", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2016-04-01T14:57:08Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["appeng.block.storage.BlockChest.getTileEntity(net.minecraft.world.World,int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (GuiBridge.GUI_CHEST.hasPermissions(tg, x, y, z, net.minecraftforge.common.util.ForgeDirection.values()[side], p)) { tg.openGui(p, ch, cell, side); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5671/buggy-version/src.main.java.appeng.block.storage.BlockChest.java", "BodyUseAPI": ["appeng.tile.storage.TileChest.openGui(net.minecraft.entity.player.EntityPlayer,appeng.api.storage.ICellHandler,net.minecraft.item.ItemStack,int)"], "Fixed commit": "36d6e87b92e64238f48a1cfa9f0770676255898f", "Url": "https://api.github.com/repos/thepaperpilot/Applied-Energistics-2", "Date": "2014-09-25T22:25:31Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.jforex.programming.order.OrderUpdateEventEvaluator.isSubmitOK(orderUpdateEventData)) return OrderUpdateEvent.SUBMIT_OK;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2790/buggy-version/Utils.src.main.java.com.jforex.programming.order.OrderUpdateEventEvaluator.java", "BodyUseAPI": [], "Fixed commit": "8c0ec9cf1a54198f1a9b580a4751ec11036a9903", "Url": "https://api.github.com/repos/juxeii/JForexUtils", "Date": "2015-06-13T19:45:23Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clientTxId) < 0) { if (((requestType) != (OChannelBinaryProtocol.REQUEST_CONNECT)) && ((requestType) != (OChannelBinaryProtocol.REQUEST_DB_OPEN))) throw new com.orientechnologies.orient.server.network.protocol.binary.OSecurityException(\"Missing session for\"); connection = server.getClientConnectionManager().connect(this); connection.getData().sessionId = clientTxId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2481/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary.java", "BodyUseAPI": [], "Fixed commit": "f9609a5f1d133559ab8ca8943b2674ce3cab806d", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-07-05T18:03:29Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((key2.length()) < 4) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5713/buggy-version/WordCount.src.Dictionary.java", "BodyUseAPI": [], "Fixed commit": "6cf8a6dbdb7783437be0fb24ff3ac8c6ef70a712", "Url": "https://api.github.com/repos/Victorianuonuo/projects-for-Software-Engineering", "Date": "2016-10-08T02:59:58Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((key2.length()) < 4) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5713/buggy-version/WordCount.src.Dictionary.java", "BodyUseAPI": [], "Fixed commit": "6cf8a6dbdb7783437be0fb24ff3ac8c6ef70a712", "Url": "https://api.github.com/repos/Victorianuonuo/projects-for-Software-Engineering", "Date": "2016-10-08T02:59:58Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i != 4) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5713/buggy-version/WordCount.src.Dictionary.java", "BodyUseAPI": [], "Fixed commit": "6cf8a6dbdb7783437be0fb24ff3ac8c6ef70a712", "Url": "https://api.github.com/repos/Victorianuonuo/projects-for-Software-Engineering", "Date": "2016-10-08T02:59:58Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (sessionUser == null) { message = \"\"; }else { message = \"Hello, \" + (sessionUser.getUsername()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5456/buggy-version/src.java.com.auttc.controller.HomeLoadServlet.java", "BodyUseAPI": ["com.auttc.business.User.getUsername()"], "Fixed commit": "78891be8e3e6a137c07fbc4e79cec7b8a610f00f", "Url": "https://api.github.com/repos/Yufei-Yan/AUTTC_Website", "Date": "2017-04-30T21:24:46Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.psddev.dari.util.DimsImageEditor.getBaseUrls()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(baseUrls.isEmpty())) { boolean isDimsUrl = false; for (java.lang.String baseUrlItem : baseUrls) { if (imageUrl.startsWith(com.psddev.dari.util.StringUtils.removeEnd(baseUrlItem, \"/\"))) { isDimsUrl = true; baseUrl = baseUrlItem; break; } } if (!isDimsUrl) { int bucketIndex = (imageUrl.hashCode()) % (baseUrls.size()); if (bucketIndex < 0) { bucketIndex *= -1; } baseUrl = baseUrls.get(bucketIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3928/buggy-version/util.src.main.java.com.psddev.dari.util.DimsImageEditor.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.size()"], "Fixed commit": "1e0f8171dfa681c93bebd5ccca032d28a5965477", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2015-02-13T14:19:20Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.laytonsmith.abstraction.MCChatColor.getByChar(java.lang.Character)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cc == null) { cc = com.laytonsmith.abstraction.MCChatColor.WHITE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1575/buggy-version/src.main.java.com.laytonsmith.core.functions.Echoes.java", "BodyUseAPI": [], "Fixed commit": "4daaa043933528de9a79a17bfe93099e5a662800", "Url": "https://api.github.com/repos/EntityReborn/commandhelper", "Date": "2012-06-20T00:42:15Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["client.join.INewGameView.getTitle()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (title.isEmpty()) { messageView.setTitle(\"Create Game Error\"); messageView.setMessage(\"The name of the game cannot be blank\"); messageView.showModal(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/436/buggy-version/java.src.client.join.JoinGameController.java", "BodyUseAPI": [], "Fixed commit": "55c0c9534d270191f9a6e60b3efca4030e3f229a", "Url": "https://api.github.com/repos/bipvanwinkle/Catan-Client", "Date": "2015-03-05T22:01:18Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isParked) { setImgName(imgBrake); }else { setImgName(imgNormal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/594/buggy-version/src.model.Vehicle.java", "BodyUseAPI": [], "Fixed commit": "bc3d4e5b81f86e7bf6da408dccfc822cadcde2a0", "Url": "https://api.github.com/repos/100001252/AJAssignment02", "Date": "2017-10-08T07:53:31Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (buffer.index().equals(component.index())) { return component.hasNextChild(); }else { return buffer.hasNextChild(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/284/buggy-version/uk.co.strangeskies.modabi.core.api.src.uk.co.strangeskies.modabi.io.structured.BufferableStructuredDataSourceImpl.java", "BodyUseAPI": ["uk.co.strangeskies.modabi.io.structured.StructuredDataSource.hasNextChild()", "uk.co.strangeskies.modabi.io.structured.StructuredDataSource.hasNextChild()"], "Fixed commit": "15aef6c14eb0cbb0abb06d305ba7a0a271d469c4", "Url": "https://api.github.com/repos/StrangeSkies/uk.co.strangeskies.modabi", "Date": "2015-10-20T12:46:03Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((elements.size()) != 1) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1466/buggy-version/app.src.main.java.com.czbix.v2ex.parser.TopicParser.java", "BodyUseAPI": [], "Fixed commit": "1d7d4e10db06ee7f76c0e2ac809b42fc917d3745", "Url": "https://api.github.com/repos/CzBiX/v2ex-android", "Date": "2015-05-27T13:22:18Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Node.Type) == null) { Node.Type = ZenSystem.VarType; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6706/buggy-version/src.zen.lang.ZenTypeChecker.java", "BodyUseAPI": [], "Fixed commit": "9127a634a16dcd8aa9228d06190db31448d7a9c6", "Url": "https://api.github.com/repos/konoha-project/libzen", "Date": "2014-01-15T07:45:18Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stateMap.containsKey(stateName)) { return stateMap.get(stateName).get(holonName); }else { throw new java.lang.Exception(java.lang.String.format(\"Header for state %s cannot be found in file %s\", stateName, pathToFile.getAbsolutePath())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/9288/buggy-version/src.main.java.org.payn.chsm.io.initialize.InitialConditionTable.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.LinkedHashMap<java.lang.String, java.util.HashMap<java.lang.String, java.lang.String>>.get(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "2fb35c90a020823c60dfb63b572e5e1a91f38841", "Url": "https://api.github.com/repos/robpayn/chsm", "Date": "2017-03-28T03:59:52Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.shotmk.el.services.UserService.getUser(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tempUser != null) { attributes.addFlashAttribute(\"userExist\", \"exist\"); return \"redirect:/register\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/360/buggy-version/src.main.java.com.shotmk.el.web.RegisterController.java", "BodyUseAPI": [], "Fixed commit": "6aa8b06260ac70219f95853ab30976dee1a4d2ef", "Url": "https://api.github.com/repos/shot-mk/ElectronicLibrary", "Date": "2014-07-27T20:34:42Z"},
{"Line": "=>629", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((alExposed[i]) == 0) { moveMade = true; alExposed[i] = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1256/buggy-version/src.Minesweeper.java", "BodyUseAPI": [], "Fixed commit": "9c050ee9cd4c3b37637872ef6b0aeb6d6f12c318", "Url": "https://api.github.com/repos/raalsoby/MinesweeperAI", "Date": "2016-10-10T23:15:32Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((alExposed) == null) alExposed = new int[(width) * (height)];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1256/buggy-version/src.Minesweeper.java", "BodyUseAPI": [], "Fixed commit": "9c050ee9cd4c3b37637872ef6b0aeb6d6f12c318", "Url": "https://api.github.com/repos/raalsoby/MinesweeperAI", "Date": "2016-10-10T23:15:32Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((slot >= (SLOT_INVENTORY_START)) && (slot <= (SLOT_INVENTORY_END))) && ((SLOT_INVENTORY_START) != (SLOT_INVENTORY_END))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2948/buggy-version/src.main.java.com.vanhal.progressiveautomation.entities.BaseTileEntity.java", "BodyUseAPI": [], "Fixed commit": "f7df6ee706907f4e9fb1c666ac714f21d76efdf6", "Url": "https://api.github.com/repos/Vanhal/ProgressiveAutomation", "Date": "2015-07-16T13:53:08Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1057/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "c41e8455017a5e1f53ca7be52f4a55f178aa241a", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>821", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sourceIsCollection) { assignment = new org.mapstruct.ap.model.assignment.AdderWrapper(assignment, method.getThrownTypes(), sourceReference, sourceType); }else { assignment = new org.mapstruct.ap.model.assignment.SetterWrapper(assignment, method.getThrownTypes()); assignment = new org.mapstruct.ap.model.assignment.NullCheckWrapper(assignment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6595/buggy-version/processor.src.main.java.org.mapstruct.ap.processor.MapperCreationProcessor.java", "BodyUseAPI": [], "Fixed commit": "5af39aa4a0690cd4930efa3298f5a4e70dc57a7b", "Url": "https://api.github.com/repos/chschu/mapstruct", "Date": "2014-06-25T18:19:58Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.triggeredQuestionnaireList) == null) { this.triggeredQuestionnaireList = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7716/buggy-version/Android_App.MindRate.app.src.main.java.com.example.mindrate.activity.OverviewActivity.java", "BodyUseAPI": [], "Fixed commit": "48ebe3c65881a01be6ac34a1ea3830257ac4fcfd", "Url": "https://api.github.com/repos/apm1467/mind-rate", "Date": "2017-02-17T12:12:41Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4068/buggy-version/src.main.java.com.alibaba.druid.util.StringUtils.java", "BodyUseAPI": [], "Fixed commit": "9c86d3f37b9f066ff76841f38047a1ef5673d7b9", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2013-07-15T07:14:22Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"0:0:0:0:0:0:0:1\".equals(remoteAddress)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4068/buggy-version/src.main.java.com.alibaba.druid.support.http.StatViewServlet.java", "BodyUseAPI": [], "Fixed commit": "9c86d3f37b9f066ff76841f38047a1ef5673d7b9", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2013-07-15T07:14:22Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getApplication()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (((app != null) && ((app.me) != null)) && ((app.me.projectsUsers) != null)) return com.paulvarry.intra42.api.ProjectsUsers.getListDoing(app.me.projectsUsers);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/571/buggy-version/app.src.main.java.com.paulvarry.intra42.tab.projects.ProjectsDoingFragment.java", "BodyUseAPI": ["com.paulvarry.intra42.api.ProjectsUsers.getListDoing(app.me.projectsUsers)"], "Fixed commit": "f24ee84855f253975a7e52bbe97ca90a0f68c3b3", "Url": "https://api.github.com/repos/pvarry/intra42", "Date": "2016-12-06T00:05:34Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activity) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/571/buggy-version/app.src.main.java.com.paulvarry.intra42.tab.user.UserExpertisesFragment.java", "BodyUseAPI": [], "Fixed commit": "f24ee84855f253975a7e52bbe97ca90a0f68c3b3", "Url": "https://api.github.com/repos/pvarry/intra42", "Date": "2016-12-06T00:05:34Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.getRefresh_token()) != null) { com.mcnaughton.client.SpotifyClient.refreshToken = response.getRefresh_token(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7737/buggy-version/src.main.java.com.mcnaughton.client.SpotifyClient.java", "BodyUseAPI": ["com.mcnaughton.client.spotifyModels.AccessResponse.getRefresh_token()"], "Fixed commit": "9b1e028fe9d6f52775b8e320c94391beb888bc58", "Url": "https://api.github.com/repos/imcnaugh/MySite", "Date": "2017-06-02T07:38:32Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((packetData.length) < 3) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8751/buggy-version/UDPClient.java", "BodyUseAPI": [], "Fixed commit": "9464928b92120f6d902a543f7c39246357e5b39f", "Url": "https://api.github.com/repos/MODIS15/Mini-Project-1", "Date": "2015-09-06T08:32:11Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Id == 563) { noobienoobie123.ChaosDruid.ChaosDruid.amountOfItemLooted.put(Id, ((noobienoobie123.ChaosDruid.ChaosDruid.amountOfItemLooted.get(Id)) + 2)); }else if (Id == 561) { noobienoobie123.ChaosDruid.ChaosDruid.amountOfItemLooted.put(Id, ((noobienoobie123.ChaosDruid.ChaosDruid.amountOfItemLooted.get(Id)) + 3)); }else if (Id == 9142) { noobienoobie123.ChaosDruid.ChaosDruid.amountOfItemLooted.put(Id, ((noobienoobie123.ChaosDruid.ChaosDruid.amountOfItemLooted.get(Id)) + 7)); }else { noobienoobie123.ChaosDruid.ChaosDruid.amountOfItemLooted.put(Id, ((noobienoobie123.ChaosDruid.ChaosDruid.amountOfItemLooted.get(Id)) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3804/buggy-version/ChaosDruid.ChaosDruid.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.lang.Integer>.put(int,int)", "java.util.HashMap<java.lang.Integer, java.lang.Integer>.get(int)", "java.util.HashMap<java.lang.Integer, java.lang.Integer>.get(int)", "java.util.HashMap<java.lang.Integer, java.lang.Integer>.get(int)", "java.util.HashMap<java.lang.Integer, java.lang.Integer>.put(int,int)", "java.util.HashMap<java.lang.Integer, java.lang.Integer>.put(int,int)", "java.util.HashMap<java.lang.Integer, java.lang.Integer>.put(int,int)", "java.util.HashMap<java.lang.Integer, java.lang.Integer>.get(int)"], "Fixed commit": "fb39c4fa964fa67242b90ad904753fa0b35b8f2d", "Url": "https://api.github.com/repos/noobienoobie123/RsbotScripts", "Date": "2017-08-12T15:17:01Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((noobienoobie123.ChaosDruid.tasks.Walker.pathFromBankToLog[((noobienoobie123.ChaosDruid.tasks.Walker.pathFromBankToLog.length) - 1)].distanceTo(ctx.players.local())) < 7) && ((noobienoobie123.ChaosDruid.tasks.Walker.counter) == 0)) { while ((noobienoobie123.ChaosDruid.tasks.Walker.pathFromTowerToLog[((noobienoobie123.ChaosDruid.tasks.Walker.pathFromTowerToLog.length) - 1)].distanceTo(ctx.players.local())) > 1) { final org.powerbot.script.rt4.GameObject logBalance = ctx.objects.select().id(logID).each(org.powerbot.script.rt4.Interactive.doSetBounds(logBounds)).nearest().poll(); logBalance.interact(\"Walk-across\"); org.powerbot.script.Condition.wait(new java.util.concurrent.Callable<java.lang.Boolean>() { @java.lang.Override public java.lang.Boolean call() throws java.lang.Exception { return (ctx.players.local().animation()) != (-1); } }, 650, 10); noobienoobie123.ChaosDruid.tasks.Walker.counter = 1; } noobienoobie123.ChaosDruid.tasks.Walker.counter = 1; }else if ((((noobienoobie123.ChaosDruid.tasks.Walker.counter) == 1) && ((noobienoobie123.ChaosDruid.tasks.Walker.pathFromTowerToLog[((noobienoobie123.ChaosDruid.tasks.Walker.pathFromTowerToLog.length) - 1)].distanceTo(ctx.players.local())) > 3)) || (noobienoobie123.ChaosDruid.tasks.Walker.drownLocation2.equals(ctx.players.local().tile()))) { if ((noobienoobie123.ChaosDruid.tasks.Walker.pathFromTowerToLog[((noobienoobie123.ChaosDruid.tasks.Walker.pathFromTowerToLog.length) - 1)].distanceTo(ctx.players.local())) > 3) { ctx.movement.findPath(noobienoobie123.ChaosDruid.tasks.Walker.pathFromTowerToLog[((noobienoobie123.ChaosDruid.tasks.Walker.pathFromTowerToLog.length) - 1)]).traverse(); org.powerbot.script.Condition.sleep(1500); noobienoobie123.ChaosDruid.tasks.Walker.counter = 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3804/buggy-version/ChaosDruid.tasks.Walker.java", "BodyUseAPI": [], "Fixed commit": "fb39c4fa964fa67242b90ad904753fa0b35b8f2d", "Url": "https://api.github.com/repos/noobienoobie123/RsbotScripts", "Date": "2017-08-12T15:17:01Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(jsonObject.isNull(\"BookValue\"))) { batchOperations.add(com.sam_chordas.android.stockhawk.rest.Utils.buildBatchOperation(jsonObject)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5358/buggy-version/app.src.main.java.com.sam_chordas.android.stockhawk.rest.Utils.java", "BodyUseAPI": ["com.sam_chordas.android.stockhawk.rest.Utils.buildBatchOperation(org.json.JSONObject)", "java.util.ArrayList<android.content.ContentProviderOperation>.add(android.content.ContentProviderOperation)"], "Fixed commit": "5780d9027db436619f354939b861b91df37797a2", "Url": "https://api.github.com/repos/Sushant-M/StockHawk", "Date": "2016-12-08T07:03:30Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextAnnotation) == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8421/buggy-version/src.sf.retriever.CorefIndex.java", "BodyUseAPI": [], "Fixed commit": "3178e51dcc8098c488224c188415c9cd11468fd3", "Url": "https://api.github.com/repos/solowandererY2K/cse454-location", "Date": "2013-03-14T14:02:48Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(response.getData().isPresent())) return java.util.Optional.empty();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3610/buggy-version/src.main.java.address.sync.RemoteManager.java", "BodyUseAPI": [], "Fixed commit": "b6a7ef9da391e9829970b1d474fea40660184ffc", "Url": "https://api.github.com/repos/m133225/addressbook", "Date": "2016-06-20T03:07:29Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/717/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "0b3849f1401f574ec335e9cdba8ebf9853d32a36", "Url": "https://api.github.com/repos/clebertsuconic/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["username.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((email.length()) < 1) { android.widget.Toast.makeText(getContext(), \"Incorrect email\", Toast.LENGTH_SHORT).show(); }else { progressBar.setVisibility(View.VISIBLE); login(email, password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7616/buggy-version/app.src.main.java.com.example.hellvox.kappetijnmathijspset6.login_dialog.java", "BodyUseAPI": ["com.example.hellvox.kappetijnmathijspset6.login_dialog.LoginListener.login(java.lang.String,java.lang.String)"], "Fixed commit": "41e85411e4cb0008a70bd8d607332e87176cc94d", "Url": "https://api.github.com/repos/hellvox/KappetijnMathijspset6", "Date": "2017-12-14T12:13:43Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sourceDirectoryFile.exists())) { throw new java.lang.IllegalArgumentException(((\"Directory '\" + sourceDirectory) + \"' does not exist\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1847/buggy-version/src.main.java.com.joaotech.photorganizer.executor.InitExecution.java", "BodyUseAPI": [], "Fixed commit": "9612efb963f492aac213a7d3ee78c6fb20bd796a", "Url": "https://api.github.com/repos/joaogabriel/photorganizer", "Date": "2014-09-07T23:25:55Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DateField.TYPE.equalsIgnoreCase(rs.getString(\"TYPE_NAME\"))) { dataType = java.sql.Types.DATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8250/buggy-version/mydb.mydb-war.src.main.java.com.silverpeas.mydb.control.MyDBSessionController.java", "BodyUseAPI": [], "Fixed commit": "f0eb5a874c9456e8cd3cc41312eeb8a137fdc86b", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Components", "Date": "2015-04-22T09:28:52Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (counter.counterSymbol().equals(\"0\")) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/902/buggy-version/src.minesweeper.model.Field.java", "BodyUseAPI": [], "Fixed commit": "d4db74b0f5f4cb63066fdc8183daa31b4b0b95d1", "Url": "https://api.github.com/repos/shrykull/Calisthenics", "Date": "2015-08-12T16:30:50Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsPageReloaded) { setWebViewPosition(mLastWebviewScrollpos); mIsPageReloaded = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1569/buggy-version/folioreader.src.main.java.com.folioreader.fragments.FolioPageFragment.java", "BodyUseAPI": [], "Fixed commit": "7fe17be016d767067b4daf40242c96e938eae15d", "Url": "https://api.github.com/repos/codetoart/FolioReader-Android", "Date": "2016-12-28T12:52:29Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jvnet.hudson.update_center.Plugin.getPomWikiUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (givenUrl == null) { java.lang.System.out.println(java.lang.String.format(\"=> URL documentation for %s is null\", hpi.artifactId)); givenUrl = \"\"; }else if (givenUrl.isEmpty()) { java.lang.System.out.println(java.lang.String.format(\"=> No URL documentation provided for %s\", hpi.artifactId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8276/buggy-version/src.main.java.org.jvnet.hudson.update_center.Main.java", "BodyUseAPI": ["java.lang.String.isEmpty()"], "Fixed commit": "cb892dfe018fd681b2bf9b93dc9b306039f9edcf", "Url": "https://api.github.com/repos/rafaelrezend/backend-update-center2", "Date": "2016-09-01T15:26:23Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jvnet.hudson.update_center.Plugin.getPomWikiUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((url != null) && (!(url.isEmpty()))) json.put(\"wiki\", url);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8276/buggy-version/src.main.java.org.jvnet.hudson.update_center.Plugin.java", "BodyUseAPI": ["net.sf.json.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "cb892dfe018fd681b2bf9b93dc9b306039f9edcf", "Url": "https://api.github.com/repos/rafaelrezend/backend-update-center2", "Date": "2016-09-01T15:26:23Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((component.length()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/235/buggy-version/src.main.java.com.sk89q.worldedit.WorldEdit.java", "BodyUseAPI": [], "Fixed commit": "730244056cb9e7b0e40e2d79fee0ded35e9a638f", "Url": "https://api.github.com/repos/sk89q/WorldEdit", "Date": "2011-06-04T19:22:33Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (className != null) { ((com.orientechnologies.orient.core.record.impl.ODocument) (iRecord)).setClassName(className); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6366/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerJSON.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.ORecord.setClassName(java.lang.String)"], "Fixed commit": "58ec800828f7181ec8c7739492c003d95b3644c6", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-03-27T15:09:32Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.common.io.OIOUtils.getStringContent(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fieldName.equals(ODocumentHelper.ATTRIBUTE_CLASS)) { continue; }else if (fieldName.equals(ODocumentHelper.ATTRIBUTE_TYPE)) { continue; }else if ((fieldName.equals(com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerJSON.ATTRIBUTE_FIELD_TYPES)) && (iRecord instanceof com.orientechnologies.orient.core.record.impl.ODocument)) { continue; }else if ((fieldName.equals(\"value\")) && (!(iRecord instanceof com.orientechnologies.orient.core.record.impl.ODocument))) { if (\"null\".equals(fieldValue)) iRecord.fromStream(OCommonConst.EMPTY_BYTE_ARRAY); else if (iRecord instanceof com.orientechnologies.orient.core.record.impl.OBlob) { iRecord.fromStream(java.util.Base64.getDecoder().decode(fieldValueAsString)); }else if (iRecord instanceof com.orientechnologies.orient.core.record.ORecordStringable) { ((com.orientechnologies.orient.core.record.ORecordStringable) (iRecord)).value(fieldValueAsString); }else throw new java.lang.IllegalArgumentException(\"unsupported type of record\"); }else if (iRecord instanceof com.orientechnologies.orient.core.record.impl.ODocument) { final com.orientechnologies.orient.core.record.impl.ODocument doc = ((com.orientechnologies.orient.core.record.impl.ODocument) (iRecord)); com.orientechnologies.orient.core.metadata.schema.OType type = determineType(doc, fieldName); final java.lang.Object v = getValue(doc, fieldName, fieldValue, fieldValueAsString, type, null, fieldTypes, noMap, iOptions); if (v != null) if ((v instanceof java.util.Collection<?>) && (!(((java.util.Collection<?>) (v)).isEmpty()))) { if (v instanceof com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordLazyMultiValue) ((com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordLazyMultiValue) (v)).setAutoConvertToRecord(false); if (type == null) { java.lang.Object first = ((java.util.Collection<?>) (v)).iterator().next(); if (((first != null) && (first instanceof com.orientechnologies.orient.core.record.ORecord)) && (!(((com.orientechnologies.orient.core.record.ORecord) (first)).getIdentity().isValid()))) type = (v instanceof java.util.Set<?>) ? com.orientechnologies.orient.core.metadata.schema.OType.EMBEDDEDSET : com.orientechnologies.orient.core.metadata.schema.OType.EMBEDDEDLIST; } if (type != null) { doc.field(fieldName, v, type); continue; } }else if ((v instanceof java.util.Map<?, ?>) && (!(((java.util.Map<?, ?>) (v)).isEmpty()))) { java.lang.Object first = ((java.util.Map<?, ?>) (v)).values().iterator().next(); if (((first != null) && (first instanceof com.orientechnologies.orient.core.record.ORecord)) && (!(((com.orientechnologies.orient.core.record.ORecord) (first)).getIdentity().isValid()))) { doc.field(fieldName, v, OType.EMBEDDEDMAP); continue; } }else if (((v instanceof com.orientechnologies.orient.core.record.impl.ODocument) && (type != null)) && (type.isLink())) { java.lang.String className1 = ((com.orientechnologies.orient.core.record.impl.ODocument) (v)).getClassName(); if ((className1 != null) && ((className1.length()) > 0)) ((com.orientechnologies.orient.core.record.impl.ODocument) (v)).save(); } if (((type == null) && (fieldTypes != null)) && (fieldTypes.containsKey(fieldName))) type = com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerStringAbstract.getType(fieldValue, fieldTypes.get(fieldName)); if (v instanceof com.orientechnologies.orient.core.serialization.serializer.record.string.OTrackedSet<?>) { if ((com.orientechnologies.common.collection.OMultiValue.getFirstValue(((java.util.Set<?>) (v)))) instanceof com.orientechnologies.orient.core.serialization.serializer.record.string.OIdentifiable) type = com.orientechnologies.orient.core.metadata.schema.OType.LINKSET; }else if (v instanceof com.orientechnologies.orient.core.serialization.serializer.record.string.OTrackedList<?>) { if ((com.orientechnologies.common.collection.OMultiValue.getFirstValue(((java.util.List<?>) (v)))) instanceof com.orientechnologies.orient.core.serialization.serializer.record.string.OIdentifiable) type = com.orientechnologies.orient.core.metadata.schema.OType.LINKLIST; } if (type != null) doc.field(fieldName, v, type); else doc.field(fieldName, v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6366/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerJSON.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String,java.lang.Object,com.orientechnologies.orient.core.metadata.schema.OType)", "java.util.Map<java.lang.String, java.lang.Character>.get(java.lang.String)", "com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerJSON.getValue(com.orientechnologies.orient.core.record.impl.ODocument,java.lang.String,java.lang.String,java.lang.String,com.orientechnologies.orient.core.metadata.schema.OType,<nulltype>,java.util.Map<java.lang.String, java.lang.Character>,boolean,java.lang.String)", "com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerStringAbstract.getType(java.lang.String,java.lang.Character)", "java.lang.String.equals(ODocumentHelper.ATTRIBUTE_TYPE)", "java.lang.String.equals(java.lang.String)", "com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerJSON.determineType(com.orientechnologies.orient.core.record.impl.ODocument,java.lang.String)", "com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String,java.lang.Object,OType.EMBEDDEDMAP)", "com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String,java.lang.Object)", "java.lang.String.equals(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Character>.containsKey(java.lang.String)", "com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String,java.lang.Object,com.orientechnologies.orient.core.metadata.schema.OType)"], "Fixed commit": "58ec800828f7181ec8c7739492c003d95b3644c6", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-03-27T15:09:32Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((game.staging.StageMainMenue.firstStart) == false) { java.util.Scanner scanner = new java.util.Scanner(game.res.ResourceManager.class.getResourceAsStream(\"/VERSION\")); if (scanner.hasNextLine()) game.staging.StageMainMenue.VERSION = scanner.nextLine(); else game.staging.StageMainMenue.VERSION = \"No Version found!\"; scanner.close(); util.log.Log.info(((\"Starting game took a total of \" + ((java.lang.System.currentTimeMillis()) - (game.main.GameFrame.GAMESTARTTIME))) + \" ms!\")); game.staging.StageMainMenue.firstStart = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1623/buggy-version/Ludum-Dare-30.src.game.staging.StageMainMenue.java", "BodyUseAPI": [], "Fixed commit": "6c0caf3243315994ac969abc09b8822cc2938807", "Url": "https://api.github.com/repos/TobiasBodewig/Ludum-Dare-30", "Date": "2014-11-28T18:57:40Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["monnef.core.utils.CraftingHelper.returnLeftover(net.minecraft.item.ItemStack,net.minecraft.inventory.IInventory,net.minecraft.entity.player.EntityPlayer,ConfigurationManager.transferItemsFromCraftingMatrix)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ret.isDefined()) processedSlots.add(((java.lang.Integer) (ret.get())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1550/buggy-version/src.minecraft.monnef.jaffas.food.crafting.PersistentItemsCraftingHandler.java", "BodyUseAPI": ["scala.Option<java.lang.Object>.get()", "java.util.HashSet<java.lang.Integer>.add(((java.lang.Integer) (ret.get())))"], "Fixed commit": "403de0afe638183572ec94a7b556a7dadf96ef77", "Url": "https://api.github.com/repos/mnn/jaffas", "Date": "2013-10-12T12:14:53Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.jClipCorn.gui.guiComponents.jSimpleTree.JSimpleTree.getPathForLocation(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(this.isPathSelected(selPath))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5004/buggy-version/src.main.de.jClipCorn.gui.guiComponents.jSimpleTree.JSimpleTree.java", "BodyUseAPI": [], "Fixed commit": "12a96474e667349109c9cd681509aa4b8c5bc8f6", "Url": "https://api.github.com/repos/Mikescher/jClipCorn", "Date": "2017-12-05T20:07:55Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(result.get(\"code\").isJsonNull())) { code = result.get(\"code\").getAsString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6568/buggy-version/buddi.src.main.java.group.project.buddi.LoginActivity.java", "BodyUseAPI": ["com.google.gson.JsonObject.get(java.lang.String)", "result.get(\"code\").getAsString()"], "Fixed commit": "78cdecb668fd6ceefb1c719accad2b8e8b16b39c", "Url": "https://api.github.com/repos/abhay-vaidya/Buddi", "Date": "2016-06-07T22:30:29Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (readLog != null) { readLog.addLogPoint(be.doji.productivity.trackme.parser.TimeLogParser.parseToTimeLog(line)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2214/buggy-version/trambu-core.src.main.java.be.doji.productivity.trackme.managers.TimeTrackingManager.java", "BodyUseAPI": ["be.doji.productivity.trackme.model.tracker.ActivityLog.addLogPoint(be.doji.productivity.trackme.parser.TimeLogParser.parseToTimeLog(line))"], "Fixed commit": "adc2f858d43445742677be320927ebd894686e07", "Url": "https://api.github.com/repos/justDoji/TrackMeUp", "Date": "2017-11-18T23:26:49Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((f) != null) { f.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3322/buggy-version/src.org.warp.picalculator.screens.EquationScreen.java", "BodyUseAPI": [], "Fixed commit": "4ba50f8d761bd1a6c32129df3e92900c0b1e832b", "Url": "https://api.github.com/repos/Cavallium/WarpPI", "Date": "2016-12-03T15:37:22Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((layoutManager.getChildCount()) == (layoutManager.getItemCount())) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8714/buggy-version/ChipsLayoutManager.src.main.java.com.beloo.widget.chipslayoutmanager.ScrollingController.java", "BodyUseAPI": [], "Fixed commit": "2f6e730b134ea35d75f1ad8cc7b20f56a209dcdf", "Url": "https://api.github.com/repos/BelooS/ChipsLayoutManager", "Date": "2016-12-19T09:31:34Z"},
{"Line": "=>675", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isHavingType.equals(\"anchor\")) && (!(ismap))) { addNewMessage(anchorText, false, false, isPieChart, isSearchResult, datumList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1645/buggy-version/app.src.main.java.org.fossasia.susi.ai.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5a05779bd6621b8a94acd29769d82ede927d4257", "Url": "https://api.github.com/repos/samsruti/susi_android", "Date": "2016-12-11T08:12:53Z"},
{"Line": "=>667", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.body().getAnswers().get(0).getActions().get(1).getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isHavingType.equals(\"anchor\")) { counter = responseActionSize; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1645/buggy-version/app.src.main.java.org.fossasia.susi.ai.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5a05779bd6621b8a94acd29769d82ede927d4257", "Url": "https://api.github.com/repos/samsruti/susi_android", "Date": "2016-12-11T08:12:53Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pointer.getNext()) != null) { pointer = pointer.getNext(); if ((pointer.getNext()) == null) { java.lang.System.out.println(pointer.getInt()); break; } }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3950/buggy-version/day06.q07.IntNode.java", "BodyUseAPI": ["IntNode.getNext()"], "Fixed commit": "22b78c91457dc539902c7cc7072bd557b173859a", "Url": "https://api.github.com/repos/BBK-PiJ-2016-85/My-PiJ-Exercises", "Date": "2016-12-29T11:40:24Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cn.idongjia.util.Utils.isEmpty(search.getKrname())) { search.setKrname(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5673/buggy-version/web.src.main.java.top.jhechem.web.controller.OrderController.java", "BodyUseAPI": ["top.jhechem.order.pojo.OrderSearch.setKrname(<nulltype>)"], "Fixed commit": "e5a1f3aef91986db3aba2cc6d70d41517483a6bc", "Url": "https://api.github.com/repos/devonkey/jhechem", "Date": "2017-08-29T12:53:59Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (w != null) { java.util.Date date = new java.util.Date(); java.sql.Date sqlDate = new java.sql.Date(date.getTime()); if (sqlDate == (w.getTarget_changed_at_date())) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2121/buggy-version/android.src.at.ac.tuwien.sportmate.BoGroupMember.java", "BodyUseAPI": ["at.ac.tuwien.sportmate.BoWeeklyTarget.getTarget_changed_at_date()"], "Fixed commit": "984acfe4568c695c904161f3bee73070ebfab937", "Url": "https://api.github.com/repos/BrandiATMuhkuh/prore2012gp3", "Date": "2013-01-16T15:20:15Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) { data.selectedFileNames = null; }else { data = ((chrriis.dj.nativeswing.swtimpl.components.core.NativeFileDialog.Data) (result)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6393/buggy-version/DJNativeSwing-SWTCore.src.chrriis.dj.nativeswing.swtimpl.components.core.NativeFileDialog.java", "BodyUseAPI": [], "Fixed commit": "2cd54266555869647af9ada34ac233d18e08fd3a", "Url": "https://api.github.com/repos/Metaswitch/DJ-Native-Swing", "Date": "2014-06-21T13:35:53Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((depnn) != null) { loadEmbeddings(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8734/buggy-version/src.chart_parser.ChartParserBeam.java", "BodyUseAPI": [], "Fixed commit": "f57b99c751707b285814b89f14ff76b19a54f8f8", "Url": "https://api.github.com/repos/darrenfoong/candc", "Date": "2016-04-22T15:04:38Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((min) < 10) { minuteString = \"0\" + (min); }else { minuteString = \"\" + (min); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/863/buggy-version/PhoneVolumeToggle.src.com.pTricKg.PhoneVolumeToggle.Timer.java", "BodyUseAPI": [], "Fixed commit": "46ee1e0f0203f0858e9037395cd7e65d690dc7e5", "Url": "https://api.github.com/repos/pTricKg/RingerToggle", "Date": "2016-07-02T17:08:01Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (virtualPosition.isPresent()) { roomObservationCountMap.put(uniqueRoomId, (uniqueRoomId.equals(virtualPosition.value.identifier) ? 1 : 0)); }else { aau.carmakit.Utilities.Funcable<aau.carmakit.ContextualInformationProviders.PositionContextualInformationProvider.EnteredRoomObservation> observationWithIdentifier = new aau.carmakit.Utilities.Funcable(enteredRoomObservations).filter(new com.android.internal.util.Predicate<aau.carmakit.ContextualInformationProviders.PositionContextualInformationProvider.EnteredRoomObservation>() { @java.lang.Override public boolean apply(aau.carmakit.ContextualInformationProviders.PositionContextualInformationProvider.EnteredRoomObservation enteredRoomObservation) { return enteredRoomObservation.room.identifier.equals(uniqueRoomId); } }); int observationCount = observationWithIdentifier.getValue().size(); roomObservationCountMap.put(uniqueRoomId, observationCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2367/buggy-version/carmakit.src.main.java.aau.carmakit.ContextualInformationProviders.PositionContextualInformationProvider.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.put(java.lang.String,(uniqueRoomId.equals(virtualPosition.value.identifier) ? 1 : 0))", "java.lang.String.equals(virtualPosition.value.identifier)"], "Fixed commit": "147cf8ca6f41025106fa871c6c25f005d9f8e1cd", "Url": "https://api.github.com/repos/simonbs/context-aware-home-automation", "Date": "2016-05-09T12:37:37Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mParkedTextView.getBeginningPositionOfParkedText()) > 0) parkedText = text.substring(((mParkedTextView.getBeginningPositionOfParkedText()) - 1)); else parkedText = text;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3425/buggy-version/parkedtextview.src.main.java.com.goka.parkedtextview.ParkedTextView.java", "BodyUseAPI": ["java.lang.String.substring(int)", "com.goka.parkedtextview.ParkedTextView.getBeginningPositionOfParkedText()"], "Fixed commit": "de82c2c351d046adc020e3add666be7328b14238", "Url": "https://api.github.com/repos/foxsake/ParkedTextView", "Date": "2017-06-20T06:08:52Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(outDir.exists())) { if (!(outDir.mkdirs())) { throw new java.io.IOException(((\"Couldn\\'t create \\\"\" + (outDir.getAbsolutePath())) + \"\\\".\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8428/buggy-version/src.main.java.org.hobbit.core.rabbit.SimpleFileReceiver.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "java.io.File.mkdirs()"], "Fixed commit": "47806df91d1c807b4d50199c012cc93c62373974", "Url": "https://api.github.com/repos/hobbit-project/core", "Date": "2017-06-23T12:29:56Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tagValue == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6247/buggy-version/artemis-metrics.src.main.java.com.spinn3r.artemis.metrics.tags.TagList.java", "BodyUseAPI": [], "Fixed commit": "67a95cc1438524adf3fb22ea2e144ff77b085602", "Url": "https://api.github.com/repos/spinn3r/artemis-framework", "Date": "2016-01-15T21:12:33Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userRepository.emailExists(email)) { throw new org.springframework.security.oauth2.client.resource.OAuth2AccessDeniedException(((\"User with email '\" + email) + \"' already exists\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8019/buggy-version/src.main.java.com.epam.reportportal.auth.integration.github.GitHubUserReplicator.java", "BodyUseAPI": [], "Fixed commit": "1408fa700f6972fe83477aa18338245eb48ca20e", "Url": "https://api.github.com/repos/reportportal/service-authorization", "Date": "2016-09-29T13:26:13Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (res.next()) { throw new org.apache.tajo.catalog.store.DuplicateTablespaceException(spaceName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1487/buggy-version/tajo-catalog.tajo-catalog-server.src.main.java.org.apache.tajo.catalog.store.AbstractDBStore.java", "BodyUseAPI": [], "Fixed commit": "708891e078c129ad35f4ef322b1bb0399a14ad9e", "Url": "https://api.github.com/repos/jihoonson/tajo", "Date": "2015-09-08T16:27:42Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.path.exists())) { java.lang.String zip = element.getAttribute(\"zip\"); java.io.File zipFile = new java.io.File(bundleDir, zip); if (zipFile.exists()) { if (ts.utils.ZipUtils.isZipFile(zipFile)) { ts.utils.ZipUtils.extractZip(zipFile, baseDir); }else if (ts.utils.ZipUtils.isTarGZFile(zipFile)) { ts.utils.ZipUtils.extractTarGZ(zipFile, baseDir); }else if (ts.utils.ZipUtils.isTarXZFile(zipFile)) { ts.utils.ZipUtils.extractTarXZ(zipFile, baseDir); } if (this.path.exists()) { this.path.setExecutable(true); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8996/buggy-version/eclipse.ts.eclipse.ide.core.src.ts.eclipse.ide.internal.core.nodejs.NodejsInstall.java", "BodyUseAPI": ["java.io.File.setExecutable(boolean)", "java.io.File.exists()"], "Fixed commit": "a97b5998ca562b2c82008e2991a971a18edef974", "Url": "https://api.github.com/repos/angelozerr/typescript.java", "Date": "2017-11-30T13:21:30Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5347/buggy-version/app.src.main.java.be.howest.nmct.hellocal.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a0f183fd327563a7594bcb93e239fb262de5d2bf", "Url": "https://api.github.com/repos/FBeuselinck/HelLOCAL", "Date": "2017-01-27T10:22:10Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.groupfourtwo.bluetoothsensorapp.data.DataManager.getInstance(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((dataManager2.getValuesFromInterval(measure1, begin, end)) == null) || (dataManager2.getValuesFromInterval(measure1, begin, end).isEmpty())) { lineChart.setData(null); lineChart.invalidate(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2688/buggy-version/app.src.main.java.com.example.groupfourtwo.bluetoothsensorapp.graph.DrawGraph.java", "BodyUseAPI": [], "Fixed commit": "d1ab7c2d04c57f2fb61408c5f20ed514bdce8982", "Url": "https://api.github.com/repos/imackerracher/BluetoothSensorApp", "Date": "2017-07-09T09:32:18Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.effectiveCode) == null) && ((this.code) != null)) { this.setEffectiveCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8629/buggy-version/ultradns-rest.src.main.java.denominator.ultradns.model.Region.java", "BodyUseAPI": [], "Fixed commit": "42f43fbdeaa9cacce8b05d7309d45910fa9562f4", "Url": "https://api.github.com/repos/ultradns/denominator", "Date": "2017-03-22T07:53:35Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.effectiveCodeForGeo) == null) && ((this.code) != null)) { this.setEffectiveCodeForGeo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8629/buggy-version/ultradns-rest.src.main.java.denominator.ultradns.model.Region.java", "BodyUseAPI": [], "Fixed commit": "42f43fbdeaa9cacce8b05d7309d45910fa9562f4", "Url": "https://api.github.com/repos/ultradns/denominator", "Date": "2017-03-22T07:53:35Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (listener != null) listener.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6609/buggy-version/Stratego.src.edu.asu.stratego.Server.java", "BodyUseAPI": ["java.net.ServerSocket.close()"], "Fixed commit": "73da1633ec778d707a177ebb6a652d9e24f30e94", "Url": "https://api.github.com/repos/bhood2/SER216_Stratego", "Date": "2017-08-09T07:16:22Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (abortFlag[0]) { return new edu.stanford.nlp.util.Pair<java.lang.String, java.lang.Double>(\"INVALID_TWEET\", 1.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/9094/buggy-version/src.main.java.runClassifierOnTweets.java", "BodyUseAPI": [], "Fixed commit": "d0a1680bc52f64ad3abf70d8d2175db79e8333d5", "Url": "https://api.github.com/repos/emory-irlab/FluTweetClassification", "Date": "2016-09-27T23:14:31Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == ((nCores) - 1)) { thisGroupEnd = tweets.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/9094/buggy-version/src.main.java.TweetFeatureExtractor.java", "BodyUseAPI": [], "Fixed commit": "d0a1680bc52f64ad3abf70d8d2175db79e8333d5", "Url": "https://api.github.com/repos/emory-irlab/FluTweetClassification", "Date": "2016-09-27T23:14:31Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["searchTextView.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((searchText.length()) == 0) && (((params.getSearchType()) == (SearchParameters.SearchType.BOTH)) || ((params.getSearchType()) == (SearchParameters.SearchType.NOT_USER_OWNED)))) { android.widget.Toast toast = android.widget.Toast.makeText(this, \"You must enter a title to search for\", Toast.LENGTH_LONG); toast.show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1059/buggy-version/app.src.main.java.com.marshl.mediamogul.MediaSearchActivity.java", "BodyUseAPI": [], "Fixed commit": "01e351d7dc3167ce98e083f3cac1ca6a17c6a915", "Url": "https://api.github.com/repos/marshl/MediaMogul", "Date": "2017-03-12T11:18:49Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (admin != null) { mAdminUri = admin.getString(\"resource_uri\"); mAdminFirstName = admin.getString(\"first_name\"); mAdminLastName = admin.getString(\"last_name\"); mAdminEmail = admin.optString(\"email\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5397/buggy-version/EnvSocialApp.src.com.envsocial.android.api.Location.java", "BodyUseAPI": [], "Fixed commit": "6fa4b2328f6e7e7f01699647e1c58b575fdcd770", "Url": "https://api.github.com/repos/asorici/envsmth", "Date": "2013-01-16T15:04:32Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (num.complexwiring.ComplexWiring.DEBUG) { fontRenderer.drawString(\"BURN:\", 6, 20, 6710886); fontRenderer.drawString((\" \" + (tile.machineBurnTime)), (6 + (fontRenderer.getStringWidth(\"BURN:\"))), 20, 3355443); fontRenderer.drawString(\"COOK: \", 6, 30, 6710886); fontRenderer.drawString((\" \" + (tile.machineProcessTime)), (6 + (fontRenderer.getStringWidth(\"COOK:\"))), 30, 3355443); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2534/buggy-version/common.num.complexwiring.machine.GuiMachineBasic.java", "BodyUseAPI": [], "Fixed commit": "2b8ad70699ce22803a1a645d4d3605be03aaf94d", "Url": "https://api.github.com/repos/Numerios/ComplexWiring", "Date": "2013-12-01T14:25:14Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((string0.length()) > i) { char0 = string0.charAt(i); }else { char0 = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5554/buggy-version/CommonEnvironment.src.commonenvironment.AlphaNumericComparitor.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "b28b4d2dc210a80a37427e0703d6f34c2c18fc00", "Url": "https://api.github.com/repos/nsherry4/Libraries", "Date": "2011-06-09T18:37:10Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((string1.length()) > i) { char1 = string1.charAt(i); }else { char1 = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5554/buggy-version/CommonEnvironment.src.commonenvironment.AlphaNumericComparitor.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "b28b4d2dc210a80a37427e0703d6f34c2c18fc00", "Url": "https://api.github.com/repos/nsherry4/Libraries", "Date": "2011-06-09T18:37:10Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(lec.equals(\"None\"))) { record = lec; }else { if ((now.get(java.util.Calendar.MINUTE)) == 0) { newtext = new android.widget.TextView(this); newtext.setBackgroundResource(R.drawable.gray_border); pixels = ((int) ((dp * scale) + 0.5F)); newtext.setHeight(pixels); dayLayout.addView(newtext); dp = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2592/buggy-version/app.src.main.java.ryanbelt.utscroom.RoomScheduleOutput.java", "BodyUseAPI": [], "Fixed commit": "a62ce3797161a958b693c469f463d55e3fbc2135", "Url": "https://api.github.com/repos/ryanbelt/UTSCroom", "Date": "2016-05-10T03:39:48Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valid == false) { java.lang.System.out.println(\"That is not a valid username/password combination!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/311/buggy-version/Application.java", "BodyUseAPI": [], "Fixed commit": "929d20660d195db7ac8ade5177190b4c67ff43aa", "Url": "https://api.github.com/repos/ChuckRozsa/Project1", "Date": "2015-10-25T22:12:57Z"},
{"Line": "=>976", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(keyType.equals(\"SSK\"))) { throw new java.lang.IllegalStateException((\"No docName for key of type \" + (keyType))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3432/buggy-version/src.freenet.keys.FreenetURI.java", "BodyUseAPI": [], "Fixed commit": "0efd2ceabd69d8d14d9a2bd16a82baa1106bbc6c", "Url": "https://api.github.com/repos/zidel/fred-staging", "Date": "2012-12-20T16:56:20Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != progress) { console.print(((\" %5.1f%% [%-\" + progressSize) + \"s] %s\"), prg, \">\", toString(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6842/buggy-version/src.main.java.org.azkfw.core.cui.AbstractTaskExecuteScript.java", "BodyUseAPI": [], "Fixed commit": "00d82e14e821b0e79bd02f86b781d4105bcb2655", "Url": "https://api.github.com/repos/azuki-framework/azuki-base", "Date": "2014-06-10T05:35:27Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != progress) { console.print(backLine); console.print(spaceLine); console.print(backLine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6842/buggy-version/src.main.java.org.azkfw.core.cui.AbstractTaskExecuteScript.java", "BodyUseAPI": [], "Fixed commit": "00d82e14e821b0e79bd02f86b781d4105bcb2655", "Url": "https://api.github.com/repos/azuki-framework/azuki-base", "Date": "2014-06-10T05:35:27Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != progress) { console.print(backLine); console.print(((\" %5.1f%% [%-\" + progressSize) + \"s] %s\"), prg, s.toString(), toString(time)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6842/buggy-version/src.main.java.org.azkfw.core.cui.AbstractTaskExecuteScript.java", "BodyUseAPI": [], "Fixed commit": "00d82e14e821b0e79bd02f86b781d4105bcb2655", "Url": "https://api.github.com/repos/azuki-framework/azuki-base", "Date": "2014-06-10T05:35:27Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mIsRecording) && ((mRecordUpdate) != null)) { mRecordUpdate.updateTime(millisecond); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1923/buggy-version/src.main.java.com.tac.media.audioplayer.AudioRecordStream.java", "BodyUseAPI": [], "Fixed commit": "c3e70ed7959aa0ddebe7891432a86228ee83660d", "Url": "https://api.github.com/repos/HellCat24/audioplayer", "Date": "2014-10-06T11:03:50Z"},
{"Line": "=>1122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iPropertyValue instanceof com.orientechnologies.orient.core.record.impl.ODocument) { if (OType.EMBEDDED.equals(fieldType)) { final com.orientechnologies.orient.core.record.impl.ODocument embeddedDocument = ((com.orientechnologies.orient.core.record.impl.ODocument) (iPropertyValue)); com.orientechnologies.orient.core.record.impl.ODocumentInternal.addOwner(embeddedDocument, this); }else if (OType.LINK.equals(fieldType)) { final com.orientechnologies.orient.core.record.impl.ODocument embeddedDocument = ((com.orientechnologies.orient.core.record.impl.ODocument) (iPropertyValue)); com.orientechnologies.orient.core.record.impl.ODocumentInternal.removeOwner(embeddedDocument, this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5045/buggy-version/core.src.main.java.com.orientechnologies.orient.core.record.impl.ODocument.java", "BodyUseAPI": [], "Fixed commit": "6111d857055e26146b84e9626e530931b99e5286", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-07-27T10:23:23Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.datastax.oss.driver.api.core.CqlIdentifier.asCql(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"local_read_repair_chance\".equals(optionName)) { optionName = \"dclocal_read_repair_chance\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6525/buggy-version/core.src.main.java.com.datastax.oss.driver.internal.core.metadata.schema.parsing.RelationParser.java", "BodyUseAPI": [], "Fixed commit": "00ab454925a8c0025225577cc6a40d27a6d799b8", "Url": "https://api.github.com/repos/datastax/java-driver", "Date": "2017-09-16T00:08:59Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (card2 == null) { send(((((((msg + \":\") + (card.getSuit())) + \"-\") + (card.getRank())) + \":\") + \"null-null\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7242/buggy-version/3-2.src._3_2Game_Client.Player_Client.java", "BodyUseAPI": [], "Fixed commit": "94373658980d42ec695f49aed34e0df9b71852a8", "Url": "https://api.github.com/repos/ivantm24/3-2", "Date": "2015-05-10T20:39:12Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (card == null) { send(((msg + \":\") + \"null-null\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7242/buggy-version/3-2.src._3_2Game_Client.Player_Client.java", "BodyUseAPI": [], "Fixed commit": "94373658980d42ec695f49aed34e0df9b71852a8", "Url": "https://api.github.com/repos/ivantm24/3-2", "Date": "2015-05-10T20:39:12Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((desiredValue) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6795/buggy-version/animation4j-core.src.main.java.com.gemserk.animation4j.transitions.UpdateableTransition.java", "BodyUseAPI": [], "Fixed commit": "f952e7b93bea1bd6c82dcec8ef35f0412596336a", "Url": "https://api.github.com/repos/gemserk/animation4j", "Date": "2011-03-14T21:20:49Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.plugin.java.JavaPlugin.getCommand(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (commandObj == null) { log.info(((\"Could not find command '\" + cmdName) + \"' in plugin.yml\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6697/buggy-version/com.selfequalsthis.grubsplugin.AbstractGrubsModule.java", "BodyUseAPI": [], "Fixed commit": "76162a3f1926c8ab970c5fde11d0d0ddb21733c0", "Url": "https://api.github.com/repos/eitanmk/GrubsPlugin", "Date": "2011-11-10T17:49:05Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { bean = ((org.qii.weiciyuan.bean.MessageListBean) (savedInstanceState.getSerializable(\"bean\"))); }else { bean = org.qii.weiciyuan.support.database.DatabaseManager.getInstance().getHomeLineMsgList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3527/buggy-version/src.org.qii.weiciyuan.ui.timeline.FriendsTimeLineFragment.java", "BodyUseAPI": ["android.os.Bundle.getSerializable(java.lang.String)"], "Fixed commit": "91f6ca326875db6086b27adeb4e419f8f80af16c", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-08-09T14:12:05Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (errorCode == (ir.rasen.charsoo.controller.helper.ServerAnswer.NETWORK_CONNECTION_ERROR)) { showNetworkFailed(true); }else if (!(dialogMessage.isShowing())) { dialogMessage.show(); dialogMessage.setMessage(ir.rasen.charsoo.controller.helper.ServerAnswer.getError(this, errorCode, ((callerStringID + \">\") + (this.getLocalClassName())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/9080/buggy-version/app.src.main.java.ir.rasen.charsoo.view.activity.ActivityUserProfile.java", "BodyUseAPI": ["ir.rasen.charsoo.view.dialog.DialogMessage.setMessage(ir.rasen.charsoo.controller.helper.ServerAnswer.getError(this, errorCode, ((callerStringID + \">\") + (this.getLocalClassName()))))", "ir.rasen.charsoo.controller.helper.ServerAnswer.getError(ir.rasen.charsoo.view.activity.ActivityUserProfile,java.lang.Integer,((callerStringID + \">\") + (this.getLocalClassName())))"], "Fixed commit": "54de355b0e9ff2baf719dcdcb5ef38de60eaa014", "Url": "https://api.github.com/repos/rasenir/charsoo", "Date": "2015-07-14T06:21:19Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((getMZTabFile()) == null) { java.lang.String errorMsgs = \"\"; throw new java.io.IOException((((\"The following errors occurred while parsing mzTab file '\" + (tabFile.getName())) + \"\\'\\n\") + (getErrorList().toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3231/buggy-version/src.main.java.uk.ac.ebi.pride.utilities.data.io.file.MzTabUnmarshallerAdaptor.java", "BodyUseAPI": [], "Fixed commit": "b78ae29218084716d4846556b5ad4349b0d06ae7", "Url": "https://api.github.com/repos/PRIDE-Utilities/ms-data-core-api", "Date": "2016-10-18T10:47:00Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (postflag) myListener.onLoginSuccessful();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1227/buggy-version/src.com.example.bidit.LoginDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "c708fa29dceadf58cad631733149652fe9d753c5", "Url": "https://api.github.com/repos/aluong91/cse190", "Date": "2014-03-16T21:36:08Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input.length) == 0) { return new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6291/buggy-version/hazelcast.src.main.java.com.hazelcast.nio.IOUtil.java", "BodyUseAPI": [], "Fixed commit": "e751f0fdd6b88a0190b9814e4fcd8c452ddbb777", "Url": "https://api.github.com/repos/Donnerbart/hazelcast", "Date": "2015-12-09T19:58:18Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.eclipse.tcf.te.runtime.utils.Host.isWindowsHost()) java.util.Collections.sort(keys);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7760/buggy-version/target_explorer.plugins.org.eclipse.tcf.te.runtime.src.org.eclipse.tcf.te.runtime.utils.Env.java", "BodyUseAPI": [], "Fixed commit": "efb1d23573e5ad4ae4305e5749b6ba71ad2a3a77", "Url": "https://api.github.com/repos/eclipse/tcf", "Date": "2015-01-09T10:03:14Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dao.TransactionDao.getInstance().getPendTransByUserIdOp(int,Transaction.TRANS_TYPE_BUY)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((transactions.size()) != 0) { for (com.pojo.Transaction t : transactions) { avaiBalance -= t.getAmount(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2673/buggy-version/versat.src.com.action.FundAction.java", "BodyUseAPI": [], "Fixed commit": "c0ee3e72bd56764c2bf80fa308adc502a7f76e35", "Url": "https://api.github.com/repos/keweiw/versat", "Date": "2013-01-27T22:01:50Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dao.TransactionDao.getInstance().getPendTransByUserIdFundId(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((transactions.size()) == 0) { for (com.pojo.Transaction t : transactions) { if ((t.getTransactionType()) == (com.pojo.Transaction.TRANS_TYPE_SELL)) { avaiShares -= t.getShares(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2673/buggy-version/versat.src.com.action.FundAction.java", "BodyUseAPI": [], "Fixed commit": "c0ee3e72bd56764c2bf80fa308adc502a7f76e35", "Url": "https://api.github.com/repos/keweiw/versat", "Date": "2013-01-27T22:01:50Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sorcer.resolver.Resolver.resolveSimpleName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (result != null) { cache.put(name, result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6308/buggy-version/tools.sos-boot.src.main.java.sorcer.boot.util.JarClassPathHelper.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.io.File>.put(java.lang.String,java.io.File)"], "Fixed commit": "4f45509b9fe622259af00fb22519be29de314b16", "Url": "https://api.github.com/repos/sorcersoft/sorcer", "Date": "2013-09-09T15:34:40Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sorcer.resolver.ArtifactResolver.resolveSimpleName(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (relPath == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6308/buggy-version/sos.sos-env.src.main.java.sorcer.resolver.Resolver.java", "BodyUseAPI": [], "Fixed commit": "4f45509b9fe622259af00fb22519be29de314b16", "Url": "https://api.github.com/repos/sorcersoft/sorcer", "Date": "2013-09-09T15:34:40Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (preamble == null) { preamble = \"\"; }else if (!((preamble == null) || (preamble.trim().equals(\"\")))) { preamble = preamble + \". \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4029/buggy-version/src.main.java.com.sandy.capitalyst.util.Utils.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "3b804d59cf6f1d3ab2d6df2670239b1c1b8759c8", "Url": "https://api.github.com/repos/deb-sandeep/Capitalyst", "Date": "2016-10-25T23:58:57Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.SharedTranscript.getOnlySharedTranscript()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(ourText.getTranscript().equals(\"\"))) { toAdd = \"\\t\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3470/buggy-version/app.controllers.Application.java", "BodyUseAPI": [], "Fixed commit": "8938d087cd02c3df87e598ff9b9e2a75a4480c8f", "Url": "https://api.github.com/repos/Rice-Scalable-Health/SPeach-Broadcast-Web", "Date": "2014-04-02T16:35:24Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<com.capgemini.starterkit.restclient.dataprovider.data.AuthorVO>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(author.getFirstName().isEmpty())) { builder.append(((author.getFirstName()) + \" \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3046/buggy-version/src.main.java.com.capgemini.starterkit.restclient.mapper.AuthorMapper.java", "BodyUseAPI": ["java.lang.StringBuilder.append(((author.getFirstName()) + \" \"))", "com.capgemini.starterkit.restclient.dataprovider.data.AuthorVO.getFirstName()"], "Fixed commit": "fafb5f5a51c52fbdf001678780e365d22cbded04", "Url": "https://api.github.com/repos/KJRG/RestClient", "Date": "2015-09-02T14:22:40Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((authorsName.length) > 1) { firstName = fullName.substring(0, (((fullName.length()) - (lastName.length())) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3046/buggy-version/src.main.java.com.capgemini.starterkit.restclient.mapper.AuthorMapper.java", "BodyUseAPI": [], "Fixed commit": "fafb5f5a51c52fbdf001678780e365d22cbded04", "Url": "https://api.github.com/repos/KJRG/RestClient", "Date": "2015-09-02T14:22:40Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MCostElement.COSTELEMENTTYPE_Material.equals(costElement.getCostElementType())) { if ((model.getPriceActual().signum()) != 0) costThisLevel = model.getPriceActual(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8178/buggy-version/base.src.org.adempiere.engine.CostEngine.java", "BodyUseAPI": [], "Fixed commit": "dcfd6f5d050075c8dddf235b71636e2eb654f6e8", "Url": "https://api.github.com/repos/mckayERP/adempiere", "Date": "2015-03-02T00:18:04Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.forgeessentials.economy.shop.ShopManager.shopTags.isEmpty())) LoggingHandler.felog.info((\"DEBUG shopTags(0) type = \" + (com.forgeessentials.economy.shop.ShopManager.shopTags.iterator().next())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7016/buggy-version/src.main.java.com.forgeessentials.economy.shop.ShopManager.java", "BodyUseAPI": ["java.util.Iterator<java.lang.String>.next()", "java.util.Set<java.lang.String>.iterator()", "LoggingHandler.felog.info(java.lang.String)"], "Fixed commit": "efdf2fd6b8c53c6bc522a148774b0b8b092f6d42", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentials", "Date": "2015-11-05T09:10:34Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (columnValue instanceof byte[]) { row.put(columnName, new java.lang.String(((byte[]) (columnValue)))); }else { row.put(columnName, columnValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3806/buggy-version/src.com.topcoder.node.jdbc.InformixWrapper.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)"], "Fixed commit": "5dd48a3f7a1f682b2870ef2f0875041406821706", "Url": "https://api.github.com/repos/cloudspokes/informix-wrapper", "Date": "2014-01-08T13:54:12Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(meth.isAbstract())) analysisGraph = new com.juliasoft.dexstudio.flow.FlowNode(meth.getCode().getInstructionList());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4566/buggy-version/main.src.com.juliasoft.dexstudio.tab.DexTreeTab.java", "BodyUseAPI": [], "Fixed commit": "be9ab6a891a72a5d8979f78869f095df58926d1d", "Url": "https://api.github.com/repos/JuliaSoft/DexStudio", "Date": "2014-06-16T12:43:29Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.quimian.setalyzer.Segmenter.segment(boofcv.struct.image.ImageUInt8)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cards.size()) > 0) { displayImage(si.getSubImage(cards.get(0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/846/buggy-version/Setalyzer.src.com.quimian.setalyzer.SetViewerActivity.java", "BodyUseAPI": ["com.quimian.setalyzer.SetViewerActivity.displayImage(si.getSubImage(cards.get(0)))", "com.quimian.setalyzer.util.SubImage.getSubImage(float[])", "java.util.List<float[]>.get(int)"], "Fixed commit": "43a23bbf37eeda9c42da9e22b4a375d92073f305", "Url": "https://api.github.com/repos/willscott/setalyzer", "Date": "2012-12-05T18:12:50Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.Spinner.getSelectedItemPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (method == (Alarm.QR_CODE)) { if ((qrSpinner.getSelectedItemPosition()) == (android.widget.Spinner.INVALID_POSITION)) { android.widget.Toast.makeText(this, \"No QR code selected!\", Toast.LENGTH_SHORT).show(); return; } qr = qrSpinnerAdapter.getItem(qrSpinner.getSelectedItemPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6546/buggy-version/app.src.main.java.com.android.vyvojmobilapp.alarmingmath.AlarmCreateActivity.java", "BodyUseAPI": [], "Fixed commit": "f26fda4e194748277f57ffdbdbe016617fd097bd", "Url": "https://api.github.com/repos/honzatran/AlarmingMath", "Date": "2015-02-01T20:03:49Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["resultPageDTO.getDegreeCurricularPlan().getExecutionDegreeByAcademicInterval(currentExecutionSemester.getAcademicInterval())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (currentExecutionDegree != null) { currentCoordinator = currentExecutionDegree.getCoordinatorByTeacher(net.sourceforge.fenixedu.injectionCode.AccessControl.getPerson()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3084/buggy-version/src.main.java.net.sourceforge.fenixedu.presentationTier.Action.coordinator.inquiries.ViewInquiriesResultsForCoordinatorDA.java", "BodyUseAPI": ["net.sourceforge.fenixedu.domain.ExecutionDegree.getCoordinatorByTeacher(net.sourceforge.fenixedu.injectionCode.AccessControl.getPerson())"], "Fixed commit": "c195a897a1643b385ebe8d47a014cc54c9ba9968", "Url": "https://api.github.com/repos/joaollq/fenix", "Date": "2013-10-24T17:50:34Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isChConnected(ch)) { io.subutai.common.command.CommandResult result = ch.execute(new io.subutai.common.command.RequestBuilder(command).withTimeout(10000)); if ((result.getExitCode()) != 0) { throw new io.subutai.common.command.CommandException(java.lang.String.format(\"Error to execute command: %s. %s\", command, result.getStdErr())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/796/buggy-version/management.server.core.hub-manager.hub-manager-impl.src.main.java.io.subutai.core.hubmanager.impl.appscale.AppScaleManager.java", "BodyUseAPI": ["io.subutai.common.peer.ContainerHost.execute(new io.subutai.common.command.RequestBuilder(command).withTimeout(10000))"], "Fixed commit": "da1ef28e550ccdf7206b48723b6951487d16f2f3", "Url": "https://api.github.com/repos/asanaliev/base", "Date": "2016-06-01T21:02:12Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_isDone) == false) { setOverdueStatus(); updateFloatingStatus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7781/buggy-version/src.bakatxt.core.Task.java", "BodyUseAPI": [], "Fixed commit": "101987b1e6af29a1feebb3da0ecea00f2a464cd6", "Url": "https://api.github.com/repos/cs2103aug2014-t09-4j/main", "Date": "2014-11-03T12:27:56Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_isDone) == false) { setOverdueStatus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7781/buggy-version/src.bakatxt.core.Task.java", "BodyUseAPI": [], "Fixed commit": "101987b1e6af29a1feebb3da0ecea00f2a464cd6", "Url": "https://api.github.com/repos/cs2103aug2014-t09-4j/main", "Date": "2014-11-03T12:27:56Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.robotframework.ide.eclipse.main.plugin.tableeditor.source.DocumentUtilities.findVariable(org.eclipse.jface.text.IDocument,assist.isTsvFile(),int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (varRegion.isPresent()) { lengthToReplace = varRegion.get().getLength(); }else { lengthToReplace = (liveVarRegion.isPresent()) ? offset - (liveVarRegion.get().getOffset()) : 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4038/buggy-version/src.Eclipse-IDE.org.robotframework.ide.eclipse.main.plugin.src.org.robotframework.ide.eclipse.main.plugin.tableeditor.source.assist.VariablesAssistProcessor.java", "BodyUseAPI": ["varRegion.get().getLength()", "com.google.common.base.Optional<org.eclipse.jface.text.IRegion>.get()"], "Fixed commit": "d573a1256aa5724fe5e970b00c4b60eda308877a", "Url": "https://api.github.com/repos/nokia/RED", "Date": "2017-01-10T14:47:28Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vector.sub(centers[i]).abs()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (kfuzzy.algo.KFuzzyAlgorithm.EQ(distance, 0)) probabilities[i] = java.lang.Double.MAX_VALUE; else probabilities[i] = java.lang.Math.pow((1.0 / distance), power);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8240/buggy-version/java.src.kfuzzy.algo.KFuzzyAlgorithm.java", "BodyUseAPI": ["java.lang.Math.pow(double,double)"], "Fixed commit": "9b330f11be63e49ee5db02a70f261dd285ffb808", "Url": "https://api.github.com/repos/ygorshenin/kfuzzy", "Date": "2011-05-01T19:25:25Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nonZeroIndices) == null) { nonZeroIndices = vector.keys(); java.util.Arrays.sort(nonZeroIndices); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8622/buggy-version/src.main.java.edu.ucla.sspace.vector.SparseHashDoubleVector.java", "BodyUseAPI": [], "Fixed commit": "b8161139a4cfe3e4191a2315a9773d6c34cea4e0", "Url": "https://api.github.com/repos/tuxdna/S-Space", "Date": "2013-05-17T12:34:28Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((frag.getSize()) <= 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8009/buggy-version/src.main.java.net.imglib2.roi.labeling.LabelRegions.java", "BodyUseAPI": [], "Fixed commit": "2ccd92b955b296c47a3b48ee424968d5e5791a4a", "Url": "https://api.github.com/repos/imglib/imglib2-roi", "Date": "2015-06-25T12:27:48Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mGoogleApiClient.isConnected()) { stopLocationUpdates(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8998/buggy-version/app.src.main.java.com.polimi.jaj.roarify.fragments.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "2ff8782c69e38349f0e422e07243546b2e18d886", "Url": "https://api.github.com/repos/jramirezc93/Roarify-App", "Date": "2017-01-17T18:45:52Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.carbondata.core.metadata.schema.table.CarbonTable.getPrimitiveDimensionByName(key.getTableUniqueName(),key.getColumnName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null != dimension) { if ((tableMap.get(key.getTableUniqueName())) == null) { synchronized(tableMap) { if ((tableMap.get(key.getTableUniqueName())) == null) { tableMap.put(key.getTableUniqueName(), new org.apache.carbondata.core.dictionary.generator.TableDictionaryGenerator(dimension)); }else { tableMap.get(key.getTableUniqueName()).updateGenerator(dimension); } } }else { tableMap.get(key.getTableUniqueName()).updateGenerator(dimension); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4998/buggy-version/core.src.main.java.org.apache.carbondata.core.dictionary.generator.ServerDictionaryGenerator.java", "BodyUseAPI": ["tableMap.get(key.getTableUniqueName()).updateGenerator(org.apache.carbondata.core.metadata.schema.table.column.CarbonDimension)", "java.util.Map<java.lang.String, org.apache.carbondata.core.dictionary.generator.TableDictionaryGenerator>.put(key.getTableUniqueName(),org.apache.carbondata.core.dictionary.generator.TableDictionaryGenerator)", "tableMap.get(key.getTableUniqueName()).updateGenerator(org.apache.carbondata.core.metadata.schema.table.column.CarbonDimension)"], "Fixed commit": "82f7198b85afc0fd8dfe62d196537370f32be438", "Url": "https://api.github.com/repos/sraghunandan/carbondata-1", "Date": "2017-08-31T05:23:08Z"},
{"Line": "=>719", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savingsProductInterestRateCharts != null) { for (org.mifosplatform.portfolio.savings.domain.SavingsProductInterestRateChart interestRateChart : savingsProductInterestRateCharts) { interestRateChart.updateSavingsProduct(this); } this.savingsProductInterestRateCharts = savingsProductInterestRateCharts; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4234/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.savings.domain.SavingsProduct.java", "BodyUseAPI": [], "Fixed commit": "bb8a0cf3a19434388ed9df6c43200be4131783e0", "Url": "https://api.github.com/repos/Musoni/mifosx", "Date": "2017-07-13T11:51:25Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["T.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (parent != null) { indexOfPart = getIndexOfPartInParent(parent); if (indexOfPart < 0) { throw new java.lang.RuntimeException(\"editPart is not a child of it's parent\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6171/buggy-version/org.mule.tooling.jubula.accessibility.gef.src.org.mule.tooling.jubula.accessibility.gef.EntityEditPartIdentifier.java", "BodyUseAPI": ["org.mule.tooling.jubula.accessibility.gef.EntityEditPartIdentifier<T>.getIndexOfPartInParent(org.eclipse.gef.EditPart)"], "Fixed commit": "f10788cd6cd539843d5f5592ff4c8d5a0cec1446", "Url": "https://api.github.com/repos/mulesoft/jubula-accessibility", "Date": "2013-11-06T17:39:38Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getConfig().isBoolean(\"config.die_below_bedrock_level\")) { boolean die_below_zero = this.getConfig().getBoolean(\"config.die_below_bedrock_level\"); if (die_below_zero) { pli.getArenaListener().loseY = 100; } }else { pli.getArenaListener().loseY = this.getConfig().getInt(\"config.die_below_bedrock_level\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5049/buggy-version/src.main.java.com.comze_instancelabs.gungame.Main.java", "BodyUseAPI": [], "Fixed commit": "b9e613b3d31ca1b95dcefed756cf0b125a8cdadb", "Url": "https://api.github.com/repos/MysticCity/Gungame", "Date": "2016-09-18T10:56:15Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(i < (code.length()))) return textResult;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8966/buggy-version/src.Golomb.java", "BodyUseAPI": [], "Fixed commit": "5f4f9bd266d4dc6bcc0e996e9bd836834d494a47", "Url": "https://api.github.com/repos/RafaelCopat/TGA-T1", "Date": "2016-09-23T20:23:25Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((holder.getAdapterPosition()) == (-1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1002/buggy-version/horizontalcalendar.src.main.java.devs.mulham.horizontalcalendar.HorizontalCalendarAdapter.java", "BodyUseAPI": [], "Fixed commit": "fd92d12854f8340f9a1de450de4a83f17c5111b7", "Url": "https://api.github.com/repos/barbeu/Horizontal-Calendar", "Date": "2017-05-19T08:07:43Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetType.equals(reference)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/792/buggy-version/src.main.java.spoon.reflect.visitor.ImportScannerImpl.java", "BodyUseAPI": [], "Fixed commit": "81c8ef956e487bfe3d33e5b61a89f9e26e5abc3c", "Url": "https://api.github.com/repos/surli/spoon", "Date": "2017-12-07T10:30:23Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pos) < 10) { putValue(javax.swing.Action.DISPLAYED_MNEMONIC_INDEX_KEY, 0); putValue(javax.swing.Action.MNEMONIC_KEY, javax.swing.KeyStroke.getKeyStroke((\"\" + (pos))).getKeyCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5198/buggy-version/src.main.java.de.onyxbits.scenepainter.gui.RecentAction.java", "BodyUseAPI": ["javax.swing.KeyStroke.getKeyStroke(java.lang.String)", "javax.swing.KeyStroke.getKeyCode()", "de.onyxbits.scenepainter.gui.RecentAction.putValue(java.lang.String,int)"], "Fixed commit": "49d0b9133a7ea3109021d4f55626ef5aa6b703f4", "Url": "https://api.github.com/repos/onyxbits/ScenePainter", "Date": "2011-03-21T22:46:56Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selection.length()) == 2) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1023/buggy-version/src.main.java.org.asciidoc.intellij.actions.asciidoc.SimpleFormatAsciiDocAction.java", "BodyUseAPI": [], "Fixed commit": "00ffd3c21ed6a79920a5e2e139a0f9d8ca22d794", "Url": "https://api.github.com/repos/bodiam/asciidoctor-intellij-plugin", "Date": "2015-11-13T08:26:19Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selection.length()) == 1) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1023/buggy-version/src.main.java.org.asciidoc.intellij.actions.asciidoc.SimpleFormatAsciiDocAction.java", "BodyUseAPI": [], "Fixed commit": "00ffd3c21ed6a79920a5e2e139a0f9d8ca22d794", "Url": "https://api.github.com/repos/bodiam/asciidoctor-intellij-plugin", "Date": "2015-11-13T08:26:19Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.magnetstreet.swt.extra.window.Window.hotKeyManager) == null) { com.magnetstreet.swt.extra.window.Window.hotKeyManager = new com.magnetstreet.swt.extra.window.hotkey.HotKeyManager(getDisplay()); com.magnetstreet.swt.extra.window.Window.hotKeyManager.registerHotKey('/', ((org.eclipse.swt.SWT.SHIFT) | (org.eclipse.swt.SWT.CTRL)), new java.lang.Runnable() { public void run() { com.magnetstreet.swt.extra.window.Window.hotKeyManager.showHotkeyHelpDialog(); } }, \"Opens the hot key help dialog.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1319/buggy-version/swt-bean-widgets-core.src.main.java.com.magnetstreet.swt.extra.window.Window.java", "BodyUseAPI": [], "Fixed commit": "7323835778a22791270f23ffac2c97c0da6ffdf7", "Url": "https://api.github.com/repos/martin1yness/swt-bean-widgets", "Date": "2011-04-07T20:54:25Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cerberus.util.ParameterParserUtil.parseStringParamAndDecodeAndSanitize(request.getParameter(\"id\"),java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.cerberus.util.StringUtil.isNullOrEmpty(id)) { msg = new org.cerberus.engine.entity.MessageEvent(org.cerberus.enums.MessageEventEnum.DATA_OPERATION_ERROR_EXPECTED); msg.setDescription(msg.getDescription().replace(\"%ITEM%\", \"User\").replace(\"%OPERATION%\", \"Update\").replace(\"%REASON%\", \"User name is missing!\")); finalAnswer.setResultMessage(msg); }else if (org.cerberus.util.StringUtil.isNullOrEmpty(login)) { msg = new org.cerberus.engine.entity.MessageEvent(org.cerberus.enums.MessageEventEnum.DATA_OPERATION_ERROR_EXPECTED); msg.setDescription(msg.getDescription().replace(\"%ITEM%\", \"User\").replace(\"%OPERATION%\", \"Update\").replace(\"%REASON%\", \"User name is missing!\")); finalAnswer.setResultMessage(msg); }else if (!userHasPermissions) { msg = new org.cerberus.engine.entity.MessageEvent(org.cerberus.enums.MessageEventEnum.DATA_OPERATION_ERROR_EXPECTED); msg.setDescription(msg.getDescription().replace(\"%ITEM%\", \"User\").replace(\"%OPERATION%\", \"Update\").replace(\"%REASON%\", \"You don't have the right to do that\")); finalAnswer.setResultMessage(msg); }else { org.cerberus.crud.service.IUserService userService = appContext.getBean(org.cerberus.crud.service.IUserService.class); org.cerberus.crud.service.IUserGroupService userGroupService = appContext.getBean(org.cerberus.crud.service.impl.UserGroupService.class); org.cerberus.crud.service.IUserSystemService userSystemService = appContext.getBean(org.cerberus.crud.service.IUserSystemService.class); org.cerberus.util.answer.AnswerItem resp = userService.readByKey(id); if (!((resp.isCodeEquals(MessageEventEnum.DATA_OPERATION_OK.getCode())) && ((resp.getItem()) != null))) { finalAnswer = org.cerberus.util.answer.AnswerUtil.agregateAnswer(finalAnswer, ((org.cerberus.util.answer.Answer) (resp))); }else { java.util.LinkedList<org.cerberus.crud.entity.UserGroup> newGroups = new java.util.LinkedList<>(); for (int i = 0; i < (JSONGroups.length()); i++) { newGroups.add(factoryGroup.create(id, JSONGroups.getString(i))); } java.util.LinkedList<org.cerberus.crud.entity.UserSystem> newSystems = new java.util.LinkedList<>(); for (int i = 0; i < (JSONSystems.length()); i++) { newSystems.add(userSystemFactory.create(id, JSONSystems.getString(i))); } org.cerberus.crud.entity.User userData = ((org.cerberus.crud.entity.User) (resp.getItem())); finalAnswer = userGroupService.updateGroupsByUser(userData, newGroups); if (finalAnswer.isCodeEquals(MessageEventEnum.DATA_OPERATION_OK.getCode())) { finalAnswer = userSystemService.updateSystemsByUser(userData, newSystems); if (finalAnswer.isCodeEquals(MessageEventEnum.DATA_OPERATION_OK.getCode())) { userData.setLogin(login); userData.setName(name); userData.setTeam(team); userData.setDefaultSystem(defaultSystem); userData.setRequest(userRequest); userData.setEmail(email); ans = userService.update(userData); finalAnswer = org.cerberus.util.answer.AnswerUtil.agregateAnswer(finalAnswer, ((org.cerberus.util.answer.Answer) (ans))); if (ans.isCodeEquals(MessageEventEnum.DATA_OPERATION_OK.getCode())) { org.cerberus.crud.service.ILogEventService logEventService = appContext.getBean(org.cerberus.crud.service.impl.LogEventService.class); logEventService.createPrivateCalls(\"/UpdateUser2\", \"UPDATE\", ((\"Update User : ['\" + id) + \"']\"), request); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7606/buggy-version/source.src.main.java.org.cerberus.servlet.crud.usermanagement.UpdateUser2.java", "BodyUseAPI": ["java.util.LinkedList<org.cerberus.crud.entity.UserGroup>.add(factoryGroup.create(id, JSONGroups.getString(i)))", "java.util.LinkedList<org.cerberus.crud.entity.UserSystem>.add(userSystemFactory.create(id, JSONSystems.getString(i)))", "org.cerberus.crud.service.IUserService.readByKey(java.lang.String)", "org.cerberus.crud.factory.IFactoryUserGroup.create(java.lang.String,JSONGroups.getString(i))", "org.cerberus.crud.service.ILogEventService.createPrivateCalls(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)", "org.cerberus.crud.factory.IFactoryUserSystem.create(java.lang.String,JSONSystems.getString(i))"], "Fixed commit": "9cb78ad2f35465a89b48c01c24f4afad8eb534c7", "Url": "https://api.github.com/repos/cerberustesting/cerberus-source", "Date": "2016-10-27T15:14:09Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((unit.getAgent()) != null) { unit.getAgent().removeUnit(unit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/538/buggy-version/KBDeX.src.kbdex.model.kbmodel.KBWorld.java", "BodyUseAPI": ["kbdex.model.kbmodel.KBDiscourseUnit.getAgent()", "unit.getAgent().removeUnit(kbdex.model.kbmodel.KBDiscourseUnit)"], "Fixed commit": "1b89946c7a0775b8a980c59966d343855148928a", "Url": "https://api.github.com/repos/macc704/KBDeX", "Date": "2014-10-10T19:45:22Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["unitNetworkController.getModel().getGraph().getNeighbors(kbdex.model.kbmodel.KBDiscourseUnit)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (neighbors != null) { for (kbdex.model.kbmodel.KBDiscourseUnit neighbor : neighbors) { agentNetworkController.getModel().removeRelation(unit.getAgent(), neighbor.getAgent(), new kbdex.model.kbmodel.KBAgentRelationReason(unit, neighbor)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/538/buggy-version/KBDeX.src.kbdex.controller.KBWorldController.java", "BodyUseAPI": [], "Fixed commit": "1b89946c7a0775b8a980c59966d343855148928a", "Url": "https://api.github.com/repos/macc704/KBDeX", "Date": "2014-10-10T19:45:22Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activity) instanceof com.engstuff.coloriphornia.interfaces.HideInfoListener) { ((com.engstuff.coloriphornia.interfaces.HideInfoListener) (activity)).onHideInfoInvoked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7967/buggy-version/app.src.main.java.com.engstuff.coloriphornia.fragments.FragmentFullScreenColor.java", "BodyUseAPI": [], "Fixed commit": "a5ad6578e05773e5b87c49a2127f02b131ab9bb1", "Url": "https://api.github.com/repos/ruan65/Colorifornia", "Date": "2015-04-24T21:30:23Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activity) instanceof com.engstuff.coloriphornia.interfaces.HideInfoListener) { ((com.engstuff.coloriphornia.interfaces.HideInfoListener) (activity)).onHideInfoInvoked(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7967/buggy-version/app.src.main.java.com.engstuff.coloriphornia.fragments.FragmentFullScreenColor.java", "BodyUseAPI": [], "Fixed commit": "a5ad6578e05773e5b87c49a2127f02b131ab9bb1", "Url": "https://api.github.com/repos/ruan65/Colorifornia", "Date": "2015-04-24T21:30:23Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pigatron.admin.domain.repository.UserRepository.findByTokenSeries(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (user != null) { return new org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken(user.getUsername(), user.getTokenSeries(), user.getTokenValue(), user.getTokenDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/160/buggy-version/server-shop.src.main.java.com.pigatron.admin.service.security.UserTokenRepository.java", "BodyUseAPI": ["com.pigatron.admin.domain.entity.user.User.getUsername()", "com.pigatron.admin.domain.entity.user.User.getTokenDate()", "com.pigatron.admin.domain.entity.user.User.getTokenSeries()", "com.pigatron.admin.domain.entity.user.User.getTokenValue()"], "Fixed commit": "ade9eaa7562080a4b8cd04baaa1aecb3c073bbae", "Url": "https://api.github.com/repos/pigatron-industries/pigatron-web", "Date": "2016-03-14T21:35:09Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newfile.exists()) { int newNumId; for (int i = 0; i <= count; i++) { java.io.File newFilePic = new java.io.File(sdCardRoot, ((((\"PresentData/faceDatabase/untrainedCrops/\" + idNum) + \"_\") + i) + \".jpg\")); if (newFilePic.exists()) { }else { newNumId = i; java.io.File newFilePic2 = new java.io.File(sdCardRoot, ((((\"PresentData/faceDatabase/untrainedCrops/\" + idNum) + \"_\") + newNumId) + \".jpg\")); if (oldfile.renameTo(newFilePic2)) { faceCrops.get(getAdapterPosition()).setFileName(newFilePic2.getName()); faceCrops.get(getAdapterPosition()).setPath(newFilePic2.getAbsolutePath()); android.util.Log.i(com.example.dale.cs198.CropImageAdapter.TAG, \"Rename succesful\"); android.util.Log.i(com.example.dale.cs198.CropImageAdapter.TAG, (((\"The renamed file is: \" + (faceCrops.get(getAdapterPosition()).getFileName())) + \"\\n\") + (faceCrops.get(getAdapterPosition()).getPath()))); }else { android.util.Log.i(com.example.dale.cs198.CropImageAdapter.TAG, \"Rename failed\"); } break; } } }else { if (oldfile.renameTo(newfile)) { faceCrops.get(getAdapterPosition()).setFileName(newfile.getName()); faceCrops.get(getAdapterPosition()).setPath(newfile.getAbsolutePath()); android.util.Log.i(com.example.dale.cs198.CropImageAdapter.TAG, \"Rename succesful\"); android.util.Log.i(com.example.dale.cs198.CropImageAdapter.TAG, (((\"The renamed file is: \" + (faceCrops.get(getAdapterPosition()).getFileName())) + \"\\n\") + (faceCrops.get(getAdapterPosition()).getPath()))); }else { android.util.Log.i(com.example.dale.cs198.CropImageAdapter.TAG, \"Rename failed\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/703/buggy-version/app.src.main.java.com.example.dale.cs198.CropImageAdapter.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "java.io.File.getName()", "faceCrops.get(getAdapterPosition()).setPath(java.lang.String)", "java.io.File.renameTo(java.io.File)", "faceCrops.get(getAdapterPosition()).setFileName(java.lang.String)"], "Fixed commit": "a655daca1138e8286f93d62c175516e1f14c8ed2", "Url": "https://api.github.com/repos/francisdale/CS198", "Date": "2016-03-07T03:58:48Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((infoMap) != null) enviarInformacionEntornoGrafico(infoMap);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6880/buggy-version/src.Networking.Conexion_SMA.java", "BodyUseAPI": [], "Fixed commit": "73f3c104edd5e52e42b68627fe5d9963ea7cedc4", "Url": "https://api.github.com/repos/dianjuar/ACO", "Date": "2016-02-16T21:52:24Z"},
{"Line": "=>4558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ODNBXlite.oldLightEngine)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2913/buggy-version/src.client.nbxlite.World.java", "BodyUseAPI": [], "Fixed commit": "e92d18ac4cdc64e75ff546be4187fa7fe9b46a0a", "Url": "https://api.github.com/repos/Exalm/Minecraft-mods", "Date": "2012-10-07T17:19:51Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (negateNextValue) { value = -value; negateNextValue = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3436/buggy-version/src.parsingCalculator.ExpressionBuilder.java", "BodyUseAPI": [], "Fixed commit": "42ffe45358439cbeeb8e86ab78aefc6f444a5c26", "Url": "https://api.github.com/repos/sbohmann/ParsingCalculator", "Date": "2017-10-01T14:43:46Z"},
{"Line": "=>737", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userData.getUserDataMeta()) == null) { userData.setUserDataMeta(new com.spilgames.spilsdk.models.userdata.UserDataMeta()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4658/buggy-version/spilsdk.src.main.java.com.spilgames.spilsdk.userdata.UserDataManager.java", "BodyUseAPI": ["com.spilgames.spilsdk.models.userdata.UserData.setUserDataMeta(com.spilgames.spilsdk.models.userdata.UserDataMeta)"], "Fixed commit": "360b2ede7332037f8d674cf038aaad550655c696", "Url": "https://api.github.com/repos/spilgames/spil-android-sdk", "Date": "2017-11-07T15:44:13Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) { dir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8728/buggy-version/src.main.java.com.skcraft.launcher.Instance.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "00de7cde2d338197d63775e04dd158d04adebefc", "Url": "https://api.github.com/repos/Mrbrutal/launcher", "Date": "2014-07-28T20:36:05Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (params.getBool(\"UseDunbrackRotamers\")) { templateLibBuilder.addBackboneDependentRotamers(params.readPath(\"DUNBRACKROTFILE\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7656/buggy-version/src.edu.duke.cs.osprey.control.ConfigFileParser.java", "BodyUseAPI": ["ResidueTemplateLibrary.Builder.addBackboneDependentRotamers(params.readPath(\"DUNBRACKROTFILE\"))", "edu.duke.cs.osprey.control.ParamSet.readPath(java.lang.String)"], "Fixed commit": "9846012f8e6ddde5ea17611aa8eb43c5724c201e", "Url": "https://api.github.com/repos/donaldlab/OSPREY3", "Date": "2017-07-21T18:36:12Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (operation.getArtifact().isPresent()) { myApp.addFilePath(operation.getArtifact().get().getFilePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/871/buggy-version/server.src.main.java.org.opentosca.toscana.plugins.cloudfoundry.visitors.CloudFoundryNodeVisitor.java", "BodyUseAPI": ["org.opentosca.toscana.plugins.cloudfoundry.CloudFoundryApplication.addFilePath(operation.getArtifact().get().getFilePath())", "operation.getArtifact().get()", "org.opentosca.toscana.model.operation.Operation.getArtifact()", "operation.getArtifact().get().getFilePath()"], "Fixed commit": "43ce016d40810773a5cdfdab7db584f890c6140a", "Url": "https://api.github.com/repos/StuPro-TOSCAna/TOSCAna", "Date": "2017-12-02T00:11:00Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view) != null) view.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3714/buggy-version/core.src.tankRevolution.GameHolder.java", "BodyUseAPI": [], "Fixed commit": "81e063a6974dc36b05e6a14b85a02077d931a57a", "Url": "https://api.github.com/repos/skarrman/Wapitihjort", "Date": "2017-05-23T13:58:26Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (perkValue > 0) { perkTable.add(getLabel(((((perk.key.getLabel()) + \" (\") + (perkValue.toString())) + \")\"), skin, Color.BLACK)).align(Align.left).row(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7296/buggy-version/core.src.com.majalis.screens.CharacterScreen.java", "BodyUseAPI": [], "Fixed commit": "d6d9174340a4992bca7541aec091ea9fac02d552", "Url": "https://api.github.com/repos/majalistic/tales-of-androgyny", "Date": "2017-11-14T03:49:13Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["req.getSession().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) { resp.sendRedirect(\"/login\"); }else { int qty = java.lang.Integer.valueOf(req.getParameter(\"qty\")); java.lang.Long id = java.lang.Long.valueOf(req.getParameter(\"id\")); entity.order.Order order = ((entity.order.Order) (req.getSession().getAttribute(\"order\"))); service.CartService.newInstance().addProductToCart(order, id, qty); resp.sendRedirect(req.getHeader(\"Referer\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5651/buggy-version/web.WEB-INF.classes.servlet.catalog.ProductServlet.java", "BodyUseAPI": [], "Fixed commit": "9b44f14e9986355d8c7e3ac2be33a95c2492dfca", "Url": "https://api.github.com/repos/AlekseySeth/InternetStore", "Date": "2017-11-27T18:13:15Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((friendlyUnits[i].getShieldedTurnsRemaining()) > 0) { for (int k = 0; k < 100; k++) { java.lang.System.out.println(friendlyUnits[i].getShieldedTurnsRemaining()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4226/buggy-version/src.PlayerAI.java", "BodyUseAPI": ["java.io.PrintStream.println(friendlyUnits[i].getShieldedTurnsRemaining())", "friendlyUnits[i].getShieldedTurnsRemaining()"], "Fixed commit": "ead8179fcaab7ea3fb6569ee5375314ca1648269", "Url": "https://api.github.com/repos/AndreyBorisKhesin/Admain", "Date": "2016-10-02T03:08:10Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.fhir.mapper.emr.DiagnosticReport.getCodedDiagnosis()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.collections4.CollectionUtils.isNotEmpty(codedDiagnosis)) { diagnosisObs = fhirResourceValueMapper.mapObservationForConcept(codedDiagnosis.get(0), org.openmrs.module.fhir.mapper.emr.MRS_CONCEPT_PROCEDURE_DIAGNOSIS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/820/buggy-version/fhirmapper.src.main.java.org.openmrs.module.fhir.mapper.emr.FHIRProcedureMapper.java", "BodyUseAPI": ["java.util.List<org.openmrs.module.fhir.mapper.emr.CodeableConcept>.get(int)", "org.openmrs.module.fhir.mapper.emr.FHIRResourceValueMapper.mapObservationForConcept(codedDiagnosis.get(0),org.openmrs.module.fhir.mapper.emr.MRS_CONCEPT_PROCEDURE_DIAGNOSIS)"], "Fixed commit": "2e86f116c8e26756a715743dcec42d1b9f53d31b", "Url": "https://api.github.com/repos/SharedHealth/openmrs-module-bdshrclient", "Date": "2015-01-27T10:42:31Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.fhir.mapper.emr.DiagnosticReport.getResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.collections4.CollectionUtils.isNotEmpty(diagnosisResult)) { result = fhirResourceValueMapper.mapObservationForConcept(diagnosisResult.get(0).getDisplay(), org.openmrs.module.fhir.mapper.emr.MRS_CONCEPT_PROCEDURE_DIAGNOSTIC_RESULT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/820/buggy-version/fhirmapper.src.main.java.org.openmrs.module.fhir.mapper.emr.FHIRProcedureMapper.java", "BodyUseAPI": ["diagnosisResult.get(0).getDisplay()", "java.util.List<org.openmrs.module.fhir.mapper.emr.ResourceReference>.get(int)", "org.openmrs.module.fhir.mapper.emr.FHIRResourceValueMapper.mapObservationForConcept(diagnosisResult.get(0).getDisplay(),org.openmrs.module.fhir.mapper.emr.MRS_CONCEPT_PROCEDURE_DIAGNOSTIC_RESULT)"], "Fixed commit": "2e86f116c8e26756a715743dcec42d1b9f53d31b", "Url": "https://api.github.com/repos/SharedHealth/openmrs-module-bdshrclient", "Date": "2015-01-27T10:42:31Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.hengtan.nanodegreeapp.stocount.ProductListActivity.mPreviousSelectedStockPeriodPosition) != pos) { com.hengtan.nanodegreeapp.stocount.ProgressBarHelper.ShowProgressBar(progressBarHolder); com.hengtan.nanodegreeapp.stocount.ProductListActivity.mPreviousSelectedStockPeriodPosition = pos; getLoaderManager().restartLoader(com.hengtan.nanodegreeapp.stocount.ProductListActivity.PRODUCT_LOADER, null, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7226/buggy-version/StoCount.app.src.main.java.com.hengtan.nanodegreeapp.stocount.ProductListActivity.java", "BodyUseAPI": [], "Fixed commit": "d759548b3aaf15e4b4962ac55646f253598ff166", "Url": "https://api.github.com/repos/theeheng/CapstoneProject", "Date": "2016-01-12T18:44:19Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.javascript.rhino.Node.getLineno()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((getLastLineOfCurrentComment()) > line) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/85/buggy-version/src.main.java.com.google.javascript.gents.CommentLinkingPass.java", "BodyUseAPI": [], "Fixed commit": "224531cba9252e0edb7354e8792fbb5662e38a4b", "Url": "https://api.github.com/repos/dpurp/clutz", "Date": "2017-01-25T07:38:32Z"},
{"Line": "=>653", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (windowSize > (length())) { subGenes.add(((nextgen.core.feature.GeneWindow) (this))); }else { for (int i = start; i < (((length()) + 1) - windowSize); i = i + stepSize) { nextgen.core.feature.GeneWindow subGene = trimGene(i, (i + windowSize)); if (subGene != null) { subGenes.add(subGene); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1264/buggy-version/src.java.nextgen.core.annotation.Gene.java", "BodyUseAPI": ["nextgen.core.annotation.Gene.trimGene(int,int)"], "Fixed commit": "c3fa76380b70a60a7e476d3997b353ec9ef6aeae", "Url": "https://api.github.com/repos/mgarber/scriptureV2", "Date": "2013-07-31T23:50:39Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (COORD_SPACE.equalsIgnoreCase(\"genomic\")) { model.addFilter(new broad.pda.seq.rap.GenomicSpanFilter(MAX_FRAGMENT_LENGTH)); }else if (COORD_SPACE.equalsIgnoreCase(\"transcriptome\")) { model.addFilter(new broad.pda.seq.rap.FragmentLengthFilter(coordinateSpace, MAX_FRAGMENT_LENGTH)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1264/buggy-version/src.java.broad.pda.seq.rap.GenomeCommandLineProgram.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "c3fa76380b70a60a7e476d3997b353ec9ef6aeae", "Url": "https://api.github.com/repos/mgarber/scriptureV2", "Date": "2013-07-31T23:50:39Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((advancement) == null) { advancementId = -1; }else { advancementId = advancement.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/396/buggy-version/src.main.java.bsaDb.client.home.clientPnls.AdvancementPanel.java", "BodyUseAPI": [], "Fixed commit": "af9d9e9c67fe3a2d3ca956c65879125c82443d75", "Url": "https://api.github.com/repos/nickFr0st/bsaDB", "Date": "2015-05-24T14:51:06Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (COUNT == 0) { mark = 100.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7170/buggy-version/src.ca.projectkarma.gradetrackr.activity.AddEval.java", "BodyUseAPI": [], "Fixed commit": "8ef663c630a3070ce53e08e1456bc74b8f525002", "Url": "https://api.github.com/repos/agnanachandran/gradebook-android", "Date": "2013-09-23T02:10:53Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (prev == null) { mPrevFocusInternal = determineFocalPoint(curr); }else { mPrevFocusInternal = determineFocalPoint(prev); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/109/buggy-version/library.src.main.java.com.almeros.android.multitouch.MoveGestureDetector.java", "BodyUseAPI": ["com.almeros.android.multitouch.MoveGestureDetector.determineFocalPoint(android.view.MotionEvent)"], "Fixed commit": "51001cf7f2d838f30af0387a2d78257a45852611", "Url": "https://api.github.com/repos/skonb/android-gesture-detectors", "Date": "2016-03-12T08:13:43Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lexer.token()) == (com.alibaba.druid.sql.parser.Token.MERGE)) { expr = new com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr(lexer.stringVal()); lexer.nextToken(); }else { expr = this.exprParser.expr(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/291/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlCreateTableParser.java", "BodyUseAPI": ["com.alibaba.druid.sql.dialect.mysql.parser.MySqlCreateTableParser.stringVal()", "com.alibaba.druid.sql.dialect.mysql.parser.MySqlCreateTableParser.nextToken()"], "Fixed commit": "9990e07aaa573ddbb95d276dd7212d5e82c34364", "Url": "https://api.github.com/repos/FlakyTestDetection/druid", "Date": "2017-09-04T06:40:40Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasNext)) { try { if (!(config.getConnection().isClosed())) { config.getConnection().close(); } } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1375/buggy-version/src.main.org.deidentifier.arx.io.ImportAdapterJDBC.java", "BodyUseAPI": [], "Fixed commit": "cdf83c2e1611c3c2f2e8ab8690cd2a7bba2be2f4", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-04-16T18:27:29Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.dom.ParenthesizedExpression.getExpression()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((innerExpr instanceof org.eclipse.jdt.core.dom.ConditionalExpression) && (org.autorefactor.refactoring.ASTHelper.hasType(parentInfixExpr, \"java.lang.String\"))) { return node; }else if ((innerExpr instanceof org.eclipse.jdt.core.dom.Assignment) && (isBooleanOperator(parentInfixExpr.getOperator()))) { return node; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6361/buggy-version/src.main.java.org.autorefactor.refactoring.rules.SimplifyExpressionRefactoring.java", "BodyUseAPI": ["org.eclipse.jdt.core.dom.InfixExpression.getOperator()", "org.autorefactor.refactoring.rules.SimplifyExpressionRefactoring.isBooleanOperator(parentInfixExpr.getOperator())"], "Fixed commit": "7cf2612e779c8dec88e8136362fe0b68b44bc75d", "Url": "https://api.github.com/repos/JnRouvignac/AutoRefactor", "Date": "2013-05-16T14:20:30Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.parser.parse(imageStr).getAsJsonObject().getAsJsonObject(\"query\").getAsJsonObject(\"pages\").getAsJsonObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (images.has(\"images\")) { numOfImages = images.getAsJsonArray(\"images\").size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3725/buggy-version/wawebapp.src.main.java.de.behrfried.wikianalyzer.wawebapp.server.service.JsonWikiAccess.java", "BodyUseAPI": ["images.getAsJsonArray(\"images\").size()", "com.google.gson.JsonObject.getAsJsonArray(java.lang.String)"], "Fixed commit": "462e6aef0b5f6e252aa6255b83c3383df2926d25", "Url": "https://api.github.com/repos/marhkb/wikianalyzer", "Date": "2013-06-28T12:29:30Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg2 == 5) { com.jlhuang.ptuiapi.Intent i = new com.jlhuang.ptuiapi.Intent(this, com.jlhuang.ptuiapi.SeventhActivity.class); startActivity(i); }else { if (arg2 == 6) { com.jlhuang.ptuiapi.Intent i = new com.jlhuang.ptuiapi.Intent(this, com.jlhuang.ptuiapi.EighthActivity.class); startActivity(i); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5132/buggy-version/PTUIAPI.app.src.main.java.com.jlhuang.ptuiapi.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "66fb760bd6f1256103160eef709a619e371cfcf3", "Url": "https://api.github.com/repos/jlhuang1224/PTUI-Projects", "Date": "2017-08-01T09:40:38Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item.getItemType().equals(AppConstants.ITEM_TYPE_RETURNED)) { if (((\"ZDPZL\".equals(property)) || (\"price\".equals(property))) || (\"payAmount\".equals(property))) { return true; }else { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4847/buggy-version/com.topsun.posclient.sales.ui.src.com.topsun.posclient.sales.ui.table.ReturnedCellModify.java", "BodyUseAPI": [], "Fixed commit": "d164d1d834c0dfcc2916061c6be3888111d748ab", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2014-03-03T13:07:17Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (topItem < 0) topItem = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8528/buggy-version/src.com.eleybourn.bookcatalogue.BooksOnBookshelf.java", "BodyUseAPI": [], "Fixed commit": "3dfeea02fccd8585d92c350039fbed318fedaae9", "Url": "https://api.github.com/repos/bctest/Book-Catalogue", "Date": "2012-02-05T13:44:13Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((file.getNamespaces().get(\"*\")) != null) { result = file.getNamespaces().get(\"*\").scope; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/9027/buggy-version/src.main.java.org.xudifsd.visitor.TranslateVisitor.java", "BodyUseAPI": ["file.getNamespaces().get(java.lang.String)", "org.xudifsd.ast.ThriftFile.getNamespaces()"], "Fixed commit": "ebd0079ae41b8907f1557071257c472850d7103e", "Url": "https://api.github.com/repos/xudifsd/client-gen", "Date": "2016-09-24T16:16:42Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (body == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1861/buggy-version/src.com.connectsdk.service.upnp.DLNAHttpServer.java", "BodyUseAPI": [], "Fixed commit": "8d3aca65f983dc775788a74f1af4ab4ff5105288", "Url": "https://api.github.com/repos/ConnectSDK/Connect-SDK-Android-Core", "Date": "2014-12-29T08:04:48Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (comboAggregationOperator.getText().equals(\"\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8862/buggy-version/fr.inria.soctrace.tools.ocelotl.ui.src.fr.inria.soctrace.tools.ocelotl.ui.views.OcelotlView.java", "BodyUseAPI": [], "Fixed commit": "3ac7fc538db0ef814c600294945f0ad732929d64", "Url": "https://api.github.com/repos/dosimont/ocelotl", "Date": "2013-10-19T02:32:37Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((doneParsing) && (isCalendar)) { calendarEvents.remove(0); return calendarEvents; }else { java.util.List<com.unit5app.com.unit5app.parsers.CalendarEvent> blankList = new java.util.ArrayList<>(); blankList.add(new com.unit5app.com.unit5app.parsers.CalendarEvent(\"\", \"\", \"\", EventType.regular)); return blankList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7153/buggy-version/app.src.main.java.com.unit5app.com.unit5app.parsers.RSSReader.java", "BodyUseAPI": [], "Fixed commit": "1531840634de71c9f89ff897be8df13417b5972e", "Url": "https://api.github.com/repos/Afulton11/Unit5-App", "Date": "2016-02-21T21:24:40Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["group3.henry.login.model.MemberVO.getEmail()", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((null == email) || (null == currentEmail)) return INPUT;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3817/buggy-version/AmyClinic.src.main.java.group3.henry.login.controller.LogoutAction.java", "BodyUseAPI": [], "Fixed commit": "e741ea3ed841ec28e7a28eb57b55ae8abdb73535", "Url": "https://api.github.com/repos/EEIT85team03/AmyClinic", "Date": "2016-06-11T09:38:12Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pv) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4144/buggy-version/applications.alarm.alarm-plugins.org.csstudio.alarm.beast.server.src.org.csstudio.alarm.beast.server.AlarmPV.java", "BodyUseAPI": [], "Fixed commit": "f468ed3d0f6a02f7de5b3dc9b931264adf3b669c", "Url": "https://api.github.com/repos/css-iter/cs-studio", "Date": "2015-05-22T13:44:36Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x >= 0) xAbs = x; else xAbs = -x;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8848/buggy-version/src.ExpFunction.java", "BodyUseAPI": [], "Fixed commit": "880d5150df595807ddd8c0c877e1b001ca8658fe", "Url": "https://api.github.com/repos/louimet/E-Calc", "Date": "2016-02-21T08:45:58Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x < 0) result = 1 / result;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8848/buggy-version/src.ExpFunction.java", "BodyUseAPI": [], "Fixed commit": "880d5150df595807ddd8c0c877e1b001ca8658fe", "Url": "https://api.github.com/repos/louimet/E-Calc", "Date": "2016-02-21T08:45:58Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((column.getIndex()) < 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6038/buggy-version/yukthi-data.src.main.java.com.yukthi.persistence.repository.executors.UpdateQueryExecutor.java", "BodyUseAPI": [], "Fixed commit": "9db49aede56f260c1abfcae5580de2f551eec22b", "Url": "https://api.github.com/repos/yukthitech/utils", "Date": "2015-12-23T05:24:12Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.djrapitops.plugin.utilities.Compatibility.isBukkitAvailable()) { java.lang.String accessKey = main.java.com.djrapitops.plan.systems.info.pluginchannel.BukkitPluginChannelListener.getAccessKey(); if (accessKey != null) { addVariable(\"accessKey\", accessKey); } super.sendRequest(address); if (accessKey != null) { main.java.com.djrapitops.plan.systems.info.pluginchannel.BukkitPluginChannelListener.usedAccessKey(); } }else { super.sendRequest(address); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7152/buggy-version/Plan.src.main.java.com.djrapitops.plan.systems.webserver.webapi.universal.PingWebAPI.java", "BodyUseAPI": [], "Fixed commit": "37d67cb78db2382a020131e7401bcf082cfffecf", "Url": "https://api.github.com/repos/Rsl1122/Plan-PlayerAnalytics", "Date": "2017-09-28T16:45:13Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newTrust > maxCeil) block.setTrustValue(maxCeil);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1083/buggy-version/app.src.main.java.nl.tudelft.b_b_w.controller.BlockController.java", "BodyUseAPI": ["nl.tudelft.b_b_w.model.Block.setTrustValue(int)"], "Fixed commit": "38719219c77c3684543079aa4d4e89af2d966740", "Url": "https://api.github.com/repos/deepweeb/B-B-W", "Date": "2017-05-31T09:51:28Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newTrust < minCeil) block.setTrustValue(minCeil);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1083/buggy-version/app.src.main.java.nl.tudelft.b_b_w.controller.BlockController.java", "BodyUseAPI": ["nl.tudelft.b_b_w.model.Block.setTrustValue(int)"], "Fixed commit": "38719219c77c3684543079aa4d4e89af2d966740", "Url": "https://api.github.com/repos/deepweeb/B-B-W", "Date": "2017-05-31T09:51:28Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tempText.equals(\" \")) tempText = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5022/buggy-version/Schema.src.com.schema.bro.LessonActivity.java", "BodyUseAPI": [], "Fixed commit": "0a61651899415f9a07d39ff5600e68be2efe6804", "Url": "https://api.github.com/repos/ll-KS-ll/Schedule", "Date": "2013-04-29T09:35:00Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.schema.bro.ks.Lesson.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tempText.equals(\" \")) tempText = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5022/buggy-version/Schema.src.com.schema.bro.LessonActivity.java", "BodyUseAPI": [], "Fixed commit": "0a61651899415f9a07d39ff5600e68be2efe6804", "Url": "https://api.github.com/repos/ll-KS-ll/Schedule", "Date": "2013-04-29T09:35:00Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tempText.equals(\" \")) tempText = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5022/buggy-version/Schema.src.com.schema.bro.LessonActivity.java", "BodyUseAPI": [], "Fixed commit": "0a61651899415f9a07d39ff5600e68be2efe6804", "Url": "https://api.github.com/repos/ll-KS-ll/Schedule", "Date": "2013-04-29T09:35:00Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sessionMap.get(\"role\").equals(\"CL\")) { return \"redirect:/official/users/view\"; }else { return \"redirect:/official/users/edit/\" + (sessionMap.get(\"id\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4472/buggy-version/SchedulerWeb.src.main.java.com.scheduler.controllers.OfficialController.java", "BodyUseAPI": ["com.scheduler.controllers.OfficialController.get(java.lang.String)"], "Fixed commit": "2d12ba6d8e313b997b3974f1d265e219c4d3f264", "Url": "https://api.github.com/repos/dipen2512/Scheduler", "Date": "2013-12-06T04:56:53Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((classUnitsDo) != null) { classUnitsDo.getResource().setCollectionItems(new java.util.ArrayList<org.ednovo.gooru.shared.model.content.ClasspageItemDo>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7537/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.classpages.unitdetails.AssignmentWidgetView.java", "BodyUseAPI": [], "Fixed commit": "ed2179092ec6b234230ff611f7b02665c2113299", "Url": "https://api.github.com/repos/suryanarayanakb/Gooru-Web", "Date": "2014-09-30T14:08:52Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["addEdittext.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((task_name.length()) != 0) { com.example.rick.database.DailyTaskDAO.DailyTaskItem item = new com.example.rick.database.DailyTaskDAO.DailyTaskItem(); item.setTaskName(task_name); tasksRcyrAdapter.addItem(item); clearEditTextFocus(); }else { addEdittext.requestFocus(); android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (activity.getSystemService(Context.INPUT_METHOD_SERVICE))); imm.showSoftInput(addEdittext, InputMethodManager.SHOW_IMPLICIT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5405/buggy-version/app.src.main.java.com.example.rick.tabplayground.MainTabTaskFrag.java", "BodyUseAPI": ["DailyTaskDAO.DailyTaskItem.setTaskName(java.lang.String)"], "Fixed commit": "49a5eb9f348a3f36871b2a9e77b70e57391df6b6", "Url": "https://api.github.com/repos/rickchung/emocare-android-app", "Date": "2015-09-09T16:28:00Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deleteTree == null) { test_block.clear(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5667/buggy-version/MySql.src.Executor.java", "BodyUseAPI": [], "Fixed commit": "55fcea01c9dbda84df1dbe662f2b627fe6031e4b", "Url": "https://api.github.com/repos/garyleefight/MySql", "Date": "2016-12-14T20:18:50Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkPermissions()) { startStep3(); }else { requestPermissions(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7074/buggy-version/app.src.main.java.tracklocation.devdeeds.com.tracklocationproject.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a2ed69fcfc1a5c81235f6343029c06761623f8ed", "Url": "https://api.github.com/repos/jayakrishnan-pm/Location-Tracker-Application", "Date": "2017-11-22T17:16:11Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (legalAddress) drawFramedSymbols(cx, 22, address);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1196/buggy-version/src.main.java.pcl.lc.module.stargate.gui.ScreenStargateBase.java", "BodyUseAPI": [], "Fixed commit": "6af5ce5b012d9cddbfd2cec316ae149b644fdb9d", "Url": "https://api.github.com/repos/PC-Logix/LanteaCraft", "Date": "2015-03-17T09:07:23Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c.isVarArgs()) { return paramTypes; }else if ((paramTypes.length) == (givenTypes.length)) { boolean found = true; for (int i = 0; i < (paramTypes.length); i++) { if (!(com.mysema.query.types.ConstructorExpression.normalize(paramTypes[i]).isAssignableFrom(com.mysema.query.types.ConstructorExpression.normalize(givenTypes[i])))) { found = false; break; } } if (found) { return paramTypes; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4136/buggy-version/querydsl-core.src.main.java.com.mysema.query.types.ConstructorExpression.java", "BodyUseAPI": [], "Fixed commit": "ffa6bc0068d4c606a8738abbd02fc41e6d912924", "Url": "https://api.github.com/repos/mysema/querydsl", "Date": "2012-06-07T19:58:49Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (constructor.isVarArgs()) { java.lang.Class<?>[] paramTypes = constructor.getParameterTypes(); java.lang.Object[] cargs = new java.lang.Object[paramTypes.length]; java.lang.System.arraycopy(args, 0, cargs, 0, ((cargs.length) - 1)); int size = ((args.length) - (cargs.length)) + 1; java.lang.Object array = java.lang.reflect.Array.newInstance(paramTypes[((paramTypes.length) - 1)].getComponentType(), size); cargs[((cargs.length) - 1)] = array; java.lang.System.arraycopy(args, ((cargs.length) - 1), array, 0, size); return ((T) (constructor.newInstance(cargs))); }else { return ((T) (constructor.newInstance(args))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4136/buggy-version/querydsl-core.src.main.java.com.mysema.query.types.ConstructorExpression.java", "BodyUseAPI": ["java.lang.reflect.Constructor<?>.newInstance(java.lang.Object[])", "java.lang.reflect.Constructor<?>.getParameterTypes()", "java.lang.reflect.Constructor<?>.newInstance(java.lang.Object[])"], "Fixed commit": "ffa6bc0068d4c606a8738abbd02fc41e6d912924", "Url": "https://api.github.com/repos/mysema/querydsl", "Date": "2012-06-07T19:58:49Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (particleName.equals(\"fish\")) { int fishParticle = world.rand.nextInt(3); if (fishParticle == 0) { fx = new thebetweenlands.entities.particles.EntityBugFX(world, x, y, z, 400, 0.02F, 0.005F, (0.18F * (world.rand.nextFloat())), -1, new net.minecraft.util.ResourceLocation(\"thebetweenlands:textures/particle/fish1.png\"), 1); }else if (fishParticle == 1) { fx = new thebetweenlands.entities.particles.EntityBugFX(world, x, y, z, 400, 0.02F, 0.005F, (0.18F * (world.rand.nextFloat())), -1, new net.minecraft.util.ResourceLocation(\"thebetweenlands:textures/particle/fish2.png\"), 1); }else { fx = new thebetweenlands.entities.particles.EntityBugFX(world, x, y, z, 400, 0.02F, 0.005F, (0.18F * (world.rand.nextFloat())), -1, new net.minecraft.util.ResourceLocation(\"thebetweenlands:textures/particle/fish3.png\"), 1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6966/buggy-version/java.thebetweenlands.proxy.ClientProxy.java", "BodyUseAPI": [], "Fixed commit": "3e7778111197cb448a6d72f66b394c82e4afc23d", "Url": "https://api.github.com/repos/Angry-Pixel/The-Betweenlands", "Date": "2015-06-14T20:21:30Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAnswered())) { if ((getPrompt().defaultResponse) != null) { numberPicker.setValue(getPrompt().defaultResponse.intValue()); setValue(getPrompt().defaultResponse.intValue()); }else { setValue(numberPicker.getValue()); } }else if ((getPrompt().value) != null) { numberPicker.setValue(getPrompt().value.intValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2258/buggy-version/ohmage.src.main.java.org.ohmage.prompts.NumberPrompt.java", "BodyUseAPI": [], "Fixed commit": "7db62af3e63c55cf6a0d15292751a954a90937de", "Url": "https://api.github.com/repos/smalldatalab/android-ohmage", "Date": "2015-04-28T05:51:17Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.currentThread()", "java.util.Vector.elementAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentThread == thread) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2280/buggy-version/TantalumCore.src.main.java.org.tantalum.Worker.java", "BodyUseAPI": [], "Fixed commit": "7226045c08cb229d4b0f0b5e36125a3cc71c3972", "Url": "https://api.github.com/repos/TantalumMobile/Tantalum", "Date": "2013-07-02T07:20:22Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.currentThread()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentThread == (org.tantalum.Worker.workers[i])) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2280/buggy-version/TantalumCore.src.main.java.org.tantalum.Worker.java", "BodyUseAPI": [], "Fixed commit": "7226045c08cb229d4b0f0b5e36125a3cc71c3972", "Url": "https://api.github.com/repos/TantalumMobile/Tantalum", "Date": "2013-07-02T07:20:22Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.myapp.handbook.Tasks.UpdateNavigationViewHeader.findProfileById(java.util.List<com.myapp.handbook.domain.RoleProfile>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (selectedProfile != null) { java.lang.String imagePath = selectedProfile.getImageUrl(); if (android.text.TextUtils.isEmpty(imagePath.trim())) { com.squareup.picasso.Picasso.with(context).load(R.drawable.contact_picture_placeholder).placeholder(R.drawable.contact_picture_placeholder).into(profileImage); }else { com.squareup.picasso.Picasso.with(context).load(selectedProfile.getImageUrl()).placeholder(R.drawable.contact_picture_placeholder).into(profileImage); } schoolName.setText((((selectedProfile.getFirstName()) + \" \") + (selectedProfile.getLastName()))); email.setText(selectedProfile.getStd()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2689/buggy-version/mobile.Android.app.src.main.java.com.myapp.handbook.Tasks.UpdateNavigationViewHeader.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(context).load(selectedProfile.getImageUrl())", "com.myapp.handbook.domain.RoleProfile.getImageUrl()", "android.widget.TextView.setText((((selectedProfile.getFirstName()) + \" \") + (selectedProfile.getLastName())))", "com.myapp.handbook.domain.RoleProfile.getFirstName()", "com.myapp.handbook.domain.RoleProfile.getLastName()", "com.myapp.handbook.domain.RoleProfile.getImageUrl()", "com.myapp.handbook.domain.RoleProfile.getStd()", "android.widget.TextView.setText(selectedProfile.getStd())", "com.squareup.picasso.Picasso.with(context).load(selectedProfile.getImageUrl()).placeholder(R.drawable.contact_picture_placeholder)", "com.squareup.picasso.Picasso.with(context).load(selectedProfile.getImageUrl()).placeholder(R.drawable.contact_picture_placeholder).into(android.widget.ImageView)"], "Fixed commit": "1fe77e62754e1852ec64ff66c28ee697b217936d", "Url": "https://api.github.com/repos/ashutoshpurohit/SCHPARERP", "Date": "2017-06-30T19:43:18Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.myapp.handbook.domain.RoleProfile.getImageUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(imagePath.trim())) { com.squareup.picasso.Picasso.with(getContext()).load(R.drawable.contact_picture_placeholder).placeholder(R.drawable.contact_picture_placeholder).into(imageView); }else { com.squareup.picasso.Picasso.with(getContext()).load(profile.getImageUrl()).placeholder(R.drawable.contact_picture_placeholder).into(imageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2689/buggy-version/mobile.Android.app.src.main.java.com.myapp.handbook.adapter.ProfileAdapter.java", "BodyUseAPI": [], "Fixed commit": "1fe77e62754e1852ec64ff66c28ee697b217936d", "Url": "https://api.github.com/repos/ashutoshpurohit/SCHPARERP", "Date": "2017-06-30T19:43:18Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((IC2NuclearControl.instance.crossClassic.getClassicType()) == (shedar.mods.ic2.nuclearcontrol.crossmod.ic2classic.IC2ClassicType.SPEIGER)) { double realTotal = total - (lastReceivedPower); lastReceivedPower = total; data[index] = realTotal; }else data[index] = total;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1374/buggy-version/src.main.java.shedar.mods.ic2.nuclearcontrol.tileentities.TileEntityAverageCounter.java", "BodyUseAPI": [], "Fixed commit": "7708005d67a3a8b07e5daed5da3b932a784bb9f2", "Url": "https://api.github.com/repos/xbony2/Nuclear-Control", "Date": "2015-07-18T23:42:34Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasDefaultConverter()) { list = new java.util.ArrayList<java.lang.Object>(((java.util.Collection<?>) (obj))); }else { list = ((java.util.Collection<java.lang.Object>) (obj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8800/buggy-version/vraptor-core.src.main.java.br.com.caelum.vraptor.serialization.xstream.XStreamSerializer.java", "BodyUseAPI": [], "Fixed commit": "640a86759d5b34e41cc96d392549f54da7c841a0", "Url": "https://api.github.com/repos/vinioliveira/vraptor", "Date": "2011-02-23T14:52:53Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showDetails) { java.lang.System.out.println((((((\"FrameID: \" + frameId) + \", rows: \") + rows) + \", tempGroupNum: \") + tempGroupNumber)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1260/buggy-version/resa-evaluation.src.main.java.resa.evaluation.topology.vld.FeatureExtracterCharlie2.java", "BodyUseAPI": [], "Fixed commit": "5646bff76dc9e0748e82afa0f05c0e0e715a8dd0", "Url": "https://api.github.com/repos/ADSC-Resa/resa", "Date": "2016-05-23T15:25:15Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["AVLCountingTree.findHeightBefore(int,current.right,double,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result == (-1)) { result = accumulateHeight; if (!includeRange) result = result - (current.data.getY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4899/buggy-version/src.AVLCountingTree.java", "BodyUseAPI": [], "Fixed commit": "8b894ee8da1ad98a7cf20e5ab89134b753e2fba5", "Url": "https://api.github.com/repos/stephschuster/assignment5", "Date": "2016-06-11T16:43:43Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hours[i][1]) != 0) { g2d.drawString((\"\" + (starts[i][0])), posx[0], posy[hours[i][0]]); g2d.drawString((\"\" + (starts[i][0].plusMinutes(((hours[i][1]) * (interval.getMinute()))))), posx[1], posy[hours[i][0]]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1581/buggy-version/src.TimeTable.java", "BodyUseAPI": ["java.awt.Graphics2D.drawString(java.lang.String,int,int)", "java.awt.Graphics2D.drawString(java.lang.String,int,int)", "java.time.LocalTime.plusMinutes(int)"], "Fixed commit": "097942efc7ea3c535f0d197cd68131f83d74ecee", "Url": "https://api.github.com/repos/bleeptrack/zeiterfassung", "Date": "2016-10-12T08:12:10Z"},
{"Line": "=>880", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Menue.clientThread) != null) { Menue.createAndShowGui(\"Spieler 1 wurde eine Anfrage zum Neustart des Spiels geschickt. Warte \", \" auf Antwort...\", 60, 600, 100, 0); }else { eingabe = javax.swing.JOptionPane.showConfirmDialog(null, \"M\u00f6chten Sie noch eine Runde spielen?\", \"Spiel zuende\", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION); if (eingabe == 0) { Menue.spiel_neustarten(); }else if (eingabe == 1) { java.lang.System.exit(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8818/buggy-version/src.Menue.java", "BodyUseAPI": [], "Fixed commit": "d4222f28c3479d41d6dae171c04e9ac65708f0cc", "Url": "https://api.github.com/repos/propra12-orga/gruppe23", "Date": "2012-06-26T12:03:45Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.server.distributed.task.OAbstractRecordReplicatedTask.getRecord()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (record != null) for (java.lang.String f : ((com.orientechnologies.orient.core.record.impl.ODocument) (record)).fieldNames()) { final java.lang.Object fValue = ((com.orientechnologies.orient.core.record.impl.ODocument) (record)).field(f); if (fValue instanceof com.orientechnologies.orient.core.db.record.ORecordLazyMultiValue) ((com.orientechnologies.orient.core.db.record.ORecordLazyMultiValue) (fValue)).convertLinks2Records(); else if (fValue instanceof com.orientechnologies.orient.core.id.ORecordId) ((com.orientechnologies.orient.core.record.impl.ODocument) (record)).field(f, ((com.orientechnologies.orient.core.id.ORecordId) (fValue)).getRecord()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/75/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.task.OTxTask.java", "BodyUseAPI": [], "Fixed commit": "29fcf1f9aecdd3c4da56d1578f12c637ddb2d947", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-03-27T22:19:05Z"},
{"Line": "=>1172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mRoomCreationViewTimer)) { mRoomCreationViewTimer.cancel(); mRoomCreationViewTimer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7921/buggy-version/vector.src.main.java.im.vector.activity.VectorHomeActivity.java", "BodyUseAPI": [], "Fixed commit": "04122a2aa6ff505e51081cfc26c388bc5ed4b232", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-02-10T10:45:27Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((acceptable_chars.indexOf(c)) == (-1)) { throw new java.lang.IllegalArgumentException(\"Invalid character found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5/buggy-version/ExpressionParser.java", "BodyUseAPI": [], "Fixed commit": "a8919b8b88ca5861aba2cb7b3d9cd1cee68990a9", "Url": "https://api.github.com/repos/ECE309-Team1/Expression-Calculator", "Date": "2015-03-30T02:27:13Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rs.getInt(\"player_id\")) == (-1)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1509/buggy-version/CodeGenerator.src.codeGenerator.PlayerSQLGenerator.java", "BodyUseAPI": [], "Fixed commit": "2ad3621482cb45211e570ece75822771c23a7fa7", "Url": "https://api.github.com/repos/Respectable/PBPCompilerV2", "Date": "2013-07-30T04:20:06Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (string.contains(\"000000\")) { return Base.Enums.ColorType.NOCOLOR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3711/buggy-version/Fotowinkel.src.java.Base.Enums.ColorType.java", "BodyUseAPI": [], "Fixed commit": "c8520ad66b6e4b88700b4b84ff2f33d74e3f39b8", "Url": "https://api.github.com/repos/deij1997/Fotowinkel-sjoerd", "Date": "2017-01-18T16:34:58Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jmri.InstanceManager.getDefault(jmri.SignalHeadManager.class).getBySystemName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((s.getAppearanceName()) != null) { return s.getAppearanceName(); }else { jmri.jmrit.beantable.SignalHeadTableAction.log.debug(\"NULL Appearance returned for head in row {}\", row); return jmri.jmrit.beantable.Bundle.getMessage(\"BeanStateUnknown\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1204/buggy-version/java.src.jmri.jmrit.beantable.SignalHeadTableAction.java", "BodyUseAPI": ["jmri.SignalHead.getAppearanceName()"], "Fixed commit": "d9fc252418ee87dc8c521d96aa05fa4debc3a070", "Url": "https://api.github.com/repos/Pugwash1/JMRI", "Date": "2017-09-17T20:28:31Z"},
{"Line": "=>850", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (prompt != null) { jmri.jmrit.automat.AbstractAutomaton.log.trace(\"waitChange continues from {}\", prompt.getSource()); }else { jmri.jmrit.automat.AbstractAutomaton.log.trace(\"waitChange continues\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1204/buggy-version/java.src.jmri.jmrit.automat.AbstractAutomaton.java", "BodyUseAPI": ["java.beans.PropertyChangeEvent.getSource()", "org.slf4j.Logger.trace(java.lang.String,java.lang.Object)"], "Fixed commit": "d9fc252418ee87dc8c521d96aa05fa4debc3a070", "Url": "https://api.github.com/repos/Pugwash1/JMRI", "Date": "2017-09-17T20:28:31Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jmri.InstanceManager.getDefault(jmri.SignalMastManager.class).getBySystemName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((s.getAspect()) != null) { return s.getAspect(); }else { jmri.jmrit.beantable.signalmast.SignalMastTableDataModel.log.debug(\"NULL aspect returned for mast in row {}\", row); return jmri.jmrit.beantable.signalmast.Bundle.getMessage(\"BeanStateUnknown\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1204/buggy-version/java.src.jmri.jmrit.beantable.signalmast.SignalMastTableDataModel.java", "BodyUseAPI": ["jmri.SignalMast.getAspect()"], "Fixed commit": "d9fc252418ee87dc8c521d96aa05fa4debc3a070", "Url": "https://api.github.com/repos/Pugwash1/JMRI", "Date": "2017-09-17T20:28:31Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (value != null) { renderbox.addItem(value.toString()); }else { renderbox.addItem(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1204/buggy-version/java.src.jmri.jmrit.beantable.RowComboBoxPanel.java", "BodyUseAPI": ["javax.swing.JComboBox<java.lang.String>.addItem(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "d9fc252418ee87dc8c521d96aa05fa4debc3a070", "Url": "https://api.github.com/repos/Pugwash1/JMRI", "Date": "2017-09-17T20:28:31Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((x) >= 640) || ((x) == (-640))) x = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8134/buggy-version/SideScroller.src.net.masterzach32.sidescroller.tilemap.Background.java", "BodyUseAPI": [], "Fixed commit": "f9168dfb37bfbcd25e559ac9d0f28c1070e0a1cb", "Url": "https://api.github.com/repos/Masterzach32/SideScrollerProject", "Date": "2015-04-15T02:24:44Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zanata.dao.TextFlowTargetDAO.findById(((java.lang.Long) (results.get(1))),boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((matchingTarget.getId()) == 1292404) || ((matchingTarget.getId()) == 831736)) { log.info((((((\"\\n\\n\\nTargetId: \" + (matchingTarget.getId())) + \" ContentState:\") + copyState) + \" shouldOverwrite:\") + (org.zanata.service.impl.CopyTransServiceImpl.shouldOverwrite(hTarget, copyState)))); log.info((\"shouldOverwrite: \" + (org.zanata.service.impl.CopyTransServiceImpl.shouldOverwrite(hTarget, copyState)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8780/buggy-version/zanata-war.src.main.java.org.zanata.service.impl.CopyTransServiceImpl.java", "BodyUseAPI": ["org.jboss.seam.log.Log.info((((((\"\\n\\n\\nTargetId: \" + (matchingTarget.getId())) + \" ContentState:\") + copyState) + \" shouldOverwrite:\") + (org.zanata.service.impl.CopyTransServiceImpl.shouldOverwrite(hTarget, copyState))))", "org.zanata.model.HTextFlowTarget.getId()"], "Fixed commit": "2f5978ac6056230751d746ec1e364cd048cb70ed", "Url": "https://api.github.com/repos/zanata/zanata", "Date": "2013-01-21T22:35:17Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kwstudios.play.toolbox.MotdListGetter.getMotdList().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (motd != \"\") { event.setMotd(((org.kwstudios.play.toolbox.ConstantHolder.MOTD_PREFIX) + motd)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2890/buggy-version/src.org.kwstudios.play.loader.EventListener.java", "BodyUseAPI": ["org.bukkit.event.server.ServerListPingEvent.setMotd(((org.kwstudios.play.toolbox.ConstantHolder.MOTD_PREFIX) + motd))"], "Fixed commit": "b204de4b0419f185af715bdc3d65e6ec1fd0f473", "Url": "https://api.github.com/repos/KWStudios/KWBungeeLobby", "Date": "2015-08-17T23:16:01Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dart_hit[i]) == false) { (dart_percent_list[1][i])++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1443/buggy-version/app.src.main.java.com.example.kaleb_000.dartdojo.Solitaire.java", "BodyUseAPI": [], "Fixed commit": "dc800f3067606f6ed26eedab18f885f7844e7294", "Url": "https://api.github.com/repos/kalebmcgregor/DartDojo", "Date": "2014-08-28T16:44:34Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((degree.size()) != (result.size())) { throw new java.lang.IllegalArgumentException(\"Graph contains cycles\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6608/buggy-version/Language.java", "BodyUseAPI": [], "Fixed commit": "06acbd16a39c08eb20540812b2149d5a0fb6e8de", "Url": "https://api.github.com/repos/NatalijaGucevska/CodeU_5", "Date": "2017-07-10T21:13:37Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(iiItemsLeftover.isEmpty())) { cbChest.getInventory().setContents(isChestItemsBackup); msg(event.getPlayer(), \"This shop is out of stock!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8569/buggy-version/src.Ne0nx3r0.SignShop.SignShopPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "053dba0365a6f9263b3e8e10c60c7b325fbb3feb", "Url": "https://api.github.com/repos/Ne0nx3r0/SignShops", "Date": "2011-05-25T16:29:24Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLocked) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1214/buggy-version/development.src.yarhar.map.SpriteInstance.java", "BodyUseAPI": [], "Fixed commit": "c0f38c0a5b49778758c55a0ee82104e3efbd2f96", "Url": "https://api.github.com/repos/Cazra/YarHar", "Date": "2012-12-16T18:28:04Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (username.equals(currentUser.userName)) { javax.swing.JOptionPane.showMessageDialog(_currentFrame, \"Congrats! You've successfully deleted yourself! Bye!\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/16/buggy-version/AREST_Project.src.client.view.DeleteUserPanel.java", "BodyUseAPI": [], "Fixed commit": "3538cbeca7743a11cdf3b15b126f4df30a735d90", "Url": "https://api.github.com/repos/jamesesilvia/CS509", "Date": "2014-04-30T17:56:50Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.vanhal.progressiveautomation.ref.ToolHelper.damageTool(slots[SLOT_HOE], worldObj, dirtPoint.getX(), dirtPoint.getY(), dirtPoint.getZ())) { slots[SLOT_HOE] = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6221/buggy-version/src.main.java.com.vanhal.progressiveautomation.entities.planter.TilePlanter.java", "BodyUseAPI": [], "Fixed commit": "7d5a306959691f8e39ed121156c22145c392597e", "Url": "https://api.github.com/repos/Vanhal/ProgressiveAutomation", "Date": "2014-08-19T19:14:43Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.photon.phresco.commons.model.Customer.getApplicableTechnologies()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isNotEmpty(customerApplicableTechnologies)) { applicableTechnologies.addAll(customerApplicableTechnologies); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2538/buggy-version/phresco-service-impl.src.main.java.com.photon.phresco.service.impl.DbService.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>)"], "Fixed commit": "c1bb07e17b5a01c82818dbad8159bf77bf7efe20", "Url": "https://api.github.com/repos/phresco/service", "Date": "2013-01-04T11:40:52Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mensalidades.equals(null))) { for (Tabelas.Mensalidade mens : mensalidades) { if ((((comboMes.getSelectedIndex()) + 1) == (mens.getMesVencto())) && ((java.lang.Integer.valueOf(comboAno.getSelectedItem().toString())) == (mens.getAnoVencto()))) { javax.swing.JOptionPane.showMessageDialog(this, \"J\u00e1 existe uma parcela gerada para o m\u00eas e ano informados!\", \"Erro\", javax.swing.JOptionPane.ERROR_MESSAGE); okToGo = false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4780/buggy-version/Unique.src.unique.GerarMensalidadeVIP.java", "BodyUseAPI": [], "Fixed commit": "ba7fdbeac44e5856fb0e79be50bc4d61fc26e056", "Url": "https://api.github.com/repos/AdoriaStudios/Unique", "Date": "2015-06-08T23:44:19Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(chatMessageHistory.containsKey(friendID))) { java.util.List<de.tubs.androidlab.instameet.ui.chat.ChatMessageProxy> newList = new java.util.ArrayList<de.tubs.androidlab.instameet.ui.chat.ChatMessageProxy>(); chatMessageHistory.put(friendID, newList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2018/buggy-version/Client.InstaMeet.src.de.tubs.androidlab.instameet.service.InstaMeetService.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.util.List<de.tubs.androidlab.instameet.ui.chat.ChatMessageProxy>>.put(int,java.util.List<de.tubs.androidlab.instameet.ui.chat.ChatMessageProxy>)"], "Fixed commit": "e50efac162b40b4dbff7387c33b3c18eaec63f53", "Url": "https://api.github.com/repos/Vaniax/AndroidLab", "Date": "2015-01-29T15:14:43Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mWidgetMode) { setTitle(R.string.widget_title_post_mode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7938/buggy-version/src.info.justaway.PostActivity.java", "BodyUseAPI": [], "Fixed commit": "0a1ed8cb9fd154ba0c2392ba22d0bd6e4e5c3650", "Url": "https://api.github.com/repos/justaway-factory/justaway", "Date": "2014-01-26T14:41:47Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (failedcounter != 0) com.voyanta.data.ValidationUtils.LOGGER.info((((\"Validating against the record found with key:\" + matchingKey) + \" and value:\") + (smallerList.get(i).get(matchingKey))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5981/buggy-version/src.main.java.com.voyanta.data.ValidationUtils.java", "BodyUseAPI": [], "Fixed commit": "4e747bac77b3c08f77d142cbcf75a6a9880bcad8", "Url": "https://api.github.com/repos/sangajala/voyanta-data-tests", "Date": "2014-09-10T11:47:09Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.System.getProperty(\"udid\")) != null) && (!(java.lang.System.getProperty(\"udid\").isEmpty()))) { if (getIOSDeviceID.substring(startPos, (endPos + 1)).equals(java.lang.System.getProperty(\"udid\"))) { deviceUDIDiOS.add(getIOSDeviceID.substring(startPos, (endPos + 1))); } }else { deviceUDIDiOS.add(getIOSDeviceID.substring(startPos, (endPos + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2119/buggy-version/src.main.java.com.appium.ios.IOSDeviceConfiguration.java", "BodyUseAPI": [], "Fixed commit": "d89660502307d211395712d780d810345b620ebb", "Url": "https://api.github.com/repos/brtu/AppiumTestDistribution", "Date": "2016-10-21T22:07:18Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.System.getProperty(\"udid\")) != null) && (!(java.lang.System.getProperty(\"udid\").isEmpty()))) { if (deviceID.equals(java.lang.System.getProperty(\"udid\"))) { deviceSerail.add(deviceID); } }else { deviceSerail.add(deviceID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2119/buggy-version/src.main.java.com.appium.manager.AndroidDeviceConfiguration.java", "BodyUseAPI": [], "Fixed commit": "d89660502307d211395712d780d810345b620ebb", "Url": "https://api.github.com/repos/brtu/AppiumTestDistribution", "Date": "2016-10-21T22:07:18Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!leaveModifyableAsIs) attributesCanBeModified = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8121/buggy-version/src.java.htsjdk.variant.variantcontext.VariantContextBuilder.java", "BodyUseAPI": [], "Fixed commit": "e6fc1de5d2e63fb71c97bf74f8a8ca0c60eb8518", "Url": "https://api.github.com/repos/samtools/htsjdk", "Date": "2015-04-28T22:55:04Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((message.getType()) != (torrent.network.utp.UtpSocket.ST_STATE)) { messagesInFlight.add(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1960/buggy-version/torrent.network.utp.UtpSocket.java", "BodyUseAPI": ["java.util.ArrayList<torrent.network.utp.UtpMessage>.add(torrent.network.utp.UtpMessage)"], "Fixed commit": "1ccf3da0f67846582ef69546ec8a942a09f56d0f", "Url": "https://api.github.com/repos/Johnnei/JavaTorrent", "Date": "2013-02-06T17:30:07Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.Hudson.getInstance().getItem(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (item == null) { int index = jobName.lastIndexOf(\"_\"); if (index > 0) { jobName = jobName.substring(0, index); item = hudson.model.Hudson.getInstance().getItem(jobName); if (item == null) { hudson.model.WorkspaceCleanupThread.LOGGER.fine(((\"Directory \" + dir) + \" is not owned by any project\")); return true; } }else { hudson.model.WorkspaceCleanupThread.LOGGER.fine(((\"Directory \" + dir) + \" is not owned by any project\")); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/167/buggy-version/hudson-core.src.main.java.hudson.model.WorkspaceCleanupThread.java", "BodyUseAPI": [], "Fixed commit": "61fb36305f9ee9975da6bf0dc4b3aebc58830d4b", "Url": "https://api.github.com/repos/eclipse/hudson.core", "Date": "2015-05-21T00:18:33Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) != null) adapter.setPath(path);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1491/buggy-version/FishBun.src.main.java.com.sangcomz.fishbun.ui.album.AlbumActivity.java", "BodyUseAPI": [], "Fixed commit": "1cc5c10cc8085909e8c88dec2ca8055b49c4868b", "Url": "https://api.github.com/repos/sangcomz/FishBun", "Date": "2016-08-25T16:50:50Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.netthreads.libgdx.director.AppInjector.injector) == null) { com.netthreads.libgdx.director.AppInjector.injector = com.google.inject.Guice.createInjector(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5321/buggy-version/src.main.java.com.netthreads.libgdx.director.AppInjector.java", "BodyUseAPI": [], "Fixed commit": "70e6d4a6915d60d368bae3ec3a569efc8942485e", "Url": "https://api.github.com/repos/alistairrutherford/netthreads-libgdx", "Date": "2013-03-16T15:53:59Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me.ccrama.redditslide.Authentication.isLoggedIn) { dialoglayout.findViewById(R.id.pm).setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { android.content.Intent i = new android.content.Intent(me.ccrama.redditslide.Activities.Profile.this, me.ccrama.redditslide.Activities.Sendmessage.class); i.putExtra(\"name\", name); startActivity(i); } }); }else { dialoglayout.findViewById(R.id.pm).setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2291/buggy-version/app.src.main.java.me.ccrama.redditslide.Activities.Profile.java", "BodyUseAPI": [], "Fixed commit": "d81fbcebad5a9111dab93be9c1285277fbc53d9d", "Url": "https://api.github.com/repos/ccrama/Slide", "Date": "2015-11-06T19:37:07Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (image.isAnimation()) { com.codename1.ui.Form f = getComponentForm(); if (f != null) { f.registerAnimated(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7932/buggy-version/CodenameOne.src.com.codename1.components.ImageViewer.java", "BodyUseAPI": [], "Fixed commit": "5a66aff6e95117f99dd55aaf8297de4c4300ed6a", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2015-06-26T08:47:14Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xenoage.zong.io.musicxml.in.util.OpenBeam.getChords()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((beamedChords.size()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4363/buggy-version/musicxml-in.src.com.xenoage.zong.io.musicxml.in.util.OpenBeams.java", "BodyUseAPI": [], "Fixed commit": "fb2b3e58abb82edffa00d66f4de98b1b212c9772", "Url": "https://api.github.com/repos/Xenoage/Zong", "Date": "2016-11-15T14:46:13Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smi.travel.datalayer.service.PaymentTourHotelService.getPaymentWendyFromID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((paymentWendy.getTourOperationDesc()) != null) { tourDescId = java.lang.String.valueOf(paymentWendy.getTourOperationDesc().getId()); }else { tourDescId = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/706/buggy-version/src.java.com.smi.travel.controller.PaymentTourHotelController.java", "BodyUseAPI": ["java.lang.String.valueOf(paymentWendy.getTourOperationDesc().getId())", "paymentWendy.getTourOperationDesc().getId()", "com.smi.travel.datalayer.entity.PaymentWendy.getTourOperationDesc()"], "Fixed commit": "fbf861cc6ed4578cbf514035b4c6f059220e7b33", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-08-27T07:16:38Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id.isBlank()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/862/buggy-version/src.ro.redeul.google.go.inspection.RedeclareInspection.java", "BodyUseAPI": [], "Fixed commit": "8bc6e272b57b909d804305a6442568b3cf4e0cdf", "Url": "https://api.github.com/repos/bronze1man/go-lang-idea-plugin", "Date": "2014-11-05T17:52:31Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(getReqParameter(com.photon.phresco.framework.actions.applications.BUILD_NUMBER))) { paramMap.put(DynamicParameter.KEY_BUILD_NO, getReqParameter(com.photon.phresco.framework.actions.applications.BUILD_NUMBER)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3487/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.applications.DynamicParameterAction.java", "BodyUseAPI": [], "Fixed commit": "52c948db66c95cc628c6ce6a1933efbc76161be8", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2012-11-20T08:59:25Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.names()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (namearray == null) { mHandler.post(new org.akorn.akorn.AkornSyncService.ToastRunnable(getString(R.string.nosearches))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8438/buggy-version/Akorn.src.main.java.org.akorn.akorn.AkornSyncService.java", "BodyUseAPI": [], "Fixed commit": "db07ad4fb0fe1cef11e799476f63c6edecb2411c", "Url": "https://api.github.com/repos/knirirr/Akorn", "Date": "2014-01-26T15:30:21Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (performVocabularyValidation) { java.util.List<org.sitenv.referenceccda.validators.RefCCDAValidationResult> vocabResults = doVocabularyValidation(validationObjective, referenceFileName, ccdaFileContents, severityLevel); if ((vocabResults != null) && (!(vocabResults.isEmpty()))) { org.sitenv.referenceccda.services.ReferenceCCDAValidationService.logger.info(\"Adding Vocabulary results\"); validatorResults.addAll(vocabResults); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4459/buggy-version/src.main.java.org.sitenv.referenceccda.services.ReferenceCCDAValidationService.java", "BodyUseAPI": [], "Fixed commit": "9d861d32584ea6bf450f690f8b3f08459b30668b", "Url": "https://api.github.com/repos/LakshmiDintakurty/referenceccdavalidator", "Date": "2017-05-10T00:32:24Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cardRulesHandler.isCardActive()) { tda367.dominion.server.main.GainMessage message = ((tda367.dominion.server.main.GainMessage) (object)); tda367.dominion.server.main.CardMessage cm = new tda367.dominion.server.main.CardMessage(); cm.setCard(message.getCard()); cardRulesHandler.activeCard.input(cm, game.getActivePlayer()); }else { tda367.dominion.server.main.GainMessage message = ((tda367.dominion.server.main.GainMessage) (object)); print((\"Bought/gained: \" + (message.getCard()))); playGain(gc, message.getCard()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4930/buggy-version/src.tda367.dominion.server.main.GameRoom.java", "BodyUseAPI": ["cardRulesHandler.activeCard.input(tda367.dominion.server.main.CardMessage,game.getActivePlayer())"], "Fixed commit": "a73187400ea7c060c24140872e97d1def9ea0d45", "Url": "https://api.github.com/repos/Glazastik/Dominion", "Date": "2013-05-24T11:57:39Z"},
{"Line": "=>712", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((moveHandler) != null) { moveHandler.removeMessages(com.pl.wheelview.WheelView.GO_ON_MOVE_REFRESH); moveHandler.sendEmptyMessage(com.pl.wheelview.WheelView.GO_ON_MOVE_INTERRUPTED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8280/buggy-version/wheelview.src.main.java.com.pl.wheelview.WheelView.java", "BodyUseAPI": [], "Fixed commit": "27bea1a3b0cbe9b76ae96a6147089c5efe0f3c43", "Url": "https://api.github.com/repos/penglu20/WheelView", "Date": "2017-04-10T05:25:05Z"},
{"Line": "=>706", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((moveHandler) != null) { moveHandler.removeMessages(com.pl.wheelview.WheelView.GO_ON_MOVE_REFRESH); moveHandler.sendEmptyMessage(com.pl.wheelview.WheelView.GO_ON_MOVE_INTERRUPTED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8280/buggy-version/wheelview.src.main.java.com.pl.wheelview.WheelView.java", "BodyUseAPI": [], "Fixed commit": "27bea1a3b0cbe9b76ae96a6147089c5efe0f3c43", "Url": "https://api.github.com/repos/penglu20/WheelView", "Date": "2017-04-10T05:25:05Z"},
{"Line": "=>973", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((str.length()) > 11) && (str.substring(0, 11).matches(\"^([A-Z]{3} ){2}\\\\d\\\\d \"))) { dateState.year = java.lang.Integer.parseInt(dateState.parts[((dateState.parts.length) - 1)]); hasDatepart.year = true; dateState.usedint[((dateState.usedint.length) - 1)] = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8644/buggy-version/src.main.java.org.pojava.datetime.DateTime.java", "BodyUseAPI": [], "Fixed commit": "348988c65f1db82bb7ef3bc7676ce1ee645f4a6a", "Url": "https://api.github.com/repos/JohnPile/pojava-datetime", "Date": "2015-06-04T12:09:34Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (matcher.find()) { sKey = matcher.group(0); sKey = sKey.replace(\"'\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2876/buggy-version/Parser.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)"], "Fixed commit": "0d40e40e70eaae3c80bd122195b367299fcaa598", "Url": "https://api.github.com/repos/blopit/SE465_project", "Date": "2016-04-01T23:21:09Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((topic) != null) && (!(topic.isEmpty()))) data.put(\"topic\", topic);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8269/buggy-version/src.main.java.net.dv8tion.jda.core.requests.restaction.ChannelAction.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "9eb0e1dfba8d04c9921f753c81764196c06b4181", "Url": "https://api.github.com/repos/BreadMoirai/JDA", "Date": "2017-05-05T03:00:23Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getCurrentItem().getType()) != (org.bukkit.Material.AIR)) { W.choosenBlock.put(player, event.getCurrentItem()); nl.Steffion.BlockHunt.Managers.MessageM.sendFMessage(player, ConfigC.normal_ShopChoosenBlock, true, (\"block-\" + (event.getCurrentItem().getType().toString().replaceAll(\"_\", \"\").replaceAll(\"BLOCK\", \"\").toLowerCase()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1573/buggy-version/src.nl.Steffion.BlockHunt.Listeners.OnInventoryClickEvent.java", "BodyUseAPI": ["event.getCurrentItem().getType().toString().replaceAll(java.lang.String,java.lang.String)", "nl.Steffion.BlockHunt.Managers.MessageM.sendFMessage(org.bukkit.entity.Player,ConfigC.normal_ShopChoosenBlock,boolean,(\"block-\" + (event.getCurrentItem().getType().toString().replaceAll(\"_\", \"\").replaceAll(\"BLOCK\", \"\").toLowerCase())))", "W.choosenBlock.put(org.bukkit.entity.Player,event.getCurrentItem())", "event.getCurrentItem().getType()", "org.bukkit.event.inventory.InventoryClickEvent.getCurrentItem()", "event.getCurrentItem().getType().toString()", "org.bukkit.event.inventory.InventoryClickEvent.getCurrentItem()", "event.getCurrentItem().getType().toString().replaceAll(\"_\", \"\").replaceAll(java.lang.String,java.lang.String)", "event.getCurrentItem().getType().toString().replaceAll(\"_\", \"\").replaceAll(\"BLOCK\", \"\").toLowerCase()"], "Fixed commit": "98962a1f2b433031a27db7418330667be25cabe9", "Url": "https://api.github.com/repos/Steffion/BlockHunt", "Date": "2013-08-28T15:31:38Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bitIndex) != 0) { int padding = 6 - (bitIndex); for (int i = 0; i < padding; i++) { java.lang.System.out.println((\"pad. bitindex: \" + (bitIndex))); writeBit(true); } writeByte(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4900/buggy-version/jgrapht-io.src.main.java.org.jgrapht.io.Graph6Sparse6Exporter.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "cd0dd3304e3ebc169772b058cc91a5f8da4fe4ac", "Url": "https://api.github.com/repos/jkinable/jgrapht", "Date": "2017-05-31T23:05:17Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (busNum > (com.example.alex.dudeimhungry.YelpSetup.totalResults)) { busNum %= com.example.alex.dudeimhungry.YelpSetup.totalResults; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3387/buggy-version/app.src.main.java.com.example.alex.dudeimhungry.YelpSetup.java", "BodyUseAPI": [], "Fixed commit": "99a214f36e1400b26222995165f71c18df716003", "Url": "https://api.github.com/repos/atomar94/Dude_Im_Hungry", "Date": "2016-03-09T11:58:44Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (bean instanceof com.github.openjson.JSONArray) { }else { init(com.github.openjson.JSONObject.objectAsMap(bean)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2303/buggy-version/src.main.java.com.github.openjson.JSONObject.java", "BodyUseAPI": [], "Fixed commit": "c4d255bf457de4021a1a692ff99b3933251766f6", "Url": "https://api.github.com/repos/openjson/openjson", "Date": "2017-06-21T10:51:33Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((uiModel.getError()) != null) { errorView.setText(uiModel.getError()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1194/buggy-version/app.src.main.java.com.tomaszpolanski.androidsandbox.main.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(uiModel.getError())", "com.tomaszpolanski.androidsandbox.main.UiModel.getError()"], "Fixed commit": "6c656104818cc3ba1cc05e84f97d91c5effcdaf1", "Url": "https://api.github.com/repos/tomaszpolanski/AndroidSandbox", "Date": "2017-05-24T09:41:01Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lv_message) != null) { lv_message.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4526/buggy-version/Pinpar.src.com.ipinpar.app.fragment.MessageFragment.java", "BodyUseAPI": [], "Fixed commit": "650825db98c804d733f7ac3128122910959b0a91", "Url": "https://api.github.com/repos/chenzefeng09/pinpar", "Date": "2015-08-05T16:11:49Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(LinkFuture.Core.Extensions.StringExtension.IsNullOrEmpty(tmp))) { if (CHARACTERS == null) { CHARACTERS = tmp; }else { CHARACTERS += tmp; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6010/buggy-version/LinkFuture.src.LinkFuture.Core.JsonManager.JsonObjectReader.java", "BodyUseAPI": [], "Fixed commit": "e0004c23cf8b0092eeac39cdbeeef8b4206f49a9", "Url": "https://api.github.com/repos/cyokin/JAVA", "Date": "2013-11-12T00:03:44Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File(inputFilename).exists())) { throw new java.io.IOException(((\"Specific file :\" + inputFilename) + \" not exist.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6010/buggy-version/LinkFuture.Compressor.src.LinkFuture.Compressor.LinkFutureCompressor.java", "BodyUseAPI": [], "Fixed commit": "e0004c23cf8b0092eeac39cdbeeef8b4206f49a9", "Url": "https://api.github.com/repos/cyokin/JAVA", "Date": "2013-11-12T00:03:44Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.maxim.issuetracker.service.ProjectService.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (project == null) { return (org.maxim.issuetracker.web.constants.MappingConstants.REDIRECT) + (org.maxim.issuetracker.web.constants.MappingConstants.ROOT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4321/buggy-version/issue-tracker.src.main.java.org.maxim.issuetracker.web.IndexController.java", "BodyUseAPI": [], "Fixed commit": "37f9c046fd1719d66a11dcd9b02892f34f7c5f24", "Url": "https://api.github.com/repos/wild-wood/IssueTracker", "Date": "2015-08-20T10:40:56Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN)) com.qihoo360.replugin.loader.p.PluginProviderClient.ProxyRePluginProviderClientVar.query2 = new com.qihoo360.replugin.MethodInvoker(classLoader, rePluginProviderClient, \"query\", new java.lang.Class<?>[]{ android.content.Context.class, android.net.Uri.class, java.lang.String[].class, java.lang.String.class, java.lang.String[].class, java.lang.String.class, android.os.CancellationSignal.class });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7996/buggy-version/replugin-plugin-library.replugin-plugin-lib.src.main.java.com.qihoo360.replugin.loader.p.PluginProviderClient.java", "BodyUseAPI": [], "Fixed commit": "ac0ffb94c3fb3b7a50e7300d004d6c6bf80a6c66", "Url": "https://api.github.com/repos/Qihoo360/RePlugin", "Date": "2017-10-18T04:42:09Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.cornell.kfs.concur.batch.service.impl.ConcurEmployeeInfoValidationServiceImpl.validPdpAddress(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!valid) { validationMessage = getConfigurationService().getPropertyValueAsString(ConcurKeyConstants.CONCUR_INCOMPLETE_ADDRESS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2663/buggy-version/src.main.java.edu.cornell.kfs.concur.batch.service.impl.ConcurEmployeeInfoValidationServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "0a49814910532e0e195b675d1a8964128f3dfac7", "Url": "https://api.github.com/repos/CU-CommunityApps/cu-kfs", "Date": "2017-06-07T20:45:22Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (vipDaoCheck != null) { if (!(vipDaoCheck.getPatientNo().equals(vipDaoFound.getPatientNo()))) { return new com.everbetter.common.utils.result.Result(ReturnCode.FAILURE.code, \"\u6b64\u75c5\u6848\u53f7\u5df2\u7ecf\u5b58\u5728\uff0c\u4e0d\u80fd\u4fee\u6539\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/903/buggy-version/src.main.java.com.everbetter.controller.VipController.java", "BodyUseAPI": ["com.everbetter.controller.VipDao.getPatientNo()", "vipDaoCheck.getPatientNo().equals(vipDaoFound.getPatientNo())"], "Fixed commit": "887f1b84285cef2d9ad11d89d731c97c75bc16f2", "Url": "https://api.github.com/repos/champion626/everbetter", "Date": "2017-09-11T06:47:01Z"},
{"Line": "=>1200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastKnownVersion == null) { lastKnownVersion = new java.lang.Long((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3771/buggy-version/security-admin.src.main.java.org.apache.ranger.rest.ServiceREST.java", "BodyUseAPI": [], "Fixed commit": "5a743e0aee657e6ddadf60b920df50ff580d99bf", "Url": "https://api.github.com/repos/apache/ranger", "Date": "2015-06-05T16:47:03Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (io.mdevlab.unconnectify.utils.DialogUtils.showDialog(mContext)) { if ((mAlarm) != null) { if (!(lastConnectionIsUnchecked())) io.mdevlab.unconnectify.alarm.AlarmManager.getInstance(mContext).updateAlarmConnection(mAlarm.getAlarmId(), Connection.HOTSPOT, isChecked); } }else { mHotspot.setChecked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/223/buggy-version/app.src.main.java.io.mdevlab.unconnectify.adapter.AlarmViewHolder.java", "BodyUseAPI": ["io.mdevlab.unconnectify.alarm.AlarmManager.getInstance(mContext).updateAlarmConnection(mAlarm.getAlarmId(),Connection.HOTSPOT,boolean)", "io.mdevlab.unconnectify.alarm.AlarmManager.getInstance(android.content.Context)"], "Fixed commit": "847b71b3d8ebb2a646685d03f8d1e62b6cc1c2b9", "Url": "https://api.github.com/repos/mdevlab/unconnectify", "Date": "2017-02-27T13:56:11Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type instanceof java.lang.reflect.ParameterizedType) { final java.lang.reflect.ParameterizedType parameterizedType = ((java.lang.reflect.ParameterizedType) (type)); if (parameterizedType.getRawType().equals(javax.ws.rs.core.GenericEntity.class)) { t = parameterizedType.getActualTypeArguments()[0]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7258/buggy-version/core-server.src.main.java.org.glassfish.jersey.server.ContainerResponse.java", "BodyUseAPI": [], "Fixed commit": "51398d1ccd4d8693c8c1257f196c259920b81216", "Url": "https://api.github.com/repos/jersey/jersey", "Date": "2013-03-15T13:48:30Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.intellij.psi.PsiElement>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == fieldDefault) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7444/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.AmbiguousMemberInitializationInspector.java", "BodyUseAPI": [], "Fixed commit": "0ee0fc0ea69319958d1365d47a0ccf0a252ea4a8", "Url": "https://api.github.com/repos/funivan/phpinspectionsea", "Date": "2017-02-23T21:27:06Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s2.equalsIgnoreCase(\"interval\")) && ((s.tail().head().ttype) == (TokenType.String))) { java.lang.String sc = s.tail().head().str; java.lang.String sclean = sc.substring(1, ((sc.length()) - 1)); return new spinat.plsqlparser.Res<spinat.plsqlparser.Ast.Expression>(new spinat.plsqlparser.Ast.CString(sclean.replace(\"''\", \"'\")), s.tail().tail().tail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8536/buggy-version/src.spinat.plsqlparser.Parser.java", "BodyUseAPI": ["s.tail().tail()", "spinat.plsqlparser.Seq.tail()", "spinat.plsqlparser.Seq.tail()", "s.tail().head()", "s.tail().tail().tail()"], "Fixed commit": "bb17c84cc2f8dd6901e6f5ad51be3ef4230aa073", "Url": "https://api.github.com/repos/raverkamp/plsql-code-coverage", "Date": "2016-02-19T05:43:37Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((auditLogFilter.getDateTo()) != null) && (!(auditLogFilter.getDateTo().isEmpty()))) { filterTo = com.sos.joc.classes.JobSchedulerDate.getDate(auditLogFilter.getDateTo(), auditLogFilter.getTimeZone()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5795/buggy-version/webservice.src.main.java.com.sos.joc.audit.impl.AuditLogResourceImpl.java", "BodyUseAPI": ["com.sos.joc.model.audit.AuditLogFilter.getTimeZone()", "com.sos.joc.model.audit.AuditLogFilter.getDateTo()", "com.sos.joc.classes.JobSchedulerDate.getDate(auditLogFilter.getDateTo(),auditLogFilter.getTimeZone())"], "Fixed commit": "3c6502a29ed82d640512be58f3c0a5b125022a2c", "Url": "https://api.github.com/repos/sos-berlin/joc", "Date": "2017-02-02T07:37:37Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((auditLogFilter.getDateFrom()) != null) && (!(auditLogFilter.getDateFrom().isEmpty()))) { filterFrom = com.sos.joc.classes.JobSchedulerDate.getDate(auditLogFilter.getDateFrom(), auditLogFilter.getTimeZone()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5795/buggy-version/webservice.src.main.java.com.sos.joc.audit.impl.AuditLogResourceImpl.java", "BodyUseAPI": ["com.sos.joc.model.audit.AuditLogFilter.getDateFrom()", "com.sos.joc.classes.JobSchedulerDate.getDate(auditLogFilter.getDateFrom(),auditLogFilter.getTimeZone())", "com.sos.joc.model.audit.AuditLogFilter.getTimeZone()"], "Fixed commit": "3c6502a29ed82d640512be58f3c0a5b125022a2c", "Url": "https://api.github.com/repos/sos-berlin/joc", "Date": "2017-02-02T07:37:37Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item1.levelupRequirements) == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7094/buggy-version/AndorsTrail.src.com.gpl.rpg.AndorsTrail.view.SkillListAdapter.java", "BodyUseAPI": [], "Fixed commit": "6fec8de9be7f9a9c603f5eb3a47a67b4c4bb7c11", "Url": "https://api.github.com/repos/Zukero/andors-trail", "Date": "2017-03-01T14:47:18Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item2.levelupRequirements) == null) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7094/buggy-version/AndorsTrail.src.com.gpl.rpg.AndorsTrail.view.SkillListAdapter.java", "BodyUseAPI": [], "Fixed commit": "6fec8de9be7f9a9c603f5eb3a47a67b4c4bb7c11", "Url": "https://api.github.com/repos/Zukero/andors-trail", "Date": "2017-03-01T14:47:18Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/63/buggy-version/src.main.java.com.mridang.callstats.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "2dff8d069067530b80f55be3f72da465f58e522b", "Url": "https://api.github.com/repos/mridang/dashclock-callstats", "Date": "2015-03-29T09:09:17Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((codeSizes2.get(m)) % 8) == 0) length = (codeSizes2.get(m)) / 8; else length = ((codeSizes2.get(m)) / 8) + 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1051/buggy-version/src.huffmanfolders.HuffmanFolders.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.get(int)", "java.util.ArrayList<java.lang.Integer>.get(int)"], "Fixed commit": "ce94b761f2f23bacd65c22cd544f40eac495101a", "Url": "https://api.github.com/repos/SalmaHassan3927/HuffmanFolders", "Date": "2017-12-26T14:13:12Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((current) == null) || ((directory) == null)) { return \"zzNullzz\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4126/buggy-version/MineTweaker3-API.src.main.java.minetweaker.runtime.providers.ScriptIteratorDirectory.java", "BodyUseAPI": [], "Fixed commit": "8d97a0cc2a37988b87931090e2f93d1dd8fd8ef5", "Url": "https://api.github.com/repos/CraftTweaker/CraftTweaker", "Date": "2016-12-08T17:15:37Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pref != null) && (!(pref.isPersistant()))) && (!createIfNotNull)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5879/buggy-version/src.org.rapla.storage.impl.AbstractCachableOperator.java", "BodyUseAPI": [], "Fixed commit": "37304eb28aca8b3b051983beae649f63faafe2c7", "Url": "https://api.github.com/repos/rapla/rapla", "Date": "2014-03-14T12:19:38Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (value != null) { if (value instanceof java.lang.String) { java.lang.String text = ((java.lang.String) (value)); entityBuilder.addTextBody(key, text, org.apache.http.entity.ContentType.create(\"*/*\", charset)); }else if (value instanceof java.io.File) { java.io.File file = ((java.io.File) (value)); entityBuilder.addBinaryBody(key, file); }else { java.lang.String canonicalName = value.getClass().getCanonicalName(); throw new java.lang.UnsupportedOperationException((((\"No Handler found for \" + canonicalName) + \". Only String or File is accepted, \") + \"because http parameters knows no other types.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2683/buggy-version/src.main.java.net.sourceforge.jwbf.core.actions.HttpActionClient.java", "BodyUseAPI": ["java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getCanonicalName()"], "Fixed commit": "c74a02cd479e1b648c428b77fc647e550b93fb33", "Url": "https://api.github.com/repos/Hunsu/jwbf", "Date": "2015-01-05T12:05:07Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!first) { query += \" OR \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8038/buggy-version/commons.src.main.java.com.anyfetch.companion.commons.android.pojo.Person.java", "BodyUseAPI": [], "Fixed commit": "7500fa9a7143d751cc7bafadc07014ad5ba6165b", "Url": "https://api.github.com/repos/AnyFetch/companion", "Date": "2014-10-15T09:16:45Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mName) != null) { query = (\"(\" + (mName)) + \")\"; first = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8038/buggy-version/commons.src.main.java.com.anyfetch.companion.commons.android.pojo.Person.java", "BodyUseAPI": [], "Fixed commit": "7500fa9a7143d751cc7bafadc07014ad5ba6165b", "Url": "https://api.github.com/repos/AnyFetch/companion", "Date": "2014-10-15T09:16:45Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.anyfetch.companion.commons.android.pojo.Person>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((person.getName()) == null) || (person.getName().equals(\"\"))) && ((person.getEmails().size()) > 0)) { nameView.setText(person.getEmails().get(0)); }else { nameView.setText(person.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8038/buggy-version/mobile.src.main.java.com.anyfetch.companion.adapters.PeopleListAdapter.java", "BodyUseAPI": ["com.anyfetch.companion.commons.android.pojo.Person.getEmails()", "android.widget.TextView.setText(person.getEmails().get(0))", "com.anyfetch.companion.commons.android.pojo.Person.getName()", "android.widget.TextView.setText(person.getName())", "person.getEmails().get(int)"], "Fixed commit": "7500fa9a7143d751cc7bafadc07014ad5ba6165b", "Url": "https://api.github.com/repos/AnyFetch/companion", "Date": "2014-10-15T09:16:45Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.htmlcleaner.TagNode.getAllChildren()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((allChildren.size()) == 0) { return new org.htmlcleaner.ContentNode(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7414/buggy-version/src.main.java.com.vertkl.importer.UkClimbingConnector.java", "BodyUseAPI": [], "Fixed commit": "e81835f4f0565a1af0e3b7eda39ae132acf2ddc9", "Url": "https://api.github.com/repos/vertkl/crag-importer", "Date": "2014-01-12T00:05:28Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.capitalistlepton.Plague.thread.isAlive()) { com.capitalistlepton.Plague.kill = true; try { com.capitalistlepton.Plague.thread.join(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7992/buggy-version/src.main.java.com.capitalistlepton.Plague.java", "BodyUseAPI": ["java.lang.Thread.join()"], "Fixed commit": "3eb28a5b4cb9f9ac9a06a7df2b86aaf6976fa4b0", "Url": "https://api.github.com/repos/CapitalistLepton/Plague", "Date": "2017-03-28T02:32:45Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 24) { fileUri = android.support.v4.content.FileProvider.getUriForFile(context, context.getPackageName(), file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8468/buggy-version/autoupdate.src.main.java.com.digigene.autoupdate.presenter.DownloadDialogPresenterImpl.java", "BodyUseAPI": [], "Fixed commit": "69caabbc1647bbcb3856ee3ef2fd53deffa99944", "Url": "https://api.github.com/repos/digigene/auto-update", "Date": "2017-01-16T07:55:47Z"},
{"Line": "=>827", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shaded.com.google.common.base.Strings.isNullOrEmpty(value)) { return hudson.util.FormValidation.ok(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/3495/buggy-version/jclouds-plugin.src.main.java.jenkins.plugins.jclouds.compute.JCloudsSlaveTemplate.java", "BodyUseAPI": [], "Fixed commit": "2029f0bc477870be702a27575c7adfaf893b7fb2", "Url": "https://api.github.com/repos/OpenDataSpace/jclouds-plugin", "Date": "2015-09-11T15:05:25Z"},
{"Line": "=>1008", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.getInt(\"day\")) == 0) if ((t1.getInt(\"day\")) == 0) { return ((int) (((s.getLong(\"time\")) % (((24 * 60) * 60) * 1000L)) - ((t1.getLong(\"time\")) % (((24 * 60) * 60) * 1000L)))); }else { return java.lang.Integer.MIN_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/18/buggy-version/app.src.main.java.au.com.wallaceit.pebblewatchfacescheduler.MainActivity.java", "BodyUseAPI": ["org.json.JSONObject.getLong(java.lang.String)"], "Fixed commit": "fd77aee581419eee4a81fb8451e94eaa842461a6", "Url": "https://api.github.com/repos/micwallace/PebbleWatchfaceScheduler", "Date": "2016-01-15T07:05:45Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tagStr.trim().equals(\"\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/938/buggy-version/src.pdf.SnippetServlet.java", "BodyUseAPI": [], "Fixed commit": "c0bbd7d00c3fac572692622e0dbf4c7573cbf04c", "Url": "https://api.github.com/repos/ProfTeX/Web-Application", "Date": "2015-04-24T03:14:11Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((readVersionCode()) == 0) || ((readVersionCode()) != (versionCode))) { if (isConnected()) { updateDeviceRegistration(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6139/buggy-version/HIP.app.src.main.java.org.mti.hip.DashboardActivity.java", "BodyUseAPI": [], "Fixed commit": "30271a61d30f72d6bcdeac36bc57ca5e8fcad7f3", "Url": "https://api.github.com/repos/MedicalTeams/mti-android-app", "Date": "2015-12-14T16:53:19Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isServerConstantsSyncOverdue()) { getServerConstants(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6139/buggy-version/HIP.app.src.main.java.org.mti.hip.DashboardActivity.java", "BodyUseAPI": [], "Fixed commit": "30271a61d30f72d6bcdeac36bc57ca5e8fcad7f3", "Url": "https://api.github.com/repos/MedicalTeams/mti-android-app", "Date": "2015-12-14T16:53:19Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((r.height) <= 0) { r.height = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1686/buggy-version/zag-swing.src.main.java.org.p2c2e.zing.swing.GraphicsWindow.java", "BodyUseAPI": [], "Fixed commit": "b515d352816b9649440fb1e1cd343b55ef62ac11", "Url": "https://api.github.com/repos/Banbury/zag", "Date": "2017-03-27T04:42:07Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((r.width) <= 0) { r.width = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1686/buggy-version/zag-swing.src.main.java.org.p2c2e.zing.swing.GraphicsWindow.java", "BodyUseAPI": [], "Fixed commit": "b515d352816b9649440fb1e1cd343b55ef62ac11", "Url": "https://api.github.com/repos/Banbury/zag", "Date": "2017-03-27T04:42:07Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jp.primecloud.auto.api.address.ListAwsAddress.read(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (platform.getPlatformNo().equals(awsAddress.getPlatformNo())) { jp.primecloud.auto.api.response.address.AwsAddressResponse awsAddressResponse = new jp.primecloud.auto.api.response.address.AwsAddressResponse(awsAddress); response.getAwsAddresses().add(awsAddressResponse); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5483/buggy-version/auto-project.auto-api.src.main.java.jp.primecloud.auto.api.address.ListAwsAddress.java", "BodyUseAPI": [], "Fixed commit": "4ba195fd9090c79cab9d08ff9592abef0ef65e01", "Url": "https://api.github.com/repos/primecloud-controller-org/primecloud-controller", "Date": "2016-07-27T02:13:30Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((android.os.Looper.getMainLooper()) == (handler.getLooper())) { delegate.onHttpError(e); }else { handler.post(new java.lang.Runnable() { @java.lang.Override public void run() { delegate.onHttpError(e); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1423/buggy-version/apollo-android-support.src.main.java.com.apollographql.apollo.ApolloCallback.java", "BodyUseAPI": ["android.os.Handler.post(java.lang.Runnable)"], "Fixed commit": "e57e7498e744b6236551a706f62104d12c0d3009", "Url": "https://api.github.com/repos/apollographql/apollo-android", "Date": "2017-08-17T00:07:14Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasDAtaForStock) { dataExists = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6487/buggy-version/src.main.java.org.investovator.dataplaybackengine.player.DailySummaryDataPLayer.java", "BodyUseAPI": [], "Fixed commit": "d5c3d2fc910b3d50d5a1d315cd9b3585801743f6", "Url": "https://api.github.com/repos/investovator/investovator-dataplaybackengine", "Date": "2013-10-27T12:57:05Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.maxchehab.fingerprinter.ServerService.currentClient) == (clientNumber)) { com.maxchehab.fingerprinter.ServerService.connected = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/306/buggy-version/android-application.Finger-Printer.app.src.main.java.com.maxchehab.fingerprinter.ServerService.java", "BodyUseAPI": [], "Fixed commit": "5ec70413c79f47f7f5b72e850f77ecc750fd6923", "Url": "https://api.github.com/repos/maxchehab/Finger-Printer", "Date": "2017-07-21T23:42:22Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != input) { name = input.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/577/buggy-version/src.main.java.flexagon.fd.plugin.jenkins.utils.Credential.java", "BodyUseAPI": ["flexagon.fd.plugin.jenkins.utils.Credential.getName()"], "Fixed commit": "6147cc1dcbdc8364a9ce6540ae36f7c1493b33d1", "Url": "https://api.github.com/repos/bhoffman20/jenkinsFlexDeployPlugin", "Date": "2017-10-02T19:58:07Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["liquibase.snapshot.DatabaseSnapshot.getDatabase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((database.getDatabaseMajorVersion()) >= 9) { sql = ((((\"SELECT\\n\" + (((((\" CAST(value as varchar(max)) as REMARKS\\n\" + \" FROM\\n\") + \" sys.extended_properties\\n\") + \" WHERE\\n\") + \" name='MS_Description' \") + \" AND major_id = OBJECT_ID('\")) + (database.escapeStringForDatabase(database.escapeTableName(null, schemaName, table.getName())))) + \"\\')\\n\") + \" AND\\n\") + \" minor_id = 0\"; }else { sql = (((((\"SELECT CAST([p].[value] AS [nvarchar](4000)) AS [REMARKS] \" + (\"FROM [dbo].[sysproperties] AS [p] \" + \"WHERE [p].[id] = OBJECT_ID(N'\")) + (database.escapeStringForDatabase(database.escapeTableName(null, schemaName, table.getName())))) + \"') \") + \"AND [p].[smallid] = 0 \") + \"AND [p].[type] = 3 \") + \"AND [p].[name] = 'MS_Description'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2924/buggy-version/liquibase-core.src.main.java.liquibase.snapshot.jvm.TableSnapshotGenerator.java", "BodyUseAPI": ["liquibase.database.Database.escapeTableName(<nulltype>,java.lang.String,table.getName())", "liquibase.database.Database.escapeTableName(<nulltype>,java.lang.String,table.getName())", "liquibase.database.Database.escapeStringForDatabase(database.escapeTableName(null, schemaName, table.getName()))", "liquibase.database.Database.escapeStringForDatabase(database.escapeTableName(null, schemaName, table.getName()))"], "Fixed commit": "2b7c7a43f14c66ad7481d0a9f2a24eb3b9869689", "Url": "https://api.github.com/repos/roywang1985/liquibase", "Date": "2016-06-15T05:22:11Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getReadPreference()) == null) { java.lang.String msg = (\"Could not resolve specified ReadPreference of type \" + readPreference) + \". Read preferences are resolved from inner classes of com.mongodb.ReadPreference.\"; throw new java.lang.IllegalArgumentException(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4544/buggy-version/components.camel-mongodb.src.main.java.org.apache.camel.component.mongodb.MongoDbEndpoint.java", "BodyUseAPI": [], "Fixed commit": "e9f4fb8556d5d828166cff41ce9e81483edd580b", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-04-13T09:17:45Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mConfigUriBeacon.getLockState()) { mService.writeCharacteristic(org.uribeacon.config.ProtocolV2.UNLOCK, configUriBeacon.getKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8285/buggy-version/android-uribeacon.uribeacon-library.src.main.java.org.uribeacon.config.ProtocolV2.java", "BodyUseAPI": [], "Fixed commit": "52356b3cfadf6ca778ad26db00468def43a90950", "Url": "https://api.github.com/repos/keremgocen/uribeacon", "Date": "2014-12-04T22:07:17Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (configUriBeacon.getReset()) { mService.writeCharacteristic(org.uribeacon.config.ProtocolV2.RESET, new byte[]{ 1 }); }else { if (((configUriBeacon.getUriString()) != null) && (!(configUriBeacon.getUriString().equals(mConfigUriBeacon.getUriString())))) { mService.writeCharacteristic(org.uribeacon.config.ProtocolV2.DATA, configUriBeacon.getUriBytes()); } if ((configUriBeacon.getFlags()) != (mConfigUriBeacon.getFlags())) { mService.writeCharacteristic(org.uribeacon.config.ProtocolV2.FLAGS, new byte[]{ configUriBeacon.getFlags() }); } if (((configUriBeacon.getAdvertisedTxPowerLevels()) != null) && (!(java.util.Arrays.equals(configUriBeacon.getAdvertisedTxPowerLevels(), mConfigUriBeacon.getAdvertisedTxPowerLevels())))) { mService.writeCharacteristic(org.uribeacon.config.ProtocolV2.POWER_LEVELS, configUriBeacon.getAdvertisedTxPowerLevels()); } if (((configUriBeacon.getTxPowerMode()) != (org.uribeacon.beacon.ConfigUriBeacon.POWER_MODE_NONE)) && ((configUriBeacon.getTxPowerMode()) != (mConfigUriBeacon.getTxPowerMode()))) { mService.writeCharacteristic(org.uribeacon.config.ProtocolV2.POWER_MODE, new byte[]{ configUriBeacon.getTxPowerMode() }); } if (((configUriBeacon.getBeaconPeriod()) != (org.uribeacon.beacon.ConfigUriBeacon.PERIOD_NONE)) && ((configUriBeacon.getBeaconPeriod()) != (mConfigUriBeacon.getBeaconPeriod()))) { mService.writeCharacteristic(org.uribeacon.config.ProtocolV2.PERIOD, configUriBeacon.getBeaconPeriod(), org.uribeacon.config.ProtocolV2.PERIOD_FORMAT, 0); } if (configUriBeacon.getLockState()) { mService.writeCharacteristic(org.uribeacon.config.ProtocolV2.LOCK, configUriBeacon.getKey()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8285/buggy-version/android-uribeacon.uribeacon-library.src.main.java.org.uribeacon.config.ProtocolV2.java", "BodyUseAPI": ["org.uribeacon.beacon.ConfigUriBeacon.getUriString()", "org.uribeacon.config.GattService.writeCharacteristic(java.util.UUID,configUriBeacon.getAdvertisedTxPowerLevels())", "org.uribeacon.beacon.ConfigUriBeacon.getAdvertisedTxPowerLevels()", "org.uribeacon.beacon.ConfigUriBeacon.getTxPowerMode()", "org.uribeacon.beacon.ConfigUriBeacon.getAdvertisedTxPowerLevels()", "org.uribeacon.beacon.ConfigUriBeacon.getBeaconPeriod()", "org.uribeacon.beacon.ConfigUriBeacon.getTxPowerMode()", "org.uribeacon.beacon.ConfigUriBeacon.getTxPowerMode()", "org.uribeacon.beacon.ConfigUriBeacon.getFlags()", "org.uribeacon.beacon.ConfigUriBeacon.getUriString()", "org.uribeacon.beacon.ConfigUriBeacon.getBeaconPeriod()", "org.uribeacon.config.GattService.writeCharacteristic(java.util.UUID,configUriBeacon.getUriBytes())", "org.uribeacon.config.GattService.writeCharacteristic(java.util.UUID,configUriBeacon.getKey())", "org.uribeacon.beacon.ConfigUriBeacon.getFlags()", "org.uribeacon.config.GattService.writeCharacteristic(java.util.UUID,byte[])", "org.uribeacon.config.GattService.writeCharacteristic(java.util.UUID,byte[])", "org.uribeacon.beacon.ConfigUriBeacon.getBeaconPeriod()", "java.util.Arrays.equals(configUriBeacon.getAdvertisedTxPowerLevels(),mConfigUriBeacon.getAdvertisedTxPowerLevels())", "org.uribeacon.beacon.ConfigUriBeacon.getUriBytes()", "org.uribeacon.config.GattService.writeCharacteristic(java.util.UUID,configUriBeacon.getBeaconPeriod(),int,int)", "org.uribeacon.beacon.ConfigUriBeacon.getAdvertisedTxPowerLevels()", "configUriBeacon.getUriString().equals(mConfigUriBeacon.getUriString())", "org.uribeacon.beacon.ConfigUriBeacon.getKey()", "org.uribeacon.beacon.ConfigUriBeacon.getLockState()"], "Fixed commit": "52356b3cfadf6ca778ad26db00468def43a90950", "Url": "https://api.github.com/repos/keremgocen/uribeacon", "Date": "2014-12-04T22:07:17Z"},
{"Line": "=>2300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!valid) { java.lang.String val = subString(bp, (offset - 1)); throw new java.lang.NumberFormatException(val); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/312/buggy-version/src.main.java.com.alibaba.fastjson.parser.JSONLexerBase.java", "BodyUseAPI": [], "Fixed commit": "5ed965e7b68f571274cfcd19ad40c05e2cefcdbe", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-08-20T09:13:26Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.joda.money.MoneyUtils.isNegative(money)) { money = money.negated(); appendable.append(activeStyle.getNegativeSignCharacter()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5226/buggy-version/src.main.java.org.joda.money.format.AmountPrinterParser.java", "BodyUseAPI": ["org.joda.money.BigMoney.negated()"], "Fixed commit": "976b88762538befbba80196e5fbcfdf071693dad", "Url": "https://api.github.com/repos/JodaOrg/joda-money", "Date": "2013-01-03T11:48:26Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.namelessdev.mpdroid.LibraryTabActivity.getActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (actionBar != null) { actionBar.setDisplayHomeAsUpEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/6059/buggy-version/MPDroid.src.com.namelessdev.mpdroid.LibraryTabActivity.java", "BodyUseAPI": ["android.app.ActionBar.setDisplayHomeAsUpEnabled(boolean)"], "Fixed commit": "ad5ff56008b815cf66236c432cfa126060ac6197", "Url": "https://api.github.com/repos/mafrosis/dmix", "Date": "2011-06-26T01:23:49Z"},
{"Line": "=>1799", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.photon.phresco.service.rest.api.ComponentService.findOne(com.photon.phresco.service.rest.api.TECHNOLOGIES_COLLECTION_NAME,org.springframework.data.document.mongodb.query.Query,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (tech != null) { java.util.List<java.lang.String> reportIds = tech.getReports(); reports = mongoOperation.find(com.photon.phresco.service.rest.api.REPORTS_COLLECTION_NAME, new org.springframework.data.document.mongodb.query.Query(org.springframework.data.document.mongodb.query.Criteria.whereId().in(reportIds.toArray())), com.phresco.pom.site.Reports.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5193/buggy-version/phresco-service-web.src.main.java.com.photon.phresco.service.rest.api.ComponentService.java", "BodyUseAPI": ["com.photon.phresco.service.dao.TechnologyDAO.getReports()"], "Fixed commit": "bcdf36134244b2e2d754f4cc2dd272e137147550", "Url": "https://api.github.com/repos/phresco/service", "Date": "2013-01-30T15:16:25Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileSize == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5193/buggy-version/phresco-service-impl.src.main.java.com.photon.phresco.service.converters.ArtifactGroupConverter.java", "BodyUseAPI": [], "Fixed commit": "bcdf36134244b2e2d754f4cc2dd272e137147550", "Url": "https://api.github.com/repos/phresco/service", "Date": "2013-01-30T15:16:25Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (task.getMaxDepthOfCrawling().isPresent()) { config.setMaxDepthOfCrawling(task.getMaxDepthOfCrawling().get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4968/buggy-version/src.main.java.org.embulk.filter.crawler.CrawlerFilterPlugin.java", "BodyUseAPI": ["org.embulk.filter.crawler.CrawlerFilterPlugin.PluginTask.getMaxDepthOfCrawling()", "com.google.common.base.Optional<java.lang.Integer>.get()", "edu.uci.ics.crawler4j.crawler.CrawlConfig.setMaxDepthOfCrawling(task.getMaxDepthOfCrawling().get())"], "Fixed commit": "7fc714d723e9183d0d14220d14bd392626813f5e", "Url": "https://api.github.com/repos/toyama0919/embulk-filter-crawler", "Date": "2016-03-22T08:09:30Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (null == f) { throw new java.lang.IllegalArgumentException(\"field cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5055/buggy-version/src.net.i2p.crypto.eddsa.math.FieldElement.java", "BodyUseAPI": [], "Fixed commit": "55bd51f3c135797ef5e4bfc37a5010e7e0b301c9", "Url": "https://api.github.com/repos/BloodyRookie/ed25519-java", "Date": "2014-10-01T16:49:28Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inputManager) != null) { inputManager.setCursorVisible(dragToRotate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4384/buggy-version/jme3-core.src.main.java.com.jme3.app.ChaseCameraAppState.java", "BodyUseAPI": [], "Fixed commit": "8d1859bbe574bbce6ebdf14614c5ba34f737efce", "Url": "https://api.github.com/repos/MeFisto94/jmonkeyengine", "Date": "2014-12-08T23:00:08Z"},
{"Line": "=>1136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isWithinInvocation())) && (isCeylonCallable(expr.getTypeModel()))) { return appliedExpr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8266/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.ExpressionTransformer.java", "BodyUseAPI": [], "Fixed commit": "dd822e6d46e5c219c0398461966b3928b9d154bf", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2012-03-27T10:48:44Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text.equals(\"abc\")) { return new java.lang.String(\"def\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8398/buggy-version/sample-spring-boot-kitchensink.src.main.java.com.example.bot.spring.SQLDatabaseEngine.java", "BodyUseAPI": [], "Fixed commit": "5ba5c2aa85122767c3004178002ec2d2443591f0", "Url": "https://api.github.com/repos/kv19971/Line-chatbot-for-COMP3111", "Date": "2017-09-16T20:23:28Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ensifera.animosity.craftirc.CraftIRC.cPathAttribute(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((realTarget.getType()) != (EndPoint.Type.IRC)) || (!colors)) { result = result.replaceAll((((((((((\"(\" + (java.lang.Character.toString(((char) (2))))) + \"|\") + (java.lang.Character.toString(((char) (15))))) + \"|\") + (java.lang.Character.toString(((char) (22))))) + (java.lang.Character.toString(((char) (31))))) + \"|\") + (java.lang.Character.toString(((char) (3))))) + \"[0-9]{0,2}(,[0-9]{0,2})?)\"), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2304/buggy-version/com.ensifera.animosity.craftirc.RelayedMessage.java", "BodyUseAPI": [], "Fixed commit": "b1262280778e9757bc7ab185388b0e04392a8836", "Url": "https://api.github.com/repos/Animosity/CraftIRC", "Date": "2011-07-26T17:31:47Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ensifera.animosity.craftirc.CraftIRC.cPathAttribute(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((realTarget.getType()) != (EndPoint.Type.MINECRAFT)) || (!colors)) { result = result.replaceAll(\"(\\u00c2\\u00a7([A-Fa-f0-9])?)\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2304/buggy-version/com.ensifera.animosity.craftirc.RelayedMessage.java", "BodyUseAPI": [], "Fixed commit": "b1262280778e9757bc7ab185388b0e04392a8836", "Url": "https://api.github.com/repos/Animosity/CraftIRC", "Date": "2011-07-26T17:31:47Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((props.getProperty(\"accinfo1\")) == null)) { txtAccinfo1.setText(handleCrypto(false, props.getProperty(\"accinfo1\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7086/buggy-version/src.de.chrisyou.steamrelaunch.SteamRelaunch.java", "BodyUseAPI": ["javax.swing.JTextField.setText(java.lang.String)", "java.util.Properties.getProperty(java.lang.String)", "de.chrisyou.steamrelaunch.SteamRelaunch.handleCrypto(boolean,java.lang.String)"], "Fixed commit": "d69a8b6d617310244754a0e7525c54a062f59f0f", "Url": "https://api.github.com/repos/chrisyou/steamrelaunch", "Date": "2015-04-02T01:09:11Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((props.getProperty(\"accinfo2\")) == null)) { txtAccinfo2.setText(handleCrypto(false, props.getProperty(\"accinfo2\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7086/buggy-version/src.de.chrisyou.steamrelaunch.SteamRelaunch.java", "BodyUseAPI": ["de.chrisyou.steamrelaunch.SteamRelaunch.handleCrypto(boolean,java.lang.String)", "java.util.Properties.getProperty(java.lang.String)", "javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "d69a8b6d617310244754a0e7525c54a062f59f0f", "Url": "https://api.github.com/repos/chrisyou/steamrelaunch", "Date": "2015-04-02T01:09:11Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((testFiles) == null)) { for (sk.fei.stuba.xpivarcim.db.entities.assignment.TestFile f : testFiles) if (!(f.isRunTest())) output.add(f); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3793/buggy-version/src.main.java.sk.fei.stuba.xpivarcim.db.entities.Assignment.java", "BodyUseAPI": [], "Fixed commit": "99562d6429afaf26c2eafa04c802b3c6e237924a", "Url": "https://api.github.com/repos/matwej/thesis", "Date": "2016-05-27T14:26:21Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((testFiles) == null)) { for (sk.fei.stuba.xpivarcim.db.entities.assignment.TestFile f : testFiles) if (f.isRunTest()) output.add(f); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3793/buggy-version/src.main.java.sk.fei.stuba.xpivarcim.db.entities.Assignment.java", "BodyUseAPI": [], "Fixed commit": "99562d6429afaf26c2eafa04c802b3c6e237924a", "Url": "https://api.github.com/repos/matwej/thesis", "Date": "2016-05-27T14:26:21Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.accounts.AccountManager.getAccountsByType(mainActivity.getString(R.string.application_account_type))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((accounts.length) > 0) { this.userAccount = accounts[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1804/buggy-version/app.src.main.java.com.example.robert.family.Session.java", "BodyUseAPI": [], "Fixed commit": "babc982e4eee4ac88bd36cba7da7b5901d3e7a72", "Url": "https://api.github.com/repos/roeri/family", "Date": "2015-03-28T23:19:19Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edi.com.mobgage2.managers.ActiveSelectionData.getInstance().getCurrentUser()) == null) { userID = \"not_signed@not_signed.com\"; }else { userID = edi.com.mobgage2.managers.ActiveSelectionData.getInstance().getCurrentUser().userID; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6687/buggy-version/app.src.main.java.edi.com.mobgage2.fragments.ChooseBankFragment.java", "BodyUseAPI": [], "Fixed commit": "ad09ca890614fcef9cdbb71a281ee838b56f9872", "Url": "https://api.github.com/repos/ediber/Mobgage2", "Date": "2016-11-02T18:36:51Z"},
{"Line": "=>9679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.server.wm.WindowList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((w.mExiting) && ((w.mLastFreezeDuration) > (com.android.server.wm.WindowManagerService.WINDOW_EXITING_TIME_OUT))) && ((w.mInputChannel) == null)) { removeWindowInnerLocked(w.mSession, w); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1870/buggy-version/services.core.java.com.android.server.wm.WindowManagerService.java", "BodyUseAPI": ["com.android.server.wm.WindowManagerService.removeWindowInnerLocked(w.mSession,com.android.server.wm.WindowState)"], "Fixed commit": "1dd7b1c754e1a9df98168c526c9870b6c30a67bc", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-base", "Date": "2015-04-22T16:18:27Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ids.length) == 0) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7078/buggy-version/src.main.java.com.jeanchampemont.wtfdyum.service.impl.TwitterServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "4d995b59ffcc4282bdebf571ae0f7abce013da98", "Url": "https://api.github.com/repos/jchampemont/WTFDYUM", "Date": "2015-09-15T20:37:26Z"},
{"Line": "=>646", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (speed > 0) { if (USDF > USDB) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7455/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.Libraries.MyOpMode.java", "BodyUseAPI": [], "Fixed commit": "ce4c39c89911221acfaa5408b1891106615f6688", "Url": "https://api.github.com/repos/stev3nlo/Ouroboros2016-2017", "Date": "2016-12-19T16:01:21Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.Ben12345rocks.VotingPlugin.Objects.Reward.getRandomRewards()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (rewards != null) { if ((rewards.size()) > 0) { java.lang.String reward = rewards.get((((int) (java.lang.Math.random())) * (rewards.size()))); if (reward.equalsIgnoreCase(\"\")) { user.giveReward(com.Ben12345rocks.VotingPlugin.Config.ConfigRewards.getInstance().getReward(reward)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7717/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.Reward.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "2ef84ea39206e6a73faea38279e9ea463b8bfcae", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-07-10T19:33:36Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (reward.equalsIgnoreCase(\"\")) { user.giveReward(com.Ben12345rocks.VotingPlugin.Config.ConfigRewards.getInstance().getReward(reward)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7717/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.Reward.java", "BodyUseAPI": ["com.Ben12345rocks.VotingPlugin.Config.ConfigRewards.getInstance().getReward(java.lang.String)", "com.Ben12345rocks.VotingPlugin.Objects.User.giveReward(com.Ben12345rocks.VotingPlugin.Config.ConfigRewards.getInstance().getReward(reward))"], "Fixed commit": "2ef84ea39206e6a73faea38279e9ea463b8bfcae", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-07-10T19:33:36Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8167/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "5f1e90d87023c7f3999136c4f63b3d0350fcb1ab", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.hgz.study.EventTest.operateSystemSupported()) { com.hgz.study.EventTest eventTest = new com.hgz.study.EventTest(); eventTest.test(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6612/buggy-version/src.main.java.com.hgz.study.Main.java", "BodyUseAPI": [], "Fixed commit": "f5bd774884c41052315a31c4ed96c1f2f407897b", "Url": "https://api.github.com/repos/nemohgz/java_study", "Date": "2017-12-14T16:05:19Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(my2ndRankingPlace.getSelectedItem().equals(none))) javax.swing.JOptionPane.showMessageDialog(myPanel, (\"One entry can't has two ranking\" + \"\"), \"Warning\", javax.swing.JOptionPane.WARNING_MESSAGE); else { myEntryCountandResultlabel.setText(((myEntryCountandResultlabel.getText()) + \" JUDGED\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6300/buggy-version/src.view.JudgeEntryListViewImp.java", "BodyUseAPI": [], "Fixed commit": "eec357336f2ce13f8ec68a748c81c25f22ff0a0d", "Url": "https://api.github.com/repos/TeamMalamute/360Class", "Date": "2016-06-02T04:43:26Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (my1stRankingPlace.getSelectedItem().equals(none)) { javax.swing.JOptionPane.showMessageDialog(myPanel, (\"1st place cannot be empty\" + \"\"), \"Warning\", javax.swing.JOptionPane.WARNING_MESSAGE); }else if ((my1stRankingPlace.getSelectedItem().equals(my2ndRankingPlace.getSelectedItem())) || (my2ndRankingPlace.getSelectedItem().equals(my3rdRankingPlace.getSelectedItem()))) { if (!(my2ndRankingPlace.getSelectedItem().equals(none))) javax.swing.JOptionPane.showMessageDialog(myPanel, (\"One entry can't has two ranking\" + \"\"), \"Warning\", javax.swing.JOptionPane.WARNING_MESSAGE); else { myEntryCountandResultlabel.setText(((myEntryCountandResultlabel.getText()) + \" JUDGED\")); } }else { myEntryCountandResultlabel.setText(((myEntryCountandResultlabel.getText()) + \" JUDGED\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6300/buggy-version/src.view.JudgeEntryListViewImp.java", "BodyUseAPI": ["java.lang.Object.equals(java.lang.Object)", "javax.swing.JComboBox<java.lang.String>.getSelectedItem()", "java.lang.Object.equals(java.lang.String)"], "Fixed commit": "eec357336f2ce13f8ec68a748c81c25f22ff0a0d", "Url": "https://api.github.com/repos/TeamMalamute/360Class", "Date": "2016-06-02T04:43:26Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mPasswordView.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(password)) { mPasswordView.setError(getString(R.string.error_field_required)); focusView = mPasswordView; cancel = true; }else if (!(isPasswordValid(password))) { mPasswordView.setError(getString(R.string.error_invalid_password)); focusView = mPasswordView; cancel = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3183/buggy-version/app.src.main.java.com.example.duyve.myapplication.LoginActivity.java", "BodyUseAPI": ["com.example.duyve.myapplication.LoginActivity.isPasswordValid(java.lang.String)"], "Fixed commit": "e8d593651feefd6ba77baa591792d6476395908b", "Url": "https://api.github.com/repos/duyve/AndroidApp", "Date": "2016-03-08T23:39:40Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof net.sf.saxon.om.NodeInfo) { value = ((net.sf.saxon.om.NodeInfo) (value)).atomize(); if (org.poormanscastle.products.hit2assext.RenderSessionManager.logger.isInfoEnabled()) { org.poormanscastle.products.hit2assext.RenderSessionManager.logger.info(org.apache.commons.lang3.StringUtils.join(\"Autoconverting the NodeInfo to atomic value: \", ((net.sf.saxon.value.Value) (value)).getStringValue())); } }else { if (org.poormanscastle.products.hit2assext.RenderSessionManager.logger.isInfoEnabled()) { org.poormanscastle.products.hit2assext.RenderSessionManager.logger.info(\"No need to convert to atomic value\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5911/buggy-version/src.main.java.org.poormanscastle.products.hit2assext.RenderSessionManager.java", "BodyUseAPI": [], "Fixed commit": "a6a37c4d2799ef3bf4bb60869cb169cc3f2c7969", "Url": "https://api.github.com/repos/georgfedermann/DocFamilySymbolTables", "Date": "2016-08-08T12:29:02Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (array instanceof java.util.Collection) { java.util.Collection<?> collection = ((java.util.Collection<?>) (array)); array = collection.toArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/329/buggy-version/src.main.java.org.json.JSONArray.java", "BodyUseAPI": [], "Fixed commit": "46f1e189894ec2e70c0107449d4b58aa839c0d15", "Url": "https://api.github.com/repos/vorburger/org-json", "Date": "2012-06-21T16:36:58Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (modData.profiles.get(modData.selectedProfile).getProfileName().equalsIgnoreCase(\"default\")) { javax.swing.JOptionPane.showMessageDialog(this, \"You can't delete the default profile.\", \"Error\", javax.swing.JOptionPane.ERROR_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5171/buggy-version/ForgeModSupportTab.src.main.java.com.n9mtq4.customlauncher.tab.forgemods.ui.ForgeTab.java", "BodyUseAPI": [], "Fixed commit": "8a68443bc80018ecbefa6189dc54770661d31bb2", "Url": "https://api.github.com/repos/n9Mtq4/ExtendableMinecraftLauncher", "Date": "2015-08-31T06:53:54Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(com.n9mtq4.customlauncher.tab.forgemods.ui.ForgeTab,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(profileName.trim().equals(\"\"))) { com.n9mtq4.customlauncher.tab.forgemods.data.ModProfile profile = new com.n9mtq4.customlauncher.tab.forgemods.data.ModProfile(profileName); modData.profiles.add(profile); refresh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5171/buggy-version/ForgeModSupportTab.src.main.java.com.n9mtq4.customlauncher.tab.forgemods.ui.ForgeTab.java", "BodyUseAPI": [], "Fixed commit": "8a68443bc80018ecbefa6189dc54770661d31bb2", "Url": "https://api.github.com/repos/n9Mtq4/ExtendableMinecraftLauncher", "Date": "2015-08-31T06:53:54Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (first == '#') { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2649/buggy-version/src.main.java.org.vafer.jdeb.debian.ControlFile.java", "BodyUseAPI": [], "Fixed commit": "e8d74077f2669e40b84150ee511c12aaf3088f35", "Url": "https://api.github.com/repos/bartgee/jdeb", "Date": "2015-02-15T11:54:50Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) instanceof com.chefmic.movie.app.ui.MainActivity) { ((com.chefmic.movie.app.ui.MainActivity) (getActivity())).reloadData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4104/buggy-version/app.src.main.java.com.chefmic.movie.app.ui.DetailFragment.java", "BodyUseAPI": [], "Fixed commit": "8b9ab9e3ff593dee981b7243ec99ac900a37b166", "Url": "https://api.github.com/repos/cyuan1124/Popular-Movie", "Date": "2016-06-16T02:59:52Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) instanceof com.chefmic.movie.app.ui.MainActivity) { ((com.chefmic.movie.app.ui.MainActivity) (getActivity())).reloadData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4104/buggy-version/app.src.main.java.com.chefmic.movie.app.ui.DetailFragment.java", "BodyUseAPI": [], "Fixed commit": "8b9ab9e3ff593dee981b7243ec99ac900a37b166", "Url": "https://api.github.com/repos/cyuan1124/Popular-Movie", "Date": "2016-06-16T02:59:52Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.StringUtils.join(java.util.Set<java.lang.Integer>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (commaSeparatedMaskingValues.isEmpty()) { commaSeparatedMaskingValues = \"-1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1440/buggy-version/src.main.java.de.terrestris.momo.interceptor.MomoWmsRequestInterceptor.java", "BodyUseAPI": [], "Fixed commit": "9e99623d5b57f09b17c08b5b78d083a62d5f067d", "Url": "https://api.github.com/repos/mmacata/momo3-backend", "Date": "2016-08-01T08:43:52Z"},
{"Line": "=>580", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (strindex.equals(\"\u6c99\u53d1\")) { strindex = \"1\"; }else if (strindex.equals(\"\u677f\u51f3\")) { strindex = \"2\"; }else if (strindex.equals(\"\u5730\u677f\")) { strindex = \"3\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1185/buggy-version/app.src.main.java.xyz.yluo.ruisiapp.activity.PostActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "438b941ab5cb2f8b4189103e66bfbabfaf6d70ba", "Url": "https://api.github.com/repos/freedom10086/Ruisi", "Date": "2016-09-15T06:15:28Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fr.getOperation()) == (org.harper.driveclient.synchronize.ChangeRecord.Operation.LOCAL_INSERT)) { if (fr.getError().startsWith(\"Local file doesn't exist\")) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2942/buggy-version/src.org.harper.driveclient.synchronize.DefaultSynchronizeService.java", "BodyUseAPI": ["org.harper.driveclient.synchronize.FailedRecord.getError()", "fr.getError().startsWith(java.lang.String)"], "Fixed commit": "5b2cdb8c2f1bf78b372d863608768b95bae32635", "Url": "https://api.github.com/repos/harperjiang/GoogleDriveLinux", "Date": "2014-02-09T03:58:07Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fr.getError().startsWith(\"Local file doesn't exist\")) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2942/buggy-version/src.org.harper.driveclient.synchronize.DefaultSynchronizeService.java", "BodyUseAPI": [], "Fixed commit": "5b2cdb8c2f1bf78b372d863608768b95bae32635", "Url": "https://api.github.com/repos/harperjiang/GoogleDriveLinux", "Date": "2014-02-09T03:58:07Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.itemSize()) == 0) { context.executeJavaScript(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2287/buggy-version/modules.uipage.src.main.java.org.shaolin.uimaster.page.ajax.handlers.EventHandler.java", "BodyUseAPI": ["org.shaolin.uimaster.page.AjaxContext.executeJavaScript(java.lang.String)"], "Fixed commit": "ec0e3481edea035b99b145e3c3f69be6b4a30725", "Url": "https://api.github.com/repos/shaolinwu/uimaster", "Date": "2016-03-12T05:31:19Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((values.size()) > i) { java.lang.Object o = values.get(i); if (o == null) { line.put(columnName, java.lang.Boolean.FALSE); }else { line.put(columnName, new java.lang.Boolean(o.toString())); } }else { line.put(columnName, java.lang.Boolean.FALSE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3861/buggy-version/main.plugins.org.talend.designer.core.generic.src.main.java.org.talend.designer.core.generic.model.GenericTableUtils.java", "BodyUseAPI": ["java.util.List.get(int)"], "Fixed commit": "8c7030d2c98be249aeb7daa2efb5be5bf21d1ac2", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2016-10-21T06:42:13Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent.getChildCount()) < 2) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/105/buggy-version/android.app.src.main.java.com.lipi.notifica.RoutineDayFragment.java", "BodyUseAPI": [], "Fixed commit": "1a8990fcb6e145089063b5ac16d3b5084b74371e", "Url": "https://api.github.com/repos/coders-circle/notifica", "Date": "2016-01-07T11:16:52Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gerrit.server.schema.H2AccountPatchReviewStore.convertError(java.lang.String,java.sql.SQLException)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ormException instanceof com.google.gwtorm.server.OrmDuplicateKeyException) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3512/buggy-version/gerrit-server.src.main.java.com.google.gerrit.server.schema.H2AccountPatchReviewStore.java", "BodyUseAPI": [], "Fixed commit": "d605babc37b7d0af183715de78052ca554659d21", "Url": "https://api.github.com/repos/gerrit-review/gerrit", "Date": "2016-09-27T00:31:20Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ispravanDatum) { psc.dodajNaServis(date, psc.dajIDVozila(data1.get(table.getSelectedRow()).get(0))); frmPrijavaServisa.dispose(); vozniPark.View.EvidencijaServisa servis = new vozniPark.View.EvidencijaServisa(); servis.main(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/42/buggy-version/vozniPark.src.main.java.vozniPark.View.EvidencijaServisa.java", "BodyUseAPI": [], "Fixed commit": "9c3268b300ae1491004cfddfec37b4ac1238a7d1", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/SI2015Tim7", "Date": "2016-05-21T10:27:11Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sbPlayedCityAreaIDs.indexOf(cityAreaCard.CardID)) == (-1)) { java.lang.System.out.printf(\"%-5s%-5s%-20s%-5s%-60s\\n\", cityAreaCard.CardID, \" : \", cityAreaCard.GetAreaName(), \" : \", (\" Action Description : \" + (cityAreaCard.GetActionDescription()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7520/buggy-version/src.ankhmorpork.GameLoad.GameLoad.java", "BodyUseAPI": ["ankhmorpork.GameObjects.Cards.CityAreaCard.GetAreaName()", "java.io.PrintStream.printf(java.lang.String,cityAreaCard.CardID,java.lang.String,cityAreaCard.GetAreaName(),java.lang.String,(\" Action Description : \" + (cityAreaCard.GetActionDescription())))", "ankhmorpork.GameObjects.Cards.CityAreaCard.GetActionDescription()"], "Fixed commit": "24bcb2cbafa73ad2dad6cd174910a6564b392dfb", "Url": "https://api.github.com/repos/NAVY11/Demo_Ankh", "Date": "2015-04-01T13:24:34Z"},
{"Line": "=>530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sbPlayedCityAreaIDs.indexOf(cityAreaCard.CardID)) == (-1)) { java.lang.System.out.printf(\"%-5s%-5s%-20s%-5s%-60s\\n\", cityAreaCard.CardID, \" : \", cityAreaCard.GetAreaName(), \" : \", (\" Action Description : \" + (cityAreaCard.GetActionDescription()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7520/buggy-version/src.ankhmorpork.discworldboard.java", "BodyUseAPI": ["ankhmorpork.GameObjects.Cards.CityAreaCard.GetActionDescription()", "java.io.PrintStream.printf(java.lang.String,cityAreaCard.CardID,java.lang.String,cityAreaCard.GetAreaName(),java.lang.String,(\" Action Description : \" + (cityAreaCard.GetActionDescription())))", "ankhmorpork.GameObjects.Cards.CityAreaCard.GetAreaName()"], "Fixed commit": "24bcb2cbafa73ad2dad6cd174910a6564b392dfb", "Url": "https://api.github.com/repos/NAVY11/Demo_Ankh", "Date": "2015-04-01T13:24:34Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ro.sync.exml.workspace.api.options.WSOptionsStorage.getOption(RestConfigExtension.REST_SERVER_URL,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((serverUrl != null) && (!(serverUrl.isEmpty()))) && ((serverUrl.lastIndexOf(\"/\")) != ((serverUrl.length()) - 1))) { serverUrl = serverUrl + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5229/buggy-version/src.main.java.com.oxygenxml.rest.plugin.RestURLStreamHandler.java", "BodyUseAPI": [], "Fixed commit": "c5e813267e29c1aeb9532cc732db6122bdd3ace4", "Url": "https://api.github.com/repos/oxygenxml/web-author-rest-plugin", "Date": "2017-10-30T13:20:34Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstMove) { setBoardForNewOrWonGame(true); firstMove = false; enableNewSubgame(move.getTileX(), move.getTileY()); }else if (mainGame.getIsGameOver()) { setBoardForNewOrWonGame(true); java.lang.String mWinnerString = (!(mainGame.isPlayer1Turn())) ? \"X\" : \"O\"; mMoveCounter.setText((\"GAME IS WON BY \" + mWinnerString)); }else { disableOldSubgame(move.getGameX(), move.getGameY()); enableNewSubgame(move.getTileX(), move.getTileY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5585/buggy-version/app.src.main.java.olsonworks.UltimateTicTacToe.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "124f01ab015e40d30c9e3009c96fa0bef026b96c", "Url": "https://api.github.com/repos/timothyhaskins/UltimateTicTacToe-Tim_Peter_project", "Date": "2015-05-18T03:35:27Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (webview.canGoBack()) { if (((com.example.solutionforcallinggobacktwice.MainActivity.FirstClick) + 500) > (java.lang.System.currentTimeMillis())) { android.util.Log.d(\"prevent goback() being called twice\", \"prevent goback() being called twice\"); }else { android.util.Log.d(\"goback() is called\", \"goback() is called\"); webview.goBack(); com.example.solutionforcallinggobacktwice.MainActivity.FirstClick = java.lang.System.currentTimeMillis(); return; } }else { moveTaskToBack(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3980/buggy-version/src.com.example.solutionforcallinggobacktwice.MainActivity.java", "BodyUseAPI": ["android.webkit.WebView.goBack()"], "Fixed commit": "83052c94faeecaa250b33006cf6d96cd87101a57", "Url": "https://api.github.com/repos/Yoshi66/SolutionForCallingGoBackTwice", "Date": "2014-06-26T15:46:16Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.BitmapFactory.decodeStream(cacheFile.getInputStream())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((thumbnailCache) != data) data.recycle();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7863/buggy-version/src.main.java.org.quantumbadger.redreader.reddit.prepared.RedditPreparedPost.java", "BodyUseAPI": ["android.graphics.Bitmap.recycle()"], "Fixed commit": "2ed722b042ea029f04d6975f30e9870ffaaec366", "Url": "https://api.github.com/repos/QuantumBadger/RedReader", "Date": "2013-06-11T19:28:48Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.Bitmap.createBitmap(android.graphics.Bitmap,int,int,int,int)", "android.graphics.Bitmap.createScaledBitmap(android.graphics.Bitmap,int,int,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (result != scaled) scaled.recycle();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7863/buggy-version/src.main.java.org.quantumbadger.redreader.image.ThumbnailScaler.java", "BodyUseAPI": ["android.graphics.Bitmap.recycle()"], "Fixed commit": "2ed722b042ea029f04d6975f30e9870ffaaec366", "Url": "https://api.github.com/repos/QuantumBadger/RedReader", "Date": "2013-06-11T19:28:48Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (var.setToTrue(this)) { notifyPropagators(EventType.INSTANTIATE, cause); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7680/buggy-version/choco-solver.src.main.java.solver.variables.view.BoolNotView.java", "BodyUseAPI": [], "Fixed commit": "6f1436002481a3a393c58fef3f12bf496287bf67", "Url": "https://api.github.com/repos/chocoteam/choco3", "Date": "2013-05-17T12:57:15Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.next()) { partnerProfile.setId(((rs.getInt(\"maxid\")) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3737/buggy-version/src.de.pitchMen.server.db.PartnerProfileMapper.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(java.lang.String)", "de.pitchMen.shared.bo.PartnerProfile.setId(int)"], "Fixed commit": "2b79b6dce715b8f329a8e71469d371e66e89ae97", "Url": "https://api.github.com/repos/EleonoraRenz/PitchMen_ITProjektSS17", "Date": "2017-06-17T10:33:45Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (commandConfig.isShortCommandMode()) { for (w094j.ctrl8.statement.CommandType eaCommand : java.util.EnumSet.allOf(w094j.ctrl8.statement.CommandType.class)) { this.commandLookup.put(commandConfig.get(eaCommand).toString(), eaCommand); regex += delim; regex += java.util.regex.Pattern.quote(commandConfig.get(eaCommand).toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8823/buggy-version/src.main.java.w094j.ctrl8.parse.CommandParser.java", "BodyUseAPI": [], "Fixed commit": "e040d46635ca16e7afb04c726960a694a38578a8", "Url": "https://api.github.com/repos/cs2103jan2015-w09-4j/main", "Date": "2015-03-31T19:50:23Z"},
{"Line": "=>1745", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 19) { blnActionCreateDocument = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3068/buggy-version/learnforandroid.learnforandroid.Learn.src.org.de.jmg.learn.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d0222103d651ab6e8774dd983ca9e5ef81e7b402", "Url": "https://api.github.com/repos/jhmgbl/learnforandroid2", "Date": "2015-05-23T15:03:59Z"},
{"Line": "=>1696", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 19) { android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_GET_CONTENT); intent.setData(vok.getURI()); intent.putExtra(\"org.openintents.extra.WRITEABLE_ONLY\", true); intent.putExtra(\"org.openintents.extra.TITLE\", getString(R.string.SaveAs)); intent.putExtra(\"org.openintents.extra.BUTTON_TEXT\", getString(R.string.btnSave)); intent.setType(\"*/*\"); android.content.Intent chooser = android.content.Intent.createChooser(intent, getString(R.string.SaveAs)); if ((intent.resolveActivity(context.getPackageManager())) != null) { startActivityForResult(chooser, org.de.jmg.learn.MainActivity.FILE_OPENINTENT); blnSuccess = true; }else { lib.ShowToast(this, getString(R.string.InstallFilemanager)); intent.setData(null); intent.removeExtra(\"org.openintents.extra.WRITEABLE_ONLY\"); intent.removeExtra(\"org.openintents.extra.TITLE\"); intent.removeExtra(\"org.openintents.extra.BUTTON_TEXT\"); startActivityForResult(chooser, org.de.jmg.learn.MainActivity.FILE_OPENINTENT); blnSuccess = true; } }else { blnActionCreateDocument = true; blnSuccess = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3068/buggy-version/learnforandroid.learnforandroid.Learn.src.org.de.jmg.learn.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d0222103d651ab6e8774dd983ca9e5ef81e7b402", "Url": "https://api.github.com/repos/jhmgbl/learnforandroid2", "Date": "2015-05-23T15:03:59Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState == null) { android.os.Bundle data = getIntent().getExtras(); currentOrder = data.getParcelable(\"order\"); showData(currentOrder); }else { currentOrder = savedInstanceState.getParcelable(\"order\"); showData(currentOrder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7036/buggy-version/app.src.main.java.com.ck.taxoteam.taxodriver.activity.OrderDetailsActivity.java", "BodyUseAPI": ["android.os.Bundle.getParcelable(java.lang.String)"], "Fixed commit": "61d4449e874570b90075eacca3bd63d7609a6502", "Url": "https://api.github.com/repos/TaxiProjectTeam/TaxiDriver", "Date": "2017-04-08T14:15:28Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(lostList.isEmpty())) { for (com.teamcow.wheresmystuff.model.LostItem lostItem : lostList) { com.google.android.gms.maps.model.LatLng current = new com.google.android.gms.maps.model.LatLng(lostItem.getX_Coord(), lostItem.getY_Coord()); mMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(current).title(lostItem.getName()).snippet(lostItem.getDescription())); mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLng(current)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8477/buggy-version/app.src.main.java.com.teamcow.wheresmystuff.controller.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "34dea6eeb6ca8fba5ff2653f967e76e16c24174f", "Url": "https://api.github.com/repos/arinbell/WheresMyStuff", "Date": "2017-07-18T22:21:09Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == message) { if (hasToken) { semaphore.release(); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6333/buggy-version/rocketmq-client.src.main.java.com.alibaba.rocketmq.client.producer.concurrent.MultiThreadMQProducer.java", "BodyUseAPI": [], "Fixed commit": "4a4b1f36281ab2a1066d5589a7c75291dc4c0ebe", "Url": "https://api.github.com/repos/lizhanhui/Alibaba_RocketMQ", "Date": "2015-07-22T09:04:40Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((build.getExecutor()) != null) { return build.getExecutor().getDisplayName(); }else { return \"Unknown\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4677/buggy-version/src.main.java.org.jenkinsci.plugins.lucene.search.Field.java", "BodyUseAPI": ["build.getExecutor().getDisplayName()", "hudson.model.Run<?, ?>.getExecutor()"], "Fixed commit": "d2e8b27310215b40557b4faea379b77fa981a599", "Url": "https://api.github.com/repos/jenkinsci/lucene-search-plugin", "Date": "2015-10-14T18:56:40Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.lexer.Lexer.getTokenType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (token == (net.sourcemod.sourcepawn.lexer.SpTokenTypes.NUMBER_LITERAL)) { java.math.BigInteger codePoint = spLexer.value(); spLexer.setEscapeCharacter(codePoint.intValue()); }else if (token == (net.sourcemod.sourcepawn.lexer.SpTokenTypes.NEW_LINE)) { spLexer.resetEscapeCharacter(); }else if (token == null) { spLexer.resetEscapeCharacter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3543/buggy-version/src.net.sourcemod.sourcepawn.lexer.SpLookAheadLexerAdapter.java", "BodyUseAPI": [], "Fixed commit": "650fbf7633fdf4f9c9a705305bb3400730cdbf69", "Url": "https://api.github.com/repos/collinsmith/intellij-pawn-support-plugin", "Date": "2016-06-10T10:15:07Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (difference < (de.mixedfx.windows.WindowsMonitoring.MONITORING_INTERVAL)) { try { java.lang.Thread.sleep(((de.mixedfx.windows.WindowsMonitoring.MONITORING_INTERVAL) - difference)); } catch (final java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5936/buggy-version/mixedfx-windows.src.main.java.de.mixedfx.windows.WindowsMonitoring.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "478ab19f42418ba9827cde3f4bc062be8e53cfcf", "Url": "https://api.github.com/repos/Jerry0022/MixedFX", "Date": "2015-09-28T14:47:19Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCoverPhotoURL()) == null) { setCoverPhotoURL(\"http://codepath.com/images/bg/footer-bg.png\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5444/buggy-version/TrailGuide.src.com.storymakers.apps.trailguide.model.TGStory.java", "BodyUseAPI": [], "Fixed commit": "05bf11688cd90b30789e8b2029e9acfc35951a92", "Url": "https://api.github.com/repos/story-makers/AndroidProject", "Date": "2014-10-29T06:24:22Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentTime != 0) currentTimeTextView.setText(fm.jiecao.jcvideoplayer_lib.JCUtils.stringForTime(currentTime));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4040/buggy-version/jcvideoplayer-lib.src.main.java.fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.java", "BodyUseAPI": ["android.widget.TextView.setText(fm.jiecao.jcvideoplayer_lib.JCUtils.stringForTime(currentTime))", "fm.jiecao.jcvideoplayer_lib.JCUtils.stringForTime(int)"], "Fixed commit": "0089d4deeafa7e271352a2bdf9624f050f928da8", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2016-08-16T14:29:16Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mashup.fm.log4play.Stats<KEY>.executions(KEY)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (executions <= 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6227/buggy-version/app.mashup.fm.log4play.Stats.java", "BodyUseAPI": [], "Fixed commit": "84e542e7bd56f6a3048306997f1f02e42cf0681f", "Url": "https://api.github.com/repos/feliperazeek/log4play", "Date": "2011-05-11T16:07:26Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.infinispan.protostream.annotations.impl.ProtoFieldMetadata.getDefaultValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (defaultValue instanceof java.lang.Long) { v = defaultValue + \"L\"; }else if (defaultValue instanceof java.lang.Double) { v = defaultValue + \"D\"; }else if (defaultValue instanceof java.lang.Float) { v = defaultValue + \"F\"; }else { v = defaultValue.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5233/buggy-version/core.src.main.java.org.infinispan.protostream.annotations.impl.MarshallerCodeGenerator.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "5364f336a996e9c958a13cc1012a81095383e8d2", "Url": "https://api.github.com/repos/infinispan/protostream", "Date": "2015-01-18T16:50:01Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (imageMeta != null) { attachment.setContentType(imageMeta.getContentType()); if ((imageMeta.getSize()) != null) { attachment.setSize(java.lang.Long.valueOf(imageMeta.getSize())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4656/buggy-version/src.main.java.fi.otavanopisto.kuntaapi.server.integrations.linkedevents.LinkedEventsTranslator.java", "BodyUseAPI": ["fi.metatavu.kuntaapi.server.rest.model.Attachment.setSize(java.lang.Long)", "fi.metatavu.kuntaapi.server.rest.model.Attachment.setContentType(imageMeta.getContentType())", "java.lang.Long.valueOf(imageMeta.getSize())", "fi.otavanopisto.kuntaapi.server.integrations.BinaryHttpClient.DownloadMeta.getSize()", "fi.otavanopisto.kuntaapi.server.integrations.BinaryHttpClient.DownloadMeta.getSize()", "fi.otavanopisto.kuntaapi.server.integrations.BinaryHttpClient.DownloadMeta.getContentType()"], "Fixed commit": "8bb6292ff2508b25067bec63f0bdb19e0e730bf8", "Url": "https://api.github.com/repos/Metatavu/kunta-api-server", "Date": "2017-09-27T08:33:48Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(agent.getAllBeliefs(\"repairComing\").isEmpty())) { if (agent.getAllBeliefs(\"repairComing\").getFirst().getParameters().get(0).equals(agent.getAllBeliefs(\"position\").getFirst().getParameters().get(0))) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7279/buggy-version/com.cse431.marsmen.strategy.NeedRepairStrategy.java", "BodyUseAPI": ["com.cse431.marsmen.MarsAgent.getAllBeliefs(java.lang.String)", "agent.getAllBeliefs(\"position\").getFirst().getParameters().get(int)", "agent.getAllBeliefs(\"repairComing\").getFirst().getParameters()", "com.cse431.marsmen.MarsAgent.getAllBeliefs(java.lang.String)", "agent.getAllBeliefs(\"position\").getFirst()", "agent.getAllBeliefs(\"repairComing\").getFirst().getParameters().get(0).equals(agent.getAllBeliefs(\"position\").getFirst().getParameters().get(0))", "agent.getAllBeliefs(\"repairComing\").getFirst()", "agent.getAllBeliefs(\"repairComing\").getFirst().getParameters().get(int)", "agent.getAllBeliefs(\"position\").getFirst().getParameters()"], "Fixed commit": "1f5ec928b6c2b0527a9d3a0dc94f625a7804e841", "Url": "https://api.github.com/repos/SheynD/431MarsAgent", "Date": "2016-12-06T17:46:39Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getLayerType()) != (android.view.View.LAYER_TYPE_SOFTWARE)) setLayerType(View.LAYER_TYPE_SOFTWARE, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5232/buggy-version/caprice.ui.src.main.java.net.qiujuer.genius.ui.widget.Button.java", "BodyUseAPI": [], "Fixed commit": "8a166181bad722c483a960fa135682996d644312", "Url": "https://api.github.com/repos/qiujuer/Genius-Android", "Date": "2016-04-07T14:05:42Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (remainderMin >= 60) { remainderHour = remainderMin / 60; remainderMin = remainderMin % 60; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7048/buggy-version/src.com.helloyako.reservationsearch.ReservationSearchSetActivity.java", "BodyUseAPI": [], "Fixed commit": "8adf61b7a11b1d7ad1252e25b329e28f4719eeea", "Url": "https://api.github.com/repos/helloyako/ReservationSearch", "Date": "2014-03-16T06:07:28Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (remainderSec >= 60) { remainderMin = remainderSec / 60; remainderSec = remainderSec % 60; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7048/buggy-version/src.com.helloyako.reservationsearch.ReservationSearchSetActivity.java", "BodyUseAPI": [], "Fixed commit": "8adf61b7a11b1d7ad1252e25b329e28f4719eeea", "Url": "https://api.github.com/repos/helloyako/ReservationSearch", "Date": "2014-03-16T06:07:28Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (remainderHour >= 24) { remainderDay = remainderHour / 24; remainderHour = remainderHour % 24; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7048/buggy-version/src.com.helloyako.reservationsearch.ReservationSearchSetActivity.java", "BodyUseAPI": [], "Fixed commit": "8adf61b7a11b1d7ad1252e25b329e28f4719eeea", "Url": "https://api.github.com/repos/helloyako/ReservationSearch", "Date": "2014-03-16T06:07:28Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((count) >= 0) && ((count) <= 255)) mainActivity.setBackgroundColor(android.graphics.Color.argb(255, 255, 255, count)); else if (((count) < 0) && ((count) >= (-255))) mainActivity.setBackgroundColor(android.graphics.Color.argb(255, 255, 255, ((count) * (-1))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6817/buggy-version/app.src.main.java.com.example.towns.button_counter_townsend.MainActivity.java", "BodyUseAPI": ["android.graphics.Color.argb(int,int,int,int)", "android.view.View.setBackgroundColor(android.graphics.Color.argb(255, 255, 255, ((count) * (-1))))"], "Fixed commit": "3f05c813713e377e607e0a03724ac417a64562d1", "Url": "https://api.github.com/repos/Risaskolir/Button-counter-townsend", "Date": "2017-02-02T14:29:51Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x < 1) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2955/buggy-version/src.fr.lip6.jkernelmachines.io.LibSVMImporter.java", "BodyUseAPI": [], "Fixed commit": "1167080ae695459376405e5d1526dab3960e9544", "Url": "https://api.github.com/repos/davidpicard/jkernelmachines", "Date": "2013-02-15T11:21:41Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mProgressBarAnimator) != null) { mProgressBarAnimator.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6313/buggy-version/sample.src.de.passsy.circularprogressbarsample.CircularProgressBarSample.java", "BodyUseAPI": [], "Fixed commit": "682b84b00fac820a3c412517b528e03a734e1246", "Url": "https://api.github.com/repos/passsy/android-HoloCircularProgressBar", "Date": "2013-10-12T11:33:53Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mProgressBarAnimator) != null) { mProgressBarAnimator.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6313/buggy-version/sample.src.de.passsy.circularprogressbarsample.CircularProgressBarSample.java", "BodyUseAPI": [], "Fixed commit": "682b84b00fac820a3c412517b528e03a734e1246", "Url": "https://api.github.com/repos/passsy/android-HoloCircularProgressBar", "Date": "2013-10-12T11:33:53Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isVictory())) { factory.SoundFactory.instance().playSound(\"res/sound/Victory.wav\"); this.state = game.GameState.State.Victory; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4753/buggy-version/src.game.GameState.java", "BodyUseAPI": [], "Fixed commit": "3cd369fd33653bc0e73e0e4adbb9b3478de1dce7", "Url": "https://api.github.com/repos/simonh88/ACL2017_LaraClette", "Date": "2017-11-30T11:00:44Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isLoss())) { factory.SoundFactory.instance().playSound(\"res/sound/Lose.wav\"); this.state = game.GameState.State.Loss; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4753/buggy-version/src.game.GameState.java", "BodyUseAPI": [], "Fixed commit": "3cd369fd33653bc0e73e0e4adbb9b3478de1dce7", "Url": "https://api.github.com/repos/simonh88/ACL2017_LaraClette", "Date": "2017-11-30T11:00:44Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.freeshr.events.EncounterEvent>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size == 1) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7245/buggy-version/shr.src.main.java.org.freeshr.interfaces.encounter.ws.CatchmentEncounterController.java", "BodyUseAPI": [], "Fixed commit": "e5258acb372276a4252d9195986ef5e00d0231d1", "Url": "https://api.github.com/repos/SharedHealth/FreeSHR", "Date": "2015-12-08T20:52:26Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selected == (javax.swing.JOptionPane.CANCEL_OPTION)) { throw new controller.exception.InputCancelledException(); }else if (selected == (javax.swing.JOptionPane.CLOSED_OPTION)) { throw new controller.exception.InputCancelledException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8252/buggy-version/src.view.DialogBuilder.java", "BodyUseAPI": [], "Fixed commit": "f206b88bfc39570e03af2678a5f1af17df16274f", "Url": "https://api.github.com/repos/alutman/AES_Text_Editor", "Date": "2016-03-30T01:10:03Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!outcomeTargets) || ((target.getMaxNumberOfTargets()) <= (target.getTargets().size()))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8585/buggy-version/Mage.Server.Plugins.Mage.Player.AI.src.main.java.mage.player.ai.ComputerPlayer.java", "BodyUseAPI": [], "Fixed commit": "8597952af2aa1b3d4ca11146f521fe892bb98374", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-02-22T15:04:23Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonResponseEntityClass.getCanonicalName().equalsIgnoreCase(java.lang.Void.class.getCanonicalName())) { taskFailure.onTaskFailed(null, failure); }else { taskFailure.onTaskFailed(jsonResponseEntityClass.newInstance(), failure); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/368/buggy-version/src.main.java.com.grizzly.rest.GenericRestCall.java", "BodyUseAPI": ["com.grizzly.rest.Model.afterTaskFailure<X>.onTaskFailed(X,java.lang.Exception)", "java.lang.Class<X>.newInstance()"], "Fixed commit": "5c0d39b43d99805c38a419f1e26d1773697c6889", "Url": "https://api.github.com/repos/fcopardo/EasyRest", "Date": "2015-01-30T20:47:17Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (json == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7699/buggy-version/app.src.main.java.com.group1.eda_397_group1.TaskListActivity.java", "BodyUseAPI": [], "Fixed commit": "ab22c2369299ddb0b63669ccb0f7ea68c836877d", "Url": "https://api.github.com/repos/Pedram87/EDA397-Group1", "Date": "2016-05-12T11:55:51Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cronutils.model.field.CronField.getExpression()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fieldExpression instanceof com.cronutils.model.time.generator.And) { return new com.cronutils.model.time.generator.AndDayOfWeekValueGenerator(cronField, year, month, mondayDoWValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8738/buggy-version/src.main.java.com.cronutils.model.time.generator.FieldValueGeneratorFactory.java", "BodyUseAPI": [], "Fixed commit": "3edbc4ef6806f0118545a4e70da7300349619d0b", "Url": "https://api.github.com/repos/dwilkie81/cron-utils", "Date": "2015-11-23T10:55:47Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<nldoko.game.classes.RoundClass>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((r.getBockCount()) > 0) { mBockMulti = (r.getBockCount()) * 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4512/buggy-version/src.nldoko.game.XML.DokoXMLClass.java", "BodyUseAPI": ["nldoko.game.classes.RoundClass.getBockCount()"], "Fixed commit": "107c72a7fd3e04de99dcaec7f70156b4f4bf243f", "Url": "https://api.github.com/repos/nilsnilsnils/Doppelkopf", "Date": "2015-03-14T13:24:19Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (temp.endsWith(\"NaN\")) temp = temp.replace(\"NaN\", \"0.0\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3459/buggy-version/src.dna.plot.Plot.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "12bb64bcd46a526e45a9fc2d3bd731a4655fb57f", "Url": "https://api.github.com/repos/Rwilmes/DNA", "Date": "2016-02-09T10:59:09Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((yy_playing_msg_dlg) != null) { yy_playing_msg_dlg.hide(); yy_playing_msg_dlg = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/9198/buggy-version/src.com.yy2039.callguardian.CallGuardianActivity.java", "BodyUseAPI": [], "Fixed commit": "6394bf982b6c13d3e2273274bcff116d5fcf7393", "Url": "https://api.github.com/repos/PATHouC/CallG", "Date": "2016-07-05T14:29:00Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.fs) != null) { this.fs.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8245/buggy-version/fileformat.src.main.java.org.zuinnote.hadoop.office.format.common.HadoopFileReader.java", "BodyUseAPI": [], "Fixed commit": "2d3a9da908d701fdf0c558bb806b4d6bdc125f3b", "Url": "https://api.github.com/repos/ZuInnoTe/hadoopoffice", "Date": "2016-12-27T15:40:01Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((src == null) || (dst == null)) { com.dataloom.graph.core.LoomGraph.logger.error(\"Edge for entity id {} cannot be created because one of its vertices was not created.\", edgeLabel.getEntityId()); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1012/buggy-version/src.main.java.com.dataloom.graph.core.LoomGraph.java", "BodyUseAPI": [], "Fixed commit": "4533aa35bf087ba744845b17c73ec118bc8b2b20", "Url": "https://api.github.com/repos/openlattice/conductor-client", "Date": "2017-04-12T00:12:20Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (softValue <= 21) { toReturn = byValue[softValue][upCard.value()]; }else { toReturn = byValue[literalValue][upCard.value()]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3076/buggy-version/src.charlie.plugins.Advisor.java", "BodyUseAPI": [], "Fixed commit": "b84cc57fdd1821e3a660241710186b452bb46991", "Url": "https://api.github.com/repos/JacobLeach/charlie", "Date": "2014-02-07T16:57:52Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((controller) != null) && ((connector) != null)) { controller.update(); connector.update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6579/buggy-version/src.moonlander.library.Moonlander.java", "BodyUseAPI": [], "Fixed commit": "627ffcee3c67a7e93cf1056aa7fdb0401a877862", "Url": "https://api.github.com/repos/anttihirvonen/moonlander", "Date": "2014-06-08T09:49:42Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bufferids.length) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5653/buggy-version/src.com.iskrembilen.quasseldroid.io.QuasselDbHelper.java", "BodyUseAPI": [], "Fixed commit": "33cff503bbeeab8463ae18b465d540694de5629d", "Url": "https://api.github.com/repos/sandsmark/QuasselDroid", "Date": "2011-07-29T23:38:57Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (line.trim().isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5719/buggy-version/src.main.java.com.bina.varsim.util.ReadMap.java", "BodyUseAPI": [], "Fixed commit": "8a4f7dfa354c256d9a1cebfc815d9a408d7bc50d", "Url": "https://api.github.com/repos/bioinform/varsim", "Date": "2017-04-13T14:04:00Z"},
{"Line": "=>718", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (passOn) if ((hasValidCallees(call)) || (((taintWrapper) != null) && (taintWrapper.isExclusive(iStmt, newSource.getAccessPath())))) { if ((iStmt.getInvokeExpr()) instanceof soot.jimple.InstanceInvokeExpr) if (((soot.jimple.InstanceInvokeExpr) (iStmt.getInvokeExpr())).getBase().equals(newSource.getAccessPath().getPlainLocal())) { passOn = false; } if (passOn) for (int i = 0; i < (callArgs.size()); i++) if ((callArgs.get(i).equals(newSource.getAccessPath().getPlainLocal())) && (isTransferableValue(callArgs.get(i)))) { passOn = false; break; } if (newSource.getAccessPath().isStaticFieldRef()) { passOn = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5458/buggy-version/src.soot.jimple.infoflow.InfoflowProblem.java", "BodyUseAPI": [], "Fixed commit": "4284169dba7e5bc39f870059f4eda8fd6fc093d7", "Url": "https://api.github.com/repos/malaverdiere/soot-infoflow", "Date": "2013-07-19T15:19:50Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.abs(((move.fromPos.xPos) - (move.toPos.xPos)))", "java.lang.Math.abs(((move.fromPos.yPos) - (move.toPos.yPos)))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((yAbs == 2) && (xAbs != 0)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/185/buggy-version/com.aidancbrady.peerchess.piece.PiecePawn.java", "BodyUseAPI": [], "Fixed commit": "830683a0f709d3cd4c4c9e937bd2b88d5ed75ba9", "Url": "https://api.github.com/repos/aidancbrady/PeerChess", "Date": "2017-09-20T02:00:29Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isTopLevel(eachKey))) { if ((isReferencedByAltDirectlyOrIndirectly(eachKey)) || (isAlt(eachKey))) { b.addLevel(com.github.dakusui.jcunit.regex.RegexToFactorListTranslator.VOID); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1900/buggy-version/src.main.java.com.github.dakusui.jcunit.regex.RegexToFactorListTranslator.java", "BodyUseAPI": ["com.github.dakusui.jcunit.regex.RegexToFactorListTranslator.isAlt(java.lang.String)", "com.github.dakusui.jcunit.regex.RegexToFactorListTranslator.isReferencedByAltDirectlyOrIndirectly(java.lang.String)"], "Fixed commit": "9cbad1a1c76bcf31cc175f612f8926ad2e6cf47f", "Url": "https://api.github.com/repos/dakusui/jcunit", "Date": "2017-03-05T09:39:50Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mWaitingDialog) != null) { mWaitingDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2704/buggy-version/source.src.com.v2tech.view.conference.VideoActivityV2.java", "BodyUseAPI": [], "Fixed commit": "faf2a66fbb7fc6de497c69e63ac3b9b15309f426", "Url": "https://api.github.com/repos/jiangzhen1984/V2TechConferenceClient", "Date": "2014-03-30T12:41:30Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (drawer.isDone()) { awaitingDrawing.set(false); }else { drawer.cancel(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4043/buggy-version/bundles.map-editor.src.main.java.org.orbisgis.mapeditor.map.MapControl.java", "BodyUseAPI": ["org.orbisgis.mapeditor.map.MapControl.Drawer.cancel(boolean)"], "Fixed commit": "eabfd22745b4e26469b09bb99658b4e80d292e24", "Url": "https://api.github.com/repos/orbisgis/orbisgis", "Date": "2015-11-20T08:51:31Z"},
{"Line": "=>1071", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(currencyNode.equals(node))) { currencyNode = node; clearCachedBalances(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4095/buggy-version/jgnash-core.src.main.java.jgnash.engine.Account.java", "BodyUseAPI": [], "Fixed commit": "e71eea68915cf8b54e1ac423ec7a94804db81cdc", "Url": "https://api.github.com/repos/ccavanaugh/jgnash", "Date": "2014-10-26T12:27:23Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedLabel == 1) value[0] = category; else { value[0] = category + \"_false\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5912/buggy-version/TransferLearning_GitHub.src.tf.autoodc.iterative.Instances.java", "BodyUseAPI": [], "Fixed commit": "df71635a3cfa75743fa35b4f2cf51a8af2403dbf", "Url": "https://api.github.com/repos/chmr123/transfer-learning", "Date": "2015-11-06T04:22:35Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Boolean>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (reciveTtl == null) { reciveTtl = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4938/buggy-version/android-push-sdk.src.main.java.com.yy.httpproxy.socketio.SocketIOProxyClient.java", "BodyUseAPI": [], "Fixed commit": "e39801c2d77ebbcfa43b8654481af30a65ce4d52", "Url": "https://api.github.com/repos/xuduo/socket.io-push-android", "Date": "2016-09-02T05:23:05Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (calculatedDay > 0) { day = calculatedDay; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8301/buggy-version/app.src.main.java.com.terminatingcode.android.migrainetree.InputTriggersFragment.java", "BodyUseAPI": [], "Fixed commit": "3072d53948ac994d32fd4996e40bc49176275e3f", "Url": "https://api.github.com/repos/terminatingcode/MigraineTree", "Date": "2016-08-17T12:50:36Z"},
{"Line": "=>637", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(workList.isEmpty())) { com.ibm.wala.fixpoint.AbstractStatement s = workList.takeStatement(); java.lang.System.err.println(printRHSInstances(s)); workList.insertStatement(s); java.lang.System.err.println((\"CGNodes: \" + (cg.getNumberOfNodes()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8063/buggy-version/com.ibm.wala.core.src.com.ibm.wala.ipa.callgraph.propagation.PropagationSystem.java", "BodyUseAPI": ["com.ibm.wala.ipa.callgraph.propagation.PropagationSystem.takeStatement()", "com.ibm.wala.ipa.callgraph.propagation.PropagationSystem.insertStatement(com.ibm.wala.fixpoint.AbstractStatement)"], "Fixed commit": "5c1aeea7b7557981fc7001d5a84ef9b01a8a3915", "Url": "https://api.github.com/repos/jgf/wala-mirror", "Date": "2015-04-10T14:17:09Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cmds.origin) == (net.fe.FEMultiplayer.getClient().getID())) { execute = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4902/buggy-version/src.net.fe.overworldStage.ClientOverworldStage.java", "BodyUseAPI": [], "Fixed commit": "a4a21535436a4d348457d530c0d9c3ef2b01261b", "Url": "https://api.github.com/repos/chudooder/FEMultiplayer", "Date": "2014-01-05T23:54:08Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (execute) { grid.move(unit, ((unit.getXCoord()) + (cmds.moveX)), ((unit.getYCoord()) + (cmds.moveY)), true); unit.move(p, callback); }else { callback.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4902/buggy-version/src.net.fe.overworldStage.ClientOverworldStage.java", "BodyUseAPI": [], "Fixed commit": "a4a21535436a4d348457d530c0d9c3ef2b01261b", "Url": "https://api.github.com/repos/chudooder/FEMultiplayer", "Date": "2014-01-05T23:54:08Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((player.calculateScore()) < (dealer.calculateScore())) && ((stayFlag) == 1)) { player.loseBet(); winner = 2; }else if ((player.calculateScore()) == 21) { player.winBet(); winner = 1; }else if (((player.calculateScore()) == (dealer.calculateScore())) && ((stayFlag) == 1)) { player.winBet(); winner = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3357/buggy-version/src.main.java.models.Game.java", "BodyUseAPI": ["models.Dealer.calculateScore()", "models.Player.winBet()", "models.Player.calculateScore()", "models.Player.calculateScore()", "models.Player.loseBet()", "models.Player.winBet()"], "Fixed commit": "f36a3b4729165af5804bb21b3c36d583fefd13aa", "Url": "https://api.github.com/repos/cs361-W16/Blackjack-21", "Date": "2016-03-11T05:37:38Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mouseButtonClick == (LEFT_CLICK)) { holds = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1151/buggy-version/src.com.eugenewang.mobattack.Store.java", "BodyUseAPI": [], "Fixed commit": "71ca954d04036f208208c6bbcb2cebf6bf25505e", "Url": "https://api.github.com/repos/Kamagawa/mobAttack", "Date": "2016-11-12T22:18:14Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!(localeDefinition.containsKey((key + (com.evolveum.midpoint.web.component.menu.top.LocalePanel.PROP_NAME))))) || (!(localeDefinition.containsKey((key + (com.evolveum.midpoint.web.component.menu.top.LocalePanel.PROP_FLAG)))))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2932/buggy-version/gui.admin-gui.src.main.java.com.evolveum.midpoint.web.component.menu.top.LocalePanel.java", "BodyUseAPI": [], "Fixed commit": "5304d02993b72bcd66930da796c3c5b8cd680d41", "Url": "https://api.github.com/repos/PetrGasparik/midpoint", "Date": "2015-09-23T11:37:07Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(forneaExists)) iw.setNonFaded();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4481/buggy-version/core.src.com.knowyourself.Plot.PlotManager.java", "BodyUseAPI": [], "Fixed commit": "2e5ebfc3857e6b91227e39fbc463b4f250cad208", "Url": "https://api.github.com/repos/Rocket-Fish/Knowing-Yourself", "Date": "2017-07-23T19:49:10Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (forneaExists) iw.setFaded();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4481/buggy-version/core.src.com.knowyourself.Plot.PlotManager.java", "BodyUseAPI": [], "Fixed commit": "2e5ebfc3857e6b91227e39fbc463b4f250cad208", "Url": "https://api.github.com/repos/Rocket-Fish/Knowing-Yourself", "Date": "2017-07-23T19:49:10Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.end()) > (c.start())) { needS = false; if (ru instanceof dfh.grammar.VisibleSpace) lastVisible = true; }else if (ru instanceof dfh.grammar.VisibleSpace) { if (((((c.start()) == (n.start())) || ((c.end()) == (n.end()))) && ((c.start()) > 0)) && ((c.end()) < (s.length()))) { if (!((java.lang.Character.isWhitespace(c.start())) || (java.lang.Character.isWhitespace(s.charAt(((c.start()) - 1)))))) return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8216/buggy-version/src.dfh.grammar.SpaceCondition.java", "BodyUseAPI": ["dfh.grammar.Match.start()", "dfh.grammar.Match.start()", "dfh.grammar.Match.end()", "java.lang.Character.isWhitespace(char)", "dfh.grammar.Match.start()", "java.lang.CharSequence.charAt(((c.start()) - 1))", "dfh.grammar.Match.start()", "java.lang.Character.isWhitespace(c.start())", "dfh.grammar.Match.end()"], "Fixed commit": "19245dd8ce1d3581635dec1a771477ab44489ba3", "Url": "https://api.github.com/repos/dfhoughton/Grammar", "Date": "2012-10-05T13:09:52Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasParkingPass) simulatorView.setReservation(location, new Models.Reservation());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2594/buggy-version/src.Models.Simulator.java", "BodyUseAPI": [], "Fixed commit": "e6a79b658567bd2896f6369260b71d36ded45247", "Url": "https://api.github.com/repos/nedroden/Parking_Garage", "Date": "2017-01-26T14:25:46Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ecocean.servlet.Shepherd.getEncounter(request.getParameter(\"number\"))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (enc2add == null) throw new java.lang.RuntimeException((\"invalid encounter id=\" + (request.getParameter(\"number\"))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8206/buggy-version/src.main.java.org.ecocean.servlet.IndividualAddEncounter.java", "BodyUseAPI": [], "Fixed commit": "2c89ecfe10b9b2e4d3f2bf5785ab2a531beb233f", "Url": "https://api.github.com/repos/WildbookOrg/Wildbook", "Date": "2016-08-30T18:37:05Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(myShepherd.isMarkedIndividual(indivID))) { try { addToMe = new org.ecocean.servlet.MarkedIndividual(indivID, enc2add); myShepherd.storeNewMarkedIndividual(addToMe); } catch (java.lang.Exception ex) { ex.printStackTrace(); myShepherd.rollbackDBTransaction(); throw new java.lang.RuntimeException((\"unable to create new MarkedIndividual \" + indivID)); } }else { addToMe = myShepherd.getMarkedIndividual(indivID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8206/buggy-version/src.main.java.org.ecocean.servlet.IndividualAddEncounter.java", "BodyUseAPI": ["org.ecocean.servlet.Shepherd.getMarkedIndividual(java.lang.String)", "org.ecocean.servlet.Shepherd.rollbackDBTransaction()", "org.ecocean.servlet.Shepherd.storeNewMarkedIndividual(org.ecocean.servlet.MarkedIndividual)"], "Fixed commit": "2c89ecfe10b9b2e4d3f2bf5785ab2a531beb233f", "Url": "https://api.github.com/repos/WildbookOrg/Wildbook", "Date": "2016-08-30T18:37:05Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mImageUrlCache.contains(song.getId())) { return mImageUrlCache.getString(song.getId(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6496/buggy-version/app.src.main.java.com.radix.nowplayinglog.util.AlbumArtDownloaderAsyncTask.java", "BodyUseAPI": ["android.content.SharedPreferences.getString(song.getId(),<nulltype>)", "com.radix.nowplayinglog.models.Song.getId()"], "Fixed commit": "d81c4f96f147c843702767ed10ecb06703a4afa8", "Url": "https://api.github.com/repos/radixdev/whats-that-song", "Date": "2017-11-30T04:28:56Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((password) == null) || ((password.length()) == 0)) { this.mainPool = new redis.clients.jedis.JedisSentinelPool(mainMonitorName, sentinels, config); this.cachePool = new redis.clients.jedis.JedisSentinelPool(cacheMonitorName, sentinels, config); }else { this.mainPool = new redis.clients.jedis.JedisSentinelPool(mainMonitorName, sentinels, config, password); this.cachePool = new redis.clients.jedis.JedisSentinelPool(cacheMonitorName, sentinels, config, password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/470/buggy-version/src.main.java.net.bridgesapis.bungeebridge.core.database.SentinelDatabaseConnector.java", "BodyUseAPI": [], "Fixed commit": "4778dcc6cf6f20d600a4f58831fed0e841b679dd", "Url": "https://api.github.com/repos/BridgeAPIs/BungeeBridge", "Date": "2015-07-18T17:21:50Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((password) == null) || ((password.length()) == 0)) { this.mainPool = new redis.clients.jedis.JedisPool(config, mainParts[0], mainPort, 5000); this.cachePool = new redis.clients.jedis.JedisPool(config, cacheParts[0], cachePort, 5000); }else { this.mainPool = new redis.clients.jedis.JedisPool(config, mainParts[0], mainPort, 5000, password); this.cachePool = new redis.clients.jedis.JedisPool(config, cacheParts[0], cachePort, 5000, password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/470/buggy-version/src.main.java.net.bridgesapis.bungeebridge.core.database.SingleDatabaseConnector.java", "BodyUseAPI": [], "Fixed commit": "4778dcc6cf6f20d600a4f58831fed0e841b679dd", "Url": "https://api.github.com/repos/BridgeAPIs/BungeeBridge", "Date": "2015-07-18T17:21:50Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.t_oster.visicut.managers.LaserDeviceManager.getInstance().getAll()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(devices.isEmpty())) { this.setSelectedLaserDevice(devices.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1386/buggy-version/src.com.t_oster.visicut.VisicutModel.java", "BodyUseAPI": ["com.t_oster.visicut.VisicutModel.setSelectedLaserDevice(devices.get(0))", "java.util.List<com.t_oster.visicut.model.LaserDevice>.get(int)"], "Fixed commit": "42468d9ae7bdbaa76803d56597780b576423b8f3", "Url": "https://api.github.com/repos/mgmax/VisiCut", "Date": "2013-04-13T16:06:43Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.t_oster.visicut.managers.MaterialManager.getInstance().getAll()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(materials.isEmpty())) { this.setMaterial(materials.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1386/buggy-version/src.com.t_oster.visicut.VisicutModel.java", "BodyUseAPI": ["com.t_oster.visicut.VisicutModel.setMaterial(materials.get(0))", "java.util.List<com.t_oster.visicut.model.MaterialProfile>.get(int)"], "Fixed commit": "42468d9ae7bdbaa76803d56597780b576423b8f3", "Url": "https://api.github.com/repos/mgmax/VisiCut", "Date": "2013-04-13T16:06:43Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((statistics.getMax()) == null) { statisticsMap.put(StatisticConstant.MAX_VALUE, \"\"); }else { statisticsMap.put(StatisticConstant.MAX_VALUE, statistics.getMax().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4080/buggy-version/src.main.java.cn.edu.tsinghua.tsfile.timeseries.write.io.TsFileIOWriter.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(StatisticConstant.MAX_VALUE,statistics.getMax().toString())", "statistics.getMax().toString()", "cn.edu.tsinghua.tsfile.file.metadata.statistics.Statistics<?>.getMax()"], "Fixed commit": "38f2070cb36f06beab636c9df3260f5bcdec9d96", "Url": "https://api.github.com/repos/thulab/tsfile", "Date": "2017-12-15T03:29:54Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((statistics.getMin()) == null) { statisticsMap.put(StatisticConstant.MIN_VALUE, \"\"); }else { statisticsMap.put(StatisticConstant.MIN_VALUE, statistics.getMin().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4080/buggy-version/src.main.java.cn.edu.tsinghua.tsfile.timeseries.write.io.TsFileIOWriter.java", "BodyUseAPI": ["statistics.getMin().toString()", "java.util.Map<java.lang.String, java.lang.String>.put(StatisticConstant.MIN_VALUE,statistics.getMin().toString())", "cn.edu.tsinghua.tsfile.file.metadata.statistics.Statistics<?>.getMin()"], "Fixed commit": "38f2070cb36f06beab636c9df3260f5bcdec9d96", "Url": "https://api.github.com/repos/thulab/tsfile", "Date": "2017-12-15T03:29:54Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((statistics.getFirst()) == null) { statisticsMap.put(StatisticConstant.FIRST, \"\"); }else { statisticsMap.put(StatisticConstant.FIRST, statistics.getFirst().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4080/buggy-version/src.main.java.cn.edu.tsinghua.tsfile.timeseries.write.io.TsFileIOWriter.java", "BodyUseAPI": ["cn.edu.tsinghua.tsfile.file.metadata.statistics.Statistics<?>.getFirst()", "java.util.Map<java.lang.String, java.lang.String>.put(StatisticConstant.FIRST,statistics.getFirst().toString())", "statistics.getFirst().toString()"], "Fixed commit": "38f2070cb36f06beab636c9df3260f5bcdec9d96", "Url": "https://api.github.com/repos/thulab/tsfile", "Date": "2017-12-15T03:29:54Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((statistics.getMin()) == null) { statisticsMap.put(StatisticConstant.MIN_VALUE, \"\"); }else { statisticsMap.put(StatisticConstant.MIN_VALUE, statistics.getMin().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4080/buggy-version/src.main.java.cn.edu.tsinghua.tsfile.file.utils.ReadWriteThriftFormatUtils.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(StatisticConstant.MIN_VALUE,statistics.getMin().toString())", "statistics.getMin().toString()", "cn.edu.tsinghua.tsfile.file.metadata.statistics.Statistics<?>.getMin()"], "Fixed commit": "38f2070cb36f06beab636c9df3260f5bcdec9d96", "Url": "https://api.github.com/repos/thulab/tsfile", "Date": "2017-12-15T03:29:54Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((statistics.getFirst()) == null) { statisticsMap.put(StatisticConstant.FIRST, \"\"); }else { statisticsMap.put(StatisticConstant.FIRST, statistics.getFirst().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4080/buggy-version/src.main.java.cn.edu.tsinghua.tsfile.file.utils.ReadWriteThriftFormatUtils.java", "BodyUseAPI": ["cn.edu.tsinghua.tsfile.file.metadata.statistics.Statistics<?>.getFirst()", "statistics.getFirst().toString()", "java.util.Map<java.lang.String, java.lang.String>.put(StatisticConstant.FIRST,statistics.getFirst().toString())"], "Fixed commit": "38f2070cb36f06beab636c9df3260f5bcdec9d96", "Url": "https://api.github.com/repos/thulab/tsfile", "Date": "2017-12-15T03:29:54Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((statistics.getMax()) == null) { statisticsMap.put(StatisticConstant.MAX_VALUE, \"\"); }else { statisticsMap.put(StatisticConstant.MAX_VALUE, statistics.getMax().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4080/buggy-version/src.main.java.cn.edu.tsinghua.tsfile.file.utils.ReadWriteThriftFormatUtils.java", "BodyUseAPI": ["cn.edu.tsinghua.tsfile.file.metadata.statistics.Statistics<?>.getMax()", "java.util.Map<java.lang.String, java.lang.String>.put(StatisticConstant.MAX_VALUE,statistics.getMax().toString())", "statistics.getMax().toString()"], "Fixed commit": "38f2070cb36f06beab636c9df3260f5bcdec9d96", "Url": "https://api.github.com/repos/thulab/tsfile", "Date": "2017-12-15T03:29:54Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.oopsididitagain.rpg_iter2.controllers.GameController.sa.isBgSoundPlaying()) { com.oopsididitagain.rpg_iter2.controllers.GameController.sa.playBgClip(\"main\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4865/buggy-version/app.src.main.java.com.oopsididitagain.rpg_iter2.controllers.GameController.java", "BodyUseAPI": ["com.oopsididitagain.rpg_iter2.assets.SoundAssets.playBgClip(java.lang.String)"], "Fixed commit": "49d415ea5fa49ef97c11f41a35b99e32669e7fc4", "Url": "https://api.github.com/repos/OopsIDidItAgain/RPG_Iter2", "Date": "2015-03-23T05:30:24Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dm.world.isStructBlock(x, firstY)) diag2Clear = dm.system.blockIDMap.get(dm.world.getStructBlock(x, y)).isPassable;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6693/buggy-version/src.com.mtautumn.edgequest.PathFinder.java", "BodyUseAPI": ["dm.system.blockIDMap.get(dm.world.getStructBlock(x, y))", "dm.world.getStructBlock(int,int)"], "Fixed commit": "876268fcc824053851bfbb9e9d50554036669341", "Url": "https://api.github.com/repos/Mt-Autumn/edgequest-pre-alpha-java-demo", "Date": "2016-10-25T20:33:47Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dm.world.isStructBlock(firstX, y)) diag1Clear = dm.system.blockIDMap.get(dm.world.getStructBlock(x, y)).isPassable;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6693/buggy-version/src.com.mtautumn.edgequest.PathFinder.java", "BodyUseAPI": ["dm.system.blockIDMap.get(dm.world.getStructBlock(x, y))", "dm.world.getStructBlock(int,int)"], "Fixed commit": "876268fcc824053851bfbb9e9d50554036669341", "Url": "https://api.github.com/repos/Mt-Autumn/edgequest-pre-alpha-java-demo", "Date": "2016-10-25T20:33:47Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (v == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7299/buggy-version/src.main.java.rsc.parallel.ParallelUnorderedSource.java", "BodyUseAPI": [], "Fixed commit": "9a990791662381703c6732c4f71d014d400ca9ee", "Url": "https://api.github.com/repos/reactor/reactive-streams-commons", "Date": "2016-07-04T07:58:49Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (v == null) { for (org.reactivestreams.Subscriber<? super T> s : a) { s.onComplete(); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7299/buggy-version/src.main.java.rsc.parallel.ParallelUnorderedSource.java", "BodyUseAPI": [], "Fixed commit": "9a990791662381703c6732c4f71d014d400ca9ee", "Url": "https://api.github.com/repos/reactor/reactive-streams-commons", "Date": "2016-07-04T07:58:49Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strict) { throw new org.apache.camel.language.simple.types.SimpleParserException((\"Unknown file language syntax: \" + remainder), token.getIndex()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6688/buggy-version/camel-core.src.main.java.org.apache.camel.language.simple.ast.SimpleFunctionExpression.java", "BodyUseAPI": [], "Fixed commit": "9a6e6d8a9d81c6a764096009f058224affe60c9d", "Url": "https://api.github.com/repos/lburgazzoli/apache-camel", "Date": "2016-02-24T15:56:24Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.mp.isPlaying()) { this.mp.pause(); this.mp.seekTo(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4532/buggy-version/src.edu.ncsu.csc563.velocity.GLES20InteractiveSurfaceView.java", "BodyUseAPI": ["android.media.MediaPlayer.seekTo(int)", "android.media.MediaPlayer.pause()"], "Fixed commit": "565145fdd3bcae6d6890cb7cc82ee0b299a22b46", "Url": "https://api.github.com/repos/rbgross/Velocity", "Date": "2014-04-22T23:51:31Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lastSeenEidMarkerPosition) > 0) && ((lastSeenEidMarkerPosition) <= (currentGroupPosition))) (currentGroupPosition)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6820/buggy-version/src.com.irccloud.android.fragment.MessageViewFragment.java", "BodyUseAPI": [], "Fixed commit": "e42989effa85b906db7a291a0dcc4e07aa9e8d24", "Url": "https://api.github.com/repos/irccloud/android", "Date": "2014-02-28T01:16:28Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getArgument(1)) == null) { return getField(node).isNull(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1309/buggy-version/Core.src.com.infiniteautomation.mango.db.query.RQLToCondition.java", "BodyUseAPI": ["org.jooq.Field<java.lang.Object>.isNull()", "com.infiniteautomation.mango.db.query.RQLToCondition.getField(net.jazdw.rql.parser.ASTNode)"], "Fixed commit": "4d5cc83f6c889cdf2cc5641860f2414c1f18b782", "Url": "https://api.github.com/repos/infiniteautomation/ma-core-public", "Date": "2017-10-26T15:53:13Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getArgument(1)) == null) { return getField(node).isNotNull(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1309/buggy-version/Core.src.com.infiniteautomation.mango.db.query.RQLToCondition.java", "BodyUseAPI": ["org.jooq.Field<java.lang.Object>.isNotNull()", "com.infiniteautomation.mango.db.query.RQLToCondition.getField(net.jazdw.rql.parser.ASTNode)"], "Fixed commit": "4d5cc83f6c889cdf2cc5641860f2414c1f18b782", "Url": "https://api.github.com/repos/infiniteautomation/ma-core-public", "Date": "2017-10-26T15:53:13Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newState == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6580/buggy-version/smdp.src.main.java.org.hanns.rl.discrete.learningAlgorithm.lambda.impl.AbstractFinalModelNStepLambda.java", "BodyUseAPI": [], "Fixed commit": "0127c936ad159d0a5821b85362e02200235599d2", "Url": "https://api.github.com/repos/jvitku/rl", "Date": "2015-05-03T16:23:02Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (clazz == null) { gson = new com.google.gson.GsonBuilder().create(); }else { contentValuesAdapter = new by.istin.android.xcore.gson.ContentValuesAdapter(clazz); gson = by.istin.android.xcore.processor.impl.AbstractGsonProcessor.createGsonWithContentValuesAdapter(contentValuesAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8307/buggy-version/xcore.src.by.istin.android.xcore.processor.impl.AbstractGsonProcessor.java", "BodyUseAPI": [], "Fixed commit": "15e8247a717127fe14e871053b43aacacb49e03e", "Url": "https://api.github.com/repos/IstiN/android_xcore", "Date": "2013-10-19T22:05:09Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.krishagni.catissueplus.core.common.util.AuthUtil.getCurrentUser()) != null) { userId = com.krishagni.catissueplus.core.common.util.AuthUtil.getCurrentUser().getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2457/buggy-version/WEB-INF.src.com.krishagni.catissueplus.core.auditquery.events.EnversListener.java", "BodyUseAPI": [], "Fixed commit": "67990b8a4813f67016b54321970263f324a411ac", "Url": "https://api.github.com/repos/krishagni/openspecimen", "Date": "2015-04-09T08:56:36Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (instances != null) { allInstances.addAll(instances); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2589/buggy-version/bridje-core.src.main.java.org.bridje.core.ioc.impl.ContextImpl.java", "BodyUseAPI": [], "Fixed commit": "ac2fc597ccdf26f30fb47b5375168dab6be24ab9", "Url": "https://api.github.com/repos/touwolf/bridje-framework", "Date": "2015-10-30T05:50:43Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (counter == 0) return -1; else if (counter == 1) return stNums[0]; else { simulator.Instruction candidate = Stations[stNums[0]].instruction; for (int i = 1; i < counter; i++) { if (reorderBuffer.isBefore(candidate, Stations[stNums[i]].instruction)) candidate = Stations[stNums[i]].instruction; } return candidate.stNum; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/349/buggy-version/simulator.src.simulator.ReservationStations.java", "BodyUseAPI": [], "Fixed commit": "7e406f680c652cf4937d4a18bcf9197545382e7f", "Url": "https://api.github.com/repos/ercgrat/cpu-sim", "Date": "2015-10-12T21:22:39Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["microbat.model.trace.TraceNode.getConditionScope()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (conditionScope != null) { if (conditionScope.containsNodeScope(dominatee)) { return node; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7674/buggy-version/microbat.src.main.microbat.model.trace.Trace.java", "BodyUseAPI": ["microbat.model.Scope.containsNodeScope(microbat.model.trace.TraceNode)"], "Fixed commit": "aab7f5fec719a6f259ee7c93877a686bdb837788", "Url": "https://api.github.com/repos/sunjun-group/Ziyuan", "Date": "2016-02-25T03:32:58Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kframework.backend.unparser.Term.getContents()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i < ((termList.size()) - 1)) { indenter.write(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3190/buggy-version/src.javasources.KTool.src.org.kframework.backend.unparser.UnparserFilter.java", "BodyUseAPI": [], "Fixed commit": "138703ba536e054cb0a47200413936020a127882", "Url": "https://api.github.com/repos/andreistefanescu/k", "Date": "2014-03-13T02:46:23Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pme.getTo().clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((loc.getY()) < 0) || ((loc.getY()) >= 256)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7092/buggy-version/src.main.java.nl.dykam.dev.readysetjump.ReadySetJumpPlugin.java", "BodyUseAPI": [], "Fixed commit": "c00946af81b478c99688024c5fbc5915f6a51844", "Url": "https://api.github.com/repos/Dykam/ReadySetJump", "Date": "2013-12-09T23:48:10Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pme.getTo().clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((loc.getY()) < 0) || ((loc.getY()) >= 256)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7092/buggy-version/src.main.java.nl.dykam.dev.readysetjump.ReadySetJumpPlugin.java", "BodyUseAPI": [], "Fixed commit": "c00946af81b478c99688024c5fbc5915f6a51844", "Url": "https://api.github.com/repos/Dykam/ReadySetJump", "Date": "2013-12-09T23:48:10Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((command) == null) { return \"GET\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/801/buggy-version/src.shtaag.network.curl.impl.Command.java", "BodyUseAPI": [], "Fixed commit": "12fe2236158c68d11ad3ab5157b833a58c2cb3a3", "Url": "https://api.github.com/repos/shtaag/MyCURL", "Date": "2011-12-26T03:08:56Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(soloCombat)) opponents.get(1).setHealth(100);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2595/buggy-version/app.src.main.java.com.fluffyadventure.view.SoloCombat.java", "BodyUseAPI": [], "Fixed commit": "b0ec2d02d952f1c281546e290f9371ffdb2766da", "Url": "https://api.github.com/repos/AmelieA/fluffy-adventure", "Date": "2015-03-23T09:21:02Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fm.flickr.api.wrapper.service.FlickrService.getPhotoPools(photo.getPhotoId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (grpSet != null) photoInfo.setNbGroups(java.lang.String.valueOf(grpSet.size())); else photoInfo.setNbGroups(\"0\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7774/buggy-version/src.fm.flickr.stat.perform.ActivityStat.java", "BodyUseAPI": ["fm.flickr.api.wrapper.service.param.GroupItemsSet.size()", "java.lang.String.valueOf(grpSet.size())", "fm.flickr.api.wrapper.service.param.PhotoItemInfo.setNbGroups(java.lang.String)"], "Fixed commit": "239a8c110c355b565ac073da39498245132a12ab", "Url": "https://api.github.com/repos/frmichel/flickr-statistics", "Date": "2012-12-18T12:02:00Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fm.flickr.api.wrapper.service.FlickrService.getNbFavs(photo.getPhotoId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (nbFavs != null) photoInfo.setNbFavs(nbFavs); else photoInfo.setNbFavs(\"0\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7774/buggy-version/src.fm.flickr.stat.perform.ActivityStat.java", "BodyUseAPI": ["fm.flickr.api.wrapper.service.param.PhotoItemInfo.setNbFavs(java.lang.String)"], "Fixed commit": "239a8c110c355b565ac073da39498245132a12ab", "Url": "https://api.github.com/repos/frmichel/flickr-statistics", "Date": "2012-12-18T12:02:00Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nb != (-1)) { fm.flickr.stat.perform.DailyUploadsStat.distribution.set(i, nb); total += nb; fm.flickr.stat.perform.DailyUploadsStat.distribution.set(((fm.flickr.stat.perform.DailyUploadsStat.ELTS_PER_LINE) - 1), total); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7774/buggy-version/src.fm.flickr.stat.perform.DailyUploadsStat.java", "BodyUseAPI": ["java.util.Vector<java.lang.Long>.set(int,long)"], "Fixed commit": "239a8c110c355b565ac073da39498245132a12ab", "Url": "https://api.github.com/repos/frmichel/flickr-statistics", "Date": "2012-12-18T12:02:00Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((today.compareTo(maxDate)) > 0) { maxDate = today; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8293/buggy-version/src.com.k10v.goaltracker.Panel.java", "BodyUseAPI": [], "Fixed commit": "e1f5b822ae5e349e62f554376afe318a123a8eff", "Url": "https://api.github.com/repos/alekz/goal-tracker", "Date": "2011-10-03T06:22:30Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jmab.strategies.AdaptiveReturnOnAC.getAgent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.Double.isNaN(seller.getPriceLowerBound())) { java.lang.System.out.println(\"NaN Markup\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5394/buggy-version/src.jmab.strategies.AdaptiveReturnOnAC.java", "BodyUseAPI": [], "Fixed commit": "71591494aeee689c882f602cffa2094875a720b4", "Url": "https://api.github.com/repos/S120/jmab", "Date": "2017-06-15T09:37:09Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(price)) { java.lang.System.out.println(\"NaN Markup\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5394/buggy-version/src.jmab.strategies.AdaptiveReturnOnAC.java", "BodyUseAPI": [], "Fixed commit": "71591494aeee689c882f602cffa2094875a720b4", "Url": "https://api.github.com/repos/S120/jmab", "Date": "2017-06-15T09:37:09Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.getEventType().equals(\"Birth Registration\")) { java.util.List<org.opensrp.domain.Obs> obs = event.getObs(); for (org.opensrp.domain.Obs obs2 : obs) { if ((((obs2 != null) && (obs2.getFieldType().equals(\"formsubmissionField\"))) && (obs2.getFormSubmissionField().equals(\"Home_Facility\"))) && ((obs2.getValue()) != null)) { java.util.ArrayList<java.lang.String> locationsHierarchy = openmrsLocationService.getLocationsHierarchy(new com.google.gson.Gson().toJson(openmrsLocationService.getLocationTreeOf(obs2.getValue().toString()))); jao.put(\"address4\", openmrsLocationService.getLocation(obs2.getValue().toString()).getName()); jao.put(\"countyDistrict\", locationsHierarchy.get(0)); jao.put(\"stateProvince\", locationsHierarchy.get(1)); jao.put(\"country\", locationsHierarchy.get(2)); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7420/buggy-version/opensrp-connector.src.main.java.org.opensrp.connector.openmrs.service.PatientService.java", "BodyUseAPI": ["org.opensrp.domain.Event.getObs()"], "Fixed commit": "9f5bd52c84427c71f592e46ea18177b2caaa1d43", "Url": "https://api.github.com/repos/OpenSRP/opensrp-server", "Date": "2017-08-18T08:44:55Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<org.sonar.api.resources.Resource, java.lang.Integer>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resource == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7080/buggy-version/src.main.java.com.rigsit.xanitizer.sqplugin.XanitizerSensor.java", "BodyUseAPI": [], "Fixed commit": "73309b03a0ccbf3aa0a2963ddc505c5b79bf6c59", "Url": "https://api.github.com/repos/RIGS-IT/sonar-xanitizer", "Date": "2017-08-24T10:56:07Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["toRet.data_.getCurrentPlayerHand()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((hand.size()) == 0) { return toRet; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/836/buggy-version/src.main.java.com.hearthsim.card.minion.concrete.Doomguard.java", "BodyUseAPI": [], "Fixed commit": "e2e90d0db3cc04f1126f84cd98408f592a8f30a9", "Url": "https://api.github.com/repos/oyachai/HearthSim", "Date": "2014-12-03T05:42:01Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (in == null) { throw new java.lang.NullPointerException(\"Parameter in must not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7662/buggy-version/src.main.java.org.apache.commons.compress.utils.ChecksumCalculatingInputStream.java", "BodyUseAPI": [], "Fixed commit": "aaa54e750ef858e0eea7e43ed7e32cf1c6188c0e", "Url": "https://api.github.com/repos/sesuncedu/commons-compress", "Date": "2017-06-16T19:30:03Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (checksum == null) { throw new java.lang.NullPointerException(\"Parameter checksum must not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7662/buggy-version/src.main.java.org.apache.commons.compress.utils.ChecksumCalculatingInputStream.java", "BodyUseAPI": [], "Fixed commit": "aaa54e750ef858e0eea7e43ed7e32cf1c6188c0e", "Url": "https://api.github.com/repos/sesuncedu/commons-compress", "Date": "2017-06-16T19:30:03Z"},
{"Line": "=>753", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (coordsFlag) { coordsFlag = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1873/buggy-version/app.src.main.java.edu.up.cs301.Labyrinth.LabHumanPlayer.java", "BodyUseAPI": [], "Fixed commit": "501836e0ffc5ae0070d859c8f2feec037d7f25a5", "Url": "https://api.github.com/repos/NaKister/Labyrinth", "Date": "2016-12-04T19:18:19Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(enabled)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2653/buggy-version/src.NetworkGame.java", "BodyUseAPI": [], "Fixed commit": "37b4637bb86419b9f521a45318d30971ab288f68", "Url": "https://api.github.com/repos/cwendel16834/fanorona12", "Date": "2013-03-31T22:34:46Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inputLine.startsWith(\"A\")) || (inputLine.startsWith(\"W\"))) { if (!(recievedOk)) { controller.debug(\"Client did not acknowledge last message\"); out.println(\"ILLEGAL\"); out.println(\"LOSER\"); } recievedOk = false; if (!(processInput(inputLine))) { controller.debug(\"Client move was invalid\"); out.println(\"ILLEGAL\"); out.println(\"LOSER\"); } }else if (inputLine.startsWith(\"S\")) { if (!(recievedOk)) { controller.debug(\"Client did not acknowledge last message\"); out.println(\"ILLEGAL\"); out.println(\"LOSER\"); } recievedOk = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2653/buggy-version/src.NetworkGame.java", "BodyUseAPI": ["twelve.team.NetworkGame.processInput(java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "37b4637bb86419b9f521a45318d30971ab288f68", "Url": "https://api.github.com/repos/cwendel16834/fanorona12", "Date": "2013-03-31T22:34:46Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(recievedOk)) { controller.debug(\"Client did not acknowledge last message\"); out.println(\"ILLEGAL\"); out.println(\"LOSER\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2653/buggy-version/src.NetworkGame.java", "BodyUseAPI": [], "Fixed commit": "37b4637bb86419b9f521a45318d30971ab288f68", "Url": "https://api.github.com/repos/cwendel16834/fanorona12", "Date": "2013-03-31T22:34:46Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Enum.getClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((clz.getEnclosingClass()) != null) clz = clz.getEnclosingClass();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1768/buggy-version/modules.activiti-engine.src.main.java.org.activiti.engine.impl.variable.EnumType.java", "BodyUseAPI": ["java.lang.Class<?>.getEnclosingClass()"], "Fixed commit": "f8a2d61c82ff408ecb54e81a3155b725217a1ad7", "Url": "https://api.github.com/repos/quaff/Activiti", "Date": "2014-04-29T23:36:28Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (user.hasBeenSavedToServer()) { removeUser(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1063/buggy-version/app.src.main.java.taskr.se.taskr.repository.UserRepositorySql.java", "BodyUseAPI": ["taskr.se.taskr.repository.UserRepositorySql.removeUser(taskr.se.taskr.model.User)"], "Fixed commit": "61baa2ac8ed4a8bedcaa029180699c545ebab7fb", "Url": "https://api.github.com/repos/TaskR-Team/TaskRClient-Android", "Date": "2017-05-18T15:16:47Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (workItem.hasBeenSavedToServer()) { removeWorkItem(workItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1063/buggy-version/app.src.main.java.taskr.se.taskr.repository.WorkItemRepositorySql.java", "BodyUseAPI": ["taskr.se.taskr.repository.WorkItemRepositorySql.removeWorkItem(taskr.se.taskr.model.WorkItem)"], "Fixed commit": "61baa2ac8ed4a8bedcaa029180699c545ebab7fb", "Url": "https://api.github.com/repos/TaskR-Team/TaskRClient-Android", "Date": "2017-05-18T15:16:47Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(formatNodeIdentifierData().equals(nm.toString()))) { if (send(nm, joinDirectRequestPacket)) { waitingForShepherdResponse = true; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5246/buggy-version/src.main.java.com.rkwon.app.CMNode.java", "BodyUseAPI": ["com.rkwon.app.CMNode.send(com.rkwon.app.NodeMetadata,com.rkwon.app.Packet)"], "Fixed commit": "8a0dff1ce528cbb5f8511fe67a47cf5e035804e2", "Url": "https://api.github.com/repos/rynkwn/collective-memory", "Date": "2017-11-29T05:27:36Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getTableName().equals(\"sipra_mtd_t_categoria_appl\")) { query += \" ORDER BY Ordine \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7077/buggy-version/frontend.metadata-services.src.main.java.it.csi.sira.backend.metadata.utils.GenericDAO.java", "BodyUseAPI": [], "Fixed commit": "63ecde718a653f8b50ce9b59b812d3adb545527e", "Url": "https://api.github.com/repos/fra1312/csi-sira", "Date": "2017-03-06T12:57:50Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.lordvader.coinAPI.MySQL.getResult(((\"SELECT * FROM coins WHERE uuid = '\" + (player.getUniqueId())) + \"'\"))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (rs == null) { java.lang.System.out.println(rs.toString()); java.lang.System.out.println(\"Das Result set war null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3668/buggy-version/src.de.lordvader.coinAPI.CoinAPI.java", "BodyUseAPI": ["java.sql.ResultSet.toString()", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "752708449008c9ee2140f99435154e9230763390", "Url": "https://api.github.com/repos/lordvaderde/CoinAPI", "Date": "2016-02-26T14:25:11Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mState) != null) mState.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4987/buggy-version/src.com.dedaulus.cinematty.CinemattyApplication.java", "BodyUseAPI": [], "Fixed commit": "c925f6b83d047b3e82456a6e7614af01be6fa38a", "Url": "https://api.github.com/repos/Dedaulus/Cinematty", "Date": "2011-09-26T13:14:16Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["concert.getArtists().size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numberOfArtists != 0) { listener.searchArtistOnSpotify(this, 0, songsPerArtist, concert.getArtists(), concert); }else { noSongsLoaded(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4113/buggy-version/app.src.main.java.com.example.jinjinz.concertprev.fragments.SongsFragment.java", "BodyUseAPI": [], "Fixed commit": "365c59c7d04bf16ca6e5072ae658038fb46c932d", "Url": "https://api.github.com/repos/beccablee/ConcertsPreview", "Date": "2016-07-29T02:55:58Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (args[0].equalsIgnoreCase(\"compass\")) { if (sender instanceof org.bukkit.entity.Player) { org.bukkit.inventory.ItemStack itemStack = new org.bukkit.inventory.ItemStack(org.bukkit.Material.COMPASS); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4927/buggy-version/src.com.talesdev.copsandcrims.CopsAndCrimsCommand.java", "BodyUseAPI": [], "Fixed commit": "ba4c47d0b0af44855ff117e20c63815d0a854ad5", "Url": "https://api.github.com/repos/moemizu/CopsAndCriminals", "Date": "2015-04-20T13:59:50Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Utilities.G[i][j]) == false) { if (com.cryptull.asd.Graph.getRandomBoolean(random)) { Utilities.G[i][j] = true; Utilities.G[j][i] = true; (com.cryptull.asd.Graph.edges)++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6775/buggy-version/mobile.src.main.java.com.cryptull.asd.Graph.java", "BodyUseAPI": [], "Fixed commit": "b4673b264453deee238d5917e9588121378ae47f", "Url": "https://api.github.com/repos/pacomf/ASD", "Date": "2014-09-30T08:55:45Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shape != null) { resultShape = (module + \":\") + shape; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3307/buggy-version/src.main.java.org.terasology.was.system.RegisterWoodAndStoneRecipes.java", "BodyUseAPI": [], "Fixed commit": "4bbc0671715e0078f5e128513cffe9da63964cca", "Url": "https://api.github.com/repos/Terasology/WoodAndStone", "Date": "2014-06-12T13:35:39Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.wrenchCount) < 1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3678/buggy-version/app.src.main.java.com.harbor.game.GameData.java", "BodyUseAPI": [], "Fixed commit": "e63fc7e834314a9b10cf258f96763f3717f63a39", "Url": "https://api.github.com/repos/harborluo/X-pipes", "Date": "2016-10-14T07:18:23Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (animationOn) { for (int[] task : animationTaskList) { gameData.addTotalScore(task[2]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3678/buggy-version/app.src.main.java.com.harbor.game.activity.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "e63fc7e834314a9b10cf258f96763f3717f63a39", "Url": "https://api.github.com/repos/harborluo/X-pipes", "Date": "2016-10-14T07:18:23Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataSnapshot.getValue(com.example.puroong.ssuciety.models.User.class)) != null) { user = new com.example.puroong.ssuciety.models.User(dataSnapshot); }else { user = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5129/buggy-version/app.src.main.java.com.example.puroong.ssuciety.api.UserAPI.java", "BodyUseAPI": [], "Fixed commit": "c8eaea84962d56adf2a8d7402daf661e9708f256", "Url": "https://api.github.com/repos/Soongari/Soongari", "Date": "2017-12-17T15:11:06Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataRule.contains(\"regExReplace\")) { treatedValues.addAll(main.java.betullam.akimporter.rules.RegExReplace.getRegexReplaceValues(dataFieldValues, dataRule)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4777/buggy-version/src.main.java.betullam.akimporter.rules.Rules.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(main.java.betullam.akimporter.rules.RegExReplace.getRegexReplaceValues(dataFieldValues, dataRule))", "main.java.betullam.akimporter.rules.RegExReplace.getRegexReplaceValues(java.util.List<java.lang.String>,java.lang.String)"], "Fixed commit": "0ed77d58428558ea3ba6ae5e07483ea624f28d21", "Url": "https://api.github.com/repos/AKBibliothekWien/akimporter", "Date": "2016-11-23T17:46:54Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataRule.contains(\"regEx[\")) { treatedValues.addAll(main.java.betullam.akimporter.rules.RegEx.getRegexValues(dataFieldValues, dataRule)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4777/buggy-version/src.main.java.betullam.akimporter.rules.Rules.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(main.java.betullam.akimporter.rules.RegEx.getRegexValues(dataFieldValues, dataRule))", "main.java.betullam.akimporter.rules.RegEx.getRegexValues(java.util.List<java.lang.String>,java.lang.String)"], "Fixed commit": "0ed77d58428558ea3ba6ae5e07483ea624f28d21", "Url": "https://api.github.com/repos/AKBibliothekWien/akimporter", "Date": "2016-11-23T17:46:54Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataRule.contains(\"regExStrict\")) { treatedValues.addAll(main.java.betullam.akimporter.rules.RegExStrict.getRegexStrictValues(dataFieldValues, dataRule)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4777/buggy-version/src.main.java.betullam.akimporter.rules.Rules.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(main.java.betullam.akimporter.rules.RegExStrict.getRegexStrictValues(dataFieldValues, dataRule))", "main.java.betullam.akimporter.rules.RegExStrict.getRegexStrictValues(java.util.List<java.lang.String>,java.lang.String)"], "Fixed commit": "0ed77d58428558ea3ba6ae5e07483ea624f28d21", "Url": "https://api.github.com/repos/AKBibliothekWien/akimporter", "Date": "2016-11-23T17:46:54Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (treatedValues.isEmpty()) { treatedValues = dataFieldValues; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4777/buggy-version/src.main.java.betullam.akimporter.rules.Rules.java", "BodyUseAPI": [], "Fixed commit": "0ed77d58428558ea3ba6ae5e07483ea624f28d21", "Url": "https://api.github.com/repos/AKBibliothekWien/akimporter", "Date": "2016-11-23T17:46:54Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.github.afide.api.app.Application.logger.isInfoEnabled()) { com.github.afide.api.app.Application.logger.info(\"Received tx value: {}\", com.github.afide.api.app.Application.byteArrayToHexSring(tx)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6891/buggy-version/modules.server.src.main.java.com.github.afide.api.app.Application.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,java.lang.String)"], "Fixed commit": "a0f1682bda1c5c799439f87de940898d504e40ba", "Url": "https://api.github.com/repos/afide/capraia", "Date": "2017-03-22T01:35:49Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.github.afide.api.app.Application.logger.isDebugEnabled()) { com.github.afide.api.app.Application.logger.debug((\"Received tx value: \" + (com.github.afide.api.app.Application.byteArrayToHexSring(tx)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6891/buggy-version/modules.server.src.main.java.com.github.afide.api.app.Application.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "a0f1682bda1c5c799439f87de940898d504e40ba", "Url": "https://api.github.com/repos/afide/capraia", "Date": "2017-03-22T01:35:49Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.github.afide.api.app.Application.logger.isDebugEnabled()) { com.github.afide.api.app.Application.logger.debug(\"hash={} height={}\", com.github.afide.api.app.Application.byteArrayToHex(lastBlockHash), lastBlockHeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6891/buggy-version/modules.server.src.main.java.com.github.afide.api.app.Application.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.String,long)"], "Fixed commit": "a0f1682bda1c5c799439f87de940898d504e40ba", "Url": "https://api.github.com/repos/afide/capraia", "Date": "2017-03-22T01:35:49Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.github.afide.api.app.Application.logger.isDebugEnabled()) { com.github.afide.api.app.Application.logger.debug(\"hash={}\", com.github.afide.api.app.Application.byteArrayToHex(lastBlockHash)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6891/buggy-version/modules.server.src.main.java.com.github.afide.api.app.Application.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.String)"], "Fixed commit": "a0f1682bda1c5c799439f87de940898d504e40ba", "Url": "https://api.github.com/repos/afide/capraia", "Date": "2017-03-22T01:35:49Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(log.getEvents().contains(newEvent))) { log.handleEvent(newEvent); localMessages.add(newEvent.getMsg()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/494/buggy-version/src.server.Server.java", "BodyUseAPI": ["java.util.LinkedList<server.Message>.add(newEvent.getMsg())", "server.Event.getMsg()", "server.Log.handleEvent(server.Event)"], "Fixed commit": "cdd232a0108924dbd8d7dbbb642833d2f53a9534", "Url": "https://api.github.com/repos/trigish/m-flyer", "Date": "2016-05-01T04:40:32Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((event.getEntered()) instanceof org.bukkit.entity.Player)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5578/buggy-version/src.main.java.net.jp.minecraft.plugins.Listener.Listener_Horse.java", "BodyUseAPI": [], "Fixed commit": "447df83b3403cf320247c0c2c8cb59f39caa4f81", "Url": "https://api.github.com/repos/syokkendesuyo/TeisyokuPlugin2", "Date": "2016-06-04T10:07:58Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doc.select(\"span[class=\\\"qualified-channel-title-text\\\"] a\").first()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (channelName != null) { org.schabi.newpipe.extractor.services.youtube.YoutubePlayListExtractor.channelName = channelName.text(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5007/buggy-version/app.src.main.java.org.schabi.newpipe.extractor.services.youtube.YoutubePlayListExtractor.java", "BodyUseAPI": ["org.jsoup.nodes.Element.text()"], "Fixed commit": "aef602e61697150e35342945377d7d782db72cd1", "Url": "https://api.github.com/repos/BlenderViking/NewPipe", "Date": "2016-11-30T22:26:51Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doc.select(\"meta[name=title]\").first()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (playlistName != null) { if (android.text.TextUtils.isEmpty(org.schabi.newpipe.extractor.services.youtube.YoutubePlayListExtractor.channelName)) { org.schabi.newpipe.extractor.services.youtube.YoutubePlayListExtractor.channelName = playlistName.attr(\"content\"); }else { org.schabi.newpipe.extractor.services.youtube.YoutubePlayListExtractor.channelName += \" - \" + (playlistName.attr(\"content\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5007/buggy-version/app.src.main.java.org.schabi.newpipe.extractor.services.youtube.YoutubePlayListExtractor.java", "BodyUseAPI": ["org.jsoup.nodes.Element.attr(java.lang.String)", "org.jsoup.nodes.Element.attr(java.lang.String)"], "Fixed commit": "aef602e61697150e35342945377d7d782db72cd1", "Url": "https://api.github.com/repos/BlenderViking/NewPipe", "Date": "2016-11-30T22:26:51Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 0) { sender.sendMessage(\"Console cannot use this command except on other players\"); }else if ((args.length) == 1) { if ((org.bukkit.Bukkit.getServer().getPlayer(args[0])) != null) { org.bukkit.entity.Player target = org.bukkit.Bukkit.getServer().getPlayer(args[0]); me.Qball.Wild.Utils.WildTpBack back = new me.Qball.Wild.Utils.WildTpBack(); back.saveLoc(target, target.getLocation()); me.Qball.Wild.Utils.GetRandomLocation random = new me.Qball.Wild.Utils.GetRandomLocation(wild); random.getWorldInfo(org.bukkit.Bukkit.getPlayer(args[0])); target.sendMessage(((net.md_5.bungee.api.ChatColor.GREEN) + \"Thrown to a random location by the console\")); return true; }else { sender.sendMessage(((\"Player \" + (args[0])) + \" is not online\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6462/buggy-version/src.me.Qball.Wild.Commands.CmdWild.java", "BodyUseAPI": ["org.bukkit.Bukkit.getPlayer(java.lang.String)", "org.bukkit.Bukkit.getServer().getPlayer(java.lang.String)", "me.Qball.Wild.Utils.GetRandomLocation.getWorldInfo(org.bukkit.Bukkit.getPlayer(args[0]))", "org.bukkit.Bukkit.getServer().getPlayer(java.lang.String)", "org.bukkit.command.CommandSender.sendMessage(java.lang.String)"], "Fixed commit": "915b8d55ed2c3d19705fc6e9c5c4b64e4abe16ef", "Url": "https://api.github.com/repos/Qballl/WildernessTp", "Date": "2016-11-08T13:52:43Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 1) { if ((org.bukkit.Bukkit.getServer().getPlayer(args[0])) != null) { org.bukkit.entity.Player target = org.bukkit.Bukkit.getServer().getPlayer(args[0]); if (p.hasPermission(\"wild.wildtp.others\")) { if (checks.world(target)) check.check(p, target); else p.sendMessage(((net.md_5.bungee.api.ChatColor.RED) + \"The specified player is in a world where the command cannot be used\")); } }else p.sendMessage(((((net.md_5.bungee.api.ChatColor.RED) + \"Player \") + (args[0])) + \" is not online\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6462/buggy-version/src.me.Qball.Wild.Commands.CmdWild.java", "BodyUseAPI": ["org.bukkit.Bukkit.getServer().getPlayer(java.lang.String)", "org.bukkit.entity.Player.sendMessage(((((net.md_5.bungee.api.ChatColor.RED) + \"Player \") + (args[0])) + \" is not online\"))", "org.bukkit.Bukkit.getServer().getPlayer(java.lang.String)"], "Fixed commit": "915b8d55ed2c3d19705fc6e9c5c4b64e4abe16ef", "Url": "https://api.github.com/repos/Qballl/WildernessTp", "Date": "2016-11-08T13:52:43Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["contactEntry.namesMatchThisContactData.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (numberContactsTable.containsKey(str)) { for (int k = 0; k < (numberContactsTable.get(str).size()); k++) { if (contactEntry.contactData.equals(numberContactsTable.get(str).get(k).contactData)) numberContactsTable.get(str).remove(k); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4231/buggy-version/app.src.main.java.ir.rasen.charsoo.view.fragment.FragmentUserRegisterOfferFriend.java", "BodyUseAPI": ["numberContactsTable.get(str).size()", "numberContactsTable.get(str).get(int)", "java.util.Hashtable<java.lang.String, java.util.ArrayList<ir.rasen.charsoo.controller.object.ContactEntry>>.get(java.lang.String)", "java.util.Hashtable<java.lang.String, java.util.ArrayList<ir.rasen.charsoo.controller.object.ContactEntry>>.get(java.lang.String)", "java.util.Hashtable<java.lang.String, java.util.ArrayList<ir.rasen.charsoo.controller.object.ContactEntry>>.get(java.lang.String)", "contactEntry.contactData.equals(numberContactsTable.get(str).get(k).contactData)", "numberContactsTable.get(str).remove(int)"], "Fixed commit": "2b8ad9cf4c7669078f5cbbf62faacc057cff68e7", "Url": "https://api.github.com/repos/rasenir/charsoo", "Date": "2015-07-12T09:18:15Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["contactEntry.namesMatchThisContactData.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (emailContactsTable.containsKey(str)) { for (int k = 0; k < (emailContactsTable.get(str).size()); k++) { if (contactEntry.contactData.equals(emailContactsTable.get(str).get(k).contactData)) emailContactsTable.get(str).remove(k); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4231/buggy-version/app.src.main.java.ir.rasen.charsoo.view.fragment.FragmentUserRegisterOfferFriend.java", "BodyUseAPI": ["contactEntry.contactData.equals(emailContactsTable.get(str).get(k).contactData)", "java.util.Hashtable<java.lang.String, java.util.ArrayList<ir.rasen.charsoo.controller.object.ContactEntry>>.get(java.lang.String)", "java.util.Hashtable<java.lang.String, java.util.ArrayList<ir.rasen.charsoo.controller.object.ContactEntry>>.get(java.lang.String)", "java.util.Hashtable<java.lang.String, java.util.ArrayList<ir.rasen.charsoo.controller.object.ContactEntry>>.get(java.lang.String)", "emailContactsTable.get(str).remove(int)", "emailContactsTable.get(str).size()", "emailContactsTable.get(str).get(int)"], "Fixed commit": "2b8ad9cf4c7669078f5cbbf62faacc057cff68e7", "Url": "https://api.github.com/repos/rasenir/charsoo", "Date": "2015-07-12T09:18:15Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getRequestURI()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (requestURI.endsWith(\"_logs\")) { java.io.BufferedReader in = new java.io.BufferedReader(new java.io.FileReader(\"logs.txt\")); java.lang.String line; while ((line = in.readLine()) != null) { response.getWriter().println(line); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6754/buggy-version/src.main.java.rncontroller.RNController.java", "BodyUseAPI": [], "Fixed commit": "4020798c9d6823b2420ce8d33837fddc795b5dfb", "Url": "https://api.github.com/repos/salesoptimizer/release-notes", "Date": "2015-09-29T10:49:45Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLastLocation) != null) { outState.putParcelable(\"lastLoc\", mLastLocation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1966/buggy-version/app.src.main.java.com.tuts.vijay.qikpic.activity.FeedActivity.java", "BodyUseAPI": [], "Fixed commit": "931f71e36bbf618f6dd452a94e55d1f7381d749b", "Url": "https://api.github.com/repos/vjscode/QikPic", "Date": "2015-11-23T02:37:45Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (savedInstanceState.containsKey(\"lastLoc\")) { mLastLocation = savedInstanceState.getParcelable(\"lastLoc\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1966/buggy-version/app.src.main.java.com.tuts.vijay.qikpic.activity.FeedActivity.java", "BodyUseAPI": ["android.os.Bundle.getParcelable(java.lang.String)"], "Fixed commit": "931f71e36bbf618f6dd452a94e55d1f7381d749b", "Url": "https://api.github.com/repos/vjscode/QikPic", "Date": "2015-11-23T02:37:45Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((lat != null) && (lng != null)) { po.put(\"lat\", lat); po.put(\"lng\", lng); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1966/buggy-version/app.src.main.java.com.tuts.vijay.qikpic.async.UploadTask.java", "BodyUseAPI": ["com.parse.ParseObject.put(java.lang.String,java.lang.String)", "com.parse.ParseObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "931f71e36bbf618f6dd452a94e55d1f7381d749b", "Url": "https://api.github.com/repos/vjscode/QikPic", "Date": "2015-11-23T02:37:45Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (message.startsWith(\"/channelLeave\")) { return message.replace(\"/channelLeave\", (userName + \" has left the channel\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7747/buggy-version/android-app.src.main.java.com.afzaln.mi_chat.utils.BbToHtml.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "e0b8e3d7a70d0e7e5ca74f0e36734ef524c3e863", "Url": "https://api.github.com/repos/AfzalivE/MI-Chat", "Date": "2013-07-31T09:00:56Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sigmah.shared.dto.element.BudgetRatioElementDTO.getSpentBudget()", "org.sigmah.shared.dto.element.BudgetRatioElementDTO.getPlannedBudget()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((plannedBudgetElement == null) || (spentBudgetElement == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4475/buggy-version/src.main.java.org.sigmah.shared.dto.element.BudgetRatioElementDTO.java", "BodyUseAPI": [], "Fixed commit": "668959ef96a2cca79d53e86d10a56a0099c1f6a3", "Url": "https://api.github.com/repos/Raphcal/sigmah", "Date": "2016-09-01T10:17:55Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getBlockState(net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((hellfirepvp.astralsorcery.common.util.IGrowable) (at.getBlock())).canGrow(world, pos, at, false)) { if (!(((hellfirepvp.astralsorcery.common.util.IGrowable) (at.getBlock())).canUseBonemeal(world, rand, pos, at))) { if ((world.rand.nextInt(40)) != 0) return true; } ((hellfirepvp.astralsorcery.common.util.IGrowable) (at.getBlock())).grow(world, rand, pos, at); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2600/buggy-version/src.main.java.hellfirepvp.astralsorcery.common.util.CropHelper.java", "BodyUseAPI": ["net.minecraft.block.state.IBlockState.getBlock()", "((hellfirepvp.astralsorcery.common.util.IGrowable) (at.getBlock())).grow(net.minecraft.world.World,java.util.Random,net.minecraft.util.math.BlockPos,net.minecraft.block.state.IBlockState)", "world.rand.nextInt(int)", "net.minecraft.block.state.IBlockState.getBlock()", "((hellfirepvp.astralsorcery.common.util.IGrowable) (at.getBlock())).canUseBonemeal(net.minecraft.world.World,java.util.Random,net.minecraft.util.math.BlockPos,net.minecraft.block.state.IBlockState)"], "Fixed commit": "c97792edf857a8ba3eeded580029fb4dc9d21faa", "Url": "https://api.github.com/repos/HellFirePvP/AstralSorcery", "Date": "2017-06-21T10:57:46Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((visibleElement.getComponentType()) != null) { visibleClass.decrementCount(visibleElement.getComponentType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/710/buggy-version/KrokiMockupTool.src.kroki.app.command.RemoveCommand.java", "BodyUseAPI": ["kroki.profil.panel.VisibleClass.decrementCount(visibleElement.getComponentType())", "kroki.profil.VisibleElement.getComponentType()"], "Fixed commit": "1e8b0952ba4b8b5c997da816eff525e3959b516d", "Url": "https://api.github.com/repos/KROKIteam/KROKI-mockup-tool", "Date": "2014-11-01T22:35:42Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((element.getComponentType()) != null) { visibleClass.incrementCount(element.getComponentType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/710/buggy-version/KrokiMockupTool.src.kroki.app.command.PasteCommand.java", "BodyUseAPI": ["kroki.profil.VisibleElement.getComponentType()", "kroki.profil.panel.VisibleClass.incrementCount(element.getComponentType())"], "Fixed commit": "1e8b0952ba4b8b5c997da816eff525e3959b516d", "Url": "https://api.github.com/repos/KROKIteam/KROKI-mockup-tool", "Date": "2014-11-01T22:35:42Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (password.contains(\" \")) { messages.add(\"Password should not contain empty spaces.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5765/buggy-version/src.controller.AccessController.java", "BodyUseAPI": [], "Fixed commit": "59ca4a6844ef25ee0bd5caa9eb37615ade6b8a2f", "Url": "https://api.github.com/repos/tweetweetarnold/eureka_webservice", "Date": "2016-01-12T09:55:50Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j == 13) { stones = stones - 13; j = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6195/buggy-version/src.main.java.com.wirecard.scd.kalaha.domain.Board.java", "BodyUseAPI": [], "Fixed commit": "09d546d50d46009fbb1c2cd1b5b06516a638798e", "Url": "https://api.github.com/repos/dancmorais/csdwirecard", "Date": "2017-05-18T14:23:18Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.json.JSONObject.getLong(java.lang.String)", "com.liferay.portal.kernel.json.JSONObject.getLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.liferay.portal.kernel.util.Validator.isNull(groupId)) && (com.liferay.portal.kernel.util.Validator.isNull(layoutId))) { return com.liferay.portal.kernel.util.StringPool.BLANK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3754/buggy-version/dynamic-data-mapping-service.src.main.java.com.liferay.dynamic.data.mapping.internal.render.impl.LinkToPageDDMFormFieldValueRenderer.java", "BodyUseAPI": [], "Fixed commit": "097bb1d94ec7f14cb550ae853682d16712d887a2", "Url": "https://api.github.com/repos/liferay/com-liferay-dynamic-data-mapping", "Date": "2016-06-20T18:13:47Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.json.JSONObject.getString(java.lang.String)", "com.liferay.portal.kernel.json.JSONObject.getLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.liferay.portal.kernel.util.Validator.isNull(uuid)) && (com.liferay.portal.kernel.util.Validator.isNull(groupId))) { return com.liferay.portal.kernel.util.StringPool.BLANK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3754/buggy-version/dynamic-data-mapping-service.src.main.java.com.liferay.dynamic.data.mapping.internal.render.impl.DocumentLibraryDDMFormFieldValueRenderer.java", "BodyUseAPI": [], "Fixed commit": "097bb1d94ec7f14cb550ae853682d16712d887a2", "Url": "https://api.github.com/repos/liferay/com-liferay-dynamic-data-mapping", "Date": "2016-06-20T18:13:47Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.json.JSONObject.getLong(java.lang.String)", "com.liferay.portal.kernel.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.liferay.portal.kernel.util.Validator.isNull(className)) && (com.liferay.portal.kernel.util.Validator.isNull(classPK))) { return com.liferay.portal.kernel.util.StringPool.BLANK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3754/buggy-version/dynamic-data-mapping-service.src.main.java.com.liferay.dynamic.data.mapping.internal.render.impl.JournalArticleDDMFormFieldValueRenderer.java", "BodyUseAPI": [], "Fixed commit": "097bb1d94ec7f14cb550ae853682d16712d887a2", "Url": "https://api.github.com/repos/liferay/com-liferay-dynamic-data-mapping", "Date": "2016-06-20T18:13:47Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<K, java.lang.ref.SoftReference<ru.otus.l121.orm.cache.CacheElement<K, V>>>.get(K)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (softReference == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/680/buggy-version/L11.1.src.main.java.ru.otus.l121.orm.cache.CacheImpl.java", "BodyUseAPI": [], "Fixed commit": "9f611ccbf0149d5b4d7e0bc11ac899c467beb05c", "Url": "https://api.github.com/repos/fmaxx/otus-java-2017-06", "Date": "2017-09-10T10:20:41Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.jabref.BibtexEntry.getField(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (date == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8720/buggy-version/src.main.java.net.sf.jabref.BibtexEntry.java", "BodyUseAPI": [], "Fixed commit": "11d7054f6a21146685024039a74dde66533c6b16", "Url": "https://api.github.com/repos/JabRef/jabref", "Date": "2014-10-24T23:48:28Z"},
{"Line": "=>1075", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataCollector) != null) { dataCollector.stopCollectingData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/712/buggy-version/src.ca.cumulonimbus.pressurenetsdk.CbService.java", "BodyUseAPI": [], "Fixed commit": "a84119a2fbd1f7e75f011e8b63c367c6baf1e0c5", "Url": "https://api.github.com/repos/Cbsoftware/pressureNET-SDK", "Date": "2013-08-04T13:35:13Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filename != null) { timeSlider.setMinimum(0); timeSlider.setEnabled(false); return false; }else { java.lang.System.err.println(\"Warning(MainFrame): what?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2344/buggy-version/src.org.teachothers.fishwatchr.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "6bf649a38e5b1138d50daeba8cbb2dfddfc53490", "Url": "https://api.github.com/repos/himawari-san/FishWatchr", "Date": "2015-12-05T03:11:18Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (argu.isPrint()) { java.lang.System.out.println(n.f0.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2612/buggy-version/src.piglet.visitor.GenSpigletVisitor.java", "BodyUseAPI": [], "Fixed commit": "14bb459a98ba824df67c97411bef6ff4c3ea4e66", "Url": "https://api.github.com/repos/mytbk/compiler", "Date": "2014-11-02T17:55:29Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((score.compareTo(java.math.BigDecimal.ZERO)) <= 0) { throw new java.lang.IllegalArgumentException(\"The argument deductScore less than zero\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1233/buggy-version/src.main.java.com.ruyicai.scorecenter.dao.TuserinfoScoreDao.java", "BodyUseAPI": [], "Fixed commit": "477a0ef51c6099647e3fb5acc2b2cad347c26864", "Url": "https://api.github.com/repos/momoplan/scorecenter", "Date": "2014-07-21T02:46:20Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.network.as.AutoScaleStatsCollector.getCounterNameByCondition(pcMap.getConditionId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(countersAdded.contains(counterName))) { counterNames += (counterName + \",\") + (pcMap.getConditionId()); countersAdded.add(counterName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4822/buggy-version/server.src.com.cloud.network.as.AutoScaleStatsCollector.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "5f7b68d3826ac2fedb7d0fb7d1038e2a60345572", "Url": "https://api.github.com/repos/globocom/cloudstack", "Date": "2015-03-11T16:01:59Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(counterNames.equals(\"\"))) { result.add(new com.cloud.utils.Pair(counterNames, duration)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4822/buggy-version/server.src.com.cloud.network.as.AutoScaleStatsCollector.java", "BodyUseAPI": ["java.util.List<com.cloud.utils.Pair<java.lang.String, java.lang.Integer>>.add(com.cloud.utils.Pair)"], "Fixed commit": "5f7b68d3826ac2fedb7d0fb7d1038e2a60345572", "Url": "https://api.github.com/repos/globocom/cloudstack", "Date": "2015-03-11T16:01:59Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Collection<org.eweb4j.spiderman.xml.Impl>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (_impls != null) _impls.addAll(impls); else this.impls.put(point, impls);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/9134/buggy-version/src.main.java.org.eweb4j.spiderman.plugin.PluginManager.java", "BodyUseAPI": ["java.util.Collection<org.eweb4j.spiderman.xml.Impl>.addAll(java.util.List<org.eweb4j.spiderman.xml.Impl>)"], "Fixed commit": "26c10e5de2ea0738cc93869a1af7eb6c2ca8d2f8", "Url": "https://api.github.com/repos/laiweiwei/spiderman", "Date": "2013-01-25T07:26:54Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.nearit.ui_bindings.utils.PreRequirementsUtil.isAirplaneModeOn(this))) { openLocationSettings(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/531/buggy-version/nearit-ui.src.main.java.com.nearit.ui_bindings.permissions.NearItPermissionsActivity.java", "BodyUseAPI": [], "Fixed commit": "002dc41256c070064ca569ea4818ff35f0e5be5e", "Url": "https://api.github.com/repos/nearit/Android-UI-Bindings", "Date": "2017-12-04T17:09:20Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (admobilize.matrix.gt.matrix.MicArray.DEBUG) android.util.Log.d(admobilize.matrix.gt.matrix.MicArray.TAG, (((\"[MIC] mic: \" + mic) + \" size :\") + (current_mic.size())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5738/buggy-version/app.src.main.java.admobilize.matrix.gt.matrix.MicArray.java", "BodyUseAPI": [], "Fixed commit": "87813b272e8090ac4ed405e304c1502dd84f4efe", "Url": "https://api.github.com/repos/matrix-io/matrix-creator-android-things", "Date": "2017-09-08T00:11:19Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((soundPlayer) != null) { soundPlayer.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5658/buggy-version/app.src.main.java.com.webteq.guesstheinstruments.activities.InstrumentsActivity.java", "BodyUseAPI": [], "Fixed commit": "4feeb9161c3e64211b3e823716978e773759ddc0", "Url": "https://api.github.com/repos/sherwin14/GuessTheInstruments", "Date": "2017-01-19T07:57:15Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (key.equals(bg.nijel.xswiftkey.XSwiftkeyActivity.MY_THEMES_LIST)) { if (bg.nijel.xswiftkey.XSwiftkeyActivity.prefs.getString(bg.nijel.xswiftkey.XSwiftkeyActivity.MY_THEMES_LIST, \"Not set\").contains(\"themelist.json\")) { getPreferenceScreen().findPreference(bg.nijel.xswiftkey.XSwiftkeyActivity.OVERRIDE_SWIFTKEY_TITLE).setEnabled(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8517/buggy-version/app.src.main.java.bg.nijel.xswiftkey.XSwiftkeyActivity.java", "BodyUseAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)", "bg.nijel.xswiftkey.XSwiftkeyActivity.prefs.getString(bg.nijel.xswiftkey.XSwiftkeyActivity.MY_THEMES_LIST, \"Not set\").contains(java.lang.String)"], "Fixed commit": "82d8d18e9548847db34ed4eb29ccb9e9e8621ba5", "Url": "https://api.github.com/repos/nijel8/XSwiftkey", "Date": "2016-02-28T10:46:46Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (parsed == null) { throw new java.lang.RuntimeException(\"Cannot parse date\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2156/buggy-version/src.main.java.de.taimos.maven_redmine_plugin.model.DateDeserializer.java", "BodyUseAPI": [], "Fixed commit": "d7675a2d6a299ca9335221a5015adb51154c7e61", "Url": "https://api.github.com/repos/taimos/redmine-maven-plugin", "Date": "2012-11-26T15:28:48Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((socket) != null) socket.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1054/buggy-version/src.education.stemi.hexapod.PacketSender.java", "BodyUseAPI": [], "Fixed commit": "8d94dbcb157ed22fe5703ae1d6842a0e645ab42e", "Url": "https://api.github.com/repos/stemi-education/hexapod-java", "Date": "2016-04-25T22:45:08Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((quoteNum % 2) == 1) { return \"SSS\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5301/buggy-version/src.miniDB.main.java", "BodyUseAPI": [], "Fixed commit": "eef284eff238c559cb5434588a93a93f9f12d017", "Url": "https://api.github.com/repos/a4027971/miniDB", "Date": "2016-03-13T08:52:15Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (val == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5773/buggy-version/src.main.java.org.sql2o.converters.EnumConverter.java", "BodyUseAPI": [], "Fixed commit": "4a6b775d2b0f408f4bc1a6df6a3e21b81080b6ea", "Url": "https://api.github.com/repos/aaberg/sql2o", "Date": "2013-01-24T11:35:52Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (leaving) running = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2065/buggy-version/src.com.buchbuchteam.buchbuch.model.entities.BuchBuch.java", "BodyUseAPI": [], "Fixed commit": "1dab2710af1d8673ff314031d44466c7230327c6", "Url": "https://api.github.com/repos/Warrows/GGJ2014-BuchBuchTeam", "Date": "2014-01-25T17:04:33Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (column.isRequired()) { builder.append(\" NOT NULL\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4645/buggy-version/src.main.java.pro.batalin.ddl4j.platforms.oracle.converters.table.SQLColumnConverter.java", "BodyUseAPI": [], "Fixed commit": "d1d0ea6fb318598b9338a00a553560b80030e23c", "Url": "https://api.github.com/repos/kir55rus/ddl4j", "Date": "2017-06-05T11:08:25Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (schema != null) { table.setSchema(schema); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4645/buggy-version/src.main.java.pro.batalin.ddl4j.platforms.oracle.OraclePlatform.java", "BodyUseAPI": ["pro.batalin.ddl4j.platforms.oracle.Table.setSchema(pro.batalin.ddl4j.platforms.oracle.Schema)"], "Fixed commit": "d1d0ea6fb318598b9338a00a553560b80030e23c", "Url": "https://api.github.com/repos/kir55rus/ddl4j", "Date": "2017-06-05T11:08:25Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.ownerName.equals(player.getName())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3532/buggy-version/src.me.ryanhamshire.GriefPrevention.Claim.java", "BodyUseAPI": [], "Fixed commit": "f8cbd938c7a491eeb95725dc138c644956179b86", "Url": "https://api.github.com/repos/StarTux/GriefPrevention", "Date": "2012-06-15T14:58:17Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!unpublished) { host = _context.namingService().reverseLookup(dest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1912/buggy-version/apps.routerconsole.java.src.net.i2p.router.web.NetDbRenderer.java", "BodyUseAPI": [], "Fixed commit": "c91f942194ed2365afef5b415ac3e7c323294ade", "Url": "https://api.github.com/repos/i2p/i2p.i2p", "Date": "2017-06-04T01:01:09Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (host != null) { buf.append(\" colspan=\\\"2\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1912/buggy-version/apps.routerconsole.java.src.net.i2p.router.web.NetDbRenderer.java", "BodyUseAPI": [], "Fixed commit": "c91f942194ed2365afef5b415ac3e7c323294ade", "Url": "https://api.github.com/repos/i2p/i2p.i2p", "Date": "2017-06-04T01:01:09Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((android.support.v4.content.ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) || ((android.support.v4.content.ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) || ((android.support.v4.content.ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { requestPermissions(new java.lang.String[]{ Manifest.permission.WRITE_EXTERNAL_STORAGE, Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION }, 1000); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5754/buggy-version/app.src.main.java.com.qc.speedmeter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cefb94aa007e6446efe8a8c5c9ed5fc080220e82", "Url": "https://api.github.com/repos/Monaz/speed", "Date": "2017-12-08T03:51:34Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["refCandidate.getText().replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (operator.equals(\"=&\")) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1586/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.StaticLocalVariablesUsageInspector.java", "BodyUseAPI": [], "Fixed commit": "a9bd297f7450e1961b7deb5b2c0625a141b8f974", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2016-12-22T18:10:17Z"},
{"Line": "=>1889", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Cuboids2.treeHandler.getCuboidByName(java.lang.String,player.getWorld().getType().name())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cubeNode == null) { player.sendMessage(((Colors.Rose) + (Cuboids2.msg.messages.get(\"noCuboidFoundOnCommand\")))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8461/buggy-version/src.CuboidProtectionInterface.java", "BodyUseAPI": [], "Fixed commit": "3dbd4821e05bfe30ebb92e4956d99bc29825a539", "Url": "https://api.github.com/repos/damagefilter/Cuboids2", "Date": "2012-03-19T10:31:41Z"},
{"Line": "=>1914", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Cuboids2.treeHandler.getCuboidByName(java.lang.String,player.getWorld().getType().name())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cubeNode == null) { player.sendMessage(((Colors.Rose) + (Cuboids2.msg.messages.get(\"noCuboidFoundOnCommand\")))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8461/buggy-version/src.CuboidProtectionInterface.java", "BodyUseAPI": [], "Fixed commit": "3dbd4821e05bfe30ebb92e4956d99bc29825a539", "Url": "https://api.github.com/repos/damagefilter/Cuboids2", "Date": "2012-03-19T10:31:41Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nikr.eve.jeveasset.io.shared.AttributeGetters.getInt(org.w3c.dom.Element,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (group2 <= 0) { group2 = 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1086/buggy-version/src.main.java.net.nikr.eve.jeveasset.io.local.SettingsReader.java", "BodyUseAPI": [], "Fixed commit": "4f046dba3f0c24a90f228d3db8728f179a080b55", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2015-10-18T11:16:52Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (bestMatch != null) { processor = processorsByMediaType.get(bestMatch); }else if ((!shouldForce) && (!(requestedMediaRanges.isEmpty()))) { throw new com.strategicgains.restexpress.exception.NotAcceptableException((\"Supported Media Types: \" + (com.strategicgains.restexpress.util.StringUtils.join(\", \", supportedMediaRanges)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4211/buggy-version/core.src.java.com.strategicgains.restexpress.serialization.AbstractSerializationProvider.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.strategicgains.restexpress.response.ResponseProcessor>.get(java.lang.String)"], "Fixed commit": "b4c47898c3e65035deec07eb2879f9e8f0a9ea77", "Url": "https://api.github.com/repos/RestExpress/RestExpress", "Date": "2013-07-23T00:03:29Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.isi.bmkeg.lapdf.model.spatial.SpatialEntity.getContainer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (b instanceof edu.isi.bmkeg.lapdf.model.PageBlock) { pgB = ((edu.isi.bmkeg.lapdf.model.PageBlock) (b)); pageNumber = pgB.getPageNumber(); }else { edu.isi.bmkeg.lapdf.model.ChunkBlock cb = ((edu.isi.bmkeg.lapdf.model.ChunkBlock) (b)); pgB = cb.getPage(); pageNumber = pgB.getPageNumber(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3601/buggy-version/src.main.java.edu.isi.bmkeg.lapdf.model.ordering.SpatialOrdering.java", "BodyUseAPI": [], "Fixed commit": "5ca997dbd3c70506eb853bb3afa25c92667a773a", "Url": "https://api.github.com/repos/BMKEG/lapdftext", "Date": "2013-11-22T03:04:25Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getPlayer()) instanceof com.comphenix.net.sf.cglib.proxy.Factory) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6497/buggy-version/HolographicDisplays.Plugin.com.gmail.filoghost.holographicdisplays.bridge.protocollib.current.ProtocolLibHookImpl.java", "BodyUseAPI": [], "Fixed commit": "98e5827a8a0e33940454a7e6e1014a3d1c2baea4", "Url": "https://api.github.com/repos/Leymooo/HolographicDisplays", "Date": "2017-08-02T12:29:52Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stopSeconds.containsKey(route.stops.get(0).tag)) && (stopSeconds.containsKey(route.stops.get((index - 1)).tag))) { if (((stopSeconds.get(route.stops.get(0).tag)) > secondsUntilArrival) && ((stopSeconds.get(route.stops.get((index - 1)).tag)) > secondsUntilArrival)) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5480/buggy-version/app.src.main.java.edu.mit.scripts.lahuang4.mitshuttles.ShuttleSchedule.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(route.stops.get((index - 1)).tag)", "java.util.Map<java.lang.String, java.lang.Integer>.get(route.stops.get(0).tag)", "route.stops.get(int)", "route.stops.get(int)"], "Fixed commit": "992912c048c4e6e7cc64a6c9df2b67422bca602b", "Url": "https://api.github.com/repos/lahuang4/mitshuttles", "Date": "2016-02-05T08:38:45Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stopSeconds.containsKey(route.stops.get((index - 1)).tag)) && (stopSeconds.containsKey(route.stops.get((index + 1)).tag))) { if (((stopSeconds.get(route.stops.get((index - 1)).tag)) > secondsUntilArrival) && ((stopSeconds.get(route.stops.get((index + 1)).tag)) > secondsUntilArrival)) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5480/buggy-version/app.src.main.java.edu.mit.scripts.lahuang4.mitshuttles.ShuttleSchedule.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(route.stops.get((index + 1)).tag)", "route.stops.get(int)", "route.stops.get(int)", "java.util.Map<java.lang.String, java.lang.Integer>.get(route.stops.get((index - 1)).tag)"], "Fixed commit": "992912c048c4e6e7cc64a6c9df2b67422bca602b", "Url": "https://api.github.com/repos/lahuang4/mitshuttles", "Date": "2016-02-05T08:38:45Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.android.chatapp1.MainActivity.1.findViewById(R.id.input)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((input.getText().toString().trim().length()) > 0) { com.google.firebase.database.FirebaseDatabase.getInstance().getReference().push().setValue(new com.example.android.chatapp1.com.example.android.chatapp1.model.ChatMessageModel(input.getText().toString(), com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getDisplayName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8961/buggy-version/app.src.main.java.com.example.android.chatapp1.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "com.google.firebase.database.FirebaseDatabase.getInstance().getReference().push().setValue(com.example.android.chatapp1.com.example.android.chatapp1.model.ChatMessageModel)", "input.getText().toString()"], "Fixed commit": "29f0e19cba701c35ce0699371595fda0f51bfc5a", "Url": "https://api.github.com/repos/bibekthapa/ChatAppwithFirebase", "Date": "2016-12-20T17:36:01Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mImageView) != null) { mImageView.setImageDrawable(null); mImageView = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6357/buggy-version/app.src.main.java.com.quran.labs.androidquran.ui.fragment.QuranPageFragment.java", "BodyUseAPI": [], "Fixed commit": "1f27fe12d68605876376161197782e14f41823b1", "Url": "https://api.github.com/repos/ahmedre/quran_android", "Date": "2013-05-07T06:16:58Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLeftImageView) != null) { mLeftImageView.setImageDrawable(null); mLeftImageView = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6357/buggy-version/app.src.main.java.com.quran.labs.androidquran.ui.fragment.TabletFragment.java", "BodyUseAPI": [], "Fixed commit": "1f27fe12d68605876376161197782e14f41823b1", "Url": "https://api.github.com/repos/ahmedre/quran_android", "Date": "2013-05-07T06:16:58Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRightImageView) != null) { mRightImageView.setImageDrawable(null); mRightImageView = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6357/buggy-version/app.src.main.java.com.quran.labs.androidquran.ui.fragment.TabletFragment.java", "BodyUseAPI": [], "Fixed commit": "1f27fe12d68605876376161197782e14f41823b1", "Url": "https://api.github.com/repos/ahmedre/quran_android", "Date": "2013-05-07T06:16:58Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentCycle.isDiskv2basedImpl()) { addImports(\"#jgDiskv2ImplPackage#.#baseClassName#\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5639/buggy-version/src.de.uni_koblenz.jgralab.codegenerator.ViewGraphCodeGenerator.java", "BodyUseAPI": [], "Fixed commit": "cf912d3142c7644548325f1637be661cf681a9a9", "Url": "https://api.github.com/repos/jgralab/jgralab-dhht", "Date": "2012-06-06T11:51:51Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (Window.Navigator.getUserAgent().toLowerCase().contains(\"chrome\")) { unseenActivityCount.addStyleName(StaticResourceBundle.INSTANCE.coreCss().unseenLabelChrome()); }else { unseenActivityCount.addStyleName(StaticResourceBundle.INSTANCE.coreCss().unseenLabel()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5582/buggy-version/web.src.main.java.org.eurekastreams.web.client.ui.common.stream.UnseenActivityNotificationPanel.java", "BodyUseAPI": [], "Fixed commit": "aac8484b3e5d425f90a68199327d7ce4e4c054bf", "Url": "https://api.github.com/repos/lmco/eurekastreams", "Date": "2012-11-15T19:39:03Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((r != null) && ((r.getLeft()) <= (this.range.getLeft()))) && ((r.getRight()) >= (this.range.getRight()))) { java.lang.System.out.println(((((((((value + \";\") + (r.getLeft())) + \";\") + (r.getRight())) + \";\") + (r.getPayload().toString())) + \";\") + payload)); }else { java.lang.System.out.println(((value + \";;;;\") + payload)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2150/buggy-version/defcode_recognizer.src.main.java.defcode_recognizer.FindTask.java", "BodyUseAPI": ["defcode_recognizer.Range.getRight()", "r.getPayload().toString()", "defcode_recognizer.Range.getPayload()", "defcode_recognizer.Range.getLeft()", "java.io.PrintStream.println(((((((((value + \";\") + (r.getLeft())) + \";\") + (r.getRight())) + \";\") + (r.getPayload().toString())) + \";\") + payload))"], "Fixed commit": "8529a3f620319bd4eb1ceaf7264f0e6726d9c744", "Url": "https://api.github.com/repos/wizardjedi/smpp-test-tools", "Date": "2013-11-25T19:14:39Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((players.get(playerID)) == (Player.CPU_MAP_PLAYER)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2027/buggy-version/src.tora.train.risk.ArenaController.java", "BodyUseAPI": [], "Fixed commit": "90ef89391a5492a60fde503d2c6306b8a16c44e1", "Url": "https://api.github.com/repos/Dacus/Risk", "Date": "2015-07-13T11:48:51Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (slot == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2078/buggy-version/src.main.java.moze_intel.projecte.gameObjs.tiles.CondenserTile.java", "BodyUseAPI": [], "Fixed commit": "c99e15b1006d206f2ec5bcd2312da4aa179ef7d7", "Url": "https://api.github.com/repos/Ninja-Forks/ProjectE", "Date": "2014-12-29T17:50:12Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (slot == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2078/buggy-version/src.main.java.moze_intel.projecte.gameObjs.tiles.CondenserTile.java", "BodyUseAPI": [], "Fixed commit": "c99e15b1006d206f2ec5bcd2312da4aa179ef7d7", "Url": "https://api.github.com/repos/Ninja-Forks/ProjectE", "Date": "2014-12-29T17:50:12Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.musesproject.server.eventprocessor.correlator.global.Rt2aeGlobal.policyCompliance(eu.musesproject.server.risktrust.AccessRequest,eu.musesproject.server.eventprocessor.correlator.model.owl.ConnectivityEvent,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (policyCompliance.getResult().equals(PolicyCompliance.MAYBE)) { decision = eu.musesproject.server.risktrust.Decision.MAYBE_ACCESS_WITH_RISKTREATMENTS; }else if (policyCompliance.getResult().equals(PolicyCompliance.DENY)) { decision = eu.musesproject.server.risktrust.Decision.STRONG_DENY_ACCESS; }else if (policyCompliance.getResult().equals(PolicyCompliance.ALLOW)) { decision = eu.musesproject.server.risktrust.Decision.GRANTED_ACCESS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7066/buggy-version/src.main.java.eu.musesproject.server.eventprocessor.correlator.global.Rt2aeGlobal.java", "BodyUseAPI": ["policyCompliance.getResult().equals(PolicyCompliance.ALLOW)", "eu.musesproject.server.risktrust.PolicyCompliance.getResult()", "eu.musesproject.server.risktrust.PolicyCompliance.getResult()", "policyCompliance.getResult().equals(PolicyCompliance.DENY)"], "Fixed commit": "803b51ca64978b4edfb1856efe4063153ac9774f", "Url": "https://api.github.com/repos/MusesProject/MusesServer", "Date": "2014-09-16T16:24:10Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((peerReview.getSubjectExternalIdentifier()) != null) { org.orcid.core.manager.validator.ExternalIDValidator.getInstance().validateWorkOrPeerReview(peerReview.getSubjectExternalIdentifier()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6483/buggy-version/orcid-core.src.main.java.org.orcid.core.manager.validator.ActivityValidator.java", "BodyUseAPI": ["org.orcid.core.manager.validator.ExternalIDValidator.getInstance().validateWorkOrPeerReview(peerReview.getSubjectExternalIdentifier())", "org.orcid.jaxb.model.record_rc2.PeerReview.getSubjectExternalIdentifier()"], "Fixed commit": "6968120e251d98ae80e0eb3515400ee9ac0cfe93", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2016-03-01T16:35:16Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6483/buggy-version/orcid-core.src.main.java.org.orcid.core.manager.validator.ExternalIDValidator.java", "BodyUseAPI": [], "Fixed commit": "6968120e251d98ae80e0eb3515400ee9ac0cfe93", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2016-03-01T16:35:16Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serverSocket) == null) return listenPort;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6702/buggy-version/QuizRouletteServer-build.QuizRouletteServer-code.src.main.java.ch.heigvd.res.labs.roulette.net.server.RouletteServer.java", "BodyUseAPI": [], "Fixed commit": "28b9623ecd492d05baf67f4b2a2273e451ad9034", "Url": "https://api.github.com/repos/annieSandra/Teaching-HEIGVD-RES-2017-Labo-02", "Date": "2017-04-03T17:42:33Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mFirstTrun) { mFirstTrun = false; java.io.File bakFile = new java.io.File(((mPath) + \".bak\")); if (bakFile.isFile()) { bakFile.delete(); } file.renameTo(bakFile); }else { file.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2312/buggy-version/app.src.main.java.net.xndroid.utils.LogUtils.java", "BodyUseAPI": [], "Fixed commit": "ce784a516dd740dc6db81c66b63891bec4152ff1", "Url": "https://api.github.com/repos/XndroidDev/Xndroid", "Date": "2017-12-12T17:07:56Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attach) { ghostTime = ghost.getMillisTime(); }else { ghostTime = java.lang.Math.round(((ghost.getMillisTime()) * scale)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/88/buggy-version/src.piano.engine.ExamParserListener.java", "BodyUseAPI": [], "Fixed commit": "486839f05a769b0220f4c33ddc586aedd7476f45", "Url": "https://api.github.com/repos/emtwo/piano", "Date": "2013-03-11T02:53:38Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((file.toString().startsWith(\"\\\\\")) || (file.toString().startsWith(\"/\"))) { destFile = nodeTypePath.resolve(file.toString().substring(1)); }else { destFile = nodeTypePath.resolve(file.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/971/buggy-version/src.main.java.alien4cloud.paas.cloudify2.generator.RecipeGeneratorArtifactCopier.java", "BodyUseAPI": ["java.nio.file.Path.resolve(java.lang.String)", "java.nio.file.Path.toString()", "java.nio.file.Path.resolve(java.lang.String)", "java.lang.String.substring(int)", "java.nio.file.Path.toString()"], "Fixed commit": "44c5d9d75364fea514bbe7daa7dda415c3ee0009", "Url": "https://api.github.com/repos/igorng/alien4cloud-cloudify2-provider", "Date": "2015-01-14T13:55:11Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.contacts.contains(contact))) { this.contacts.add(contact); EventBus.INSTANCE.publish(new edu.chl.mailbowser.event.Event(edu.chl.mailbowser.event.EventType.CONTACT_ADDED, contact)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2193/buggy-version/MailBowser.src.main.java.edu.chl.mailbowser.contact.ContactBook.java", "BodyUseAPI": ["EventBus.INSTANCE.publish(edu.chl.mailbowser.event.Event)", "java.util.TreeSet<edu.chl.mailbowser.contact.IContact>.add(edu.chl.mailbowser.contact.IContact)"], "Fixed commit": "4b52794b36f9b51289737d83749e1765a592fcfc", "Url": "https://api.github.com/repos/Oscmage/MailBowser", "Date": "2015-05-30T14:14:25Z"},
{"Line": "=>4001", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lb.isArg) lb.idx -= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7081/buggy-version/src.jvm.clojure.lang.Compiler.java", "BodyUseAPI": [], "Fixed commit": "eb4e2ce6550f56ea92757d7531ad9588535bd171", "Url": "https://api.github.com/repos/MichaelBlume/clojure", "Date": "2015-09-18T15:40:01Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.isSame(0)) && (rhs.isSame(0))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2897/buggy-version/BigInteger.java", "BodyUseAPI": [], "Fixed commit": "7e3414b84163ed23da6040513783939628c07daa", "Url": "https://api.github.com/repos/lightb0x/dataStructureHW1", "Date": "2016-03-26T06:28:08Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.bigIntegerImplement[((this.bigIntegerImplementLength) - 1)]) == 0) && (rhs == 0)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2897/buggy-version/BigInteger.java", "BodyUseAPI": [], "Fixed commit": "7e3414b84163ed23da6040513783939628c07daa", "Url": "https://api.github.com/repos/lightb0x/dataStructureHW1", "Date": "2016-03-26T06:28:08Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t instanceof java.util.concurrent.TimeoutException) throw ((java.util.concurrent.TimeoutException) (t));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8802/buggy-version/src.main.java.net.jodah.lyra.internal.ConnectionHandler.java", "BodyUseAPI": [], "Fixed commit": "21da725fbe531151a40e4bb6daf8669f2a199c74", "Url": "https://api.github.com/repos/jhalterman/lyra", "Date": "2015-05-13T23:14:13Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputline.equals(\"EXIT_TOKEN\")) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8445/buggy-version/de.unidue.ltl.gapfill.src.main.java.de.unidue.ltl.gapfill.util.BaselineSubstituteBuilder.java", "BodyUseAPI": [], "Fixed commit": "0227faae26556a9e8424873f9af40e3ccdd3dfce", "Url": "https://api.github.com/repos/zesch/gap-fill-bundles", "Date": "2017-06-26T13:40:31Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((project.getStatus()) != null) { for (org.exoplatform.task.domain.Status st : project.getStatus()) { if (st.getName().equalsIgnoreCase(name)) { org.exoplatform.task.service.impl.StatusServiceImpl.LOG.warn(\"Status {} has already exists\", name); return st; } } }else { project.setStatus(new java.util.HashSet<org.exoplatform.task.domain.Status>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3327/buggy-version/services.src.main.java.org.exoplatform.task.service.impl.StatusServiceImpl.java", "BodyUseAPI": ["org.exoplatform.task.domain.Project.setStatus(java.util.HashSet<org.exoplatform.task.domain.Status>)", "org.exoplatform.task.domain.Project.getStatus()"], "Fixed commit": "99d44dc3e39160a6685267514adeaad62840b55d", "Url": "https://api.github.com/repos/exo-addons/task", "Date": "2015-06-19T09:25:42Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((storageManager.getEntry(scan.currentToken.tokenStr)) != null) error(\"ERROR: '%s' IS ALREADY DEFINED\", scan.currentToken.tokenStr);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3431/buggy-version/src.havabol.Parser.java", "BodyUseAPI": ["havabol.Parser.error(java.lang.String,scan.currentToken.tokenStr)"], "Fixed commit": "27bd60b7cdcf9f6f0eccbbf02a67b0ff8f5e239a", "Url": "https://api.github.com/repos/pabloevd950/havaBol", "Date": "2017-04-28T02:26:08Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(activity.getString(R.string.putString_defaultDictionary),<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (defaultDictionaryString != null) { if (cz.metaverse.android.bilingualreader.helper.Dictionary.respondsPackageToIntent(activity, defaultDictionaryString)) { cz.metaverse.android.bilingualreader.helper.Dictionary.defaultDictionary = new cz.metaverse.android.bilingualreader.helper.Dictionary(defaultDictionaryString); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7055/buggy-version/bilingual-reader.src.cz.metaverse.android.bilingualreader.helper.Dictionary.java", "BodyUseAPI": ["cz.metaverse.android.bilingualreader.helper.Dictionary.respondsPackageToIntent(cz.metaverse.android.bilingualreader.ReaderActivity,java.lang.String)"], "Fixed commit": "ecd1d75487d310781444dd52a7a9d2438ac570d8", "Url": "https://api.github.com/repos/tomparys/bilingual-reader", "Date": "2015-05-04T14:03:39Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n < 10) { sb.append(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7240/buggy-version/KUtils.src.com.mao.kutils.ByteUtils.java", "BodyUseAPI": [], "Fixed commit": "126e1906190f440cef719c8d4355279d6f8ca15f", "Url": "https://api.github.com/repos/dolpphins/KUtils", "Date": "2016-02-03T14:22:14Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((duration.getComment()) != null) { create.setComment(duration.getComment().getComment()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/30/buggy-version/agile-apps.agile-app-issues.src.main.java.org.headsupdev.agile.app.issues.EditProgressIssue.java", "BodyUseAPI": ["duration.getComment().getComment()", "org.headsupdev.agile.storage.resource.DurationWorked.getComment()", "org.headsupdev.agile.app.issues.EditProgressIssue.setComment(duration.getComment().getComment())"], "Fixed commit": "2347de76830dbd4be0cc2da59e5b585baea99f5b", "Url": "https://api.github.com/repos/headsupdev/agile", "Date": "2014-08-07T16:43:19Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((username == null) || (userid == null)) return \"login\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7313/buggy-version/src.main.java.com.grandcircus.planit.HomeController.java", "BodyUseAPI": [], "Fixed commit": "2288cdbfe43c68cf71c23a3931b56f182480708e", "Url": "https://api.github.com/repos/dkvanhooser/TripPlanner", "Date": "2016-09-29T05:00:38Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getLongExtra(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (groupId == (-1)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/168/buggy-version/app.src.main.java.share.fair.fairshare.ActionsActivity.java", "BodyUseAPI": [], "Fixed commit": "adddebb3de10427d36f04babf7eb60fcea78f4d4", "Url": "https://api.github.com/repos/Niryo/FairShare", "Date": "2015-10-20T20:33:35Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.equals(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (forum) sentences = parser.getForumContent(doc); else if (news) sentences = parser.getNewsContent(doc); else sentences = parser.getWebContent(doc);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5156/buggy-version/src.main.java.edu.knowitall.tac2013.preprocess.tac.KbpCorpusParser.java", "BodyUseAPI": [], "Fixed commit": "10bfa75753dac602f960be5845761e740bbd0bce", "Url": "https://api.github.com/repos/knowitall/tac2013", "Date": "2013-06-15T00:22:31Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (main.Bomberman.singlePlayer) exit(\"You died\"); else exit(\"Tie\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5032/buggy-version/src.main.Bomberman.java", "BodyUseAPI": [], "Fixed commit": "7b8025389ecc84089edda03a1a89c31b2f3eb6ac", "Url": "https://api.github.com/repos/propra12-orga/gruppe40", "Date": "2012-06-15T07:30:33Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(main.Bomberman.singlePlayer)) exit(((alive.getFirst().getName()) + \" won the game\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5032/buggy-version/src.main.Bomberman.java", "BodyUseAPI": [], "Fixed commit": "7b8025389ecc84089edda03a1a89c31b2f3eb6ac", "Url": "https://api.github.com/repos/propra12-orga/gruppe40", "Date": "2012-06-15T07:30:33Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (main.Bomberman.singlePlayer) { map.Field field = data.map.getField(data.players.get(0).getX(), data.players.get(0).getY()); if (field instanceof map.Exit) { exit(\"You won!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5032/buggy-version/src.main.Bomberman.java", "BodyUseAPI": [], "Fixed commit": "7b8025389ecc84089edda03a1a89c31b2f3eb6ac", "Url": "https://api.github.com/repos/propra12-orga/gruppe40", "Date": "2012-06-15T07:30:33Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { fab.setImageTintList(android.support.v4.content.ContextCompat.getColorStateList(getContext(), R.color.accent)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/9217/buggy-version/app.src.main.java.com.jonerysantos.carros.fragments.CarroFragment.java", "BodyUseAPI": [], "Fixed commit": "af84b6d83e80f15fa562a03987e2df7b0c5fe5f2", "Url": "https://api.github.com/repos/joneryf/Carros", "Date": "2016-10-25T21:18:48Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { fab.setImageTintList(android.support.v4.content.ContextCompat.getColorStateList(getContext(), R.color.accent)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/9217/buggy-version/app.src.main.java.com.jonerysantos.carros.fragments.CarroFragment.java", "BodyUseAPI": [], "Fixed commit": "af84b6d83e80f15fa562a03987e2df7b0c5fe5f2", "Url": "https://api.github.com/repos/joneryf/Carros", "Date": "2016-10-25T21:18:48Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) out.add(tempNode);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2055/buggy-version/src.core.Algorithms.AStar.AStar.java", "BodyUseAPI": [], "Fixed commit": "cb8b723b7f9647092a4548f566e9a589d2664b21", "Url": "https://api.github.com/repos/probject22/SneakyThief4", "Date": "2015-06-10T09:23:42Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((p.y) < (l.a.y)) || ((p.y) < (l2.a.y))) || ((p.y) > (l.b.y))) || ((p.x) > (l2.b.y))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6029/buggy-version/src.Board.java", "BodyUseAPI": [], "Fixed commit": "4eae9a0ec4756ffac826674df20aca73a6d0ad1b", "Url": "https://api.github.com/repos/coen22/Project-2", "Date": "2015-03-14T17:47:27Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Collection<java.lang.String>.toArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((matches.length) > 0) scriptDebug(2, ((\"Matched text \\\"\" + (matches[0])) + \"\\\"\")); else scriptWarning(\"Match with no text?\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6979/buggy-version/core.cc.warlock.core.script.src.main.cc.warlock.core.script.wsl.WSLScriptContext.java", "BodyUseAPI": ["cc.warlock.core.script.wsl.WSLScriptContext.scriptDebug(int,java.lang.String)"], "Fixed commit": "ea0c172f8561b1c92cf8b423a9424d7ec5e36f43", "Url": "https://api.github.com/repos/sproctor/warlock2", "Date": "2013-03-06T17:01:44Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileTypes) != null) setProperty(de.mpg.imeji.presentation.beans.ConfigurationBean.CONFIGURATION.FILE_TYPES.name(), fileTypes.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7071/buggy-version/src.main.java.de.mpg.imeji.presentation.beans.ConfigurationBean.java", "BodyUseAPI": [], "Fixed commit": "5b02b30910a2a72721e23eb4779d2b39fb63f1dd", "Url": "https://api.github.com/repos/imeji-community/imeji", "Date": "2014-12-05T13:17:10Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataViewerUrl) != null) setProperty(de.mpg.imeji.presentation.beans.ConfigurationBean.CONFIGURATION.DATA_VIEWER_URL.name(), dataViewerUrl);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7071/buggy-version/src.main.java.de.mpg.imeji.presentation.beans.ConfigurationBean.java", "BodyUseAPI": [], "Fixed commit": "5b02b30910a2a72721e23eb4779d2b39fb63f1dd", "Url": "https://api.github.com/repos/imeji-community/imeji", "Date": "2014-12-05T13:17:10Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.where.length()) > 70) { u.assets.small.draw(pic, p.where.substring(70, p.where.length()), ((bounds.x) + (0.055F * (bounds.width))), ((bounds.y) + (0.2F * (bounds.height)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8166/buggy-version/core.src.com.GGI.uParty.Objects.PartyModule.java", "BodyUseAPI": ["p.where.length()", "u.assets.small.draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,p.where.substring(70, p.where.length()),((bounds.x) + (0.055F * (bounds.width))),((bounds.y) + (0.2F * (bounds.height))))", "p.where.substring(int,p.where.length())"], "Fixed commit": "36b72e9621a020d86115f6b528ec556ae002ae4c", "Url": "https://api.github.com/repos/GoodGameIndustries/uParty-App", "Date": "2016-02-15T05:29:55Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (block == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1715/buggy-version/Casino.src.BlockListener.java", "BodyUseAPI": [], "Fixed commit": "c78004dc5285c2a3a85021330424cd540341514d", "Url": "https://api.github.com/repos/JorganPubshire/Casino", "Date": "2011-07-07T16:47:40Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) != 1) { player.sendMessage(\"Please use that command properly. (/bet <amount>)\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1715/buggy-version/Casino.src.Main.java", "BodyUseAPI": [], "Fixed commit": "c78004dc5285c2a3a85021330424cd540341514d", "Url": "https://api.github.com/repos/JorganPubshire/Casino", "Date": "2011-07-07T16:47:40Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entrance) == (-1)) return entrance;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/977/buggy-version/src.com.shatteredpixel.shatteredpixeldungeon.levels.HallsBossLevel.java", "BodyUseAPI": [], "Fixed commit": "52e1566e2a9413b9fca6f1e3d6fc47faa7371bf8", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2015-09-10T08:13:44Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((i.getBlock()) == (net.minecraft.init.Blocks.REDSTONE_ORE)) || ((i.getBlock()) == (net.minecraft.init.Blocks.LIT_REDSTONE_ORE))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/9127/buggy-version/src.main.java.com.tacosupremes.withsprinkles.common.lib.LibMisc.java", "BodyUseAPI": [], "Fixed commit": "1634966193d1bbc5b9fff0dae00973d49a51d07d", "Url": "https://api.github.com/repos/TacoSupremes/WithSprinkles", "Date": "2017-07-14T03:32:34Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(units.equals(\"\"))) { callBack.unitsInput(units, scode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5373/buggy-version/app.src.main.java.com.neerajms99b.neeraj.mymutualfunds.ui.UnitsInputDialogFragment.java", "BodyUseAPI": ["com.neerajms99b.neeraj.mymutualfunds.ui.FundsListFragment.unitsInput(java.lang.String,java.lang.String)"], "Fixed commit": "9b12c3798e361eecc5cd840208ca3df8dbabbdb6", "Url": "https://api.github.com/repos/neerajms/mymutualfunds", "Date": "2016-10-20T17:37:43Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curGoal) != null) areas.addAll(curGoal.getTextAreas());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3879/buggy-version/src.coq.ProofError.java", "BodyUseAPI": [], "Fixed commit": "aec190b8278570d2264e61b66f3f5e8954d3da96", "Url": "https://api.github.com/repos/aa755/nbcoq", "Date": "2015-05-14T23:52:24Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(amIRule)) { amIRule = true; setVisible(true); repaint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2386/buggy-version/src.vbtetris.VBTetrisPauseScreen.java", "BodyUseAPI": [], "Fixed commit": "e51b769147d07f0c04c977b86cc31f82d4ecf14e", "Url": "https://api.github.com/repos/robblamb/VBTetris", "Date": "2013-11-26T17:44:40Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((imageView.getImage()) != null) { imageView.setFitWidth(((imageView.getImage().getWidth()) * ((double) (newValue)))); imageView.setFitHeight(((imageView.getImage().getHeight()) * ((double) (newValue)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/29/buggy-version/imageviewer.src.com.capgemini.imageviewer.view.ImageViewerController.java", "BodyUseAPI": ["javafx.scene.image.ImageView.setFitHeight(((imageView.getImage().getHeight()) * ((double) (newValue))))", "imageView.getImage().getHeight()", "javafx.scene.image.ImageView.getImage()", "imageView.getImage().getWidth()", "javafx.scene.image.ImageView.setFitWidth(((imageView.getImage().getWidth()) * ((double) (newValue))))", "javafx.scene.image.ImageView.getImage()"], "Fixed commit": "670c831f2dbb68fb8765e40a46014b778d9d5811", "Url": "https://api.github.com/repos/idyczko/StarterKit_JavaFX", "Date": "2015-08-31T13:22:00Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.Activity.findViewById(R.id.questionListView)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (qList != null) { qList.invalidate(); qList.setAdapter(new com.ualberta.team17.view.ListFragment.QuestionListAdapter(this.getActivity(), R.id.questionListView, mIR.getCurrentResults())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2979/buggy-version/moqa.src.com.ualberta.team17.view.ListFragment.java", "BodyUseAPI": ["android.widget.ListView.setAdapter(com.ualberta.team17.view.ListFragment.QuestionListAdapter)", "android.widget.ListView.invalidate()"], "Fixed commit": "9d6c0cb91dc4056392a937f212ca6da0161cdd8d", "Url": "https://api.github.com/repos/coreyjamison/Team17Project", "Date": "2014-11-19T23:41:22Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((colNum < 0) || (colNum >= (header_keys.length))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/621/buggy-version/tables_app.src.main.java.org.opendatakit.tables.views.SpreadsheetUserTable.java", "BodyUseAPI": [], "Fixed commit": "f9cbb77439345c6da958af157b1ade685e3efdf4", "Url": "https://api.github.com/repos/opendatakit/tables", "Date": "2017-06-20T17:45:33Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ThreadLocal<java.util.List<com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder.Entry>>.get()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (entries != null) { for (com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder.Entry entry : entries) { final boolean afterStart = ((entry.getFirstLine()) < line) || (((entry.getFirstLine()) == line) && ((entry.getFirstColumn()) <= column)); final boolean beforeEnd = ((entry.getLastLine()) > line) || (((entry.getLastLine()) == line) && ((entry.getLastColumn()) >= column)); final boolean nameMatches = entry.getCheckName().equals(checkAlias); if ((afterStart && beforeEnd) && nameMatches) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/9151/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder.java", "BodyUseAPI": [], "Fixed commit": "511ef22583a100c3ac9fbc15f538363c78b09b90", "Url": "https://api.github.com/repos/MEZk/checkstyle", "Date": "2015-08-30T22:37:15Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.glydar.mitm.GlydarMitm.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((mitm.getVanillaServer()) != null) { mitm.getVanillaServer().start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/283/buggy-version/glydar-mitm.src.main.java.org.glydar.mitm.GlydarMitmMain.java", "BodyUseAPI": ["org.glydar.mitm.GlydarMitm.getVanillaServer()", "mitm.getVanillaServer().start()"], "Fixed commit": "5612fe6f44f67dcab954a23a821110c214bb0260", "Url": "https://api.github.com/repos/aumgn/Glydar.next", "Date": "2013-10-06T12:51:48Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j1 < 0) { java.lang.System.out.println(\"Game over\"); java.lang.System.exit(0); }else { Tetris.Board.boardPos[i1][j1] = Tetris.Board.POS_FILLED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5035/buggy-version/src.Tetris.Board.java", "BodyUseAPI": [], "Fixed commit": "52ebf74bb4c35c010b8c2a7af3c98164dba5fe31", "Url": "https://api.github.com/repos/pugovka/Tetris", "Date": "2016-02-04T13:21:29Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (host) other.damage(amnt);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6173/buggy-version/src.com.gzsr.objects.weapons.LaserNode.java", "BodyUseAPI": [], "Fixed commit": "442fb54468e669521c5baf522b2c98adc45a9105", "Url": "https://api.github.com/repos/packetpirate/Generic-Zombie-Shooter-Redux", "Date": "2017-11-07T17:35:37Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filterString == null) || (filterString.equals(\"\"))) { filterString = (\"(objectClass=\" + className) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4301/buggy-version/modules.core.registry-api.src.com.liferay.registry.BasicRegistryImpl.java", "BodyUseAPI": [], "Fixed commit": "ad4010d5da95e5c19a7dbaae1cda0c0c0b7da7fb", "Url": "https://api.github.com/repos/kiyoshilee/liferay-portal", "Date": "2015-05-05T17:32:34Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.registry.BasicRegistryImpl.getServices(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (services == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4301/buggy-version/modules.core.registry-api.src.com.liferay.registry.BasicRegistryImpl.java", "BodyUseAPI": [], "Fixed commit": "ad4010d5da95e5c19a7dbaae1cda0c0c0b7da7fb", "Url": "https://api.github.com/repos/kiyoshilee/liferay-portal", "Date": "2015-05-05T17:32:34Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(storageAccountType)) { storageAccountType = SkuName.STANDARD_LRS.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4726/buggy-version/src.main.java.com.microsoft.azure.vmagent.AzureVMAgentTemplate.java", "BodyUseAPI": [], "Fixed commit": "9f2e70041166fa1251f12e46b7e2e660ee1a71a8", "Url": "https://api.github.com/repos/zackliu/azure-vm-agents-plugin", "Date": "2017-06-08T06:18:46Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFilms) != null) { mFilms.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1920/buggy-version/app.src.main.java.com.mysticwater.myfilms.SearchResultsActivity.java", "BodyUseAPI": [], "Fixed commit": "368c289ff52c075f073f8ba02bb94966038c1ea0", "Url": "https://api.github.com/repos/MysticWater/my-films", "Date": "2016-11-05T16:33:16Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.neuland.jade4j.lexer.Lexer.indexOfDelimiters(char,char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index == 0) { throw new de.neuland.jade4j.exceptions.JadeLexerException(\"invalid attribute definition; missing )\", filename, getLineno(), templateLoader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2096/buggy-version/src.main.java.de.neuland.jade4j.lexer.Lexer.java", "BodyUseAPI": [], "Fixed commit": "a13e0854f0592c6e58e816dd1b32a20f031c0837", "Url": "https://api.github.com/repos/neuland/jade4j", "Date": "2013-08-21T19:14:08Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.text.JTextComponent.viewToModel(java.awt.Point)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (modelIdx >= 0) textComponent.setCaretPosition(modelIdx);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1746/buggy-version/freeplane.src.org.freeplane.features.text.mindmapmode.EditNodeBase.java", "BodyUseAPI": ["javax.swing.text.JTextComponent.setCaretPosition(int)"], "Fixed commit": "800aa94d3443b53e08addec9d22cd6f034159869", "Url": "https://api.github.com/repos/freeplane/freeplane", "Date": "2013-10-28T18:39:26Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Node.getTextContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"virtual:/virtual\".equals(relativeLocation)) { folder.createLink(java.net.URI.create(relativeLocation), IResource.ALLOW_MISSING_LOCAL, null); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1749/buggy-version/org.eclipse.titan.designer.src.org.eclipse.titan.designer.wizards.projectFormat.TpdImporter.java", "BodyUseAPI": ["org.eclipse.core.resources.IFolder.createLink(java.net.URI,IResource.ALLOW_MISSING_LOCAL,<nulltype>)", "java.net.URI.create(java.lang.String)"], "Fixed commit": "44522c081cc337f8819031b22792824f45737cbb", "Url": "https://api.github.com/repos/eclipse/titan.EclipsePlug-ins", "Date": "2016-12-15T10:27:03Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(request.getCancel())) { if (((request.getOffset()) < 0) || ((request.getLength()) <= 0)) { return java.lang.String.format(\"Invalid read bounds in read request %s.\", request.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1294/buggy-version/core.server.src.main.java.alluxio.worker.netty.DataServerReadHandler.java", "BodyUseAPI": ["Protocol.ReadRequest.getLength()", "Protocol.ReadRequest.toString()", "Protocol.ReadRequest.getOffset()", "java.lang.String.format(java.lang.String,request.toString())"], "Fixed commit": "12d56c54fae52289f292a38a1abf219c13a36302", "Url": "https://api.github.com/repos/peisun1115/alluxio", "Date": "2017-01-07T02:33:23Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mInstrument.questions().size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((mInstrument.questions().indexOf(mQuestion)) + 1) == questionsInInstrument) { mNextButton.setText(R.string.finish_button); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6371/buggy-version/src.org.adaptlab.chpir.android.survey.SurveyFragment.java", "BodyUseAPI": [], "Fixed commit": "82025f4ff32474fee12638101814caa5da24bb24", "Url": "https://api.github.com/repos/mnipper/AndroidSurvey", "Date": "2013-12-04T21:51:29Z"},
{"Line": "=>721", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.flink.streaming.runtime.tasks.StreamTask.LOG.isDebugEnabled()) { org.apache.flink.streaming.runtime.tasks.StreamTask.LOG.debug((\"{} - finished synchronous part of checkpoint {}.\" + \"Alignment duration: {} ms, snapshot duration {} ms\"), getName(), checkpointId, (alignmentDurationNanos / 1000000), syncDurationMillis); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1026/buggy-version/flink-streaming-java.src.main.java.org.apache.flink.streaming.runtime.tasks.StreamTask.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.String,long,long,long)"], "Fixed commit": "1de6bd8bdd1a7ff7b7170d0b85d58364f778385d", "Url": "https://api.github.com/repos/StephanEwen/incubator-flink", "Date": "2016-09-29T19:12:38Z"},
{"Line": "=>1015", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pHelp == null) throw new at.jku.ssw.cmm.interpreter.exceptions.RunTimeException(\"There is no informations about the array size available\", p, at.jku.ssw.cmm.interpreter.Interpreter.currentLine);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5121/buggy-version/src.at.jku.ssw.cmm.interpreter.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "0faeed865ccec4b32bc907427c5835c8e8393909", "Url": "https://api.github.com/repos/fabian1995/CMM", "Date": "2015-01-26T12:59:31Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dbHelper.selectGameTemplate(lessonID).equals(\"madlib_game\")) { java.util.ArrayList<java.util.ArrayList<java.lang.String>> texts = new java.util.ArrayList<java.util.ArrayList<java.lang.String>>(); madlibGameView = new com.gedappgui.gedappgui.MadlibGameView(this, conceptID, lessonID, nextActivity, width, height); android.widget.ScrollView scroll = new android.widget.ScrollView(this); madlibGameView.setFocusableInTouchMode(true); scroll.addView(madlibGameView); getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN); setContentView(scroll); }else if (dbHelper.selectGameTemplate(lessonID).equals(\"picture_game\")) { java.lang.String pass_string = dbHelper.selectPicGameInput(lessonID); pictureGameView = new com.gedappgui.gedappgui.PictureGameView(this, conceptID, lessonID, nextActivity, pass_string); setContentView(pictureGameView); }else if (dbHelper.selectGameTemplate(lessonID).equals(\"order_game\")) { java.util.ArrayList<java.util.ArrayList<java.lang.String>> gameQuestions = new java.util.ArrayList<java.util.ArrayList<java.lang.String>>(); java.util.ArrayList<java.lang.String> texts = new java.util.ArrayList<java.lang.String>(); texts.add(\"Least\"); texts.add(\"Greatest\"); texts.add(\"5\"); texts.add(\"10\"); texts.add(\"3\"); texts.add(\"1\"); texts.add(\"7\"); java.util.ArrayList<java.lang.String> answers = new java.util.ArrayList<java.lang.String>(); answers.add(\"1\"); answers.add(\"3\"); answers.add(\"5\"); answers.add(\"7\"); answers.add(\"10\"); gameQuestions.add(texts); gameQuestions.add(answers); texts = new java.util.ArrayList<java.lang.String>(); texts.add(\"Greatest\"); texts.add(\"Least\"); texts.add(\"3\"); texts.add(\"4\"); texts.add(\"1\"); answers = new java.util.ArrayList<java.lang.String>(); answers.add(\"4\"); answers.add(\"3\"); answers.add(\"1\"); gameQuestions.add(texts); gameQuestions.add(answers); orderingGameView = new com.gedappgui.gedappgui.OrderingGameView(this, gameQuestions, conceptID, lessonID, nextActivity, width, height); setContentView(orderingGameView); }else { java.util.ArrayList<java.util.ArrayList<java.lang.String>> gameQuestions = new java.util.ArrayList<java.util.ArrayList<java.lang.String>>(); java.util.ArrayList<java.lang.String> texts = new java.util.ArrayList<java.lang.String>(); texts.add(\"1\"); texts.add(\"2\"); texts.add(\"3\"); texts.add(\"4\"); texts.add(\"5\"); texts.add(\"7\"); java.util.ArrayList<java.lang.String> answers = new java.util.ArrayList<java.lang.String>(); java.lang.String question = \"4 * (x-1) = 24\"; answers.add(question); answers.add(\"7\"); gameQuestions.add(texts); gameQuestions.add(answers); texts = new java.util.ArrayList<java.lang.String>(); texts.add(\"11\"); texts.add(\"7\"); texts.add(\"8\"); texts.add(\"9\"); texts.add(\"10\"); texts.add(\"5\"); answers = new java.util.ArrayList<java.lang.String>(); question = \"1 + 7x = 36\"; answers.add(question); answers.add(\"5\"); gameQuestions.add(texts); gameQuestions.add(answers); bucketGameView = new com.gedappgui.gedappgui.BucketGameView(this, width, height, gameQuestions, conceptID, lessonID, nextActivity); setContentView(bucketGameView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/500/buggy-version/GEDAppGUI.app.src.main.java.com.gedappgui.gedappgui.Game.java", "BodyUseAPI": ["dbHelper.selectGameTemplate(lessonID).equals(java.lang.String)", "com.gedappgui.gedappgui.DatabaseHelper.selectGameTemplate(int)", "dbHelper.selectGameTemplate(lessonID).equals(java.lang.String)", "com.gedappgui.gedappgui.DatabaseHelper.selectPicGameInput(int)", "com.gedappgui.gedappgui.DatabaseHelper.selectGameTemplate(int)"], "Fixed commit": "0f6feb111c8b20ce5be1a94918eb85a4af4d8d1a", "Url": "https://api.github.com/repos/MyannaHarris/GEDMobileApp", "Date": "2017-02-27T08:03:46Z"},
{"Line": "=>1726", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wahtod.wififixer.WFConnection.getNetworkByNID(android.content.Context,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (network != null) { network.priority = 2; org.wahtod.wififixer.WFConnection.getWifiManager(context).updateNetwork(network); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/9031/buggy-version/wififixer.src.org.wahtod.wififixer.WFConnection.java", "BodyUseAPI": [], "Fixed commit": "1ba9962f31850e00fe479ac3d20f85e6e59a1e4a", "Url": "https://api.github.com/repos/Zanshinmu/Wifi-Fixer", "Date": "2012-08-16T14:56:42Z"},
{"Line": "=>953", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isEmpty(classifyCdName)) { return jp.co.misumi.batch.FVQ_ItemProcessor.BLANK; }else if ((classifyCdName.length()) >= 32) { return classifyCdName.substring(0, 32); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5023/buggy-version/src.main.java.jp.co.misumi.batch.FVQ_ItemProcessor.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "fdc327d456424e3149ba498fd06da78feaa6d495", "Url": "https://api.github.com/repos/DUKYASHUO/Spring-batch-demo", "Date": "2017-03-16T04:52:22Z"},
{"Line": "=>945", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isEmpty(classifyCdName)) { return jp.co.misumi.batch.FVQ_ItemProcessor.BLANK; }else if ((classifyCdName.length()) >= 32) { return classifyCdName.substring(0, 32); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5023/buggy-version/src.main.java.jp.co.misumi.batch.FVQ_ItemProcessor.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "fdc327d456424e3149ba498fd06da78feaa6d495", "Url": "https://api.github.com/repos/DUKYASHUO/Spring-batch-demo", "Date": "2017-03-16T04:52:22Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updateAllowed) { config.setValue(value); session.update(config); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/9160/buggy-version/yamj3-core.src.main.java.org.yamj.core.database.dao.ConfigDao.java", "BodyUseAPI": [], "Fixed commit": "74558c5731f86d4f86fa736cf3af45c9485c1117", "Url": "https://api.github.com/repos/YAMJ/yamj-v3", "Date": "2014-09-22T07:34:17Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getInnerGeometry()) == null) return result;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8368/buggy-version/msi.gama.core.src.msi.gama.metamodel.shape.GamaShape.java", "BodyUseAPI": [], "Fixed commit": "fc94bc797aa13ce84d3e1c9d44f6e2fd7aa03da9", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2015-06-25T16:44:27Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((geoms.length) == 1) { shape = new msi.gama.util.path.GamaShape(geoms[0]); }else { final msi.gama.util.path.Geometry geom = GeometryUtils.FACTORY.createGeometryCollection(geoms); shape = new msi.gama.util.path.GamaShape(geom.union()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8368/buggy-version/msi.gama.core.src.msi.gama.util.path.GamaSpatialPath.java", "BodyUseAPI": ["GeometryUtils.FACTORY.createGeometryCollection(msi.gama.util.path.Geometry[])"], "Fixed commit": "fc94bc797aa13ce84d3e1c9d44f6e2fd7aa03da9", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2015-06-25T16:44:27Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sonaive.v2ex.ui.widgets.FlexibleRecyclerView.getLayoutManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (layoutManager instanceof android.support.v7.widget.LinearLayoutManager) { int index = ((android.support.v7.widget.LinearLayoutManager) (layoutManager)).findFirstCompletelyVisibleItemPosition(); LOGD(com.sonaive.v2ex.ui.FeedsFragment.TAG, (\"LinearLayoutManager, first complete visible item position is: \" + index)); if (index == (-1)) { mRecyclerView.smoothScrollBy(0, (-clearance)); } }else if (layoutManager instanceof android.support.v7.widget.StaggeredGridLayoutManager) { int[] firstCompletelyVisibleItemPositions = ((android.support.v7.widget.StaggeredGridLayoutManager) (layoutManager)).findFirstCompletelyVisibleItemPositions(null); LOGD(com.sonaive.v2ex.ui.FeedsFragment.TAG, (\"StaggeredGridLayoutManager, first complete visible item position is: \" + (firstCompletelyVisibleItemPositions[0]))); if ((firstCompletelyVisibleItemPositions[0]) == (-1)) { mRecyclerView.smoothScrollBy(0, (-clearance)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/481/buggy-version/v2ex.src.main.java.com.sonaive.v2ex.ui.FeedsFragment.java", "BodyUseAPI": [], "Fixed commit": "bbbfcd526852759db0226e6483ba14c97874bc2d", "Url": "https://api.github.com/repos/taoliuh/v2ex", "Date": "2014-12-23T03:21:52Z"},
{"Line": "=>1268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tile.allowCollisions) != (NONE)) results = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5988/buggy-version/flixel-core.src.org.flixel.FlxTilemap.java", "BodyUseAPI": [], "Fixed commit": "49ebf0f6cb5f108d4e79ce89e65a0243012378fc", "Url": "https://api.github.com/repos/flixel-gdx/flixel-gdx", "Date": "2014-03-26T12:08:24Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.getStatus()) == 400) { org.json.JSONObject responseJSON = new org.json.JSONObject(response.getResponseText()); if (com.ibm.bluemix.appid.android.internal.tokenmanager.TokenManager.INVALID_GRANT.equals(responseJSON.getString(com.ibm.bluemix.appid.android.internal.tokenmanager.TokenManager.ERROR_CODE))) { errorDescription = responseJSON.getString(com.ibm.bluemix.appid.android.internal.tokenmanager.TokenManager.ERROR_DESCRIPTION); listener.onAuthorizationFailure(new com.ibm.bluemix.appid.android.api.AuthorizationException((\"Failed to retrieve tokens: \" + errorDescription))); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8704/buggy-version/lib.src.main.java.com.ibm.bluemix.appid.android.internal.tokenmanager.TokenManager.java", "BodyUseAPI": ["com.ibm.mobilefirstplatform.clientsdk.android.core.api.Response.getResponseText()"], "Fixed commit": "2408e6fe4979d5dbc25c1e8091481bb6954a71fe", "Url": "https://api.github.com/repos/ibm-cloud-security/appid-clientsdk-android", "Date": "2017-06-05T12:48:25Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player[playerIndex].getY()", "player[playerIndex].getX()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((gameBoard.getTile(bombX, bombY)) instanceof se.chalmers.group11.core.EmptyTile) { gameBoard.setToTile(bombX, bombY, se.chalmers.group11.core.TileFactory.getBombTile()); EventBus.INSTANCE.publish(new se.chalmers.group11.eventbus.Event(se.chalmers.group11.eventbus.Event.Tag.PLACE_BOMB, sound)); player[playerIndex].decrementBombs(); bombCountdown(bombX, bombY, playerIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1708/buggy-version/src.se.chalmers.group11.core.Game.java", "BodyUseAPI": ["se.chalmers.group11.core.Game.bombCountdown(int,int,int)", "se.chalmers.group11.core.IBoard.setToTile(int,int,se.chalmers.group11.core.TileFactory.getBombTile())"], "Fixed commit": "74daff3ad470c0e59c393c6d0b6eccb344924557", "Url": "https://api.github.com/repos/epoxy/BombSquad", "Date": "2012-05-18T18:48:53Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((responder) != null) { responder.handleResponse(subscription); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4028/buggy-version/src.com.backendless.Messaging.java", "BodyUseAPI": [], "Fixed commit": "18dd42cda2fa95867653f147fe9051e2d4a42267", "Url": "https://api.github.com/repos/Backendless/Android-SDK", "Date": "2015-11-23T03:13:39Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (task.isFaulted()) { updateFileListView(mDispFileList); mFileExplorer = null; }else if ((task.isCompleted()) && (task.getResult())) { getAndDisplayFileList(\".\"); }else { updateFileListView(mDispFileList); mFileExplorer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8050/buggy-version/WebDAV.mobile.src.com.vae.wuyunxing.webdav.mobile.main.RemoteFileListFragment.java", "BodyUseAPI": ["bolts.Task<java.lang.Boolean>.isCompleted()", "bolts.Task<java.lang.Boolean>.getResult()"], "Fixed commit": "ef4f80fbe43bf23e35d340dc3f2deffb137dd1b4", "Url": "https://api.github.com/repos/tuacy/WebDav", "Date": "2015-07-10T02:41:21Z"},
{"Line": "=>1195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.IWorkbenchPart.getAdapter(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sys instanceof org.dawb.common.ui.plot.IPlottingSystem) && (tool instanceof org.dawb.common.ui.plot.EmptyTool)) { final java.util.Collection<org.dawb.common.ui.plot.trace.ITrace> images = ((org.dawb.common.ui.plot.IPlottingSystem) (sys)).getTraces(org.dawb.common.ui.plot.trace.IImageTrace.class); if ((images == null) || (images.isEmpty())) { if ((activeRec.tool.getToolPageRole()) == (org.dawb.common.ui.plot.tool.IToolPage.ToolPageRole.ROLE_2D)) return; }else { if ((activeRec.tool.getToolPageRole()) == (org.dawb.common.ui.plot.tool.IToolPage.ToolPageRole.ROLE_1D)) return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/959/buggy-version/org.dawb.workbench.plotting.src.org.dawb.workbench.plotting.views.ToolPageView.java", "BodyUseAPI": [], "Fixed commit": "383310693d35cc88b6e2801c95a2df67cae838cf", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2012-07-10T14:37:06Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((query.getText().length()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8276/buggy-version/src.de.onyxbits.raccoon.SearchView.java", "BodyUseAPI": [], "Fixed commit": "e91c546baa6a417098380745c7e306db0014340a", "Url": "https://api.github.com/repos/onyxbits/Raccoon", "Date": "2014-06-04T23:13:50Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (file != null) { return file.length; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2010/buggy-version/app.src.main.java.com.skdevsolutions.documents.ImageAdapter.java", "BodyUseAPI": [], "Fixed commit": "733dd7fa55e08396496c1e8baa1fb33ae4a64173", "Url": "https://api.github.com/repos/seankovacs/Documents", "Date": "2014-08-27T22:13:01Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (metaApiClient != null) { metaApiClient.open(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3824/buggy-version/jawampa-core.src.main.java.ws.wamp.jawampa.WampRouter.java", "BodyUseAPI": [], "Fixed commit": "58d3210662469dce7edfceff68c8267abc2487f1", "Url": "https://api.github.com/repos/alex-vas/jawampa", "Date": "2017-07-21T00:00:17Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fullUrl == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2243/buggy-version/sdk.src.com.scoreflex.ScoreflexView.java", "BodyUseAPI": [], "Fixed commit": "59f0686b6ec3e556f3c18e7e78e50a88cfae46d2", "Url": "https://api.github.com/repos/scoreflex/scoreflex-android-sdk", "Date": "2013-10-11T12:58:17Z"},
{"Line": "=>947", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getLastKnownLocation(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (myLocation != null) { com.google.android.gms.maps.model.LatLng ll = new com.google.android.gms.maps.model.LatLng(myLocation.getLatitude(), myLocation.getLongitude()); mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(ll, 14.0F)); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/235/buggy-version/src.com.yoneko.areyouthereyet.update.MapActivity.java", "BodyUseAPI": ["android.location.Location.getLatitude()", "android.location.Location.getLongitude()"], "Fixed commit": "7ffb6310673a7edd598c04b20d80405f20b99f2e", "Url": "https://api.github.com/repos/reidisaki/dumpy", "Date": "2014-09-11T04:56:20Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cmd.argsLength()) > 0) { com.google.common.base.Optional<in.twizmwaz.cardinal.module.modules.team.TeamModule> team = in.twizmwaz.cardinal.util.Teams.getTeamByName(cmd.getString(0)); in.twizmwaz.cardinal.GameHandler.getGameHandler().getMatch().end(team.orNull()); }else { if (cmd.hasFlag('n')) { in.twizmwaz.cardinal.GameHandler.getGameHandler().getMatch().end(); }else { in.twizmwaz.cardinal.GameHandler.getGameHandler().getMatch().end(in.twizmwaz.cardinal.module.modules.timeLimit.TimeLimit.getMatchWinner()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4246/buggy-version/src.main.java.in.twizmwaz.cardinal.command.StartAndEndCommand.java", "BodyUseAPI": ["com.sk89q.minecraft.util.commands.CommandContext.hasFlag(char)", "in.twizmwaz.cardinal.util.Teams.getTeamByName(cmd.getString(0))", "com.sk89q.minecraft.util.commands.CommandContext.getString(int)"], "Fixed commit": "67f8beee8ee18590477651164398abf9e57cedad", "Url": "https://api.github.com/repos/twizmwazin/CardinalPGM", "Date": "2015-07-16T14:37:44Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cmd.hasFlag('n')) { in.twizmwaz.cardinal.GameHandler.getGameHandler().getMatch().end(); }else { in.twizmwaz.cardinal.GameHandler.getGameHandler().getMatch().end(in.twizmwaz.cardinal.module.modules.timeLimit.TimeLimit.getMatchWinner()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4246/buggy-version/src.main.java.in.twizmwaz.cardinal.command.CycleCommand.java", "BodyUseAPI": [], "Fixed commit": "67f8beee8ee18590477651164398abf9e57cedad", "Url": "https://api.github.com/repos/twizmwazin/CardinalPGM", "Date": "2015-07-16T14:37:44Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(bugfixed)) { edb.tip((\"You seem to use BeansWrapper in 2.3.0-compatible mode. If you think this error is unfounded, \" + \"enabling 2.3.21 fixes may helps. See version history for more.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2591/buggy-version/src.main.java.freemarker.ext.beans.OverloadedMethods.java", "BodyUseAPI": [], "Fixed commit": "7a1bad8662df835696931026067be7633b4ad7d6", "Url": "https://api.github.com/repos/freemarker/freemarker", "Date": "2014-05-11T14:12:16Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getApplicationContext()) == null) && (mMainThread.getApplication().getApplicationInfo().processName.equals(\"com.wimm.watchface\"))) { java.lang.String realPrefsPath = getPreferencesDir().getAbsolutePath().replace(getApplicationInfo().processName, \"com.wimm.watchface\"); java.io.File prefsDir = new java.io.File(realPrefsPath, getApplicationInfo().processName); return makeFilename(prefsDir, (name + \".xml\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2475/buggy-version/core.java.android.app.ContextImpl.java", "BodyUseAPI": [], "Fixed commit": "04dae5cfee941f07e5d828609a4734778d7c9e32", "Url": "https://api.github.com/repos/wimm/android_frameworks_base", "Date": "2012-07-19T00:23:00Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((webView) != null) && ((webView.getUrl()) != null)) { java.lang.String url = webView.getUrl().replace(\"?bookmark=1\", \"\"); ed.putString(bookURL, url); ed.apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/9142/buggy-version/app.src.main.java.org.cnx.android.activity.WebViewActivity.java", "BodyUseAPI": ["android.webkit.WebView.getUrl()", "webView.getUrl().replace(java.lang.String,java.lang.String)"], "Fixed commit": "45da113414059804011ebae7b6e2738d7782fcd9", "Url": "https://api.github.com/repos/Connexions/CNXAndroid", "Date": "2017-07-25T13:12:13Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["agersant.polaris.MediaPlayerService.isPlaying()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isPlaying) { startForeground(MEDIA_NOTIFICATION, notification); }else { stopForeground(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2296/buggy-version/app.src.main.java.agersant.polaris.MediaPlayerService.java", "BodyUseAPI": [], "Fixed commit": "f23610c48c0656e1504a6f89ad5466f402f84796", "Url": "https://api.github.com/repos/agersant/polaris-android", "Date": "2017-06-09T06:40:10Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.rwth.idsg.bikeman.ItemIdComparator<java.lang.String>.getForDelete()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(deleteList.isEmpty())) { em.createQuery(\"DELETE FROM StationSlot ss WHERE ss.manufacturerId IN :slotManufacturerIdList\").setParameter(\"slotManufacturerIdList\", deleteList).executeUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6539/buggy-version/src.main.java.de.rwth.idsg.bikeman.repository.StationRepositoryImpl.java", "BodyUseAPI": ["em.createQuery(\"DELETE FROM StationSlot ss WHERE ss.manufacturerId IN :slotManufacturerIdList\").setParameter(\"slotManufacturerIdList\", deleteList).executeUpdate()", "em.createQuery(\"DELETE FROM StationSlot ss WHERE ss.manufacturerId IN :slotManufacturerIdList\").setParameter(java.lang.String,java.util.List<java.lang.String>)"], "Fixed commit": "da1363559243abe2a2fd695867beda5072d2b42e", "Url": "https://api.github.com/repos/RWTH-i5-IDSG/BikeMan", "Date": "2015-03-04T14:01:12Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.pestakit.users.repositories.UserRepository.findByUsernameIgnoreCase(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (userEntity != null) { return org.springframework.http.ResponseEntity.ok(toUser(userEntity)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1114/buggy-version/service-users-server.src.main.java.io.pestakit.users.api.endpoints.UserApiController.java", "BodyUseAPI": ["org.springframework.http.ResponseEntity.ok(io.pestakit.users.api.model.User)", "io.pestakit.users.api.endpoints.UserApiController.toUser(io.pestakit.users.entities.UserEntity)"], "Fixed commit": "0b911e9d9eed0433986d9910af31c92391e3830b", "Url": "https://api.github.com/repos/PestaKit/microservice-users", "Date": "2017-11-23T13:26:37Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof jkind.lustre.NamedType) { return ((jkind.lustre.NamedType) (obj)).name.equals(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2441/buggy-version/jkind-common.src.jkind.lustre.InductType.java", "BodyUseAPI": [], "Fixed commit": "9207683aee1a2d2c817cccd9d1dfed4c0064f2ac", "Url": "https://api.github.com/repos/backesj/jkind", "Date": "2015-09-17T15:21:54Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>.get(tfi.getChiefComplaint())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tabFieldMap == null) { tabFieldMap = new java.util.HashMap<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8272/buggy-version/app.femr.ui.controllers.MedicalController.java", "BodyUseAPI": [], "Fixed commit": "138f5789ff87d2326d21c7777ab74a6916cee978", "Url": "https://api.github.com/repos/kevinzurek/femr", "Date": "2015-08-12T22:52:31Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unisannio.security.DoApp.parser.MessagesFilter.extractClass(m.getMessage())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (classname.equals(\"null\")) pof.setLineNumber((-1)); else pof.setLineNumber(it.unisannio.security.DoApp.parser.MessagesFilter.extractLineNumber(m.getMessage()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2975/buggy-version/app.src.main.java.it.unisannio.security.DoApp.parser.MessagesFilter.java", "BodyUseAPI": [], "Fixed commit": "b2d20623bc3131b832a0ced870ae4933dadbc340", "Url": "https://api.github.com/repos/lmartire/DoApp", "Date": "2017-01-27T17:40:39Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((tag.isReadonly()) || (tag.isDisabled()))) { write(\"<button class=\\\"btn btn-sm btn-default p-uploader-btn\\\">\"); write(html(getText(\"btn-select-file\", \"Browse...\"))); write(\"</button>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8724/buggy-version/panda-gear.src.main.java.panda.mvc.view.tag.ui.theme.simple.UploaderRenderer.java", "BodyUseAPI": [], "Fixed commit": "e717a708a5c0596ccdfb16ea0331a478afd681a1", "Url": "https://api.github.com/repos/pandafw/panda", "Date": "2017-05-15T08:40:15Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(cConf.get(Constants.CFG_LOCAL_DATA_DIR),cConf.get(Constants.AppFabric.TEMP_DIR))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(co.cask.cdap.common.utils.DirUtils.mkdirs(tempDir.toFile()))) { throw new java.io.IOException((\"Could not create temporary directory at: \" + tempDir)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2163/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.security.DefaultUGIProvider.java", "BodyUseAPI": [], "Fixed commit": "3f973bfbfaacccc43d45b0ebd0fe898778a25cb2", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2016-07-20T19:14:45Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((doge.watchdoge.gpsgetter.DummyGpsCoordinates.gpsAccuracy) == ((float) (0.0))) || ((doge.watchdoge.gpsgetter.DummyGpsCoordinates.gpsAccuracy) < ((float) (20.0)))) { return doge.watchdoge.gpsgetter.DummyGpsCoordinates.gpsCoords; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5831/buggy-version/app.src.main.java.doge.watchdoge.gpsgetter.DummyGpsCoordinates.java", "BodyUseAPI": [], "Fixed commit": "e996cb6667deb30d90ed8dce33c53a3e2e4906fa", "Url": "https://api.github.com/repos/WatchDoges/WatchDoge", "Date": "2016-10-18T20:08:54Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((quorumNames) != null) { conf.set(\"hbase.zookeeper.quorum\", quorumNames); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6033/buggy-version/src.jvm.com.twitter.maple.hbase.HBaseTap.java", "BodyUseAPI": [], "Fixed commit": "7dc9f2febac96c328cb59be988240fddcd5ef1c6", "Url": "https://api.github.com/repos/Cascading/maple", "Date": "2012-07-12T17:35:58Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((quorumNames) != null) { conf.set(\"hbase.zookeeper.quorum\", quorumNames); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6033/buggy-version/src.jvm.com.twitter.maple.hbase.HBaseTap.java", "BodyUseAPI": [], "Fixed commit": "7dc9f2febac96c328cb59be988240fddcd5ef1c6", "Url": "https://api.github.com/repos/Cascading/maple", "Date": "2012-07-12T17:35:58Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.sidzej.wc.utils.BlockUtils.getTree(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tree == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8891/buggy-version/src.main.java.eu.sidzej.wc.utils.BlockUtils.java", "BodyUseAPI": [], "Fixed commit": "ebdfcce60465872a3437c5666c386ad83dd3f7ec", "Url": "https://api.github.com/repos/SiDzej/WoodCurrency", "Date": "2014-05-31T18:19:26Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.sidzej.wc.utils.BlockUtils.getTree(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (t == null) return -1; else return t.get();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8891/buggy-version/src.main.java.eu.sidzej.wc.utils.BlockUtils.java", "BodyUseAPI": ["eu.sidzej.wc.utils.TreeSpecies.get()"], "Fixed commit": "ebdfcce60465872a3437c5666c386ad83dd3f7ec", "Url": "https://api.github.com/repos/SiDzej/WoodCurrency", "Date": "2014-05-31T18:19:26Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.sidzej.wc.utils.BlockUtils.getTree(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (t == null) return null; else return t.toItemStack();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8891/buggy-version/src.main.java.eu.sidzej.wc.utils.BlockUtils.java", "BodyUseAPI": ["eu.sidzej.wc.utils.TreeSpecies.toItemStack()"], "Fixed commit": "ebdfcce60465872a3437c5666c386ad83dd3f7ec", "Url": "https://api.github.com/repos/SiDzej/WoodCurrency", "Date": "2014-05-31T18:19:26Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.ebi.age.admin.client.log.ROJSLogNode.getSubnodes()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (snds == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/811/buggy-version/src.uk.ac.ebi.age.admin.client.log.ROJSLogNode.java", "BodyUseAPI": [], "Fixed commit": "9bf181fad940f7ffa467e921a3c44268a62fde30", "Url": "https://api.github.com/repos/mikegostev/AGE-Admin", "Date": "2011-09-01T23:06:52Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mExecutorService.isShutdown()) { mExecutorService = java.util.concurrent.Executors.newCachedThreadPool(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8472/buggy-version/Projects.Finder.src.com.telepathic.finder.sdk.traffic.TrafficManager.java", "BodyUseAPI": [], "Fixed commit": "7087d254996a5f95abe960fb3d227bcdeee07d03", "Url": "https://api.github.com/repos/timlian/Telepathic", "Date": "2013-03-03T12:37:31Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mExecutorService.isShutdown()) { mExecutorService = java.util.concurrent.Executors.newCachedThreadPool(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8472/buggy-version/Projects.Finder.src.com.telepathic.finder.sdk.traffic.TrafficManager.java", "BodyUseAPI": [], "Fixed commit": "7087d254996a5f95abe960fb3d227bcdeee07d03", "Url": "https://api.github.com/repos/timlian/Telepathic", "Date": "2013-03-03T12:37:31Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mTaskScheduler.isShutdown()) { mTaskScheduler = new java.util.concurrent.ScheduledThreadPoolExecutor(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8472/buggy-version/Projects.Finder.src.com.telepathic.finder.sdk.traffic.TrafficManager.java", "BodyUseAPI": [], "Fixed commit": "7087d254996a5f95abe960fb3d227bcdeee07d03", "Url": "https://api.github.com/repos/timlian/Telepathic", "Date": "2013-03-03T12:37:31Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mExecutorService.isShutdown()) { mExecutorService = java.util.concurrent.Executors.newCachedThreadPool(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8472/buggy-version/Projects.Finder.src.com.telepathic.finder.sdk.traffic.TrafficManager.java", "BodyUseAPI": [], "Fixed commit": "7087d254996a5f95abe960fb3d227bcdeee07d03", "Url": "https://api.github.com/repos/timlian/Telepathic", "Date": "2013-03-03T12:37:31Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mExecutorService.isShutdown()) { mExecutorService = java.util.concurrent.Executors.newCachedThreadPool(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8472/buggy-version/Projects.Finder.src.com.telepathic.finder.sdk.traffic.TrafficManager.java", "BodyUseAPI": [], "Fixed commit": "7087d254996a5f95abe960fb3d227bcdeee07d03", "Url": "https://api.github.com/repos/timlian/Telepathic", "Date": "2013-03-03T12:37:31Z"},
{"Line": "=>2025", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((where != null) && ((where.trim().length()) > 0)) where = \" and \" + where;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2478/buggy-version/src.com.eleybourn.bookcatalogue.CatalogueDBAdapter.java", "BodyUseAPI": [], "Fixed commit": "81d9de39c9a10b628a305c41e0cb6ff651ff1372", "Url": "https://api.github.com/repos/Grunthos/Book-Catalogue", "Date": "2011-02-19T11:28:08Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sender.getEntityWorld().getPlayerEntityByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sender1 != null) sender = sender1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2122/buggy-version/src.main.java.clashsoft.brewingapi.command.CommandPotion.java", "BodyUseAPI": [], "Fixed commit": "21177a698f7561a5920973166c89e919885a3df4", "Url": "https://api.github.com/repos/Clashsoft/Brewing-API", "Date": "2014-06-20T19:29:32Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.geosdi.geoplatform.gui.shared.util.GPSharedUtils.isNotEmpty(workspaceSimpleComboBox.getRawValue())) { workspaceName = workspaceSimpleComboBox.getRawValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/330/buggy-version/geoplatform-gui.extensions.gp-publisher-widget.src.main.java.org.geosdi.geoplatform.gui.client.widget.AbstractPublisherWidget.java", "BodyUseAPI": ["org.geosdi.geoplatform.gui.client.widget.WorkspacesComboBox.getRawValue()"], "Fixed commit": "9f2c401e266a88c6c99dbbf8aaf5d8fe7a2201a9", "Url": "https://api.github.com/repos/glascaleia/geo-platform", "Date": "2015-06-05T10:32:06Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bundleContext == null) { net.solarnetwork.spring.osgi.NonValidatingOsgiApplicationContextCreator.log.info(\"Cannot create ApplicationContext for null BundleContext\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1103/buggy-version/org.eclipse.gemini.blueprint.extender.config.src.net.solarnetwork.spring.osgi.NonValidatingOsgiApplicationContextCreator.java", "BodyUseAPI": [], "Fixed commit": "62c963cd4ef27e2ba6e01bbe82581872963c80fd", "Url": "https://api.github.com/repos/SolarNetwork/solarnetwork-external", "Date": "2016-10-18T00:04:37Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((parentContentId) == null) && ((newParentContentId) != null)) parentContentId = newParentContentId;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7406/buggy-version/src.java.org.infoglue.cms.applications.contenttool.actions.MoveMultipleContentAction.java", "BodyUseAPI": [], "Fixed commit": "67562e497d9aa99bd894978e907a00e3ffac02cd", "Url": "https://api.github.com/repos/bogeblad/infoglue", "Date": "2011-11-24T20:55:33Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((parentContentId) == null) && ((newParentContentId) != null)) parentContentId = newParentContentId;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7406/buggy-version/src.java.org.infoglue.cms.applications.contenttool.actions.MoveContentAction.java", "BodyUseAPI": [], "Fixed commit": "67562e497d9aa99bd894978e907a00e3ffac02cd", "Url": "https://api.github.com/repos/bogeblad/infoglue", "Date": "2011-11-24T20:55:33Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (weektime.substring(7, 13).equals(\"delete\")) { defaultTimes.removeAll(defaultTimes); java.lang.System.out.println((\"deleted \" + (weektime.substring(7, 13)))); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6334/buggy-version/whenufree.src.main.java.com.whenufree.controllers.SetTimesController.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "ba23ad9bbdc5bc590695abf32272fbf5b5ce79ea", "Url": "https://api.github.com/repos/Revature-102317/when-u-free", "Date": "2017-11-30T20:47:40Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.contentType.toLowerCase().equals(\"text/segments-manifest\")) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5507/buggy-version/src.com.bzu.softwareconstruction.segments.SegmentPartUrl.java", "BodyUseAPI": [], "Fixed commit": "8824ac90ef6643cbc76d93826b2c43d3f5f722e0", "Url": "https://api.github.com/repos/mtomaizy/BzuDownloader", "Date": "2015-12-19T17:36:05Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Double>.get(DoubleEntityRunner.SELF_WEIGHT)", "java.util.Map<java.lang.String, java.lang.Double>.get(DoubleEntityRunner.WIKI_WEIGHT)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((wikiWeight == 0.0) && (selfWeight == 0.0)) { combined = doc; }else { edu.gslis.textrepresentation.FeatureVector wikiSelf = edu.gslis.textrepresentation.FeatureVector.interpolate(wiki, self, (wikiWeight / (wikiWeight + selfWeight))); combined = edu.gslis.textrepresentation.FeatureVector.interpolate(doc, wikiSelf, docWeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7528/buggy-version/src.main.java.edu.gslis.evaluation.running.runners.DoubleEntityRMRunner.java", "BodyUseAPI": ["edu.gslis.textrepresentation.FeatureVector.interpolate(edu.gslis.textrepresentation.FeatureVector,edu.gslis.textrepresentation.FeatureVector,double)"], "Fixed commit": "7fde066d3bb7ced63850267846e4f33a4e7ff6a2", "Url": "https://api.github.com/repos/gtsherman/entities", "Date": "2016-10-28T20:53:13Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f.isDirectory()) { fileDialog.setDirectory(pathName); }else { if ((f.getParentFile()) != null) { fileDialog.setDirectory(f.getParentFile().getPath()); fileDialog.setFile(f.getName()); }else { nodebox.client.NodeBoxDocument document = nodebox.client.NodeBoxDocument.getCurrentDocument(); if (document != null) { java.io.File documentFile = document.getDocumentFile(); if (documentFile != null) { fileDialog.setDirectory(documentFile.getParentFile().getPath()); } } fileDialog.setFile(pathName); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2411/buggy-version/src.nodebox.client.FileUtils.java", "BodyUseAPI": ["java.awt.FileDialog.setFile(java.lang.String)", "java.io.File.getName()", "java.io.File.getParentFile()", "java.io.File.getPath()", "java.awt.FileDialog.setDirectory(java.lang.String)", "java.io.File.getParentFile()"], "Fixed commit": "0f878c142118788312dd5a92741df1e186e79cbc", "Url": "https://api.github.com/repos/nodebox/nodebox", "Date": "2011-09-15T11:15:17Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fragmentVisible) { if (homeActivity != null) { showSystemUI(); homeActivity.showHomeNavigation(); } if (((currentFriend) != null) && (currentFriend.isHighlighted)) { galleryPresenter.populatePhotosList(currentFriend); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3609/buggy-version/app.src.main.java.com.collage.gallery.GalleryFragment.java", "BodyUseAPI": [], "Fixed commit": "4bc86a86e124073ecc3550711eeb5fbf184fe340", "Url": "https://api.github.com/repos/matdziu/collage", "Date": "2017-02-10T12:53:01Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((output.session) != null) { com.willshex.blogwt.server.helper.UserHelper.stripPassword(output.session.user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8509/buggy-version/src.main.java.com.willshex.blogwt.server.api.user.UserApi.java", "BodyUseAPI": ["com.willshex.blogwt.server.helper.UserHelper.stripPassword(output.session.user)"], "Fixed commit": "872bccda590e28eb3db707adb754034f19276452", "Url": "https://api.github.com/repos/billy1380/blogwt", "Date": "2015-09-25T10:58:12Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAdded())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6225/buggy-version/tongle.src.com.tongle.PageDetail.java", "BodyUseAPI": [], "Fixed commit": "e45c74e9b296a4eabcdefede0e51b9afee9d772d", "Url": "https://api.github.com/repos/charles-lo/TongLe", "Date": "2015-08-11T16:09:13Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != is) { try { is.close(); } catch (java.io.IOException e1) { e1.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3108/buggy-version/fileUtils.src.main.java.org.wuxinshui.boosters.http.HttpUtils.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "09a64d94511bc1acdd13778e4e10bfa6a74c6abc", "Url": "https://api.github.com/repos/wuxinshui/boosters", "Date": "2017-04-27T07:39:23Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((urlConnection.getResponseCode()) > 400) { is = urlConnection.getErrorStream(); }else { is = urlConnection.getInputStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3108/buggy-version/fileUtils.src.main.java.org.wuxinshui.boosters.http.HttpUtils.java", "BodyUseAPI": ["java.net.HttpURLConnection.getErrorStream()", "java.net.HttpURLConnection.getInputStream()"], "Fixed commit": "09a64d94511bc1acdd13778e4e10bfa6a74c6abc", "Url": "https://api.github.com/repos/wuxinshui/boosters", "Date": "2017-04-27T07:39:23Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.minecraftforge.oredict.OreDictionary.doesOreNameExist(ore))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1231/buggy-version/src.main.java.io.darkcraft.darkcore.mod.helpers.OreDictionaryHelper.java", "BodyUseAPI": [], "Fixed commit": "49ff182b0a7350831f06bc49bb5384e1e6063497", "Url": "https://api.github.com/repos/FoxPotato/Darkcore", "Date": "2016-04-04T04:19:57Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((onCreate) != null) { onCreate.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2950/buggy-version/src.android.com.microsoftopentechnologies.intellij.forms.CreateStorageAccountForm.java", "BodyUseAPI": [], "Fixed commit": "7f68cdcf0a68a1a2508790958b7231a523a6f45c", "Url": "https://api.github.com/repos/leotilli/msopentech-tools-for-intellij", "Date": "2015-03-26T19:15:12Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (objectToUpdate == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2665/buggy-version/src.com.delivery.persistent.OptionalDao.java", "BodyUseAPI": [], "Fixed commit": "964dd29a9b43c99d9f45d8732ceab34770bc4557", "Url": "https://api.github.com/repos/tibagni/Delivery", "Date": "2012-06-19T02:26:46Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (schluessel.contains(\" \")) { throw new java.lang.IllegalArgumentException(\"Key contains whitespaces\"); }else if (schluessel.matches(\".*\\\\d+.*\")) { throw new java.lang.IllegalArgumentException(\"Key contains numerical values\"); }else if (!(schluessel.matches(\"([A-z])\\\\w+\"))) { throw new java.lang.IllegalArgumentException(\"Key contains unsupported characters\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8244/buggy-version/src.pis.hue1.Wuerfel.java", "BodyUseAPI": ["java.lang.String.matches(java.lang.String)", "java.lang.String.matches(java.lang.String)"], "Fixed commit": "70ef9e34484517629b102d49ce53247a0890088b", "Url": "https://api.github.com/repos/Isotop7/PIS-Hausuebung2", "Date": "2016-11-07T12:24:47Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentP instanceof Mafia) && (!(Driver.game.mafiaWent))) { Driver.game.mafiaWent = true; mafiaVisitor = ((Mafia) (currentP)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2800/buggy-version/Driver.java", "BodyUseAPI": [], "Fixed commit": "316ec733de7cf6541bd6f34730d729a9cd861527", "Url": "https://api.github.com/repos/Citronnade/pd3-mafia-wilbur-max-vincent", "Date": "2014-06-17T00:10:33Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((executor) != null) { executor.shutdown(); executor = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7156/buggy-version/reladomo.src.main.java.com.gs.fw.common.mithra.util.MithraMultiThreadedQueueLoader.java", "BodyUseAPI": [], "Fixed commit": "62344546db87ed50b1805d68b971362ee538da67", "Url": "https://api.github.com/repos/epsstan/reladomo", "Date": "2017-02-21T19:49:33Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lol.DateParser.getMonthNum(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((java.lang.Integer.parseInt(dateSpace[Constants.INDEX_DAY])) < 0) || (monthNum < 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1356/buggy-version/LifeOnLine.src.lol.DateParser.java", "BodyUseAPI": [], "Fixed commit": "a572a11bd617a910c3da59d582d40862938e4633", "Url": "https://api.github.com/repos/cs2103-t10-1j/main", "Date": "2014-10-19T03:50:48Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["compiler.frames.FrmDesc.getFrame(compiler.semanal.SemDesc.getNameDecl(acceptor.name))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (currentFrame.equals(frame)) { call.args.add(new compiler.imcode.ImcMEM(new compiler.imcode.ImcTEMP(currentFrame.FP))); call.size.add(4); }else { call.args.add(new compiler.imcode.ImcTEMP(currentFrame.FP)); call.size.add(4); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5957/buggy-version/src.compiler.imcode.IMCodeGenerator.java", "BodyUseAPI": ["call.args.add(compiler.imcode.ImcTEMP)", "call.args.add(compiler.imcode.ImcMEM)"], "Fixed commit": "979ed910784d9444f6492bfd7e998ef5f1977a9d", "Url": "https://api.github.com/repos/zidarsk8/compiler", "Date": "2012-06-06T23:26:33Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (heroImage != null) { if (org.apache.commons.lang.StringUtils.isNotBlank(heroImage)) { imageNode.setProperty(\"fileReference\", heroImage); }else { com.cisco.dse.global.migration.productlanding.ProductLandingVariation5.log.debug(\"image paths are same.\"); } }else { sb.append(\"<li> image is not found on locale page's hero element. </li>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1223/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.productlanding.ProductLandingVariation5.java", "BodyUseAPI": ["javax.jcr.Node.setProperty(java.lang.String,java.lang.String)", "org.apache.commons.lang.StringUtils.isNotBlank(java.lang.String)"], "Fixed commit": "fb975f682942321731eaaf862de75b90ec7f3ddd", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2016-01-22T12:53:09Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((title.files().length) - 1) < (titleLocation)) { title.enter(); titleX2 += 40; inputWait = 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1973/buggy-version/src.axohEngine2.Judgement.java", "BodyUseAPI": ["axohEngine2.project.TitleMenu.enter()"], "Fixed commit": "d8a2c6e764da3a44080a79e2d937174af103c2e5", "Url": "https://api.github.com/repos/axoh17/Game2", "Date": "2014-11-14T23:59:01Z"},
{"Line": "=>781", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(map.getOwnerOfTile(tileSelection).equals(players.get(currPlayer)))) { java.lang.System.out.println(\"HERE\"); java.lang.System.out.println(map.getOwnerOfTile(tileSelection)); java.lang.System.out.println(players.get(currPlayer)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3878/buggy-version/MULE.src.GameController.java", "BodyUseAPI": ["java.io.PrintStream.println(map.getOwnerOfTile(tileSelection))", "java.io.PrintStream.println(players.get(currPlayer))", "java.util.ArrayList<Player>.get(int)", "Map.getOwnerOfTile(int)"], "Fixed commit": "108ead1a0a47557957a81efbb925daacdccd7a78", "Url": "https://api.github.com/repos/alexstelea/Fighting-Mongooses", "Date": "2013-11-13T04:13:25Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((length) != 0) { this.payload = new byte[length]; buffer.get(payload); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4678/buggy-version/framework.src.main.java.edu.uci.eecs.wukong.framework.model.MPTNPackage.java", "BodyUseAPI": [], "Fixed commit": "c5406d6417a595d6410521de866788c3ae960d9a", "Url": "https://api.github.com/repos/HuangZhenQiu/Progression-Framework", "Date": "2016-02-05T00:37:14Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cl != null) try { cl.close(); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1135/buggy-version/src.org.sugarj.driver.ModuleSystemCommands.java", "BodyUseAPI": ["java.net.URLClassLoader.close()"], "Fixed commit": "f9a80e10f2fe304483e2467aa22c34d8ab11f772", "Url": "https://api.github.com/repos/sugar-lang/compiler", "Date": "2013-10-15T07:38:47Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (unitSaving.equals(\"1\")) { android.widget.Toast.makeText(this, (((((((\"Goal Name: \" + goalName) + \" TimePeriod Selected: \") + timePeriod) + \" UnitSaving Selected: \") + unitSaving) + \" Amount to Save: \") + amount), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3022/buggy-version/app.src.main.java.com.cs506.accountable.Update_4_Activity.java", "BodyUseAPI": ["android.widget.Toast.makeText(this, (((((((\"Goal Name: \" + goalName) + \" TimePeriod Selected: \") + timePeriod) + \" UnitSaving Selected: \") + unitSaving) + \" Amount to Save: \") + amount), Toast.LENGTH_LONG).show()", "android.widget.Toast.makeText(com.cs506.accountable.Update_4_Activity,java.lang.String,Toast.LENGTH_LONG)"], "Fixed commit": "500c6041305df87f1f931456fca6d3df3dd2fa4b", "Url": "https://api.github.com/repos/jmandli12/Accountable", "Date": "2017-05-02T03:19:03Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (unitSaving.equals(\"2\")) { android.widget.Toast.makeText(this, (((((\"Goal Name: \" + goalName) + \" UnitSaving Selected: \") + unitSaving) + \" Amount to Save: \") + amount), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3022/buggy-version/app.src.main.java.com.cs506.accountable.Update_4_Activity.java", "BodyUseAPI": ["android.widget.Toast.makeText(com.cs506.accountable.Update_4_Activity,java.lang.String,Toast.LENGTH_LONG)", "android.widget.Toast.makeText(this, (((((\"Goal Name: \" + goalName) + \" UnitSaving Selected: \") + unitSaving) + \" Amount to Save: \") + amount), Toast.LENGTH_LONG).show()"], "Fixed commit": "500c6041305df87f1f931456fca6d3df3dd2fa4b", "Url": "https://api.github.com/repos/jmandli12/Accountable", "Date": "2017-05-02T03:19:03Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (unitSaving.equals(\"2\")) { android.widget.Toast.makeText(this, (((((\"Goal Name: \" + goalName) + \" UnitSaving Selected: \") + unitSaving) + \" Amount to Save: \") + amount), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3022/buggy-version/app.src.main.java.com.cs506.accountable.Setup_6_Activity.java", "BodyUseAPI": ["android.widget.Toast.makeText(this, (((((\"Goal Name: \" + goalName) + \" UnitSaving Selected: \") + unitSaving) + \" Amount to Save: \") + amount), Toast.LENGTH_LONG).show()", "android.widget.Toast.makeText(com.cs506.accountable.Setup_6_Activity,java.lang.String,Toast.LENGTH_LONG)"], "Fixed commit": "500c6041305df87f1f931456fca6d3df3dd2fa4b", "Url": "https://api.github.com/repos/jmandli12/Accountable", "Date": "2017-05-02T03:19:03Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (unitSaving.equals(\"1\")) { android.widget.Toast.makeText(this, (((((((\"Goal Name: \" + goalName) + \" TimePeriod Selected: \") + timePeriod) + \" UnitSaving Selected: \") + unitSaving) + \" Amount to Save: \") + amount), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3022/buggy-version/app.src.main.java.com.cs506.accountable.Setup_6_Activity.java", "BodyUseAPI": ["android.widget.Toast.makeText(this, (((((((\"Goal Name: \" + goalName) + \" TimePeriod Selected: \") + timePeriod) + \" UnitSaving Selected: \") + unitSaving) + \" Amount to Save: \") + amount), Toast.LENGTH_LONG).show()", "android.widget.Toast.makeText(com.cs506.accountable.Setup_6_Activity,java.lang.String,Toast.LENGTH_LONG)"], "Fixed commit": "500c6041305df87f1f931456fca6d3df3dd2fa4b", "Url": "https://api.github.com/repos/jmandli12/Accountable", "Date": "2017-05-02T03:19:03Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.davidg95.JTill.jtillserver.LoginDialog.showLoginDialog(io.github.davidg95.JTill.jtillserver.WasteReasonSelectDialog)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (s == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/169/buggy-version/src.io.github.davidg95.JTill.jtillserver.WasteReasonSelectDialog.java", "BodyUseAPI": [], "Fixed commit": "33c05453fe2c7149c69e3c5bdfdf724b7fe5ca8b", "Url": "https://api.github.com/repos/davidg95/JTillServer", "Date": "2017-12-28T16:56:47Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cookies == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/9116/buggy-version/src.main.java.br.com.emersondeandrade.aplicacao.mobile.CookiesService.java", "BodyUseAPI": [], "Fixed commit": "c3169b58d32ec5686c81dca1b46dbf6b54ad3158", "Url": "https://api.github.com/repos/emersonat/domotica", "Date": "2012-11-25T03:17:27Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (removeRealm.equals(\"true\")) { user = getUser(remoteuser.split(\"@\")[0]); anguswarren.jira.RemoteUserJiraAuth.log.debug(\"Removing realm from username\"); }else if (removeRealm.equals(\"false\")) { user = getUser(remoteuser); anguswarren.jira.RemoteUserJiraAuth.log.debug(\"Keep realm in username\"); }else { anguswarren.jira.RemoteUserJiraAuth.log.warn(\"Invalid value for property removeRealm, using true as default\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3114/buggy-version/RemoteUserJiraAuth.src.main.java.anguswarren.jira.RemoteUserJiraAuth.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "882a790533a4a57ad67d786c8d0c5d16621b83af", "Url": "https://api.github.com/repos/petr-klemsinsky/remoteuserauth", "Date": "2017-02-21T08:15:19Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Thread.currentThread()) == (mgrThread)) { handleStateChange(state); }else { indicatedState = state; notify(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5876/buggy-version/lib.src.main.java.io.ably.lib.transport.ConnectionManager.java", "BodyUseAPI": [], "Fixed commit": "9a21b154c5463e2dedf7d6b67cf0ae24d41af926", "Url": "https://api.github.com/repos/ably/ably-java", "Date": "2016-11-17T21:02:58Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.nifi.processors.aws.iot.GetIOTShadow.getClient()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (iotClient == null) { getLogger().error(\"AWS-Client was not initialized. See logs to find reasons.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7411/buggy-version/nifi-nar-bundles.nifi-aws-bundle.nifi-aws-processors.src.main.java.org.apache.nifi.processors.aws.iot.GetIOTShadow.java", "BodyUseAPI": [], "Fixed commit": "53c5855efabb0d6d2963e84e34be244e9ed47e54", "Url": "https://api.github.com/repos/KayLerch/nifi", "Date": "2016-04-10T14:38:47Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((code.getId()) == null) { queryObject.setParameter(\"id\", 0L); }else { queryObject.setParameter(\"id\", code.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6363/buggy-version/opentides3-core.src.main.java.org.opentides.dao.impl.SystemCodesDaoJpaImpl.java", "BodyUseAPI": ["org.opentides.bean.SystemCodes.getId()", "javax.persistence.Query.setParameter(java.lang.String,code.getId())"], "Fixed commit": "84d6aabd19950017306995b1a20569e17a2e121f", "Url": "https://api.github.com/repos/Ideyatech/opentides3", "Date": "2013-12-23T07:37:45Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!initAdd) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8348/buggy-version/src.com.starbug1.android.mudanews.MudanewsActivity.java", "BodyUseAPI": [], "Fixed commit": "0ab92f0d7ca402c4595ff56a93f1622c24b66e8b", "Url": "https://api.github.com/repos/smeghead/mudanews", "Date": "2011-12-04T06:36:27Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tempList.Listdata) != null) { size++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4284/buggy-version/LinkedList.java", "BodyUseAPI": [], "Fixed commit": "0897bbfd75ac4c7defc4322231a4d88ac888e64f", "Url": "https://api.github.com/repos/BBK-PiJ-2014-04/cw3", "Date": "2015-01-12T19:56:36Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.grpc.DecompressorRegistry.lookupDecompressor(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (decompressor != (Codec.Identity.NONE)) { if (compressedStream) { deframeFailed(Status.INTERNAL.withDescription(java.lang.String.format(\"Full stream and gRPC message encoding cannot both be set\")).asRuntimeException()); return; } setDecompressor(decompressor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3634/buggy-version/core.src.main.java.io.grpc.internal.AbstractClientStream.java", "BodyUseAPI": ["io.grpc.internal.AbstractClientStream.TransportState.setDecompressor(io.grpc.Decompressor)"], "Fixed commit": "de83a9de2a9f9fd67994a57c808c69299d47e34e", "Url": "https://api.github.com/repos/ericgribkoff/grpc-java", "Date": "2017-09-01T05:45:56Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((replacedState) == null) || ((replacedState.getBlock()) == null)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5135/buggy-version/src.main.java.zmaster587.libVulpes.tile.multiblock.TilePlaceholder.java", "BodyUseAPI": [], "Fixed commit": "7a8e29f0cd0dde110a685f5374688f2aefff242f", "Url": "https://api.github.com/repos/zmaster587/libVulpes", "Date": "2016-10-15T17:44:29Z"},
{"Line": "=>598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedConfiguration.getId().equals(fcid)) { selectedConfiguration = configSet.getDefault(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6184/buggy-version/core.src.net.sf.openrocket.rocketcomponent.Rocket.java", "BodyUseAPI": [], "Fixed commit": "f7090afd7923d44be92d1323e74dbea4708c03d8", "Url": "https://api.github.com/repos/openrocket/openrocket", "Date": "2016-04-17T15:00:48Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(file.exists())) || (!(file.isFile()))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5861/buggy-version/Common.customskinloader.tweaker.ClassTransformer.java", "BodyUseAPI": [], "Fixed commit": "1d88a98040110e2df9a807211d7e13a68b8c4ae2", "Url": "https://api.github.com/repos/xfl03/MCCustomSkinLoader", "Date": "2016-08-01T15:58:29Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["leap.orm.sql.SqlFragment.getContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(leap.lang.Strings.containsIgnoreCase(fragmentContent, leap.orm.sql.DefaultSqlCommand.IncludeProcessor.AT_INCLUDE))) { sb.append(fragmentContent); }else { sb.append(new leap.orm.sql.DefaultSqlCommand.IncludeProcessor(context, fragmentContent).process()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1227/buggy-version/data.orm.src.main.java.leap.orm.sql.DefaultSqlCommand.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "leap.orm.sql.DefaultSqlCommand.IncludeProcessor.process()"], "Fixed commit": "8d1c415dbf443b53fc30d1dfe346b650fe0d757f", "Url": "https://api.github.com/repos/leapframework/framework", "Date": "2016-05-29T14:45:44Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.dateRange) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5727/buggy-version/src.carelender.model.data.Event.java", "BodyUseAPI": [], "Fixed commit": "edc9e2374ba01902a24c1fd35277c100114eece9", "Url": "https://api.github.com/repos/cs2103aug2015-t10-4j/main", "Date": "2015-10-19T12:40:09Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.dateRange) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5727/buggy-version/src.carelender.model.data.Event.java", "BodyUseAPI": [], "Fixed commit": "edc9e2374ba01902a24c1fd35277c100114eece9", "Url": "https://api.github.com/repos/cs2103aug2015-t10-4j/main", "Date": "2015-10-19T12:40:09Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!testing) assert (bs.length) == (type.hashLength);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1180/buggy-version/src.freenet.crypt.HashResult.java", "BodyUseAPI": [], "Fixed commit": "0b08ab866e92b18029c32ffb430908f43b4abbbd", "Url": "https://api.github.com/repos/unixninja92/fred-staging", "Date": "2015-12-27T03:53:08Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.brookmanholmes.bma.ui.addturnwizard.fragments.RotationShotFragment.getBallStatuses()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((ballStatusList.get(i)) == (com.brookmanholmes.billiards.game.util.BallStatus.GAME_BALL_MADE_ON_BREAK)) page.updateBallStatus((i + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8816/buggy-version/app.src.main.java.com.brookmanholmes.bma.ui.addturnwizard.fragments.RotationShotFragment.java", "BodyUseAPI": ["com.brookmanholmes.bma.ui.addturnwizard.fragments.RotationShotFragment.updateBallStatus(int)"], "Fixed commit": "01e632e24ea01dd9cff71f54c31b031034787202", "Url": "https://api.github.com/repos/brookman-holmes/BilliardMatchAnalyzer", "Date": "2016-08-26T02:52:14Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (RuleCompatibility(currentDec.wh)) return true; else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/944/buggy-version/twoscreen.src.sample.Rule.java", "BodyUseAPI": [], "Fixed commit": "00b3beedec27970b0a76383a1876670f6f66e4f5", "Url": "https://api.github.com/repos/AliKarami/SE", "Date": "2016-06-21T19:24:36Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(myProject.isDefault())) { com.intellij.lang.LanguagePerFileMappings.LOG.error((((\"updater = null. project=\" + (myProject.getName())) + \", this=\") + (getClass().getSimpleName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/25/buggy-version/platform.lang-impl.src.com.intellij.lang.LanguagePerFileMappings.java", "BodyUseAPI": ["com.intellij.openapi.project.Project.getName()", "com.intellij.openapi.diagnostic.Logger.error((((\"updater = null. project=\" + (myProject.getName())) + \", this=\") + (getClass().getSimpleName())))"], "Fixed commit": "37f34bf449a9825f86921bc202e8a9efef520159", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2012-05-05T09:23:22Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c) != null) surfaceHolder.unlockCanvasAndPost(c);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4172/buggy-version/InDoorView.src.main.java.com.karonl.instance.Unit.DrawThread.java", "BodyUseAPI": [], "Fixed commit": "52b1a7b60aed063b704c4d1d4569cd36b3c20e99", "Url": "https://api.github.com/repos/karonl/InDoorSurfaceView", "Date": "2017-06-14T15:40:07Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Random.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ran < 0) { ran = -ran; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5601/buggy-version/giraph-examples.src.main.java.org.apache.giraph.examples.jabeja.io.NodePartitioningPseudoRandomVertexInputFormat.java", "BodyUseAPI": [], "Fixed commit": "2d12b5694df21e946accc7cca403c0ee4b10dd6c", "Url": "https://api.github.com/repos/pushparajxa/giraph", "Date": "2014-01-03T02:40:30Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((filterItems.size()) == 1) { q.where(filterItems.get(0)); }else { q.where(new org.apache.metamodel.query.FilterItem(filterItems.toArray(new org.apache.metamodel.query.FilterItem[filterItems.size()]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6262/buggy-version/components.basic-filters.src.main.java.org.datacleaner.beans.filter.EqualsFilter.java", "BodyUseAPI": ["java.util.List<org.apache.metamodel.query.FilterItem>.size()", "java.util.List<org.apache.metamodel.query.FilterItem>.get(int)", "java.util.List<org.apache.metamodel.query.FilterItem>.toArray(org.apache.metamodel.query.FilterItem[])", "org.apache.metamodel.query.Query.where(org.apache.metamodel.query.FilterItem)", "org.apache.metamodel.query.Query.where(filterItems.get(0))"], "Fixed commit": "49fd210575f67d6cb61bad6a5d6a14e9bfed5612", "Url": "https://api.github.com/repos/loorenzooo/DataCleaner", "Date": "2015-10-22T14:25:23Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(enterables.contains(cs))) { enterables.add(cs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4679/buggy-version/src.com.disgrace.ddripoff.dungeon.Dungeon.java", "BodyUseAPI": ["java.util.List<com.disgrace.ddripoff.dungeon.Enterable>.add(com.disgrace.ddripoff.dungeon.CorridorSection)"], "Fixed commit": "db0afec914922bfb31e465460ccc14772e9df29d", "Url": "https://api.github.com/repos/disgraceful/java-RPG", "Date": "2017-03-20T16:18:49Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input.length) == 0) { return new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/803/buggy-version/hazelcast.src.main.java.com.hazelcast.nio.IOUtil.java", "BodyUseAPI": [], "Fixed commit": "ba736f469ea732902605d905f3bba12fc6023ac7", "Url": "https://api.github.com/repos/Donnerbart/hazelcast", "Date": "2015-12-09T19:58:18Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (save_arff_file) { java.io.File arffFile = new java.io.File(conversionPaths.getArffFilePath()); featureState.setSavedWekaArffFile(arffFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8380/buggy-version/src.jsymbolic2.api.deprecated.JsymbolicProcessorDeprecated.java", "BodyUseAPI": [], "Fixed commit": "2443d04f9b8e9cba1e832cf8917b5d8f84ab9bf3", "Url": "https://api.github.com/repos/DDMAL/jSymbolic2", "Date": "2017-01-27T08:48:28Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (save_csv_file) { java.io.File csvFile = new java.io.File(conversionPaths.getCsvFilePath()); featureState.setSavedCsvFile(csvFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8380/buggy-version/src.jsymbolic2.api.deprecated.JsymbolicProcessorDeprecated.java", "BodyUseAPI": [], "Fixed commit": "2443d04f9b8e9cba1e832cf8917b5d8f84ab9bf3", "Url": "https://api.github.com/repos/DDMAL/jSymbolic2", "Date": "2017-01-27T08:48:28Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"UIQuickAddTask\".equals(this.getId())) defaultTime = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2494/buggy-version/calendar-webapp.src.main.java.org.exoplatform.calendar.webui.popup.UIQuickAddEvent.java", "BodyUseAPI": [], "Fixed commit": "f645178fb7bbebbbd51ab1af7a00fae230eb1079", "Url": "https://api.github.com/repos/exoplatform/calendar", "Date": "2013-07-02T04:38:56Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.stratos.autoscaler.applications.topic.ApplicationBuilder.log.isDebugEnabled()) { org.apache.stratos.autoscaler.applications.topic.ApplicationBuilder.log.debug(\"Handling complete application\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4882/buggy-version/components.org.apache.stratos.autoscaler.src.main.java.org.apache.stratos.autoscaler.applications.topic.ApplicationBuilder.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "c45a0ab20c99c5a91cba29eab6a18bd50cea8aa8", "Url": "https://api.github.com/repos/apache/stratos", "Date": "2014-11-03T12:49:01Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.stratos.autoscaler.applications.ApplicationSynchronizeTask.log.isDebugEnabled()) { org.apache.stratos.autoscaler.applications.ApplicationSynchronizeTask.log.debug(\"Applications Complete Event publisher task has been started...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4882/buggy-version/components.org.apache.stratos.autoscaler.src.main.java.org.apache.stratos.autoscaler.applications.ApplicationSynchronizeTask.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "c45a0ab20c99c5a91cba29eab6a18bd50cea8aa8", "Url": "https://api.github.com/repos/apache/stratos", "Date": "2014-11-03T12:49:01Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (oldFields[i].isFocused()) stationNameFields[i].setText(oldFields[i].getText());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4977/buggy-version/src.com.minemaarten.signals.client.gui.GuiMinecart.java", "BodyUseAPI": ["stationNameFields[i].setText(oldFields[i].getText())", "oldFields[i].getText()"], "Fixed commit": "e836bc99f5cf6e96036384745cb4d52664f7685f", "Url": "https://api.github.com/repos/MineMaarten/Signals", "Date": "2016-06-28T13:22:33Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (filter instanceof fr.vpm.audiorss.db.filter.ChannelFilter) { filterNames.add((((filter.getClass().getName()) + \",id=\") + (filter.getSelectionValues()[0]))); }else { filterNames.add(filter.getClass().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5505/buggy-version/app.src.main.java.fr.vpm.audiorss.process.AllFeedItemsDataModel.java", "BodyUseAPI": ["fr.vpm.audiorss.db.filter.SelectionFilter.getSelectionValues()", "java.util.Set<java.lang.String>.add((((filter.getClass().getName()) + \",id=\") + (filter.getSelectionValues()[0])))", "java.util.Set<java.lang.String>.add(filter.getClass().getName())", "filter.getClass().getName()", "filter.getClass().getName()", "fr.vpm.audiorss.db.filter.SelectionFilter.getClass()", "fr.vpm.audiorss.db.filter.SelectionFilter.getClass()"], "Fixed commit": "8496756ee281562edb11cf8e5483baba2579e510", "Url": "https://api.github.com/repos/vpmalley/radiofeedz", "Date": "2015-03-15T21:42:30Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getTag()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tag.length()) > 36) payload.putString(FirebaseAnalytics.Param.VALUE, tag.substring(0, 36)); else payload.putString(FirebaseAnalytics.Param.VALUE, tag);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/942/buggy-version/app.src.main.java.com.limerobotsoftware.ohiodevfest.ui.MainActivity.java", "BodyUseAPI": ["android.os.Bundle.putString(FirebaseAnalytics.Param.VALUE,java.lang.String)", "android.os.Bundle.putString(FirebaseAnalytics.Param.VALUE,java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "ed02780144ebac57947e1c5b0dbc0e4465428460", "Url": "https://api.github.com/repos/Multitera/OhioDevFest", "Date": "2016-11-16T20:15:58Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (contentFile != null) { if (contentFile.getQualityCriteria().isCorrectness()) { (eu.learnpad.ca.rest.impl.ColloborativeContentVerificationsImpl.id)++; eu.learnpad.ca.correctness.CorrectnessAnalysis threadcorre = new eu.learnpad.ca.correctness.CorrectnessAnalysis(new org.languagetool.language.BritishEnglish(), contentFile); threadcorre.start(); eu.learnpad.ca.rest.impl.ColloborativeContentVerificationsImpl.map.put(eu.learnpad.ca.rest.impl.ColloborativeContentVerificationsImpl.id, threadcorre); return eu.learnpad.ca.rest.impl.ColloborativeContentVerificationsImpl.id.toString(); }else return \"Analysis not implemented\"; }else return \"Null Element send\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4274/buggy-version/src.main.java.eu.learnpad.ca.rest.impl.ColloborativeContentVerificationsImpl.java", "BodyUseAPI": ["eu.learnpad.ca.rest.data.collaborative.CollaborativeContentAnalysis.getQualityCriteria()", "contentFile.getQualityCriteria().isCorrectness()"], "Fixed commit": "6f8ae6c312fda2b862e2c1e43d57e82836135b6b", "Url": "https://api.github.com/repos/ISTI-FMT-LearnPAd/ContentAnalysisComponent", "Date": "2015-07-16T09:47:24Z"},
{"Line": "=>1364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isUnion()) || (isNothing())) { throw new java.lang.UnsupportedOperationException(\"getSupertypes() not defined for union types or Nothing\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6086/buggy-version/src.com.redhat.ceylon.model.typechecker.model.Type.java", "BodyUseAPI": [], "Fixed commit": "c42b66c2bfb943f9bd8b6fe1bc6258e2b83d5963", "Url": "https://api.github.com/repos/ceylon/ceylon-model", "Date": "2015-09-17T08:22:19Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((out.length()) > 0) out.deleteCharAt(((out.length()) - 1)); else if (((owner != null) || (network != null)) || (color != null)) out.darkgray(\"There are no portals that meet your criteria.\"); else out.darkgray(\"There are no portals.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1806/buggy-version/src.me.stendec.abyss.commands.ListCommand.java", "BodyUseAPI": ["me.stendec.abyss.util.ColorBuilder.length()", "me.stendec.abyss.util.ColorBuilder.darkgray(java.lang.String)", "me.stendec.abyss.util.ColorBuilder.deleteCharAt(((out.length()) - 1))", "me.stendec.abyss.util.ColorBuilder.darkgray(java.lang.String)"], "Fixed commit": "f3f98596fd3365609f6172a824ac5f03aeb61e82", "Url": "https://api.github.com/repos/stendec/Abyss", "Date": "2013-02-11T19:25:21Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["drone.getBattery().getBatteryVoltage()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (battVoltage != null) battVoltage = 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3993/buggy-version/Android.src.org.droidplanner.android.notifications.PebbleNotificationProvider.java", "BodyUseAPI": [], "Fixed commit": "e4ef63a622be4ae59fb588a4d5e726df60c90b34", "Url": "https://api.github.com/repos/ne0fhyk/droidplanner", "Date": "2014-11-14T02:13:58Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (languageBar.isActive()) { languageBar.deactivate(); return false; }else { exitConfirm.open(com.turpgames.framework.v0.util.Game.getLanguageManager().getString(R.strings.exitProgramConfirm)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8610/buggy-version/ichigu.src.com.turpgames.ichigu.view.MenuScreen.java", "BodyUseAPI": ["com.turpgames.framework.v0.component.LanguageMenu.deactivate()"], "Fixed commit": "85ab39167ea9e0650482462272ee5960235e293d", "Url": "https://api.github.com/repos/kankoli/blox", "Date": "2013-11-06T20:43:03Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codepath.flickster.adapters.MovieAdapter.1.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((movie.getType()) == (Movie.Type.POPULAR)) { if ((viewHolder.tvTitle) != null) { width *= com.codepath.flickster.util.FlicksterConstants.BACKDROP_SCREEN_WIDTH_FACTOR; } }else { width *= com.codepath.flickster.util.FlicksterConstants.POSTER_SCREEN_WIDTH_FACTOR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/456/buggy-version/app.src.main.java.com.codepath.flickster.adapters.MovieAdapter.java", "BodyUseAPI": [], "Fixed commit": "8308e02e76370f7e7d41c5e7e764e393b050af41", "Url": "https://api.github.com/repos/jamiehoabnb/Flickster", "Date": "2016-05-21T02:48:55Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (appServiceRegistry)) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8100/buggy-version/src.main.java.act.app.App.java", "BodyUseAPI": [], "Fixed commit": "331dbda8396f859cc38422f8d629ec73d029f622", "Url": "https://api.github.com/repos/actframework/actframework", "Date": "2016-01-12T12:36:31Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((conversation) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4951/buggy-version/easeui.src.com.hyphenate.easeui.ui.EaseChatFragment.java", "BodyUseAPI": [], "Fixed commit": "1fd06e93c86a02bda0744f2ce6fcd951a6d1b4c3", "Url": "https://api.github.com/repos/CD-DSGN/architecture_android", "Date": "2017-05-02T01:42:39Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(needLongRendering)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/597/buggy-version/jtrim-gui.src.main.java.org.jtrim.swing.component.AsyncImageDisplay.java", "BodyUseAPI": [], "Fixed commit": "98e51399407d4eb3cf04be194010d040da94063b", "Url": "https://api.github.com/repos/kelemen/JTrim", "Date": "2012-09-15T21:21:28Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gps.canGetLocation()) gps.stopUsingGPS();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3767/buggy-version/app.src.main.java.com.hsbsoftwares.android.app.healthdiagnostic.CameraActivity.java", "BodyUseAPI": ["com.hsbsoftwares.android.app.healthdiagnostic.gps.GPSTracker.stopUsingGPS()"], "Fixed commit": "f5bd897f7d11cb50d2cef740e927de5a2e876967", "Url": "https://api.github.com/repos/harpreet-singh-bola/smartCED", "Date": "2016-02-22T12:10:26Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.ab.popularmovies.Utils.getCurrentSortCriteria(getActivity()).equalsIgnoreCase(getString(R.string.sort_criteria_favorite))) ((com.ab.popularmovies.fragments.DetailFragment.DetailInterface) (getActivity())).removeFragment();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5197/buggy-version/app.src.main.java.com.ab.popularmovies.fragments.DetailFragment.java", "BodyUseAPI": [], "Fixed commit": "15cbcbd3206674beb89a19b87581875e5690f0da", "Url": "https://api.github.com/repos/abhishekab/nd_popular_movies", "Date": "2016-08-10T20:36:06Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getHolder().lockCanvas()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (canvas == null) { android.util.Log.w(com.proto4.protopaja.ui.RoundSlider.TAG, \"renderContents: canvas is null\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8350/buggy-version/app.src.main.java.com.proto4.protopaja.ui.RoundSlider.java", "BodyUseAPI": [], "Fixed commit": "a69c9994be8044e8823c0d87788ff952fa87bc0a", "Url": "https://api.github.com/repos/Panu-Pihkakoski/Protopaja4-Android-sovellus", "Date": "2017-08-23T20:59:13Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.getClassName().equals(t.image)) { errors.add(new parser.ClassNameSameAsScriptException(t).getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6536/buggy-version/src.main.java.parser.JDCParser.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(new parser.ClassNameSameAsScriptException(t).getMessage())", "parser.ClassNameSameAsScriptException.getMessage()"], "Fixed commit": "98e70692288c33e576a9e8da98abe537ed8283f4", "Url": "https://api.github.com/repos/sergutsan/JavaDecaf", "Date": "2015-10-22T16:55:06Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((line.length) > 10) { w.addWikifierFeatures(java.util.Arrays.copyOfRange(line, 10, line.length)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8795/buggy-version/ner.src.main.java.edu.illinois.cs.cogcomp.ner.ParsingProcessingData.ColumnFileReader.java", "BodyUseAPI": ["edu.illinois.cs.cogcomp.ner.LbjTagger.NEWord.addWikifierFeatures(java.lang.String[])", "java.util.Arrays.copyOfRange(java.lang.String[],int,int)"], "Fixed commit": "361ed02a557db17256a2fd0e1d6be48ae8cfc339", "Url": "https://api.github.com/repos/mayhewsw/cogcomp-nlp", "Date": "2016-09-21T17:22:20Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((line.length) > 10) { w.addWikifierFeatures(java.util.Arrays.copyOfRange(line, 10, line.length)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8795/buggy-version/ner.src.main.java.edu.illinois.cs.cogcomp.ner.ParsingProcessingData.ColumnFileReader.java", "BodyUseAPI": ["java.util.Arrays.copyOfRange(java.lang.String[],int,int)", "edu.illinois.cs.cogcomp.ner.LbjTagger.NEWord.addWikifierFeatures(java.lang.String[])"], "Fixed commit": "361ed02a557db17256a2fd0e1d6be48ae8cfc339", "Url": "https://api.github.com/repos/mayhewsw/cogcomp-nlp", "Date": "2016-09-21T17:22:20Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["s3.thisisbetter.model.Event.getOwnerID()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ownerID.equals(s3.thisisbetter.model.DB.getMyUID())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8418/buggy-version/ThisIsBetter.app.src.main.java.s3.thisisbetter.fragments.EventsInvitedFragment.java", "BodyUseAPI": [], "Fixed commit": "0fe515749fb29e5729375bfec0e78e70eb4f8a9e", "Url": "https://api.github.com/repos/chloehale/ThisIsBetter", "Date": "2016-03-21T03:07:03Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getNamedTag()) != null) { for (cn.nukkit.nbt.tag.Tag tag : item.getNamedTag().getAllTags()) { java.lang.System.out.println(tag.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7365/buggy-version/src.main.java.cn.nukkit.block.BlockShulkerBox.java", "BodyUseAPI": ["item.getNamedTag().getAllTags()", "cn.nukkit.item.Item.getNamedTag()"], "Fixed commit": "dff3b851c90ec364d0805cadacea948f4cb4c535", "Url": "https://api.github.com/repos/JupiterDevelopmentTeam/Jupiter", "Date": "2017-07-13T11:30:25Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(stopped)) { locker.wait(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7330/buggy-version/org.erlide.ui.src.org.erlide.ui.internal.search.ErlSearchQuery.java", "BodyUseAPI": [], "Fixed commit": "a90ca1049a852622a2afade05a103b9efed3be39", "Url": "https://api.github.com/repos/vladdu/erlide", "Date": "2013-11-27T10:00:12Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inputLineLength - offset) <= wrapLength) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3714/buggy-version/src.main.java.org.apache.commons.lang3.text.WordUtils.java", "BodyUseAPI": [], "Fixed commit": "de232c50edb95d0b1a28ada28c7475abd346d419", "Url": "https://api.github.com/repos/Andrey-Khobnya/commons-lang", "Date": "2014-04-08T12:15:31Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isPolylineDrawn)) { isPolylineDrawn = true; try { mDrawPolylineCallback.drawPolylineCallback(); } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2920/buggy-version/app.src.main.java.com.shockn745.workoutmotivationaltool.motivation.recyclerview.CardAdapter.java", "BodyUseAPI": [], "Fixed commit": "12e400ae584210e0df14f7a00945deca98b5e6d8", "Url": "https://api.github.com/repos/FlorianKempenich/MoovIn5", "Date": "2015-05-12T19:42:12Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getVariableType().equals(e.getVariableType()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3464/buggy-version/app.src.main.java.com.pvsagar.smartlockscreen.baseclasses.EnvironmentVariable.java", "BodyUseAPI": [], "Fixed commit": "860b708fec32673b7861e5f8dd97f18691c6168e", "Url": "https://api.github.com/repos/aravindsagar/SmartLockScreen", "Date": "2014-09-06T04:49:40Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((world.getBlockState(pos).getBlock()) != (jaredbgreat.dldungeons.builder.DBlock.chest)) { java.lang.System.err.println(((((((\"[DLDUNGEONS] ERROR! Trying to put loot into non-chest at \" + x) + \", \") + y) + \", \") + z) + \" (basic chest).\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7547/buggy-version/java.jaredbgreat.dldungeons.pieces.chests.WeakChest.java", "BodyUseAPI": [], "Fixed commit": "d2019c7ef9b35545629f2deae4336730d562e0e4", "Url": "https://api.github.com/repos/BlackJar72/DoomlikeDungeons", "Date": "2017-03-17T02:36:55Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.obeonetwork.dsl.cinematic.CinematicRoot.getToolkits()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (toolkits.isEmpty()) { org.eclipse.jface.dialogs.MessageDialog.openInformation(org.eclipse.swt.widgets.Display.getDefault().getActiveShell(), org.obeonetwork.dsl.cinematic.design.services.CinematicWidgetServices.CREATE_VIEW_CONTAINER_TITLE, \"No toolkit has been associated yet.\\nPlease use the \\'Associate toolkit\\' tool on the root level.\"); }else { for (org.obeonetwork.dsl.cinematic.toolkits.Toolkit toolkit : toolkits) { for (org.obeonetwork.dsl.cinematic.toolkits.Widget widget : toolkit.getWidgets()) { if (widget.isIsContainer()) { widgetsIsContainer.add(widget); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4926/buggy-version/designs.cinematic.plugins.org.obeonetwork.dsl.cinematic.design.src.org.obeonetwork.dsl.cinematic.design.services.CinematicWidgetServices.java", "BodyUseAPI": [], "Fixed commit": "0c7d690a56c6eace7c6484aa0c46db8a23a03fc4", "Url": "https://api.github.com/repos/ObeoNetwork/InformationSystem", "Date": "2015-03-27T11:11:43Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (capacity < 0) { throw new java.lang.IllegalArgumentException(ua.yandex.prodcons.utilconcurrent.CircularBufferConcurrent.CAPACITY_LESS_THAN_ZERO_MSG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/66/buggy-version/src.main.java.ua.yandex.prodcons.utilconcurrent.CircularBufferConcurrent.java", "BodyUseAPI": [], "Fixed commit": "c1f7ef3d81da5092511800ea25687beeb99966c6", "Url": "https://api.github.com/repos/MrYoman/ys16tymchyshyn-hw1", "Date": "2016-05-06T17:33:59Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.mkdirs()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!noUse) { log.info(java.lang.String.format(\"%s already exists\", file.getParent())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1350/buggy-version/gobblin-modules.google-ingestion.src.main.java.gobblin.ingestion.google.adwords.GoogleAdWordsReportDownloader.java", "BodyUseAPI": [], "Fixed commit": "04a6b0c00c6c7a924bd2724465c90fe84856b714", "Url": "https://api.github.com/repos/enjoyear/gobblin", "Date": "2017-01-27T22:23:37Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.matcher(line).find()) user = p.matcher(line).group(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6113/buggy-version/src.Bot.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)", "java.util.regex.Pattern.matcher(java.lang.String)"], "Fixed commit": "5e803f15185a4965455fea30abaf21a516e3eca6", "Url": "https://api.github.com/repos/Inf3cti0us/IRCbot", "Date": "2013-07-07T10:26:13Z"},
{"Line": "=>704", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((ankiDB != null) && (ankiDB.getDatabase().inTransaction())) { ankiDB.getDatabase().endTransaction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7910/buggy-version/src.com.ichi2.anki.DeckTask.java", "BodyUseAPI": ["com.ichi2.anki.AnkiDb.getDatabase()", "ankiDB.getDatabase().endTransaction()"], "Fixed commit": "802176527ec581f834825644b2796d3e380d3d17", "Url": "https://api.github.com/repos/Blaisorblade/Anki-Android", "Date": "2011-10-14T08:00:56Z"},
{"Line": "=>678", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(form.isFieldBinded(holder, dataFieldHolder.getId()))) addDataFieldHolder(form, holderId, dataFieldHolder.getId(), dataFieldHolder.getClassName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7243/buggy-version/jbpm-form-modeler-core.jbpm-form-modeler-service.jbpm-form-modeler-service-core.src.main.java.org.jbpm.formModeler.core.config.FormManagerImpl.java", "BodyUseAPI": ["org.jbpm.formModeler.core.config.FormManagerImpl.addDataFieldHolder(org.jbpm.formModeler.core.config.Form,java.lang.String,dataFieldHolder.getId(),dataFieldHolder.getClassName())", "org.jbpm.formModeler.core.config.DataFieldHolder.getClassName()", "org.jbpm.formModeler.core.config.DataFieldHolder.getId()"], "Fixed commit": "1cea8a26b174c69c83678acaa5c60944e31a3a36", "Url": "https://api.github.com/repos/droolsjbpm/jbpm-form-modeler", "Date": "2013-08-28T10:11:23Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!((searchTextField.getText().equals(Constants.SEARCH_TEXT_FIELD_EMPTY)) || (searchTextField.getText().equals(\"\")))) && (m == 0)) { tableModel.setNumRows(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2329/buggy-version/src.remotemanager.RemoteManager.java", "BodyUseAPI": [], "Fixed commit": "0fc4d33580efddbe4a95791d7139474fc13d590c", "Url": "https://api.github.com/repos/d1v0id/RemoteManager", "Date": "2014-04-09T05:24:07Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r == 0) throw new java.sql.SQLException(\"affected row = 0\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6522/buggy-version/app.utils.dbUtil.java", "BodyUseAPI": [], "Fixed commit": "778889e93210be9fb9af8695ec341f09e1495bbe", "Url": "https://api.github.com/repos/rway07/lie-docs", "Date": "2016-10-30T18:43:29Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opencps.processmgt.model.ProcessWorkflow.getPostProcessStepId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (changeStepId != 0) { org.opencps.processmgt.model.ProcessStep changeStep = org.opencps.processmgt.service.ProcessStepLocalServiceUtil.getProcessStep(changeStepId); if (com.liferay.portal.kernel.util.Validator.isNotNull(changeStep)) { changeStatus = changeStep.getDossierStatus(); } }else { changeStatus = java.lang.Integer.toString(PortletConstants.DOSSIER_STATUS_DONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1981/buggy-version/portlets.opencps-portlet.docroot.WEB-INF.src.org.opencps.backend.engine.BackOfficeProcessEngine.java", "BodyUseAPI": ["org.opencps.processmgt.service.ProcessStepLocalServiceUtil.getProcessStep(long)"], "Fixed commit": "4c5fdb37470fc223bcbcbc6886bc19cb8b758247", "Url": "https://api.github.com/repos/trungnt-ksnb/opencps", "Date": "2016-06-17T03:32:00Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uz.samtuit.samapp.util.Downloader.resolveEnable(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!enable) { android.widget.Toast.makeText(context, \"DownloadManager is disabled. Please enable it at Applications of Setting Menu\", Toast.LENGTH_LONG).show(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5581/buggy-version/app.src.main.java.uz.samtuit.samapp.util.Downloader.java", "BodyUseAPI": [], "Fixed commit": "d0301e7a72ba6e14adc083d5b082f6452cfdf861", "Url": "https://api.github.com/repos/SamarkandTour/Samapp-mobile", "Date": "2016-04-16T12:56:03Z"},
{"Line": "=>806", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((name.indexOf(\"id=\")) > 0) { tokens[1] = name.substring(((name.indexOf(\"id=\")) + 3), name.indexOf(\" in\")); tokens[2] = name.substring(((name.indexOf(\" in\")) + 3)); }else { tokens[1] = \"\"; tokens[2] = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6645/buggy-version/tda.src.java.com.pironet.tda.SunJDKParser.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "be1979a768c26847a8966156c71e3f698d407801", "Url": "https://api.github.com/repos/irockel/tda", "Date": "2016-07-12T10:33:13Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((errorSum) * (I)) > desiredMaxIoutput) errorSum = desiredMaxIoutput / (I);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7832/buggy-version/src.ch.epfl.leb.alica.controllers.pid.MiniPID.java", "BodyUseAPI": [], "Fixed commit": "e7d6a1e9501e95b0f9f194b5c648735057080f53", "Url": "https://api.github.com/repos/LEB-EPFL/ALICA", "Date": "2017-05-02T17:21:21Z"},
{"Line": "=>791", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.ntnunotif.wsnu.services.general.ServiceUtilities.isValidIpv4Address(ipv4Test)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5731/buggy-version/Services.src.main.java.org.ntnunotif.wsnu.services.general.ServiceUtilities.java", "BodyUseAPI": [], "Fixed commit": "1d25fd6f9238b8f51d72ab12ef498d71ce92bd27", "Url": "https://api.github.com/repos/tOgg1/WS-Nu", "Date": "2014-06-07T11:27:21Z"},
{"Line": "=>530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedType) == 1) selected = getResources().getStringArray(R.array.dog_breeds)[item]; else selected = getResources().getStringArray(R.array.cat_breeds)[item];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8862/buggy-version/app.src.main.java.dylan.com.adoptapet.OptionsSelectFrag.java", "BodyUseAPI": [], "Fixed commit": "31b6f79504ebfac7cf04614780c7a8e3589d0bc2", "Url": "https://api.github.com/repos/drose379/AdoptAPet", "Date": "2015-12-09T23:52:32Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.origin) != null) { requireBuild(input.origin); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7307/buggy-version/org.metaborg.spoofax.meta.core.src.main.java.org.metaborg.spoofax.meta.core.pluto.build.PackSdf.java", "BodyUseAPI": ["org.metaborg.spoofax.meta.core.pluto.build.PackSdf.requireBuild(build.pluto.dependency.Origin)"], "Fixed commit": "01b8c12a0f6811f2059b38399d587633b010c2a7", "Url": "https://api.github.com/repos/metaborg/spoofax", "Date": "2017-07-06T15:04:21Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6581/buggy-version/src.main.java.com.mridang.owninfo.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "b4f253b9fdf7ba7bbb1f54596a7d88c85cb0ce59", "Url": "https://api.github.com/repos/mridang/dashclock-owninfo", "Date": "2015-03-29T09:11:37Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.scai.plato.engine.HandwritingEngineImpl.abstract2writtenTokenIndex(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((wtIndices.size()) > 1) { throw new me.scai.plato.engine.HandwritingEngineException(\"Moving abstract token is not implemented yet\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5804/buggy-version/src.main.java.me.scai.plato.engine.HandwritingEngineImpl.java", "BodyUseAPI": [], "Fixed commit": "2112354a98e1df958338b1c6cfec0c11a8f93b3c", "Url": "https://api.github.com/repos/Glyphoid/math-handwriting-lib", "Date": "2015-12-30T05:01:31Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"remote\".equals(BBConfiguration.configuration.getString(BBConfiguration.DB_TYPE)))) { for (int clusterId : myClass.getClusterIds()) { size += db.getClusterRecordSizeById(clusterId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3766/buggy-version/app.com.baasbox.service.storage.StatisticsService.java", "BodyUseAPI": [], "Fixed commit": "e686c892ba4854b6a94321394a0e39675bfc299d", "Url": "https://api.github.com/repos/engine-turning/baasbox", "Date": "2015-07-24T12:00:05Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hu.rgai.yako.sql.MessageListDAO.getInstance(context).getMessageByRawId(long,java.util.TreeMap<java.lang.Long, hu.rgai.yako.beens.Account>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (mle != null) { android.util.Log.d(\"rgai\", mle.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6727/buggy-version/src.hu.rgai.yako.broadcastreceivers.DeleteIntentBroadcastReceiver.java", "BodyUseAPI": ["hu.rgai.yako.beens.MessageListElement.toString()", "android.util.Log.d(java.lang.String,mle.toString())"], "Fixed commit": "2d41072be360941724479a8b4cb9639ddb928e95", "Url": "https://api.github.com/repos/k-kojak/yako", "Date": "2014-09-08T11:04:45Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Vector<net.codegames.towerninja.Player>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((currentPlayer.getRightSpeed()) > (MIN_SPEED)) && ((tower[i][j]) != null)) { if (tower[i][j].contains(currentPlayer.getRightX(), currentPlayer.getRightY())) { tower[i][j] = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2059/buggy-version/TowerNinja.src.net.codegames.towerninja.Game.java", "BodyUseAPI": ["net.codegames.towerninja.Player.getRightY()", "net.codegames.towerninja.Player.getRightX()", "tower[i][j].contains(currentPlayer.getRightX(),currentPlayer.getRightY())"], "Fixed commit": "b3d16ae89ab737e86f92c6ba6cfe3c15e8ac9607", "Url": "https://api.github.com/repos/chameleonw/towerninja", "Date": "2013-01-15T18:10:51Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (slotRecoveryScheduled.compareAndSet(true, true)) { queuesToRecover.remove(queueName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4193/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.kernel.slot.SlotManagerClusterMode.java", "BodyUseAPI": [], "Fixed commit": "df7785ece5ea2a2c797c77eca4f21cec10b521b5", "Url": "https://api.github.com/repos/hastef88/andes", "Date": "2015-07-08T10:14:23Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSocketAcceptThread) != null) { mSocketAcceptThread.interrupt(); try { mSocketAcceptThread.join(); } catch (java.lang.Exception e) { } mSocketAcceptThread = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/890/buggy-version/src.com.sonycsl.echo.protocol.EchoTCPProtocol.java", "BodyUseAPI": [], "Fixed commit": "4d5a613b06ee7627cf45517357746c30e50e18b0", "Url": "https://api.github.com/repos/SonyCSL/OpenECHO", "Date": "2014-06-27T06:42:30Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (args != null) { addAll(java.util.Arrays.asList(args)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1031/buggy-version/src.main.java.com.github.nkzawa.socketio.client.Socket.java", "BodyUseAPI": ["1.addAll(java.util.List<java.lang.Object>)", "java.util.Arrays.asList(java.lang.Object[])"], "Fixed commit": "40a13b7882f7a6a0c0b975f4d5aa9d71792b0855", "Url": "https://api.github.com/repos/nkzawa/socket.io-client.java", "Date": "2013-05-19T18:03:36Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((b1 == 1) && (b2 == 1)) { setPassive(); vars[n].instantiateTo(1, this); }else if (bn == 0) { if (b1 == 1) { vars[x2].instantiateTo(0, this); }else if (b2 == 1) { vars[x1].instantiateTo(0, this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8180/buggy-version/src.main.java.org.chocosolver.solver.constraints.nary.min_max.PropBoolMin.java", "BodyUseAPI": [], "Fixed commit": "9f48750b5bd8f06f1989204818e6eace9925ffdc", "Url": "https://api.github.com/repos/kaktus40/choco3", "Date": "2017-06-27T07:35:27Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((b1 == 0) && (b2 == 0)) { setPassive(); vars[n].instantiateTo(0, this); }else if (bn == 1) { if (b1 == 0) { vars[x2].instantiateTo(1, this); }else if (b2 == 0) { vars[x1].instantiateTo(1, this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8180/buggy-version/src.main.java.org.chocosolver.solver.constraints.nary.min_max.PropBoolMax.java", "BodyUseAPI": [], "Fixed commit": "9f48750b5bd8f06f1989204818e6eace9925ffdc", "Url": "https://api.github.com/repos/kaktus40/choco3", "Date": "2017-06-27T07:35:27Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPort()) == 80) setPort(443);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5980/buggy-version/core.src.main.java.com.predic8.membrane.core.rules.AbstractServiceProxy.java", "BodyUseAPI": [], "Fixed commit": "81f9d9d1d7fbad8a73d76c882d380d950d06a095", "Url": "https://api.github.com/repos/membrane/service-proxy", "Date": "2015-12-22T12:50:41Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.LinearLayout.findViewById(R.id.add_dialog_ip3)", "android.widget.LinearLayout.findViewById(R.id.add_dialog_ip4)", "android.widget.LinearLayout.findViewById(R.id.add_dialog_ip2)", "android.widget.LinearLayout.findViewById(R.id.add_dialog_count)", "android.widget.LinearLayout.findViewById(R.id.add_dialog_title)", "android.widget.LinearLayout.findViewById(R.id.add_dialog_ip1)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((((Title.getText().length()) == 0) || ((ip1.getText().length()) == 0)) || ((ip2.getText().length()) == 0)) || ((ip3.getText().length()) == 0)) || ((ip4.getText().length()) == 0)) || ((count.getText().length()) == 0)) { AddDialog(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3089/buggy-version/src.com.proinlab.checkingip.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "87ba4d353e6ed7efb9c265c191f5ba592447c67c", "Url": "https://api.github.com/repos/proin/CheckingIP", "Date": "2013-01-23T16:31:07Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((state.getBlock()) instanceof zmaster587.libVulpes.block.BlockOre) { zmaster587.libVulpes.api.material.Material mat = ((zmaster587.libVulpes.block.BlockOre) (state.getBlock())).ores[meta]; if (mat != null) return mat.getColor(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2937/buggy-version/src.main.java.zmaster587.libVulpes.util.OreProductColorizer.java", "BodyUseAPI": ["net.minecraft.block.state.IBlockState.getBlock()"], "Fixed commit": "874f0d783e405bb6b1f15a8bebd4ecbd7436a5b5", "Url": "https://api.github.com/repos/zmaster587/libVulpes", "Date": "2017-05-23T18:55:06Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((max_id) == null) || (((apiResponse.getMax_id()) != null) && ((java.lang.Long.parseLong(max_id)) > (java.lang.Long.parseLong(apiResponse.getMax_id()))))) max_id = apiResponse.getMax_id();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1374/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.fragments.DisplayStatusFragment.java", "BodyUseAPI": ["fr.gouv.etalab.mastodon.client.APIResponse.getMax_id()"], "Fixed commit": "0cf244dafdab78050f4f9965c30ca34793b16e93", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-12-09T08:45:39Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["woodstore.controller.ProductService.findByTitle(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (storedProduct == null) { redirectAttributes.addFlashAttribute(\"formInputError\", \"\u041d\u0430 \u0441\u043a\u043b\u0430\u0434\u0435 \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435\u0442 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u043e\u0432\u0430\u0440\u0430\"); return \"redirect:/workday\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2521/buggy-version/src.main.java.woodstore.controller.UserAccessController.java", "BodyUseAPI": [], "Fixed commit": "a9ba981c5362a91d5768271d8c10087e2ba4ecd2", "Url": "https://api.github.com/repos/victorartemov/wood-store", "Date": "2017-03-30T09:02:10Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["woodstore.controller.ProductService.findByTitle(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (storedProduct == null) { redirectAttributes.addFlashAttribute(\"formInputError\", \"\u041d\u0430 \u0441\u043a\u043b\u0430\u0434\u0435 \u043d\u0435\u0442 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u043e\u0432\u0430\u0440\u0430\"); return \"redirect:/shipmentout\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2521/buggy-version/src.main.java.woodstore.controller.UserAccessController.java", "BodyUseAPI": [], "Fixed commit": "a9ba981c5362a91d5768271d8c10087e2ba4ecd2", "Url": "https://api.github.com/repos/victorartemov/wood-store", "Date": "2017-03-30T09:02:10Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.enhorse.imageio.ColorSpace.get(new us.enhorse.imageio.TiffImageProperty(image.getField(TiffTag.PHOTOMETRIC_INTERPRETATION)).getDataAsInt())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((result == (ColorSpace.BITMAP)) && ((getColorDepth()) == 8)) { result = ColorSpace.GRAYSCALE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/746/buggy-version/src.main.java.us.enhorse.imageio.TiffImage.java", "BodyUseAPI": [], "Fixed commit": "661c8056007e84e4ad0d3a4f88bb42fa1f01839a", "Url": "https://api.github.com/repos/enhorse/LFP-parser", "Date": "2015-09-03T10:59:07Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cursor >= len) { return format; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3204/buggy-version/org.eclipse.sisu.inject.src.org.eclipse.sisu.inject.Logs.java", "BodyUseAPI": [], "Fixed commit": "4bc43699b4eaab4876b68bcf8c7d8a0fb3945c83", "Url": "https://api.github.com/repos/mcculls/sisu.inject", "Date": "2014-04-07T14:51:06Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((1 + ((exact.minute) / 10)) == 6) { hourString = convertHourToWord(((exact.hour) + 1)); }else { hourString = convertHourToWord(exact.hour); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5065/buggy-version/wear.src.main.java.com.lackbeard.capn.ish.IshService.java", "BodyUseAPI": ["com.lackbeard.capn.ish.IshService.Engine.convertHourToWord(((exact.hour) + 1))", "com.lackbeard.capn.ish.IshService.Engine.convertHourToWord(exact.hour)"], "Fixed commit": "7c1cb35c44b5cfa30358a51abc686ed4923520bc", "Url": "https://api.github.com/repos/Raenn/Ish", "Date": "2015-04-28T20:21:09Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c1 == null) ^ (c2 == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8519/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.util.ui.colourpicker.ColourPickerUtil.java", "BodyUseAPI": [], "Fixed commit": "6e09e98609a666af10cbb1f60e74acb6861804d5", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2017-06-29T14:24:28Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.openmicroscopy.shoola.util.CommonsLangUtils.isNotEmpty(model.getLUT())) fireChangeEvent(PaintPotUI.LUT_PROPERTY); else fireChangeEvent(PaintPotUI.COLOUR_CHANGED_PROPERTY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8519/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.util.ui.colourpicker.RGBControl.java", "BodyUseAPI": [], "Fixed commit": "6e09e98609a666af10cbb1f60e74acb6861804d5", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2017-06-29T14:24:28Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showFlag) { java.lang.System.out.println((\"Look groups\" + (groups.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8463/buggy-version/src.chs.daihinmin.TeamGAI.base.PatternMake.java", "BodyUseAPI": [], "Fixed commit": "f201f6ffa9b91190f63c1dbff32d872c9ec3a0d7", "Url": "https://api.github.com/repos/akkith/d-Drunk", "Date": "2016-10-16T16:54:21Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.gradeRepo.findByAcademicClassClassID(classID).size()) != 0) { this.gradeRepo.deleteClass(classID); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/634/buggy-version/src.main.java.com.andrewrnagel.objgrader.service.MainService.java", "BodyUseAPI": ["com.andrewrnagel.objgrader.service.GradeRepo.deleteClass(java.lang.Integer)"], "Fixed commit": "c0df3bee1f55b3ebc3f5c99fbaafb23c4018f367", "Url": "https://api.github.com/repos/turboska5/tiy-final-project", "Date": "2016-10-19T18:50:45Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item instanceof hudson.model.AbstractProject) { if (isSystemExitInPublisher(((hudson.model.AbstractProject) (item)).getPublishersList())) { found = true; } if ((((hudson.model.AbstractProject) (item)).getProperty(hudson.model.ParametersDefinitionProperty.class)) != null) { if (isSystemExitInParameters(((hudson.model.ParametersDefinitionProperty) (((hudson.model.AbstractProject) (item)).getProperty(hudson.model.ParametersDefinitionProperty.class))).getParameterDefinitions())) { found = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6749/buggy-version/src.main.java.org.jenkins.ci.plugins.jenkinslint.check.GroovySystemExitChecker.java", "BodyUseAPI": [], "Fixed commit": "de5c864b4bab33f60588107cd102132bd225f275", "Url": "https://api.github.com/repos/jenkinsci/jenkinslint-plugin", "Date": "2017-08-12T22:04:55Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.getString(\"contact_number\")) != null) { contact_number = java.lang.Integer.parseInt(result.getString(\"contact_number\")); }else { contact_number = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3823/buggy-version/Muffins.src.java.DAO.UserDAO.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "6eadb83683ac8cb257410994decaff54914f6dee", "Url": "https://api.github.com/repos/jngadiman/IS480-IIE", "Date": "2017-10-09T07:49:55Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((group.getPlacementPolicies()) != null) { java.util.List<com.vmware.bdd.apitypes.NodeGroup.PlacementPolicy.GroupAssociation> associations = group.getPlacementPolicies().getGroupAssociations(); if ((associations != null) && (associations.isEmpty())) { group.getPlacementPolicies().setGroupAssociations(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8623/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.manager.ClusterManager.java", "BodyUseAPI": ["com.vmware.bdd.apitypes.NodeGroupCreate.getPlacementPolicies()", "com.vmware.bdd.apitypes.NodeGroupCreate.getPlacementPolicies()", "group.getPlacementPolicies().setGroupAssociations(<nulltype>)", "group.getPlacementPolicies().getGroupAssociations()"], "Fixed commit": "d28ca2e0c9fc6809fbc6826e2043335a103a639b", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-05-09T05:05:10Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_uiHandler) instanceof com.idevicesinc.sweetblue.P_SweetBlueThread) { ((com.idevicesinc.sweetblue.P_SweetBlueThread) (m_uiHandler)).quit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8633/buggy-version/app.src.main.java.com.idevicesinc.sweetblue.P_PostManager.java", "BodyUseAPI": [], "Fixed commit": "4e20aec4631e07c867b35c651cb1b696a050c54f", "Url": "https://api.github.com/repos/iDevicesInc/SweetBlue", "Date": "2017-01-31T19:08:16Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (prop != null) return prop;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8812/buggy-version/c3po-core.src.main.java.com.petpet.c3po.utils.ContentTypeMapping.java", "BodyUseAPI": [], "Fixed commit": "1886ea77080817182d882a6fe187bffc647d7544", "Url": "https://api.github.com/repos/datascience/c3po", "Date": "2016-03-08T12:44:22Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (balance.equals(\"\")) { balance = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3260/buggy-version/src.banking.gui.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "1fb06e03e3391b195c3bba50c60d565e0f0b2bf5", "Url": "https://api.github.com/repos/jpelder/ser316labcr", "Date": "2017-02-17T21:02:17Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((balanceField.getText().equals(\"\")) && (balance.equals(\"0\"))) { javax.swing.JOptionPane.showMessageDialog(null, \"Account not created!\"); }else { if (myServer.newAccount(type, name, java.lang.Float.parseFloat(balance))) { javax.swing.JOptionPane.showMessageDialog(null, \"Account created successfully\"); }else { javax.swing.JOptionPane.showMessageDialog(null, \"Account not created!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3260/buggy-version/src.banking.gui.MainFrame.java", "BodyUseAPI": ["java.lang.Float.parseFloat(java.lang.String)", "banking.primitive.core.AccountServer.newAccount(java.lang.String,java.lang.String,float)"], "Fixed commit": "1fb06e03e3391b195c3bba50c60d565e0f0b2bf5", "Url": "https://api.github.com/repos/jpelder/ser316labcr", "Date": "2017-02-17T21:02:17Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myobj.unblockedUnixTime) != null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4541/buggy-version/app.src.main.java.model.NumberList.java", "BodyUseAPI": [], "Fixed commit": "f58eb0f3184e1a49feb3fcaf00f04b7d48a8bbec", "Url": "https://api.github.com/repos/mountin/blacklist2", "Date": "2015-07-02T12:58:21Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldTick()) { (currenTick)++; if ((currenTick) > (getUpdateTickRate())) { sendUpdate(); currenTick = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4824/buggy-version/src.main.java.com.creativemd.creativecore.gui.premade.SubContainerTileEntity.java", "BodyUseAPI": [], "Fixed commit": "cf0232c85ac3a45b40019e131e430f7f4b2ef6ff", "Url": "https://api.github.com/repos/CreativeMD/CreativeCore", "Date": "2016-07-28T23:18:07Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value == obj) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5617/buggy-version/android.src.com.frostwire.android.util.Debug.java", "BodyUseAPI": [], "Fixed commit": "41869b96948a1c22e6fda3efa42f6029b0b00523", "Url": "https://api.github.com/repos/frostwire/frostwire", "Date": "2017-10-26T18:35:03Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.game.Game.getObject(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sourceObject instanceof mage.game.stack.Spell) { if (fromZone.equals(Zone.EXILED)) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6484/buggy-version/Mage.src.mage.abilities.effects.AuraReplacementEffect.java", "BodyUseAPI": [], "Fixed commit": "f77e709f6b063c8c1c35bd2e0dba7876a2cf404a", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-04-06T22:03:41Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files != null) { for (java.io.File child : files) { if (!(org.unfoldingword.resourcecontainer.FileUtil.deleteQuietly(child))) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6698/buggy-version/resource-container.src.main.java.org.unfoldingword.resourcecontainer.FileUtil.java", "BodyUseAPI": [], "Fixed commit": "d6ebb6f2562a63e577847acf4496e44ef2af9c45", "Url": "https://api.github.com/repos/unfoldingWord-dev/android-resource-container", "Date": "2017-03-23T22:09:14Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.id) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2306/buggy-version/app.src.main.java.com.pbylicki.cookbook.BrowseActivity.java", "BodyUseAPI": [], "Fixed commit": "70d8fea292ca0f3447b9c3a39d2c34b435eaf264", "Url": "https://api.github.com/repos/pantikapajon/Cookbook", "Date": "2015-01-22T01:21:13Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(defaultNamingService.isValidIdentifier(nameTextField.getText()))) { setErrorMessage(\"Package cannot be an AADL identifier\"); return false; }else if (nameTextField.getText().endsWith(\":\")) { setErrorMessage(\"Package path must end with an identifier.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/583/buggy-version/org.osate.ge.src.org.osate.ge.wizards.NewPackageWizard.java", "BodyUseAPI": ["nameTextField.getText().endsWith(java.lang.String)", "org.eclipse.swt.widgets.Text.getText()"], "Fixed commit": "5cefa48f4c015603730774af940eddc607b660ea", "Url": "https://api.github.com/repos/osate/osate-ge", "Date": "2015-07-22T17:58:32Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pony.epidroid.activity.LoginActivity.1.getCurrentFocus()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (view != null) { android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (getSystemService(Context.INPUT_METHOD_SERVICE))); imm.hideSoftInputFromWindow(view.getWindowToken(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/9178/buggy-version/app.src.main.java.com.pony.epidroid.activity.LoginActivity.java", "BodyUseAPI": ["android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(view.getWindowToken(),int)", "android.view.View.getWindowToken()"], "Fixed commit": "d45a79935084bc69f175cce147579a7bb9e48001", "Url": "https://api.github.com/repos/kassisdion/Epidroid", "Date": "2015-09-05T08:08:29Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (globalKeyGet == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/681/buggy-version/idmapping_open_api.src.main.java.com.iflytek.cloudplatform.dmp.idmapping.IDMappingClient2.java", "BodyUseAPI": [], "Fixed commit": "2b6b88cc177b607c9f5fd78f6d8c35c606ea5672", "Url": "https://api.github.com/repos/q313316432/id-mapping", "Date": "2016-12-09T01:41:42Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.honeypot.honeypot.FirstLaunchActivity.nameField.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (name.equals(\"\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3330/buggy-version/Honeypot.app.src.main.java.de.honeypot.honeypot.FirstLaunchActivity.java", "BodyUseAPI": [], "Fixed commit": "17cdc48d4fca73cedd97179e655e6b3816eecaef", "Url": "https://api.github.com/repos/umatin/HoneyPot404", "Date": "2016-11-12T17:30:19Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (currentlyEditedLocation)) originalLocationName = \"\"; else originalLocationName = currentlyEditedLocation.getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/319/buggy-version/Localizer3000.src.pl.papistudio.localizer3000.EditLocationActivity.java", "BodyUseAPI": [], "Fixed commit": "ccf716de08a3e928846aa2bdf1741095dfda51e8", "Url": "https://api.github.com/repos/Waszker/Localizer3000", "Date": "2015-06-11T16:32:30Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.postech.isb.IsbTabWidget.getTabHost()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tabHost.getCurrentTab()) != 1) tabHost.setCurrentTab(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/412/buggy-version/app.src.main.java.com.postech.isb.IsbTabWidget.java", "BodyUseAPI": ["android.widget.TabHost.setCurrentTab(int)"], "Fixed commit": "e92ee343c0e6c6c9cd0314d4adea5bd1d8feba91", "Url": "https://api.github.com/repos/clover3/isb", "Date": "2017-10-01T07:20:55Z"},
{"Line": "=>655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((depth == 0) && (!fullyQualified)) return new java.lang.String[]{ getIdentifier() };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1464/buggy-version/cascading-hadoop.src.main.shared.cascading.tap.hadoop.Hfs.java", "BodyUseAPI": [], "Fixed commit": "9dbc7437a064b25b91f9e3cc8c3e16fbcfedd6be", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2014-04-24T20:22:26Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cascading.tap.hadoop.Hfs.getIdentifier()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((identifier == null) || (identifier.isEmpty())) results.add(new org.apache.hadoop.fs.Path(substring).toString()); else results.add(new org.apache.hadoop.fs.Path(identifier, substring).toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1464/buggy-version/cascading-hadoop.src.main.shared.cascading.tap.hadoop.Hfs.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(new org.apache.hadoop.fs.Path(identifier, substring).toString())", "org.apache.hadoop.fs.Path.toString()"], "Fixed commit": "9dbc7437a064b25b91f9e3cc8c3e16fbcfedd6be", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2014-04-24T20:22:26Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!design) { pathToFile = new java.io.File(ch.bfh.projekt1.sokoban.Floor.getImagePath()); }else { pathToFile = new java.io.File(ch.bfh.projekt1.sokoban.Floor.getImagePathDesign()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5189/buggy-version/src.main.java.ch.bfh.projekt1.sokoban.Floor.java", "BodyUseAPI": [], "Fixed commit": "5b5f5e19827095ebea33707d9c3de607f2c864b3", "Url": "https://api.github.com/repos/schne5/ch.bfh.projekt1.sokoban", "Date": "2016-12-14T18:28:27Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (messageContext.side.isServer()) { super.handleMessage(message, messageContext); }else { net.ilexiconn.llibrary.client.ClientProxy.MINECRAFT.addScheduledTask(() -> message.onClientReceived(net.ilexiconn.llibrary.client.ClientProxy.MINECRAFT, message, MINECRAFT.thePlayer, messageContext)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8860/buggy-version/src.main.java.net.ilexiconn.llibrary.client.ClientProxy.java", "BodyUseAPI": ["net.ilexiconn.llibrary.server.ServerProxy.handleMessage(MESSAGE,net.minecraftforge.fml.common.network.simpleimpl.MessageContext)", "net.minecraft.client.Minecraft.addScheduledTask(() -> message.onClientReceived(net.ilexiconn.llibrary.client.ClientProxy.MINECRAFT, message, MINECRAFT.thePlayer, messageContext))", "message.onClientReceived(net.minecraft.client.Minecraft,message,MINECRAFT.thePlayer,messageContext)"], "Fixed commit": "7324db9b27e7dd53b184e3bca5fc579d24f9489f", "Url": "https://api.github.com/repos/iLexiconn/LLibrary", "Date": "2016-03-21T14:45:13Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (resolver == null) { resolver = com.fasterxml.jackson.annotation.SimpleObjectIdResolver.class; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6970/buggy-version/src.main.java.com.fasterxml.jackson.databind.introspect.ObjectIdInfo.java", "BodyUseAPI": [], "Fixed commit": "31046673464b6ec6033e8ecd734bb63b7bd82ff9", "Url": "https://api.github.com/repos/leusonmario/jackson-databind", "Date": "2014-03-28T20:19:39Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((theList.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2686/buggy-version/src.main.java.randoop.util.WeightedList.java", "BodyUseAPI": [], "Fixed commit": "cb81f0c7cb928cbb13252fa2e26a5595df2837bf", "Url": "https://api.github.com/repos/jkotalik/randoop", "Date": "2017-01-29T03:39:26Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (searchView.getQuery().toString().isEmpty()) { android.widget.Toast.makeText(context, \"Can't search with an empty value\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3745/buggy-version/app.src.main.java.ben.omdb.SearchFragment.java", "BodyUseAPI": [], "Fixed commit": "5ded6dfd602b055d0ff0b1204989d205d8701ac5", "Url": "https://api.github.com/repos/benolo/OMDB", "Date": "2015-12-05T23:44:28Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["subject.getSession().getAttribute(\"email\").toString()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (email != null) { java.util.Optional<com.cidic.design.model.User> user = userServiceImpl.findByEmail(email); modelView.addObject(user.get()); modelView.setViewName(\"/frontend/resetInfo\"); }else { modelView.setViewName(\"/frontend/login\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2116/buggy-version/src.main.java.com.cidic.design.controller.UserController.java", "BodyUseAPI": ["com.cidic.design.service.UserService.findByEmail(java.lang.String)"], "Fixed commit": "c85cd8986f479704b314dd27facb59114ca021aa", "Url": "https://api.github.com/repos/zyhndesign/DesignCompetition", "Date": "2017-05-18T01:54:49Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.exists())) { return list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5989/buggy-version/JSONFileUtil.java", "BodyUseAPI": [], "Fixed commit": "38e629196d784f32b5e810034c752bd55d0a89ce", "Url": "https://api.github.com/repos/lanffy/DBCompare", "Date": "2014-11-24T12:19:57Z"},
{"Line": "=>2666", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.pyramus.rest.controller.StudentController.findStudentById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(restSecurity.hasPermission(new java.lang.String[]{ fi.pyramus.rest.controller.permissions.StudentPermissions.LIST_STUDENTCONTACTURLS }, student))) && (!(restSecurity.hasPermission(new java.lang.String[]{ fi.pyramus.rest.controller.permissions.PersonPermissions.PERSON_OWNER }, student.getPerson())))) { return javax.ws.rs.core.Response.status(Status.FORBIDDEN).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5113/buggy-version/rest.src.main.java.fi.pyramus.rest.StudentRESTService.java", "BodyUseAPI": [], "Fixed commit": "ef117ec9f20f46f7f15704fe5526f28793a708c8", "Url": "https://api.github.com/repos/otavanopisto/pyramus", "Date": "2015-11-25T10:29:11Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (remoteControl != null) { android.graphics.Bitmap origBitmap = ((android.graphics.drawable.BitmapDrawable) (drawable)).getBitmap(); remoteControl.editMetadata(false).putBitmap(RemoteControlClient.MetadataEditor.BITMAP_KEY_ARTWORK, origBitmap.copy(origBitmap.getConfig(), true)).apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2794/buggy-version/subsonic-android.src.github.daneren2005.dsub.util.ImageLoader.java", "BodyUseAPI": ["remoteControl.editMetadata(false).putBitmap(RemoteControlClient.MetadataEditor.BITMAP_KEY_ARTWORK,origBitmap.copy(origBitmap.getConfig(), true))", "remoteControl.editMetadata(false).putBitmap(RemoteControlClient.MetadataEditor.BITMAP_KEY_ARTWORK, origBitmap.copy(origBitmap.getConfig(), true)).apply()", "android.media.RemoteControlClient.editMetadata(boolean)"], "Fixed commit": "5856d765d8216a6eceb613ae0d70fc3e9273b193", "Url": "https://api.github.com/repos/daneren2005/Subsonic", "Date": "2012-10-28T21:51:12Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (elto.contains(\"'\")) { sb.append(elto).append(\", \"); }else { sb.append(\"'\").append(elto).append(\"'\").append(\", \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1622/buggy-version/meta-core.src.main.java.com.stratio.meta.core.utils.ParserUtils.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "e66f90618a9564fbc09819c028fdf89cf24b498a", "Url": "https://api.github.com/repos/Stratio/stratio-meta", "Date": "2014-05-14T13:40:08Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["orwell.proxy.TankDeltaState.getAndClearServerRobotState()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != srs) return srs.toByteArray(); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6455/buggy-version/proxy-robots-module.src.main.java.orwell.proxy.Tank.java", "BodyUseAPI": ["orwell.messages.Robot.ServerRobotState.toByteArray()"], "Fixed commit": "663e13facb746da4dc6f3034b266b70e4438c470", "Url": "https://api.github.com/repos/miludmann/proxy-robots", "Date": "2015-04-12T13:22:03Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x < 0) || (y < 0)) { java.lang.System.out.println(\"invalid input\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8793/buggy-version/src.main.java.Main.java", "BodyUseAPI": [], "Fixed commit": "19a0a51596aa8c076ac3c4d2198febec45bf0cfd", "Url": "https://api.github.com/repos/khoshraftar/NimboProj1.2", "Date": "2017-08-01T05:57:19Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedTextField) != (-1)) { if (key == 200) { guiTextFields[selectedTextField].setFocused(false); selectedTextField = (((selectedTextField) - 1) < 0) ? 3 : (selectedTextField) - 1; guiTextFields[selectedTextField].setFocused(true); } if (((key == 208) || (key == 28)) || (key == 156)) { guiTextFields[selectedTextField].setFocused(false); selectedTextField = (((selectedTextField) + 1) > 3) ? 0 : (selectedTextField) + 1; guiTextFields[selectedTextField].setFocused(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8988/buggy-version/src.main.java.gory_moon.moarsigns.client.interfaces.sign.GuiMoarSign.java", "BodyUseAPI": [], "Fixed commit": "dbf36f8b7d4cdc399a4be09ee94a54f3bfc18e70", "Url": "https://api.github.com/repos/GoryMoon/MoarSigns", "Date": "2016-09-25T19:27:29Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((database) != null) { org.wisdom.jongo.bridge.JongoRepository.LOGGER.info(\"Stopping Jongo Repository for {}\", database.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5153/buggy-version/src.main.java.org.wisdom.jongo.bridge.JongoRepository.java", "BodyUseAPI": [], "Fixed commit": "12febe395456da09a338f099baef8fae8b123015", "Url": "https://api.github.com/repos/wisdom-framework/wisdom-jongo-support", "Date": "2015-05-05T09:48:43Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (previewText.contains(\"\\n\")) { android.util.Log.d(\"containN\", previewText); previewText = previewText.replaceAll(\"\\n\", \" \"); android.util.Log.d(\"removeN\", previewText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2499/buggy-version/app.src.main.java.com.example.cheahhong.chatapp.MainActivity.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)"], "Fixed commit": "67c1f80072a9b0b33c80b62f208c836732e51c8b", "Url": "https://api.github.com/repos/jiahong96/Final-Year-Project-KuchingBearings", "Date": "2017-09-02T08:32:40Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showDefaultColumn) { configureDefaultColumn(tableViewerCreator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1478/buggy-version/main.plugins.org.talend.core.ui.src.main.java.org.talend.core.ui.metadata.editor.AbstractMetadataTableEditorView.java", "BodyUseAPI": [], "Fixed commit": "b6b135110b10da32e2acbf5c47c78b79f04d9436", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2015-01-23T10:57:21Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().managedQuery(EpisodeProvider.CONTENT_URI,Episode.projection,(((((((((((((((((((calendarDATESQL + \" AND (\") + (com.banan.providers.DBHelper.EPISODE_ANIME_ID_COL)) + \" IN(\") + \"SELECT DISTINCT \") + (com.banan.providers.DBHelper.EPISODE_ANIME_ID_COL)) + \" FROM \") + (com.banan.providers.DBHelper.EPISODE_TABLE)) + \" WHERE \") + (com.banan.providers.DBHelper.EPISODE_SEEN_COL)) + \" IS NOT NULL\") + \") OR \") + (com.banan.providers.DBHelper.EPISODE_ANIME_ID_COL)) + \" IN(SELECT \") + (com.banan.providers.DBHelper.ANIME_ID)) + \" FROM \") + (com.banan.providers.DBHelper.ANIME_TABLE)) + \" WHERE \") + (com.banan.providers.DBHelper.ANIME_WATCHLIST)) + \" IS NOT NULL))\"),<nulltype>,((com.banan.providers.DBHelper.EPISODE_AIRED_COL) + \" ASC\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((episodes.getCount()) == 0) return v;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2711/buggy-version/uranime.src.com.banan.fragments.CalendarFragment.java", "BodyUseAPI": [], "Fixed commit": "b230467ac79359eb1cce2402298dcd78be3a5b68", "Url": "https://api.github.com/repos/groenlid/Uranime-mobile", "Date": "2012-07-10T22:48:46Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEnabled)) lastStatus = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3615/buggy-version/app.src.main.java.samuelpalmer.sensorautorotation.processes.ui.dashboard.DashboardView.java", "BodyUseAPI": [], "Fixed commit": "034fd9d67412f3a6ca69fb1c106055559d51b0a9", "Url": "https://api.github.com/repos/sampalmer/sideways-mode", "Date": "2017-04-09T03:32:01Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.entirej.framework.core.EJForm.getBlock(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (block == null) { throw new org.entirej.framework.core.EJApplicationException(new org.entirej.framework.core.EJMessage(form, (((((\"Trying to retrieve a default value from a Block.Item value: \" + blockName) + \".\") + itemName) + \", but there is not a block with the given name within this form: \") + (form.getProperties().getName())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5046/buggy-version/entirej-core.src.org.entirej.framework.core.common.utils.EJDataHelper.java", "BodyUseAPI": [], "Fixed commit": "9a925955315ee79a4b39a00b596bc5ad5088a2c1", "Url": "https://api.github.com/repos/entirej/core", "Date": "2015-03-25T17:23:00Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mainPreferences.getProperty(\"Support\")) == null) { mainPreferences.setProperty(\"Support\", \"false\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4268/buggy-version/slicer.src.main.java.org.reprap.configuration.Preferences.java", "BodyUseAPI": [], "Fixed commit": "b9f818d547f9b4757fe85326e26c3d935fff35a9", "Url": "https://api.github.com/repos/holgero/RepRapProSlicer", "Date": "2013-05-01T21:56:33Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDownloadUrl) != null) driverPhotoUrlText = mDownloadUrl.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/706/buggy-version/database.app.src.main.java.com.google.firebase.quickstart.database.OrderDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "ccb709e55f0b57c78d250cb9304c00c3f3072041", "Url": "https://api.github.com/repos/Shoulderapps/warehouse_database", "Date": "2017-11-23T08:49:54Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resource == null) { throw new java.lang.IllegalArgumentException((((\"Could not find template \" + templateFileName) + \" for @Templated class \") + (templatedAnnotatedClass.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5186/buggy-version/errai-ui.src.main.java.org.jboss.errai.ui.rebind.TranslationServiceGenerator.java", "BodyUseAPI": [], "Fixed commit": "3f052262675d771dd087119c9e493430c393615e", "Url": "https://api.github.com/repos/csadilek/errai", "Date": "2013-11-22T18:23:36Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.planeDimension.getNormalSeats().length) == 0) { return this.randomisedPrioritySeats; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3727/buggy-version/src.projectboarding.SeatingMethod.java", "BodyUseAPI": [], "Fixed commit": "67df114ed0093f88a2485b4c6ed275f01c5d0442", "Url": "https://api.github.com/repos/VirginAir/Project-Boarding", "Date": "2014-12-01T18:11:55Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["projectboarding.PlaneDimension.getNumberOfNormalRows()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((this.numberOfRowsPerBlock) > numberOfRows) { this.numberOfRowsPerBlock = numberOfRows; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3727/buggy-version/src.projectboarding.SeatingMethod.java", "BodyUseAPI": [], "Fixed commit": "67df114ed0093f88a2485b4c6ed275f01c5d0442", "Url": "https://api.github.com/repos/VirginAir/Project-Boarding", "Date": "2014-12-01T18:11:55Z"},
{"Line": "=>1187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((calAnimationStartDate) == null) { calAnimationStartDate = java.util.Calendar.getInstance(); calAnimationStartDate.set(java.util.Calendar.HOUR_OF_DAY, 0); calAnimationStartDate.set(java.util.Calendar.MINUTE, 0); calAnimationStartDate.set(java.util.Calendar.SECOND, 0); animationDurationInMillis = ((1000 * 60) * 60) * 24; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6490/buggy-version/src.ca.cumulonimbus.barometernetwork.BarometerNetworkActivity.java", "BodyUseAPI": [], "Fixed commit": "410ff411d46ca415dff44a93a62fec019a2c0ad9", "Url": "https://api.github.com/repos/Cbsoftware/pressureNET", "Date": "2014-01-02T19:21:43Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aptivate.web.controls.ReadOnlyField.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/753/buggy-version/src.org.aptivate.web.controls.ReadOnlyField.java", "BodyUseAPI": [], "Fixed commit": "9318c4d82a7afb3b639d03b7883982abe335b560", "Url": "https://api.github.com/repos/aptivate/webutils", "Date": "2016-12-08T11:19:50Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(view.isRequisitionDataSynced())) { syncRequisitionData(); }else { goToNextPage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6797/buggy-version/app.src.main.java.org.openlmis.core.presenter.LoginPresenter.java", "BodyUseAPI": [], "Fixed commit": "7d9c58f10b048141d8b6037e4e0b5b72f8bfedd4", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2015-12-11T05:52:23Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Dungeon.hero.isAlive())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5272/buggy-version/core.src.com.shatteredpixel.shatteredpixeldungeon.ui.QuickSlotButton.java", "BodyUseAPI": [], "Fixed commit": "b6f0a6cfaebbe83aa9660ac16a217f5f00d0adb7", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon-gdx", "Date": "2015-03-03T02:09:42Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTxActive()) return entity; else return pm.detachCopy(entity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/363/buggy-version/src.main.java.com.pratilipi.data.DataAccessorGaeImpl.java", "BodyUseAPI": [], "Fixed commit": "62fe424be7a79295951c9317a12d7d6c754f3ff2", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-07-25T16:25:48Z"},
{"Line": "=>1065", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"BSL\".equals(id)) longName = \"Broad Street Line\"; else if (\"MFL\".equals(id)) longName = \"Market Frankfor d Line\"; else if (\"BSO\".equals(id)) longName = \"Broad Street Overnight\"; else if (\"MFO\".equals(id)) longName = \"Market Frankford Overnight\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1429/buggy-version/app.src.main.java.org.septa.android.app.database.DatabaseManager.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "672970b4459a465521313fa34f7e5f2338d2b806", "Url": "https://api.github.com/repos/septadev/SEPTA-Android", "Date": "2017-09-19T19:03:45Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ResponseStatus.OK.equals(response.getStatus())) { soapResponse.setPerson(personConverter.convert(response.getPerson())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7758/buggy-version/module15.m15-app.m15-app-web.m15-app-web-soap.src.main.java.by.epam.jamp.module15.web.soap.converter.ResponseConverter.java", "BodyUseAPI": ["by.epam.jamp.module15.service.person.response.CreatePersonResponse.getPerson()", "by.epam.jamp.module15.web.soap.types.CreatePersonSoapResponse.setPerson(personConverter.convert(response.getPerson()))", "by.epam.jamp.module15.web.soap.converter.PersonConverter.convert(response.getPerson())"], "Fixed commit": "96a150ef76413b9fb840d36fd75fc06ccf3df2c2", "Url": "https://api.github.com/repos/vadimby/jamp", "Date": "2016-03-31T11:49:00Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ResponseStatus.OK.equals(response.getStatus())) { soapResponse.setPerson(personConverter.convert(response.getPerson())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7758/buggy-version/module15.m15-app.m15-app-web.m15-app-web-soap.src.main.java.by.epam.jamp.module15.web.soap.converter.ResponseConverter.java", "BodyUseAPI": ["by.epam.jamp.module15.web.soap.converter.PersonConverter.convert(response.getPerson())", "by.epam.jamp.module15.web.soap.types.UpdatePersonSoapResponse.setPerson(personConverter.convert(response.getPerson()))", "by.epam.jamp.module15.service.person.response.UpdatePersonResponse.getPerson()"], "Fixed commit": "96a150ef76413b9fb840d36fd75fc06ccf3df2c2", "Url": "https://api.github.com/repos/vadimby/jamp", "Date": "2016-03-31T11:49:00Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.state) == null) { log(\"Received null state\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3375/buggy-version/src.main.java.za.co.entelect.challenge.bot.CycleBot.java", "BodyUseAPI": [], "Fixed commit": "b493d345d0c52c2eac1da7745650b923c8249f2a", "Url": "https://api.github.com/repos/CjS77/ec15-javabot-base", "Date": "2015-05-04T11:50:07Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 0) { java.util.List<java.util.Map<java.lang.String, java.lang.Object>> events = mapper.readValue(sb.toString(), new com.fasterxml.jackson.core.type.TypeReference<java.util.List<java.util.HashMap<java.lang.String, java.lang.Object>>>() {}); for (java.util.Map<java.lang.String, java.lang.Object> event : events) { com.networknt.light.rule.RuleEngine.getInstance().executeRule(com.networknt.light.util.Util.getEventRuleId(event), event); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7275/buggy-version/server.src.main.java.com.networknt.light.server.LightServer.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readValue(java.lang.String,com.fasterxml.jackson.core.type.TypeReference<java.util.List<java.util.HashMap<java.lang.String, java.lang.Object>>>)", "java.lang.StringBuilder.toString()"], "Fixed commit": "148bba402bce6df31e6dfe385a74fb89a48a0825", "Url": "https://api.github.com/repos/networknt/light", "Date": "2015-01-04T19:24:47Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isNotEmpty(list)) { java.util.Collections.sort(list, new org.openmrs.module.hospitalcore.util.ConceptAnswerComparator()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6214/buggy-version/omod.src.main.java.org.openmrs.module.ipdui.fragment.controller.PatientAdmissionFragmentController.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.List<org.openmrs.module.ipdui.fragment.controller.ConceptAnswer>,org.openmrs.module.hospitalcore.util.ConceptAnswerComparator)"], "Fixed commit": "ab1d00be282287b87a806431a38aac7420624e5e", "Url": "https://api.github.com/repos/bespokeinteractive/ipdapp", "Date": "2016-01-25T08:09:21Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.freedie.sensordemo.SensorEventDemo.getStepCounterView()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (tv != null) { tv.setText(java.lang.String.valueOf(steps)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2542/buggy-version/app.src.main.java.com.freedie.sensordemo.SensorEventDemo.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "5e95cff41372b5da6f4207a836414d84085dd2d5", "Url": "https://api.github.com/repos/bjoergan/gaitVerification", "Date": "2017-11-19T10:03:10Z"},
{"Line": "=>656", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((policy.contentEquals(\"mdf\")) || (policy.contentEquals(\"mlf\"))) { processQueues += this.preempt(appmasters, policy, \"incoming\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2496/buggy-version/src.NatjamModelGenerator.java", "BodyUseAPI": ["NatjamModelGenerator.preempt(int,java.lang.String,java.lang.String)"], "Fixed commit": "26286a01b3f37776c8ff9a4117c1c0bfb5b7f927", "Url": "https://api.github.com/repos/helgi-leifsson/ReGen", "Date": "2015-01-23T06:35:04Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((policy.contentEquals(\"mdf\")) || (policy.contentEquals(\"mlf\"))) { processQueues += this.preempt(appmasters, policy, \"checkpoint\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2496/buggy-version/src.NatjamModelGenerator.java", "BodyUseAPI": ["NatjamModelGenerator.preempt(int,java.lang.String,java.lang.String)"], "Fixed commit": "26286a01b3f37776c8ff9a4117c1c0bfb5b7f927", "Url": "https://api.github.com/repos/helgi-leifsson/ReGen", "Date": "2015-01-23T06:35:04Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((visit) != null) { workerId = visit.getWorkerId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4924/buggy-version/src.org.chat.android.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "39ccbd135f908f60e1160d27edae65598b7c2d2a", "Url": "https://api.github.com/repos/chat-health/chat.android", "Date": "2014-08-28T17:17:52Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pathToPhoto.isEmpty())) { imageView_frag_3.setImageURI(android.net.Uri.parse((\"file://\" + pathToPhoto))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3607/buggy-version/app.src.main.java.com.example.sergii.galleryexample.fragments.GalleryItem3.java", "BodyUseAPI": ["android.widget.ImageView.setImageURI(android.net.Uri.parse((\"file://\" + pathToPhoto)))", "android.net.Uri.parse(java.lang.String)"], "Fixed commit": "c25d09c0760b48403663ab47bfeb1951d38f3f8b", "Url": "https://api.github.com/repos/Dekker1987/GalleryExample", "Date": "2017-05-11T19:24:17Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pathToPhoto.isEmpty())) { imageView_frag_0.setImageURI(android.net.Uri.parse((\"file://\" + pathToPhoto))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3607/buggy-version/app.src.main.java.com.example.sergii.galleryexample.fragments.GalleryItem0.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)", "android.widget.ImageView.setImageURI(android.net.Uri.parse((\"file://\" + pathToPhoto)))"], "Fixed commit": "c25d09c0760b48403663ab47bfeb1951d38f3f8b", "Url": "https://api.github.com/repos/Dekker1987/GalleryExample", "Date": "2017-05-11T19:24:17Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pathToPhoto.isEmpty())) { imageView_frag_2.setImageURI(android.net.Uri.parse((\"file://\" + pathToPhoto))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3607/buggy-version/app.src.main.java.com.example.sergii.galleryexample.fragments.GalleryItem2.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)", "android.widget.ImageView.setImageURI(android.net.Uri.parse((\"file://\" + pathToPhoto)))"], "Fixed commit": "c25d09c0760b48403663ab47bfeb1951d38f3f8b", "Url": "https://api.github.com/repos/Dekker1987/GalleryExample", "Date": "2017-05-11T19:24:17Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ALT.indexOf('<')) != (-1)) { java.lang.String[] alts_str = ALT.split(\",\"); int[] inv_lens = getSVLen(INFO); if ((alts_str.length) != (inv_lens.length)) { throw new java.lang.IllegalArgumentException(\"ERROR: number of symbolic alleles is unequal to number of SV lengths.\"); } for (int i = 0; i < (alts_str.length); i++) { if (!(alts_str[i].startsWith(\"<\"))) { throw new java.lang.IllegalArgumentException(\"ERROR: symbolic alleles are mixed with non-symbolic alleles\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3383/buggy-version/src.main.java.com.bina.varsim.util.VCFparser.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "c1a4897578ac62a168f717f47018f87ef74e0397", "Url": "https://api.github.com/repos/bioinform/varsim", "Date": "2016-10-04T04:17:13Z"},
{"Line": "=>975", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((project.getState().getFailure()) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5119/buggy-version/src.main.java.net.minecraftforge.gradle.user.UserBasePlugin.java", "BodyUseAPI": [], "Fixed commit": "ed5d00b99d3a4be24f7ee5dc0aea8a36920a6b91", "Url": "https://api.github.com/repos/matthewprenger/ForgeGradle", "Date": "2015-11-24T00:48:36Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((project.getState().getFailure()) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5119/buggy-version/src.main.java.net.minecraftforge.gradle.user.UserBasePlugin.java", "BodyUseAPI": [], "Fixed commit": "ed5d00b99d3a4be24f7ee5dc0aea8a36920a6b91", "Url": "https://api.github.com/repos/matthewprenger/ForgeGradle", "Date": "2015-11-24T00:48:36Z"},
{"Line": "=>607", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((project.getState().getFailure()) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5119/buggy-version/src.main.java.net.minecraftforge.gradle.user.UserBasePlugin.java", "BodyUseAPI": [], "Fixed commit": "ed5d00b99d3a4be24f7ee5dc0aea8a36920a6b91", "Url": "https://api.github.com/repos/matthewprenger/ForgeGradle", "Date": "2015-11-24T00:48:36Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(rs.getString(\"Vote\").isEmpty())) { votes[index] = new java.math.BigInteger(rs.getString(\"Vote\")); index++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2986/buggy-version/src.ora_server.DBHandler.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "a8441c25aa384fd57d29c24acf9029592a226dfc", "Url": "https://api.github.com/repos/M3f1st0/ORA_Server", "Date": "2016-05-22T16:48:48Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWARFile()) { return getContextPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/627/buggy-version/portal-impl.src.com.liferay.portal.model.impl.ThemeImpl.java", "BodyUseAPI": [], "Fixed commit": "c78d69befaef583f72313942bc8157f2cf9e51bf", "Url": "https://api.github.com/repos/pat270/liferay-portal", "Date": "2015-09-15T21:05:18Z"},
{"Line": "=>789", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.items.IItemHandler.insertItem(slot.getSlot(),net.minecraft.item.ItemStack,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (simulateStack != null) { int c = simulateStack.stackSize; slotCount = (java.lang.Integer.MAX_VALUE) - c; }else { slotCount = java.lang.Integer.MAX_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3133/buggy-version/src.main.java.vswe.stevesfactory.components.CommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "977cfa9d0dc4a94c64e8734beb5d75686f3cf564", "Url": "https://api.github.com/repos/Naheulf/StevesFactoryManager", "Date": "2017-12-08T14:56:15Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Module.getDelegateObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (theObject instanceof imagej.command.InvertibleCommand) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5840/buggy-version/core.data.src.main.java.imagej.data.undo.UndoService.java", "BodyUseAPI": [], "Fixed commit": "b4450d541ac1f9a0d0b395961e9a3ca254f04a42", "Url": "https://api.github.com/repos/imagej/imagej", "Date": "2012-10-01T20:02:55Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.libvirt.Domain.snapshotLookupByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (snap != null) { snap.delete(0); }else { throw new com.cloud.utils.exception.CloudRuntimeException((\"Unable to find vm snapshot with name -\" + snapshotName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3356/buggy-version/plugins.hypervisors.kvm.src.com.cloud.hypervisor.kvm.resource.wrapper.LibvirtBackupSnapshotCommandWrapper.java", "BodyUseAPI": ["org.libvirt.DomainSnapshot.delete(int)"], "Fixed commit": "7218049095117d0cf74928d3ea5d8d5a251fb4df", "Url": "https://api.github.com/repos/maneesha-p/cloudstack", "Date": "2015-07-22T19:15:00Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(responseObj)) { resObj = new org.apache.sling.commons.json.JSONObject(responseObj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1786/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.config.FrameworkUtils.java", "BodyUseAPI": [], "Fixed commit": "898ba50408b7dc7785beede766ec3d2d13ab4c46", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2015-12-23T12:39:02Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((workerMessage.size()) > 100) { synchronized(workerMessage) { for (int i = 100; i < (workerMessage.size()); i++) { workerMessage.remove(i); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3122/buggy-version/contrib.invenio.src.java.org.apache.solr.update.InvenioDoctor.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.remove(int)"], "Fixed commit": "d6ac1c5d6b419514b94dd8af13259570526fd3bb", "Url": "https://api.github.com/repos/romanchyla/montysolr", "Date": "2013-10-08T20:21:24Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.System.getenv(\"DEBUG_SCRIPTS\").equals(\"true\")) { com.dexels.navajo.document.Property prop2 = com.dexels.navajo.document.NavajoFactory.getInstance().createProperty(outMessage, \"FailedExpression\", Property.STRING_PROPERTY, condition.condition, 0, \"\", Property.DIR_OUT); com.dexels.navajo.document.Property prop3 = com.dexels.navajo.document.NavajoFactory.getInstance().createProperty(outMessage, \"EvaluatedExpression\", Property.STRING_PROPERTY, eval, 0, \"\", Property.DIR_OUT); msg.addProperty(prop2); msg.addProperty(prop3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/592/buggy-version/core.com.dexels.navajo.core.src.com.dexels.navajo.mapping.CompiledScript.java", "BodyUseAPI": [], "Fixed commit": "a675113a11eb7ed03da86d74d2a6fc22c51bb690", "Url": "https://api.github.com/repos/Dexels/navajo", "Date": "2016-04-08T13:13:53Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.tinkerpop.gremlin.process.traversal.step.util.Tree.class.isAssignableFrom(clasz)) { getIdToType().put(name, org.apache.tinkerpop.shaded.jackson.databind.type.TypeFactory.defaultInstance().constructType(new org.apache.tinkerpop.shaded.jackson.core.type.TypeReference<org.apache.tinkerpop.gremlin.process.traversal.step.util.Tree<? extends org.apache.tinkerpop.gremlin.structure.Element>>() {})); }else { getIdToType().put(name, org.apache.tinkerpop.shaded.jackson.databind.type.TypeFactory.defaultInstance().constructType(clasz)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1378/buggy-version/gremlin-core.src.main.java.org.apache.tinkerpop.gremlin.structure.io.graphson.GraphSONTypeIdResolver.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.apache.tinkerpop.shaded.jackson.databind.JavaType>.put(java.lang.String,org.apache.tinkerpop.shaded.jackson.databind.type.TypeFactory.defaultInstance().constructType(clasz))", "org.apache.tinkerpop.shaded.jackson.databind.type.TypeFactory.defaultInstance().constructType(java.lang.Class)"], "Fixed commit": "6463cffa2647b28c0155a19468bac978224bce78", "Url": "https://api.github.com/repos/apache/tinkerpop", "Date": "2016-08-25T13:08:44Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (marker.getSnippet().equals(\"event\")) { intent = new android.content.Intent(this, com.example.dagna.meetapp.Event.class); }else { intent = new android.content.Intent(this, com.example.dagna.meetapp.Profile.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8468/buggy-version/app.src.main.java.com.example.dagna.meetapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0949720f0fd1cd06dbdfd24f379258d72dffadfa", "Url": "https://api.github.com/repos/dturant/MeetApp", "Date": "2017-12-10T13:39:06Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.measite.minidns.Client.query(de.measite.minidns.Question)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dnsQuery == null) { sendProofError(prover.getLog(), getString(R.string.keybase_dns_query_failure)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8727/buggy-version/OpenKeychain.src.main.java.org.sufficientlysecure.keychain.service.KeychainIntentService.java", "BodyUseAPI": [], "Fixed commit": "b5cdeb7f5a54be7443894ca2cb4bd27359fae9ce", "Url": "https://api.github.com/repos/open-keychain/open-keychain", "Date": "2014-11-19T22:35:05Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gridView) != null) gridViewUser.hideRequestAnnouncement();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/9057/buggy-version/app.src.main.java.ir.rasen.charsoo.view.fragment.FragmentUser.java", "BodyUseAPI": [], "Fixed commit": "c067ad7553be79b6537c8c8cac955c06c55ca308", "Url": "https://api.github.com/repos/rasenir/charsoo", "Date": "2015-08-18T12:39:06Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(alertMostrandose)) { if ((txtCod.getText().trim().length()) == 0) { alertMostrandose = true; ar.com.fwcommon.componentes.FWJOptionPane.showErrorMessage(this, \"Ingrese un c\ufffddigo.\", \"Error\"); requestFocus(); return; } finLectura(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1043/buggy-version/src.ar.com.lite.textillevel.gui.acciones.AbstractDialogLectorCodigo.java", "BodyUseAPI": [], "Fixed commit": "b79923f3f01a758e8729ec2eff49e78c19d3ecf2", "Url": "https://api.github.com/repos/nacho270/GTLLiteClient", "Date": "2017-02-11T16:17:56Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((childSyntaxPathChars.length) - 1) > index) && ((childSyntaxPathChars[(index + 1)]) != ' ')) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8219/buggy-version/src.main.java.com.lagopusempire.lagopuscommandsystem.SyntaxElement.java", "BodyUseAPI": [], "Fixed commit": "02f63a40ccd33d192985c27716d5aeab0df74604", "Url": "https://api.github.com/repos/MrZoraman/LagopusCommandSystem", "Date": "2015-03-22T01:20:00Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((commandString.length()) <= 3) { return new parser.Command(common.Command.CommandType.ADD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4112/buggy-version/src.parser.GeneralParser.java", "BodyUseAPI": [], "Fixed commit": "6a6d6a3096aaa176b6b075b2c814dc6858538bae", "Url": "https://api.github.com/repos/cs2103jan2016-w09-4j/main", "Date": "2016-04-05T19:26:56Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["logic.Command.getDescription()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (description == null) { return new logic.Result(common.Command.CommandType.ADD, false, \"No description!\", new java.util.ArrayList<logic.Task>()); }else { return execution.addTask(description, startDate, endDate, categories); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4112/buggy-version/src.logic.Logic.java", "BodyUseAPI": ["logic.Execution.addTask(java.lang.String,java.time.LocalDateTime,java.time.LocalDateTime,java.util.ArrayList<java.lang.String>)"], "Fixed commit": "6a6d6a3096aaa176b6b075b2c814dc6858538bae", "Url": "https://api.github.com/repos/cs2103jan2016-w09-4j/main", "Date": "2016-04-05T19:26:56Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (AutoClicker.resetFlag) { AutoClicker.timer.interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3593/buggy-version/src.autoclicker.AutoClickerGUI.java", "BodyUseAPI": [], "Fixed commit": "790c52f9025fbb40cb3761b3444c9f5f992421cf", "Url": "https://api.github.com/repos/ChickanPotPai/CS418_MP7", "Date": "2014-05-31T01:50:59Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fileList == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6818/buggy-version/app.src.main.java.com.example.student.gefriertruhapp.Serialization.FileAccess.java", "BodyUseAPI": [], "Fixed commit": "0914176106049423c7975699abcb83c5eb903a6f", "Url": "https://api.github.com/repos/DerGary/FridgeApp", "Date": "2016-12-20T12:33:42Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.student.gefriertruhapp.Serialization.FileAccess.readHistory(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (history == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6818/buggy-version/app.src.main.java.com.example.student.gefriertruhapp.History.HistoryViewPagerFragment.java", "BodyUseAPI": [], "Fixed commit": "0914176106049423c7975699abcb83c5eb903a6f", "Url": "https://api.github.com/repos/DerGary/FridgeApp", "Date": "2016-12-20T12:33:42Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((handlebarsJsFile) != null) { handlebars.handlebarsJsFile(handlebarsJsFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2822/buggy-version/handlebars-springmvc.src.main.java.com.github.jknack.handlebars.springmvc.HandlebarsViewResolver.java", "BodyUseAPI": [], "Fixed commit": "aec8cf5eea8135a595c64f05cf0e5f103686632f", "Url": "https://api.github.com/repos/acleasby/handlebars.java", "Date": "2015-04-26T18:26:39Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(t.isSetData())) { jg.writeEndObject(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/9110/buggy-version/RestfulWPSProxy-serializer.src.main.java.org.n52.restfulwpsproxy.serializer.json.WPSGetResultsJsonModule.java", "BodyUseAPI": [], "Fixed commit": "315e3b599947a59095a72ab21241ff686ed2d8c5", "Url": "https://api.github.com/repos/52North/wps-proxy", "Date": "2016-11-18T08:33:50Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["study.getFiles().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((!(variant.getType().equals(VariantType.NO_VARIATION))) && ((file.getCall()) != null)) && (!(file.getCall().isEmpty()))) && (!(file.getCall().equals(((variant.toString()) + \":0\"))))) { recordBuilder.setCall(file.getCall()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/5878/buggy-version/biodata-tools.src.main.java.org.opencb.biodata.tools.variant.converter.VariantToProtoVcfRecord.java", "BodyUseAPI": ["org.opencb.biodata.models.variant.protobuf.VcfSliceProtos.VcfRecord.Builder.setCall(file.getCall())", "org.opencb.biodata.models.variant.avro.FileEntry.getCall()"], "Fixed commit": "41b50483ac0c07666330e5e11e04182b846327e8", "Url": "https://api.github.com/repos/opencb/biodata", "Date": "2016-02-24T12:03:19Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item.isEntityAlive()) { capturedItems.add(item.getEntityItem()); item.setDead(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1829/buggy-version/src.main.java.zeldaswordskills.entity.projectile.EntityCyclone.java", "BodyUseAPI": ["net.minecraft.entity.item.EntityItem.getEntityItem()", "net.minecraft.entity.item.EntityItem.setDead()", "java.util.List<net.minecraft.item.ItemStack>.add(item.getEntityItem())"], "Fixed commit": "f06e38f98e5b5a146e50bc0dc762fb3621908a70", "Url": "https://api.github.com/repos/coolAlias/ZeldaSwordSkills", "Date": "2014-12-22T07:00:42Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (oddChips != 0) { winningsSet.add(ehunter.poker.pot.Winnings.createDeadChips(oddChips)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/892/buggy-version/src.ehunter.poker.pot.potdistributor.DeadChipPotDistributor.java", "BodyUseAPI": ["ehunter.poker.pot.Winnings.createDeadChips(int)", "java.util.Set<ehunter.poker.pot.Winnings>.add(ehunter.poker.pot.Winnings.createDeadChips(oddChips))"], "Fixed commit": "3ad9782986108bef5dd328404f8cd4e8e28fe272", "Url": "https://api.github.com/repos/Spaceman1701/MonteCarloPoker", "Date": "2016-05-06T20:37:11Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((componentSelectionPanel.getWidgetCount()) > (edu.colorado.csdms.wmt.client.Constants.SCROLL_THRESHOLD)) { scroller.setSize(Constants.MENU_WIDTH, Constants.MENU_HEIGHT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7481/buggy-version/src.edu.colorado.csdms.wmt.client.ui.menu.ComponentSelectionMenu.java", "BodyUseAPI": [], "Fixed commit": "47077cb9554b02012527a36f39bf39840effb3c8", "Url": "https://api.github.com/repos/csdms/wmt-client", "Date": "2015-06-22T17:26:04Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4463/buggy-version/src.main.java.com.github.jjYBdx4IL.diskcache.DiskCache.java", "BodyUseAPI": [], "Fixed commit": "7a954440eaab20fd2b3aeb00b7c40d06d6a9f96b", "Url": "https://api.github.com/repos/jjYBdx4IL/diskcache", "Date": "2016-11-27T01:26:20Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key.isEmpty()) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4463/buggy-version/src.main.java.com.github.jjYBdx4IL.diskcache.DiskCache.java", "BodyUseAPI": [], "Fixed commit": "7a954440eaab20fd2b3aeb00b7c40d06d6a9f96b", "Url": "https://api.github.com/repos/jjYBdx4IL/diskcache", "Date": "2016-11-27T01:26:20Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url == null) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4463/buggy-version/src.main.java.com.github.jjYBdx4IL.diskcache.DiskCache.java", "BodyUseAPI": [], "Fixed commit": "7a954440eaab20fd2b3aeb00b7c40d06d6a9f96b", "Url": "https://api.github.com/repos/jjYBdx4IL/diskcache", "Date": "2016-11-27T01:26:20Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key == null) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4463/buggy-version/src.main.java.com.github.jjYBdx4IL.diskcache.DiskCache.java", "BodyUseAPI": [], "Fixed commit": "7a954440eaab20fd2b3aeb00b7c40d06d6a9f96b", "Url": "https://api.github.com/repos/jjYBdx4IL/diskcache", "Date": "2016-11-27T01:26:20Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == 0) { otherId = 1; }else { otherId = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/386/buggy-version/src.main.java.interpreter.Check.java", "BodyUseAPI": [], "Fixed commit": "cfa38098496b6c10cb8fd67feca96eeada69c6a2", "Url": "https://api.github.com/repos/j3kstrum/CodeCarnage", "Date": "2017-10-08T21:16:10Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lineNumber) != 0) { return ((variableName) + \",\") + (java.lang.String.valueOf(lineNumber)); }else { return (variableName) + \",?\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/543/buggy-version/program_analysis.src.program_slicing.ReachingDefinition.java", "BodyUseAPI": [], "Fixed commit": "2d1cabe9796b44dfa2c8e88077f2aec06af6cbe5", "Url": "https://api.github.com/repos/NikitaMartynov/ProgramAnalysis", "Date": "2013-12-01T21:14:56Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (istVerliehenAnKunden(vormerker)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/8803/buggy-version/Mediathek_Vorlage_Blatt06.src.de.uni_hamburg.informatik.swt.se2.mediathek.materialien.VormerkKarte.java", "BodyUseAPI": [], "Fixed commit": "2f44c01e36d945f000fbf2fbf1ed2355c5b4da27", "Url": "https://api.github.com/repos/DennisMarkmann/Mediathek", "Date": "2016-06-01T11:58:00Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (field.isGrass(position)) { health += Parameter.HEALTH_PER_FOOD.getValue(); field.removeGrass(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/2946/buggy-version/src.genetic.data.Entity.java", "BodyUseAPI": ["genetic.data.Field.removeGrass(java.awt.Point)"], "Fixed commit": "660f015cc65b9da0aad33c3fa5675b3b47b40afc", "Url": "https://api.github.com/repos/BenWiederhake/GeneticCode", "Date": "2013-02-22T21:43:27Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (level == 0) { levelLbl.setText(\"Tutorial\"); }else { levelLbl.setText((\"Level \" + level)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1354/buggy-version/app.src.main.java.com.app.william.tribs.Board.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "55f252f68bceef90385e8b0d3aa8d6c0b909202e", "Url": "https://api.github.com/repos/William-Bulovas/Tribs", "Date": "2016-02-04T03:45:59Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (field != null) { subType = field.getType(); }else if ((subTypeNames != null) && ((subTypeNames.size()) > 0)) { subType = subTypeNames.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/6857/buggy-version/src.main.java.io.github.ibuildthecloud.gdapi.validation.ValidationHandler.java", "BodyUseAPI": ["io.github.ibuildthecloud.gdapi.model.Field.getType()"], "Fixed commit": "32f308c5f569ccf9f9221ac3d5e2b2e0d4127db8", "Url": "https://api.github.com/repos/will-chan/gdapi-java-server", "Date": "2015-03-24T01:56:21Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((key.getValue()) instanceof org.apache.calcite.util.NlsString) { java.lang.String quotedValue = ((org.apache.calcite.util.NlsString) (key.getValue())).toString(); value = quotedValue.substring(1, ((quotedValue.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/9143/buggy-version/phoenix-core.src.main.java.org.apache.phoenix.calcite.PhoenixPrepareImpl.java", "BodyUseAPI": ["((org.apache.calcite.util.NlsString) (key.getValue())).toString()", "org.apache.calcite.sql.SqlLiteral.getValue()"], "Fixed commit": "f6d836a852d9d3accc79351675055612880a0660", "Url": "https://api.github.com/repos/apache/phoenix", "Date": "2017-02-03T18:00:33Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (most == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/4880/buggy-version/src.main.java.org.wilson.world.manager.MissionManager.java", "BodyUseAPI": [], "Fixed commit": "c679fefdb1f8da7bfbd012c89ee9f44c618fc531", "Url": "https://api.github.com/repos/liumiaowilson/world", "Date": "2017-02-07T10:02:18Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getMeasure(resource, CoreMetrics.NCLOC_DATA).getData()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (nclocData != null) { java.lang.String[] lines = nclocData.split(\";\"); for (java.lang.String line : lines) { java.lang.String[] info = line.split(\"=\"); if (((info.length) == 2) && (\"1\".equals(info[1]))) { int lineNumber = java.lang.Integer.parseInt(info[0]); lineHitsData.add(lineNumber, 0); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3030/buggy-version/sonar-javascript-plugin.src.main.java.org.sonar.plugins.javascript.lcov.CoverageSensor.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "c3d424366a670f939de279d95313b6113735be29", "Url": "https://api.github.com/repos/SonarSource/SonarJS", "Date": "2015-04-03T15:41:37Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name == null) { name = \"AS\" + id; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/3079/buggy-version/src.org.javamrt.dumper.AsNameLoader.java", "BodyUseAPI": [], "Fixed commit": "9ff8c569c52cda0d739d6e41542ee258e3d6e311", "Url": "https://api.github.com/repos/vasil-yordanov/java-mrt", "Date": "2014-08-29T11:35:00Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (torch.canPlaceBlockAt(world, x, y, z)) { world.setBlock(x, y, z, Block.torchWood.blockID, getMetaForTorch(world, x, y, z, side), 2); net.minecraft.block.Block.blocksList[Block.torchWood.blockID].onBlockAdded(world, x, y, z); andrew.powersuits.common.AddonUtils.setTorchLevel(itemStack, ((andrew.powersuits.common.AddonUtils.getTorchLevel(itemStack)) - 1)); net.machinemuse.utils.ElectricItemUtils.drainPlayerEnergy(player, net.machinemuse.api.ModuleManager.computeModularProperty(itemStack, andrew.powersuits.modules.TorchPlacerModule.TORCH_ENERGY_CONSUMPTION)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/7377/buggy-version/src.minecraft.andrew.powersuits.modules.TorchPlacerModule.java", "BodyUseAPI": ["andrew.powersuits.modules.TorchPlacerModule.getMetaForTorch(net.minecraft.world.World,int,int,int,int)", "net.minecraft.block.Block.blocksList[Block.torchWood.blockID].onBlockAdded(net.minecraft.world.World,int,int,int)", "net.minecraft.world.World.setBlock(int,int,int,Block.torchWood.blockID,int,int)"], "Fixed commit": "ca570ed60ade8be212b51be94307927139a1f80f", "Url": "https://api.github.com/repos/Andrew2448/Andrew2448PowersuitAddons", "Date": "2013-05-05T22:19:25Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["compteur.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (valeurCompteur.equals(\"\")) return java.lang.Integer.valueOf(0); else return java.lang.Integer.parseInt(valeurCompteur);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V61/1193/buggy-version/LOTR_Risk_Android.src.com.custom.Compteur.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "c63fd8f09ddc5983780e981deba29f6845ae859c", "Url": "https://api.github.com/repos/Sw4T/LotR_Risk", "Date": "2014-12-17T15:25:00Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bijaykoirala.freetext.PreferenceManager.getValues(getApplicationContext())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (data != null) { if (((((data.from) != null) && ((data.to) != null)) && ((data.sid) != null)) && ((data.token) != null)) { etFrom.setText(data.from); etTo.setText(data.to); etSID.setText(data.sid); etToken.setText(data.token); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6964/buggy-version/app.src.main.java.com.bijaykoirala.freetext.SettingsAndMore.java", "BodyUseAPI": ["android.widget.EditText.setText(data.token)", "android.widget.EditText.setText(data.to)", "android.widget.EditText.setText(data.sid)", "android.widget.EditText.setText(data.from)"], "Fixed commit": "1566f1db9d0e99a383b9564dbd93b7ef3e928cb2", "Url": "https://api.github.com/repos/bijaykoirala/freetext", "Date": "2015-03-25T02:20:43Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cc.kave.commons.utils.StringUtils.FindCorrespondingCloseBracket(java.lang.String,int)", "cc.kave.commons.utils.StringUtils.FindNext(java.lang.String,int,char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((close - open) == 1) { open = close + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1105/buggy-version/cc.kave.commons.src.main.java.cc.kave.commons.utils.TypeErasure.java", "BodyUseAPI": [], "Fixed commit": "b903103cfba334faf21510cdf6c4a84b053decc6", "Url": "https://api.github.com/repos/stg-tud/kave-java", "Date": "2016-08-28T14:39:55Z"},
{"Line": "=>1484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 19) { i.setAction(Intent.ACTION_GET_CONTENT); i.setType(MimeUtility.K9_SETTINGS_MIME_TYPE); }else { i.setType(\"*/*\"); i.setAction(\"android.intent.action.OPEN_DOCUMENT\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8360/buggy-version/src.org.ancode.secmail.activity.Accounts.java", "BodyUseAPI": [], "Fixed commit": "4ae7a9bf8823a7ba3fb32bb09e0ba16c239617b3", "Url": "https://api.github.com/repos/ludivicio/secmail", "Date": "2014-02-21T07:19:44Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((splitByDash.length) == 3) { result[i] = fmtLong.parse(tmp.get(i)); }else if ((splitByDash.length) == 2) { sb.append(tmp.get(predecessorIdx).split(\"-\")[0]); sb.append(\"-\"); sb.append(tmp.get(i)); result[i] = fmtLong.parse(sb.toString()); }else if (((splitByDash.length) == 1) && ((tmp.get(predecessorIdx).split(\"-\").length) == 3)) { sb.append(tmp.get(predecessorIdx).split(\"-\")[0]); sb.append(\"-\"); sb.append(tmp.get(predecessorIdx).split(\"-\")[1]); sb.append(\"-\"); sb.append(tmp.get(i)); result[i] = fmtLong.parse(sb.toString()); }else if (((splitByDash.length) == 1) && ((tmp.get(predecessorIdx).split(\"-\").length) == 2)) { sb.append(tmp.get(predecessorIdx).split(\"-\")[0]); sb.append(\"-\"); sb.append(tmp.get(i)); result[i] = fmtShort.parse(sb.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7743/buggy-version/app.src.main.java.com.mc1.dev.goapp.GameMetaInformation.java", "BodyUseAPI": [], "Fixed commit": "be058c7a5c260a3bf74fb7384f63c095c1b5e154", "Url": "https://api.github.com/repos/kampp/GoApp", "Date": "2016-07-17T12:41:40Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thirtyonetensoftware.android.powergridengineer.widget.PGESpinner.getOnItemSelectedListener()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (listener != null) { listener.onItemSelected(this, getSelectedView(), position, getSelectedItemId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4135/buggy-version/app.src.main.java.com.thirtyonetensoftware.android.powergridengineer.widget.PGESpinner.java", "BodyUseAPI": ["com.thirtyonetensoftware.android.powergridengineer.widget.OnItemSelectedListener.onItemSelected(com.thirtyonetensoftware.android.powergridengineer.widget.PGESpinner,getSelectedView(),int,getSelectedItemId())"], "Fixed commit": "7ae7cb362e34d7ddcf822bf06a8d01678a550ca9", "Url": "https://api.github.com/repos/joshkendrick/PowerGridEngineer_Android", "Date": "2015-01-02T04:05:14Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thirtyonetensoftware.android.powergridengineer.widget.PGESpinner.getOnItemSelectedListener()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (listener != null) { listener.onItemSelected(this, getSelectedView(), position, getSelectedItemId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4135/buggy-version/app.src.main.java.com.thirtyonetensoftware.android.powergridengineer.widget.PGESpinner.java", "BodyUseAPI": ["com.thirtyonetensoftware.android.powergridengineer.widget.OnItemSelectedListener.onItemSelected(com.thirtyonetensoftware.android.powergridengineer.widget.PGESpinner,getSelectedView(),int,getSelectedItemId())"], "Fixed commit": "7ae7cb362e34d7ddcf822bf06a8d01678a550ca9", "Url": "https://api.github.com/repos/joshkendrick/PowerGridEngineer_Android", "Date": "2015-01-02T04:05:14Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (date != null) { for (de.hdmstuttgart.zeitfresser.model.Record record : records) { if (record.getStart().before(date)) { return true; } } return false; }else { throw new java.lang.IllegalArgumentException(\"Date argument must not be null!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/937/buggy-version/app.src.main.java.de.hdmstuttgart.zeitfresser.model.Task.java", "BodyUseAPI": ["record.getStart().before(java.util.Date)"], "Fixed commit": "fe65755e4e8a9831e55caf8de63c1ef6c7de3e3f", "Url": "https://api.github.com/repos/slipke/Zeitfresser", "Date": "2016-12-21T16:10:15Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.sessions.contains(session)) { int index = this.sessions.indexOf(session); return this.sessions.get(index); }else { this.sessions.add(session); return session; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2057/buggy-version/src.main.java.gvs.business.model.SessionHolder.java", "BodyUseAPI": ["java.util.List<gvs.business.logic.Session>.get(int)", "java.util.List<gvs.business.logic.Session>.indexOf(gvs.business.logic.Session)", "java.util.List<gvs.business.logic.Session>.add(gvs.business.logic.Session)"], "Fixed commit": "74077a3482a9320098019f19df64f2b98b6b9b0b", "Url": "https://api.github.com/repos/Graphs-Visualization-Service/gvs-ui", "Date": "2017-11-21T12:16:08Z"},
{"Line": "=>1713", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentFocus()) != null) { android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (getSystemService(com.irccloud.android.activity.INPUT_METHOD_SERVICE))); imm.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2364/buggy-version/src.com.irccloud.android.activity.MessageActivity.java", "BodyUseAPI": [], "Fixed commit": "9e2f5cf04e32751d7de4d62dd2d27a3d3723a7c3", "Url": "https://api.github.com/repos/irccloud/android", "Date": "2014-02-12T20:25:09Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fenixedu.commons.i18n.LocalizedString.compareTo(org.fenixedu.commons.i18n.LocalizedString)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (compareTo != 0) { return compareTo; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4185/buggy-version/bennu-portal.src.main.java.org.fenixedu.bennu.portal.model.Functionality.java", "BodyUseAPI": [], "Fixed commit": "e295eec1591f91496e59488366c91bb3d8a6c675", "Url": "https://api.github.com/repos/pedrosan7os/bennu", "Date": "2015-01-12T15:18:50Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(world.isRemote)) { triggerDetector(world, pos, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1704/buggy-version/src.main.java.org.cyclops.evilcraft.block.SpiritFurnace.java", "BodyUseAPI": ["org.cyclops.evilcraft.block.SpiritFurnace.triggerDetector(net.minecraft.world.World,net.minecraft.util.BlockPos,boolean)"], "Fixed commit": "405b5371ac56dc073eff4fd8aa17709e3cec11b6", "Url": "https://api.github.com/repos/CyclopsMC/EvilCraft", "Date": "2016-02-05T14:46:27Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(world.isRemote)) { triggerDetector(world, blockPos, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1704/buggy-version/src.main.java.org.cyclops.evilcraft.block.SpiritFurnace.java", "BodyUseAPI": ["org.cyclops.evilcraft.block.SpiritFurnace.triggerDetector(net.minecraft.world.World,net.minecraft.util.BlockPos,boolean)"], "Fixed commit": "405b5371ac56dc073eff4fd8aa17709e3cec11b6", "Url": "https://api.github.com/repos/CyclopsMC/EvilCraft", "Date": "2016-02-05T14:46:27Z"},
{"Line": "=>815", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Exception.getStackTrace()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((steElements.length) > 0) { java.lang.StackTraceElement ste = ex.getStackTrace()[0]; map.put(\"code\", (((ste.getClassName()) + \":\") + (ste.getLineNumber()))); map.put(\"detail\", org.apache.commons.lang.exception.ExceptionUtils.getStackTrace(ex)); }else { map.put(\"code\", \"\"); map.put(\"detail\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7312/buggy-version/omod-common.src.main.java.org.openmrs.module.webservices.rest.web.RestUtil.java", "BodyUseAPI": [], "Fixed commit": "eb2b7a08c5daad135093b6508a36b3505332cc15", "Url": "https://api.github.com/repos/openmrs/openmrs-module-webservices.rest", "Date": "2015-01-25T23:56:53Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trkcands.get(i)) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2097/buggy-version/reconstruction.cvt.src.main.java.org.jlab.rec.cvt.banks.RecoBankWriter.java", "BodyUseAPI": [], "Fixed commit": "29714d37975d527f8ff360150e6244f170e58134", "Url": "https://api.github.com/repos/JeffersonLab/clas12-offline-software", "Date": "2017-12-07T15:31:26Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trks.get(i)) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2097/buggy-version/reconstruction.cvt.src.main.java.org.jlab.rec.cvt.banks.RecoBankWriter.java", "BodyUseAPI": [], "Fixed commit": "29714d37975d527f8ff360150e6244f170e58134", "Url": "https://api.github.com/repos/JeffersonLab/clas12-offline-software", "Date": "2017-12-07T15:31:26Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trks.get(i)) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2097/buggy-version/reconstruction.cvt.src.main.java.org.jlab.rec.cvt.banks.RecoBankWriter.java", "BodyUseAPI": [], "Fixed commit": "29714d37975d527f8ff360150e6244f170e58134", "Url": "https://api.github.com/repos/JeffersonLab/clas12-offline-software", "Date": "2017-12-07T15:31:26Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node instanceof jscover.instrument.LabeledStatement) { jscover.instrument.LabeledStatement labeledStatement = ((jscover.instrument.LabeledStatement) (node)); jscover.instrument.ExpressionStatement newChild = buildInstrumentationStatement(labeledStatement.getLineno()); parent.addChildBefore(newChild, node); if ((labeledStatement.getStatement().getType()) != (org.mozilla.javascript.Token.BLOCK)) { jscover.instrument.Block block = new jscover.instrument.Block(); block.addStatement(labeledStatement.getStatement()); labeledStatement.setStatement(block); } }else if (node instanceof jscover.instrument.IfStatement) { addInstrumentationBefore(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4611/buggy-version/src.main.java.jscover.instrument.NodeProcessor.java", "BodyUseAPI": ["jscover.instrument.AstNode.addChildBefore(jscover.instrument.ExpressionStatement,jscover.instrument.AstNode)", "jscover.instrument.NodeProcessor.addInstrumentationBefore(jscover.instrument.AstNode)"], "Fixed commit": "dd3a21ed090491ab4434ba62decae348c0c3ef99", "Url": "https://api.github.com/repos/tntim96/JSCover", "Date": "2014-10-15T08:15:39Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((workItem.getTeam().gitGroup) == null) || (workItem.getTeam().gitGroup.trim().isEmpty())) || ((workItem.getService().gitProject) == null)) || (workItem.getService().gitProject.trim().isEmpty())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4812/buggy-version/src.main.java.com.northernwall.hadrian.workItem.action.Action.java", "BodyUseAPI": [], "Fixed commit": "fd062f9a713166ee808c4f409adc114dfa9e716e", "Url": "https://api.github.com/repos/Jukkorsis/Hadrian", "Date": "2017-01-31T02:30:29Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((secUserRoles) != null) { for (ge.softgen.loanexpert.model.SecUserRole secUserRole : secUserRoles) { ge.softgen.loanexpert.model.SecRole secRole = secUserRole.getSecRole(); if (secRole != null) { java.util.List<ge.softgen.loanexpert.model.SecRolePermission> secRolePermissions = secRole.getSecRolePermissions(); if (secRolePermissions != null) { for (ge.softgen.loanexpert.model.SecRolePermission secRolePermission : secRolePermissions) { ge.softgen.loanexpert.model.SecPermission secPermission = secRolePermission.getSecPermission(); if (secPermission != null) { permissionsSet.add(secPermission.getName()); } } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3267/buggy-version/src.main.java.ge.softgen.loanexpert.model.SecUser.java", "BodyUseAPI": [], "Fixed commit": "92ce086a1ebae6c8d96de5e9149ec9785c5b0108", "Url": "https://api.github.com/repos/bacho227/SpringContainer", "Date": "2015-03-09T15:19:56Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f.isDirectory()) { deleteDirectory(f); }else { f.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1685/buggy-version/src.main.java.ee.xero.cjscompiler.app.CocoonJsCompiler.java", "BodyUseAPI": ["java.io.File.delete()", "ee.xero.cjscompiler.app.CocoonJsCompiler.deleteDirectory(java.io.File)"], "Fixed commit": "dd1aa244a8b7b18039583a1a73870eff5e835e67", "Url": "https://api.github.com/repos/mihhail-lapushkin/CocoonJS-Compiler", "Date": "2013-07-06T15:28:11Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deleteItemsBefore) { itemsDeleted = (mDb.delete(DbSchema.ItemSchema.TABLE_NAME, ((DbSchema.ItemSchema.COLUMN_FEED_ID) + \"=?\"), new java.lang.String[]{ java.lang.Long.toString(id) })) > 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1778/buggy-version/src.net.efectotequila.android.feedgoal.storage.DbFeedAdapter.java", "BodyUseAPI": [], "Fixed commit": "f22841dd12000c9cf1ebf0ce122ce8a6f7a8e6fa", "Url": "https://api.github.com/repos/jaec/efectotequila-android", "Date": "2014-01-24T23:06:25Z"},
{"Line": "=>995", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mDbFeedAdapter.getFeeds().get(1).getId()) == (feedId)) { mDbFeedAdapter.updateFeed(handledFeed, true); }else { mDbFeedAdapter.updateFeed(handledFeed, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1778/buggy-version/src.net.efectotequila.android.feedgoal.FeedTabActivity.java", "BodyUseAPI": ["net.efectotequila.android.feedgoal.storage.DbFeedAdapter.updateFeed(net.efectotequila.android.feedgoal.common.Feed,boolean)", "net.efectotequila.android.feedgoal.storage.DbFeedAdapter.updateFeed(net.efectotequila.android.feedgoal.common.Feed,boolean)"], "Fixed commit": "f22841dd12000c9cf1ebf0ce122ce8a6f7a8e6fa", "Url": "https://api.github.com/repos/jaec/efectotequila-android", "Date": "2014-01-24T23:06:25Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.vertx.java.core.MultiMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cookie.indexOf(\";\")) != (-1)) { java.lang.String[] cookies = cookie.toString().split(\"\\\\;\"); for (java.lang.String c : cookies) { if (c.trim().startsWith(\"JSESSIONID=\")) { jsessionid = c.trim(); break; } } }else { java.util.List<java.lang.String> lstCookie = headers.getAll(\"cookie\"); for (java.lang.String c : lstCookie) { if (c.startsWith(\"JSESSIONID=\")) { jsessionid = cookie; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3061/buggy-version/vertx-core.src.main.java.org.vertx.java.core.sockjs.impl.BaseTransport.java", "BodyUseAPI": ["java.lang.String.toString()", "java.lang.String.split(java.lang.String)"], "Fixed commit": "0166cdbaab46eca667478efe32dc80484345d822", "Url": "https://api.github.com/repos/JoaoPedroFerreira/vert.x-1", "Date": "2015-01-27T10:36:06Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (generateFiles) res = org.sugarj.driver.Driver.compile(generatedModel, source, monitor, new java.util.LinkedHashMap<org.sugarj.driver.path.Path, org.sugarj.driver.Driver>()); else res = org.sugarj.driver.Driver.parse(generatedModel, source, monitor, new java.util.LinkedHashMap<org.sugarj.driver.path.Path, org.sugarj.driver.Driver>());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8807/buggy-version/compiler.org.sugarj.driver.transformations.primitive.CompileTransformed.java", "BodyUseAPI": [], "Fixed commit": "0689e513b8a2c379894336a840bd5a0814f82836", "Url": "https://api.github.com/repos/seba--/sugarj", "Date": "2012-08-12T22:57:37Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.cloudCredentials) == null) { this.cloudCredentials = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4582/buggy-version/app.models.generic.RemoteResourceInCloud.java", "BodyUseAPI": [], "Fixed commit": "5dde9e43c7f5b25a3aa4e8713d38574e6c1b6010", "Url": "https://api.github.com/repos/cloudiator/colosseum", "Date": "2016-09-14T16:24:34Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (transferImage.isShown()) return transferImage;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4432/buggy-version/tilibrary.src.main.java.com.hitomi.tilibrary.TransferImage.java", "BodyUseAPI": [], "Fixed commit": "ca2f1236358541ffbfefb50b84c9787cd2dd283e", "Url": "https://api.github.com/repos/Hitomis/transferee", "Date": "2017-02-22T13:56:41Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((intent == null) || (!(android.content.Intent.ACTION_BOOT_COMPLETED.equals(intent.getAction())))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7520/buggy-version/app.src.main.java.se.leap.bitmaskclient.OnBootReceiver.java", "BodyUseAPI": [], "Fixed commit": "b60de97967b7a252762640a8917c24e4211df7c1", "Url": "https://api.github.com/repos/leapcode/bitmask_android", "Date": "2017-12-14T13:32:46Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((bankBool1 && (cash1 < orig1)) || (bankBool2 && (cash2 < orig2))) || (bankBool3 && (cash3 < orig3))) { solved = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3737/buggy-version/src.SimultanousBanks.Model2.java", "BodyUseAPI": [], "Fixed commit": "d8bf753c8da79eff8c9ae49b8a3c02b393c5bd6c", "Url": "https://api.github.com/repos/anwars/senior-design", "Date": "2013-03-19T02:58:39Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j1 < 0) { java.lang.System.out.println(\"Game over\"); java.lang.System.exit(0); }else { Tetris.Board.boardPos[i1][j1] = Tetris.Board.POS_FILLED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4116/buggy-version/src.Tetris.Board.java", "BodyUseAPI": [], "Fixed commit": "6f344c4dfdd1109846edffe6328d5d8ca4736e8e", "Url": "https://api.github.com/repos/pugovka/Tetris", "Date": "2016-02-04T13:21:29Z"},
{"Line": "=>830", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item.isEditing) { android.text.Editable changes = holder.mTargetEditableBody.getText(); item.renderedTargetText = changes; java.lang.String newBody = com.door43.translationstudio.core.Translator.compileTranslation(changes); item.targetText = newBody; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8363/buggy-version/app.src.main.java.com.door43.translationstudio.ui.translate.ReviewModeAdapter.java", "BodyUseAPI": [], "Fixed commit": "7fea0ea8b092043ccf8c79c32fb8d4e35928d8e1", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2017-02-27T15:25:07Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((1 == directoryLevel) && (0 == (reported.size()))) { reported.clear(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3170/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.CascadingDirnameCallsInspector.java", "BodyUseAPI": ["java.util.List<java.lang.String>.clear()"], "Fixed commit": "24e9c657a4df9a9fc09840a4892bd518e12afa13", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2016-12-28T10:55:04Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < 0) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1763/buggy-version/hollow.src.main.java.com.netflix.hollow.core.index.HollowSparseIntegerSet.java", "BodyUseAPI": [], "Fixed commit": "b5e37c01bf066ee4f018b2b1abac46699df407fc", "Url": "https://api.github.com/repos/Netflix/hollow", "Date": "2017-08-21T18:01:25Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.netflix.hollow.core.index.HollowSparseIntegerSet.SparseBitSet.findMaxValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (maxValueAdded < 0) { maxValueAdded = (1 << (com.netflix.hollow.core.index.HollowSparseIntegerSet.SparseBitSet.BUCKET_SHIFT)) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1763/buggy-version/hollow.src.main.java.com.netflix.hollow.core.index.HollowSparseIntegerSet.java", "BodyUseAPI": [], "Fixed commit": "b5e37c01bf066ee4f018b2b1abac46699df407fc", "Url": "https://api.github.com/repos/Netflix/hollow", "Date": "2017-08-21T18:01:25Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (drone.isConnected()) { if (drone.isConnectionAlive()) listener.onDroneEvent(DroneInterfaces.DroneEventsType.HEARTBEAT_FIRST, drone); else { listener.onDroneEvent(DroneInterfaces.DroneEventsType.CONNECTED, drone); listener.onDroneEvent(DroneInterfaces.DroneEventsType.HEARTBEAT_TIMEOUT, drone); } notifyConnected(appId, listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5542/buggy-version/ServiceApp.src.org.droidplanner.services.android.drone.DroneManager.java", "BodyUseAPI": ["org.droidplanner.services.android.interfaces.DroneEventsListener.onDroneEvent(DroneInterfaces.DroneEventsType.CONNECTED,org.droidplanner.core.model.Drone)", "org.droidplanner.services.android.interfaces.DroneEventsListener.onDroneEvent(DroneInterfaces.DroneEventsType.HEARTBEAT_TIMEOUT,org.droidplanner.core.model.Drone)", "org.droidplanner.services.android.interfaces.DroneEventsListener.onDroneEvent(DroneInterfaces.DroneEventsType.HEARTBEAT_FIRST,org.droidplanner.core.model.Drone)", "org.droidplanner.core.model.Drone.isConnectionAlive()"], "Fixed commit": "99bf78575c346736cf944390509d8b511625fec8", "Url": "https://api.github.com/repos/dronekit/dronekit-android", "Date": "2015-04-24T05:55:47Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((minScoreBox.getSelectionModel().getSelectedItem()) != null) { minScore = ((java.lang.Integer) (minScoreBox.getSelectionModel().getSelectedItem())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3920/buggy-version/MSHClientModule.src.main.java.ui.componentcontroller.hotel.ClientHotelSearchPaneController.java", "BodyUseAPI": ["component.mychoicebox.MyChoiceBox.getSelectionModel()", "minScoreBox.getSelectionModel().getSelectedItem()"], "Fixed commit": "557139b948609875febfb52b43cfb78f710ea3f0", "Url": "https://api.github.com/repos/Inf1NityNJU/MSH", "Date": "2016-12-08T16:27:13Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((minScoreBox.getSelectionModel().getSelectedItem()) != null) { maxScore = ((java.lang.Integer) (minScoreBox.getSelectionModel().getSelectedItem())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3920/buggy-version/MSHClientModule.src.main.java.ui.componentcontroller.hotel.ClientHotelSearchPaneController.java", "BodyUseAPI": ["component.mychoicebox.MyChoiceBox.getSelectionModel()", "minScoreBox.getSelectionModel().getSelectedItem()"], "Fixed commit": "557139b948609875febfb52b43cfb78f710ea3f0", "Url": "https://api.github.com/repos/Inf1NityNJU/MSH", "Date": "2016-12-08T16:27:13Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(enabled)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3930/buggy-version/src.com.vloxlands.ui.ImageButton.java", "BodyUseAPI": [], "Fixed commit": "f9cfa3651ab8e259ef6a6e8ad65778f6219b0328", "Url": "https://api.github.com/repos/Ichmed/Vloxlands", "Date": "2013-09-09T13:30:56Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((exampleParts.length) < 2) { java.lang.System.out.println((\"bad example: \" + exampleString)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8776/buggy-version/src.com.jayantkrish.jklol.experiments.p3.P3Utils.java", "BodyUseAPI": [], "Fixed commit": "03098077d51254ff125213ce244dd8d0676047d8", "Url": "https://api.github.com/repos/jayantk/jklol", "Date": "2016-04-13T20:38:12Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((project.getLastBuild()) != null) { return (jenkins.model.Jenkins.getInstance().getRootUrl()) + (project.getLastBuild().getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1910/buggy-version/ekstazi.src.main.java.com.pluralsight.ekstazi.EkstaziProminentProjectAction.java", "BodyUseAPI": ["hudson.model.AbstractProject<? extends hudson.model.AbstractProject, ? extends hudson.model.AbstractBuild>.getLastBuild()", "project.getLastBuild().getUrl()"], "Fixed commit": "dff1849f2e82cbd212bd753f1b215cb04a64adb1", "Url": "https://api.github.com/repos/peterlvilim/EkstaziJenkinsPlugin", "Date": "2014-12-02T09:16:01Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((queryOptions.containsKey(\"count\")) && (queryOptions.getBoolean(\"count\"))) { queryOptions.remove(\"count\"); gene = ((com.mongodb.BasicDBObject) (qr.getResult().get(0))); queryOptions.put(\"count\", true); }else { gene = ((com.mongodb.BasicDBObject) (qr.getResult().get(0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6646/buggy-version/cellbase-server.src.main.java.org.opencb.cellbase.server.ws.feature.GeneWSServer.java", "BodyUseAPI": ["org.opencb.cellbase.server.ws.feature.GeneWSServer.put(java.lang.String,boolean)", "org.opencb.cellbase.server.ws.feature.GeneWSServer.remove(java.lang.String)"], "Fixed commit": "e8674d2c684a2dd7dbaa4945b1e81bbfeb908640", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2015-07-29T10:23:30Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scope.equals(\"main\")) { tmpcom = (((((\"//directive[@name=\\\"\" + directiveName) + \"\\\" and @group=\\\"\") + groupName) + \"\\\" and contains(@scope,\\\"\") + scope) + \"\\\")]/param\"; }else { tmpcom = (((((\"//directive[@name=\\\"\" + directiveName) + \"\\\" and @group=\\\"\") + groupName) + \"\\\" and (contains(@scope,\\\"\") + scope) + \"\\\") or contains(@scope,\\\"exmai\\\"))]/param\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1044/buggy-version/org.cs2c.vcenter.src.org.cs2c.vcenter.metadata.MetaManager.java", "BodyUseAPI": [], "Fixed commit": "7a1869122963b195673727bfa23da98c450c0336", "Url": "https://api.github.com/repos/os-cs2c/VisualCenter", "Date": "2013-12-12T04:43:54Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Class<?>, java.util.Set<java.lang.reflect.Method>>.get(java.lang.Class<?>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (observerMethods != null) { for (java.lang.reflect.Method triggerMethod : triggerMethodMap.get(clazz)) { java.lang.String triggerFullName = ((triggerMethod.getDeclaringClass().getName()) + \".\") + (triggerMethod.getName()); if (!(limeng32.mybatis.plugin.cache.impl.EnhancedCachingManagerImpl.observers.containsKey(triggerFullName))) { limeng32.mybatis.plugin.cache.impl.EnhancedCachingManagerImpl.observers.put(triggerFullName, new java.util.HashSet<java.lang.String>()); } for (java.lang.reflect.Method observerMethod : observerMethods) { java.lang.String observerFullName = ((observerMethod.getDeclaringClass().getName()) + \".\") + (observerMethod.getName()); limeng32.mybatis.plugin.cache.impl.EnhancedCachingManagerImpl.observers.get(triggerFullName).add(observerFullName); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6707/buggy-version/restma-demo.src.limeng32.mybatis.plugin.cache.impl.EnhancedCachingManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "adc2a245b3d10db4911560c08a33d8936c05014e", "Url": "https://api.github.com/repos/limeng32/restma-demo", "Date": "2015-08-18T15:32:17Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.cnnic.rdap.dao.impl.NameserverQueryDaoImpl.queryNameserverWithDomainID(java.lang.Long,cn.cnnic.rdap.bean.ModelType)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (listNameserver == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/564/buggy-version/rdap-webapp.src.main.java.cn.cnnic.rdap.dao.impl.NameserverQueryDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "684394334e8329cb3e359f5422e0c5dc5f188336", "Url": "https://api.github.com/repos/forumbyr/rdap", "Date": "2014-06-03T01:14:05Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isBuilding())) { hudson.maven.MavenBuild.LOGGER.log(java.util.logging.Level.WARNING, \"JENKINS-25406: illegal attempt to change result from {0} to {1} after {2} finished building\", new java.lang.Object[]{ getResult(), result, this }); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5391/buggy-version/src.main.java.hudson.maven.MavenBuild.java", "BodyUseAPI": [], "Fixed commit": "9ff0c92f0061108e9d9be89490953580df7360a7", "Url": "https://api.github.com/repos/olamy/maven-plugin", "Date": "2015-04-10T11:50:18Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (key != null) { service.setApiKey(key); }else { java.lang.System.err.println(\"No Service Keys found. Set the VIS_REC_API_KEY environment variable.\"); return new catastrophe.scoring.Score(0, \"no service available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4117/buggy-version/src.main.java.catastrophe.scoring.ImageScorer.java", "BodyUseAPI": ["com.ibm.watson.developer_cloud.visual_recognition.v3.VisualRecognition.setApiKey(java.lang.String)"], "Fixed commit": "e251ef6c1b32eea9dca2b51401c8e744b0042874", "Url": "https://api.github.com/repos/holly-cummins/catastrophe-scoring", "Date": "2016-11-10T13:24:22Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ofbiz.entity.util.EntityUtil.getFirst(delegator.findByAnd(\"ProductDesignFeatureWithType\", org.ofbiz.base.util.UtilMisc.toMap(\"productId\", ((java.lang.String) (products.get(i).get(\"productIdTo\"))), \"productFeatureTypeId\", \"COLOR\")))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.ofbiz.base.util.UtilValidate.isNotEmpty(productColor)) { dataCell.setCellValue(((java.lang.String) (productColor.get(\"idCode\")))); }else { dataCell.setCellValue(\"\u65e0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/875/buggy-version/hot-deploy.zuczugcommon.src.com.zuczug.util.ExcelUtilService.java", "BodyUseAPI": ["org.ofbiz.entity.GenericValue.get(java.lang.String)", "org.apache.poi.hssf.usermodel.HSSFCell.setCellValue(((java.lang.String) (productColor.get(\"idCode\"))))"], "Fixed commit": "e344592ba19da86bcbf18aa24c347587fd109900", "Url": "https://api.github.com/repos/zuczug/bluemountain", "Date": "2016-06-28T02:08:45Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ofbiz.entity.util.EntityUtil.getFirst(delegator.findByAnd(\"ProductDesignFeatureWithType\", org.ofbiz.base.util.UtilMisc.toMap(\"productId\", ((java.lang.String) (products.get(i).get(\"productIdTo\"))), \"productFeatureTypeId\", \"COLOR\")))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.ofbiz.base.util.UtilValidate.isNotEmpty(productColor)) { dataCell.setCellValue(((java.lang.String) (productColor.get(\"description\")))); }else { dataCell.setCellValue(\"\u65e0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/875/buggy-version/hot-deploy.zuczugcommon.src.com.zuczug.util.ExcelUtilService.java", "BodyUseAPI": ["org.ofbiz.entity.GenericValue.get(java.lang.String)", "org.apache.poi.hssf.usermodel.HSSFCell.setCellValue(((java.lang.String) (productColor.get(\"description\"))))"], "Fixed commit": "e344592ba19da86bcbf18aa24c347587fd109900", "Url": "https://api.github.com/repos/zuczug/bluemountain", "Date": "2016-06-28T02:08:45Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pr == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1313/buggy-version/app.src.main.java.in.pecfest.www.pecfest.Activites.HomeScreen.java", "BodyUseAPI": [], "Fixed commit": "9ef7b9336452fbdeba1cff71389f0c6ce2477c15", "Url": "https://api.github.com/repos/getjatin2010/PecfestAndroid", "Date": "2016-09-12T10:56:53Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (line != null) { linesTemp.add(0, line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1158/buggy-version/plugins.logreader.src.main.java.com.ftpix.logreader.LogReaderPlugin.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(int,java.lang.String)"], "Fixed commit": "496afb14d45ab442f5ac4567352bc59c9817fb62", "Url": "https://api.github.com/repos/lamarios/Homedash2", "Date": "2017-06-11T07:02:12Z"},
{"Line": "=>1722", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.objectweb.asm.tree.AbstractInsnNode, soot.Unit>.get(org.objectweb.asm.tree.AbstractInsnNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (u instanceof soot.jimple.IdentityStmt) caughtEx = ((soot.jimple.IdentityStmt) (u)); else if (u instanceof soot.asm.UnitContainer) caughtEx = getIdentityRefFromContrainer(((soot.asm.UnitContainer) (u)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3538/buggy-version/src.soot.asm.AsmMethodSource.java", "BodyUseAPI": [], "Fixed commit": "05ef1a7ca66855c7b8aaacb5742ce3ad722ad185", "Url": "https://api.github.com/repos/jtoman/soot", "Date": "2016-09-12T13:32:33Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode != (Activity.RESULT_OK)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4356/buggy-version/app.src.main.java.org.wit.myrent.activities.ResidenceActivity.java", "BodyUseAPI": [], "Fixed commit": "cc7e806b4d88f1ef00cfab88c99cb8475ef7daf2", "Url": "https://api.github.com/repos/wit-ictskills-2016/myrent-06", "Date": "2016-10-03T16:22:42Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((valueLastSelected) != null) { chartBottom.selectValue(valueLastSelected); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6164/buggy-version/android_app.app.src.main.java.com.health.openscale.gui.GraphFragment.java", "BodyUseAPI": [], "Fixed commit": "281e737d769cd230817c97b1542c91d09fe88fd2", "Url": "https://api.github.com/repos/oliexdev/openScale", "Date": "2015-01-04T16:21:28Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cs3500.music.view.ConcreteGuiViewPanel.calculateY(cs3500.music.view.NoteRep)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (noteY >= (((cs3500.music.view.ConcreteGuiViewPanel.NOTE_HEIGHT) / 2) + ((rangeOfNotes.size()) * (cs3500.music.view.ConcreteGuiViewPanel.NOTE_HEIGHT)))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1617/buggy-version/src.cs3500.music.view.ConcreteGuiViewPanel.java", "BodyUseAPI": [], "Fixed commit": "79623d50528743d2b0a08b0f180a2a134b8d4e50", "Url": "https://api.github.com/repos/Arianna2028/MusicEditor", "Date": "2016-04-06T04:29:39Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((N <= 0) || (T <= 0)) throw new java.lang.IllegalArgumentException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6098/buggy-version/src.percolation.PercolationStats.java", "BodyUseAPI": [], "Fixed commit": "f1265b990801603546f6d48ed2a76d51d13a6caf", "Url": "https://api.github.com/repos/harishankarv/coursera-algorithms", "Date": "2015-07-03T01:40:15Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((action.requiresTargetEntity()) && (!hasEntityTarget)) return com.elmakers.mine.bukkit.api.spell.SpellResult.NO_TARGET;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3294/buggy-version/src.main.java.com.elmakers.mine.bukkit.action.ActionContext.java", "BodyUseAPI": [], "Fixed commit": "88923bd8ad6c78500de003effd6195c63501b97a", "Url": "https://api.github.com/repos/elBukkit/MagicLib", "Date": "2015-04-10T23:22:57Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((action.requiresTarget()) && (!hasTarget)) return com.elmakers.mine.bukkit.api.spell.SpellResult.NO_TARGET;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3294/buggy-version/src.main.java.com.elmakers.mine.bukkit.action.ActionContext.java", "BodyUseAPI": [], "Fixed commit": "88923bd8ad6c78500de003effd6195c63501b97a", "Url": "https://api.github.com/repos/elBukkit/MagicLib", "Date": "2015-04-10T23:22:57Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((prev.getStartDate().after(curr.getStartDate())) && (prev.getStartDate().before(curr.getEndDate()))) { curr.setCollideWithPrev(true); }else if ((prev.getEndDate().after(curr.getStartDate())) && (prev.getEndDate().before(curr.getEndDate()))) { curr.setCollideWithPrev(true); }else if ((curr.getStartDate().after(prev.getStartDate())) && (curr.getStartDate().before(prev.getEndDate()))) { curr.setCollideWithPrev(true); }else if ((curr.getEndDate().after(prev.getStartDate())) && (curr.getEndDate().before(prev.getEndDate()))) { curr.setCollideWithPrev(true); }else { curr.setCollideWithPrev(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8738/buggy-version/src.main.logic.ScheduleManager.java", "BodyUseAPI": ["main.data.Task.getEndDate()", "curr.getStartDate().before(prev.getEndDate())", "main.data.Task.setCollideWithPrev(boolean)", "main.data.Task.setCollideWithPrev(boolean)", "main.data.Task.getStartDate()", "main.data.Task.getStartDate()", "main.data.Task.getStartDate()", "main.data.Task.getStartDate()", "main.data.Task.setCollideWithPrev(boolean)", "main.data.Task.getEndDate()", "curr.getStartDate().after(prev.getStartDate())", "main.data.Task.setCollideWithPrev(boolean)", "prev.getEndDate().after(curr.getStartDate())", "curr.getEndDate().before(prev.getEndDate())", "main.data.Task.setCollideWithPrev(boolean)", "main.data.Task.getEndDate()", "main.data.Task.getEndDate()", "main.data.Task.getStartDate()", "curr.getEndDate().after(prev.getStartDate())", "main.data.Task.getEndDate()", "main.data.Task.getEndDate()", "prev.getEndDate().before(curr.getEndDate())", "main.data.Task.getEndDate()"], "Fixed commit": "9189baa77f9f28c1fa9bc80e6af20e1ad706d40a", "Url": "https://api.github.com/repos/cs2103jan2016-f13-1j/main", "Date": "2016-04-04T10:03:42Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((next.getStartDate().after(curr.getStartDate())) && (next.getStartDate().before(curr.getEndDate()))) { curr.setCollideWithNext(true); }else if ((next.getEndDate().after(curr.getStartDate())) && (next.getEndDate().before(curr.getEndDate()))) { curr.setCollideWithNext(true); }else if ((curr.getStartDate().after(next.getStartDate())) && (curr.getStartDate().before(next.getEndDate()))) { curr.setCollideWithNext(true); }else if ((curr.getEndDate().after(next.getStartDate())) && (curr.getEndDate().before(next.getEndDate()))) { curr.setCollideWithNext(true); }else { curr.setCollideWithNext(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8738/buggy-version/src.main.logic.ScheduleManager.java", "BodyUseAPI": ["curr.getStartDate().before(next.getEndDate())", "main.data.Task.getEndDate()", "curr.getEndDate().before(next.getEndDate())", "main.data.Task.setCollideWithNext(boolean)", "main.data.Task.setCollideWithNext(boolean)", "next.getEndDate().after(curr.getStartDate())", "curr.getStartDate().after(next.getStartDate())", "main.data.Task.getStartDate()", "main.data.Task.getEndDate()", "next.getEndDate().before(curr.getEndDate())", "main.data.Task.getStartDate()", "main.data.Task.getStartDate()", "main.data.Task.getEndDate()", "main.data.Task.setCollideWithNext(boolean)", "main.data.Task.getEndDate()", "main.data.Task.getStartDate()", "main.data.Task.setCollideWithNext(boolean)", "main.data.Task.getEndDate()", "main.data.Task.getStartDate()", "main.data.Task.setCollideWithNext(boolean)", "main.data.Task.getEndDate()", "curr.getEndDate().after(next.getStartDate())", "main.data.Task.getEndDate()"], "Fixed commit": "9189baa77f9f28c1fa9bc80e6af20e1ad706d40a", "Url": "https://api.github.com/repos/cs2103jan2016-f13-1j/main", "Date": "2016-04-04T10:03:42Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof java.lang.Long) bb.putLong(((java.lang.Long) (value))); else if (value instanceof java.math.BigDecimal) bb.putLong(((java.math.BigDecimal) (value)).longValue()); else bb.putLong(java.lang.Long.MIN_VALUE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8742/buggy-version/src.main.java.nl.topicus.mssql2monetdb.copy.binary.LongValueConverter.java", "BodyUseAPI": [], "Fixed commit": "365ffc07a3ed7b562dc3a6b4bed2c04ab363d01a", "Url": "https://api.github.com/repos/topicusonderwijs/mssql2monetdb", "Date": "2016-09-26T06:59:02Z"},
{"Line": "=>3833", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((var.objtype) == null) || (var.isNotSingleton())) { java.lang.String typeStr = clojure.lang.Compiler.getNSClassname(var.ns); gen.putStatic(clojure.lang.Type.getType(typeStr), clojure.lang.Compiler.munge(var.sym.name), clojure.lang.Compiler.OBJECT_TYPE); }else { gen.putStatic(var.objtype, \"__instance\", clojure.lang.Compiler.OBJECT_TYPE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2136/buggy-version/src.jvm.clojure.lang.Compiler.java", "BodyUseAPI": ["clojure.lang.Compiler.getNSClassname(var.ns)", "clojure.asm.commons.GeneratorAdapter.putStatic(clojure.lang.Type.getType(typeStr),java.lang.String,clojure.lang.Type)", "clojure.lang.Compiler.munge(var.sym.name)", "clojure.asm.commons.GeneratorAdapter.putStatic(var.objtype,java.lang.String,clojure.lang.Type)"], "Fixed commit": "f11ba0871af41bd7a45f9ece594e43c89a2fc17c", "Url": "https://api.github.com/repos/alexander-yakushev/clojure", "Date": "2015-08-02T17:26:51Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (major.getUrl().equals(\"http://www.lboro.ac.uk\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4312/buggy-version/Loughborough.src.LoughboroughPostgraduate.java", "BodyUseAPI": [], "Fixed commit": "bbf6cdc6eecb6a72a8be31de949c33965d76fe03", "Url": "https://api.github.com/repos/Jeeeeeiel/Spiders", "Date": "2015-09-27T02:02:14Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["conn.timeout(60000).get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((doc.getElementById(\"accordion\")) != null) { int i = 1; java.lang.System.out.println(doc.getElementById(\"accordion\")); for (org.jsoup.nodes.Element tmp : doc.getElementById(\"accordion\").getElementsByTag(\"h3\")) { if (tmp.text().contains(\"Entry\")) { java.lang.System.out.println((\"i=\" + i)); e = doc.getElementById(\"accordion\").getElementsByTag(\"div\").get(i); major.setAcademicRequirements(e.text()); java.lang.System.out.println(major.getAcademicRequirements()); break; } i++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4312/buggy-version/Loughborough.src.LoughboroughPostgraduate.java", "BodyUseAPI": ["java.io.PrintStream.println(doc.getElementById(\"accordion\"))", "org.jsoup.nodes.Document.getElementById(java.lang.String)", "doc.getElementById(\"accordion\").getElementsByTag(\"div\").get(int)", "doc.getElementById(\"accordion\").getElementsByTag(java.lang.String)", "org.jsoup.nodes.Document.getElementById(java.lang.String)", "doc.getElementById(\"accordion\").getElementsByTag(java.lang.String)", "org.jsoup.nodes.Document.getElementById(java.lang.String)"], "Fixed commit": "bbf6cdc6eecb6a72a8be31de949c33965d76fe03", "Url": "https://api.github.com/repos/Jeeeeeiel/Spiders", "Date": "2015-09-27T02:02:14Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bbhs.appbowl2017.StackActivity.grid.get(((int) (button.getTag(R.id.stack_column)))).size()) < (bbhs.appbowl2017.StackActivity.SIZE_Y)) button.setEnabled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6623/buggy-version/app.src.main.java.bbhs.appbowl2017.StackActivity.java", "BodyUseAPI": ["android.view.View.setEnabled(boolean)"], "Fixed commit": "82e15f0f0ed2f2514403ff13e12a906e08b21604", "Url": "https://api.github.com/repos/BBHSComputer/AppBowl2017", "Date": "2017-05-05T18:00:03Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bbhs.appbowl2017.StackActivity.grid.get(((int) (button.getTag(R.id.stack_column)))).size()) < (bbhs.appbowl2017.StackActivity.SIZE_Y)) { button.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6623/buggy-version/app.src.main.java.bbhs.appbowl2017.StackActivity.java", "BodyUseAPI": ["android.view.View.setEnabled(boolean)"], "Fixed commit": "82e15f0f0ed2f2514403ff13e12a906e08b21604", "Url": "https://api.github.com/repos/BBHSComputer/AppBowl2017", "Date": "2017-05-05T18:00:03Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((cfg.getClassLoader()) == null) { throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5781/buggy-version/core.src.main.java.org.ehcache.config.DefaultConfiguration.java", "BodyUseAPI": [], "Fixed commit": "70f03b0be6dc522fe4d1dda227d0bc6dbaf9c557", "Url": "https://api.github.com/repos/mathieucarbou/ehcache3", "Date": "2016-06-16T21:53:43Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((net.validcat.st.wb.support.BottleParams.count) == (BottleParams.bottleTxt.length)) && ((net.validcat.st.wb.support.BottleParams.count) != 0)) { imgBottle.setImageDrawable(getResources().getDrawable(net.validcat.st.wb.support.BottleParams.bottleImg[((net.validcat.st.wb.support.BottleParams.count) - 1)])); imgFull.setImageResource(R.drawable.ic_full); tvInfo.setText(R.string.full); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1202/buggy-version/app.src.main.java.net.validcat.st.wb.MainActivity.java", "BodyUseAPI": ["getResources().getDrawable(net.validcat.st.wb.support.BottleParams.bottleImg[((net.validcat.st.wb.support.BottleParams.count) - 1)])", "android.widget.ImageView.setImageDrawable(getResources().getDrawable(net.validcat.st.wb.support.BottleParams.bottleImg[((net.validcat.st.wb.support.BottleParams.count) - 1)]))"], "Fixed commit": "302f46dcfef6616d64954ef380698f199257057d", "Url": "https://api.github.com/repos/zonell/Aqua-Balans", "Date": "2016-02-01T11:02:58Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListener) != null) { mListener.onAmountChange(amount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8539/buggy-version/library.src.main.java.me.c.abiang.AmountView.java", "BodyUseAPI": [], "Fixed commit": "25a24e959b2c1877ba8621edc6c2581f5eb032be", "Url": "https://api.github.com/repos/nukc/AmountView", "Date": "2015-07-30T11:29:57Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mControl.getModel().getGoodsList()) != null) && ((mControl.getModel().getGoodsList().size()) > 0)) { emptyView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5401/buggy-version/src.com.PATHomei.yanyu.module.user.center.SalesMessageActivity.java", "BodyUseAPI": [], "Fixed commit": "32fbb452f7c84696598e2c359a5b45fe5d80b35f", "Url": "https://api.github.com/repos/seedzi/PATHomei_eclipse", "Date": "2015-07-04T02:17:59Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aclfBus) instanceof com.interpss.dstab.DStabBus) gen = com.interpss.DStabObjectFactory.createDStabGen(); else if ((aclfBus) instanceof com.interpss.core.acsc.AcscBus) gen = com.interpss.CoreObjectFactory.createAcscGen(); else gen = com.interpss.CoreObjectFactory.createAclfGen();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1655/buggy-version/ipss.plugin.core.src.org.interpss.mapper.odm.impl.aclf.AclfBusDataHelper.java", "BodyUseAPI": [], "Fixed commit": "08e0cb68dc980886426d64663781b009e341bce4", "Url": "https://api.github.com/repos/InterPSS-Project/ipss-plugin", "Date": "2014-01-09T04:36:09Z"},
{"Line": "=>1561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageList) != null) { return imageList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4501/buggy-version/src.ucar.unidata.data.imagery.ImageDataSource.java", "BodyUseAPI": [], "Fixed commit": "1e7c678667b817b0d3a33b3c41906623c4d437e7", "Url": "https://api.github.com/repos/lesserwhirls/IDV", "Date": "2012-11-04T20:50:33Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exquery.http.HttpRequest.getHeader(HttpHeaderName.Accept.toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (acceptHeaderValue == null) acceptHeaderValue = \"*/*\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7600/buggy-version/exquery-restxq.src.main.java.org.exquery.restxq.impl.annotation.ProducesAnnotationImpl.java", "BodyUseAPI": [], "Fixed commit": "8e84cbff68010daaa5e614881b0de4f4db7c3599", "Url": "https://api.github.com/repos/ChristianGruen/exquery", "Date": "2015-02-25T07:02:06Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.size()) > 1) { for (nez.expr.Expression e : this) { l.add(e); } }else { l.add(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2500/buggy-version/src.nez.expr.Expression.java", "BodyUseAPI": [], "Fixed commit": "c2967afc8ae3b75e746d1c9c0c0f1daf59be058c", "Url": "https://api.github.com/repos/Kouhei-Moriya/nez", "Date": "2015-02-24T00:41:46Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((((task.x) * (scale)) + x) < (width)) && ((((task.x) * (scale)) + x) >= 0)) && ((((task.y) * (scale)) + y) < (height))) && ((((task.y) * (scale)) + y) >= 0)) pixels[((((task.x) * (scale)) + x) + ((width) * (((task.y) * (scale)) + y)))] = pixel;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4632/buggy-version/src.uk.co.newagedev.jnade.graphics.Screen.java", "BodyUseAPI": [], "Fixed commit": "78414e0d2f9eb6779f5aed57b4f6e36a73170f03", "Url": "https://api.github.com/repos/JoshuaBradbury/JNADE", "Date": "2016-04-16T17:12:01Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((card.getValue()) == 13) && (card.isFirstCard())) && (stacks[k].isEmpty())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6110/buggy-version/app.src.main.java.de.tobiasbielefeld.solitaire.games.Yukon.java", "BodyUseAPI": [], "Fixed commit": "c8d92354af690aa81a7d7f78684b64baf106d7bf", "Url": "https://api.github.com/repos/dankan1890/Simple-Solitaire", "Date": "2017-02-13T14:40:57Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (0 <= (t.getColumnNumber(rset.getMetaData().getCatalogName(i)))) { m_handler.process(t, row, rset, i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/68/buggy-version/src.prefuse.data.io.sql.DatabaseResultSetProcessor.java", "BodyUseAPI": ["prefuse.data.io.sql.SQLDataHandler.process(prefuse.data.Table,int,java.sql.ResultSet,int)"], "Fixed commit": "caa5cd0a65b0f4373a213a0bbc060ca26dc506ef", "Url": "https://api.github.com/repos/Sasti/Prefuse", "Date": "2014-09-19T18:46:33Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.normalexception.forum.rx8club.bitmap.RegisteredBitmap.getBitmap()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (bmp == null) toRemove.add(ent.getKey()); else if (!(bmp.isRecycled())) { if ((ent.getValue().id) == id) { ent.getValue().getBitmap().recycle(); toRemove.add(ent.getKey()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8962/buggy-version/src.com.normalexception.forum.rx8club.bitmap.RegisteredBitmap.java", "BodyUseAPI": ["android.graphics.Bitmap.isRecycled()"], "Fixed commit": "dd246fbc1c2258eda55d2948c8c7ec477e588bd5", "Url": "https://api.github.com/repos/paimonsoror/RX8Club.com-Forum-Application", "Date": "2014-01-05T16:26:18Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (numLikes == 1) { return context.getString(R.string.reader_likes_one); }else { java.lang.String likes = context.getString(R.string.reader_likes_multi); return java.lang.String.format(likes, numLikes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8580/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.reader.utils.ReaderUtils.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,int)"], "Fixed commit": "e667404e32de00672abb3b214330c2d67652133f", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2015-07-07T01:22:11Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.mygeotrust.indoor.tasks.detectIndoorOutdoor.IndoorOutdoorDetectorController.activityContext) != null) { org.mygeotrust.indoor.tasks.detectIndoorOutdoor.IndoorOutdoorDetectorController.activityContext.unregisterReceiver(currentStatusReceiver); org.mygeotrust.indoor.tasks.detectIndoorOutdoor.IndoorOutdoorDetectorController.activityContext.unregisterReceiver(wifiInfoReceiver); org.mygeotrust.indoor.tasks.detectIndoorOutdoor.IndoorOutdoorDetectorController.activityContext.stopService(new android.content.Intent(org.mygeotrust.indoor.tasks.detectIndoorOutdoor.IndoorOutdoorDetectorController.activityContext, org.mygeotrust.indoor.tasks.detectIndoorOutdoor.algorithm.DetermineIndoorOutdoorService.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2384/buggy-version/android-client.app.src.main.java.org.mygeotrust.indoor.tasks.detectIndoorOutdoor.IndoorOutdoorDetectorController.java", "BodyUseAPI": [], "Fixed commit": "1376f5c733ac5aa71949d4b7a9fd38583234b94e", "Url": "https://api.github.com/repos/robguinness/MyGT_Indoor", "Date": "2016-07-22T12:31:19Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parserContext.isWithinMultiField()) { throw new org.elasticsearch.index.mapper.MapperParsingException((\"sub-fields shouldn't contain property: include_in_all, and current node is:\" + name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8571/buggy-version/core.src.main.java.org.elasticsearch.index.mapper.TypeParsers.java", "BodyUseAPI": [], "Fixed commit": "318ce6ab16635392b6c0f17e7b54015b85eaf1d3", "Url": "https://api.github.com/repos/tbrooks8/elasticsearch", "Date": "2016-12-05T11:14:34Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["servletContextEvent.getServletContext().getRealPath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((root != null) && (java.nio.file.Files.isDirectory(java.nio.file.Paths.get(root)))) { try { java.nio.file.Files.createDirectories(java.nio.file.Paths.get(servletContextEvent.getServletContext().getRealPath(\"/VAADIN/themes/costume\"))); } catch (final java.io.IOException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2144/buggy-version/java.server.src.main.java.net.lab1318.costume.server.ServletContextListener.java", "BodyUseAPI": [], "Fixed commit": "0b3be1984cc5702e58a116d8918ff8f75be240c1", "Url": "https://api.github.com/repos/minorg/dressdiscover", "Date": "2016-01-29T20:19:52Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.uka.ipd.sdq.beagle.core.evaluableexpressions.EvaluableExpression.evaluate(de.uka.ipd.sdq.beagle.core.evaluableexpressions.EvaluableVariableAssignment)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resultIf == (java.lang.Double.NaN)) { return java.lang.Double.NaN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8271/buggy-version/Core.src.main.java.de.uka.ipd.sdq.beagle.core.evaluableexpressions.IfThenElseExpression.java", "BodyUseAPI": [], "Fixed commit": "5e618c948a2f2acd0596b0f4eef74fbf035a6da4", "Url": "https://api.github.com/repos/Beagle-PSE/Beagle", "Date": "2016-02-01T13:45:58Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mStream) == null) { startStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8403/buggy-version/Dopestreamer.src.com.dopelives.dopestreamer.gui.controllers.Streams.java", "BodyUseAPI": [], "Fixed commit": "7ebecbb5f3f25174ab0dd68deba354e649ed8ebc", "Url": "https://api.github.com/repos/tvkanters/Dopestreamer", "Date": "2014-04-03T12:45:10Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.verapdf.pd.PDHalftone.getObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((object.getType()) == (org.verapdf.cos.COSObjType.COS_NAME)) && ((object.getName()) == (org.verapdf.as.ASAtom.DEFAULT))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1229/buggy-version/validation-model.src.main.java.org.verapdf.gf.model.impl.pd.GFPDHalftone.java", "BodyUseAPI": [], "Fixed commit": "788295e53b239e1d233565a335eebda95e5a82d0", "Url": "https://api.github.com/repos/veraPDF/veraPDF-validation", "Date": "2017-07-10T11:45:16Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.verapdf.pd.PDHalftone.getObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((object.getType()) == (org.verapdf.cos.COSObjType.COS_NAME)) && ((object.getName()) == (org.verapdf.as.ASAtom.getASAtom(\"Default\")))) { return java.lang.Long.valueOf(1L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1229/buggy-version/validation-model.src.main.java.org.verapdf.gf.model.impl.pd.GFPDHalftone.java", "BodyUseAPI": [], "Fixed commit": "788295e53b239e1d233565a335eebda95e5a82d0", "Url": "https://api.github.com/repos/veraPDF/veraPDF-validation", "Date": "2017-07-10T11:45:16Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) onNavigationItemSelected(navigationView.getMenu().getItem(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7838/buggy-version/BabillardLionel-Groulx.app.src.main.java.delaireleroux.babillardlionel_groulx.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7e0f33fd2356af2a9ccfc74d2320233d7de333d1", "Url": "https://api.github.com/repos/ExLuor/Babillard-Lionel-Groulx", "Date": "2016-09-30T22:07:32Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((indexes.size()) > (irank)) { throw new java.lang.IllegalArgumentException(\"Too many indices (a boolean dataset may have too many dimensions)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/685/buggy-version/org.eclipse.dawnsci.analysis.dataset.src.org.eclipse.dawnsci.analysis.dataset.impl.IntegersIterator.java", "BodyUseAPI": [], "Fixed commit": "c20058d899af3666b254b6d5a47dd747b80f85c2", "Url": "https://api.github.com/repos/eclipse/dawnsci", "Date": "2015-11-06T13:39:30Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mConnected) { disconnect(); if ((mListener) != null) mListener.onConnectionError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2932/buggy-version/src.main.java.com.morlunk.jumble.net.JumbleConnection.java", "BodyUseAPI": [], "Fixed commit": "890b9d0b0ae6d2fae7bf7e7bcd6d6524fdf146b8", "Url": "https://api.github.com/repos/Morlunk/Jumble", "Date": "2014-04-12T00:08:38Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.cuni.mff.xrg.odcs.commons.app.facade.DPUFacade.getByJarName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parent == null) { throw new cz.cuni.mff.xrg.odcs.commons.app.module.DPUCreateException(((\"DPU \" + newDpuFileName) + \" already exists but with different version.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/411/buggy-version/commons-app.src.main.java.cz.cuni.mff.xrg.odcs.commons.app.module.DPUModuleManipulator.java", "BodyUseAPI": [], "Fixed commit": "b30c26c97f16f01c69236a15c212e97ebaee22b5", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2014-09-05T07:48:30Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (member.isManager()) { member.setPhotoLink(\"manager.jpg\"); }else if (member.isDeveloper()) { member.setPhotoLink(\"developer.jpg\"); }else { member.setPhotoLink(\"qa.jpg\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5717/buggy-version/src.main.java.com.epam.lab.intouch.controller.member.common.MemberController.java", "BodyUseAPI": ["com.epam.lab.intouch.model.member.Member.isDeveloper()", "com.epam.lab.intouch.model.member.Member.setPhotoLink(java.lang.String)", "com.epam.lab.intouch.model.member.Member.setPhotoLink(java.lang.String)", "com.epam.lab.intouch.model.member.Member.setPhotoLink(java.lang.String)"], "Fixed commit": "d34284859a7a2d1249b6fb4586be68464cfa69fe", "Url": "https://api.github.com/repos/revan-kun/inTouch", "Date": "2013-05-24T00:15:51Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p2.x) >= (p1.x)) { displaceX = ((float) (java.lang.Math.cos(angle))); }else { displaceX = ((float) (-(java.lang.Math.cos(angle)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8216/buggy-version/se2017team2.src.petriVisualization.PetriWindow.java", "BodyUseAPI": [], "Fixed commit": "6d7784a4d21a075bc6fee95354c6afdc799c399a", "Url": "https://api.github.com/repos/tslaats/SE2017-Team2", "Date": "2017-04-04T18:13:37Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p2.y) >= (p1.y)) { displaceY = ((float) (java.lang.Math.sin(angle))); }else { displaceY = ((float) (-(java.lang.Math.sin(angle)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8216/buggy-version/se2017team2.src.petriVisualization.PetriWindow.java", "BodyUseAPI": [], "Fixed commit": "6d7784a4d21a075bc6fee95354c6afdc799c399a", "Url": "https://api.github.com/repos/tslaats/SE2017-Team2", "Date": "2017-04-04T18:13:37Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberOfPlayers < 1) { throw new java.lang.NumberFormatException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2594/buggy-version/src.Stub.java", "BodyUseAPI": [], "Fixed commit": "83a0c264b24123834198d9b2a468edc39c089d97", "Url": "https://api.github.com/repos/NicholasEllul/Yahtzee-Console-Game", "Date": "2016-11-29T02:13:04Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(flying)) setSpeedY(((getSpeedY()) + (l.getGravitation())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5722/buggy-version/src.LevelVerwaltung.GegnerVerwaltung.Enemy.java", "BodyUseAPI": [], "Fixed commit": "87a5c858d90b74c038b1f71f9c3cc2bd419fdf6c", "Url": "https://api.github.com/repos/pixel64/swt", "Date": "2016-09-25T14:23:29Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["UserPackage.User.getOldPassword()", "java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(pass.equals(oldPassword))) { oos.writeObject(\"Password is incorrect\"); }else if (newPassword == null) { st.executeUpdate(((((((((\"update users set firstname = '\" + firstname) + \"', lastname = '\") + lastname) + \"', email = '\") + email) + \"' where userid = \") + userId) + \";\")); oos.writeObject(\"Success\"); }else { st.executeUpdate(((((((((((\"update users set firstname = '\" + firstname) + \"', lastname = '\") + lastname) + \"', email = '\") + email) + \"', password = '\") + newPassword) + \"' where userid = \") + userId) + \";\")); oos.writeObject(\"Success\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5299/buggy-version/src.Operations.ChangeUserInfo.java", "BodyUseAPI": [], "Fixed commit": "2af1bcec71dfab6d8efb1f7b55e6aa7bed67db58", "Url": "https://api.github.com/repos/tykesson89/AutoWorkJavaServer", "Date": "2016-04-03T20:42:41Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rascalmpl.eclipse.wizards.NewRascalFilePage.getContainerName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (container.endsWith(\"/\")) { container = container.substring(0, ((container.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3781/buggy-version/src.org.rascalmpl.eclipse.wizards.NewRascalFile.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "a13f3e8572609ed8c0dc75679f314ea90bb499b1", "Url": "https://api.github.com/repos/usethesource/rascal-eclipse", "Date": "2015-06-15T12:50:51Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((top) >= (stack.length)) { java.lang.String[] x = new java.lang.String[(stack.length) * 2]; for (i = 0; (i) <= (top); (i)++) { x[i] = stack[i]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8329/buggy-version/12-stack.MyStack.java", "BodyUseAPI": [], "Fixed commit": "24f931dae95a7a0c906fc49ef6ff83fa8f91c160", "Url": "https://api.github.com/repos/koprty/apcs-hw", "Date": "2014-04-08T12:54:12Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.exists()) { try { savefile.loadFromNBT(net.minecraft.nbt.CompressedStreamTools.readCompressed(new java.io.FileInputStream(file))); } catch (java.io.IOException ioe) { chylex.hee.system.logging.Log.throwable(ioe, \"Could not load NBT file - $0\", cls.getName()); } }else savefile.loadFromNBT(new net.minecraft.nbt.NBTTagCompound());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6560/buggy-version/src.main.java.chylex.hee.system.savedata.WorldDataHandler.java", "BodyUseAPI": ["net.minecraft.nbt.CompressedStreamTools.readCompressed(java.io.FileInputStream)", "chylex.hee.system.savedata.WorldSavefile.loadFromNBT(net.minecraft.nbt.CompressedStreamTools.readCompressed(new java.io.FileInputStream(file)))"], "Fixed commit": "82e1f49d967b121c9f16561b0fc0af4b3ee9b604", "Url": "https://api.github.com/repos/chylex/Hardcore-Ender-Expansion", "Date": "2014-08-14T02:34:06Z"},
{"Line": "=>958", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.erozabesu.yplkart.utils.KartUtil.invoke(Methods.nmsEntity_getBukkitEntity,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (player.isSneaking()) { speedStack -= (kartObject.getSpeedDecreaseOnDrift()) * 0.7; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6049/buggy-version/src.com.github.erozabesu.yplkart.utils.KartUtil.java", "BodyUseAPI": [], "Fixed commit": "ac1ded15bd6e952fb91a7fb2b535ea2f80bf2ffb", "Url": "https://api.github.com/repos/qpwakaba/YPLKart", "Date": "2015-08-27T19:11:56Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((items.size()) != 0) com.example.demo.SharedPreference.setSharedPreference(com.example.demo.GamePresenter.context, com.example.demo.GamePresenter.itemBeen, score);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7250/buggy-version/app.src.main.java.com.example.demo.GamePresenter.java", "BodyUseAPI": [], "Fixed commit": "45d784451c963d2baefc3e7eac6795110ad115f7", "Url": "https://api.github.com/repos/DavidLyc/2048game", "Date": "2017-02-02T05:04:32Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mongodb.client.MongoCollection<org.bson.Document>.count()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numDocs != 0) { java.lang.String json = collection.find().first().toJson(); approxDiskCost = (json.getBytes().length) * numDocs; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5889/buggy-version/contrib.storage-mongo.src.main.java.org.apache.drill.exec.store.mongo.MongoGroupScan.java", "BodyUseAPI": [], "Fixed commit": "ed2f1ca8ed3c0ebac7e33494db6749851fc2c970", "Url": "https://api.github.com/repos/laurentgo/drill", "Date": "2016-01-01T09:09:29Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDebugEnabled())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3467/buggy-version/src.main.java.org.onebusaway.cli.Daemonizer.java", "BodyUseAPI": [], "Fixed commit": "75503b2fddc05ef2680ea10beed44cf57e44a7df", "Url": "https://api.github.com/repos/OneBusAway/onebusaway-cli", "Date": "2012-05-17T11:34:58Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.ebi.fg.biosd.model.expgraph.BioSample.getMSIs()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((msis.size()) < 1) { throw new java.lang.IllegalStateException(((\"BioSample \" + (getAcc())) + \" has less than one MSI\")); }else { return msis.iterator().next().isPublic(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6342/buggy-version/src.main.java.uk.ac.ebi.fg.biosd.model.expgraph.BioSample.java", "BodyUseAPI": ["java.util.Set<uk.ac.ebi.fg.biosd.model.organizational.MSI>.iterator()", "msis.iterator().next()", "msis.iterator().next().isPublic()"], "Fixed commit": "54ef2f115ead12ed0a649e721d8001964d9ee144", "Url": "https://api.github.com/repos/EBIBioSamples/biosd_model", "Date": "2016-04-19T07:59:41Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.ebi.fg.biosd.model.organizational.BioSampleGroup.getMSIs()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((msis.size()) < 1) { throw new java.lang.IllegalStateException(((\"BioSampleGroup \" + (getAcc())) + \" less than one MSI\")); }else { return msis.iterator().next().isPublic(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6342/buggy-version/src.main.java.uk.ac.ebi.fg.biosd.model.organizational.BioSampleGroup.java", "BodyUseAPI": ["java.util.Set<uk.ac.ebi.fg.biosd.model.organizational.MSI>.iterator()", "msis.iterator().next()", "msis.iterator().next().isPublic()"], "Fixed commit": "54ef2f115ead12ed0a649e721d8001964d9ee144", "Url": "https://api.github.com/repos/EBIBioSamples/biosd_model", "Date": "2016-04-19T07:59:41Z"},
{"Line": "=>732", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(enabled)) return java.util.Collections.emptySet();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5669/buggy-version/codehint-plugin.src.codehint.effects.SideEffectHandler.java", "BodyUseAPI": [], "Fixed commit": "49541d10dc7b348acf365358fc8aecea092d5b1e", "Url": "https://api.github.com/repos/jgalenson/codehint", "Date": "2014-08-05T00:43:12Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.beans.admin.ComponentInstManager.makeComponentInstanceRow(com.stratelia.webactiv.beans.admin.ComponentInst)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(lang.equals(newInstance.lang))) { com.stratelia.webactiv.beans.admin.ComponentI18N translation = ((com.stratelia.webactiv.beans.admin.ComponentI18N) (translations.get(lang))); com.stratelia.webactiv.organization.ComponentInstanceI18NRow row = new com.stratelia.webactiv.organization.ComponentInstanceI18NRow(newInstance.id, lang, translation.getName(), translation.getDescription()); ddManager.getOrganization().instanceI18N.createTranslation(row); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4137/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.beans.admin.ComponentInstManager.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.silverpeas.util.i18n.Translation>.get(java.lang.String)"], "Fixed commit": "9cd61af773a3662f6ab22ed7d269f14a61f60e4d", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2014-01-21T10:42:50Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.beans.admin.SpaceInstManager.makeSpaceRow(com.stratelia.webactiv.beans.admin.SpaceInst)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(lang.equals(newSpaceRow.lang))) { com.stratelia.webactiv.beans.admin.SpaceI18N translation = ((com.stratelia.webactiv.beans.admin.SpaceI18N) (translations.get(lang))); com.stratelia.webactiv.organization.SpaceI18NRow row = new com.stratelia.webactiv.organization.SpaceI18NRow(newSpaceRow.id, lang, translation.getName(), translation.getDescription()); ddManager.getOrganization().spaceI18N.createTranslation(row); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4137/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.beans.admin.SpaceInstManager.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.silverpeas.util.i18n.Translation>.get(java.lang.String)"], "Fixed commit": "9cd61af773a3662f6ab22ed7d269f14a61f60e4d", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2014-01-21T10:42:50Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 100) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4431/buggy-version/sample.src.main.java.io.xpush.sampleChat.fragments.FriendsFragment.java", "BodyUseAPI": [], "Fixed commit": "384c91d7fb6380a4d98a6407ab5f02600d63b808", "Url": "https://api.github.com/repos/xpush/lib-xpush-android", "Date": "2015-09-02T05:41:13Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (killed) java.lang.System.out.println(\"COS ZABIL\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1376/buggy-version/GoGameServer.src.Source.Game.GameEngine.java", "BodyUseAPI": [], "Fixed commit": "92e07d3586f490e10918cd4ceb57af6ad1b995c1", "Url": "https://api.github.com/repos/karpiuu/GoGame", "Date": "2016-12-14T14:56:26Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Sets.newTreeSet(ExecutionYear.COMPARATOR_BY_YEAR)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (result.isEmpty()) { result.add(org.fenixedu.academic.domain.ExecutionYear.readCurrentExecutionYear()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8568/buggy-version/src.main.java.org.fenixedu.academic.ui.renderers.providers.enrollment.bolonha.ExecutionPeriodsForEnrolmentProvider.java", "BodyUseAPI": ["java.util.SortedSet<org.fenixedu.academic.domain.ExecutionYear>.add(org.fenixedu.academic.domain.ExecutionYear.readCurrentExecutionYear())"], "Fixed commit": "9b6bef553a2c8e33889fd976acd2aeb23b343f1e", "Url": "https://api.github.com/repos/qub-it/fenixedu-ulisboa-specifications", "Date": "2016-05-13T16:53:28Z"},
{"Line": "=>1083", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((legend) instanceof de.cismet.cismap.commons.interaction.StatusListener) { de.cismet.cismap.commons.interaction.CismapBroker.getInstance().addStatusListener(legend); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/530/buggy-version/src.main.java.de.cismet.cismap.navigatorplugin.CismapPlugin.java", "BodyUseAPI": [], "Fixed commit": "18a33645d8f14511fff88c4a9a4c0208c7347948", "Url": "https://api.github.com/repos/cismet/cismap-plugin", "Date": "2012-04-26T17:08:37Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(theLine.endsWith(\"/\"))) theLine += \"/\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5894/buggy-version/src.main.java.org.devinprogress.uniskinmod.SkinCore.java", "BodyUseAPI": [], "Fixed commit": "2727f7f293639b52ec53307479cbd9be9e0487dc", "Url": "https://api.github.com/repos/RecursiveG/UniSkinMod", "Date": "2014-12-04T08:56:06Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (E < 0) throw new java.lang.IllegalArgumentException(\"number of edges must be nonnegative\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4263/buggy-version/src.main.java.me.alivecode.algs4.FlowNetwork.java", "BodyUseAPI": [], "Fixed commit": "46a6a0bdfe104b01796aae6d270308e5a6d6dc9b", "Url": "https://api.github.com/repos/kevinojt/algorithms4", "Date": "2017-03-30T13:29:09Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((object.size()) > 0) { com.alibaba.fastjson.JSON json = (object instanceof com.alibaba.fastjson.JSON) ? ((com.alibaba.fastjson.JSON) (object)) : new com.alibaba.fastjson.JSONObject(object); java.lang.Object newObj = com.alibaba.fastjson.util.TypeUtils.cast(json, clazz, this.config); this.parseObject(newObj); return newObj; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1812/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": [], "Fixed commit": "ea1317aafce4294c63f92417389990f54697eecf", "Url": "https://api.github.com/repos/kangkona/fastjson", "Date": "2016-04-13T10:10:55Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.minecraftforge.fml.common.Loader.isModLoaded(\"palette\")) org.nationsatwar.palette.ChatMessage.sendMessage(player, \"You already have this plot!\"); else java.lang.System.out.println(\"lol\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2422/buggy-version/src.main.java.org.nationsatwar.playground.configuration.ConfigurationHandler.java", "BodyUseAPI": [], "Fixed commit": "c514b52f845f3e5cf3480126f8ade10aada898ac", "Url": "https://api.github.com/repos/NationsAtWar/Playground", "Date": "2015-04-21T03:00:33Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.minecraftforge.fml.common.Loader.isModLoaded(\"palette\")) org.nationsatwar.palette.ChatMessage.sendMessage(player, \"This plot is already owned!\"); else java.lang.System.out.println(\"lol\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2422/buggy-version/src.main.java.org.nationsatwar.playground.configuration.ConfigurationHandler.java", "BodyUseAPI": [], "Fixed commit": "c514b52f845f3e5cf3480126f8ade10aada898ac", "Url": "https://api.github.com/repos/NationsAtWar/Playground", "Date": "2015-04-21T03:00:33Z"},
{"Line": "=>826", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rp == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1389/buggy-version/dspace-cris.api.src.main.java.org.dspace.app.cris.service.ApplicationService.java", "BodyUseAPI": [], "Fixed commit": "c3402e3069c78f05d699b3df5738633444f4b688", "Url": "https://api.github.com/repos/Cineca/DSpace", "Date": "2016-05-24T12:48:54Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((vc != null) && ((vc.getClassLoader()) != null)) { loader = vc.getClassLoader(); }else { loader = java.lang.Thread.currentThread().getContextClassLoader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/107/buggy-version/src.main.java.org.walkmod.javaformatter.writers.EclipseWriter.java", "BodyUseAPI": ["org.walkmod.walkers.VisitorContext.getClassLoader()"], "Fixed commit": "0cf55ce29c7425225453d245e25f253aee9cef12", "Url": "https://api.github.com/repos/walkmod/walkmod-java-formatter-plugin", "Date": "2016-03-29T10:15:35Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((previousList.size()) == 1) && (previousList.get(0).getAction().equals(Constants.MESSAGE_COMMONFUNCTION_RETRIEVE))) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6220/buggy-version/W10-4J.Handler.CommonFunctionInDisplay.java", "BodyUseAPI": [], "Fixed commit": "be2bcfb77ca59ed108c2504881d0576aef300c23", "Url": "https://api.github.com/repos/cs2103jan2016-w10-4j/main", "Date": "2016-04-03T08:17:36Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.servoy.eclipse.ui.node.SimpleUserNode.getRealObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (realObject instanceof com.servoy.eclipse.model.ngpackages.BaseNGPackageManager.ContainerPackageReader) return ((com.servoy.eclipse.model.ngpackages.BaseNGPackageManager.ContainerPackageReader) (realObject)).getContainerName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2457/buggy-version/com.servoy.eclipse.ui.src.com.servoy.eclipse.ui.views.solutionexplorer.actions.AddAsWebPackageAction.java", "BodyUseAPI": [], "Fixed commit": "25e98309bbd03cf130bde58fb75423a525d417a7", "Url": "https://api.github.com/repos/Servoy/servoy-eclipse", "Date": "2017-04-05T12:57:22Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((uniqueId != null) && (!(\"\".equals(uniqueId)))) && (uniqueId > 0)) { com.registryKit.exportTool.progressBar exportProgressBar = exportManager.getProgressBar(uniqueId); if (exportProgressBar != null) { return exportProgressBar.getPercentComplete(); }else { return 0; } }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2728/buggy-version/webapp.src.main.java.com.rr.missouri.ui.importexport.importExportController.java", "BodyUseAPI": ["com.registryKit.exportTool.exportManager.getProgressBar(java.lang.Integer)"], "Fixed commit": "be308f543bf351f666a7e1ac22233903000e2aff", "Url": "https://api.github.com/repos/thenhkid/missouriRR", "Date": "2016-04-20T13:49:37Z"},
{"Line": "=>772", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((xml.indexOf(\"\\'\")) > 0) { xml = xml.substring(0, xml.indexOf(\"\\'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/9023/buggy-version/src.main.java.com.tomoko.tomoko.bot.Commands.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "d1d55f3d2ddaa004232fdec8b242576b46b661d7", "Url": "https://api.github.com/repos/Watersfall/Tomoko-Bot", "Date": "2017-09-04T21:41:21Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.TimeTrackerActivity.findViewById(R.id.counter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (counter != null) counter.setText(android.text.format.DateUtils.formatElapsedTime((time / 1000)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3253/buggy-version/Chapter6.src.com.example.TimeTrackerActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(android.text.format.DateUtils.formatElapsedTime((time / 1000)))"], "Fixed commit": "f7def78773becd3cda14abd2bb9222e604b951e2", "Url": "https://api.github.com/repos/jasonostrander/AndroidUIFundamentals", "Date": "2011-12-05T03:56:37Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((coordinateOrig - 1) == coordinateTarget) { labyrinth[(coordinateOrig / (width))][(coordinateOrig % (width))] |= 8; labyrinth[(coordinateTarget / (width))][(coordinateTarget % (width))] |= 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7610/buggy-version/LabyrinthSolver.src.main.Labyrinth.java", "BodyUseAPI": [], "Fixed commit": "1f99ac29d94137819e165ae5df3ee60f69fee3a5", "Url": "https://api.github.com/repos/jhuun/TiRaHa", "Date": "2014-05-21T12:51:57Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((validCoordinate(coordinateOrig)) && (validCoordinate(coordinateTarget)))) { throw new java.lang.Exception(\"Invalid coordinates given.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7610/buggy-version/LabyrinthSolver.src.main.Labyrinth.java", "BodyUseAPI": [], "Fixed commit": "1f99ac29d94137819e165ae5df3ee60f69fee3a5", "Url": "https://api.github.com/repos/jhuun/TiRaHa", "Date": "2014-05-21T12:51:57Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doit) { final com.edugility.nomen.NameValue nv = this.createNameValue(value); if (nv == null) { throw new java.lang.IllegalStateException(((\"createNameValue(\\\"\" + value) + \"\\\") == null\")); } final java.lang.String old = this.getValue(); this.setNameValue(nv); this.firePropertyChange(\"value\", old, this.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1684/buggy-version/src.main.java.com.edugility.nomen.Name.java", "BodyUseAPI": [], "Fixed commit": "fa941efcaa1569670ee5248133acece31d2df897", "Url": "https://api.github.com/repos/ljnelson/nomen", "Date": "2016-01-15T01:25:11Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.edugility.nomen.Name.getNameValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (oldNameValue == null) { doit = true; }else { final java.lang.String templateSource = oldNameValue.getValue(); if (value == null) { if (templateSource != null) { doit = true; } }else if (!(value.equals(templateSource))) { doit = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1684/buggy-version/src.main.java.com.edugility.nomen.Name.java", "BodyUseAPI": ["com.edugility.nomen.AbstractValued.getValue()"], "Fixed commit": "fa941efcaa1569670ee5248133acece31d2df897", "Url": "https://api.github.com/repos/ljnelson/nomen", "Date": "2016-01-15T01:25:11Z"},
{"Line": "=>588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.canExecute(this.compiledTemplate)) { final java.lang.String rawStringValue = this.toString(this.execute(this.compiledTemplate)); if ((rawStringValue != null) && (!(rawStringValue.isEmpty()))) { final java.lang.String whitespaceReplacement = nv.getWhitespaceReplacement(); if (whitespaceReplacement == null) { returnValue = rawStringValue; }else { returnValue = com.edugility.nomen.Name.whitespacePattern.matcher(rawStringValue).replaceAll(whitespaceReplacement); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1684/buggy-version/src.main.java.com.edugility.nomen.Name.java", "BodyUseAPI": ["com.edugility.nomen.Name.toString(java.lang.Object)", "com.edugility.nomen.Name.execute(java.lang.Object)"], "Fixed commit": "fa941efcaa1569670ee5248133acece31d2df897", "Url": "https://api.github.com/repos/ljnelson/nomen", "Date": "2016-01-15T01:25:11Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstCopy.equals(secondCopy)) { result = \"\"; }else { result = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/836/buggy-version/src.main.java.ReclamationProject.java", "BodyUseAPI": [], "Fixed commit": "e009829c96a92877acd3647b6c9d1c5d54a02330", "Url": "https://api.github.com/repos/jpark318/Lab4", "Date": "2017-09-26T23:07:01Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.grails.datastore.gorm.query.transform.DetachedCriteriaTransformer.getPropertyType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(isDomainClass(type))) { org.grails.datastore.gorm.query.transform.ClassNode associationTypeFromGenerics = getAssociationTypeFromGenerics(type); if (associationTypeFromGenerics != null) { type = associationTypeFromGenerics; associationPropertyNames = getPropertyNamesForAssociation(associationTypeFromGenerics); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7662/buggy-version/grails-datastore-gorm.src.main.groovy.org.grails.datastore.gorm.query.transform.DetachedCriteriaTransformer.java", "BodyUseAPI": ["org.grails.datastore.gorm.query.transform.DetachedCriteriaTransformer.getAssociationTypeFromGenerics(org.grails.datastore.gorm.query.transform.ClassNode)"], "Fixed commit": "040d0673c4a72a74c0b60ef5db4be8da91359f54", "Url": "https://api.github.com/repos/SpringSource/grails-data-mapping", "Date": "2011-09-16T13:29:39Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (associationPropertyNames == null) { associationPropertyNames = new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7662/buggy-version/grails-datastore-gorm.src.main.groovy.org.grails.datastore.gorm.query.transform.DetachedCriteriaTransformer.java", "BodyUseAPI": [], "Fixed commit": "040d0673c4a72a74c0b60ef5db4be8da91359f54", "Url": "https://api.github.com/repos/SpringSource/grails-data-mapping", "Date": "2011-09-16T13:29:39Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mCurrentData.AllMatchStatus.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((matchStatus.target) != (-1)) { mHolder.target.setText(matchStatus.target); }else { mHolder.label_need.setVisibility(View.INVISIBLE); mHolder.target.setVisibility(View.INVISIBLE); mHolder.label_to_win.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1939/buggy-version/app.src.main.java.com.android.tabishhussain.psllivescoring.adapters.ListAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(matchStatus.target)"], "Fixed commit": "1292125d20ff74b7254599e01a85a1b75268e613", "Url": "https://api.github.com/repos/tabishhussain/PSLLiveScroring", "Date": "2015-12-31T19:46:05Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMapReady()) toReturn = mGoogleMap.getCameraPosition();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5574/buggy-version/BikeActivityExplorer.app.src.main.java.com.ludoscity.bikeactivityexplorer.StationMapFragment.java", "BodyUseAPI": [], "Fixed commit": "9852f61c8725f268d5ecdedb996e3a5a174fcff0", "Url": "https://api.github.com/repos/f8full/ludOScity", "Date": "2015-10-11T18:15:18Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.FrameLayout.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (firstListItem != null) { firstListItem.setOnClickListener(mListClicked); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4066/buggy-version/actionbar.src.com.markupartist.android.widget.ActionBar.java", "BodyUseAPI": ["android.view.View.setOnClickListener(View.OnClickListener)"], "Fixed commit": "95dab6b8cda69bd0b41dc2b71d2beb810a09338e", "Url": "https://api.github.com/repos/johannilsson/android-actionbar", "Date": "2011-05-18T20:43:14Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isData == 1) { return serializationService.bytesToObject(bytes, 39); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1/buggy-version/hazelcast.src.main.java.com.hazelcast.spi.impl.operationservice.impl.responses.Response.java", "BodyUseAPI": [], "Fixed commit": "73cbfd30a04c8bcf5001a6479792d0b676889161", "Url": "https://api.github.com/repos/pveentjer/hazelcast", "Date": "2016-03-05T17:45:13Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ballerinalang.plugins.idea.sdk.BallerinaSdkService.isBallerinaModule(java.lang.Module)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isBallerinaModule) { java.lang.String packageForDirectory = org.ballerinalang.plugins.idea.util.BallerinaUtil.suggestPackageNameForDirectory(directory); props.setProperty(org.ballerinalang.plugins.idea.actions.BallerinaTemplatePropertiesProvider.BALLERINA_PACKAGE_NAME, packageForDirectory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1873/buggy-version/src.main.java.org.ballerinalang.plugins.idea.actions.BallerinaTemplatePropertiesProvider.java", "BodyUseAPI": [], "Fixed commit": "90688ad3e2ce4ac97b82bcc60cb7e4ded3c7eb27", "Url": "https://api.github.com/repos/ballerina-attic/plugin-intellij", "Date": "2017-08-10T08:30:06Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enabled) { virtualFrequency = source.getFrequency(); virtualSampleRate = source.getSampleRate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7224/buggy-version/app.src.main.java.com.mantz_it.rfanalyzer.AnalyzerSurface.java", "BodyUseAPI": [], "Fixed commit": "acd417996ed797fcb9840b3deb98092b1f674925", "Url": "https://api.github.com/repos/demantz/RFAnalyzer", "Date": "2016-03-22T19:42:49Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((targetEntity.getCurrentTile()) != null) targetEntityPosition = new com.badlogic.gdx.math.Vector2(targetEntity.getCurrentTile().getmX(), targetEntity.getCurrentTile().getmZ());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1063/buggy-version/core.src.com.esbjon.wrappers.ShuttleWrapper.java", "BodyUseAPI": [], "Fixed commit": "5520ac6476e757702873229a554f794595545e53", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2017-10-17T14:37:13Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["samlResponse.getDOM().getAttributeNodeNS(<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (idAttr != null) { samlResponse.getDOM().setIdAttributeNode(idAttr, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5430/buggy-version/rt.rs.security.sso.saml.src.main.java.org.apache.cxf.rs.security.saml.sso.SAMLProtocolResponseValidator.java", "BodyUseAPI": ["samlResponse.getDOM().setIdAttributeNode(org.w3c.dom.Attr,boolean)"], "Fixed commit": "23c4193184ef79d80213fbd7fc43b82479b1c8af", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2017-08-15T16:48:04Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["samlResponse.getDOM().getAttributeNodeNS(<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (idAttr != null) { samlResponse.getDOM().setIdAttributeNode(idAttr, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5430/buggy-version/rt.rs.security.sso.saml.src.main.java.org.apache.cxf.rs.security.saml.sso.SAMLProtocolResponseValidator.java", "BodyUseAPI": ["samlResponse.getDOM().setIdAttributeNode(org.w3c.dom.Attr,boolean)"], "Fixed commit": "23c4193184ef79d80213fbd7fc43b82479b1c8af", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2017-08-15T16:48:04Z"},
{"Line": "=>2265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.orientechnologies.orient.core.storage.impl.local.OOperationUnitId, java.util.List<com.orientechnologies.orient.core.storage.impl.local.OWALRecord>>.remove(atomicUnitEndRecord.getOperationUnitId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (atomicUnit != null) { atomicUnit.add(walRecord); restoreAtomicUnit(atomicUnit, atLeastOnePageUpdate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7386/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.OAbstractPaginatedStorage.java", "BodyUseAPI": ["java.util.List<com.orientechnologies.orient.core.storage.impl.local.OWALRecord>.add(com.orientechnologies.orient.core.storage.impl.local.OWALRecord)", "com.orientechnologies.orient.core.storage.impl.local.OAbstractPaginatedStorage.restoreAtomicUnit(java.util.List<com.orientechnologies.orient.core.storage.impl.local.OWALRecord>,com.orientechnologies.common.types.OModifiableBoolean)"], "Fixed commit": "a1e801b992f81cd4341ba0dfdfe675d1fe11cd67", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-04-01T15:03:13Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((filters != null) && (filters.containsKey(org.ednovo.gooru.infrastructure.persistence.hibernate.CollectionRepositoryHibernate.PAGE_NO))) { pageNo = java.lang.Integer.parseInt(filters.get(org.ednovo.gooru.infrastructure.persistence.hibernate.CollectionRepositoryHibernate.PAGE_NO)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5129/buggy-version/api.src.main.java.org.ednovo.gooru.infrastructure.persistence.hibernate.CollectionRepositoryHibernate.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "568665732defa908186f39e74fd2f387995a77e2", "Url": "https://api.github.com/repos/saravanab/Gooru-Core-API-1", "Date": "2014-07-21T12:57:13Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((filters != null) && (filters.containsKey(org.ednovo.gooru.infrastructure.persistence.hibernate.CollectionRepositoryHibernate.PAGE_SIZE))) { pageSize = java.lang.Integer.parseInt(filters.get(org.ednovo.gooru.infrastructure.persistence.hibernate.CollectionRepositoryHibernate.PAGE_SIZE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5129/buggy-version/api.src.main.java.org.ednovo.gooru.infrastructure.persistence.hibernate.CollectionRepositoryHibernate.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "568665732defa908186f39e74fd2f387995a77e2", "Url": "https://api.github.com/repos/saravanab/Gooru-Core-API-1", "Date": "2014-07-21T12:57:13Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (socialite.parser.MyType.javaType(lhs).isArray()) { lhsType = (socialite.parser.MyType.javaType(lhs).getComponentType().getName()) + \"[]\"; }else { lhsType = socialite.parser.MyType.javaType(lhs).getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3005/buggy-version/src.socialite.parser.AssignOp.java", "BodyUseAPI": ["socialite.parser.MyType.javaType(socialite.parser.Variable)", "socialite.parser.MyType.javaType(lhs).getName()", "socialite.parser.MyType.javaType(lhs).getComponentType()", "socialite.parser.MyType.javaType(lhs).getComponentType().getName()", "socialite.parser.MyType.javaType(socialite.parser.Variable)"], "Fixed commit": "d718bfcabcb6da75cd0d0f2db0e3d7b0e39a3543", "Url": "https://api.github.com/repos/socialite-lang/socialite", "Date": "2014-09-11T22:02:26Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.oscarehr.common.dao.PropertyDao.checkByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((p != null) && ((p.getValue()) != null)) { itemsToRemove = p.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8877/buggy-version/src.main.java.org.oscarehr.managers.PreventionManager.java", "BodyUseAPI": ["org.oscarehr.common.model.Property.getValue()"], "Fixed commit": "a6649748c9d706e885eeaba3cbe8de7d03d0f08a", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2015-12-04T02:28:11Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (stmt != null) stmt.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6410/buggy-version/src.org.nutz.dao.impl.sql.run.NutDaoExecutor.java", "BodyUseAPI": ["java.sql.CallableStatement.close()"], "Fixed commit": "552334e93f4dfdbe7676239da379d181e7ff6eba", "Url": "https://api.github.com/repos/conflictpredictor/nutz", "Date": "2014-05-09T14:44:44Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) != null) return value.toString(); else return \"<uninitialized>\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/430/buggy-version/src.org.rascalmpl.eclipse.debug.core.model.RascalValue.java", "BodyUseAPI": [], "Fixed commit": "8debaf9d8bd67d374ce6f8fd423265b0e12464d2", "Url": "https://api.github.com/repos/cwi-swat/rascal-eclipse", "Date": "2013-01-12T16:30:37Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/430/buggy-version/src.org.rascalmpl.eclipse.debug.core.model.RascalValue.java", "BodyUseAPI": [], "Fixed commit": "8debaf9d8bd67d374ce6f8fd423265b0e12464d2", "Url": "https://api.github.com/repos/cwi-swat/rascal-eclipse", "Date": "2013-01-12T16:30:37Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/430/buggy-version/src.org.rascalmpl.eclipse.debug.core.model.RascalValue.java", "BodyUseAPI": [], "Fixed commit": "8debaf9d8bd67d374ce6f8fd423265b0e12464d2", "Url": "https://api.github.com/repos/cwi-swat/rascal-eclipse", "Date": "2013-01-12T16:30:37Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) { java.lang.System.out.println(\"\u8bf7\u8f93\u5165\u76f8\u5173\u53c2\u6570\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7526/buggy-version/src.main.java.cn.yanf.webmagic.demo.Alibaba.java", "BodyUseAPI": [], "Fixed commit": "9ba23233ebd60dd6f5ff48b72c50b889cc9edb6f", "Url": "https://api.github.com/repos/yanaizhang24/webmagic_alibaba", "Date": "2016-09-20T16:09:24Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["htsjdk.variant.vcf.VCFCodec.decode(lineIteratorImpl.next())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(variantContext.hasAttribute(\"CLNSIG\"))) || (!(variantContext.hasAttribute(\"CLNALLE\")))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7483/buggy-version/ImportAnnotations.java", "BodyUseAPI": [], "Fixed commit": "f92d0a6bc992703a3e25b9338c2817e402fe920c", "Url": "https://api.github.com/repos/mcgml/BoltImport", "Date": "2016-09-12T07:20:17Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (solver == null) linearSpec = new nz.ac.auckland.alm.LinearSpec(); else linearSpec = new nz.ac.auckland.alm.LinearSpec(solver);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/628/buggy-version/alm.src.main.java.nz.ac.auckland.alm.LayoutSpec.java", "BodyUseAPI": [], "Fixed commit": "e6367c23a542aa78b90b2de1835acb68212c29e2", "Url": "https://api.github.com/repos/czeidler/alm", "Date": "2015-05-28T23:23:53Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.baidu.disconf.client.DisconfMgr.isSecondeInit) == true) { com.baidu.disconf.client.DisconfMgr.LOGGER.info(\"should not run twice.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5190/buggy-version/disconf-client.src.main.java.com.baidu.disconf.client.DisconfMgr.java", "BodyUseAPI": [], "Fixed commit": "e28aac2d5aea148dd8caa0e91849ca839393ba6c", "Url": "https://api.github.com/repos/knightliao/disconf", "Date": "2014-08-07T02:39:57Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["DocQueue.pop()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (popped instanceof Document) { java.lang.System.out.println((((\"Title: \" + (((Document) (popped)).getTitle())) + \" Type: \") + (((Document) (popped)).getType()))); }else { java.lang.System.out.println(\"The queue is empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7866/buggy-version/DocQueue.java", "BodyUseAPI": [], "Fixed commit": "b4ef1b3770633821911845a2f67b5d2b0d8e1138", "Url": "https://api.github.com/repos/Codetig/JavaLinkedList", "Date": "2015-06-26T16:22:26Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (currentLift.intern().equals(firstLift.intern())) break; else if (doublyIncrementedPrevDateString.intern().equals(currentLiftDate.intern())) myPattern.add(currentLift); else myPattern.add(\"Rest\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/282/buggy-version/src.com.kohlerbear.whowascnscalc.ConfigTool.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "f1b9be6a3728dc4461c72276d08b8d6638751a60", "Url": "https://api.github.com/repos/aok5326/WhoWasCNS531", "Date": "2014-11-20T00:55:08Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (which == 3) dialog.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/282/buggy-version/src.com.kohlerbear.whowascnscalc.ThirdScreenActivity.java", "BodyUseAPI": [], "Fixed commit": "f1b9be6a3728dc4461c72276d08b8d6638751a60", "Url": "https://api.github.com/repos/aok5326/WhoWasCNS531", "Date": "2014-11-20T00:55:08Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (which == 3) { dialog.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/282/buggy-version/src.com.kohlerbear.whowascnscalc.ThirdScreenActivity.java", "BodyUseAPI": [], "Fixed commit": "f1b9be6a3728dc4461c72276d08b8d6638751a60", "Url": "https://api.github.com/repos/aok5326/WhoWasCNS531", "Date": "2014-11-20T00:55:08Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (currentSection != 0) currentSection--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8726/buggy-version/app.src.main.java.com.udelphi.trainingcenter.rposhuk.stripy_player.adapters.SongAdapter.java", "BodyUseAPI": [], "Fixed commit": "c119636d4b7a46db0ad710733f40e280efafe706", "Url": "https://api.github.com/repos/rposhuk/StripyPlayer", "Date": "2016-01-12T13:41:21Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!(windowingMechanism.equals(\"tumbling\"))) && (!(windowingMechanism.equals(\"Tumbling\")))) { throw new java.lang.Exception(\"This window requires Slide by value\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7590/buggy-version/examples.storm-starter.src.jvm.storm.starter.HelperClasses.WindowObject.java", "BodyUseAPI": [], "Fixed commit": "71cc50c312c778a62a1ff1f4931e4ff49e679643", "Url": "https://api.github.com/repos/TeamCarpeDiem/stormdev", "Date": "2015-07-13T16:12:33Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["info.guardianproject.pixelknot.PixelKnotActivity.1.getIntent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (intent.hasExtra(Intent.EXTRA_STREAM)) intent.removeExtra(Intent.EXTRA_STREAM); else if (intent.hasExtra(Intent.EXTRA_TEXT)) intent.removeExtra(Intent.EXTRA_TEXT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7671/buggy-version/src.info.guardianproject.pixelknot.PixelKnotActivity.java", "BodyUseAPI": ["android.content.Intent.removeExtra(Intent.EXTRA_STREAM)", "android.content.Intent.hasExtra(Intent.EXTRA_TEXT)", "android.content.Intent.removeExtra(Intent.EXTRA_TEXT)"], "Fixed commit": "941078b4a787aaa153dcdde432a69483ba488ff8", "Url": "https://api.github.com/repos/guardianproject/PixelKnot", "Date": "2013-02-19T14:33:58Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ai.grakn.graql.internal.gremlin.sets.EquivalentFragmentSets.typeLabelOf(roleVar.get(),java.util.Collection<ai.grakn.graql.internal.gremlin.EquivalentFragmentSet>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (roleLabel == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4944/buggy-version/grakn-graql.src.main.java.ai.grakn.graql.internal.gremlin.sets.ShortcutFragmentSet.java", "BodyUseAPI": [], "Fixed commit": "c190030870fce4ff714bcf73a5f9dc27feee256f", "Url": "https://api.github.com/repos/aelred/grakn", "Date": "2017-07-11T13:37:55Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ai.grakn.graql.internal.gremlin.sets.EquivalentFragmentSets.typeLabelOf(isa.type(),java.util.Collection<ai.grakn.graql.internal.gremlin.EquivalentFragmentSet>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (relationLabel == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4944/buggy-version/grakn-graql.src.main.java.ai.grakn.graql.internal.gremlin.sets.ShortcutFragmentSet.java", "BodyUseAPI": [], "Fixed commit": "c190030870fce4ff714bcf73a5f9dc27feee256f", "Url": "https://api.github.com/repos/aelred/grakn", "Date": "2017-07-11T13:37:55Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((meals.size()) == 0) { return 0; }else { return sum / (meals.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6529/buggy-version/app.src.main.java.iths.com.food.Model.Category.java", "BodyUseAPI": ["java.util.ArrayList<iths.com.food.model.IMeal>.size()"], "Fixed commit": "8d6e9c975f969cdc07ff579e6ebaa74986880bf9", "Url": "https://api.github.com/repos/jsonkuan/food", "Date": "2016-12-13T12:37:17Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bvList.get(areaList.indexOf(java.util.Collections.max(areaList)))) != null) { atrributes.put(\"building\", bvList.get(areaList.indexOf(java.util.Collections.max(areaList)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8101/buggy-version/src.org.openstreetmap.josm.plugins.auto_tools.actions.MergeBuildingsAction.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.util.Collections.max(java.util.List<java.lang.Double>)", "java.util.List<java.lang.Double>.indexOf(java.lang.Double)"], "Fixed commit": "9406825db54aa5c6ebf3cb7d3ae5aa013e59c2e4", "Url": "https://api.github.com/repos/JOSM/auto-tools", "Date": "2017-05-16T21:55:31Z"},
{"Line": "=>691", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.jgll.grammar.Nonterminal, java.util.List<org.jgll.grammar.slot.HeadGrammarSlot>>.get(pattern.getNonterminal())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (list != null) { for (org.jgll.grammar.slot.HeadGrammarSlot head : list) { for (org.jgll.grammar.Alternate alt : head.getAlternates()) { if (alt.match(pattern.getParent())) { createNewNonterminal(alt, pattern.getPosition(), e.getValue()); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2279/buggy-version/src.org.jgll.grammar.GrammarBuilder.java", "BodyUseAPI": [], "Fixed commit": "6451694b0cb3502124456c1aee08ab3b191d02ca", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2013-09-16T23:34:07Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((oldNumOfWaiting) < (numOfWaiting)) { getView().closeModal(); getView().showModal(); oldNumOfWaiting = numOfWaiting; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8720/buggy-version/Catan.java.src.client.join.PlayerWaitingController.java", "BodyUseAPI": [], "Fixed commit": "2faca8ab9471ca327986e0b4aeadcb4b52a9fdc5", "Url": "https://api.github.com/repos/Chad-Barlow/CS340", "Date": "2014-11-01T15:40:51Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entry instanceof net.minecraft.item.ItemStack) { av = com.iconmaster.aec.aether.AVRegistry.getAV(((net.minecraft.item.ItemStack) (entry))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5008/buggy-version/src.main.java.com.iconmaster.aec.aether.DynamicAVRegister.java", "BodyUseAPI": [], "Fixed commit": "b25fc40013c4863ff46c42fb1b16e8b73ef10791", "Url": "https://api.github.com/repos/iconmaster5326/AetherCraft", "Date": "2014-05-23T19:29:10Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entry instanceof net.minecraft.item.ItemStack) { av = com.iconmaster.aec.aether.AVRegistry.getAV(((net.minecraft.item.ItemStack) (entry))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5008/buggy-version/src.main.java.com.iconmaster.aec.aether.DynamicAVRegister.java", "BodyUseAPI": [], "Fixed commit": "b25fc40013c4863ff46c42fb1b16e8b73ef10791", "Url": "https://api.github.com/repos/iconmaster5326/AetherCraft", "Date": "2014-05-23T19:29:10Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parentActivityMessageHandler) != null) { android.os.Message msg; msg = android.os.Message.obtain(); parentActivityMessageHandler.sendMessage(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4960/buggy-version/app.src.main.java.share.fair.fairshare.Group.java", "BodyUseAPI": [], "Fixed commit": "825d57e6a3cbfe3ffcd802b70285b780a4c0ad6a", "Url": "https://api.github.com/repos/Niryo/FairShare", "Date": "2015-10-18T17:14:43Z"},
{"Line": "=>933", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bracePos <= 0) return method;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/918/buggy-version/scouter.client.src.scouter.client.xlog.ProfileText.java", "BodyUseAPI": [], "Fixed commit": "cb01925af937f8fb9aaf1b3d02d4f1ebf3faa170", "Url": "https://api.github.com/repos/scouter-project/scouter", "Date": "2017-03-30T10:10:18Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((baseURI) != null) return (baseURI) + URI; else return URI;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3230/buggy-version/karma-common.src.main.java.edu.isi.karma.kr2rml.N3KR2RMLRDFWriter.java", "BodyUseAPI": [], "Fixed commit": "f62c152cd9774e6af606d958f620a89a6d9bf088", "Url": "https://api.github.com/repos/InformationIntegrationGroup/Web-Karma", "Date": "2014-06-30T17:50:53Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((baseURI) != null) return (baseURI) + URI; else return URI;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3230/buggy-version/karma-common.src.main.java.edu.isi.karma.kr2rml.BloomFilterKR2RMLRDFWriter.java", "BodyUseAPI": [], "Fixed commit": "f62c152cd9774e6af606d958f620a89a6d9bf088", "Url": "https://api.github.com/repos/InformationIntegrationGroup/Web-Karma", "Date": "2014-06-30T17:50:53Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (witsmlInput.equals(\"\")) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5953/buggy-version/src.main.java.com.hashmapinc.tempus.WitsmlObjects.Util.WitsmlVersionTransformer.java", "BodyUseAPI": [], "Fixed commit": "a8973a0344a60f68afc4e0bccb5398ec8bc9dcd1", "Url": "https://api.github.com/repos/hashmapinc/WitsmlObjectsLibrary", "Date": "2017-09-17T01:01:36Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (witsmlInput == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5953/buggy-version/src.main.java.com.hashmapinc.tempus.WitsmlObjects.Util.WitsmlVersionTransformer.java", "BodyUseAPI": [], "Fixed commit": "a8973a0344a60f68afc4e0bccb5398ec8bc9dcd1", "Url": "https://api.github.com/repos/hashmapinc/WitsmlObjectsLibrary", "Date": "2017-09-17T01:01:36Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Robot.elevationSystem.isEnabled())) { Robot.elevationSystem.safeMove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7495/buggy-version/src.org.usfirst.frc.team2854.robot.commands.ElevationControl.java", "BodyUseAPI": [], "Fixed commit": "7e51cdae19ac933e6869d6c3f12e7fe02e2881a8", "Url": "https://api.github.com/repos/EVHSRobotics/RRush", "Date": "2015-02-07T02:23:42Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rs.getInt(1)) > 7) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6763/buggy-version/src.ndbc.DTeamPanel.java", "BodyUseAPI": [], "Fixed commit": "a859973ac10c6f1d1815c4de1e38d7085be790be", "Url": "https://api.github.com/repos/RobertHochberg/NDBC", "Date": "2016-12-07T17:52:37Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRecyclerView) != null) mRecyclerView.getAdapter().notifyDataSetChanged();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6460/buggy-version/app.src.main.java.com.romanpulov.violetnote.view.BasicNoteFragment.java", "BodyUseAPI": [], "Fixed commit": "5787b03485fd3100acb9c0e25dfe2d8575e2e207", "Url": "https://api.github.com/repos/MrZeRo2000/violetnote-android", "Date": "2017-08-08T19:18:35Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == (com.xqbase.tuna.http.HttpPacket.TYPE_RESPONSE_HTTP10)) { bytesToRead = -1; }else if (((type) == (com.xqbase.tuna.http.HttpPacket.TYPE_RESPONSE)) && ((http10) || (testHeader(\"CONNECTION\", \"close\")))) { bytesToRead = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3887/buggy-version/http.src.main.java.com.xqbase.tuna.http.HttpPacket.java", "BodyUseAPI": [], "Fixed commit": "834d7f40e28c4ad1dfa79a1c165527d6814e28ec", "Url": "https://api.github.com/repos/xqbase/tuna", "Date": "2015-10-31T16:17:27Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arguments.length) == 0) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5916/buggy-version/src.com.deaboy.manhunt.commands.CommandSwitchboard.java", "BodyUseAPI": [], "Fixed commit": "c0ab99a71b4721412f394537f2f5e62720a05041", "Url": "https://api.github.com/repos/Deaboy/Manhunt", "Date": "2013-06-27T18:58:39Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((intervals.size()) == 0) { intervals.add(newInterval); return intervals; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6474/buggy-version/src.array.a_57_insertInterval.java", "BodyUseAPI": ["java.util.List<array.Interval>.add(array.Interval)"], "Fixed commit": "611170e27e2ac7aa1da4b94b39abb2ae3c1005ba", "Url": "https://api.github.com/repos/boyangyuu/leetcode", "Date": "2016-08-15T08:23:48Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.Ben12345rocks.VotingPlugin.Config.Config.getInstance().getDebugEnabled()) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5096/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.VoteSite.java", "BodyUseAPI": [], "Fixed commit": "3e197902ae43241a03cc9a3fac66aa02a9dfa5a7", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-04-05T00:22:10Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edu.gatech.util.Util.isNumeric(intermediate.getY())) instructionStream.add(new edu.gatech.generation.MipsOperation(intermediate.getLabel(), MipsOperator.ADDI, intermediate.getX(), intermediate.getZ(), intermediate.getY())); else instructionStream.add(new edu.gatech.generation.MipsOperation(intermediate.getLabel(), MipsOperator.ADDI, intermediate.getX(), intermediate.getY(), intermediate.getZ()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7075/buggy-version/src.edu.gatech.generation.Generator.java", "BodyUseAPI": ["edu.gatech.intermediate.IntermediateOperation.getZ()", "edu.gatech.intermediate.IntermediateOperation.getX()", "edu.gatech.intermediate.IntermediateOperation.getY()", "edu.gatech.intermediate.IntermediateOperation.getZ()", "edu.gatech.intermediate.IntermediateOperation.getY()", "edu.gatech.intermediate.IntermediateOperation.getX()", "java.util.List<edu.gatech.generation.MipsOperation>.add(edu.gatech.generation.MipsOperation)", "edu.gatech.intermediate.IntermediateOperation.getLabel()", "java.util.List<edu.gatech.generation.MipsOperation>.add(edu.gatech.generation.MipsOperation)", "edu.gatech.intermediate.IntermediateOperation.getLabel()"], "Fixed commit": "65559a6e59cc1053c805ac7911b7ba8c81b11e5e", "Url": "https://api.github.com/repos/abettadapur/icompiler", "Date": "2014-04-11T23:32:53Z"},
{"Line": "=>6", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loop < 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7571/buggy-version/src.HelloWorld.java", "BodyUseAPI": [], "Fixed commit": "ddf9f4bf5bd5ee0d5b749cbcf57801462e853872", "Url": "https://api.github.com/repos/natkus34cp36/TestGit", "Date": "2016-05-16T06:04:44Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ownMemList.get(i).getLastupdtstamp()", "ownMemList.get(i).getFailedFlag()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((currentTime - failSeconds) > lastUpdate) && (failedFlag == false)) { ownMemList.get(i).setFailedFlag(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5700/buggy-version/MyKV.src.MembershipController.java", "BodyUseAPI": [], "Fixed commit": "1c8c1619011ee697cbc65aa67e4535e8637ec4fe", "Url": "https://api.github.com/repos/christian-com-techniques/MyKV", "Date": "2013-12-04T09:14:04Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (version.endsWith((\".\" + (fr.synchrotron.soleil.ica.ci.lib.workflow.DefaultWorkflow.DEFAULT_STATUS_RELEASE)))) { statusVersion.status = fr.synchrotron.soleil.ica.ci.lib.workflow.DefaultWorkflow.DEFAULT_STATUS_RELEASE; statusVersion.version = version.substring(0, version.lastIndexOf((\".\" + (fr.synchrotron.soleil.ica.ci.lib.workflow.DefaultWorkflow.DEFAULT_STATUS_RELEASE)))); return statusVersion; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3341/buggy-version/Libs.LibWorkflow.src.main.java.fr.synchrotron.soleil.ica.ci.lib.workflow.DefaultWorkflow.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "93b4b71e31c0d77616efe3fcadcef3d495247bba", "Url": "https://api.github.com/repos/synchrotron-soleil-ica/continuous-materials", "Date": "2014-07-14T18:29:55Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.knightowl.sleepvthmusicfv.CountDownTimerActivity.sleepTime) != 0) getTime();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1783/buggy-version/SleepVthMusic.src.com.knightowl.sleepvthmusicfv.CountDownTimerActivity.java", "BodyUseAPI": [], "Fixed commit": "f73fd9a84ff2c5ec11a2571c374e829568fe3a7f", "Url": "https://api.github.com/repos/moulinHEX/DevilsCorner", "Date": "2015-10-20T15:22:49Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (folder == null) { throw com.zimbra.cs.mailbox.MailServiceException.NO_SUCH_FOLDER(path.asImapPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1914/buggy-version/store.src.java.com.zimbra.cs.imap.ImapSessionManager.java", "BodyUseAPI": [], "Fixed commit": "4474d80eb028bafbe91196706f5ae52e078e1f40", "Url": "https://api.github.com/repos/Zimbra/zm-mailbox", "Date": "2017-07-24T17:13:09Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.buct.glasearch.search.jobs.ImageSearchJob.FeatureList.getResult()", "edu.buct.glasearch.search.jobs.ImageSearchJob.FeatureList.getResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((colorResult.size()) == 0) || ((edgeResult.size()) == 0)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1604/buggy-version/src.main.java.edu.buct.glasearch.search.service.ImageContentSearcher.java", "BodyUseAPI": [], "Fixed commit": "df3e71a8fa62645f275e211ccc04d18cf2060c54", "Url": "https://api.github.com/repos/mcfire/imagesearch", "Date": "2014-04-27T02:45:08Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((windSpeedKnots > 100) && (windSpeedKnots <= 105)) { markerDir += \"105\"; }else if (windSpeedKnots > 100) { markerDir += \"105\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6346/buggy-version/epd-common.src.main.java.dk.dma.epd.common.prototype.layers.route.MetocWindGraphic.java", "BodyUseAPI": [], "Fixed commit": "e5fbb39c031868a05ce36cb48b263c1fe960451d", "Url": "https://api.github.com/repos/dma-dk/EPD", "Date": "2013-06-19T14:48:24Z"},
{"Line": "=>824", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.authdb.util.Config.hasBackpack) { inventory = new org.bukkit.inventory.ItemStack[252]; }else { inventory = new org.bukkit.inventory.ItemStack[36]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3269/buggy-version/src.main.java.com.authdb.AuthDB.java", "BodyUseAPI": [], "Fixed commit": "34e7cfb98709b060ab357d25a1f216a040fbeafb", "Url": "https://api.github.com/repos/CraftFire/AuthDB", "Date": "2011-07-27T01:12:15Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entropyBits) != null) { entropyBits.get().updateAndGet(( oldCount) -> java.lang.Math.max(oldCount, ((java.lang.Math.min(seedLength, getNewSeedLength())) * 8L))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2557/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.adapter.SplittableRandomAdapter.java", "BodyUseAPI": [], "Fixed commit": "554971634f45ee698bc883bcde086467fbc0470a", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-10-28T21:51:41Z"},
{"Line": "=>619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((commandHistory.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/155/buggy-version/src.gui.TaskDisplayController.java", "BodyUseAPI": [], "Fixed commit": "db5942caa2987bafc608f45f0f6086bd71981279", "Url": "https://api.github.com/repos/cs2103jan2015-f13-1j/main", "Date": "2015-04-12T08:56:24Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (seconds < 10) { sec = \"0\" + seconds; }else { sec = java.lang.Integer.toString(seconds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2286/buggy-version/android_game.app.src.main.java.com.example.mini.game.launcher.CustomSongAdapter.java", "BodyUseAPI": ["java.lang.Integer.toString(int)"], "Fixed commit": "05c01d6eb342b01bc23a7da62c582a0350b398a4", "Url": "https://api.github.com/repos/Jakub-Ciecierski/SoundRacer", "Date": "2015-01-13T23:33:59Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (songFormat.equals(\"mp3\")) songs.add(song);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2286/buggy-version/android_game.app.src.main.java.com.example.mini.game.launcher.LauncherActivity.java", "BodyUseAPI": [], "Fixed commit": "05c01d6eb342b01bc23a7da62c582a0350b398a4", "Url": "https://api.github.com/repos/Jakub-Ciecierski/SoundRacer", "Date": "2015-01-13T23:33:59Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((chosenSongsPrevPosition.get(position)) <= (songs.size())) { songs.add(chosenSongsPrevPosition.get(position), m_song); }else { songs.add(m_song); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2286/buggy-version/android_game.app.src.main.java.com.example.mini.game.launcher.LauncherActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.get(int)", "java.util.ArrayList<com.example.mini.game.launcher.Song>.add(com.example.mini.game.launcher.Song)", "java.util.ArrayList<com.example.mini.game.launcher.Song>.add(java.lang.Integer,com.example.mini.game.launcher.Song)"], "Fixed commit": "05c01d6eb342b01bc23a7da62c582a0350b398a4", "Url": "https://api.github.com/repos/Jakub-Ciecierski/SoundRacer", "Date": "2015-01-13T23:33:59Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxX - minX) <= 0) { minX = 0; maxX = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4685/buggy-version/massis-core.src.main.java.com.massisframework.massis.model.building.Floor.java", "BodyUseAPI": [], "Fixed commit": "4b9012650f7bb73c2d83ebccf2733b3bbfc4df1d", "Url": "https://api.github.com/repos/rpax/MASSIS", "Date": "2015-11-09T11:07:09Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxY - minY) <= 0) { minY = 0; maxY = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4685/buggy-version/massis-core.src.main.java.com.massisframework.massis.model.building.Floor.java", "BodyUseAPI": [], "Fixed commit": "4b9012650f7bb73c2d83ebccf2733b3bbfc4df1d", "Url": "https://api.github.com/repos/rpax/MASSIS", "Date": "2015-11-09T11:07:09Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (in != null) { try { in.close(); } catch (java.io.IOException e) { throw new java.lang.RuntimeException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5908/buggy-version/transports.http.src.main.java.org.mule.transport.http.components.StaticResourceMessageProcessor.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "edd6338637f108f4f09d093474d490997aa0a242", "Url": "https://api.github.com/repos/adrianpillinger/mule", "Date": "2014-05-15T15:32:10Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bpm < ((com.kh.beatbot.manager.MidiManager.MIN_BPM) - 10)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/541/buggy-version/src.com.kh.beatbot.BeatBotActivity.java", "BodyUseAPI": [], "Fixed commit": "86d0f66779c36b1d426aab9b22dd079e40358019", "Url": "https://api.github.com/repos/khiner/BeatBot", "Date": "2012-08-27T23:44:47Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (indexOfEarlyAccessSuffix != (-1)) { javaVersionElements[0] = javaVersionElements[0].substring(0, indexOfEarlyAccessSuffix); }else { indexOfEarlyAccessSuffix = javaVersionElements[0].lastIndexOf(\"-internal\"); if (indexOfEarlyAccessSuffix != (-1)) { javaVersionElements[0] = javaVersionElements[0].substring(0, indexOfEarlyAccessSuffix); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5811/buggy-version/apps.jrobin.java.src.engine.misc.DeallocationHelper.java", "BodyUseAPI": [], "Fixed commit": "95ae86d962e3a380b224d51449bcec7e4a6dfe9e", "Url": "https://api.github.com/repos/i2p/i2p.i2p", "Date": "2016-10-28T15:18:08Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.User.getProfileImg()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (img != null) { byte[] imgBytes = user.getProfileImg().getImg(); if (imgBytes != null) { if ((imgBytes.length) > 0) { return new org.primefaces.model.DefaultStreamedContent(new java.io.ByteArrayInputStream(imgBytes), \"image/png\"); }else { return null; } }else { return null; } }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8817/buggy-version/SocialNetworkWebsite.src.java.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "04a38c1e598a68e7451202360fa0db5f73d5b3ce", "Url": "https://api.github.com/repos/cs345team/social", "Date": "2013-05-01T02:37:05Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (height == 0) { columnHeights[searchX][searchZ] = by; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2150/buggy-version/common.buildcraft.factory.TileQuarry.java", "BodyUseAPI": [], "Fixed commit": "485e214f66de37f414d416ef52ef0e933056c4d4", "Url": "https://api.github.com/repos/hea3ven/BuildCraft", "Date": "2014-12-28T20:03:58Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.samourai.wallet.api.APIFactory.getInstance(this).getTxInfo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((txObj != null) && (txObj.has(\"txid\"))) { txSeen = true; }else if (((txObj != null) && (txObj.has(\"status\"))) && (txObj.getString(\"status\").equals(\"error\"))) { txSeen = false; }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2310/buggy-version/app.src.main.java.com.samourai.wallet.ricochet.RicochetActivity.java", "BodyUseAPI": ["org.json.JSONObject.has(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "txObj.getString(\"status\").equals(java.lang.String)"], "Fixed commit": "9ff541642d6ac616fdf0ff53d4447a411285bd8e", "Url": "https://api.github.com/repos/Samourai-Wallet/samourai-wallet-android", "Date": "2017-08-13T18:53:04Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUid()) != null) { mDatabase = com.google.firebase.database.FirebaseDatabase.getInstance().getReference(); mDatabase.child(\"user-notifications\").child(getUid()).addChildEventListener(new edu.bilkent.findatutor.misc.NotificationsListener.NotificationChildEventListener()); android.util.Log.i(\"main\", \"onCreate fired\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3734/buggy-version/app.src.main.java.edu.bilkent.findatutor.misc.NotificationsListener.java", "BodyUseAPI": [], "Fixed commit": "77d617f59be25b4b55d51e9c720050ec4707fea2", "Url": "https://api.github.com/repos/arash-ash/FindATutor", "Date": "2016-07-21T22:21:43Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isNotEmpty(flowNode.getDepList())) { for (java.lang.String dep : flowNode.getDepList()) { graph.addEdge(dep, flowNode.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7875/buggy-version/web-server.src.main.java.com.baifendian.swordfish.webserver.api.service.WorkflowService.java", "BodyUseAPI": ["com.baifendian.swordfish.dao.model.FlowNode.getName()", "com.baifendian.swordfish.dao.model.FlowNode.getDepList()", "com.baifendian.swordfish.common.utils.graph.Graph<java.lang.String, com.baifendian.swordfish.dao.model.FlowNode, java.lang.String>.addEdge(java.lang.String,flowNode.getName())"], "Fixed commit": "a9bfddcd3dfa35d537acbe8dde871af97f84df1d", "Url": "https://api.github.com/repos/baifendian/swordfish", "Date": "2017-04-06T13:59:53Z"},
{"Line": "=>1077", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.pattern.aliasToNode.get(alias).isOptionalNode()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/600/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.parser.OMatchStatement.java", "BodyUseAPI": [], "Fixed commit": "b367acaae4855a3188dd6d15b49bc1c1b174e8be", "Url": "https://api.github.com/repos/sonatype/orientdb", "Date": "2017-02-09T13:48:30Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((options.size()) == 1) { firstOption.setText(options.get(0)); secondOption.setVisibility(View.INVISIBLE); }else if ((options.size()) == 2) { firstOption.setText(options.get(0)); secondOption.setText(options.get(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1747/buggy-version/app.src.main.java.org.unicef.rapidreg.widgets.viewholder.SingleLineRadioViewHolder.java", "BodyUseAPI": ["org.unicef.rapidreg.widgets.ToggleableRadioButton.setText(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.size()", "org.unicef.rapidreg.widgets.ToggleableRadioButton.setText(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)", "org.unicef.rapidreg.widgets.ToggleableRadioButton.setText(java.lang.String)"], "Fixed commit": "bab85ac6c56b8144c1cf771513abe0d7fb69e92d", "Url": "https://api.github.com/repos/UnicefNY/RapidReg", "Date": "2016-12-30T07:06:19Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.baderlab.csapps.socialnetwork.model.SocialNetworkAppManager.getInfoPanel()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (infoPanel != null) { javax.swing.JTextField infoPanelTextField = infoPanel.getTextField(); infoPanelTextField.setText(\"ALL\"); infoPanelTextField.repaint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8930/buggy-version/SocialNetwork.src.main.java.org.baderlab.csapps.socialnetwork.tasks.CreateChartTask.java", "BodyUseAPI": ["org.baderlab.csapps.socialnetwork.panels.InfoPanel.getTextField()"], "Fixed commit": "a4e1701315ff6fd1e19b4989db01b5da3d39acb7", "Url": "https://api.github.com/repos/BaderLab/SocialNetworkApp", "Date": "2015-08-27T14:26:21Z"},
{"Line": "=>1011", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((doc.select(\"form[name=medkl] table\").size()) == 0) { return new java.util.ArrayList<de.geeksfactory.opacclient.objects.LentItem>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7831/buggy-version/opacclient.libopac.src.main.java.de.geeksfactory.opacclient.apis.BiBer1992.java", "BodyUseAPI": [], "Fixed commit": "fc228624ce04b15965fd9ac5e46732cabb706aad", "Url": "https://api.github.com/repos/johan12345/opacclient", "Date": "2017-01-30T21:53:56Z"},
{"Line": "=>1130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((doc.select(\"form[name=vorml] table\").size()) == 0) { return new java.util.ArrayList<de.geeksfactory.opacclient.objects.ReservedItem>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7831/buggy-version/opacclient.libopac.src.main.java.de.geeksfactory.opacclient.apis.BiBer1992.java", "BodyUseAPI": [], "Fixed commit": "fc228624ce04b15965fd9ac5e46732cabb706aad", "Url": "https://api.github.com/repos/johan12345/opacclient", "Date": "2017-01-30T21:53:56Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(gameMarkers.containsKey(gameKey))) { LaserTagApplication.firebaseReference.child(\"games\").child(gameKey).removeEventListener(this); mp.title((((dbGame.getGameType().toString()) + \" Game:~\") + gameKey)).snippet(dbGame.toString()); mp.position(latLng).flat(true).icon(com.google.android.gms.maps.model.BitmapDescriptorFactory.fromResource(R.drawable.gamemapicon)); gameMarkers.put(gameKey, mGoogleMap.addMarker(mp)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/759/buggy-version/app.src.main.java.com.taserlag.lasertag.fragments.JoinGameFragment.java", "BodyUseAPI": ["mp.title((((dbGame.getGameType().toString()) + \" Game:~\") + gameKey)).snippet(dbGame.toString())", "LaserTagApplication.firebaseReference.child(\"games\").child(gameKey).removeEventListener(com.taserlag.lasertag.fragments.JoinGameFragment.4)", "com.google.android.gms.maps.model.MarkerOptions.title((((dbGame.getGameType().toString()) + \" Game:~\") + gameKey))", "LaserTagApplication.firebaseReference.child(\"games\").child(java.lang.String)", "java.util.Map<java.lang.String, com.google.android.gms.maps.model.Marker>.put(java.lang.String,mGoogleMap.addMarker(mp))"], "Fixed commit": "81be11ac2194016a5db8a68ba1068cd9220d2f13", "Url": "https://api.github.com/repos/drummeric/LaserTag", "Date": "2016-03-24T15:51:31Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(combo.getListVisible())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3118/buggy-version/mb.template.src.mb.template.wizard.pages.TemplatePage.java", "BodyUseAPI": [], "Fixed commit": "8dc1417b8f047b5ab6900bc302453d899f04499d", "Url": "https://api.github.com/repos/MiroslavBaev/Template", "Date": "2016-12-28T15:01:28Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arrayIsSortedBecause0or1element) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8639/buggy-version/src.QuickSorting.java", "BodyUseAPI": [], "Fixed commit": "b969ae9f63930f15aac1f57485610b84748c17a5", "Url": "https://api.github.com/repos/PlayingJavaTogether/SortingAdventure", "Date": "2015-09-12T22:29:42Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.fenixedu.presentationTier.Action.student.SeniorInformationAction.getFromRequest(javax.servlet.http.HttpServletRequest,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (registrationObj != null) { registrationOID = registrationObj.toString(); }else { registrationOID = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6230/buggy-version/src.main.java.net.sourceforge.fenixedu.presentationTier.Action.student.SeniorInformationAction.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "a793c5718e73ef18511f99cc1972066b81fc8ca4", "Url": "https://api.github.com/repos/diutsu/fenix", "Date": "2013-10-03T17:16:43Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.everit.osgi.ecm.component.ri.internal.attribute.ServiceReferenceAttributeHelper.isHolder()) { parameter = new org.everit.osgi.ecm.component.ServiceHolder[tmpSuitings.length]; }else { parameter = ((java.lang.Object[]) (java.lang.reflect.Array.newInstance(org.everit.osgi.ecm.component.ri.internal.attribute.ServiceReferenceAttributeHelper.getReferenceMetadata().getServiceInterface(), tmpSuitings.length))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2089/buggy-version/core.src.main.java.org.everit.osgi.ecm.component.ri.internal.attribute.ServiceReferenceAttributeHelper.java", "BodyUseAPI": [], "Fixed commit": "c8164ba5f44e88989486d54eb35d65ad44bdf82f", "Url": "https://api.github.com/repos/everit-org/ecm-component", "Date": "2015-03-09T17:15:45Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.bluetooth.BluetoothAdapter.getDefaultAdapter()) != null) { android.bluetooth.BluetoothAdapter.getDefaultAdapter().getBondedDevices(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2216/buggy-version/app.src.main.java.com.freshollie.headunitcontroller.ui.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "99aa33852c89f9d794d9764c7ea8ce4f6d8bab96", "Url": "https://api.github.com/repos/freshollie/headunit-controller-android", "Date": "2017-09-03T17:15:10Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getAttribute(org.sitemesh.webapp.WebAppContext.FORWARD_SERVLET_PATH)) != null) { result = ((java.lang.String) (request.getAttribute(org.sitemesh.webapp.WebAppContext.FORWARD_SERVLET_PATH))); }else { result = request.getServletPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2854/buggy-version/sitemesh.src.main.java.org.sitemesh.webapp.WebAppContext.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getServletPath()", "javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)"], "Fixed commit": "74fee5a201c6a867878133869df5a37dfa611337", "Url": "https://api.github.com/repos/sitemesh/sitemesh3", "Date": "2015-05-14T20:32:04Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.net.ssl.X509TrustManager.getAcceptedIssuers()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (defaultJavaTrustedCerts != null) { return defaultJavaTrustedCerts; }else { return net.lightbody.bmp.mitm.util.TrustUtil.EMPTY_CERTIFICATE_ARRAY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6405/buggy-version/mitm.src.main.java.net.lightbody.bmp.mitm.util.TrustUtil.java", "BodyUseAPI": [], "Fixed commit": "19501e26e1491ad6e2a0c504ddd4c742b171eb6f", "Url": "https://api.github.com/repos/jekh/browsermob-proxy", "Date": "2016-05-16T21:45:49Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBoard) == (com.sharesmile.share.rfac.fragments.LeaderBoardFragment.BOARD_TYPE.TEAMBAORD)) { setBannerImage(); }else if ((mBoard) == (com.sharesmile.share.rfac.fragments.LeaderBoardFragment.BOARD_TYPE.LEADERBOARD)) { fetchLeaderBoardDataFromDb(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/193/buggy-version/app.src.main.java.com.sharesmile.share.rfac.fragments.LeaderBoardFragment.java", "BodyUseAPI": [], "Fixed commit": "987ca6ed07ff10f5881b5a4a5dc8b67a154e2276", "Url": "https://api.github.com/repos/anshulagarwal06/Share", "Date": "2017-01-13T11:11:19Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["id.base.app.dao.research.IResearchDAO.findByPermalink(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((research.getOfficers()) instanceof org.hibernate.collection.internal.PersistentBag) { ((org.hibernate.collection.spi.PersistentCollection) (research.getOfficers())).forceInitialization(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8896/buggy-version/Implementation.src.id.base.app.service.research.ResearchService.java", "BodyUseAPI": ["((org.hibernate.collection.spi.PersistentCollection) (research.getOfficers())).forceInitialization()", "id.base.app.valueobject.research.Research.getOfficers()"], "Fixed commit": "4ea1fa7c86ee8bafa09f5fbab4238b4f25aa7d98", "Url": "https://api.github.com/repos/utharamadhan/base.app", "Date": "2017-07-05T06:39:55Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["id.base.app.dao.research.IResearchDAO.findByPermalink(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((research.getKeywords()) instanceof org.hibernate.collection.internal.PersistentBag) { ((org.hibernate.collection.spi.PersistentCollection) (research.getKeywords())).forceInitialization(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8896/buggy-version/Implementation.src.id.base.app.service.research.ResearchService.java", "BodyUseAPI": ["id.base.app.valueobject.research.Research.getKeywords()", "((org.hibernate.collection.spi.PersistentCollection) (research.getKeywords())).forceInitialization()"], "Fixed commit": "4ea1fa7c86ee8bafa09f5fbab4238b4f25aa7d98", "Url": "https://api.github.com/repos/utharamadhan/base.app", "Date": "2017-07-05T06:39:55Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(creationOrder.contains(identifier))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3252/buggy-version/src.main.java.com.github.kuros.random.jpa.resolver.CreationOrderResolverImpl.java", "BodyUseAPI": [], "Fixed commit": "314f9a2b66cf95d7b750b62926545bf4f8530e7c", "Url": "https://api.github.com/repos/kuros/random-jpa", "Date": "2015-06-04T17:24:32Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((server.getPassword()) != null) { text_6.setText(server.getPassword()); text_6.selectAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2340/buggy-version/src.main.java.com.cxy.redisclient.presentation.server.UpdateServerDialog.java", "BodyUseAPI": ["com.cxy.redisclient.presentation.server.UpdateServerDialog.setText(server.getPassword())", "com.cxy.redisclient.domain.Server.getPassword()"], "Fixed commit": "95b2743975b92458428678293740c12c1d73a2c5", "Url": "https://api.github.com/repos/caoxinyu/RedisClient", "Date": "2014-08-18T02:26:13Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.Ben12345rocks.VotingPlugin.Config.ConfigVoteReminding.getInstance().getRemindOnLogin()) { com.Ben12345rocks.VotingPlugin.VoteReminding.VoteReminding.getInstance().runRemind(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/9105/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.User.java", "BodyUseAPI": [], "Fixed commit": "c97f0a8dc8c76bc67ee2918019206b3f516a08ed", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-07-03T01:21:28Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Character.toLowerCase(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (key == 'h') { replace(easel[cursorY][cursorX], color); }else if (key == 't') { color = easel[cursorY][cursorX]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4706/buggy-version/jPaint.java", "BodyUseAPI": [], "Fixed commit": "895791ce525501e99da80bd03a0d1c607a14f286", "Url": "https://api.github.com/repos/EMilborn/Ein-Bagel", "Date": "2016-01-23T16:24:09Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((imageXObject.getMetadata()) != null) { try { metadata = org.verapdf.features.pb.objects.PBImageXObjectFeaturesObject.inputStreamToByteArray(imageXObject.getMetadata().getStream().getUnfilteredStream()); } catch (java.io.IOException e) { org.verapdf.features.pb.objects.PBImageXObjectFeaturesObject.LOGGER.error(\"Can not get metadata stream for image xobject\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5579/buggy-version/feature-report.src.main.java.org.verapdf.features.pb.objects.PBImageXObjectFeaturesObject.java", "BodyUseAPI": ["org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.getMetadata()", "imageXObject.getMetadata().getStream()", "imageXObject.getMetadata().getStream().getUnfilteredStream()", "org.verapdf.features.pb.objects.PBImageXObjectFeaturesObject.inputStreamToByteArray(imageXObject.getMetadata().getStream().getUnfilteredStream())"], "Fixed commit": "15872137ef2ccda1e213d5653bb4abc7baf45550", "Url": "https://api.github.com/repos/BezrukovM/veraPDF-library", "Date": "2015-09-28T10:57:33Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((file.getMetadata()) != null) { try { metadata = org.verapdf.features.pb.objects.PBFontFeaturesObject.inputStreamToByteArray(file.getMetadata().getStream().getUnfilteredStream()); } catch (java.io.IOException e) { org.verapdf.features.pb.objects.PBFontFeaturesObject.LOGGER.error(\"Can not get metadata stream for font file\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5579/buggy-version/feature-report.src.main.java.org.verapdf.features.pb.objects.PBFontFeaturesObject.java", "BodyUseAPI": ["file.getMetadata().getStream().getUnfilteredStream()", "file.getMetadata().getStream()", "org.verapdf.features.pb.objects.PBFontFeaturesObject.inputStreamToByteArray(file.getMetadata().getStream().getUnfilteredStream())", "org.apache.pdfbox.pdmodel.common.PDStream.getMetadata()"], "Fixed commit": "15872137ef2ccda1e213d5653bb4abc7baf45550", "Url": "https://api.github.com/repos/BezrukovM/veraPDF-library", "Date": "2015-09-28T10:57:33Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((itemPosition) == null) && ((com.dmytrobohdanov.galleryonmap.GalleryItemsDataKeeper.getInstance().getItemAmount()) > 0)) { itemPosition = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5032/buggy-version/app.src.main.java.com.dmytrobohdanov.galleryonmap.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d5c2b7ec8c0a76a10960db5bd25bc86efb5d9a8e", "Url": "https://api.github.com/repos/dmytrobohdanov/GalleryOnMap", "Date": "2016-09-27T20:18:18Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (param.has(\"id\")) { param = param.get(\"id\"); try { ctx.args.put(configuration.name(), java.util.Optional.of(configuration.dataType().toArgs(param, configuration.name()))); } catch (java.lang.IllegalArgumentException e) { return java.util.concurrent.CompletableFuture.completedFuture(badRequest(e.getMessage())); } }else { ctx.args.put(configuration.name(), java.util.Optional.empty()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/9130/buggy-version/swagplash.src.main.java.com.github.albertosh.swagplash.actions.ApiBodyParamAction.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)"], "Fixed commit": "456eef496df175a1325c353a878346a417a88505", "Url": "https://api.github.com/repos/AlbertoSH/Swagplash", "Date": "2016-07-12T11:20:46Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Double.compare(cosTheta, (-1.0))) < 0) { cosTheta = -1.0; }else if ((java.lang.Double.compare(cosTheta, 1.0)) > 0) { cosTheta = 1.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4903/buggy-version/src.org.doube.geometry.Trig.java", "BodyUseAPI": ["java.lang.Double.compare(double,double)"], "Fixed commit": "5a9c906fcacba30846153bbf4190b8a351f3b9bd", "Url": "https://api.github.com/repos/mdoube/BoneJ", "Date": "2016-04-25T10:58:22Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.Document.get(Field.ROOT_ENTRY_CLASS_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNull(className)) { className = document.get(Field.ENTRY_CLASS_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3428/buggy-version/portal-impl.src.com.liferay.portal.search.SearchPermissionCheckerImpl.java", "BodyUseAPI": [], "Fixed commit": "80fa8261af4b0cdc71d57affc73735012edc3cd4", "Url": "https://api.github.com/repos/Preston-Crary/liferay-portal", "Date": "2015-05-22T21:08:16Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (audioVisual.getType().equals(\"Main\")) isRootExperience = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7223/buggy-version/src.com.wb.nextgenlibrary.data.MovieMetaData.java", "BodyUseAPI": [], "Fixed commit": "85e4761918b8cde983031bea62b6ab1533c71d84", "Url": "https://api.github.com/repos/warnerbros/cpe-manifest-android-experience", "Date": "2016-10-24T22:19:09Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (intent != null) { extras = intent.getExtras(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6492/buggy-version/src.net.screenfreeze.deskcon.StatusUpdateService.java", "BodyUseAPI": ["android.content.Intent.getExtras()"], "Fixed commit": "c7f862877cb2f5a0b8eb66ab56a8bad103ec2753", "Url": "https://api.github.com/repos/MK-42/deskcon-android", "Date": "2015-03-02T18:58:12Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.configuration.ConfigurationSection.getConfigurationSection(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (l != null) { nu.nerd.moblimiter.configuration.ConfiguredMob mob = new nu.nerd.moblimiter.configuration.ConfiguredMob(l, defaults); limits.put(key.toUpperCase(), mob); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8166/buggy-version/src.nu.nerd.moblimiter.configuration.Configuration.java", "BodyUseAPI": [], "Fixed commit": "0d964543881b7fa2f7246c6e0174f45a96fc13bb", "Url": "https://api.github.com/repos/NerdNu/MobLimiter", "Date": "2016-06-07T04:19:29Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (members.containsKey(contact)) { ch.paru.scrumTools.capacity.shared.data.TeamMember teamMember = members.get(contact); team.addTeamMember(teamMember); }else { ch.paru.scrumTools.capacity.shared.data.TeamMember teamMember = teamMemberFactory.createTeamMember(contact); team.addTeamMember(teamMember); members.put(contact, teamMember); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/9093/buggy-version/scrumTools.src.main.java.ch.paru.scrumTools.capacity.shared.data.DataBox.java", "BodyUseAPI": ["java.util.Map<ch.paru.scrumTools.exchangeServer.services.contact.ServerContact, ch.paru.scrumTools.capacity.shared.data.TeamMember>.get(ch.paru.scrumTools.exchangeServer.services.contact.ServerContact)", "java.util.Map<ch.paru.scrumTools.exchangeServer.services.contact.ServerContact, ch.paru.scrumTools.capacity.shared.data.TeamMember>.put(ch.paru.scrumTools.exchangeServer.services.contact.ServerContact,ch.paru.scrumTools.capacity.shared.data.TeamMember)", "ch.paru.scrumTools.capacity.shared.factories.TeamMemberFactory.createTeamMember(ch.paru.scrumTools.exchangeServer.services.contact.ServerContact)"], "Fixed commit": "e5794c2e23b62bf7e0b2977b7c73e6a6efa4db4c", "Url": "https://api.github.com/repos/kerli81/Scrum-Tools", "Date": "2014-02-04T09:33:25Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((getActivity()) instanceof com.namelessdev.mpdroid.MainMenuActivity) && (com.namelessdev.mpdroid.MPDApplication.isLightNowPlayingThemeSelected())) || ((!((getActivity()) instanceof com.namelessdev.mpdroid.MainMenuActivity)) && (com.namelessdev.mpdroid.MPDApplication.isLightThemeSelected()))) { list.setCacheColorHint(getResources().getColor(android.R.color.background_light)); }else { list.setCacheColorHint(getResources().getColor(R.color.nowplaying_background)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5355/buggy-version/MPDroid.src.com.namelessdev.mpdroid.fragments.PlaylistFragment.java", "BodyUseAPI": [], "Fixed commit": "31405ccd9fa46f418e47b4564be55897ead9432f", "Url": "https://api.github.com/repos/abarisain/dmix", "Date": "2013-04-01T23:35:23Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newStartTime == 0) && (newEndTime == 0)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6701/buggy-version/src.logic.command.CmdUpdate.java", "BodyUseAPI": [], "Fixed commit": "bd9731d15b4bad1bc7dc030a24394110ac0aad6e", "Url": "https://api.github.com/repos/cs2103aug2015-w14-3j/main", "Date": "2015-11-03T06:50:54Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source) instanceof net.praqma.vcs.util.configuration.implementation.ClearCaseConfiguration) { net.praqma.vcs.util.configuration.implementation.ClearCaseConfiguration ccc = ((net.praqma.vcs.util.configuration.implementation.ClearCaseConfiguration) (source)); ccc.setParentStream(ccc.getFoundationBaseline().getStream()); out.println((\"[AVA] Setting output stream to \" + (ccc.getStreamName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7184/buggy-version/src.main.java.net.praqma.jenkins.plugin.ava.RemoteSetup.java", "BodyUseAPI": [], "Fixed commit": "d98a5d4019ffed38afccdf83e67586b1f1dfedf2", "Url": "https://api.github.com/repos/Praqma/vcs-bridge-plugin", "Date": "2011-11-01T09:02:09Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.size()) == 0) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3879/buggy-version/src.edu.uw.easysrl.syntax.grammar.Combinator.java", "BodyUseAPI": [], "Fixed commit": "a7f8081dbfc56f7bf1a930cac19e051b1a56d194", "Url": "https://api.github.com/repos/kentonl/EasySRL", "Date": "2016-02-25T20:49:38Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentIndex) == 0) { mCurrentIndex = (mQuestionBank.length) - 1; }else { mCurrentIndex = (mCurrentIndex) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6858/buggy-version/app.src.main.java.com.brocnickodemus.geoquiz.QuizActivity.java", "BodyUseAPI": [], "Fixed commit": "7a934e97178dcea8101b31e4f10eb318a288888f", "Url": "https://api.github.com/repos/bnickodemus/GeoQuiz", "Date": "2017-10-03T04:13:36Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(program.getPriceDataGetter().updateNew(profile, null))) { error = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2386/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.tabs.tracker.EveKitTrackImportUpdateTask.java", "BodyUseAPI": [], "Fixed commit": "21fdb896891e6448a40be3ec2aa68f529801528e", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-10-05T15:18:50Z"},
{"Line": "=>771", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) != null) parent.children.put(child.processID, child);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3427/buggy-version/userprog.UserProcess.java", "BodyUseAPI": [], "Fixed commit": "197cda70c6fbf9a20d7d6af5de5f975e35771246", "Url": "https://api.github.com/repos/whymenot/cs162_proj1", "Date": "2013-03-21T03:24:25Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isSomaticCandidate())) { pValue = 1.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/360/buggy-version/src.edu.cornell.med.icb.goby.alignments.SomaticVariationOutputFormat.java", "BodyUseAPI": [], "Fixed commit": "95ad7f33034162aa25f372184ab2357839e50fe1", "Url": "https://api.github.com/repos/CampagneLaboratory/goby", "Date": "2013-10-05T21:47:45Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isSomaticCandidate())) { somaticFrequency = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/360/buggy-version/src.edu.cornell.med.icb.goby.alignments.SomaticVariationOutputFormat.java", "BodyUseAPI": [], "Fixed commit": "95ad7f33034162aa25f372184ab2357839e50fe1", "Url": "https://api.github.com/repos/CampagneLaboratory/goby", "Date": "2013-10-05T21:47:45Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.format(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (filePath.contains(\"..\")) { logger.log(java.lang.String.format(\"Cannot extract Zip entry %s because it contains a restricted path reference. Characters such as '..' or slashes are disallowed. The initial zip path was %s. This was blocked to prevent a vulnerability.\", zipEntry.getName(), zipPath), PiazzaLogger.WARNING); zipEntry = zipInputStream.getNextEntry(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8356/buggy-version/src.main.java.ingest.utility.IngestUtilities.java", "BodyUseAPI": [], "Fixed commit": "03b341e9177bd1a49cbe23d78c871b4dc8952a0d", "Url": "https://api.github.com/repos/venicegeo/pz-ingest", "Date": "2016-10-12T16:15:42Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getServer().getMap(java.lang.Short)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (map == null) { PVPArena.instance.getLogger().severe(((\"Map #\" + value) + \" seems to be corrupted, please check the PVP Arena config for this value!\")); PVPArena.instance.getLogger().severe((\"Affected player: \" + (player.getName()))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3355/buggy-version/m_ArenaMaps.src.net.slipcor.pvparena.modules.maps.Maps.java", "BodyUseAPI": [], "Fixed commit": "676547cb3562fbb92363c33e18d3f55d9145de9a", "Url": "https://api.github.com/repos/slipcor/pvparena_modules", "Date": "2016-05-21T17:58:41Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zanata.service.ProcessManagerService.getProcessHandle(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((handle.getMaxProgress()) > 0) { perComplete = ((handle.getCurrentProgress()) / (handle.getMaxProgress())) * 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6855/buggy-version/zanata-war.src.main.java.org.zanata.rest.service.AsynchronousProcessResourceService.java", "BodyUseAPI": ["java.lang.ProcessHandle.getMaxProgress()", "java.lang.ProcessHandle.getCurrentProgress()"], "Fixed commit": "1ba6ffd2d287e188b1e78da424369cb565015ac3", "Url": "https://api.github.com/repos/zanata/zanata", "Date": "2012-10-19T00:22:28Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.editor.getGraph().isDirected()) { moveEdges(this.editor.getGraph().incidentInEdges(v)); moveEdges(this.editor.getGraph().incidentOutEdges(v)); }else { moveEdges(this.editor.getGraph().incidentEdges(v)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2356/buggy-version/src.easygraph.state.MoveVertexState.java", "BodyUseAPI": ["this.editor.getGraph().incidentInEdges(graphlib.Vertex)", "this.editor.getGraph()", "easygraph.state.MoveVertexState.moveEdges(this.editor.getGraph().incidentOutEdges(v))", "this.editor.getGraph()", "this.editor.getGraph().incidentOutEdges(graphlib.Vertex)", "easygraph.state.MoveVertexState.moveEdges(this.editor.getGraph().incidentInEdges(v))", "this.editor.getGraph()", "easygraph.state.MoveVertexState.moveEdges(this.editor.getGraph().incidentEdges(v))", "this.editor.getGraph().incidentEdges(graphlib.Vertex)"], "Fixed commit": "9b55c6162f40121baaf6d16cb87dbbb9962c0429", "Url": "https://api.github.com/repos/engek1/easygraph", "Date": "2015-01-14T10:51:40Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(leftAsOptional().equals(other.leftAsOptional()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3212/buggy-version/src.main.java.rickbw.incubator.choice.Either.java", "BodyUseAPI": [], "Fixed commit": "417a3d5d2d21d128f408a21ceee9b3ee7a496810", "Url": "https://api.github.com/repos/rickbw/incubator", "Date": "2014-07-23T04:59:32Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value != null) { if (value instanceof java.lang.Number) { final java.lang.Number number = com.turel.utils.ReflectionUtils.convertToNumber(((java.lang.Class<? extends java.lang.Number>) (destField.getType())), ((java.lang.Number) (value))); destField.set(dest, number); }else { throw new java.lang.RuntimeException(java.lang.String.format(\"unsupported type copy %s->%s\", destField.getType().toString(), srcField.getType().toString())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5962/buggy-version/src.main.java.com.turel.utils.ReflectionUtils.java", "BodyUseAPI": [], "Fixed commit": "e2ce3fa00286a8c0994de86e4a448ad815f28c81", "Url": "https://api.github.com/repos/chaimt/TurelUtils", "Date": "2017-01-25T10:18:50Z"},
{"Line": "=>1069", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((query.getSourceFilter()) != null) { com.github.vanroy.springdata.jest.SourceFilter sourceFilter = query.getSourceFilter(); searchSourceBuilder.fetchSource(sourceFilter.getIncludes(), sourceFilter.getExcludes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7207/buggy-version/spring-data-jest.src.main.java.com.github.vanroy.springdata.jest.JestElasticsearchTemplate.java", "BodyUseAPI": ["com.github.vanroy.springdata.jest.Query.getSourceFilter()"], "Fixed commit": "ac77899c2bd20b9c80fac18f33cf77954d7eb06d", "Url": "https://api.github.com/repos/VanRoy/spring-data-jest", "Date": "2016-11-21T23:25:45Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.chalmers.ait.dat215.project.CartEvent.getShoppingItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((item == null) && (cart.getItems().isEmpty())) { clearList(); }else { insertShoppingItem(item, ce.isAddEvent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8451/buggy-version/iMat.src.imat.CartItemListPanel.java", "BodyUseAPI": ["imat.CartItemListPanel.insertShoppingItem(se.chalmers.ait.dat215.project.ShoppingItem,ce.isAddEvent())"], "Fixed commit": "5bc87a90a24cca00deadf29185cff825eae989ff", "Url": "https://api.github.com/repos/Vilddjur/DAT216_Projekt", "Date": "2015-03-06T12:04:37Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (packet == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3876/buggy-version/src.main.java.com.github.aklatt1194.SuperAwesomeOverlay.OverlayRoutingManager.java", "BodyUseAPI": [], "Fixed commit": "d6248fe66902221a7845bb5d1db27c22eae4a725", "Url": "https://api.github.com/repos/aklatt1194/SuperAwesomeOverlay", "Date": "2014-12-04T05:53:41Z"},
{"Line": "=>661", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.naman14.timber.MusicPlayer.mService) != null) com.naman14.timber.MusicPlayer.mService.removeTracks(0, java.lang.Integer.MAX_VALUE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8751/buggy-version/app.src.main.java.com.naman14.timber.MusicPlayer.java", "BodyUseAPI": [], "Fixed commit": "cc96fade9bb2bba83c73fac39baf56e4f2f21b4a", "Url": "https://api.github.com/repos/Vinetos/Hello-Music-droid", "Date": "2017-08-06T07:49:47Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["object.get(\"agent\").getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (agent.has(\"extractor_id\")) { extractorId = agent.get(\"extractor_id\").getAsString(); java.lang.String[] split = extractorId.split(\"extractors/\"); if ((split.length) == 2) { extractorId = split[1]; } if (extractorId.equals(\"deprecatedapi\")) { if (content.has(\"extractor_id\")) { extractorId = content.get(\"extractor_id\").getAsString(); } } extractorMetadata.put(extractorId, gson.toJson(object)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2226/buggy-version/datawolf-service.src.main.java.edu.illinois.ncsa.datawolf.service.utils.WorkflowUtil.java", "BodyUseAPI": ["com.google.gson.JsonObject.get(java.lang.String)", "agent.get(\"extractor_id\").getAsString()"], "Fixed commit": "3194e0890037c8095c0482dda414fab27bf7cc5d", "Url": "https://api.github.com/repos/ncsa/datawolf", "Date": "2016-11-22T15:11:00Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rs.next()) { bean.setSabun(rs.getInt(\"sabun\")); bean.setName(rs.getString(\"name\")); bean.setNalja(rs.getString(\"nalja\")); bean.setPay(rs.getInt(\"pay\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1160/buggy-version/day03.src.main.java.com.hb.day03.model.SimpleDao.java", "BodyUseAPI": ["com.hb.day03.model.SimpleVo.setNalja(java.lang.String)", "com.hb.day03.model.SimpleVo.setSabun(int)", "java.sql.ResultSet.getString(java.lang.String)", "com.hb.day03.model.SimpleVo.setPay(int)", "java.sql.ResultSet.getInt(java.lang.String)", "java.sql.ResultSet.getInt(java.lang.String)", "com.hb.day03.model.SimpleVo.setName(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "9d3b2d3554abeffc89df316a20810d49e8c1ec21", "Url": "https://api.github.com/repos/dioneuty/Framework", "Date": "2017-05-29T07:35:53Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recordNum++) != 0) parsePerformance(record.get(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4668/buggy-version/CSVParser.src.main.com.quantumimplosion.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "a57722a37779d7bdef46d1577f7dd3b3b3e56829", "Url": "https://api.github.com/repos/matthickey21/QuantumImplosion", "Date": "2017-04-25T21:28:48Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recordNum++) != 0) { java.util.Set<java.lang.Integer> invalidColumns = com.quantumimplosion.parser.Validator.validatePerformanceRecord(record); for (java.lang.String table : CSVParserConstants.tableToHeadersMap.keySet()) { parseData(record, table, invalidColumns, headerMap); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4668/buggy-version/CSVParser.src.main.com.quantumimplosion.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "a57722a37779d7bdef46d1577f7dd3b3b3e56829", "Url": "https://api.github.com/repos/matthickey21/QuantumImplosion", "Date": "2017-04-25T21:28:48Z"},
{"Line": "=>1155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((!ignoreLineBreak) && ((event.newOffset) > 0)) && (c == '\\n')) || (c == '\\r')) { (event.newOffset)--; c = '#'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5992/buggy-version/src.org.nschmidt.ldparteditor.composites.compositetab.CompositeTab.java", "BodyUseAPI": [], "Fixed commit": "2cba1aa7eb4b9df62e3966aabed25b041cd7cdb6", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-11-05T11:12:40Z"},
{"Line": "=>1151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!ignoreLineBreak) && ((event.offset) == (compositeText[0].getOffsetAtLine(compositeText[0].getLineAtOffset(event.offset))))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5992/buggy-version/src.org.nschmidt.ldparteditor.composites.compositetab.CompositeTab.java", "BodyUseAPI": [], "Fixed commit": "2cba1aa7eb4b9df62e3966aabed25b041cd7cdb6", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-11-05T11:12:40Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fragmentVisible) { if (homeActivity != null) { showSystemUI(); homeActivity.showHomeNavigation(); } if (((currentFriend) != null) && (currentFriend.isHighlighted)) { galleryPresenter.populatePhotosList(currentFriend); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2475/buggy-version/app.src.main.java.com.collage.gallery.GalleryFragment.java", "BodyUseAPI": [], "Fixed commit": "89a65fe8aef6525cd1c0650c0dc4be09abb9ed8d", "Url": "https://api.github.com/repos/matdziu/collage", "Date": "2017-02-10T12:53:01Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (doc.hasSchema(\"file\")) { mainFile = ((org.nuxeo.ecm.core.api.Blob) (doc.getPropertyValue(xpathMainFile))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2734/buggy-version/nuxeo-automation.nuxeo-automation-core.src.main.java.org.nuxeo.ecm.automation.core.operations.blob.GetAllDocumentBlobs.java", "BodyUseAPI": ["org.nuxeo.ecm.core.api.DocumentModel.getPropertyValue(java.lang.String)"], "Fixed commit": "c255b327bb97cd342c13bc4376b7c05110028520", "Url": "https://api.github.com/repos/nuxeo/nuxeo-features", "Date": "2012-04-18T15:45:55Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (doc.hasSchema(\"files\")) { listFiles = ((org.nuxeo.ecm.core.api.model.impl.ListProperty) (doc.getProperty(xpathFiles))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2734/buggy-version/nuxeo-automation.nuxeo-automation-core.src.main.java.org.nuxeo.ecm.automation.core.operations.blob.GetAllDocumentBlobs.java", "BodyUseAPI": ["org.nuxeo.ecm.core.api.DocumentModel.getProperty(java.lang.String)"], "Fixed commit": "c255b327bb97cd342c13bc4376b7c05110028520", "Url": "https://api.github.com/repos/nuxeo/nuxeo-features", "Date": "2012-04-18T15:45:55Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((strVal.length()) == (JSON.DEFFAULT_DATE_FORMAT.length())) { format = com.alibaba.fastjson.JSON.DEFFAULT_DATE_FORMAT; }else if ((strVal.length()) == 10) { format = \"yyyy-MM-dd\"; }else if ((strVal.length()) == (\"yyyy-MM-dd HH:mm:ss\".length())) { format = \"yyyy-MM-dd HH:mm:ss\"; }else if ((((strVal.length()) == 29) && ((strVal.charAt(26)) == ':')) && ((strVal.charAt(28)) == '0')) { format = \"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\"; }else { format = \"yyyy-MM-dd HH:mm:ss.SSS\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4147/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.length()", "java.lang.String.length()", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)"], "Fixed commit": "57c0a6328e84a8dbc5311d1a075b8a3f70d5215d", "Url": "https://api.github.com/repos/kimmking/fastjson", "Date": "2017-06-30T15:27:39Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((phoneVibrator) != null) phoneVibrator.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5606/buggy-version/src.com.frankandrobot.reminderer.alarm.AlarmRingerService.java", "BodyUseAPI": [], "Fixed commit": "d6da40b82ddf6df6929da09da6728eeb4b9532cd", "Url": "https://api.github.com/repos/frankandrobot/Reminderer", "Date": "2013-08-27T09:16:32Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (toValue == null) io.coala.time.SimTime.LOG.warn((((\"Problem converting \" + (toString())) + \" to \") + (unit.name())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1330/buggy-version/coala-core.src.main.java.io.coala.time.SimTime.java", "BodyUseAPI": [], "Fixed commit": "9b2049fc6ba0d439ab1938c99dde463c93f84df6", "Url": "https://api.github.com/repos/krevelen/coala", "Date": "2014-09-17T14:06:46Z"},
{"Line": "=>623", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Collections.list(java.util.Enumeration)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(items.isEmpty())) { postProcessUniqueItemsFinally(items); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2163/buggy-version/src.main.java.com.emc.mongoose.core.impl.load.executor.LoadExecutorBase.java", "BodyUseAPI": ["com.emc.mongoose.core.impl.load.executor.LoadExecutorBase<T>.postProcessUniqueItemsFinally(java.util.List<T>)"], "Fixed commit": "b65b98bbeb226b6063389d20a37c97eb49a294e7", "Url": "https://api.github.com/repos/emc-mongoose/mongoose", "Date": "2016-09-05T10:44:53Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mImageManager) == null) { mHandler.removeCallbacks(mCheckingNetworkInit); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3572/buggy-version/src.com.adtworker.mail.WatchActivity.java", "BodyUseAPI": [], "Fixed commit": "2e89b3c821091390a0b4303095c8663d30d8909c", "Url": "https://api.github.com/repos/adtworker/iWatch", "Date": "2012-05-07T07:46:33Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (status.canDo(Task.EXCHANGE_CODE, userName)) { return (status.getExchangeableCodes(java.time.LocalDateTime.now(), userName).size()) > 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2066/buggy-version/src.main.java.com.peace.auto.bl.task.ExchangeCodeTask.java", "BodyUseAPI": ["com.peace.auto.bl.Status.getExchangeableCodes(java.time.LocalDateTime,java.lang.String)", "status.getExchangeableCodes(java.time.LocalDateTime.now(), userName).size()"], "Fixed commit": "938f586de01887ba11424a61c83596089861ffad", "Url": "https://api.github.com/repos/peace0phmind/blauto", "Date": "2016-07-17T14:55:02Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.selendroid.server.model.SelendroidWebDriver.executeScript(java.lang.String,io.selendroid.server.model.AndroidWebElement)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4962/buggy-version/selendroid-server.src.main.java.io.selendroid.server.model.AndroidWebElement.java", "BodyUseAPI": [], "Fixed commit": "a37ef3defbf4ce75a4cc6ba8f807695fe013d50e", "Url": "https://api.github.com/repos/DominikDary/selendroid", "Date": "2013-08-09T13:00:08Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getKeyChar()) != 8) { frontend.writeValue(othertext, thistext, lefte, righte); }else { new org.unitconverter.frontend.WaitingThread(frontend, othertext, thistext, lefte, righte); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5571/buggy-version/src.org.unitconverter.frontend.FieldListener.java", "BodyUseAPI": [], "Fixed commit": "7a1c1e368354f222e7990a4d061a3b70864128ee", "Url": "https://api.github.com/repos/Schille/UnitConverter", "Date": "2012-09-05T11:46:42Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (minute < 10) { button_time.setText(((hour + \":0\") + minute)); }else { button_time.setText(((hour + \":\") + minute)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8821/buggy-version/app.src.main.java.com.example.katecatlin.finalproject.fragments.SubmitConcertWhen.java", "BodyUseAPI": ["android.widget.Button.setText(java.lang.String)", "android.widget.Button.setText(java.lang.String)"], "Fixed commit": "4e29dfdc2c02ed9e8a8339fefa2af050b504ebc9", "Url": "https://api.github.com/repos/KateCatlin/FinalProject", "Date": "2014-12-08T22:14:54Z"},
{"Line": "=>751", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((panel) instanceof cz.metaverse.android.bilingualreader.panel.BookPanel) && ((book) == null)) { panel = null; }else { panel.updatePosition(position); if ((panel) instanceof cz.metaverse.android.bilingualreader.panel.AudioPanel) { ((cz.metaverse.android.bilingualreader.panel.AudioPanel) (panel)).setAudioList(sisterPanelHolder.book.getAudio()); } panel.loadState(preferences, creatingActivity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4081/buggy-version/bilingual-reader.src.cz.metaverse.android.bilingualreader.manager.PanelHolder.java", "BodyUseAPI": [], "Fixed commit": "305f208a6cde5ea3cd747526c54639da3691fb4c", "Url": "https://api.github.com/repos/tomparys/bilingual-reader", "Date": "2015-05-14T18:17:17Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((symbol.info().type()) == (FunctionInfo.Type.AGGREGATE)) { context.insideAggregation = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/9055/buggy-version/sql.src.main.java.io.crate.analyze.validator.HavingSymbolValidator.java", "BodyUseAPI": [], "Fixed commit": "83f089bcdf8933c221a3afbde4e79b429f20cc05", "Url": "https://api.github.com/repos/EvilMcJerkface/crate", "Date": "2016-12-14T13:38:56Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ubic.gemma.persistence.util.Settings.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ctx.isEmpty()) || (ctx.equals(\"/\"))) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/931/buggy-version/gemma-core.src.main.java.ubic.gemma.persistence.util.Settings.java", "BodyUseAPI": [], "Fixed commit": "606a09fb9a3ed376f6116a36effb9b3706bb5301", "Url": "https://api.github.com/repos/PavlidisLab/Gemma", "Date": "2017-09-29T21:23:24Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (goalReached()) { doMove(delta); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/563/buggy-version/01_brick.core.src.hu.bp.gdx.game.Nerd.java", "BodyUseAPI": [], "Fixed commit": "575e7aa6a9b66ea3f74bf66926559e326092c6d8", "Url": "https://api.github.com/repos/peterborkuti/libgdx", "Date": "2015-05-10T19:56:50Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.AnnotatedElement.getAnnotation(java.lang.Class<A>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((annotation == null) && (!(org.datacleaner.util.ReflectionUtils.isGetMethodsLegacyApproach()))) && (element instanceof java.lang.reflect.Method)) { final java.lang.reflect.Method m = ((java.lang.reflect.Method) (element)); final java.lang.Class<?> declaringClass = m.getDeclaringClass(); final java.lang.Class<?> superClass = declaringClass.getSuperclass(); final java.lang.String methodName = m.getName(); final java.lang.Class<?>[] methodParameterTypes = m.getParameterTypes(); if (superClass != null) { try { final java.lang.reflect.Method overriddenMethod = superClass.getMethod(methodName, methodParameterTypes); return org.datacleaner.util.ReflectionUtils.getAnnotation(overriddenMethod, annotationClass); } catch (java.lang.NoSuchMethodException e) { org.datacleaner.util.ReflectionUtils.logger.debug(\"Failed to get overridden method '{}' from {}\", methodName, superClass); } } final java.lang.Class<?>[] interfaces = declaringClass.getInterfaces(); for (java.lang.Class<?> interfaceClass : interfaces) { try { final java.lang.reflect.Method overriddenMethod = interfaceClass.getMethod(methodName, methodParameterTypes); return org.datacleaner.util.ReflectionUtils.getAnnotation(overriddenMethod, annotationClass); } catch (java.lang.NoSuchMethodException e) { org.datacleaner.util.ReflectionUtils.logger.debug(\"Failed to get overridden method '{}' from {}\", methodName, interfaceClass); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8777/buggy-version/engine.core.src.main.java.org.datacleaner.util.ReflectionUtils.java", "BodyUseAPI": [], "Fixed commit": "51925cf6bad7352dcce95eaec06a88472e273539", "Url": "https://api.github.com/repos/datacleaner/DataCleaner", "Date": "2015-03-23T14:18:03Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (timeblocks[0].equals(\"0\")) { timeString = \"12\".concat(timeString.substring(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6454/buggy-version/LunchBunch.src.source.code.BrowseAttending.java", "BodyUseAPI": [], "Fixed commit": "2a34216a6b40e1980b805cae106d8fe458c569a1", "Url": "https://api.github.com/repos/mpuncel/Lunch-Bunch", "Date": "2012-05-11T04:41:05Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (timeblocks[0].equals(\"0\")) { timeString = \"12\".concat(timeString.substring(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6454/buggy-version/LunchBunch.src.source.code.BrowseInvites.java", "BodyUseAPI": [], "Fixed commit": "2a34216a6b40e1980b805cae106d8fe458c569a1", "Url": "https://api.github.com/repos/mpuncel/Lunch-Bunch", "Date": "2012-05-11T04:41:05Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xdi2.core.impl.keyvalue.KeyValueContextNode.getContextNodesKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(this.keyValueStore.contains(contextNodesKey, arcXri.toString()))) { this.keyValueStore.set(contextNodesKey, arcXri.toString()); this.keyValueStore.delete((contextNodeKey + \"/--C\")); this.keyValueStore.delete((contextNodeKey + \"/--R\")); this.keyValueStore.delete((contextNodeKey + \"/--L\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4333/buggy-version/core.src.main.java.xdi2.core.impl.keyvalue.KeyValueContextNode.java", "BodyUseAPI": ["xdi2.core.impl.keyvalue.KeyValueStore.delete(java.lang.String)", "xdi2.core.impl.keyvalue.KeyValueStore.delete(java.lang.String)", "xdi2.core.impl.keyvalue.KeyValueStore.set(java.lang.String,arcXri.toString())", "xdi2.core.xri3.XDI3SubSegment.toString()", "xdi2.core.impl.keyvalue.KeyValueStore.delete(java.lang.String)"], "Fixed commit": "f0c3462c6222bfac8e95801e772edc20d7af740e", "Url": "https://api.github.com/repos/projectdanube/xdi2", "Date": "2013-08-14T08:51:29Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hasGlobalVar(name)) { try { return freemarker.ext.beans.BeansWrapper.getDefaultInstance().unwrap(globalData.get(name)); } catch (freemarker.template.TemplateModelException e) { de.se_rwth.commons.logging.Log.error(((\"0xA0123 Internal Error on global value for \\\"\" + name) + \"\\\"\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4167/buggy-version/monticore-runtime.src.main.java.de.monticore.generating.templateengine.GlobalExtensionManagement.java", "BodyUseAPI": ["de.se_rwth.commons.logging.Log.error(java.lang.String)", "freemarker.ext.beans.BeansWrapper.getDefaultInstance().unwrap(globalData.get(name))", "freemarker.template.SimpleHash.get(java.lang.String)"], "Fixed commit": "7b1160e5900fbd02b3d80bde6cfe68313a0a73da", "Url": "https://api.github.com/repos/MontiCore/monticore", "Date": "2017-12-11T12:48:06Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Models.WrapperTrainer.aggregateRuleList(java.util.List<Models.Structures.Rule>,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (rule != null) { rule.setOpen(html.substring(((min - (HEAD_TAIL_CHARS)) > 0 ? min - (HEAD_TAIL_CHARS) : 0), min)); rule.setClose(html.substring(max, ((max + (HEAD_TAIL_CHARS)) > (html.length()) ? html.length() : max + (HEAD_TAIL_CHARS)))); ruleList.add(rule); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2944/buggy-version/src.java.Models.WrapperTrainer.java", "BodyUseAPI": ["Models.Structures.Rule.setOpen(java.lang.String)", "Models.Structures.Rule.setClose(java.lang.String)", "java.util.List<Models.Structures.Rule>.add(Models.Structures.Rule)"], "Fixed commit": "ba6592ff3c938a00d3b578dde34351a86e4cb409", "Url": "https://api.github.com/repos/ksheppard/TicketFinder", "Date": "2016-03-06T22:19:39Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!internalAgg) { if (((ruleList.size()) > 0) && ((ruleList.get(0).getFeatureName()) == (Models.Enums.FeatureEnum.URL))) { if (testListRule(rule, false, internalAgg)) { return generateOC(rule, openList, closeList); } }else { if (testRule(rule)) { return rule; } } }else { if (testListRule(rule, false, internalAgg)) { return rule; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2944/buggy-version/src.java.Models.WrapperTrainer.java", "BodyUseAPI": ["Models.WrapperTrainer.testListRule(Models.Structures.Rule,boolean,boolean)", "Models.WrapperTrainer.testListRule(Models.Structures.Rule,boolean,boolean)"], "Fixed commit": "ba6592ff3c938a00d3b578dde34351a86e4cb409", "Url": "https://api.github.com/repos/ksheppard/TicketFinder", "Date": "2016-03-06T22:19:39Z"},
{"Line": "=>596", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i != ((htmlDocs.size()) - 1)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2944/buggy-version/src.java.Models.WrapperTrainer.java", "BodyUseAPI": [], "Fixed commit": "ba6592ff3c938a00d3b578dde34351a86e4cb409", "Url": "https://api.github.com/repos/ksheppard/TicketFinder", "Date": "2016-03-06T22:19:39Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (indexStart == (-1)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2944/buggy-version/src.java.Models.WrapperExecutor.java", "BodyUseAPI": [], "Fixed commit": "ba6592ff3c938a00d3b578dde34351a86e4cb409", "Url": "https://api.github.com/repos/ksheppard/TicketFinder", "Date": "2016-03-06T22:19:39Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nickname.length()) > 10) { nickname = nickname.substring(0, 10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7367/buggy-version/AndroidClient.AndroidClientApp.src.net.hermeto.android.main.ConnectionController.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "4aae4ce0e376438c6ca776a245738c788fe26ea1", "Url": "https://api.github.com/repos/thiagoalz/Hermeto", "Date": "2011-08-30T00:28:00Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((index < 0) || ((charCategoryContinuities.size()) <= index)) { java.lang.String message = java.lang.String.format(\"Index should be zero or positive value less than %d, but was %d\", charCategoryContinuities.size(), index); throw new java.lang.IllegalArgumentException(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2264/buggy-version/src.main.java.com.worksap.nlp.sudachi.UTF8InputText.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,int,int)", "java.util.List<java.lang.Integer>.size()"], "Fixed commit": "db055c0a56f493ecc7e37d3e4dafb4491cf00f99", "Url": "https://api.github.com/repos/WorksApplications/Sudachi", "Date": "2017-10-16T10:42:19Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((index < 0) || ((byteIndexes.length) <= index)) { java.lang.String message = java.lang.String.format(\"Index should be zero or positive value less than %d, but was %d\", byteIndexes.length, index); throw new java.lang.IllegalArgumentException(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2264/buggy-version/src.main.java.com.worksap.nlp.sudachi.UTF8InputText.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,int,int)"], "Fixed commit": "db055c0a56f493ecc7e37d3e4dafb4491cf00f99", "Url": "https://api.github.com/repos/WorksApplications/Sudachi", "Date": "2017-10-16T10:42:19Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checked)) { for (org.catrobat.catroid.content.bricks.Brick currentBrick : adapter.getCheckedBricks()) { currentBrick.setCheckedBoolean(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7528/buggy-version/catroid.src.org.catrobat.catroid.content.bricks.BroadcastReceiverBrick.java", "BodyUseAPI": [], "Fixed commit": "e83f93cc7486175d5f41992c80c48dc9029c2322", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2013-03-06T17:37:35Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dao.getTodayWalk()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8118/buggy-version/app.src.main.java.com.hdz.step.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a6e35c45463233a03b0b3393c2ceffd7d388c320", "Url": "https://api.github.com/repos/handezhao/StepCounter", "Date": "2017-07-19T03:30:00Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (colName.equals(\"wlbNamePart3\")) { it.unibz.inf.data_pumper.tables.Schema.logger.debug(\"CIAO\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/510/buggy-version/dataPumper.src.main.java.it.unibz.inf.data_pumper.tables.Schema.java", "BodyUseAPI": [], "Fixed commit": "fa7b68863c7f6d0ce0e2e4e3b52325c7202cc236", "Url": "https://api.github.com/repos/ontop/vig", "Date": "2016-05-23T13:21:35Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mSetTextInViewHandler) != null) && ((mSetTextInViewRunnable) != null)) { mSetTextInViewHandler.removeCallbacks(mSetTextInViewRunnable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/173/buggy-version/app.src.main.java.com.vitaminbacon.lockscreendialer.LockScreenKeypadPatternActivity.java", "BodyUseAPI": [], "Fixed commit": "df16da61e6c7cebed500484ca6504d97af2fd7a0", "Url": "https://api.github.com/repos/niborg/lock_screen_dialer", "Date": "2015-07-16T00:45:52Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["identNode.getPreviousSibling().getLastChild()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (lastChild == null) { mapClassName = null; }else { mapClassName = lastChild.getText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/157/buggy-version/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.MapIterationInForEachLoopCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getText()"], "Fixed commit": "b3fc071d0ecd97a75cdae2eba4a7a9021a89ac8b", "Url": "https://api.github.com/repos/rnveach/sevntu.checkstyle", "Date": "2017-05-12T15:32:11Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getExpr()) != null) { declareAndAssignDecimal(node.getName().getText(), pop()); }else { declareDecimal(node.getName().getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6767/buggy-version/PLC++.src.dk.aau.sw402F15.CodeGenerator.CodeGenerator.java", "BodyUseAPI": ["dk.aau.sw402F15.CodeGenerator.CodeGenerator.declareDecimal(node.getName().getText())", "dk.aau.sw402F15.CodeGenerator.ADeclaration.getName()", "node.getName().getText()", "dk.aau.sw402F15.CodeGenerator.CodeGenerator.declareAndAssignDecimal(node.getName().getText(),java.lang.String)", "node.getName().getText()", "dk.aau.sw402F15.CodeGenerator.ADeclaration.getName()"], "Fixed commit": "260747514a8b7d18825bd80b3dd9e849eb0bb779", "Url": "https://api.github.com/repos/sahb1239/PLC-", "Date": "2015-05-12T11:50:56Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getExpr()) != null) { declareAndAssignInt(node.getName().getText(), pop()); }else { declareInt(node.getName().getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6767/buggy-version/PLC++.src.dk.aau.sw402F15.CodeGenerator.CodeGenerator.java", "BodyUseAPI": ["node.getName().getText()", "dk.aau.sw402F15.CodeGenerator.CodeGenerator.declareAndAssignInt(node.getName().getText(),java.lang.String)", "dk.aau.sw402F15.CodeGenerator.ADeclaration.getName()", "node.getName().getText()", "dk.aau.sw402F15.CodeGenerator.CodeGenerator.declareInt(node.getName().getText())", "dk.aau.sw402F15.CodeGenerator.ADeclaration.getName()"], "Fixed commit": "260747514a8b7d18825bd80b3dd9e849eb0bb779", "Url": "https://api.github.com/repos/sahb1239/PLC-", "Date": "2015-05-12T11:50:56Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getExpr()) != null) { declareAndAssignBool(node.getName().getText(), pop()); }else { declareBool(node.getName().getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6767/buggy-version/PLC++.src.dk.aau.sw402F15.CodeGenerator.CodeGenerator.java", "BodyUseAPI": ["dk.aau.sw402F15.CodeGenerator.CodeGenerator.declareAndAssignBool(node.getName().getText(),java.lang.String)", "dk.aau.sw402F15.CodeGenerator.ADeclaration.getName()", "dk.aau.sw402F15.CodeGenerator.CodeGenerator.declareBool(node.getName().getText())", "node.getName().getText()", "node.getName().getText()", "dk.aau.sw402F15.CodeGenerator.ADeclaration.getName()"], "Fixed commit": "260747514a8b7d18825bd80b3dd9e849eb0bb779", "Url": "https://api.github.com/repos/sahb1239/PLC-", "Date": "2015-05-12T11:50:56Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getExpr()) != null) { declareAndAssignTimer(node.getName().getText(), pop()); }else { declareTimer(node.getName().getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6767/buggy-version/PLC++.src.dk.aau.sw402F15.CodeGenerator.CodeGenerator.java", "BodyUseAPI": ["node.getName().getText()", "dk.aau.sw402F15.CodeGenerator.ADeclaration.getName()", "dk.aau.sw402F15.CodeGenerator.ADeclaration.getName()", "dk.aau.sw402F15.CodeGenerator.CodeGenerator.declareAndAssignTimer(node.getName().getText(),java.lang.String)", "dk.aau.sw402F15.CodeGenerator.CodeGenerator.declareTimer(node.getName().getText())", "node.getName().getText()"], "Fixed commit": "260747514a8b7d18825bd80b3dd9e849eb0bb779", "Url": "https://api.github.com/repos/sahb1239/PLC-", "Date": "2015-05-12T11:50:56Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mThumbZone) == null) { setCheckedInClass(checked); }else { slideToChecked(checked); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2800/buggy-version/SwitchButton.src.com.kyleduo.switchbutton.SwitchButton.java", "BodyUseAPI": [], "Fixed commit": "0c71c49ab7018a7cc5888d8ecbd2a493cf5aa840", "Url": "https://api.github.com/repos/kyleduo/SwitchButton", "Date": "2014-11-10T13:24:43Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8198/buggy-version/workspace.Avalon.src.market.Market.java", "BodyUseAPI": [], "Fixed commit": "9306eeca839f54b031051656822599110f5166b1", "Url": "https://api.github.com/repos/Jobs92/Avalon", "Date": "2014-01-10T21:56:10Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((autoCommand) != null) { autoCommand.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7486/buggy-version/src.com.edinarobotics.zeppelin.Zeppelin.java", "BodyUseAPI": [], "Fixed commit": "79b971aab0160236330028c8e2f527c34baa50c4", "Url": "https://api.github.com/repos/TheGreenMachine/Zeppelin-Java", "Date": "2017-02-17T23:06:58Z"},
{"Line": "=>806", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (originalIdentifier.equals(\"\")) { fieldName = identifierName + \"[this]\"; }else { fieldName = ((identifierName + \"[\") + originalIdentifier) + \"]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1358/buggy-version/src.cager.jexpr.visitor.BoogieVisitor.java", "BodyUseAPI": [], "Fixed commit": "92a65bd6992526c8892c32f4769e23c032191ae3", "Url": "https://api.github.com/repos/ligianistor/Oprop", "Date": "2015-08-05T23:42:05Z"},
{"Line": "=>823", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (originalIdentifier.equals(\"\")) { statementContent = statementContent.substring(0, ((statementContent.length()) - 4)); }else { statementContent = statementContent.substring(0, ((statementContent.length()) - (originalIdentifier.length()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1358/buggy-version/src.cager.jexpr.visitor.BoogieVisitor.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "92a65bd6992526c8892c32f4769e23c032191ae3", "Url": "https://api.github.com/repos/ligianistor/Oprop", "Date": "2015-08-05T23:42:05Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((field.firstSentenceTags().length) == 1) { firstSentence = field.firstSentenceTags()[0].text(); }else if ((java.util.Arrays.stream(field.firstSentenceTags()).filter(( tag) -> !(\"Text\".equals(tag.name()))).count()) == 1) { firstSentence = ((((field.firstSentenceTags()[0].text()) + \"<code>\") + (field.firstSentenceTags()[1].text())) + \"</code>\") + (field.firstSentenceTags()[2].text()); }else { final java.util.List<com.sun.javadoc.Tag> tags = java.util.Arrays.asList(field.firstSentenceTags()); final java.lang.String joinedTags = tags.stream().map(com.sun.javadoc.Tag::toString).collect(java.util.stream.Collectors.joining(\"\\\", \\\"\", \"[\\\"\", \"\\\"]\")); final java.lang.String message = java.lang.String.format(java.util.Locale.ROOT, \"Should be only one tag for %s. Tags %s.\", field.toString(), joinedTags); throw new java.lang.IllegalArgumentException(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7370/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet.java", "BodyUseAPI": ["com.sun.javadoc.Tag.text()", "java.util.stream.Stream<com.sun.javadoc.Tag>.filter(java.util.function.Predicate<? super com.sun.javadoc.Tag>)", "com.sun.javadoc.FieldDoc.firstSentenceTags()", "java.lang.String.format(java.util.Locale,java.lang.String,java.lang.String,java.lang.String)", "com.sun.javadoc.Tag.text()", "com.sun.javadoc.Tag.text()", "com.sun.javadoc.FieldDoc.toString()", "com.sun.javadoc.FieldDoc.firstSentenceTags()", "java.util.stream.Stream<com.sun.javadoc.Tag>.count()", "com.sun.javadoc.FieldDoc.firstSentenceTags()", "com.sun.javadoc.FieldDoc.firstSentenceTags()", "com.sun.javadoc.FieldDoc.firstSentenceTags()", "java.util.Arrays.stream(com.sun.javadoc.Tag[])", "java.util.Arrays.asList(com.sun.javadoc.Tag[])", "com.sun.javadoc.FieldDoc.firstSentenceTags()", "com.sun.javadoc.Tag.text()"], "Fixed commit": "70786709d4f735b9123159a86a752789855af34a", "Url": "https://api.github.com/repos/kukreja-vikramaditya/checkstyle", "Date": "2017-08-21T20:35:25Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.equals(\"return\")) { id = Id_return; }else if (s.equals(\"true\")) { id = Id_true; }else { return Token.EOF; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/547/buggy-version/eece210_assn2.src.org.mozilla.javascript.TokenStream.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "a5dc35310e49687d773641b94b9423e5a6f5f9a8", "Url": "https://api.github.com/repos/g12-bd/eece210assignments", "Date": "2013-10-14T19:34:49Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tempStorage) != null) { tempStorage.addItem(winner, item); }else { winnerPlayer.getInventory().addItem(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5291/buggy-version/src.main.java.org.bitbucket.ucchy.reversi.game.VersusGameSession.java", "BodyUseAPI": [], "Fixed commit": "033f60ed12382b9dbf0c3c12e7ba854745beba78", "Url": "https://api.github.com/repos/ucchyocean/ReversiLab", "Date": "2016-08-13T14:53:06Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tempStorage) != null) { tempStorage.addItem(winner, item); }else { winnerPlayer.getInventory().addItem(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5291/buggy-version/src.main.java.org.bitbucket.ucchy.reversi.game.VersusGameSession.java", "BodyUseAPI": [], "Fixed commit": "033f60ed12382b9dbf0c3c12e7ba854745beba78", "Url": "https://api.github.com/repos/ucchyocean/ReversiLab", "Date": "2016-08-13T14:53:06Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bitbucket.ucchy.reversi.ReversiLabConfig.getRewardItem(org.bitbucket.ucchy.reversi.game.SingleGameDifficulty)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.getType()) != (org.bukkit.Material.AIR)) { if ((tempStorage) != null) { tempStorage.addItem(ownerName, item); }else { org.bukkit.entity.Player owner = org.bitbucket.ucchy.reversi.Utility.getPlayerExact(ownerName); if (owner != null) { owner.getInventory().addItem(item); } } sendInfoMessage(ownerName, org.bitbucket.ucchy.reversi.Messages.get(\"InformationRewardItemPaid\", new java.lang.String[]{ \"%material\", \"%amount\" }, new java.lang.String[]{ item.getType().toString(), (item.getAmount()) + \"\" })); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5291/buggy-version/src.main.java.org.bitbucket.ucchy.reversi.game.SingleGameSession.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.getType()", "owner.getInventory().addItem(org.bukkit.inventory.ItemStack)", "org.bitbucket.ucchy.reversi.game.TemporaryStorage.addItem(java.lang.String,org.bukkit.inventory.ItemStack)", "item.getType().toString()", "org.bitbucket.ucchy.reversi.game.SingleGameSession.sendInfoMessage(java.lang.String,org.bitbucket.ucchy.reversi.Messages.get(\"InformationRewardItemPaid\", new java.lang.String[]{ \"%material\", \"%amount\" }, new java.lang.String[]{ item.getType().toString(), (item.getAmount()) + \"\" }))", "org.bitbucket.ucchy.reversi.Messages.get(java.lang.String,java.lang.String[],java.lang.String[])", "org.bukkit.inventory.ItemStack.getAmount()"], "Fixed commit": "033f60ed12382b9dbf0c3c12e7ba854745beba78", "Url": "https://api.github.com/repos/ucchyocean/ReversiLab", "Date": "2016-08-13T14:53:06Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((offset + length) < (input.length)) { helper(input, (offset + length), tags); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3009/buggy-version/izettle-emv.src.main.java.com.izettle.tlv.TLVDecoder.java", "BodyUseAPI": ["com.izettle.tlv.TLVDecoder.helper(byte[],int,java.util.List<com.izettle.tlv.TLV>)"], "Fixed commit": "ff4968bcfaee66b9722da709f15469b409d16127", "Url": "https://api.github.com/repos/iZettle/izettle-toolbox", "Date": "2015-02-23T14:13:28Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.JELLY_BEAN_MR2)) { setLayerType(View.LAYER_TYPE_SOFTWARE, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/431/buggy-version/src.com.jasonsoft.simplevideoplayer.RoundedCornerImageView.java", "BodyUseAPI": [], "Fixed commit": "07468b419653a1748e85271176c58305a36fd3d8", "Url": "https://api.github.com/repos/jasonchuang/SimpleVideoPlayer", "Date": "2014-05-05T04:03:15Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((file.exists()) && (file.isFile())) { return file; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6625/buggy-version/src.main.java.org.pinae.pumbaa.util.FileUtils.java", "BodyUseAPI": [], "Fixed commit": "59d6304c591b9f2cc27f548c0e9d66678dd2a5bd", "Url": "https://api.github.com/repos/PinaeOS/pumbaa", "Date": "2016-10-20T15:28:57Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getFirstWeekOccurrence()) == (-1)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7753/buggy-version/src.com.timetable.android.EventPeriod.java", "BodyUseAPI": [], "Fixed commit": "9796b3aac894a481ccd4129db28374e5183524ee", "Url": "https://api.github.com/repos/kasis/Timetable", "Date": "2014-09-05T09:57:47Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(Constants.PREF_PROJECTNAME_KEY,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (currentProjectName == null) { currentProjectName = org.catrobat.catroid.utils.UtilFile.getProjectNames(new java.io.File(org.catrobat.catroid.common.Constants.DEFAULT_ROOT)).get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/339/buggy-version/catroid.src.org.catrobat.catroid.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "773041c243199baf9bb1d32a45c9387c8ac80bf2", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2013-07-17T13:58:13Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(windowDelayUnit)) { anomalyFunctionSpec.setWindowDelayUnit(java.util.concurrent.TimeUnit.valueOf(windowDelayUnit)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6291/buggy-version/thirdeye.thirdeye-pinot.src.main.java.com.linkedin.thirdeye.dashboard.resources.AnomalyResource.java", "BodyUseAPI": ["java.util.concurrent.TimeUnit.valueOf(java.lang.String)", "com.linkedin.thirdeye.datalayer.dto.AnomalyFunctionDTO.setWindowDelayUnit(java.util.concurrent.TimeUnit)"], "Fixed commit": "6b25a7c130dec1fb4f272da7bc895ef9a25cc78b", "Url": "https://api.github.com/repos/linkedin/pinot", "Date": "2017-08-11T22:40:11Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(windowDelay)) { anomalyFunctionSpec.setWindowDelay(java.lang.Integer.valueOf(windowDelay)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6291/buggy-version/thirdeye.thirdeye-pinot.src.main.java.com.linkedin.thirdeye.dashboard.resources.AnomalyResource.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)", "com.linkedin.thirdeye.datalayer.dto.AnomalyFunctionDTO.setWindowDelay(java.lang.Integer)"], "Fixed commit": "6b25a7c130dec1fb4f272da7bc895ef9a25cc78b", "Url": "https://api.github.com/repos/linkedin/pinot", "Date": "2017-08-11T22:40:11Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mytasks.parser.MyTasksParser.removeCommand(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((withoutComdType.trim().length()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/548/buggy-version/src.mytasks.parser.MyTasksParser.java", "BodyUseAPI": [], "Fixed commit": "abe307b34cc5c67d26254800ecfaa0fa344b8507", "Url": "https://api.github.com/repos/cs2103aug2014-w09-1j/main", "Date": "2014-10-26T01:34:10Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bdv.bigcat.control.IdPicker.getIdAtDisplayCoordinate(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (id != (bdv.labels.labelset.Label.TRANSPARENT)) assignment.detachFragment(id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/779/buggy-version/src.main.java.bdv.bigcat.control.MergeController.java", "BodyUseAPI": ["bdv.bigcat.FragmentSegmentAssignment.detachFragment(long)"], "Fixed commit": "118650ae7198a08649e3e0fe5160b26204730868", "Url": "https://api.github.com/repos/saalfeldlab/bigcat", "Date": "2016-05-11T15:01:37Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((skills) != null) { result.addAll(skills); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/57/buggy-version/android.src.main.java.com.hackthenorth.android.model.Mentor.java", "BodyUseAPI": [], "Fixed commit": "1334d53a3f2bcc228bc17b026971d5c70a7addf1", "Url": "https://api.github.com/repos/hackthenorth/hackthenorth-android", "Date": "2014-09-17T06:48:14Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.ebi.spot.biosamples.model.SearchRequest.getStart()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (searchStart > 0) { searchStart = searchStart - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6108/buggy-version/src.main.java.uk.ac.ebi.spot.biosamples.controller.SearchApiController.java", "BodyUseAPI": [], "Fixed commit": "bd2e7c04182582b057a043354b011b18acdf1e6a", "Url": "https://api.github.com/repos/EBIBioSamples/biosamples-web", "Date": "2016-04-12T14:29:24Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.candlepin.paging.Page.getPageRequest()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((page.getMaxRecords()) % (pageRequest.getPerPage())) != 0) { lastPage++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6862/buggy-version/src.main.java.org.candlepin.resteasy.interceptor.LinkHeaderPostInterceptor.java", "BodyUseAPI": [], "Fixed commit": "5c8a3344cb0e09a18d9b01b430b5c9ffd16c91fd", "Url": "https://api.github.com/repos/candlepin/candlepin", "Date": "2013-05-31T19:33:48Z"},
{"Line": "=>850", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.csstudio.autocomplete.ui.AutoCompleteUIPlugin.isRAP()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3046/buggy-version/core.plugins.org.csstudio.autocomplete.ui.src.org.csstudio.autocomplete.ui.content.ContentProposalPopup.java", "BodyUseAPI": [], "Fixed commit": "e0358b9b4e37faeaaedde52547cd8a95d1e15165", "Url": "https://api.github.com/repos/ControlSystemStudio/cs-studio", "Date": "2014-01-13T13:14:21Z"},
{"Line": "=>1123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.csstudio.autocomplete.ui.AutoCompleteUIPlugin.isRAP()) adjustTableBounds();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3046/buggy-version/core.plugins.org.csstudio.autocomplete.ui.src.org.csstudio.autocomplete.ui.content.ContentProposalPopup.java", "BodyUseAPI": [], "Fixed commit": "e0358b9b4e37faeaaedde52547cd8a95d1e15165", "Url": "https://api.github.com/repos/ControlSystemStudio/cs-studio", "Date": "2014-01-13T13:14:21Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (control.isDisposed()) { isOpened = false; return org.eclipse.jface.window.Window.CANCEL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3046/buggy-version/core.plugins.org.csstudio.autocomplete.ui.src.org.csstudio.autocomplete.ui.content.ContentHelperPopup.java", "BodyUseAPI": [], "Fixed commit": "e0358b9b4e37faeaaedde52547cd8a95d1e15165", "Url": "https://api.github.com/repos/ControlSystemStudio/cs-studio", "Date": "2014-01-13T13:14:21Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cursorAdapter) != null) { cursorAdapter.changeCursor(newCursor); cursorAdapter.notifyDataSetChanged(); }else { android.util.Log.d(TAG, \"cursorAdapter is null, skipping\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/147/buggy-version/src.ru.spb.cupchinolabs.androidlocator.ViewerListActivity.java", "BodyUseAPI": [], "Fixed commit": "3143ca8a7864d1ecf261bd87a0ffcb6d33cae49f", "Url": "https://api.github.com/repos/bob-the-dyer/android-locator", "Date": "2013-03-06T08:58:36Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (forceStartFetchNewUnreadBackgroundService) { if (org.qii.weiciyuan.support.settinghelper.SettingUtility.getEnableFetchMSG()) { org.qii.weiciyuan.othercomponent.AppNewMsgAlarm.startAlarm(context, true); }else { org.qii.weiciyuan.othercomponent.AppNewMsgAlarm.stopAlarm(context, false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2769/buggy-version/src.org.qii.weiciyuan.othercomponent.ConnectionChangeReceiver.java", "BodyUseAPI": [], "Fixed commit": "c6f57ed897dadd9a4f969a93cf3baa3870dbc406", "Url": "https://api.github.com/repos/Jewelzqiu/weiciyuan", "Date": "2014-06-12T12:22:59Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o instanceof com.github.jchat.client.gui.PublicPanel.User) { res = ((com.github.jchat.client.gui.PublicPanel.User) (o)).name.equals(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2914/buggy-version/src.com.github.jchat.client.gui.PublicPanel.java", "BodyUseAPI": [], "Fixed commit": "98d5462dfcb8ad686f3459c614ce508f24b6abc1", "Url": "https://api.github.com/repos/hefnrh/JChat", "Date": "2013-12-10T16:46:12Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB)) { task.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, channel); }else { task.execute(channel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3525/buggy-version/src.ch.citux.twitchdroid.data.worker.TDTaskManager.java", "BodyUseAPI": [], "Fixed commit": "b1f39f4f48250854d3560135058f782ae17a236e", "Url": "https://api.github.com/repos/CiTuX/TwitchDroid", "Date": "2013-02-15T11:48:04Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bluetoothAdapter) != null) { bluetoothAdapter.startLeScan(callback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6618/buggy-version/android.src.main.java.com.geniem.rnble.RNBLEModule.java", "BodyUseAPI": [], "Fixed commit": "ffb7de3b83421f6d80a6a87f69c62c2081235696", "Url": "https://api.github.com/repos/MPuhakka/react-native-ble", "Date": "2016-05-10T12:04:09Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bluetoothAdapter) != null) { bluetoothAdapter.stopLeScan(callback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6618/buggy-version/android.src.main.java.com.geniem.rnble.RNBLEModule.java", "BodyUseAPI": [], "Fixed commit": "ffb7de3b83421f6d80a6a87f69c62c2081235696", "Url": "https://api.github.com/repos/MPuhakka/react-native-ble", "Date": "2016-05-10T12:04:09Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((bin != null) && (0 <= (bin - (firstBin)))) && ((bin - (firstBin)) < (counts.length))) { (counts[(bin - (firstBin))])++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8415/buggy-version/nyc-taxi.nyctlc-format.src.main.java.mil.nga.giat.geowave.format.nyctlc.statistics.NYCTLCStatistics.java", "BodyUseAPI": [], "Fixed commit": "135be9acdb482013dae3898df02e38542b4c05ac", "Url": "https://api.github.com/repos/emacthecav/geowave-demos", "Date": "2016-07-12T18:50:06Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((resourceKey.getStatus()) == (com.github.benmanes.multiway.ResourceKey.Status.DEAD)) { resourceKey.removeFromTransferQueue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/893/buggy-version/src.main.java.com.github.benmanes.multiway.MultiwayPool.java", "BodyUseAPI": ["com.github.benmanes.multiway.ResourceKey<K>.removeFromTransferQueue()"], "Fixed commit": "ec630f683264a070bc427426852da02c09159d38", "Url": "https://api.github.com/repos/ben-manes/multiway-pool", "Date": "2013-07-06T23:16:22Z"},
{"Line": "=>550", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (windowOpen) { org.lwjgl.opengl.GL11.glClear(((org.lwjgl.opengl.GL11.GL_COLOR_BUFFER_BIT) | (org.lwjgl.opengl.GL11.GL_DEPTH_BUFFER_BIT))); render(); org.lwjgl.opengl.GL11.glFlush(); fpsBuf++; org.lwjgl.glfw.GLFW.glfwSwapBuffers(window); org.lwjgl.glfw.GLFW.glfwPollEvents(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1099/buggy-version/src.wrath.client.Game.java", "BodyUseAPI": [], "Fixed commit": "02923a6f6922785fc700963e0576090fc4bfe7d3", "Url": "https://api.github.com/repos/nixfanboy/WrathEngine", "Date": "2015-01-12T20:39:03Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.getFileName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (n == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5163/buggy-version/src.main.java.potaufeu.FileAttributeFormatter.java", "BodyUseAPI": [], "Fixed commit": "9379bc9f94fb33beda719b79d8b41b081f570549", "Url": "https://api.github.com/repos/argius/potaufeu", "Date": "2017-04-22T01:09:44Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.IPv4.getMaxSubNets()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((model.IPv4.menorPotenciaMaiorOuIgual(maxSubNets)) == (maxSubNets + 2)) limiteSuperior = maxSubNets; else { limiteSuperior = ((model.IPv4.menorPotenciaMaiorOuIgual(maxSubNets)) / 2) - 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3515/buggy-version/src.main.Main.java", "BodyUseAPI": ["model.IPv4.menorPotenciaMaiorOuIgual(java.lang.Integer)"], "Fixed commit": "ad0e2fa33879a3ef0d5ea3356279fd7b0e080659", "Url": "https://api.github.com/repos/eduardolagoeiro/ipcalc", "Date": "2017-11-29T23:07:55Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((initState) == (android.view.View.VISIBLE)) quick_repost.setVisibility(View.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4574/buggy-version/src.org.qii.weiciyuan.ui.actionmenu.RepostSingleChoiceModeListener.java", "BodyUseAPI": [], "Fixed commit": "6e5c43893fe0c7fcdd7dedfa5792f17b884b5a88", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-11T01:46:39Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((initState) == (android.view.View.VISIBLE)) quick_repost.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4574/buggy-version/src.org.qii.weiciyuan.ui.actionmenu.RepostSingleChoiceModeListener.java", "BodyUseAPI": [], "Fixed commit": "6e5c43893fe0c7fcdd7dedfa5792f17b884b5a88", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-11T01:46:39Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["resource.getModel().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fileNode.getType()) == (org.jboss.dmr.ModelType.UNDEFINED)) { file = null; }else if (((fileNode.getType()) == (org.jboss.dmr.ModelType.STRING)) || ((fileNode.getType()) == (org.jboss.dmr.ModelType.EXPRESSION))) { file = fileNode.asString(); }else { org.picketbox.jsmpolicy.subsystem.extension.ServerDefinition.log.error((\"Type of attributte file value is unexpected - \" + (fileNode.getType().toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/275/buggy-version/src.main.java.org.picketbox.jsmpolicy.subsystem.extension.ServerDefinition.java", "BodyUseAPI": ["org.jboss.logging.Logger.error((\"Type of attributte file value is unexpected - \" + (fileNode.getType().toString())))", "fileNode.getType().toString()", "org.jboss.dmr.ModelNode.getType()", "org.jboss.dmr.ModelNode.asString()", "org.jboss.dmr.ModelNode.getType()", "org.jboss.dmr.ModelNode.getType()"], "Fixed commit": "2a67dcba8889bb2989623301e55d8417d4606270", "Url": "https://api.github.com/repos/honza889/jsm-policy-subsystem", "Date": "2014-03-14T10:13:58Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (timeOffset >= 0) com.ai.paas.ipaas.i18n.ZoneContextHolder.setZone((\"GMT+\" + timeOffset)); else com.ai.paas.ipaas.i18n.ZoneContextHolder.setZone((\"GMT\" + timeOffset));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2977/buggy-version/src.main.java.com.ai.paas.ipaas.i18n.TimeZoneFilter.java", "BodyUseAPI": ["com.ai.paas.ipaas.i18n.ZoneContextHolder.setZone(java.lang.String)", "com.ai.paas.ipaas.i18n.ZoneContextHolder.setZone(java.lang.String)"], "Fixed commit": "2975240bbf3adc2bcdb650dc069b9891ff398208", "Url": "https://api.github.com/repos/AIPaaS/i18n-spring", "Date": "2016-11-16T07:03:24Z"},
{"Line": "=>669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<gr.uom.java.ast.decomposition.cfg.AbstractVariable>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((findRenamedVariableName1(variable1)) == null) { if ((variable2.getVariableType().equals(variable1.getVariableType())) && (!(sortedVariables2.contains(variable2)))) { sortedVariables2.add(variable2); found = true; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4234/buggy-version/src.gr.uom.java.ast.decomposition.cfg.mapping.PreconditionExaminer.java", "BodyUseAPI": ["gr.uom.java.ast.decomposition.cfg.AbstractVariable.getVariableType()", "variable2.getVariableType().equals(variable1.getVariableType())"], "Fixed commit": "acf19309afacf46cd83c7dc1f965c769ba263b60", "Url": "https://api.github.com/repos/tsantalis/JDeodorant", "Date": "2015-09-02T18:00:58Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getActivity().isFinishing())) { java.lang.String format = java.lang.String.format(getString(R.string.waiting_for_sms), (millisUntilFinished / 1000)); mProgressTime.setText(format); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4858/buggy-version/app.src.main.java.com.myrescribe.ui.fragments.EnterGeneratedOTP.java", "BodyUseAPI": [], "Fixed commit": "b81ba030448e5d2180b3553d92f7b31c74497ecd", "Url": "https://api.github.com/repos/sandeepbahalkar123/myrescribe_repo", "Date": "2017-06-08T12:58:23Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((g == null) || ((g.urlArticle) == null)) || (g.urlArticle.equals(\"\"))) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3239/buggy-version/src.com.chteuchteu.lesjoiesdusysadmin.Util.java", "BodyUseAPI": [], "Fixed commit": "c944b6a0532bba7518e28b3501cc5a27a523544b", "Url": "https://api.github.com/repos/chteuchteu/Les-Joies-du-Sysadmin", "Date": "2014-01-16T17:09:29Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Activity_Main.gifs.size()) == 0) { Activity_Main.gifs = null; startActivity(new android.content.Intent(this, com.chteuchteu.lesjoiesdusysadmin.Activity_Main.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3239/buggy-version/src.com.chteuchteu.lesjoiesdusysadmin.Activity_Gif.java", "BodyUseAPI": [], "Fixed commit": "c944b6a0532bba7518e28b3501cc5a27a523544b", "Url": "https://api.github.com/repos/chteuchteu/Les-Joies-du-Sysadmin", "Date": "2014-01-16T17:09:29Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((expFrom instanceof com.sun.source.tree.LiteralTree) && (expTo instanceof com.sun.source.tree.LiteralTree)) { com.sun.source.tree.LiteralTree literalFrom = ((com.sun.source.tree.LiteralTree) (expFrom)); com.sun.source.tree.LiteralTree literalTo = ((com.sun.source.tree.LiteralTree) (expTo)); if ((getIntLiteralValue(literalFrom)) > (getIntLiteralValue(literalTo))) { checker.report(org.checkerframework.framework.source.Result.failure(\"from.greater.than.to\"), node); return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5423/buggy-version/framework.src.org.checkerframework.common.value.ValueVisitor.java", "BodyUseAPI": [], "Fixed commit": "391cc86489a209bfb063017e4a8ad2fa22ba97b5", "Url": "https://api.github.com/repos/JasonMrX/checker-framework", "Date": "2017-03-21T03:45:58Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (simArch == (IOSSimulatorLaunchConfigurationDelegate.DEFAULT_ARCH)) { prefArchIndex = (availableArchs.size()) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8619/buggy-version/ui.src.org.robovm.eclipse.internal.IOSSimulatorLaunchConfigurationTabGroup.java", "BodyUseAPI": [], "Fixed commit": "5a1632c855c9fff17cf4b6d60c2752ac44908aef", "Url": "https://api.github.com/repos/robovm/robovm-eclipse", "Date": "2015-08-24T12:54:03Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((weekFragment) != null) { if ((weekFragment.getActivity()) != null) { weekFragment.getActivity().runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { android.util.Log.d(de.grau.organizer.fragments.EventWeekView.DEBUG_TAG, \"will draw horizon on UI Thread\"); currentTimeHorizon(); android.util.Log.d(de.grau.organizer.fragments.EventWeekView.DEBUG_TAG, \"drew horizon on UI Thread\"); } }); }else { android.util.Log.d(de.grau.organizer.fragments.EventWeekView.DEBUG_TAG, \"weekfragment is not null, but there is no parent activity\"); } }else { android.util.Log.d(de.grau.organizer.fragments.EventWeekView.DEBUG_TAG, \"weekfragment is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4003/buggy-version/app.src.main.java.de.grau.organizer.fragments.WeekFragment.java", "BodyUseAPI": [], "Fixed commit": "36b675fd598b864f35706df4218cd006e34cd0f9", "Url": "https://api.github.com/repos/Vierheller/Organizer", "Date": "2016-10-27T12:39:46Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(groupId.equals(Commons.INBOX_POSTS_ID))) { rating.setText(com.home.lepradroid.utils.Utils.getRatingStringFromBaseItem(comment)); com.home.lepradroid.utils.Utils.setTextViewFontSize(getContext(), rating); }else rating.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1311/buggy-version/LepraDroid.src.com.home.lepradroid.CommentsAdapter.java", "BodyUseAPI": [], "Fixed commit": "812a8c07b974986405dd7da0f67e6ce2c2ce91ec", "Url": "https://api.github.com/repos/NevRA/LepraDroid", "Date": "2012-04-08T06:58:41Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.home.lepradroid.CommentsAdapter.1.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(item.Author.equalsIgnoreCase(com.home.lepradroid.settings.SettingsWorker.Instance().loadUserName()))) && (!(groupId.equals(Commons.INBOX_POSTS_ID)))) { if (!(item.PlusVoted)) actions.add(com.home.lepradroid.utils.Utils.getString(R.string.CommentAction_Like)); if (!(item.MinusVoted)) actions.add(com.home.lepradroid.utils.Utils.getString(R.string.CommentAction_Dislike)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1311/buggy-version/LepraDroid.src.com.home.lepradroid.CommentsAdapter.java", "BodyUseAPI": [], "Fixed commit": "812a8c07b974986405dd7da0f67e6ce2c2ce91ec", "Url": "https://api.github.com/repos/NevRA/LepraDroid", "Date": "2012-04-08T06:58:41Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isDisabled()) || (isReadonly())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1319/buggy-version/src.main.java.net.bootsfaces.component.SelectBooleanCheckbox.java", "BodyUseAPI": [], "Fixed commit": "99e8450394ee1282160a6d4efa0fe831f06ae956", "Url": "https://api.github.com/repos/yersan/BootsFaces-OSP", "Date": "2015-06-20T12:45:42Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.microsoft.azure.management.resources.Subscription.subscriptionId()", "com.microsoft.azuretools.core.mvp.model.container.ContainerRegistryMvpModel.getContainerRegistryMap(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (registriesMap.containsKey(sid)) { java.util.ArrayList<com.microsoft.azuretools.core.mvp.ui.base.NodeContent> nodeContentList = new java.util.ArrayList<>(); for (com.microsoft.azure.management.containerregistry.Registry registry : registriesMap.get(sid)) { nodeContentList.add(new com.microsoft.azuretools.core.mvp.ui.base.NodeContent(registry.id(), registry.name(), \"\")); } nodeMap.put(sid, nodeContentList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7911/buggy-version/Utils.azure-explorer-common.src.com.microsoft.tooling.msservices.serviceexplorer.azure.container.ContainerRegistryModulePresenter.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<com.microsoft.azure.management.containerregistry.Registry>>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.ArrayList<com.microsoft.azuretools.core.mvp.ui.base.NodeContent>>.put(java.lang.String,java.util.ArrayList<com.microsoft.azuretools.core.mvp.ui.base.NodeContent>)"], "Fixed commit": "0593522fb46f67f9f40f47d19d421303d16acca6", "Url": "https://api.github.com/repos/jdneo/azure-tools-for-java", "Date": "2017-09-26T02:33:46Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (pRequirements == null) { de.tuilmenau.ics.fog.ui.Logging.log(this, ((((\"GET ROUTE from \\\"\" + pSource) + \"\\\" to \\\"\") + pDestination) + \"\\\"\")); }else { de.tuilmenau.ics.fog.ui.Logging.log(this, ((((((\"GET ROUTE from \\\"\" + pSource) + \"\\\" to \\\"\") + pDestination) + \"\\\" with requirements \\\"\") + (pRequirements.toString())) + \"\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5263/buggy-version/fog.src.de.tuilmenau.ics.fog.transfer.TransferPlane.java", "BodyUseAPI": ["de.tuilmenau.ics.fog.facade.Description.toString()", "de.tuilmenau.ics.fog.ui.Logging.log(de.tuilmenau.ics.fog.transfer.TransferPlane,((((((\"GET ROUTE from \\\"\" + pSource) + \"\\\" to \\\"\") + pDestination) + \"\\\" with requirements \\\"\") + (pRequirements.toString())) + \"\\\"\"))"], "Fixed commit": "23049b8836005d3ac375c49b2a0b8e89a1ce79b8", "Url": "https://api.github.com/repos/ICS-TU-Ilmenau/fog", "Date": "2014-01-01T20:42:14Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.onetwo.common.utils.StringUtils.isBlank(signRequest.getSignkey())) { throw new org.onetwo.common.exception.ServiceException(org.onetwo.common.utils.DataSigner.SignErrors.SIGNKEY_ERR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6430/buggy-version/core.modules.common.src.main.java.org.onetwo.common.utils.DataSigner.java", "BodyUseAPI": [], "Fixed commit": "d8e661cf13966c4b246184a5d1d83b81c5b279f7", "Url": "https://api.github.com/repos/wayshall/onetwo", "Date": "2017-11-20T10:32:06Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((signRequest.getTimestamp()) == null) { throw new org.onetwo.common.exception.ServiceException(org.onetwo.common.utils.DataSigner.SignErrors.TIMESTAMP_ERR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6430/buggy-version/core.modules.common.src.main.java.org.onetwo.common.utils.DataSigner.java", "BodyUseAPI": [], "Fixed commit": "d8e661cf13966c4b246184a5d1d83b81c5b279f7", "Url": "https://api.github.com/repos/wayshall/onetwo", "Date": "2017-11-20T10:32:06Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrContactEntry) != null) { outState.putSerializable(edu.pdx.ece558_fall15.alex_elizabeth.businesscardcontact.ContactDetailActivity.KEY_ENTRY_ID, mCurrContactEntry.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/9041/buggy-version/BusinessCardContact.app.src.main.java.edu.pdx.ece558_fall15.alex_elizabeth.businesscardcontact.ContactDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "eed3b81bde2f84b378ec059149bd18dea4d3b49b", "Url": "https://api.github.com/repos/andantecantabile/BusinessCardApp", "Date": "2015-12-07T03:28:09Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrContactEntry) != null) { onContactSelected(mCurrContactEntry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/9041/buggy-version/BusinessCardContact.app.src.main.java.edu.pdx.ece558_fall15.alex_elizabeth.businesscardcontact.ContactListActivity.java", "BodyUseAPI": [], "Fixed commit": "eed3b81bde2f84b378ec059149bd18dea4d3b49b", "Url": "https://api.github.com/repos/andantecantabile/BusinessCardApp", "Date": "2015-12-07T03:28:09Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTempContactEntry) != null) { if (mTempContactEntry.getId().equals(id)) { return mTempContactEntry; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/9041/buggy-version/BusinessCardContact.app.src.main.java.edu.pdx.ece558_fall15.alex_elizabeth.businesscardcontact.ContactStore.java", "BodyUseAPI": [], "Fixed commit": "eed3b81bde2f84b378ec059149bd18dea4d3b49b", "Url": "https://api.github.com/repos/andantecantabile/BusinessCardApp", "Date": "2015-12-07T03:28:09Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.round(float)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(motionx(colliding, java.lang.Math.signum(preferredx)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/9157/buggy-version/CodenameG.src.edu.chl.codenameg.model.World.java", "BodyUseAPI": [], "Fixed commit": "06c82194d8fdad1f407b7e343e8bd1e20dc6719c", "Url": "https://api.github.com/repos/simphax/CodenameG", "Date": "2012-03-31T12:04:28Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAIR) { com.spilgames.spilsdk.utils.permissions.air.AIRPermissionActivity.closeActivity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7818/buggy-version/spilsdk.src.main.java.com.spilgames.spilsdk.utils.permissions.PermissionUtil.java", "BodyUseAPI": [], "Fixed commit": "08d9e53fa7628179c557d76fc958f13739759d97", "Url": "https://api.github.com/repos/spilgames/spil-android-sdk", "Date": "2017-03-13T08:57:00Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.IndexerRegistry.nullSafeGetIndexer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (indexer.isPermissionAware()) { indexer.reindex(resourceName, com.liferay.portal.kernel.util.GetterUtil.getLong(resourceClassPK)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/9051/buggy-version/modules.portal.portal-search.src.main.java.com.liferay.portal.search.internal.SearchPermissionCheckerImpl.java", "BodyUseAPI": ["com.liferay.portal.kernel.search.Indexer<?>.reindex(java.lang.String,com.liferay.portal.kernel.util.GetterUtil.getLong(resourceClassPK))"], "Fixed commit": "2bf234f3996c58e699ebfe5d1c851558fdd532fb", "Url": "https://api.github.com/repos/Preston-Crary/liferay-portal", "Date": "2015-11-12T22:46:25Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((photoUrl) != null) { com.squareup.picasso.Picasso.with(getActivity()).load(com.demo.twitterclient.utils.Utils.getBiggerBackground(photoUrl)).into(photoView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5711/buggy-version/app.src.main.java.com.demo.twitterclient.user.ImageViewFragment.java", "BodyUseAPI": [], "Fixed commit": "b6bf0f7d4ce5ae7c51630e77db100c5fe59fd30f", "Url": "https://api.github.com/repos/nourabuelwafaa/TwitterClient", "Date": "2017-12-28T21:10:09Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (prioritySortedJobList.get(i).isInQueue()) { prioritySortedJobList.get(i).setTotalWaiting(((prioritySortedJobList.get(i).getTotalWaiting()) + 1)); totalJobWaiting += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1596/buggy-version/Symulator.src.FlowShopModel.MyFlowShopModel.java", "BodyUseAPI": ["prioritySortedJobList.get(i).getTotalWaiting()", "java.util.LinkedList<FlowShopModel.Job>.get(int)", "java.util.LinkedList<FlowShopModel.Job>.get(int)", "prioritySortedJobList.get(i).setTotalWaiting(((prioritySortedJobList.get(i).getTotalWaiting()) + 1))"], "Fixed commit": "5a7878b65ef9101091e69a901f86c7674d4f315a", "Url": "https://api.github.com/repos/Krecik94/symulator_systemow_obslugi", "Date": "2017-08-26T01:10:40Z"},
{"Line": "=>742", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Utils.StringToInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (armiesToUse <= (freeArmies)) { if (armiesToUse > 0) { provinces[i].addToEntities(armiesToUse); freeArmies = (freeArmies) - armiesToUse; javax.swing.JOptionPane.showMessageDialog(null, ((\"Einheiten erfolgreich gesetzt, Kommandant \" + (getPlayerName())) + \".\")); } if (armiesToUse < 0) { javax.swing.JOptionPane.showMessageDialog(null, \"Willst du mich verarschen?\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3339/buggy-version/GeneralMap.java", "BodyUseAPI": ["provinces[i].addToEntities(int)"], "Fixed commit": "95d8f8e6b61afbd8bb9947fff57ce05a8cc47e81", "Url": "https://api.github.com/repos/HGE-IT-Course-2016/zweiundvierzig", "Date": "2016-07-04T16:49:15Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url.endsWith(\".zip\")) { filename += \"zip\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/9025/buggy-version/src.com.quran.labs.androidquran.ui.TranslationManagerActivity.java", "BodyUseAPI": [], "Fixed commit": "1e07f083209eb6c78a35ff40387a06c88604720b", "Url": "https://api.github.com/repos/ahmedre/quran_android", "Date": "2012-07-16T00:33:54Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gamepad1.x) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5181/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.BasicOpModeAsher_Iterative.java", "BodyUseAPI": [], "Fixed commit": "13e9343a698bbf877ec2774c2c1c6631a9fdd626", "Url": "https://api.github.com/repos/IfSpace/ftc_app", "Date": "2017-11-01T22:31:43Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.yellowpages.control.YellowpagesSessionController.setContactUserSelected()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userSelected) { request.setAttribute(\"Profile\", flag); destination = manageContact(\"ContactNewFromUser\", request, scc); }else { destination = getDestination(\"ContactNew\", scc, request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/930/buggy-version/yellowpages.yellowpages-war.src.main.java.com.stratelia.webactiv.yellowpages.servlets.YellowpagesRequestRouter.java", "BodyUseAPI": [], "Fixed commit": "d67b9c6b4d6749973f123e5da336f07b143e0217", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Components", "Date": "2015-11-16T23:28:45Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.lanternpowered.launch.console.ConsoleLaunch.getReader()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (reader == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2495/buggy-version/src.main.java.org.lanternpowered.server.console.ConsoleManager.java", "BodyUseAPI": [], "Fixed commit": "0dbb62e42799301318f146565259de018c396ef3", "Url": "https://api.github.com/repos/LanternPowered/LanternServer", "Date": "2016-01-06T17:06:27Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xcompwiz.lookingglass.client.proxyworld.ProxyWorldManager.getProxyworld(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((proxyworld.provider.dimensionId) == (net.minecraft.client.Minecraft.getMinecraft().thePlayer.dimension)) { proxyworld.removeWorldAccess(view.getRenderGlobal()); }else if ((proxyworld.provider.dimensionId) != (net.minecraft.client.Minecraft.getMinecraft().thePlayer.dimension)) { proxyworld.removeWorldAccess(view.getRenderGlobal()); proxyworld.addWorldAccess(view.getRenderGlobal()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3103/buggy-version/src.main.java.com.xcompwiz.lookingglass.client.proxyworld.ProxyWorldManager.java", "BodyUseAPI": ["net.minecraft.client.multiplayer.WorldClient.addWorldAccess(view.getRenderGlobal())", "net.minecraft.client.multiplayer.WorldClient.removeWorldAccess(view.getRenderGlobal())", "net.minecraft.client.multiplayer.WorldClient.removeWorldAccess(view.getRenderGlobal())"], "Fixed commit": "bbc7aa5efafdae7fd8f92e554d74d650f6fabf2d", "Url": "https://api.github.com/repos/Geforce132/LookingGlass", "Date": "2016-08-08T05:36:00Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((alias != null) && (value.getClass().isEnum())) { stat.appendSQL(\"?\"); addParameter(stat, alias, value); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/871/buggy-version/src.com.iciql.Query.java", "BodyUseAPI": ["com.iciql.Query<T>.addParameter(com.iciql.SQLStatement,java.lang.Object,java.lang.Object)"], "Fixed commit": "d5a74dcac41eeb96a656b7033e43d51b92f75d18", "Url": "https://api.github.com/repos/gitblit/iciql", "Date": "2011-08-08T16:03:10Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i + toAdvance) <= (is.length())) { java.lang.String fullEscape = is.substring(i, (i + toAdvance)); appendUnicodeEscapedCodePoint(org.antlr.v4.misc.CharSupport.getCharValueFromCharInGrammarLiteral(fullEscape), sb); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/823/buggy-version/tool.src.org.antlr.v4.codegen.Target.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "f858cd594898e9a42b50dedbc5588e2d2a362b61", "Url": "https://api.github.com/repos/antlr/antlr4", "Date": "2017-04-06T21:34:37Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isResultsListDirty)) { loadInitialArtists(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1017/buggy-version/app.src.main.java.com.gmail.ivamsantos.spotifystreamer.MainActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "2d5db8b4f75f4cc6d6fec78c3d7f259bdfec9ead", "Url": "https://api.github.com/repos/ivamluz/iluz-udacity-android-nanodegree-spotify-streamer", "Date": "2015-06-24T02:16:32Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ranks == 4099) { isStraight = true; ranks = 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4348/buggy-version/src.cfr.trainer.games.poker.hand_evaluators.SmallHandEvaluator.java", "BodyUseAPI": [], "Fixed commit": "d3e26aa5318f660e9a2dbff02fb7850c8e4c9aa4", "Url": "https://api.github.com/repos/fennJam/CFRSmallPokerTrainer", "Date": "2017-05-30T07:26:13Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addToResult) { if (result == null) { result = env; }else { result.add(env); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3826/buggy-version/modules.display.geotk-render.src.main.java.org.geotoolkit.map.DefaultMapContext.java", "BodyUseAPI": [], "Fixed commit": "0f89d96ae9b5ebf677bdfe612036cca5e3dc86dc", "Url": "https://api.github.com/repos/Geomatys/geotoolkit", "Date": "2015-02-11T14:08:41Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((sourceCrs != null) && ((crs) != null)) && (!(org.geotoolkit.referencing.CRS.equalsIgnoreMetadata(sourceCrs, crs)))) { try { env = new org.apache.sis.geometry.GeneralEnvelope(org.geotoolkit.referencing.CRS.transform(env, crs)); addToResult = true; } catch (org.opengis.referencing.operation.TransformException e) { org.geotoolkit.map.LOGGER.log(java.util.logging.Level.WARNING, \"Data source and map context coordinate system differ, yet it was not possible to get a projected bounds estimate...\", e); } }else { addToResult = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3826/buggy-version/modules.display.geotk-render.src.main.java.org.geotoolkit.map.DefaultMapContext.java", "BodyUseAPI": ["org.geotoolkit.referencing.CRS.transform(org.apache.sis.geometry.GeneralEnvelope,org.opengis.referencing.crs.CoordinateReferenceSystem)"], "Fixed commit": "0f89d96ae9b5ebf677bdfe612036cca5e3dc86dc", "Url": "https://api.github.com/repos/Geomatys/geotoolkit", "Date": "2015-02-11T14:08:41Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(page.isDisposed())) { page.layout(new org.eclipse.swt.widgets.Control[]{ tv.getControl() }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3867/buggy-version/plugins.org.springframework.ide.eclipse.boot.dash.src.org.springframework.ide.eclipse.boot.dash.views.RequestMappingsSection.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Composite.layout(org.eclipse.swt.widgets.Control[])"], "Fixed commit": "eb8f7ff9a3aff9472f04743d1aa7823a11b03c83", "Url": "https://api.github.com/repos/spring-projects/spring-ide", "Date": "2015-06-26T16:26:30Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["T.getComponent()", "br.uff.midiacom.ana.datatype.ncl.interfaces.NCLMappingPrototype<T, P, I, En, Ei>.getComponent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((thisComp != null) && (otherComp != null)) comp &= thisComp.compare(otherComp); else comp &= !((thisComp != null) || (otherComp != null));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/291/buggy-version/src.br.uff.midiacom.ana.datatype.ncl.interfaces.NCLMappingPrototype.java", "BodyUseAPI": ["En.compare(En)"], "Fixed commit": "8a107316dbbe1fd4a6fd820f165a0e47641792ee", "Url": "https://api.github.com/repos/joeldossantos/aNa", "Date": "2011-11-11T18:15:07Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["T.getInterface()", "br.uff.midiacom.ana.datatype.ncl.interfaces.NCLMappingPrototype<T, P, I, En, Ei>.getInterface()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((thisInt != null) && (otherInt != null)) comp &= thisInt.compare(otherInt); else comp &= !((thisInt != null) || (otherInt != null));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/291/buggy-version/src.br.uff.midiacom.ana.datatype.ncl.interfaces.NCLMappingPrototype.java", "BodyUseAPI": ["Ei.compare(Ei)"], "Fixed commit": "8a107316dbbe1fd4a6fd820f165a0e47641792ee", "Url": "https://api.github.com/repos/joeldossantos/aNa", "Date": "2011-11-11T18:15:07Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Hashtable<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (msg == null) { solace.util.Log.error(java.lang.String.format(\"Unable to load message with name: %s\", name)); return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3473/buggy-version/solace.util.Message.java", "BodyUseAPI": [], "Fixed commit": "e46a8afa683006514ca5cd526b30e588ec140a1f", "Url": "https://api.github.com/repos/rsandor/Solace", "Date": "2017-07-07T07:24:12Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(var1 instanceof net.minecraft.entity.EntityLiving)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6157/buggy-version/src.main.java.net.aetherteam.aether.entities.bosses.EntitySliderHostMimic.java", "BodyUseAPI": [], "Fixed commit": "48887288880830667f5bef7d7eeb1e57cb7e3454", "Url": "https://api.github.com/repos/WhiteGems/AE2", "Date": "2013-06-13T03:22:56Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tracks) != null) { for (com.awaker.data.TrackWrapper track : tracks) { idList.add(track.getId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5390/buggy-version/src.com.awaker.audio.PlayList.java", "BodyUseAPI": [], "Fixed commit": "14ac27dffb92a0ff026a68d6625be32b254c99bb", "Url": "https://api.github.com/repos/caleron/awaker", "Date": "2016-09-27T11:06:11Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskSentence.punctuation) != (nars.io.Symbols.JUDGMENT_MARK)) { nars.inference.RuleTables.conditionalDedIndWithVar(((nars.language.Implication) (beliefTerm)), bIndex, ((nars.language.Statement) (taskTerm)), tIndex, nal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2540/buggy-version/nars_java.nars.inference.RuleTables.java", "BodyUseAPI": [], "Fixed commit": "534c3fbb8b96723f75c7cc753eea851099f101e2", "Url": "https://api.github.com/repos/opennars/opennars", "Date": "2014-11-10T18:09:18Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!replacedTempText) { newLineList.add(newLine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6326/buggy-version/src.com.github.erozabesu.yplkart.ConfigManager.java", "BodyUseAPI": [], "Fixed commit": "c15aaeb58028d4e482e792ed76c27cebca5ff78c", "Url": "https://api.github.com/repos/qpwakaba/YPLKart", "Date": "2015-08-17T15:29:40Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tch.gui.page.modal.GatewayModal.readProp(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == verLBLName) verLBLName = \"Firmware Version\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/994/buggy-version/java.autowork.genericGUI.src.main.java.com.tch.gui.page.modal.GatewayModal.java", "BodyUseAPI": [], "Fixed commit": "d18e45b9a4f785a823439fc9b50dd8e9d9471879", "Url": "https://api.github.com/repos/zach2014/autoware", "Date": "2015-06-23T05:45:40Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mAuth.getCurrentUser()) != null) { mAuth.getCurrentUser().updatePassword(confirmPassword); }else { mAuth.createUserWithEmailAndPassword(email, password).addOnCompleteListener(this, new com.google.android.gms.tasks.OnCompleteListener<com.google.firebase.auth.AuthResult>() { @java.lang.Override public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult> task) { mAuthProgressDialog.dismiss(); if (!(task.isSuccessful())) { android.widget.Toast.makeText(com.gatech.edu.soloTechno.m4_login.RegisterActivity.this, (\"Authentication failed.\" + (task.getException())), Toast.LENGTH_SHORT).show(); }else { android.util.Log.d(com.gatech.edu.soloTechno.m4_login.RegisterActivity.TAG, \"Authentication successful\"); createFirebaseUserProfile(task.getResult().getUser()); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1811/buggy-version/M4-Login.app.src.main.java.com.gatech.edu.soloTechno.m4_login.RegisterActivity.java", "BodyUseAPI": ["com.google.firebase.auth.FirebaseAuth.createUserWithEmailAndPassword(java.lang.String,java.lang.String)", "mAuth.createUserWithEmailAndPassword(email, password).addOnCompleteListener(com.gatech.edu.soloTechno.m4_login.RegisterActivity,com.google.android.gms.tasks.OnCompleteListener<com.google.firebase.auth.AuthResult>)", "com.google.firebase.auth.FirebaseAuth.getCurrentUser()", "mAuth.getCurrentUser().updatePassword(java.lang.String)"], "Fixed commit": "1e2812d709c015c7147eeea4ea64340223e88740", "Url": "https://api.github.com/repos/SoloTechno/SoloWater", "Date": "2017-02-28T16:36:16Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.NetworkInterface.getNetworkInterfaces()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (interfaces == null) { nis = java.util.Collections.emptyList(); }else { nis = java.util.Collections.list(java.net.NetworkInterface.getNetworkInterfaces()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2697/buggy-version/apollo-core.src.main.java.com.ctrip.framework.foundation.internals.NetworkInterfaceManager.java", "BodyUseAPI": [], "Fixed commit": "dc38354f6f3bedab224d97c0084b997a5bdf498f", "Url": "https://api.github.com/repos/YoungHu/apollo", "Date": "2017-04-20T05:34:51Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (local != null) { m_local = local; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2697/buggy-version/apollo-core.src.main.java.com.ctrip.framework.foundation.internals.NetworkInterfaceManager.java", "BodyUseAPI": [], "Fixed commit": "dc38354f6f3bedab224d97c0084b997a5bdf498f", "Url": "https://api.github.com/repos/YoungHu/apollo", "Date": "2017-04-20T05:34:51Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((footerHeight) < (at.tugraz.ist.catroid.utils.Utils.getPhysicalPixels(70, context))) { footerHeight = at.tugraz.ist.catroid.utils.Utils.getPhysicalPixels(20, context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6641/buggy-version/catroid.src.at.tugraz.ist.catroid.ui.adapter.BrickAdapter.java", "BodyUseAPI": ["at.tugraz.ist.catroid.utils.Utils.getPhysicalPixels(int,android.content.Context)"], "Fixed commit": "197f6c5b9232fe61e27785eab191b34b6bd8449e", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2012-08-14T22:06:34Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pointLoader.getPoints()) != null) storage.insertPoints(pointLoader.getPoints(), pointLoader.getName()); else pointLoader.loadFromStorage(storage);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7147/buggy-version/RoadSigns.src.main.java.org.fruct.oss.ikm.poi.PointsManager.java", "BodyUseAPI": ["org.fruct.oss.ikm.poi.PointsStorage.insertPoints(pointLoader.getPoints(),pointLoader.getName())", "org.fruct.oss.ikm.poi.PointLoader.getPoints()", "org.fruct.oss.ikm.poi.PointLoader.getName()", "org.fruct.oss.ikm.poi.PointLoader.loadFromStorage(org.fruct.oss.ikm.poi.PointsStorage)"], "Fixed commit": "7a852657360ae8a76eae218ed423cfbf817f7aa9", "Url": "https://api.github.com/repos/oss-fruct-org/roadsigns", "Date": "2014-02-18T13:04:11Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fruct.oss.ikm.poi.PointLoader.getPoints()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (newPoints != null) addPoints(newPoints);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7147/buggy-version/RoadSigns.src.main.java.org.fruct.oss.ikm.poi.PointsManager.java", "BodyUseAPI": ["org.fruct.oss.ikm.poi.PointsManager.addPoints(java.util.List<org.fruct.oss.ikm.poi.PointDesc>)"], "Fixed commit": "7a852657360ae8a76eae218ed423cfbf817f7aa9", "Url": "https://api.github.com/repos/oss-fruct-org/roadsigns", "Date": "2014-02-18T13:04:11Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((event.getActionMasked()) == (android.view.MotionEvent.ACTION_MOVE)) && (this.isEnabled())) && (mHover)) { mDownX = event.getX(); mDownY = event.getY(); if (mAnimationIsCancel = !(mRect.contains(((getLeft()) + ((int) (event.getX()))), ((getTop()) + ((int) (event.getY())))))) { setRadius(0); }else { setRadius(dp(50)); } if (!superResult) { return true; } }else if ((((event.getActionMasked()) == (android.view.MotionEvent.ACTION_UP)) && (!(mAnimationIsCancel))) && (this.isEnabled())) { mDownX = event.getX(); mDownY = event.getY(); final float tempRadius = ((float) (java.lang.Math.sqrt((((mDownX) * (mDownX)) + ((mDownY) * (mDownY)))))); float targetRadius = java.lang.Math.max(tempRadius, mMaxRadius); if (mIsAnimating) { mRadiusAnimator.cancel(); } mRadiusAnimator = com.nineoldandroids.animation.ObjectAnimator.ofFloat(this, \"radius\", dp(50), targetRadius); mRadiusAnimator.setDuration(500); mRadiusAnimator.setInterpolator(new android.view.animation.AccelerateDecelerateInterpolator()); mRadiusAnimator.addListener(new com.nineoldandroids.animation.Animator.AnimatorListener() { @java.lang.Override public void onAnimationStart(com.nineoldandroids.animation.Animator animator) { mIsAnimating = true; } @java.lang.Override public void onAnimationEnd(com.nineoldandroids.animation.Animator animator) { setRadius(0); com.nineoldandroids.view.ViewHelper.setAlpha(com.indris.material.RippleView.this, 1); mIsAnimating = false; } @java.lang.Override public void onAnimationCancel(com.nineoldandroids.animation.Animator animator) { } @java.lang.Override public void onAnimationRepeat(com.nineoldandroids.animation.Animator animator) { } }); mRadiusAnimator.start(); if (!superResult) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8505/buggy-version/RippleView.src.com.indris.material.RippleView.java", "BodyUseAPI": ["android.view.MotionEvent.getY()", "android.view.MotionEvent.getY()", "android.view.MotionEvent.getX()", "android.view.MotionEvent.getActionMasked()", "android.view.MotionEvent.getX()", "android.view.MotionEvent.getX()", "android.view.MotionEvent.getY()", "com.indris.material.Rect.contains(((getLeft()) + ((int) (event.getX()))),((getTop()) + ((int) (event.getY()))))"], "Fixed commit": "68a65c1379904f2b05d3cf294bf107b8dd749ac6", "Url": "https://api.github.com/repos/hczhang/RippleView", "Date": "2015-05-20T23:56:00Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addSeparator) { result.append(\", \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1136/buggy-version/moxy-compiler.src.main.java.com.arellomobile.mvp.compiler.AnnotationRule.java", "BodyUseAPI": [], "Fixed commit": "e3c2ac567ea9202e7226b900d1b280869c0f138c", "Url": "https://api.github.com/repos/Arello-Mobile/Moxy", "Date": "2016-02-20T09:32:20Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (currentOpening)) { throw new iago.history.UnexploredException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1861/buggy-version/org.nelfin.othello.src.iago.history.OpeningBook.java", "BodyUseAPI": [], "Fixed commit": "5faed604fe7dd34c6a8ac96e37e060a08c938ea6", "Url": "https://api.github.com/repos/nelfin/othello", "Date": "2012-05-28T13:44:02Z"},
{"Line": "=>1118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((searchQuery.getSourceFilter()) != null) { com.github.vanroy.springdata.jest.SourceFilter sourceFilter = searchQuery.getSourceFilter(); searchSourceBuilder.fetchSource(sourceFilter.getIncludes(), sourceFilter.getExcludes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1338/buggy-version/spring-data-jest.src.main.java.com.github.vanroy.springdata.jest.JestElasticsearchTemplate.java", "BodyUseAPI": ["com.github.vanroy.springdata.jest.SearchQuery.getSourceFilter()"], "Fixed commit": "368e75becff3dd2a512679f93257abcda8f3fa92", "Url": "https://api.github.com/repos/igelbox/spring-data-jest", "Date": "2016-11-21T23:03:44Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fluidTankInfo == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8534/buggy-version/src.vswe.stevesfactory.components.CommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "0db7ac2ef14e0d4592629c92c967328dbd6ef920", "Url": "https://api.github.com/repos/Vswe/ModJam3", "Date": "2014-01-08T19:37:00Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tank.getTank().getTankInfo(net.minecraftforge.common.ForgeDirection.VALID_DIRECTIONS[side])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (currentTankInfos == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8534/buggy-version/src.vswe.stevesfactory.components.CommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "0db7ac2ef14e0d4592629c92c967328dbd6ef920", "Url": "https://api.github.com/repos/Vswe/ModJam3", "Date": "2014-01-08T19:37:00Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstCommandExecution) { updateInventories(); firstCommandExecution = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8534/buggy-version/src.vswe.stevesfactory.blocks.TileEntityManager.java", "BodyUseAPI": [], "Fixed commit": "0db7ac2ef14e0d4592629c92c967328dbd6ef920", "Url": "https://api.github.com/repos/Vswe/ModJam3", "Date": "2014-01-08T19:37:00Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.firebase.client.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (game.getStarted()) { gameCodeTextInputLayout.setError(getString(R.string.error_game_is_started)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/485/buggy-version/app.src.main.java.com.tjuesyv.tjuesyv.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7e12a9e425b1e3bdf0af15dcf575d7ef49f2e986", "Url": "https://api.github.com/repos/xenondice/tdt4240-project", "Date": "2016-04-08T13:54:32Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me) != null) { com.vnguyen.liveokeremote.data.LiveOkeRemoteBroadcastMsg bcMsg = new com.vnguyen.liveokeremote.data.LiveOkeRemoteBroadcastMsg(\"Hi\", getResources().getString(R.string.app_name), me.name); if ((liveOkeUDPClient) != null) { liveOkeUDPClient.sendMessage(new com.google.gson.Gson().toJson(bcMsg), null, UDPListenerService.BROADCAST_PORT); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4791/buggy-version/app.src.main.java.com.vnguyen.liveokeremote.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c531f50fbf0bae67ecf8240fe28af8ac9e04a3ed", "Url": "https://api.github.com/repos/vnguyen972/LiveOkeRemote", "Date": "2015-02-05T02:28:37Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (includeSecurity) { values[i][1] = ((portfolioComponent.getSecond()) != null) ? com.opengamma.language.ValueUtils.of(portfolioComponent.getSecond()) : new com.opengamma.language.Value(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/208/buggy-version/projects.OG-Language.Client.src.com.opengamma.language.identifier.PortfolioComponentIdentifiersFunction.java", "BodyUseAPI": [], "Fixed commit": "f5e80578c6d5190a369f52bbb4e4f92ac0b49716", "Url": "https://api.github.com/repos/OpenGamma/OG-Platform", "Date": "2011-09-12T14:04:45Z"},
{"Line": "=>1142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!contains) { siteNodeChildrenVOList.add(siteNode.getValueObject()); java.lang.String siteNodeCacheKey = \"\" + (siteNode.getValueObject().getId()); org.infoglue.deliver.util.CacheController.cacheObjectInAdvancedCache(\"siteNodeCache\", siteNodeCacheKey, siteNode.getValueObject()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8076/buggy-version/src.java.org.infoglue.cms.controllers.kernel.impl.simple.SiteNodeController.java", "BodyUseAPI": [], "Fixed commit": "b02ad17547f507122b04cb7aea6741dba69a8174", "Url": "https://api.github.com/repos/johandahlgren/infoglue", "Date": "2012-11-06T10:41:39Z"},
{"Line": "=>838", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opensourcephysics.tools.LibraryBrowser.getTabIndexFromPath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n == (tabbedPane.getSelectedIndex())) { java.lang.String tabname = (\" '\" + title) + \"'\"; closeItem.setText(((org.opensourcephysics.tools.ToolsRes.getString(\"LibraryBrowser.MenuItem.CloseTab\")) + tabname)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6581/buggy-version/src.org.opensourcephysics.tools.LibraryBrowser.java", "BodyUseAPI": [], "Fixed commit": "c6ad16b7dffa381b054a156e47d5282b0a77b0e4", "Url": "https://api.github.com/repos/fschuett/osp", "Date": "2014-02-27T03:37:11Z"},
{"Line": "=>1565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opensourcephysics.tools.LibraryBrowser.37.getTabIndexFromPath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (i > (-1)) { tabbedPane.setSelectedIndex(i); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6581/buggy-version/src.org.opensourcephysics.tools.LibraryBrowser.java", "BodyUseAPI": ["javax.swing.JTabbedPane.setSelectedIndex(int)"], "Fixed commit": "c6ad16b7dffa381b054a156e47d5282b0a77b0e4", "Url": "https://api.github.com/repos/fschuett/osp", "Date": "2014-02-27T03:37:11Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (threadActive) { mt.kill(); threadActive = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7467/buggy-version/src.main.java.website.frontrow.util.MusicPlayer.java", "BodyUseAPI": [], "Fixed commit": "235ea3d0c6b14d7474f50c6cbd2bee676db54e22", "Url": "https://api.github.com/repos/lkroesen/BubbleBobble", "Date": "2015-09-12T10:57:18Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i != (objects[i][j].start_position.x)) || (j != (objects[i][j].start_position.y))) { movePlayer((i + 1), j, hamburg.haw.polyshift.Game.Simulation.RIGHT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6528/buggy-version/app.src.main.java.hamburg.haw.polyshift.Game.Simulation.java", "BodyUseAPI": ["hamburg.haw.polyshift.Game.Simulation.movePlayer(int,int,java.lang.String)"], "Fixed commit": "2527352af69387554ef88429c883a5505aeddfb7", "Url": "https://api.github.com/repos/AndreasHelms/Polyshift", "Date": "2015-05-18T12:55:04Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((predictCollision(i, j, hamburg.haw.polyshift.Game.Simulation.RIGHT)) && (objects[i][j].lastState.equals(hamburg.haw.polyshift.Game.Simulation.RIGHT))) || ((predictCollision(i, j, hamburg.haw.polyshift.Game.Simulation.LEFT)) && (objects[i][j].lastState.equals(hamburg.haw.polyshift.Game.Simulation.LEFT)))) { if (((i + 1) < (objects.length)) && ((objects[(i + 1)][j]) instanceof hamburg.haw.polyshift.Game.Player)) { if ((i != (objects[i][j].start_position.x)) || (j != (objects[i][j].start_position.y))) { movePlayer((i + 1), j, hamburg.haw.polyshift.Game.Simulation.RIGHT); } }else if (((i - 1) >= 0) && ((objects[(i - 1)][j]) instanceof hamburg.haw.polyshift.Game.Player)) { if ((i != (objects[i][j].start_position.x)) || (j != (objects[i][j].start_position.y))) { movePlayer((i - 1), j, hamburg.haw.polyshift.Game.Simulation.LEFT); } }else if ((!(predictCollision(i, j, hamburg.haw.polyshift.Game.Simulation.UP))) && (predictCollision(i, j, hamburg.haw.polyshift.Game.Simulation.DOWN))) { if ((i != (objects[i][j].start_position.x)) || (j != (objects[i][j].start_position.y))) { movePlayer(i, j, hamburg.haw.polyshift.Game.Simulation.UP); } }else if ((predictCollision(i, j, hamburg.haw.polyshift.Game.Simulation.UP)) && (!(predictCollision(i, j, hamburg.haw.polyshift.Game.Simulation.DOWN)))) { if ((i != (objects[i][j].start_position.x)) || (j != (objects[i][j].start_position.y))) { movePlayer(i, j, hamburg.haw.polyshift.Game.Simulation.DOWN); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6528/buggy-version/app.src.main.java.hamburg.haw.polyshift.Game.Simulation.java", "BodyUseAPI": ["hamburg.haw.polyshift.Game.Simulation.movePlayer(int,int,java.lang.String)", "hamburg.haw.polyshift.Game.Simulation.movePlayer(int,int,java.lang.String)", "hamburg.haw.polyshift.Game.Simulation.predictCollision(int,int,java.lang.String)", "hamburg.haw.polyshift.Game.Simulation.predictCollision(int,int,java.lang.String)", "hamburg.haw.polyshift.Game.Simulation.predictCollision(int,int,java.lang.String)", "hamburg.haw.polyshift.Game.Simulation.movePlayer(int,int,java.lang.String)", "hamburg.haw.polyshift.Game.Simulation.movePlayer(int,int,java.lang.String)", "hamburg.haw.polyshift.Game.Simulation.predictCollision(int,int,java.lang.String)"], "Fixed commit": "2527352af69387554ef88429c883a5505aeddfb7", "Url": "https://api.github.com/repos/AndreasHelms/Polyshift", "Date": "2015-05-18T12:55:04Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i != (objects[i][j].start_position.x)) || (j != (objects[i][j].start_position.y))) { movePlayer((i - 1), j, hamburg.haw.polyshift.Game.Simulation.LEFT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6528/buggy-version/app.src.main.java.hamburg.haw.polyshift.Game.Simulation.java", "BodyUseAPI": ["hamburg.haw.polyshift.Game.Simulation.movePlayer(int,int,java.lang.String)"], "Fixed commit": "2527352af69387554ef88429c883a5505aeddfb7", "Url": "https://api.github.com/repos/AndreasHelms/Polyshift", "Date": "2015-05-18T12:55:04Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i != (objects[i][j].start_position.x)) || (j != (objects[i][j].start_position.y))) { movePlayer(i, j, hamburg.haw.polyshift.Game.Simulation.UP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6528/buggy-version/app.src.main.java.hamburg.haw.polyshift.Game.Simulation.java", "BodyUseAPI": ["hamburg.haw.polyshift.Game.Simulation.movePlayer(int,int,java.lang.String)"], "Fixed commit": "2527352af69387554ef88429c883a5505aeddfb7", "Url": "https://api.github.com/repos/AndreasHelms/Polyshift", "Date": "2015-05-18T12:55:04Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (appDir.isDirectory()) { java.io.File[] dotPhrescoFolders = appDir.listFiles(new com.photon.phresco.framework.impl.ProjectManagerImpl.PhrescoFileNameFilter(FOLDER_DOT_PHRESCO)); if (org.apache.commons.lang.ArrayUtils.isEmpty(dotPhrescoFolders)) { throw new com.photon.phresco.exception.PhrescoException((\".phresco folder not found in project \" + (appDir.getName()))); } java.io.File[] dotProjectFiles = dotPhrescoFolders[0].listFiles(new com.photon.phresco.framework.impl.ProjectManagerImpl.PhrescoFileNameFilter(PROJECT_INFO_FILE)); if (org.apache.commons.lang.ArrayUtils.isEmpty(dotProjectFiles)) { throw new com.photon.phresco.exception.PhrescoException((\"project.info file not found in .phresco of project \" + (dotPhrescoFolders[0].getParent()))); } fillProjects(dotProjectFiles[0], projectInfos, customerId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4362/buggy-version/phresco-framework-impl.src.main.java.com.photon.phresco.framework.impl.ProjectManagerImpl.java", "BodyUseAPI": ["java.io.File.getName()", "java.io.File.listFiles(com.photon.phresco.framework.impl.ProjectManagerImpl.PhrescoFileNameFilter)"], "Fixed commit": "be4c73b90c86d37801cdecfe05b5a2800c4e36d9", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2012-10-16T16:47:27Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["meWap.getUserList().find(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (participator == null) { participator = new com.denbestegrupp.mewap.model.MWUser(email, email); meWap.getUserList().create(participator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4193/buggy-version/src.main.java.com.denbestegrupp.mewap.model.EventListResource.java", "BodyUseAPI": [], "Fixed commit": "c0c8f6e7f439b88ba9c1c7b294dcca4543c38fb0", "Url": "https://api.github.com/repos/raksooo/meWap", "Date": "2014-10-26T19:25:53Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDeviceSize) > 0) { mSelectedDialogItems = new boolean[mDeviceSize]; java.util.Arrays.fill(mSelectedDialogItems, java.lang.Boolean.TRUE); mSelectedDialogItems[0] = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7236/buggy-version/android.UbiSolar.UbiSolar.src.main.java.com.sintef_energy.ubisolar.fragments.graphs.UsageGraphPieFragment.java", "BodyUseAPI": [], "Fixed commit": "f64027f9e49eb8549ed5099729791d41c6e6fdd8", "Url": "https://api.github.com/repos/haavardlian/UbiSolar", "Date": "2014-04-25T07:21:29Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDevices.size()) > 0) getLoaderManager().restartLoader(com.sintef_energy.ubisolar.fragments.UsageFragment.LOADER_USAGE, null, this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7236/buggy-version/android.UbiSolar.UbiSolar.src.main.java.com.sintef_energy.ubisolar.fragments.UsageFragment.java", "BodyUseAPI": [], "Fixed commit": "f64027f9e49eb8549ed5099729791d41c6e6fdd8", "Url": "https://api.github.com/repos/haavardlian/UbiSolar", "Date": "2014-04-25T07:21:29Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.health) + health) > (this.getMaxHealth())) { this.health = this.maxHealth; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/939/buggy-version/src.mygame.Entitys.Entity.java", "BodyUseAPI": [], "Fixed commit": "18bbcca04ea3b651a6b7d218113b6d7b44fd0ba3", "Url": "https://api.github.com/repos/Sajohn-CH/Spielprojekt", "Date": "2016-01-05T16:17:01Z"},
{"Line": "=>2556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getBoolean(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (centralize) { c_a.addAll(java.util.Arrays.asList(con_a)); c_a.remove(agencies.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1975/buggy-version/TNAtoolAPI-Webapp.src.main.java.com.webapp.api.Queries.java", "BodyUseAPI": [], "Fixed commit": "df1f89badc6d2df746c675d5bd5bc2446ccd1b6a", "Url": "https://api.github.com/repos/tnatool/TNAST", "Date": "2016-08-30T00:17:33Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((r.wasNull()) || ((topicId) == null)) { topicId = 1L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7621/buggy-version/src.uk.ac.bris.cs.databases.cwk3.CreateTopic.java", "BodyUseAPI": [], "Fixed commit": "60cb04050af89d96719b6831d810b4b25501c81d", "Url": "https://api.github.com/repos/DatabasesCW3/databasescw3", "Date": "2016-05-05T10:38:38Z"},
{"Line": "=>614", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (wl instanceof java.util.TreeSet) worker = ((java.util.TreeSet<joeq.Class.jq_Method>) (wl)).pollFirst(); else wl.remove(worker);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7020/buggy-version/src.framework.scuba.analyses.alias.SummaryBasedAnalysis.java", "BodyUseAPI": ["java.util.Set<joeq.Class.jq_Method>.remove(joeq.Class.jq_Method)"], "Fixed commit": "f958c38b0a99b3aca839a713f0d7377e8a0e3f7f", "Url": "https://api.github.com/repos/xwangsd/Scuba", "Date": "2014-09-28T16:22:40Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anim_started) { counterDisplay.setText(java.lang.Integer.toString(com.lokesh58.counter.MainActivity.counter)); }else { anim_started = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4037/buggy-version/app.src.main.java.com.lokesh58.counter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "bb500b63052e415dd8465a1966b2dd3349bec2fe", "Url": "https://api.github.com/repos/lokesh58/DevClubAssignment3", "Date": "2017-12-14T04:54:07Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(parent.getFullName().startsWith(\".\"))) { iFile = model.getFeature(signatures.getFeatureName(featureID)).getRole(((parent.getFullName().replace(\".\", \"/\")) + \".java\")).getFile(); }else { iFile = model.getFeature(signatures.getFeatureName(featureID)).getRole(((parent.getFullName().substring(1)) + \".java\")).getFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4886/buggy-version/plugins.de.ovgu.featureide.ui.src.de.ovgu.featureide.ui.views.outline.ContextOutlineLabelProvider.java", "BodyUseAPI": ["de.ovgu.featureide.core.signature.abstr.AbstractSignature.getFullName()", "parent.getFullName().replace(java.lang.String,java.lang.String)", "model.getFeature(signatures.getFeatureName(featureID)).getRole(((parent.getFullName().substring(1)) + \".java\")).getFile()", "model.getFeature(signatures.getFeatureName(featureID)).getRole(((parent.getFullName().substring(1)) + \".java\"))", "model.getFeature(signatures.getFeatureName(featureID)).getRole(((parent.getFullName().replace(\".\", \"/\")) + \".java\"))", "model.getFeature(signatures.getFeatureName(featureID)).getRole(((parent.getFullName().replace(\".\", \"/\")) + \".java\")).getFile()", "de.ovgu.featureide.core.signature.abstr.AbstractSignature.getFullName()", "parent.getFullName().substring(int)"], "Fixed commit": "ddcf2b998fa2deb396c997cbfb88b126f523eb23", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2015-01-23T12:10:55Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.openConnection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((connection.getHeaderFields()) != null) { java.util.List<java.lang.String> cookies = connection.getHeaderFields().get(\"Set-Cookie\"); if (cookies != null) { for (java.lang.String cookie : cookies) { if (cookie.startsWith(\"rwf_session=\")) { sessionId = cookie.replace(\"rwf_session=\", \"\").substring(0, 64).trim(); break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2945/buggy-version/app.src.main.java.de.rpi_controlcenter.shc.Service.SHCConnectorService.java", "BodyUseAPI": ["java.net.URLConnection.getHeaderFields()", "java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)"], "Fixed commit": "bc877dc13283c48c3cbdae999038a52e2438c5dd", "Url": "https://api.github.com/repos/agent4788/SHC_Android_APP", "Date": "2015-10-23T14:58:18Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.core.JsonParser.getValueAsString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dateString == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4806/buggy-version/src.main.java.ru.touchin.templates.logansquare.LoganSquareJodaTimeConverter.java", "BodyUseAPI": [], "Fixed commit": "3300dbcc89d729c65b850ad4977a6e155065353e", "Url": "https://api.github.com/repos/TouchInstinct/android-templates", "Date": "2017-02-22T15:41:52Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (languageConversions.containsKey(language)) { return languageConversions.get(language); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6537/buggy-version/src.main.java.Messaging.regalowl.hyperconomy.LanguageFile.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "2841e5f32cfcffbf6a56bb8df5bef783050852c7", "Url": "https://api.github.com/repos/RegalOwl/HyperConomy", "Date": "2013-01-11T03:46:05Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((htIp.higherEntry(entry.getKey())) != null) { if (((entry.getKey()) <= FileHash) && ((htIp.higherEntry(entry.getKey()).getKey()) > FileHash)) { return new com.bonkers.NodeInfo(entry.getKey(), entry.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2205/buggy-version/src.src.main.java.com.bonkers.HashTableCreator.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.Integer, java.lang.String>.getKey()", "java.util.Map.Entry<java.lang.Integer, java.lang.String>.getKey()", "java.util.TreeMap<java.lang.Integer, java.lang.String>.higherEntry(java.lang.Integer)", "java.util.Map.Entry<java.lang.Integer, java.lang.String>.getKey()", "java.util.Map.Entry<java.lang.Integer, java.lang.String>.getValue()", "java.util.Map.Entry<java.lang.Integer, java.lang.String>.getKey()"], "Fixed commit": "132d02d61be7a52d711201c8561123e81347843a", "Url": "https://api.github.com/repos/Vesyrak/SystemY", "Date": "2016-12-16T18:39:01Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((screen) instanceof com.ragego.gui.screens.OnlineGoGameScreen)) { endGame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3016/buggy-version/core.main.java.com.ragego.gui.objects.Goban.java", "BodyUseAPI": [], "Fixed commit": "cb96d534e46b74651ddf4c0b1c49eada0751e4d7", "Url": "https://api.github.com/repos/RageGo/RageGo", "Date": "2015-06-02T09:40:14Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (l != null) { synchronized(l) { l.notify(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4522/buggy-version/tuplespace.tuplespaces.LocalTupleSpace.java", "BodyUseAPI": ["tuplespaces.LocalTupleSpace.Lock.notify()"], "Fixed commit": "4992d83fbef1dd3b9c233b891fae9627d12b7c6e", "Url": "https://api.github.com/repos/conpgm/hw2", "Date": "2013-12-04T20:58:45Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((text) != null) { resp.getWriter().write(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7208/buggy-version/src.main.java.endpoint.response.ErrorResponse.java", "BodyUseAPI": [], "Fixed commit": "f549449a0a4f18722571e37c19ca76188618af78", "Url": "https://api.github.com/repos/feroult/endpoint", "Date": "2014-08-07T17:57:02Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cxf.jaxrs.swagger.SwaggerUiResolver.findSwaggerUiRootInternal(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((root == null) && ((org.apache.cxf.jaxrs.swagger.SwaggerUiResolver.HELPER.getClass()) != (org.apache.cxf.jaxrs.swagger.SwaggerUiResolver.class))) { root = new org.apache.cxf.jaxrs.swagger.SwaggerUiResolver().findSwaggerUiRootInternal(swaggerUiVersion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1909/buggy-version/rt.rs.description-swagger.src.main.java.org.apache.cxf.jaxrs.swagger.SwaggerUiResolver.java", "BodyUseAPI": [], "Fixed commit": "8fb21e240890412c10b4e1b99e64e3d68c7d3d87", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2017-02-21T12:58:11Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (mediaPlayer != null) { mediaPlayer.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5918/buggy-version/iface.AndroidAlarm.app.src.main.java.com.alarm.androidalarm.CancelAlarm.java", "BodyUseAPI": ["android.media.MediaPlayer.stop()"], "Fixed commit": "b89f0f2d157878b41d2d0d3174350d340c2de54a", "Url": "https://api.github.com/repos/galvanom/BestAlarm", "Date": "2016-11-25T08:21:11Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((productList.size()) > 0) { for (org.igeek.service.impl.SpCollect spCollect : productList) { org.igeek.service.impl.ProductCollectVo productCollectVo = new org.igeek.service.impl.ProductCollectVo(); productCollectVo.setWorkerName(spCollect.getUserName()); productCollectVo.setWorkerId(spCollect.getUserId()); productCollectVo.setWorkerCode(spCollect.getUserCode()); org.igeek.service.impl.QualityCollection qualityCollection = collectionMapper.getQualityCollection(spCollect.getUserCode(), spCollect.getUserId(), orgId); productCollectVo.setCount(qualityCollection.getCount()); ProductCollectVoSet.add(productCollectVo); } return org.igeek.common.ServerResponse.createBySuccess(ProductCollectVoSet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1037/buggy-version/src.main.java.org.igeek.service.impl.IQualityCollectServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "0be08424ce5e1c818cc40f9fb07333d177799dcd", "Url": "https://api.github.com/repos/gygesM/yellowChicken", "Date": "2017-07-09T08:08:43Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSource) != null) { for (com.badlogic.gdx.graphics.g3d.model.Animation a : currentSource.modelInstance.animations) { sb.append(\" \").append(a.id); } if ((currentSource.controller.current) != null) sb.append(\"\\n Current Anim: \").append(currentSource.controller.current.animation.id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/9206/buggy-version/blade-engine.src.com.bladecoder.engine.model.Sprite3DRenderer.java", "BodyUseAPI": [], "Fixed commit": "5902e262762c622283d0b6635d72db5daf7c8676", "Url": "https://api.github.com/repos/bladecoder/bladecoder-adventure-engine", "Date": "2015-12-21T18:24:46Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mUsersList.size()) > 0) { flingContainer.getTopCardListener().selectLeft(); }else android.widget.Toast.makeText(getApplicationContext(), \"No more users in dB :(\", Toast.LENGTH_LONG).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6103/buggy-version/app.src.main.java.com.carpenter.dean.pokemontinder.SwipeActivity.java", "BodyUseAPI": [], "Fixed commit": "744238a392197904b00c1b67220544e993e090e5", "Url": "https://api.github.com/repos/deancarpenter17/PokemonTinder", "Date": "2017-01-22T23:17:29Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mUsersList.size()) > 0) { flingContainer.getTopCardListener().selectRight(); }else android.widget.Toast.makeText(getApplicationContext(), \"No more users in dB :(\", Toast.LENGTH_LONG).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6103/buggy-version/app.src.main.java.com.carpenter.dean.pokemontinder.SwipeActivity.java", "BodyUseAPI": [], "Fixed commit": "744238a392197904b00c1b67220544e993e090e5", "Url": "https://api.github.com/repos/deancarpenter17/PokemonTinder", "Date": "2017-01-22T23:17:29Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.joinGuiModel.getAvailableTables()) == null) || ((this.joinGuiModel.getAvailableTables().size()) == 0)) { fetchTables(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/945/buggy-version/src.org.pentaho.platform.dataaccess.datasource.wizard.sources.multitable.TablesSelectionStep.java", "BodyUseAPI": [], "Fixed commit": "273281184dbc3bec115bd134a11e2073e20f97fe", "Url": "https://api.github.com/repos/e-cuellar/data-access", "Date": "2012-02-21T16:40:44Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (mysize < 0) { throw new java.lang.IllegalArgumentException(\"Cannot create negative sized Storage Objects\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5588/buggy-version/src.main.java.hu.mta.sztaki.lpds.cloud.simulator.io.StorageObject.java", "BodyUseAPI": [], "Fixed commit": "932f09d5e0d122f0bfe691c0fc87c9c7fc2d1557", "Url": "https://api.github.com/repos/andrasmarkus/dissect-cf", "Date": "2016-08-25T16:28:04Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list.isEmpty()) { java.lang.System.err.println(\"List of employees is empty.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3982/buggy-version/Main.java", "BodyUseAPI": [], "Fixed commit": "03fd09a8455f3c6ff312c198e6a8ff534dcc82b5", "Url": "https://api.github.com/repos/vladislavoff1/enf-hw2", "Date": "2015-03-19T18:36:37Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (defaultCity != null) { mCounties.addAll(defaultCity.getCounties()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/9042/buggy-version/citypicker.src.main.java.com.yang.picker.CityPickerView.java", "BodyUseAPI": ["java.util.ArrayList<com.yang.picker.address.County>.addAll(defaultCity.getCounties())", "com.yang.picker.address.City.getCounties()"], "Fixed commit": "c067d52f87468f6a567d60471e06648541db19af", "Url": "https://api.github.com/repos/recwert/CityPicker", "Date": "2017-12-05T08:56:22Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(context.getChildDegreeModule().isLeaf())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8812/buggy-version/src.main.java.org.fenixedu.ulisboa.specifications.domain.services.CurricularPeriodServices.java", "BodyUseAPI": [], "Fixed commit": "c524924de3d38680d8348538edbe991ccfb488d4", "Url": "https://api.github.com/repos/qub-it/fenixedu-ulisboa-specifications", "Date": "2015-08-14T19:23:10Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (session != null) { session.invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5964/buggy-version/src.controller.LogOutServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.invalidate()"], "Fixed commit": "5977c187cb3a604e6099f35f8345edbe7f78d56a", "Url": "https://api.github.com/repos/AMProduction/AMNews_WEB", "Date": "2016-04-02T13:37:51Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (location.hasBearing()) lastBearing = location.getBearing();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1911/buggy-version/app.src.main.java.com.eozaki.omegadash.Map.java", "BodyUseAPI": ["android.location.Location.getBearing()"], "Fixed commit": "520a947fc9a7e77179876aacb6af838e27dcb59a", "Url": "https://api.github.com/repos/eozaki/OmegaDash", "Date": "2015-10-28T22:33:30Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == 0) { dashes -= 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1883/buggy-version/Info.java", "BodyUseAPI": [], "Fixed commit": "32d4ecbf8560ac2497b3cf41dfed4db503722cda", "Url": "https://api.github.com/repos/asinck/linkedList", "Date": "2015-11-02T00:52:57Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.api.db.ObsDAO.getObsByUuid(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((obsByUuid != null) && (obsByUuid.isComplex())) { return getHandler(obsByUuid).getObs(obsByUuid, ComplexObsHandler.RAW_VIEW); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/395/buggy-version/api.src.main.java.org.openmrs.api.impl.ObsServiceImpl.java", "BodyUseAPI": ["org.openmrs.api.impl.ObsServiceImpl.getHandler(org.openmrs.Obs)", "org.openmrs.obs.ComplexObsHandler.getObs(org.openmrs.Obs,ComplexObsHandler.RAW_VIEW)"], "Fixed commit": "8d79fe631ccaa40bada5eb4cbca8d2cd7c70de95", "Url": "https://api.github.com/repos/teleivo/openmrs-core", "Date": "2017-08-30T20:14:14Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((device) != null) { message = \" connection=\" + (device.getConnection().getDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7580/buggy-version/NFCommunicator.nfcommunicator.src.main.java.com.neofect.communicator.CommunicationController.java", "BodyUseAPI": [], "Fixed commit": "0c9a3fbdd161a53034d4f6072d2737843b5ca27f", "Url": "https://api.github.com/repos/Neofect/Communicator", "Date": "2017-10-20T13:18:40Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ednovo.gooru.client.mvp.gsearch.util.GooruGradesView.isContains(java.lang.String,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!value) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3753/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gsearch.util.GooruGradesView.java", "BodyUseAPI": [], "Fixed commit": "83c3769dfc5637d987408aa2d6832826ca3b5846", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-08-03T14:11:54Z"},
{"Line": "=>889", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.bluetooth.btservice.AdapterService.getAdapterService()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((adapterService == null) || (((adapterService.isQuietModeEnabled()) == true) && ((mTargetDevice) == null))) { ret = false; }else if (((android.bluetooth.BluetoothProfile.PRIORITY_OFF) < priority) || (((android.bluetooth.BluetoothProfile.PRIORITY_UNDEFINED) == priority) && ((device.getBondState()) != (android.bluetooth.BluetoothDevice.BOND_NONE)))) { ret = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7229/buggy-version/src.com.android.bluetooth.a2dp.A2dpSinkStateMachine.java", "BodyUseAPI": [], "Fixed commit": "fce3d1b99110c355f2aabb934093637308bef7f5", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Bluetooth", "Date": "2015-10-07T22:49:08Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.gluu.site.ldap.persistence.LdapEntryManager.log.isTraceEnabled()) { org.gluu.site.ldap.persistence.LdapEntryManager.log.trace((((((\"Binary attribute: \" + (attribute.getName())) + \" value (hex): \") + (org.apache.commons.codec.binary.Hex.encodeHexString(attributeValues[i]))) + \" value (base64): \") + (attributeValueStrings[i]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1961/buggy-version/oxLdap.src.main.java.org.gluu.site.ldap.persistence.LdapEntryManager.java", "BodyUseAPI": ["org.slf4j.Logger.trace((((((\"Binary attribute: \" + (attribute.getName())) + \" value (hex): \") + (org.apache.commons.codec.binary.Hex.encodeHexString(attributeValues[i]))) + \" value (base64): \") + (attributeValueStrings[i])))"], "Fixed commit": "aaeeacdcae31b936ee1a63cefd8e0e7ec41a9baa", "Url": "https://api.github.com/repos/GluuFederation/oxCore", "Date": "2016-02-09T14:05:50Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mMessageError.equals(\"countryCodeError\"))) mPopup.setVisible(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8430/buggy-version/BikeRental.src.views.ValidateInput.java", "BodyUseAPI": [], "Fixed commit": "8a40d986f60804e24a49cb4de10da54008ec4554", "Url": "https://api.github.com/repos/rjoac1/CSC_429_GroupProj", "Date": "2015-05-07T20:08:05Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(keyStack.contains(event.getCode()))) { keyStack.add(0, event.getCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3510/buggy-version/src.control.DirectionButtons.java", "BodyUseAPI": ["java.util.List<javafx.scene.input.KeyCode>.add(int,event.getCode())", "javafx.scene.input.KeyEvent.getCode()"], "Fixed commit": "b85c848f44a4f080fc8795f778282c6887d0573a", "Url": "https://api.github.com/repos/UofIVespucci/DriverStation", "Date": "2016-03-15T03:45:00Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gordcorp.jira2db.persistence.JiraIssueDao.getByJiraKey(jiraIssueDto.getJiraKey())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (readJiraIssueDto != null) { readJiraIssueDto.setCustomFields(jiraCustomFieldDao.getAllByJiraKey(jiraIssueDto.getJiraKey())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2061/buggy-version/src.main.java.com.gordcorp.jira2db.JiraSynchroniser.java", "BodyUseAPI": ["com.gordcorp.jira2db.persistence.dto.JiraIssueDto.setCustomFields(jiraCustomFieldDao.getAllByJiraKey(jiraIssueDto.getJiraKey()))"], "Fixed commit": "8b76e0b7ce6c351c1dddedea93c4745a94dc2d57", "Url": "https://api.github.com/repos/bjgordon/Jira2Db", "Date": "2012-11-15T11:56:31Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (identifier == null) { identifier = value.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8496/buggy-version/src.fu.berlin.de.webdatabrowser.webdataparser.XMLParser.java", "BodyUseAPI": [], "Fixed commit": "445c1f295280a52c4170367df65a6136e2ffa8be", "Url": "https://api.github.com/repos/tombul/xml_2013", "Date": "2013-07-03T11:10:07Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.creator) != null) && (!(this.creator.isEmpty()))) { html += ((\"<tr>\" + (((\"<td>\" + \"Creator\") + \"</td>\") + \"<td>\")) + (this.creator)) + \"</td>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8496/buggy-version/src.fu.berlin.de.webdatabrowser.deep.rdf.resources.Publication.java", "BodyUseAPI": [], "Fixed commit": "445c1f295280a52c4170367df65a6136e2ffa8be", "Url": "https://api.github.com/repos/tombul/xml_2013", "Date": "2013-07-03T11:10:07Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((season.optInt(\"status_code\", org.codeisland.aggregato.service.fetcher.impl.TMDBFetcher.STATUS_CODE_OK)) != (org.codeisland.aggregato.service.fetcher.impl.TMDBFetcher.STATUS_CODE_OK)) { org.codeisland.aggregato.service.fetcher.impl.TMDBFetcher.logger.info(java.lang.String.format(\"A season %s does not exist for %s\", season_nr, series.getName())); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/412/buggy-version/web_service.src.main.java.org.codeisland.aggregato.service.fetcher.impl.TMDBFetcher.java", "BodyUseAPI": [], "Fixed commit": "6efa4a5639f05c04b0788fe58501f847217c0eee", "Url": "https://api.github.com/repos/LukasKnuth/Aggregato", "Date": "2014-12-05T16:33:44Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((testClass) != null) { java.util.Set<com.google.inject.spi.InjectionPoint> injectionPoints = com.google.inject.spi.InjectionPoint.forInstanceMethodsAndFields(testClass); for (com.google.inject.spi.InjectionPoint injectionPoint : injectionPoints) { com.google.inject.internal.Errors errors = new com.google.inject.internal.Errors(injectionPoint); java.util.List<com.google.inject.spi.Dependency<?>> dependencies = injectionPoint.getDependencies(); for (com.google.inject.spi.Dependency<?> dependency : dependencies) { com.google.inject.Key<?> keyNeeded = org.jukito.GuiceUtils.ensureProvidedKey(dependency.getKey(), errors); addNeededKey(keysObserved, keysNeeded, keyNeeded, true); } errors.throwConfigurationExceptionIfErrorsExist(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6535/buggy-version/src.main.java.org.jukito.JukitoModule.java", "BodyUseAPI": [], "Fixed commit": "57c52353b1d3927a44defcd70899ff49f498351e", "Url": "https://api.github.com/repos/przemekgalazka/Jukito", "Date": "2013-02-19T14:01:50Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { player.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4768/buggy-version/app.src.main.java.computer.cactus.alphasector.TechsActivity.java", "BodyUseAPI": [], "Fixed commit": "fd571d69f70058dff6caee560cf21a0a840353a8", "Url": "https://api.github.com/repos/pat-f/AlphaSector", "Date": "2016-06-04T02:01:42Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.matburt.mobileorg.MobileOrgDatabase.getOrgFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (allOrgList.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4593/buggy-version/src.com.matburt.mobileorg.MobileOrgActivity.java", "BodyUseAPI": [], "Fixed commit": "b92eccb20774b3f633ffbc730e2f855e161c8a5e", "Url": "https://api.github.com/repos/matburt/mobileorg-android", "Date": "2011-05-03T00:08:07Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["yourselvs.dungeons.records.RecordManager.getRecords(yourselvs.dungeons.dungeons.Dungeon)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (records.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1610/buggy-version/src.main.java.yourselvs.dungeons.records.RecordManager.java", "BodyUseAPI": [], "Fixed commit": "268ffa2cf4f7b7bdeda38de8cebf3bbcbce57a2a", "Url": "https://api.github.com/repos/yourselvs/Dungeons", "Date": "2016-12-02T20:01:43Z"},
{"Line": "=>717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (king == null) { java.lang.System.out.println(this.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/539/buggy-version/src.main.java.com.es.Board.java", "BodyUseAPI": [], "Fixed commit": "ce7aedac00ad175562dd4fc96d5294f3ef165391", "Url": "https://api.github.com/repos/wspeirs/chess", "Date": "2012-06-28T11:54:14Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.phone) != null) && (!(user.phone.isEmpty()))) existingUser.phone = user.phone;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2748/buggy-version/src.main.java.org.govithub.govac.consumerapi.controller.UsersController.java", "BodyUseAPI": [], "Fixed commit": "a07d5188c100096d36a2e7e2dae1a43e7d7de65c", "Url": "https://api.github.com/repos/gov-ithub/asistentul_cetateanului_api_intern", "Date": "2016-11-23T16:27:41Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.username) != null) && (!(user.username.isEmpty()))) existingUser.username = user.username;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2748/buggy-version/src.main.java.org.govithub.govac.consumerapi.controller.UsersController.java", "BodyUseAPI": [], "Fixed commit": "a07d5188c100096d36a2e7e2dae1a43e7d7de65c", "Url": "https://api.github.com/repos/gov-ithub/asistentul_cetateanului_api_intern", "Date": "2016-11-23T16:27:41Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.lastName) != null) && (!(user.lastName.isEmpty()))) existingUser.lastName = user.lastName;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2748/buggy-version/src.main.java.org.govithub.govac.consumerapi.controller.UsersController.java", "BodyUseAPI": [], "Fixed commit": "a07d5188c100096d36a2e7e2dae1a43e7d7de65c", "Url": "https://api.github.com/repos/gov-ithub/asistentul_cetateanului_api_intern", "Date": "2016-11-23T16:27:41Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.email) != null) && (!(user.email.isEmpty()))) existingUser.email = user.email;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2748/buggy-version/src.main.java.org.govithub.govac.consumerapi.controller.UsersController.java", "BodyUseAPI": [], "Fixed commit": "a07d5188c100096d36a2e7e2dae1a43e7d7de65c", "Url": "https://api.github.com/repos/gov-ithub/asistentul_cetateanului_api_intern", "Date": "2016-11-23T16:27:41Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.cnp) != null) && (!(user.cnp.isEmpty()))) existingUser.cnp = user.cnp;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2748/buggy-version/src.main.java.org.govithub.govac.consumerapi.controller.UsersController.java", "BodyUseAPI": [], "Fixed commit": "a07d5188c100096d36a2e7e2dae1a43e7d7de65c", "Url": "https://api.github.com/repos/gov-ithub/asistentul_cetateanului_api_intern", "Date": "2016-11-23T16:27:41Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.firstName) != null) && (!(user.firstName.isEmpty()))) existingUser.firstName = user.firstName;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2748/buggy-version/src.main.java.org.govithub.govac.consumerapi.controller.UsersController.java", "BodyUseAPI": [], "Fixed commit": "a07d5188c100096d36a2e7e2dae1a43e7d7de65c", "Url": "https://api.github.com/repos/gov-ithub/asistentul_cetateanului_api_intern", "Date": "2016-11-23T16:27:41Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (action.equals(\"printText\")) { try { java.lang.String msg = args.getString(0); printText(callbackContext, msg); } catch (java.io.IOException e) { android.util.Log.e(com.ru.cordova.printer.bluetooth.BluetoothPrinter.LOG_TAG, e.getMessage()); e.printStackTrace(); } return true; }else if (action.equals(\"printPOSCommand\")) { try { java.lang.String msg = args.getString(0); printPOSCommand(callbackContext, com.ru.cordova.printer.bluetooth.BluetoothPrinter.hexStringToBytes(msg)); } catch (java.io.IOException e) { android.util.Log.e(com.ru.cordova.printer.bluetooth.BluetoothPrinter.LOG_TAG, e.getMessage()); e.printStackTrace(); } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8860/buggy-version/src.android.BluetoothPrinter.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "147da4a81ed239f4ead31268f4971afcef4f0dba", "Url": "https://api.github.com/repos/srehanuddin/Cordova-Plugin-Bluetooth-Printer", "Date": "2017-01-03T09:54:09Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(activity instanceof android.support.v4.app.FragmentActivity)) { throw new java.lang.RuntimeException(\"Activity must extend FragmentActivity\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1921/buggy-version/conductor.src.main.java.com.bluelinelabs.conductor.Conductor.java", "BodyUseAPI": [], "Fixed commit": "864db9cc572bcb04c18f1013e219a0a3c4dfa4fc", "Url": "https://api.github.com/repos/dmarcato/Conductor", "Date": "2017-05-02T20:24:03Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((a.size()) > 0) && ((b.size()) > 0)) { for (java.lang.String text : a) { if (b.get(0).contains(text)) { found += 1; } } return ((double) (found)) / ((double) (a.size())); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1384/buggy-version/IROM.app.src.main.java.com.sjsu.se195.irom.ItemActivity.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "43277e7351ab33c3c5d78f9dbd6540d313aa250e", "Url": "https://api.github.com/repos/azb/SE195A_SeniorProject", "Date": "2017-04-01T01:24:42Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.lang.Boolean(request.getParameter(\"langSwitch\")))) { model.put(\"confirmationMessage\", getMessageSource().getMessage(\"registration.submit.data.confirmation.message\", null, locale)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2102/buggy-version/gde-webapp.src.main.java.com.nagarro.gde.controller.RegistrationController.java", "BodyUseAPI": [], "Fixed commit": "6acff90c7d66b585b74afec579c3062363f47761", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-01-24T05:46:06Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getNumberOfNotes()) > 0) { toDisplay = fetchNote(noteFilenames.get(prevNoteIndex)); }else { toDisplay = createNewNote(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2254/buggy-version/src.org.fennd.note.simple.controller.NoteController.java", "BodyUseAPI": [], "Fixed commit": "ccdd5864ad2e413b6bc984e5bacf7ab5c9e494f6", "Url": "https://api.github.com/repos/dwfennell/android-noteapp", "Date": "2012-11-20T07:32:34Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jivesoftware.os.jive.utils.map.store.VariableKeySizeFileBackMapStore<com.jivesoftware.os.miru.api.base.MiruTermId, com.jivesoftware.os.miru.service.index.MiruFieldIndexKey>.getUnsafe(com.jivesoftware.os.miru.api.base.MiruTermId)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (id == null) { synchronized(termToIndex) { id = termToIndex.get(term); if (id == null) { termToIndex.add(term, new com.jivesoftware.os.miru.service.index.MiruFieldIndexKey(nextTermId.getAndIncrement())); id = termToIndex.get(term); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5939/buggy-version/code.com.jivesoftware.os.miru.miru-service.src.main.java.com.jivesoftware.os.miru.service.index.memory.MiruHybridField.java", "BodyUseAPI": [], "Fixed commit": "4a08dfad4b099d87b50df4b04b46c1b6bf508023", "Url": "https://api.github.com/repos/jivesoftware/miru", "Date": "2014-10-01T00:04:30Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<com.jivesoftware.os.miru.api.base.MiruTermId, com.jivesoftware.os.miru.service.index.MiruFieldIndexKey>.get(com.jivesoftware.os.miru.api.base.MiruTermId)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (id == null) { synchronized(termToIndex) { id = termToIndex.get(term); if (id == null) { termToIndex.put(term, new com.jivesoftware.os.miru.service.index.MiruFieldIndexKey(nextTermId.getAndIncrement())); id = termToIndex.get(term); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5939/buggy-version/code.com.jivesoftware.os.miru.miru-service.src.main.java.com.jivesoftware.os.miru.service.index.memory.MiruInMemoryField.java", "BodyUseAPI": [], "Fixed commit": "4a08dfad4b099d87b50df4b04b46c1b6bf508023", "Url": "https://api.github.com/repos/jivesoftware/miru", "Date": "2014-10-01T00:04:30Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.view.prompt(\"SELL_FIELDS_PROMPT\"))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2740/buggy-version/src.common.Board.java", "BodyUseAPI": [], "Fixed commit": "6098d9f999337635cc42a99748997cb0eaa9e24a", "Url": "https://api.github.com/repos/Trivivium/software-project", "Date": "2016-05-03T09:23:36Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<entities.player.IPlayer>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (this.prison.isImprisoned(player)) { eligible = this.prison.breakout(this.view, player, this.dice); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2740/buggy-version/src.common.Board.java", "BodyUseAPI": ["entities.Prison.breakout(view.IView,entities.player.IPlayer,entities.Dice)"], "Fixed commit": "6098d9f999337635cc42a99748997cb0eaa9e24a", "Url": "https://api.github.com/repos/Trivivium/software-project", "Date": "2016-05-03T09:23:36Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(eu.sunrave.homecontrol_server.Main.isserver)) { eu.sunrave.homecontrol_server.Main.webserver.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/406/buggy-version/src.eu.sunrave.homecontrol_server.Main.java", "BodyUseAPI": [], "Fixed commit": "c8b5aaad905e89681a9e9ebc911e44c745a4c597", "Url": "https://api.github.com/repos/Aileenche/homecontrol_server", "Date": "2015-12-29T13:59:09Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.github.thebiologist13.commands.spawners.CONFIG.getBoolean(\"data.autosave\")) && (com.github.thebiologist13.commands.spawners.CONFIG.getBoolean(\"data.saveOnCreate\"))) { com.github.thebiologist13.commands.spawners.PLUGIN.getFileManager().autosave(spawner1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1669/buggy-version/CustomSpawners.src.com.github.thebiologist13.commands.spawners.CloneCommand.java", "BodyUseAPI": [], "Fixed commit": "ce6b9b2dea271085480b81bd6127b3081ce7cf15", "Url": "https://api.github.com/repos/thebiologist13/CustomSpawners", "Date": "2013-01-09T02:53:19Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Boolean.parseBoolean(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!useSpawnArea) { spawner.setUseSpawnArea(useSpawnArea); }else if ((CustomSpawners.selectionPointOne.containsKey(player)) && (CustomSpawners.selectionPointTwo.containsKey(player))) { org.bukkit.World p1World = CustomSpawners.selectionPointOne.get(player).getWorld(); org.bukkit.World p2World = CustomSpawners.selectionPointTwo.get(player).getWorld(); if (!(p1World.equals(p2World))) { com.github.thebiologist13.commands.spawners.PLUGIN.sendMessage(player, ((org.bukkit.ChatColor.RED) + \"Spawn area selection points must be in the same world.\")); return; } org.bukkit.Location[] areaPoints = new org.bukkit.Location[2]; areaPoints[0] = CustomSpawners.selectionPointOne.get(player); areaPoints[1] = CustomSpawners.selectionPointTwo.get(player); spawner.setAreaPoints(areaPoints); spawner.setUseSpawnArea(useSpawnArea); }else { com.github.thebiologist13.commands.spawners.PLUGIN.sendMessage(player, ((org.bukkit.ChatColor.RED) + \"You must have an area selected for a spawner to use as the spawn area.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1669/buggy-version/CustomSpawners.src.com.github.thebiologist13.commands.spawners.SpawnAreaCommand.java", "BodyUseAPI": ["com.github.thebiologist13.Spawner.setUseSpawnArea(boolean)", "com.github.thebiologist13.Spawner.setUseSpawnArea(boolean)"], "Fixed commit": "ce6b9b2dea271085480b81bd6127b3081ce7cf15", "Url": "https://api.github.com/repos/thebiologist13/CustomSpawners", "Date": "2013-01-09T02:53:19Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(t.isPrimitive())) { hierarchy.framework.NonprimitiveTask npt = ((hierarchy.framework.NonprimitiveTask) (t)); return npt.reward(s, a, sPrime); }else { throw new java.lang.RuntimeException(\"should not give a primitive task for getReward\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4710/buggy-version/src.hierarchy.framework.GroundedTask.java", "BodyUseAPI": [], "Fixed commit": "6172f31f34d9d9d1beb6a7e84dd14ab92cda193b", "Url": "https://api.github.com/repos/MAPLE-Robot-Subgoaling/MAPLE-PALM", "Date": "2017-08-31T17:34:13Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (oppositeTile != null) { sides.add(oppositeTile.getSide(side3)); sides.add(oppositeTile.getSide(side4)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3657/buggy-version/src.Board.java", "BodyUseAPI": ["java.util.ArrayList<Side>.add(oppositeTile.getSide(side4))", "Tile.getSide(SideDirection)", "Tile.getSide(SideDirection)", "java.util.ArrayList<Side>.add(oppositeTile.getSide(side3))"], "Fixed commit": "b53c8c5dd22010a917ef3237d37955501e0ede92", "Url": "https://api.github.com/repos/DVK1337/INTE-project", "Date": "2015-10-27T13:49:21Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MovementRules.getCoordinateBySideDirection(Coordinate,SideDirection)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((((oppositeCoordinate.getX()) < (Board.BOARD_WIDTH)) && ((oppositeCoordinate.getX()) >= 0)) && ((oppositeCoordinate.getY()) < (Board.BOARD_WIDTH))) && ((oppositeCoordinate.getY()) >= 0)) { oppositeTile = getTile(oppositeCoordinate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3657/buggy-version/src.Board.java", "BodyUseAPI": ["Board.getTile(Coordinate)"], "Fixed commit": "b53c8c5dd22010a917ef3237d37955501e0ede92", "Url": "https://api.github.com/repos/DVK1337/INTE-project", "Date": "2015-10-27T13:49:21Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.fromDate) == null) { errors.add(\"fromDate is required\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2866/buggy-version/src.main.java.com.angkorteam.fintech.dto.builder.FixedBuilder.java", "BodyUseAPI": [], "Fixed commit": "1674b475aefb4fe52a9709fdd050907eb0b5ceab", "Url": "https://api.github.com/repos/PkayJava/fintech", "Date": "2017-10-18T02:53:35Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.depositAmount) == null) { errors.add(\"depositAmount is required\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2866/buggy-version/src.main.java.com.angkorteam.fintech.dto.builder.FixedBuilder.java", "BodyUseAPI": [], "Fixed commit": "1674b475aefb4fe52a9709fdd050907eb0b5ceab", "Url": "https://api.github.com/repos/PkayJava/fintech", "Date": "2017-10-18T02:53:35Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) == 0) { head = t; head.next = t; tail = t; }else { tail.next = t; tail = t; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/646/buggy-version/CIS163Q.java", "BodyUseAPI": [], "Fixed commit": "01467937272708f9e75ba253086300f01140cc8b", "Url": "https://api.github.com/repos/irawoodring/CIS_163-Queue_From_LL", "Date": "2017-04-02T16:50:20Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["def.getUnderlyingClassDefCall().getReferent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (resolvedUnderlyingClass != null) { myErrorReporter.report(new com.jetbrains.jetpad.vclang.naming.error.WrongDefinition(\"Expected a class\", def)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3951/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.naming.oneshot.visitor.DefinitionResolveNameVisitor.java", "BodyUseAPI": [], "Fixed commit": "7db8f764eb4061a3a3e73054a9ca8f7e6709a66b", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2016-11-16T17:02:07Z"},
{"Line": "=>624", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ListAdapter.getCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (adjPosition < adapterCount) { return mAdapter.getItemViewType(adjPosition); }else if (adapterCount != 0) { return mAdapter.getItemViewType((adapterCount - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5046/buggy-version/library.src.main.java.jp.co.recruit_mp.android.widget.HeaderFooterGridView.java", "BodyUseAPI": ["android.widget.ListAdapter.getItemViewType(int)", "android.widget.ListAdapter.getItemViewType(int)"], "Fixed commit": "fd4c3b2520dded1accc58a4f16a86ea018f678b6", "Url": "https://api.github.com/repos/recruit-mp/android-HeaderFooterGridView", "Date": "2015-02-20T08:01:12Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (creatingMode) { newUser = new de.randi2.model.Login(); }else { newUser = userService.prepareInvestigator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6304/buggy-version/src.main.java.de.randi2.jsf.controllerBeans.LoginHandler.java", "BodyUseAPI": [], "Fixed commit": "1f302e20b6bb3d6c1f1fa67a3580639967b0e25c", "Url": "https://api.github.com/repos/randi2/randi2", "Date": "2011-08-25T09:39:54Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (creatingMode) { userService.create(newUser, selectedTrialSite); }else { userService.register(newUser, selectedTrialSite); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6304/buggy-version/src.main.java.de.randi2.jsf.controllerBeans.LoginHandler.java", "BodyUseAPI": [], "Fixed commit": "1f302e20b6bb3d6c1f1fa67a3580639967b0e25c", "Url": "https://api.github.com/repos/randi2/randi2", "Date": "2011-08-25T09:39:54Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR1)) v.setTextAlignment(com.rey.material.widget.TEXT_ALIGNMENT_CENTER);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7612/buggy-version/lib.src.main.java.com.rey.material.widget.YearPicker.java", "BodyUseAPI": [], "Fixed commit": "197f3ad5f5a9164f04c69d480cdda01207898f5d", "Url": "https://api.github.com/repos/thomas76/material", "Date": "2015-05-12T03:33:31Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == 1) { curValue = net.minecraft.util.MathHelper.clamp_int(curValue, 0, 255); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/424/buggy-version/src.pneumaticCraft.client.gui.GuiGPSTool.java", "BodyUseAPI": [], "Fixed commit": "95b5b77e00a1b454ab0ae930b0f01cd47c064c57", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2014-11-11T16:49:09Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5260/buggy-version/src.rgraph.Graph.java", "BodyUseAPI": [], "Fixed commit": "9afab82fc4fe8ccdd5927860b40faf9b11ca29b3", "Url": "https://api.github.com/repos/thekingh/mrs", "Date": "2016-04-05T16:50:22Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.sk89q.craftbook.mech.SignCopier.signs) == null) throw new com.sk89q.craftbook.util.exceptions.FastCommandException(\"SignCopier mechanic is not enabled!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5227/buggy-version/src.main.java.com.sk89q.craftbook.bukkit.commands.SignEditCommands.java", "BodyUseAPI": [], "Fixed commit": "1293000044b4c80bbd8e01123e3be4e908770a0d", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2014-02-16T02:00:05Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stats_.count_) != 0) { output.write(new java.lang.String(((\"ldbc.snb.interactive.update_interleave:\" + (((stats_.maxDate_) - (stats_.minDate_)) / (stats_.count_))) + \"\\n\")).getBytes()); }else { output.write(new java.lang.String((\"ldbc.snb.interactive.update_interleave:\" + (\"0\" + \"\\n\"))).getBytes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4292/buggy-version/src.main.java.ldbc.snb.datagen.serializer.UpdateEventSerializer.java", "BodyUseAPI": ["java.lang.String.getBytes()", "java.io.OutputStream.write(byte[])"], "Fixed commit": "35f41f4a60e3aead6395c1648d563aa7a16e339e", "Url": "https://api.github.com/repos/ldbc/ldbc_snb_datagen", "Date": "2015-01-07T21:33:35Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((preprocessor) != null) text = preprocessor.preprocess(text);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7056/buggy-version/src.pl.edu.agh.pcontology.textprocessing.KeyWordsAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "8959a70b07b96d9c05f450853592581592ae5ed9", "Url": "https://api.github.com/repos/jrakoczy/pcontology", "Date": "2013-11-26T15:56:03Z"},
{"Line": "=>1155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((call) != null) { call.tell(new org.mobicents.servlet.restcomm.telephony.Hangup(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8057/buggy-version/restcomm.restcomm.interpreter.src.main.java.org.mobicents.servlet.restcomm.interpreter.VoiceInterpreter.java", "BodyUseAPI": [], "Fixed commit": "14424bc5dbf3161c5fee910ff077945479dbbc2c", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2015-04-01T14:41:33Z"},
{"Line": "=>900", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.sip.SipApplicationSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (call != null) call.tell(request, self);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8057/buggy-version/restcomm.restcomm.telephony.src.main.java.org.mobicents.servlet.restcomm.telephony.CallManager.java", "BodyUseAPI": ["akka.actor.ActorRef.tell(javax.servlet.sip.SipServletRequest,akka.actor.ActorRef)"], "Fixed commit": "14424bc5dbf3161c5fee910ff077945479dbbc2c", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2015-04-01T14:41:33Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mInnerAdapter) != null) mInnerAdapter.onViewAttachedToWindow(holder);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2739/buggy-version/src.main.java.com.corelibs.views.recycler.AbstractHeaderAndFooterWrapper.java", "BodyUseAPI": [], "Fixed commit": "0af77784a7b499d581b36536b19969a1de5c0871", "Url": "https://api.github.com/repos/TheseYears/CoreLibs", "Date": "2016-09-23T06:27:52Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataService) != null) { dataService.sendOffCommand(id, new de.rpi_controlcenter.shc.Service.SHCConnectorService.CommandExecutedEvent() { @java.lang.Override public void commandExecuted(java.lang.String error) { if (ready) { if (error.equals(\"\")) { android.widget.Toast.makeText(v.getContext(), R.string.errors_sendCommand_succsess, Toast.LENGTH_SHORT).show(); getArguments().putInt(\"state\", 0); updateState(); }else { android.widget.Toast.makeText(v.getContext(), ((R.string.errors_sendCommand_error) + error), Toast.LENGTH_LONG).show(); } }else { android.widget.Toast.makeText(v.getContext(), R.string.errors_notRady, Toast.LENGTH_LONG).show(); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1867/buggy-version/app.src.main.java.de.rpi_controlcenter.shc.Fragment.RoomElements.DoubleButtonFragment.java", "BodyUseAPI": [], "Fixed commit": "f8d057f3759e8a172bc04651b337931e2695900d", "Url": "https://api.github.com/repos/Dietmar-Franken/SHC_Android_APP", "Date": "2015-12-13T16:13:31Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (roomElements == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1867/buggy-version/app.src.main.java.de.rpi_controlcenter.shc.Fragment.RoomViewFragment.java", "BodyUseAPI": [], "Fixed commit": "f8d057f3759e8a172bc04651b337931e2695900d", "Url": "https://api.github.com/repos/Dietmar-Franken/SHC_Android_APP", "Date": "2015-12-13T16:13:31Z"},
{"Line": "=>758", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.game.Game.getPlayer(possibleBlocker.getControllerId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (defender != null) { if ((possibleBlocker.getBlocking()) > 0) { removeBlocker(possibleBlockerId, game); } defender.declareBlocker(defender.getId(), possibleBlockerId, toBeBlockedCreatureId, game); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5028/buggy-version/Mage.src.main.java.mage.game.combat.Combat.java", "BodyUseAPI": ["mage.players.Player.getId()", "mage.players.Player.declareBlocker(defender.getId(),java.util.UUID,java.util.UUID,mage.game.Game)"], "Fixed commit": "56485d7ee61004a9d38a956f4a45af3ecef16408", "Url": "https://api.github.com/repos/menocar/mage", "Date": "2016-01-15T21:59:29Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((current.indexOf(\" \")) != (-1)) com = current.substring(0, current.indexOf(\" \")); else com = current;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8346/buggy-version/src.Parser.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "cbd4385cc88b4f53e73b81eaa8a0a6afab5e80de", "Url": "https://api.github.com/repos/salevin/VirtualMachineTranslator", "Date": "2015-11-17T17:14:05Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (buf_read == (-1)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4924/buggy-version/src.main.java.com.guneetsahai.lbLogAnalyzer.services.FileService.java", "BodyUseAPI": [], "Fixed commit": "d0cd580d4f7a20962152a02771b7af41d473ff4f", "Url": "https://api.github.com/repos/guneetsahai/aws-lb-log-analyzer", "Date": "2017-03-12T05:41:52Z"},
{"Line": "=>652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((generalDomain == null) && ((dna.util.Config.get(((prefix + s) + (dna.plot.PlotConfig.customPlotSuffixDomain)))) != null)) { generalDomain = dna.util.Config.get(((prefix + s) + (dna.plot.PlotConfig.customPlotSuffixDomain))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5380/buggy-version/src.dna.plot.PlotConfig.java", "BodyUseAPI": ["dna.util.Config.get(java.lang.String)"], "Fixed commit": "dedd3df590b8b332da46ba516894ea81a026e5a4", "Url": "https://api.github.com/repos/BenjaminSchiller/DNA", "Date": "2015-10-06T15:20:17Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mog.kontax.kontax.NewContactActivity.getRotatedImageBitmap(android.graphics.Bitmap)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rotatedImageBitmap != null) { imageBitmap = rotatedImageBitmap; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4054/buggy-version/app.src.main.java.com.mog.kontax.kontax.NewContactActivity.java", "BodyUseAPI": [], "Fixed commit": "54f5d7afa4109d720339047d6359f415c2e2cd78", "Url": "https://api.github.com/repos/mog96/Kontax", "Date": "2017-07-26T13:48:41Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reachedEnd) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1707/buggy-version/de.xwic.etlgine.core.src.de.xwic.etlgine.extractor.xls.XLSExtractor.java", "BodyUseAPI": [], "Fixed commit": "c7f29c1a2ade74ba587744c17596531652d98d93", "Url": "https://api.github.com/repos/xwic/etlgine", "Date": "2015-06-11T09:41:19Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (syllabifier == null) { syllabifier = new marytts.modules.phonemiser.Syllabifier(this.allophoneSet, this.removeTrailingOneFromPhones); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2830/buggy-version/marytts-runtime.src.main.java.marytts.modules.JPhonemiser.java", "BodyUseAPI": [], "Fixed commit": "33f9f36feb8df3b1036aa8707395cc7d9c7b4697", "Url": "https://api.github.com/repos/giuliopaci/marytts", "Date": "2012-10-26T15:52:30Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editTextPriority.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((priorityText == null) || (priorityText.isEmpty())) { android.widget.Toast toast = android.widget.Toast.makeText(getApplicationContext(), \"Niste vnesli vseh vrednosti\", Toast.LENGTH_LONG); toast.show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1701/buggy-version/app.src.main.java.com.example.sarp_mobile.AlgorithmsSwipeActivity.java", "BodyUseAPI": [], "Fixed commit": "4f4eebf1df3996ea83766737d0e7a33bfe43f7d7", "Url": "https://api.github.com/repos/nkosta/SARP", "Date": "2015-01-11T17:17:07Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.slackspace.openkeepass.domain.KeePassHeader.getValue(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value != null) { size += (value.length) + (de.slackspace.openkeepass.domain.KeePassHeader.SIZE_OF_FIELD_LENGTH_BUFFER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2987/buggy-version/src.main.java.de.slackspace.openkeepass.domain.KeePassHeader.java", "BodyUseAPI": [], "Fixed commit": "2d59e91f38e4e7214fff7a9688b1a851a21f5fd3", "Url": "https://api.github.com/repos/cternes/openkeepass", "Date": "2015-12-03T11:58:44Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (res.endsWith(XMPConstants.LANG_ALT)) { return res; }else { for (org.verapdf.model.tools.xmp.ArrayTypeValidator.ArrayTypeEnum entr : ArrayTypeValidator.ArrayTypeEnum.values()) { java.lang.String prefix = entr.getType(); if (res.endsWith(prefix)) { res += \" \" + (XMPConstants.TEXT); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2663/buggy-version/model-implementation.src.main.java.org.verapdf.model.tools.xmp.ValidatorsContainer.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "d672d05ef3ce93ee68b4fddf9cd4b9c0d276867a", "Url": "https://api.github.com/repos/BezrukovM/veraPDF-library", "Date": "2016-02-10T08:31:04Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ut.dph.dao.impl.transactionInDAOImpl.getTransactionTarget(summary.getbatchId(),summary.gettransactionInId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (targetDetails != null) { batchIdList.add(summary.getbatchId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8702/buggy-version/src.main.java.com.ut.dph.dao.impl.transactionInDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "0d84a2809b37aadf3566ef1899b71f7b346744fa", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2016-05-16T14:10:54Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.aufdemrand.denizencore.utilities.debugging.dB.verbose) { dB.log(((((\"Trying for' \" + input) + \"' with '\") + tbuf) + \"' remaining!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6255/buggy-version/src.main.java.org.mcmonkey.dIRCBot.IRCServerHolder.java", "BodyUseAPI": [], "Fixed commit": "32bf843ec456c107f35c3fc60fa868f277f8671a", "Url": "https://api.github.com/repos/Fortifier42/dIRCBot", "Date": "2015-07-26T05:04:45Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.aufdemrand.denizencore.utilities.debugging.dB.verbose) { dB.log(((((\"Found char '\" + c) + \"' yielding now '\") + buffer) + \"'!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6255/buggy-version/src.main.java.org.mcmonkey.dIRCBot.IRCServerHolder.java", "BodyUseAPI": [], "Fixed commit": "32bf843ec456c107f35c3fc60fa868f277f8671a", "Url": "https://api.github.com/repos/Fortifier42/dIRCBot", "Date": "2015-07-26T05:04:45Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.kolkos.cryptoManager.services.ApiRequestService.getCoinBySymbol(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (coin == null) { throw new java.lang.IllegalArgumentException(((\"Unknown coin '\" + coinSymbol) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5802/buggy-version/src.main.java.nl.kolkos.cryptoManager.controllers.ApiRequestController.java", "BodyUseAPI": [], "Fixed commit": "6109270a01e6c9eaed2cdf9d4dc551ff1f3fae9f", "Url": "https://api.github.com/repos/kolkos/cryptoManager", "Date": "2017-12-29T14:39:34Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.kolkos.cryptoManager.repositories.CoinRepository.findByCoinMarketCapCoinSymbol(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (coin == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5802/buggy-version/src.main.java.nl.kolkos.cryptoManager.services.CoinService.java", "BodyUseAPI": [], "Fixed commit": "6109270a01e6c9eaed2cdf9d4dc551ff1f3fae9f", "Url": "https://api.github.com/repos/kolkos/cryptoManager", "Date": "2017-12-29T14:39:34Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((fccf.getRecipes().size()) > 53) || (rows > 6)) { p.sendMessage(((((org.bukkit.ChatColor.RED) + \"This factory has more than 53 recipes and the GUI for it can't be opened. Either complain to \") + \"your admin to have them put less recipes in this factory or complain to /u/maxopoly to add \") + \"scrollviews to this\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8706/buggy-version/src.com.github.igotyou.FactoryMod.interactionManager.FurnCraftChestInteractionManager.java", "BodyUseAPI": [], "Fixed commit": "67760c12fc95a0869c4b2498b39f6202e9aa9a5a", "Url": "https://api.github.com/repos/DevotedMC/FactoryMod", "Date": "2016-07-27T20:28:23Z"},
{"Line": "=>658", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dot < (dotRevealFractions.length)) { dotRevealFractions[dot] = fraction; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/9070/buggy-version/InkPageIndicator.src.main.java.com.pixelcan.inkpageindicator.InkPageIndicator.java", "BodyUseAPI": [], "Fixed commit": "3f22da31a157afc7a19053dbbd34bf9d4e1ce772", "Url": "https://api.github.com/repos/DavidPacioianu/InkPageIndicator", "Date": "2016-06-11T10:28:57Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (humanPlayersNumber > 0) { java.lang.System.out.println(\"Please enter the names of the human players: \"); java.util.stream.IntStream.range(0, humanPlayersNumber).forEach(( i) -> names.add(getNextName((i + 1), names))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/345/buggy-version/src.com.monopoly.view.View.java", "BodyUseAPI": ["java.util.stream.IntStream.range(int,int)", "java.util.stream.IntStream.forEach(java.util.function.IntConsumer)"], "Fixed commit": "25af45642e8383db280c6256e6f34e143fd9f23f", "Url": "https://api.github.com/repos/roslan22/MonopolJava", "Date": "2016-04-09T15:57:29Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (programProduct.dosesPerMonth)) { generator.writeNumberField(\"dosesPerMonth\", programProduct.dosesPerMonth); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5605/buggy-version/src.main.java.org.openlmis.referencedata.domain.ProgramProduct.java", "BodyUseAPI": ["com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,java.lang.Integer)"], "Fixed commit": "b86725b8f3ff68f31a3ba3d66eafb37419f7ce33", "Url": "https://api.github.com/repos/OpenLMIS/openlmis-referencedata", "Date": "2016-09-09T22:33:43Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((interest.length) > 0) && ((interest[0]) != \"\")) { for (java.lang.String str : interest) { mInterestList.setItemChecked(java.lang.Integer.valueOf(str), true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5100/buggy-version/app.src.main.java.edu.dartmouth.cs.together.FilterActivity.java", "BodyUseAPI": [], "Fixed commit": "d99f087a7c66856505164a9a6bf16648923e6f76", "Url": "https://api.github.com/repos/silvia104/Together-Dartmouth", "Date": "2016-02-29T22:07:06Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (matchGrammar(ctx.getChild(0), new int[]{ RETURN, RULE_expr })) { errorHandler.unreachableCode(ctx.getChild(2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3201/buggy-version/src.AntlrVisitor.java", "BodyUseAPI": ["WaccVisitorErrorHandler.unreachableCode(ctx.getChild(2))", "StatContext.getChild(int)"], "Fixed commit": "a745012c1305552b428a35441f11be756a3ad6b5", "Url": "https://api.github.com/repos/adamhosier/WACC-compiler", "Date": "2015-11-15T23:21:33Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mSpeechInitialized) mSpeechRecognizer.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3426/buggy-version/app.src.main.java.org.main.smartmirror.smartmirror.VoiceService.java", "BodyUseAPI": [], "Fixed commit": "287bdffd6f89709897dd07b45191e95bbbe68770", "Url": "https://api.github.com/repos/omgshirt/smartmirror", "Date": "2015-11-24T07:04:10Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dir == null) { dir = new java.io.File(\".\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7139/buggy-version/src.org.ashvm.Ashvm.java", "BodyUseAPI": [], "Fixed commit": "bdb1e12119533582e86a88194ceef197cfe0c1a6", "Url": "https://api.github.com/repos/henkman/ashvm", "Date": "2011-07-01T14:01:20Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.size) != null) { lc.setTotalBytes(this.size); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4162/buggy-version/modules.core.src.main.java.com.elasticinbox.core.model.Message.java", "BodyUseAPI": [], "Fixed commit": "c84b0effa5cb430998a1dff1773a960e5cd5ab0d", "Url": "https://api.github.com/repos/elasticinbox/elasticinbox", "Date": "2013-06-30T21:52:50Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.listenChannels.isEmpty()) { event.getTextChannel().sendMessage(((\"Currently not listening to any channel. Add a channel to the listen list with \" + (this.configuration.commandPrefix)) + \"listen\")).queue(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2450/buggy-version/Bouncer.src.main.java.com.kvdheijden.discordbots.bouncer.Bouncer.java", "BodyUseAPI": [], "Fixed commit": "f5712398a6234a222670c464c4ebd3c14c0c19b6", "Url": "https://api.github.com/repos/kvdheijden/discordbots", "Date": "2017-09-17T17:37:00Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opendaylight.controller.networkconfig.neutron.INeutronRouterAware.canAttachInterface(org.opendaylight.controller.networkconfig.neutron.NeutronRouter,org.opendaylight.controller.networkconfig.neutron.NeutronRouter_Interface)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((status < 200) || (status > 299)) return javax.ws.rs.core.Response.status(status).build();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5681/buggy-version/opendaylight.northbound.networkconfiguration.neutron.src.main.java.org.opendaylight.controller.networkconfig.neutron.northbound.NeutronRoutersNorthbound.java", "BodyUseAPI": ["javax.ws.rs.core.Response.status(int)", "javax.ws.rs.core.Response.status(status).build()"], "Fixed commit": "c46e223995956f1f759c551163c212947c1e2fb7", "Url": "https://api.github.com/repos/mandeepdhami/controller", "Date": "2014-08-01T02:31:30Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opendaylight.controller.networkconfig.neutron.INeutronRouterAware.canDetachInterface(org.opendaylight.controller.networkconfig.neutron.NeutronRouter,org.opendaylight.controller.networkconfig.neutron.NeutronRouter_Interface)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((status < 200) || (status > 299)) return javax.ws.rs.core.Response.status(status).build();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5681/buggy-version/opendaylight.northbound.networkconfiguration.neutron.src.main.java.org.opendaylight.controller.networkconfig.neutron.northbound.NeutronRoutersNorthbound.java", "BodyUseAPI": ["javax.ws.rs.core.Response.status(status).build()", "javax.ws.rs.core.Response.status(int)"], "Fixed commit": "c46e223995956f1f759c551163c212947c1e2fb7", "Url": "https://api.github.com/repos/mandeepdhami/controller", "Date": "2014-08-01T02:31:30Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (line.equals(\".bye\")) { java.lang.System.out.println(line); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5622/buggy-version/ChatClient.java", "BodyUseAPI": [], "Fixed commit": "7a4a9b3df834938a71e86d4ddeae01e5478ed4e0", "Url": "https://api.github.com/repos/Caaraya/cryptography_proj", "Date": "2017-11-09T01:11:46Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (hash.equals(\".bye\")) { java.lang.System.out.println(hash); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5622/buggy-version/ChatClient.java", "BodyUseAPI": [], "Fixed commit": "7a4a9b3df834938a71e86d4ddeae01e5478ed4e0", "Url": "https://api.github.com/repos/Caaraya/cryptography_proj", "Date": "2017-11-09T01:11:46Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tregression.empiricalstudy.EmpiricalTrial.getRootCauseFinder()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (finder != null) { java.util.List<tregression.empiricalstudy.MendingRecord> mendings = finder.getMendingRecordList(); for (tregression.empiricalstudy.MendingRecord r : mendings) { row.createCell((count++)).setCellValue(r.getTypeString()); row.createCell((count++)).setCellValue(r.getStartOrder()); row.createCell((count++)).setCellValue(r.getCorrespondingStepOnReference()); row.createCell((count++)).setCellValue(r.getReturningPoint()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1437/buggy-version/tregression.src.main.tregression.empiricalstudy.TrialRecorder.java", "BodyUseAPI": ["tregression.empiricalstudy.RootCauseFinder.getMendingRecordList()"], "Fixed commit": "0c6a88d1eb9474c04b800cf6900a9b22e5d1e41a", "Url": "https://api.github.com/repos/llmhyy/tregression", "Date": "2017-12-08T13:48:54Z"},
{"Line": "=>1090", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.silverpeas.components.kmelia.service.DefaultKmeliaService.getProfile(pubDetail.getUpdaterId(),org.silverpeas.core.node.model.NodePK)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (SilverpeasRole.writer.isInRole(profile)) { newStatus = org.silverpeas.core.contribution.publication.model.PublicationDetail.TO_VALIDATE; }else if ((pubDetail.isRefused()) && ((SilverpeasRole.admin.isInRole(profile)) || (SilverpeasRole.publisher.isInRole(profile)))) { newStatus = org.silverpeas.core.contribution.publication.model.PublicationDetail.VALID; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/1051/buggy-version/kmelia.kmelia-library.src.main.java.org.silverpeas.components.kmelia.service.DefaultKmeliaService.java", "BodyUseAPI": ["SilverpeasRole.admin.isInRole(java.lang.String)", "SilverpeasRole.publisher.isInRole(java.lang.String)"], "Fixed commit": "6abfe0df418f18af4dbed7ec1f17838432ccf1fd", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Components", "Date": "2017-02-21T15:56:10Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (textField1.getText().isEmpty()) { }else { name = textField1.getText(); frame2.dispose(); addClient(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4573/buggy-version/src.AddClient.java", "BodyUseAPI": ["javax.swing.JTextField.getText()"], "Fixed commit": "0db515cd5d1c906b0d175c9593fe9f49a321514f", "Url": "https://api.github.com/repos/MartinCosta/FicheroPacha", "Date": "2017-09-16T01:10:12Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(<nulltype>,java.lang.String,GUI.Two.Util.getInstance().DIMENSIONLESSFACTORS_FILE.getAbsolutePath())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (path != null) { GUI.Two.Util.getInstance().DIMENSIONLESSFACTORS_FILENAME = path; javax.swing.JOptionPane.showMessageDialog(null, ((\"Erfolgreich den Pfad auf: \" + path) + \" ge\ufffdndert\"), \"Info\", javax.swing.JOptionPane.INFORMATION_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7160/buggy-version/Apfelkuchen.src.GUI.Two.Menu.java", "BodyUseAPI": ["javax.swing.JOptionPane.showMessageDialog(<nulltype>,java.lang.String,java.lang.String,int)"], "Fixed commit": "1d14c250321b2ce46f010510c1aec6728d835e86", "Url": "https://api.github.com/repos/Sycend/Apfelkuchen", "Date": "2015-01-26T07:32:17Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(<nulltype>,java.lang.String,GUI.Two.Util.getInstance().TESTCASE_CSV_FILE.getAbsolutePath())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (path != null) { GUI.Two.Util.getInstance().TESTCASE_CSV_FILENAME = path; javax.swing.JOptionPane.showMessageDialog(null, ((\"Erfolgreich den Pfad auf: \" + path) + \" ge\ufffdndert\"), \"Info\", javax.swing.JOptionPane.INFORMATION_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7160/buggy-version/Apfelkuchen.src.GUI.Two.Menu.java", "BodyUseAPI": ["javax.swing.JOptionPane.showMessageDialog(<nulltype>,java.lang.String,java.lang.String,int)"], "Fixed commit": "1d14c250321b2ce46f010510c1aec6728d835e86", "Url": "https://api.github.com/repos/Sycend/Apfelkuchen", "Date": "2015-01-26T07:32:17Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(<nulltype>,java.lang.String,GUI.Two.Util.getInstance().RELEVANTFACTORS_FILE.getAbsolutePath())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (path != null) { GUI.Two.Util.getInstance().RELEVANTFACTORS_FILENAME = path; javax.swing.JOptionPane.showMessageDialog(null, ((\"Erfolgreich den Pfad auf: \" + path) + \" ge\ufffdndert\"), \"Info\", javax.swing.JOptionPane.INFORMATION_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7160/buggy-version/Apfelkuchen.src.GUI.Two.Menu.java", "BodyUseAPI": ["javax.swing.JOptionPane.showMessageDialog(<nulltype>,java.lang.String,java.lang.String,int)"], "Fixed commit": "1d14c250321b2ce46f010510c1aec6728d835e86", "Url": "https://api.github.com/repos/Sycend/Apfelkuchen", "Date": "2015-01-26T07:32:17Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((caveExplorer.MahinAndVeeraj.EventMahinAndVeeraj.win) == false) { caveExplorer.caveExplorer.readSequence(caveExplorer.caveExplorer.startText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/8459/buggy-version/MedusaSlayer101.src.caveExplorer.caveExplorer.java", "BodyUseAPI": [], "Fixed commit": "3a5bdfcae650b1242be954f5db978cf0b19a13ab", "Url": "https://api.github.com/repos/DanielZubarchuk/MedusaSlayer101", "Date": "2016-11-23T03:15:48Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(active)) { startTime = new java.util.Date(); active = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7788/buggy-version/app.src.main.java.fakesetgame.seniordesign.model.Game.java", "BodyUseAPI": [], "Fixed commit": "896546f7d823c75a0b1aaa061b9a2cf5a11ab920", "Url": "https://api.github.com/repos/FakeSetGame/SeniorDesign", "Date": "2014-10-13T14:19:41Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) timer.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2129/buggy-version/src.net.honeybadgerlabs.adventurequest.TitleActivity.java", "BodyUseAPI": [], "Fixed commit": "d213ff62f6dc67f24a105eac5b71cfbdfcf9b887", "Url": "https://api.github.com/repos/bentglasstube/adventure-quest", "Date": "2012-12-04T16:45:19Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hashSet.contains(integer)) { hashSet.remove(integer); int result; for (int inBorders = lowerBound; inBorders <= upperBound; inBorders++) { result = inBorders - integer; if ((hashSet.contains(result)) && (!(hashSet.contains(integer)))) count++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7856/buggy-version/src.com.littlewhywhat.algorithms.twosum.TwoSumAlgo.java", "BodyUseAPI": ["java.util.HashSet<java.lang.Integer>.remove(int)", "java.util.HashSet<java.lang.Integer>.contains(int)", "java.util.HashSet<java.lang.Integer>.contains(int)"], "Fixed commit": "25fbb6340bacf9aaf4022afa9d11f6cffad25885", "Url": "https://api.github.com/repos/littlewhywhat/Algorithms", "Date": "2014-06-19T13:21:13Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(il.org.spartan.spartanizer.research.patterns.PutIfAbsent.tipper.canTip(\u00a2))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4759/buggy-version/src.main.java.il.org.spartan.spartanizer.research.patterns.PutIfAbsent.java", "BodyUseAPI": [], "Fixed commit": "5b8a33a8ff74ab2daf919e52a8404064bdb134ea", "Url": "https://api.github.com/repos/SpartanRefactoring/Main", "Date": "2016-12-25T07:04:10Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exoplatform.commons.notification.impl.service.storage.cache.CachedWebNotificationStorage.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (notification != null) { removePopover(notification); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5214/buggy-version/commons-component-common.src.main.java.org.exoplatform.commons.notification.impl.service.storage.cache.CachedWebNotificationStorage.java", "BodyUseAPI": ["org.exoplatform.commons.notification.impl.service.storage.cache.CachedWebNotificationStorage.removePopover(org.exoplatform.commons.api.notification.model.NotificationInfo)"], "Fixed commit": "c7eed61608e40d455f21511c74d8563bde822545", "Url": "https://api.github.com/repos/exodev/commons", "Date": "2015-01-21T05:27:07Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x >= (environement.Room.SIZE)) || (y >= (environement.Room.SIZE))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2878/buggy-version/src.environement.Room.java", "BodyUseAPI": [], "Fixed commit": "5f531b46e9ab4f1e63dd371d2deeab44319ddfdd", "Url": "https://api.github.com/repos/simonh88/ACL2017_LaraClette", "Date": "2017-11-16T10:02:22Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.stream.XMLStreamReader.getAttributeValue(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (map.get(attr).equals(\"stemmata\")) { }else { currNode.setProperty(map.get(attr), text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3850/buggy-version/stemmarest.src.main.java.net.stemmaweb.services.GraphMLToNeo4JParser.java", "BodyUseAPI": ["org.neo4j.graphdb.Node.setProperty(java.lang.String,java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "612bec286b6d579113b9d2ef6494c687c9f9812c", "Url": "https://api.github.com/repos/tohotforice/PSE2_DH", "Date": "2015-03-07T20:35:35Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sections.containsKey(\"continue\")) { appendSection(sections, builder, \"continue\", 1, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/4476/buggy-version/core.clipboarder.src.clipboarder.ContentSorter.java", "BodyUseAPI": ["clipboarder.ContentSorter.appendSection(java.util.Map<java.lang.String, java.lang.String>,java.lang.StringBuilder,java.lang.String,int,int)"], "Fixed commit": "82a3cdfb68d9c398238f022020f2680271fd70a8", "Url": "https://api.github.com/repos/firefoxpdm/gamebooks", "Date": "2016-10-15T20:39:26Z"},
{"Line": "=>643", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (finishOnBack) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7536/buggy-version/android.src.com.frostwire.android.gui.activities.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "daac8246b2838d6bfbe97465d1a7319a9b1381d0", "Url": "https://api.github.com/repos/frostwire/frostwire", "Date": "2016-07-23T17:20:42Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((point.getValue()) < (MIN_DRAWABLE_VALUE)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/2159/buggy-version/src.org.bodytrack.client.BaseSeriesPlotRenderer.java", "BodyUseAPI": [], "Fixed commit": "ff29740adc9070e9df582e07c0d700f58f4f3537", "Url": "https://api.github.com/repos/BodyTrack/Grapher", "Date": "2013-05-31T18:27:57Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wso2telco.services.dep.sandbox.util.CommonUtil.getNullOrTrimmedValue(wrapperDTO.getMnc())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (mnc != null) { validationRulesList.add(new com.wso2telco.dep.oneapivalidation.util.ValidationRule(com.wso2telco.dep.oneapivalidation.util.ValidationRule.VALIDATION_TYPE_OPTIONAL_INT_GE_ZERO, \"mnc\", mnc)); validationRulesList.add(new com.wso2telco.dep.oneapivalidation.util.ValidationRule(com.wso2telco.dep.oneapivalidation.util.ValidationRule.VALIDATION_TYPE_MANDATORY_INT_GE_ZERO, \"mcc\", mcc)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6087/buggy-version/dep-sandbox.src.main.java.com.wso2telco.services.dep.sandbox.servicefactory.customerinfo.GetAttributeRequestHandler.java", "BodyUseAPI": ["java.util.List<com.wso2telco.dep.oneapivalidation.util.ValidationRule>.add(com.wso2telco.dep.oneapivalidation.util.ValidationRule)"], "Fixed commit": "7655292d53865e54628261ceac811abb92d244ff", "Url": "https://api.github.com/repos/rshahintha/sandbox-service", "Date": "2017-01-18T07:04:17Z"},
{"Line": "=>1296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (slot instanceof org.jgll.grammar.slot.LastGrammarSlot) { return \"last\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5116/buggy-version/src.org.jgll.grammar.GrammarBuilder.java", "BodyUseAPI": [], "Fixed commit": "072df50d1c62ceb8279f0e4e107b669ba6f35054", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2013-09-17T15:34:58Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (throttle) { rateLimiter.acquire(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6694/buggy-version/src.main.java.com.variacode.coinmarketcap.CoinMarketCap.java", "BodyUseAPI": [], "Fixed commit": "140be1e02ed425eee727e2528584ae11fa9edba5", "Url": "https://api.github.com/repos/miguelantonio/coinmarketcap-java", "Date": "2017-07-30T01:32:41Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(net.ftb.data.Settings.getSettings().getPrivatePacks()[i].equals(\"\"))) { net.ftb.data.ModPack.loadXml(((net.ftb.data.Settings.getSettings().getPrivatePacks()[i]) + \".xml\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3529/buggy-version/src.net.ftb.gui.LaunchFrame.java", "BodyUseAPI": ["net.ftb.data.ModPack.loadXml(((net.ftb.data.Settings.getSettings().getPrivatePacks()[i]) + \".xml\"))"], "Fixed commit": "1df3db00f984aca6bfd83d9fd050dd4f40fbf583", "Url": "https://api.github.com/repos/Slowpoke101/FTBLaunch", "Date": "2012-12-18T17:17:46Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (members instanceof org.json.JSONArray) { org.json.JSONArray membersJSONArray = ((org.json.JSONArray) (members)); int membersJSONArrayLength = membersJSONArray.length(); for (int j = 0; j < membersJSONArrayLength; ++j) { org.json.JSONObject memberJSONObject = membersJSONArray.getJSONObject(j); if ((memberJSONObject.getInt(\"member\")) == 1) { int friendId = memberJSONObject.getInt(\"user_id\"); if ((data.mIsMember.get(friendId)) == null) { data.mIsMember.put(friendId, new java.util.ArrayList()); } data.mIsMember.get(friendId).add(groupId); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/509/buggy-version/app.src.main.java.com.qwert2603.vkmutualgroups.data.VKDataProvider.java", "BodyUseAPI": [], "Fixed commit": "fe537f6a70a46ab5a0c6f18d8a25666d8997f35b", "Url": "https://api.github.com/repos/qwert2603/VK-Mutual-Groups", "Date": "2016-09-23T09:24:26Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getInput(transform).getAll()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (allInputs.isEmpty()) { org.apache.flink.api.java.operators.DataSource<java.lang.String> dummySource = context.getExecutionEnvironment().fromElements(\"dummy\"); result = dummySource.flatMap(new org.apache.flink.api.common.functions.FlatMapFunction<java.lang.String, T>() { @java.lang.Override public void flatMap(java.lang.String s, org.apache.flink.util.Collector<T> collector) throws java.lang.Exception { } }).returns(new org.apache.beam.runners.flink.translation.types.CoderTypeInformation(((org.apache.beam.sdk.coders.Coder<T>) (org.apache.beam.sdk.coders.VoidCoder.of())))); }else { for (org.apache.beam.sdk.values.PCollection<T> collection : allInputs) { org.apache.flink.api.java.DataSet<T> current = context.getInputDataSet(collection); if (result == null) { result = current; }else { result = result.union(current); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/5829/buggy-version/runners.flink.runner.src.main.java.org.apache.beam.runners.flink.translation.FlinkBatchTransformTranslators.java", "BodyUseAPI": [], "Fixed commit": "5fa21dfa04c4d2cd259af01218e686d55be70b5c", "Url": "https://api.github.com/repos/kennknowles/beam", "Date": "2016-05-06T11:31:18Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((musicService) != null) && (musicBound)) && (musicService.isPng())) { return musicService.getPos(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6647/buggy-version/app.src.main.java.com.church.psalm.ScoreActivity.java", "BodyUseAPI": ["com.church.psalm.MusicService.getPos()"], "Fixed commit": "161c6f92209471996bb562a82f174e269d86b8a8", "Url": "https://api.github.com/repos/darrengyl/songsandhymnsoflife", "Date": "2015-10-14T04:52:19Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((musicService) != null) && (musicBound)) && (musicService.isPng())) { return musicService.getDur(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/6647/buggy-version/app.src.main.java.com.church.psalm.ScoreActivity.java", "BodyUseAPI": ["com.church.psalm.MusicService.getDur()"], "Fixed commit": "161c6f92209471996bb562a82f174e269d86b8a8", "Url": "https://api.github.com/repos/darrengyl/songsandhymnsoflife", "Date": "2015-10-14T04:52:19Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.length()) > 140) { input = input.replaceAll(\". @\", \".@\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7220/buggy-version/src.main.java.co.uk.jiveelection.campaign.utils.TextHelper.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "512de8e356e9be844f9786eb9f7a701cb47bc4fa", "Url": "https://api.github.com/repos/mezpahlan/jivecampaign", "Date": "2015-04-15T21:11:00Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.length()) > 140) { input = input.replaceAll(\"\\\\bper\\\\b\", \"a\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7220/buggy-version/src.main.java.co.uk.jiveelection.campaign.utils.TextHelper.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "512de8e356e9be844f9786eb9f7a701cb47bc4fa", "Url": "https://api.github.com/repos/mezpahlan/jivecampaign", "Date": "2015-04-15T21:11:00Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((obstacles.size()) > 0) { java.util.Stack<edu.cwru.sepia.agent.minimax.AstarAgent.MapLocation> aStarPath = aStarAgent.findPath(obstacles, footman, archer); if (aStarPath != null) { minDist = aStarPath.size(); }else { minDist = 50; } }else { minDist = java.lang.Math.sqrt(((java.lang.Math.pow(java.lang.Math.abs(xDiff), 2)) + (java.lang.Math.pow(java.lang.Math.abs(yDiff), 2)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/3287/buggy-version/src.edu.cwru.sepia.agent.minimax.GameState.java", "BodyUseAPI": ["edu.cwru.sepia.agent.minimax.AstarAgent.findPath(java.util.List<edu.cwru.sepia.environment.model.state.ResourceNode.ResourceView>,edu.cwru.sepia.agent.minimax.GameUnit,edu.cwru.sepia.agent.minimax.GameUnit)"], "Fixed commit": "e209f532643123b50752f5717103aec583219337", "Url": "https://api.github.com/repos/ShaunHoward/eecs391_pr02", "Date": "2015-03-05T19:21:48Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["searchTV.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (query.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V62/7828/buggy-version/app.src.main.java.com.example.employeezy.apinytimesapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "dfebf4b6a37261509df7dded2c01e2275a23169e", "Url": "https://api.github.com/repos/MdDoubleD/apiConnectorApp", "Date": "2016-05-24T22:54:37Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cartView) != null) { setCartViewTitle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7620/buggy-version/dlokiosk.src.main.java.com.dlohaiti.dlokiosk.AddProductsToSaleActivity.java", "BodyUseAPI": [], "Fixed commit": "a354937172f709f0898ebd48f957aae4f7bae797", "Url": "https://api.github.com/repos/dloHaiti/remote-monitoring-system", "Date": "2014-09-26T12:02:02Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hasTalk) == true) { talkCheck.setChecked(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7276/buggy-version/android.src.foo.fruitfox.evend.WelcomeActivity.java", "BodyUseAPI": [], "Fixed commit": "15a9dff0940184ab3e08c0490e89e6a0ef101b4b", "Url": "https://api.github.com/repos/cherrymathew/evend", "Date": "2015-04-15T19:14:20Z"},
{"Line": "=>1259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((highlighter) != null) highlighter.updateBounds();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7630/buggy-version/src.main.java.edu.mit.blocks.renderable.RenderableBlock.java", "BodyUseAPI": [], "Fixed commit": "2e681a84f44b6d821a0b0f70bbb38ab64e830a97", "Url": "https://api.github.com/repos/adamleonard/openblocks", "Date": "2012-04-12T07:46:18Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newMode >= 2.0) && (newMode < 2.005)) { craftoplugin.modules.protection.ChunkSection[] newNeighbors = getNeighborChunks(p.getLocation(), craftoplugin.modules.protection.ProtectionLoader.LOAD_RADIUS); for (craftoplugin.modules.protection.ChunkSection c : newNeighbors) { if (!(this.module.getBlocks().contains(c))) { neighborUpdates.add(c); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4965/buggy-version/src.craftoplugin.modules.protection.ProtectionLoader.java", "BodyUseAPI": [], "Fixed commit": "66bd1985335d281e087cc50e4a10055e22e4f600", "Url": "https://api.github.com/repos/Craftolution/CraftoPlugin", "Date": "2014-11-29T22:11:36Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((yearIndex >= 0) && (monthIndex >= 0)) && (dayIndex >= 0)) { newHeader += \"transactionDate\"; header = newHeader; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/419/buggy-version/src.se.freedrikp.econview.database.SQLDatabase.java", "BodyUseAPI": [], "Fixed commit": "1327e9fe450ca193008720850de0b106e933e344", "Url": "https://api.github.com/repos/freedrikp/Econview", "Date": "2016-08-14T10:10:19Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.ignite.internal.processors.cache.distributed.near.ERR_UPD.compareAndSet(this, null, e)) onComplete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2649/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.distributed.near.GridNearOptimisticSerializableTxPrepareFuture.java", "BodyUseAPI": [], "Fixed commit": "5351d8fb6f9fd858effdded844976139d54ac3dd", "Url": "https://api.github.com/repos/voipp/ignite", "Date": "2017-07-13T17:49:24Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(key instanceof org.jfree.chart.ui.RectangleEdge)) { throw new java.lang.IllegalArgumentException((\"The specified edge must be a \" + \"RectangleEdge object, or null\")); }else { org.jfree.chart.ui.RectangleEdge edge = ((org.jfree.chart.ui.RectangleEdge) (key)); if (edge == (org.jfree.chart.ui.RectangleEdge.TOP)) { this.topBlock = block; }else if (edge == (org.jfree.chart.ui.RectangleEdge.BOTTOM)) { this.bottomBlock = block; }else if (edge == (org.jfree.chart.ui.RectangleEdge.LEFT)) { this.leftBlock = block; }else if (edge == (org.jfree.chart.ui.RectangleEdge.RIGHT)) { this.rightBlock = block; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/852/buggy-version/src.main.java.org.jfree.chart.block.BorderArrangement.java", "BodyUseAPI": [], "Fixed commit": "d110654ad14167c9e2c1ad0abda64e431eaf7961", "Url": "https://api.github.com/repos/amishwins/jfreechart-fse", "Date": "2013-10-26T17:59:29Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sheet.getRow(rowNum).getCell(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (cell != null) { java.lang.String codeValue = cell.getStringCellValue(); codeMap.put(codeValue, rowNum); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8030/buggy-version/src.main.java.com.lephix.clairetools.command.CollectPODTracking.java", "BodyUseAPI": ["com.lephix.clairetools.command.Cell.getStringCellValue()"], "Fixed commit": "3bf6d3b0b3c1ec96d6cb9254371e07182e1ca4ba", "Url": "https://api.github.com/repos/lephix/claire-tools", "Date": "2016-02-19T06:05:54Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startOuterInclusive) == newRowIndex) if (newEndIndex < (startInnerInclusive)) return null; else newEndIndex = (startInnerInclusive) + ((halfsize - ((innerLength) - (startInnerInclusive))) % (innerLength));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4945/buggy-version/spliterator.src.main.java.part1.exercise.RectangleSpliterator.java", "BodyUseAPI": [], "Fixed commit": "315ddcc45061f5365841d843bc9496865e5392e1", "Url": "https://api.github.com/repos/FlashMillenium/epam_lab_09_2017_java8", "Date": "2017-10-18T09:23:58Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sk.pears.katalog.BuildConfig.DEBUG) android.util.Log.e(sk.pears.katalog.activity.fragment.settings.SettingsBasic.TAG, databaseError.getMessage());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5563/buggy-version/app.src.main.java.sk.pears.katalog.activity.fragment.settings.SettingsBasic.java", "BodyUseAPI": [], "Fixed commit": "b9423bdfe1b52451d0c4cdfa83378302a0477159", "Url": "https://api.github.com/repos/jozefhruska/katalog", "Date": "2017-03-23T22:06:52Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sk.pears.katalog.BuildConfig.DEBUG) android.util.Log.e(sk.pears.katalog.activity.fragment.settings.SettingsBasic.TAG, databaseError.getMessage());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5563/buggy-version/app.src.main.java.sk.pears.katalog.activity.fragment.settings.SettingsBasic.java", "BodyUseAPI": [], "Fixed commit": "b9423bdfe1b52451d0c4cdfa83378302a0477159", "Url": "https://api.github.com/repos/jozefhruska/katalog", "Date": "2017-03-23T22:06:52Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geekhub.tsibrovsky.sickukrainefinal.FirstActivity.getDataBaseData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((c.getCount()) == 0) { fragment1.setmArticlesLocal(org.geekhub.tsibrovsky.sickukrainefinal.FirstActivity.mArticles); org.geekhub.tsibrovsky.sickukrainefinal.FirstActivity.isShowingLiked = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7496/buggy-version/src.org.geekhub.tsibrovsky.sickukrainefinal.FirstActivity.java", "BodyUseAPI": [], "Fixed commit": "efa7a0a9ccdcd4143c29d625fb5457c76caedcdb", "Url": "https://api.github.com/repos/chebTS/SickFinal", "Date": "2013-03-11T21:13:54Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (primaryIndex != (-1)) { place.setPrimary(true); places.add(place); primaryPlaces.remove(primaryIndex); }else { place.setPrimary(false); userPlaces.add(place); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1630/buggy-version/src.main.java.org.tndata.android.compass.activity.PlacesActivity.java", "BodyUseAPI": ["java.util.List<org.tndata.android.compass.model.Place>.remove(int)"], "Fixed commit": "2659be126dd65dc5b2c076c0aa5f6b679dc5e2e2", "Url": "https://api.github.com/repos/izzyalonso/android-app", "Date": "2015-09-11T19:08:09Z"},
{"Line": "=>597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isActive())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3508/buggy-version/src.main.java.org.agilewiki.jactor.lpc.JLPCActor.java", "BodyUseAPI": [], "Fixed commit": "4d7dbda549d5c4e3a0a534793118e56b2e158471", "Url": "https://api.github.com/repos/laforge49/JActor", "Date": "2013-01-22T04:33:28Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSteps) > (totalSteps)) { (totalSteps)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1882/buggy-version/core.src.de.bitbrain.mindmazer.core.GameStats.java", "BodyUseAPI": [], "Fixed commit": "c60a012d1d018e4351a986f872493b1550fe83ba", "Url": "https://api.github.com/repos/bitbrain/mindmazer", "Date": "2017-08-12T22:57:05Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((SimpleGame.gameObjects.size()) > 1) { (counter)++; if ((counter) == ((SimpleGame.gameObjects.size()) - 1)) { counter = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/9240/buggy-version/core.src.com.simplegame.maps.Map.java", "BodyUseAPI": [], "Fixed commit": "c9323c238acf316fd381e02d09f484da6e5d989c", "Url": "https://api.github.com/repos/RustedBot/SimpleGame", "Date": "2016-04-24T18:04:40Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (nameType[0].contains(\"_\")) { java.lang.String name = nameType[0].replace(\"_\", \"\\\\_\"); generatedList += name; if ((nameType.length) == 2) { generatedList += \".\" + (nameType[1]); } }else { generatedList += file.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3200/buggy-version/tools.FileListGenerator.src.fileLister.FileListGenerate.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "d3853565c88c3d70b81da9539a17ff5bf59fb573", "Url": "https://api.github.com/repos/nandinc/Continuity", "Date": "2012-04-30T17:15:29Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.peripheral) != null) { this.peripheral.update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4359/buggy-version/src.openccsensors.common.turtle.TurtleUpgradeSensor.java", "BodyUseAPI": [], "Fixed commit": "5562e68a9369cd5d9ba334b66ab7105eb31f1fe3", "Url": "https://api.github.com/repos/lyqyd/OpenCCSensors", "Date": "2014-05-12T23:26:13Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zkoss.bind.Property.getBase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pbase instanceof org.zkoss.bind.proxy.FormProxyObject) { pbase = ((org.zkoss.bind.proxy.FormProxyObject) (pbase)).getOriginObject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4994/buggy-version/zkbind.src.org.zkoss.bind.impl.ValidationContextImpl.java", "BodyUseAPI": [], "Fixed commit": "ff9eda713cc671bc25d7f72abaff8c9e8fe09555", "Url": "https://api.github.com/repos/zkoss/zk", "Date": "2015-02-26T03:26:02Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obase instanceof org.zkoss.bind.proxy.FormProxyObject) { obase = ((org.zkoss.bind.proxy.FormProxyObject) (obase)).getOriginObject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4994/buggy-version/zkbind.src.org.zkoss.bind.impl.ValidationContextImpl.java", "BodyUseAPI": [], "Fixed commit": "ff9eda713cc671bc25d7f72abaff8c9e8fe09555", "Url": "https://api.github.com/repos/zkoss/zk", "Date": "2015-02-26T03:26:02Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.checkerframework.javacutil.AnnotationUtils.areSameIgnoringValues(type, org.checkerframework.checker.index.IndexAnnotatedTypeFactory.indexOrHigh)) { return org.checkerframework.checker.index.IndexAnnotatedTypeFactory.indexOrHigh; }else if (org.checkerframework.javacutil.AnnotationUtils.areSameIgnoringValues(type, org.checkerframework.checker.index.IndexAnnotatedTypeFactory.indexOrLow)) { return org.checkerframework.checker.index.IndexAnnotatedTypeFactory.indexOrLow; }else if (org.checkerframework.javacutil.AnnotationUtils.areSame(type, org.checkerframework.checker.index.IndexAnnotatedTypeFactory.indexBottom)) { return org.checkerframework.checker.index.IndexAnnotatedTypeFactory.indexBottom; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5812/buggy-version/checker.src.org.checkerframework.checker.index.IndexAnnotatedTypeFactory.java", "BodyUseAPI": ["org.checkerframework.javacutil.AnnotationUtils.areSame(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)", "org.checkerframework.javacutil.AnnotationUtils.areSameIgnoringValues(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"], "Fixed commit": "1d28fbdad413613c6c1e48be20106049b70edf90", "Url": "https://api.github.com/repos/gyhughes/checker-framework", "Date": "2016-05-31T20:12:20Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (email != null) { if (emails == null) { emails = new java.util.ArrayList<java.lang.String>(); } emails.add(email.getEmailAddress()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6007/buggy-version/src.java.com.idega.bpm.process.messages.SendMailMessageToRoles.java", "BodyUseAPI": ["com.idega.core.contact.data.Email.getEmailAddress()", "java.util.List<java.lang.String>.add(email.getEmailAddress())"], "Fixed commit": "c1aeb14a6ca065b1fa23e3dede133d8e59bfbc11", "Url": "https://api.github.com/repos/idega/com.idega.bpm", "Date": "2015-03-16T08:10:29Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityPickupItemEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (player.hasPermission(\"ItemFilter.use\")) { if (plugin.getConfig().contains(player.getUniqueId().toString())) { if (plugin.checkItem(player, event.getItem().getItemStack())) { if ((plugin.getConfig().getInt((\"mode.\" + (player.getUniqueId().toString())))) == 1) event.setCancelled(true); }else { if ((plugin.getConfig().getInt((\"mode.\" + (player.getUniqueId().toString())))) == 2) event.setCancelled(true); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4319/buggy-version/src.qlt.xwerswoodx.itemfilter.EHandler.java", "BodyUseAPI": ["player.getUniqueId().toString()", "org.bukkit.entity.Player.getUniqueId()", "plugin.getConfig().getInt((\"mode.\" + (player.getUniqueId().toString())))", "org.bukkit.entity.Player.getUniqueId()", "plugin.getConfig().contains(player.getUniqueId().toString())", "qlt.xwerswoodx.itemfilter.main.checkItem(org.bukkit.entity.Player,event.getItem().getItemStack())", "player.getUniqueId().toString()", "plugin.getConfig().getInt((\"mode.\" + (player.getUniqueId().toString())))", "player.getUniqueId().toString()", "org.bukkit.entity.Player.getUniqueId()"], "Fixed commit": "82c5c055b80a525b235a6236615f73e00c22ac5c", "Url": "https://api.github.com/repos/xwerswoodx/ItemFilter", "Date": "2017-10-06T15:36:12Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((bundleInfo.getCurrent_unique_tag()) != null) { if (!(bundleInfo.getCurrent_unique_tag().equals(bundleInfo.getUnique_tag()))) { changedBundles.add(bundleInfo.getPkgName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2117/buggy-version/atlas-gradle-plugin.dexpatch.src.main.java.com.taobao.checker.PatchChecker.java", "BodyUseAPI": ["BundleListing.BundleInfo.getPkgName()", "BundleListing.BundleInfo.getCurrent_unique_tag()", "BundleListing.BundleInfo.getUnique_tag()", "bundleInfo.getCurrent_unique_tag().equals(bundleInfo.getUnique_tag())", "java.util.List<java.lang.String>.add(bundleInfo.getPkgName())"], "Fixed commit": "0a45e15a006a8f560ab259e194e47d10d4b7f6f3", "Url": "https://api.github.com/repos/alibaba/atlas", "Date": "2017-09-05T09:15:11Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentBundleInfo.get(info.getPkgName())) != null) { info.setCurrent_unique_tag(currentBundleInfo.get(info.getPkgName()).getUnique_tag()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2117/buggy-version/atlas-gradle-plugin.dexpatch.src.main.java.com.taobao.android.reader.BundleListingUtil.java", "BodyUseAPI": ["currentBundleInfo.get(info.getPkgName()).getUnique_tag()", "BundleListing.BundleInfo.getPkgName()", "java.util.LinkedHashMap<java.lang.String, BundleListing.BundleInfo>.get(info.getPkgName())", "BundleListing.BundleInfo.setCurrent_unique_tag(currentBundleInfo.get(info.getPkgName()).getUnique_tag())"], "Fixed commit": "0a45e15a006a8f560ab259e194e47d10d4b7f6f3", "Url": "https://api.github.com/repos/alibaba/atlas", "Date": "2017-09-05T09:15:11Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((aCall.getResult()) != null) { if (((aCall.getResult().getName()) == null) || ((aCall.getResult().getName().getName()) == null)) { throw new de.gebit.integrity.exceptions.ModelRuntimeLinkException(\"Failed to resolve call result name\", aCall.getResult(), modelSourceExplorer.determineSourceInformation(aCall.getResult())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8201/buggy-version/de.gebit.integrity.runner.src.de.gebit.integrity.runner.modelcheck.DefaultModelChecker.java", "BodyUseAPI": ["de.gebit.integrity.dsl.Call.getResult()", "de.gebit.integrity.dsl.Call.getResult()", "aCall.getResult().getName()", "aCall.getResult().getName().getName()", "de.gebit.integrity.dsl.Call.getResult()", "de.gebit.integrity.dsl.Call.getResult()", "aCall.getResult().getName()", "de.gebit.integrity.modelsource.ModelSourceExplorer.determineSourceInformation(aCall.getResult())"], "Fixed commit": "c272d31d005a7ff92b62cf64941c975dffc4d762", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2014-11-19T13:32:41Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(playList.getItems().containsAll(io.github.lukas2005.DeviceModApps.apps.ApplicationMusicPlayer.defaultRecords))) { for (io.github.lukas2005.DeviceModApps.objects.ListedSong e : io.github.lukas2005.DeviceModApps.apps.ApplicationMusicPlayer.defaultRecords) { if (!(playList.getItems().contains(e))) { playList.addItem(e); } } markDirty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2363/buggy-version/src.main.java.io.github.lukas2005.DeviceModApps.apps.ApplicationMusicPlayer.java", "BodyUseAPI": ["com.mrcrayfish.device.api.app.component.ItemList<io.github.lukas2005.DeviceModApps.objects.ListedSong>.getItems()", "playList.getItems().contains(io.github.lukas2005.DeviceModApps.objects.ListedSong)", "com.mrcrayfish.device.api.app.component.ItemList<io.github.lukas2005.DeviceModApps.objects.ListedSong>.addItem(io.github.lukas2005.DeviceModApps.objects.ListedSong)"], "Fixed commit": "e9dc1921b34b49072cfe365a56959591b45bebc5", "Url": "https://api.github.com/repos/lukas2005s-Team/Device-Mod-Apps", "Date": "2017-10-20T19:59:22Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerRespawnEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((SimpleHealth.players.get(player)) == null) { net.krinsoft.simplehealth.Settings.addNewUser(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/55/buggy-version/src.net.krinsoft.simplehealth.PListener.java", "BodyUseAPI": ["net.krinsoft.simplehealth.Settings.addNewUser(org.bukkit.entity.Player)"], "Fixed commit": "371090a5ed4011ed8de6c797a8caae9f7e1bd24e", "Url": "https://api.github.com/repos/krinsdeath/simplehealth", "Date": "2011-07-28T17:04:09Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (simSlot == (org.eclipse.kura.net.modem.SimCardSlot.A)) { ret[0].setActive(true); }else if (simSlot == (org.eclipse.kura.net.modem.SimCardSlot.B)) { ret[1].setActive(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5994/buggy-version/kura.org.eclipse.kura.net.admin.src.main.java.org.eclipse.kura.net.admin.modem.telit.he910.TelitHe910.java", "BodyUseAPI": [], "Fixed commit": "95495e544f9200046bfd7319911579acb846b298", "Url": "https://api.github.com/repos/eclipse/kura", "Date": "2015-12-10T17:28:21Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (setSimCardSlot(cfgSimCardSlot)) { simSlot = cfgSimCardSlot; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5994/buggy-version/kura.org.eclipse.kura.net.admin.src.main.java.org.eclipse.kura.net.admin.modem.telit.he910.TelitHe910.java", "BodyUseAPI": [], "Fixed commit": "95495e544f9200046bfd7319911579acb846b298", "Url": "https://api.github.com/repos/eclipse/kura", "Date": "2015-12-10T17:28:21Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof org.openpnp.gui.MachineSetupPanel.PropertySheetHolderTreeNode) { org.openpnp.gui.MachineSetupPanel.PropertySheetHolderTreeNode node = ((org.openpnp.gui.MachineSetupPanel.PropertySheetHolderTreeNode) (value)); org.openpnp.spi.PropertySheetHolder psh = node.getPropertySheetHolder(); setIcon(psh.getPropertySheetHolderIcon()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6676/buggy-version/src.main.java.org.openpnp.gui.MachineSetupPanel.java", "BodyUseAPI": [], "Fixed commit": "9b061b1221dbb63adbe2316f672ed21197c29a38", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2015-10-04T12:11:08Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.b3log.solo.repository.CategoryRepository.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == ret) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4438/buggy-version/src.main.java.org.b3log.solo.service.CategoryQueryService.java", "BodyUseAPI": [], "Fixed commit": "f09bba9a5f88b6f77b449f47bc568ed97066c51d", "Url": "https://api.github.com/repos/b3log/solo", "Date": "2017-04-12T15:05:02Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cells.containsKey(((\"\" + row) + col)))) { com.acme.tictactoe.model.Player playerThatMoved = model.mark(row, col); cells.put(((\"\" + row) + col), (playerThatMoved == null ? null : playerThatMoved.toString())); winner.set(((model.getWinner()) == null ? null : model.getWinner().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7192/buggy-version/app.src.main.java.com.acme.tictactoe.viewmodel.TicTacToeViewModel.java", "BodyUseAPI": ["com.acme.tictactoe.model.Board.mark(int,int)", "android.databinding.ObservableArrayMap<java.lang.String, java.lang.String>.put(java.lang.String,(playerThatMoved == null ? null : playerThatMoved.toString()))"], "Fixed commit": "1f82b7d8b87762c93e320afc54193f49122e88d3", "Url": "https://api.github.com/repos/adi23arora/ticTacToe", "Date": "2017-05-25T23:18:05Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.util.List<org.openforis.idm.metamodel.CodeListItem>>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(parentCode)) { buttonsGroup.a(\"data-parent-code\", parentCode).a(\"style\", \"display: none;\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1924/buggy-version/collect-server.src.main.java.org.openforis.collect.io.metadata.collectearth.balloon.CEComponentHTMLFormatter.java", "BodyUseAPI": ["com.jamesmurty.utils.XMLBuilder.a(java.lang.String,java.lang.String)", "buttonsGroup.a(\"data-parent-code\", parentCode).a(java.lang.String,java.lang.String)"], "Fixed commit": "60572edd4567244a4501e39b9c6964fba351d026", "Url": "https://api.github.com/repos/openforis/collect", "Date": "2015-03-17T12:02:21Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tile.getType().equals(TileType.RESOURCE)) { return 0; }else if (tile.getType().equals(TileType.HAZARD)) { return this.component.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3813/buggy-version/kingdoms.engine.src.main.java.org.concordia.kingdoms.board.DragonDecorator.java", "BodyUseAPI": ["org.concordia.kingdoms.domain.Tile.getType()", "tile.getType().equals(TileType.HAZARD)"], "Fixed commit": "522287a1a471abaa510f2ab1ab15f18eb0dac8e7", "Url": "https://api.github.com/repos/abhinavsingh89/app", "Date": "2013-03-14T02:23:07Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tempusername.getText().toString().contains(\" \")) { tempusername.setError(\"No Spaces Allowed\"); android.widget.Toast.makeText(this, \"No Spaces Allowed\", Toast.LENGTH_LONG).show(); }else { username = tempusername.getText().toString(); insertToDatabase(username, highscorenumber, gamemode, phoneID); android.widget.Toast.makeText(getBaseContext(), \"Erfolgreich gespeichert\", Toast.LENGTH_SHORT).show(); android.content.Intent intent = new android.content.Intent(this, com.example.anel.gamemodeActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8374/buggy-version/app.src.main.java.com.example.anel.pophighscore.java", "BodyUseAPI": ["android.widget.EditText.setError(java.lang.String)", "android.widget.EditText.getText()", "tempusername.getText().toString()"], "Fixed commit": "c5996b9a58bd3b28d6cff4cd8812f4e645c621c9", "Url": "https://api.github.com/repos/Sev03/Synword-PhoneVersion", "Date": "2016-05-27T17:22:27Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getSuperclass()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parentClass == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8772/buggy-version/src.main.java.org.tierlon.xform.support.SimpleType.java", "BodyUseAPI": [], "Fixed commit": "fb0806c588a037c172cc2dc078c652e5231c79a9", "Url": "https://api.github.com/repos/jmccune/tierlon-xform", "Date": "2015-09-21T17:15:03Z"},
{"Line": "=>3027", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bitcoinj.core.TransactionInput.getConnectedOutput()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (output.isMineOrWatched(this)) checkState(myUnspents.add(output));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4904/buggy-version/core.src.main.java.org.bitcoinj.core.Wallet.java", "BodyUseAPI": ["org.bitcoinj.core.Wallet.checkState(myUnspents.add(output))", "java.util.HashSet<org.bitcoinj.core.TransactionOutput>.add(org.bitcoinj.core.TransactionOutput)"], "Fixed commit": "b9102fbf8ebd40694c16ee83708252cbd7020514", "Url": "https://api.github.com/repos/bitcoinj/bitcoinj", "Date": "2016-03-05T00:04:22Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((com.wasteofplastic.askyblock.ASkyBlockAPI.getInstance().hasIsland(p.getUniqueId())) != false) || ((com.wasteofplastic.askyblock.ASkyBlockAPI.getInstance().inTeam(p.getUniqueId())) != false)) { if (first) { first = false; }else { processPlayers.append(\", \"); } processPlayers.append(java.lang.String.valueOf(p.getName().toString())); com.wasteofplastic.askyblock.ASkyBlockAPI.getInstance().calculateIslandLevel(p.getUniqueId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6082/buggy-version/src.me.KingTux.ASkyBlockLevelReloader.ASkyBlockLevelReloader.java", "BodyUseAPI": ["org.bukkit.entity.Player.getUniqueId()", "p.getName().toString()", "com.wasteofplastic.askyblock.ASkyBlockAPI.getInstance().calculateIslandLevel(p.getUniqueId())", "java.lang.String.valueOf(p.getName().toString())", "org.bukkit.entity.Player.getName()", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "1cb9bc44cccad540d158e8edeae237fc2db56f35", "Url": "https://api.github.com/repos/wherkamp/ASkyblock-AutoLevel", "Date": "2017-10-13T12:55:10Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getConfig().getBoolean(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (b == true) { java.lang.System.out.println(\"All Islands Levels have been recalcuated\"); java.lang.System.out.println(((\"[ASkyblockAutoLevel] (\" + (processPlayers.toString())) + \") \")); }else { java.lang.System.out.println(\"All Islands Levels have been recalcuated\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6082/buggy-version/src.me.KingTux.ASkyBlockLevelReloader.ASkyBlockLevelReloader.java", "BodyUseAPI": [], "Fixed commit": "1cb9bc44cccad540d158e8edeae237fc2db56f35", "Url": "https://api.github.com/repos/wherkamp/ASkyblock-AutoLevel", "Date": "2017-10-13T12:55:10Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (action.equals(\"SUB\")) { this.balance = (models.Cuser.balance) - funds; }else if (action.equals(\"SET\")) { this.balance = funds; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3669/buggy-version/src.java.models.Cuser.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "216f175accc3855d81709bc73a1ef401073dd4fe", "Url": "https://api.github.com/repos/Sam-And-The-Funky-Bunch/EnterpriseSystemsAssignment", "Date": "2017-11-29T19:01:40Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (channel.isConnected()) channel.write(buf); else throw new java.io.IOException(\"Channel not connected\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4905/buggy-version/MAVComm.src.com.comino.mav.comm.udp.MAVUdpCommNIO.java", "BodyUseAPI": ["java.nio.channels.DatagramChannel.write(java.nio.ByteBuffer)"], "Fixed commit": "0861f43c04dccb3a8c2691647a562f9e70c390fc", "Url": "https://api.github.com/repos/ecmnet/MAVComm", "Date": "2016-08-11T08:53:19Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (compVal > 0) { return 1; }else if (compVal == 0) { return 0; }else { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/786/buggy-version/app.src.main.java.edu.tufts.cs.comp150.youin.EventListActivity.java", "BodyUseAPI": [], "Fixed commit": "e95653383b86dbce442b5b832158f290bff25c86", "Url": "https://api.github.com/repos/fhattl01/youin", "Date": "2017-11-04T20:06:20Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 == gts) { response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, e.getMessage()); return; }else { throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/261/buggy-version/warp10.src.main.java.io.warp10.standalone.StandaloneDeleteHandler.java", "BodyUseAPI": [], "Fixed commit": "fac53f0b0202ce09074413d45141467238cbcbc4", "Url": "https://api.github.com/repos/morind/warp10-platform-dmn", "Date": "2017-10-09T14:25:27Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof org.zkoss.poi.ss.formula.eval.ErrorEval) { return ((org.zkoss.poi.ss.formula.eval.ErrorEval) (value)).getErrorCode(); }else { throw new org.zkoss.poi.ss.formula.eval.EvaluationException(null, (\"no matched type: \" + value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1427/buggy-version/zssmodel.src.org.zkoss.zss.model.impl.sys.formula.FormulaEngineImpl.java", "BodyUseAPI": [], "Fixed commit": "89d34ce1428eea1202dac03e2377fa15dcede46a", "Url": "https://api.github.com/repos/zkoss/zkspreadsheet", "Date": "2014-03-07T08:05:43Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(v.isFocused())) v.requestFocus();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4117/buggy-version/app.src.main.java.cn.ismartv.voice.ui.activity.FilmStarActivity.java", "BodyUseAPI": ["android.view.View.requestFocus()"], "Fixed commit": "161e841e027b426c941f0daaba9951e82565700b", "Url": "https://api.github.com/repos/JasonFengIce/Narcissus", "Date": "2016-03-21T09:34:06Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7247/buggy-version/app.src.main.java.com.chernandezgil.farmacias.ui.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c4b3f6f3c2f91ae207fc064090e76c1852effb67", "Url": "https://api.github.com/repos/cahergil/Farmacias", "Date": "2016-12-26T08:14:24Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (finalKey != null) { indexIndex.addLastKey(finalKey.getSequence()); reader.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7197/buggy-version/src.libra.preprocess.stage2.KmerIndexBuilder.java", "BodyUseAPI": ["libra.preprocess.common.kmerindex.KmerIndexIndex.addLastKey(finalKey.getSequence())", "libra.common.hadoop.io.datatypes.CompressedSequenceWritable.getSequence()"], "Fixed commit": "9377e14dc13552640c1d429ef963dd5da951eace", "Url": "https://api.github.com/repos/iychoi/libra", "Date": "2017-05-05T01:13:06Z"},
{"Line": "=>2147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((fromType.key()) == (Type.T_VOID)) || ((toType.key()) == (Type.T_VOID))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3213/buggy-version/src.wyjc.io.ClassFileBuilder.java", "BodyUseAPI": [], "Fixed commit": "d3bce678cf8819aeece3b7db0eb0c47183745b66", "Url": "https://api.github.com/repos/zmthy/WhileyCompiler", "Date": "2011-09-18T22:51:33Z"},
{"Line": "=>1089", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readTree(response.getResponseBodyAsStream())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (responseNodes.get(name).hasNonNull(0)) { values = new java.util.ArrayList<T>(responseNodes.get(name).size()); for (com.fasterxml.jackson.databind.JsonNode node : responseNodes.get(name)) { values.add(mapper.convertValue(node, clazz)); } }else { values = java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/9201/buggy-version/src.main.java.org.zendesk.client.v2.Zendesk.java", "BodyUseAPI": ["responseNodes.get(name).size()", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)"], "Fixed commit": "3feb595ce34eb3321f4d39c02f43676a33824245", "Url": "https://api.github.com/repos/TrendRadiusAlex/zendesk-java-client", "Date": "2015-03-10T21:38:47Z"},
{"Line": "=>1085", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.ObjectMapper.convertValue(responseNodes.get(\"end_time\"),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (endTime == null) { endTime = (java.lang.System.currentTimeMillis()) / 1000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/9201/buggy-version/src.main.java.org.zendesk.client.v2.Zendesk.java", "BodyUseAPI": [], "Fixed commit": "3feb595ce34eb3321f4d39c02f43676a33824245", "Url": "https://api.github.com/repos/TrendRadiusAlex/zendesk-java-client", "Date": "2015-03-10T21:38:47Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bindingResult.hasFieldErrors()) java.lang.System.out.println((\"UranaiContoller.uranau\" + (bindingResult.getObjectName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7237/buggy-version/src.main.java.hackathon.uranai_deepblue_teamK.controller.UranaiContoller.java", "BodyUseAPI": ["org.springframework.validation.BindingResult.getObjectName()", "java.io.PrintStream.println((\"UranaiContoller.uranau\" + (bindingResult.getObjectName())))"], "Fixed commit": "28451532251a5788d072db36c9b5290799b086b4", "Url": "https://api.github.com/repos/rakus-offline-hackathon/uranai-deepblue-teamK", "Date": "2016-07-23T08:12:06Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (result != null) return result.getArtifact(); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/446/buggy-version/src.main.java.org.complykit.licensecheck.mojo.OpenSourceLicenseCheckMojo.java", "BodyUseAPI": ["org.sonatype.aether.resolution.ArtifactResult.getArtifact()"], "Fixed commit": "4131c30aaa077bb4935dac67e6145a1ac644dcbb", "Url": "https://api.github.com/repos/mrice/license-check", "Date": "2013-07-06T05:24:00Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (licenseName == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/446/buggy-version/src.main.java.org.complykit.licensecheck.mojo.OpenSourceLicenseCheckMojo.java", "BodyUseAPI": [], "Fixed commit": "4131c30aaa077bb4935dac67e6145a1ac644dcbb", "Url": "https://api.github.com/repos/mrice/license-check", "Date": "2013-07-06T05:24:00Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.complykit.licensecheck.mojo.OpenSourceLicenseCheckMojo.extractParentCoords(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (parentArtifactCoords != null) { org.sonatype.aether.artifact.Artifact parent = retrieveArtifact(parentArtifactCoords); if (parent != null) { if (currentDepth >= (maxSearchDepth)) return null; licenseName = recurseForLicenseName(parent, (currentDepth + 1)); }else { return null; } }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/446/buggy-version/src.main.java.org.complykit.licensecheck.mojo.OpenSourceLicenseCheckMojo.java", "BodyUseAPI": ["org.complykit.licensecheck.mojo.OpenSourceLicenseCheckMojo.retrieveArtifact(java.lang.String)"], "Fixed commit": "4131c30aaa077bb4935dac67e6145a1ac644dcbb", "Url": "https://api.github.com/repos/mrice/license-check", "Date": "2013-07-06T05:24:00Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(this.actionMap.containsKey(type))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4419/buggy-version/src.main.java.com.dierkers.schedule.process.ActionProcessor.java", "BodyUseAPI": [], "Fixed commit": "b01250522f3c62df6795344f145a36f417a1841a", "Url": "https://api.github.com/repos/mvd7793/Scheduler-Server", "Date": "2012-11-03T06:58:19Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (random != 0) { if ((((nietLeeg(geefLoc((random - 1)), geefLoc(random))) && (nietLeeg(geefLoc(random), geefLoc((random + 1))))) && ((route[(random - 1)].geefAfstandNaar(0)) <= 3300)) && ((route[(random + 1)].geefAfstandNaar(0)) <= 3300)) { break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7966/buggy-version/src.mokum.Vliegtuig.java", "BodyUseAPI": ["mokum.Vliegtuig.nietLeeg(int,int)", "mokum.Vliegtuig.geefLoc(int)", "route[(random + 1)].geefAfstandNaar(int)", "mokum.Vliegtuig.geefLoc(int)", "route[(random - 1)].geefAfstandNaar(int)", "mokum.Vliegtuig.nietLeeg(int,int)", "mokum.Vliegtuig.geefLoc(int)", "mokum.Vliegtuig.geefLoc(int)"], "Fixed commit": "76ef2705374486d0f0cdbde3be36a94d2082e798", "Url": "https://api.github.com/repos/heuristics-group4/vliegende-hollanders", "Date": "2014-01-27T15:56:22Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((emailAddress) == null) emailAddress = \"unable to read email address\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5927/buggy-version/app.src.main.java.org.wit.myrent.activities.ResidenceActivity.java", "BodyUseAPI": [], "Fixed commit": "595f223e5a4e80a62f88b1cf7ba2500112b6749f", "Url": "https://api.github.com/repos/wit-ictskills-2016/myrent-06", "Date": "2016-10-15T13:02:01Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.stratio.meta2.common.statements.structures.selectors.Selector, com.stratio.meta2.common.statements.structures.selectors.Selector>.get(com.stratio.meta2.common.statements.structures.selectors.Selector)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (selectorValue instanceof com.stratio.meta2.common.statements.structures.selectors.StringSelector) { valueString = valueString.substring(1, ((valueString.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6897/buggy-version/meta-common.src.main.java.com.stratio.meta2.common.statements.structures.selectors.SelectorHelper.java", "BodyUseAPI": [], "Fixed commit": "7246c03b046ca8895fcb2ad3ea61ae35d11877de", "Url": "https://api.github.com/repos/Stratio/crossdata", "Date": "2014-10-14T08:51:11Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectorKey instanceof com.stratio.meta2.common.statements.structures.selectors.StringSelector) { keyString = keyString.substring(1, ((keyString.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6897/buggy-version/meta-common.src.main.java.com.stratio.meta2.common.statements.structures.selectors.SelectorHelper.java", "BodyUseAPI": [], "Fixed commit": "7246c03b046ca8895fcb2ad3ea61ae35d11877de", "Url": "https://api.github.com/repos/Stratio/crossdata", "Date": "2014-10-14T08:51:11Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((collatorEnabled.length) > i) { valueMeta.setCollatorDisabled((!(collatorEnabled[i]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8618/buggy-version/engine.src.org.pentaho.di.trans.steps.sort.SortRowsMeta.java", "BodyUseAPI": ["org.pentaho.di.core.row.ValueMetaInterface.setCollatorDisabled(boolean)"], "Fixed commit": "6dcecbb29a7b424749f97749974804c3b46aed83", "Url": "https://api.github.com/repos/pentaho/pentaho-kettle", "Date": "2017-03-28T17:55:47Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((collatorStrength.length) > i) { valueMeta.setCollatorStrength(collatorStrength[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8618/buggy-version/engine.src.org.pentaho.di.trans.steps.sort.SortRowsMeta.java", "BodyUseAPI": ["org.pentaho.di.core.row.ValueMetaInterface.setCollatorStrength(int)"], "Fixed commit": "6dcecbb29a7b424749f97749974804c3b46aed83", "Url": "https://api.github.com/repos/pentaho/pentaho-kettle", "Date": "2017-03-28T17:55:47Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ascending.length) > i) { valueMeta.setSortedDescending((!(ascending[i]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8618/buggy-version/engine.src.org.pentaho.di.trans.steps.sort.SortRowsMeta.java", "BodyUseAPI": ["org.pentaho.di.core.row.ValueMetaInterface.setSortedDescending(boolean)"], "Fixed commit": "6dcecbb29a7b424749f97749974804c3b46aed83", "Url": "https://api.github.com/repos/pentaho/pentaho-kettle", "Date": "2017-03-28T17:55:47Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((caseSensitive.length) > i) { valueMeta.setCaseInsensitive((!(caseSensitive[i]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8618/buggy-version/engine.src.org.pentaho.di.trans.steps.sort.SortRowsMeta.java", "BodyUseAPI": ["org.pentaho.di.core.row.ValueMetaInterface.setCaseInsensitive(boolean)"], "Fixed commit": "6dcecbb29a7b424749f97749974804c3b46aed83", "Url": "https://api.github.com/repos/pentaho/pentaho-kettle", "Date": "2017-03-28T17:55:47Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((students) == null) { students = new java.util.ArrayList<cz.muni.fi.pa165.languageschool.entities.Student>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/9063/buggy-version/languageSchool.src.main.java.cz.muni.fi.pa165.languageschool.entities.Lection.java", "BodyUseAPI": [], "Fixed commit": "74c95b8e99cdef80f7a906d44f404546b15d68cb", "Url": "https://api.github.com/repos/janinko/jazykova-skola", "Date": "2012-10-21T16:36:20Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (env == null) { java.util.Map<com.rockwellcollins.atc.resolute.resolute.Arg, com.rockwellcollins.atc.resolute.analysis.values.ResoluteValue> emptyMap = java.util.Collections.emptyMap(); this.argMapStack.push(emptyMap); }else { this.argMapStack.push(new java.util.HashMap(env)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6761/buggy-version/fm-workbench.resolute.com.rockwellcollins.atc.resolute.analysis.src.com.rockwellcollins.atc.resolute.analysis.execution.ResoluteEvaluator.java", "BodyUseAPI": [], "Fixed commit": "a9d2098cab48052fdf6e928138552540180ac977", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2014-01-02T20:56:23Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((strTruncated.length) > 1) { fileAndExtension[0] = strTruncated[0]; java.lang.String extension = strTruncated[1]; if ((extension.length()) > 3) extension = extension.substring(0, 3); fileAndExtension[1] = extension; }else { fileAndExtension[0] = strTruncated[0]; fileAndExtension[1] = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4331/buggy-version/src.main.java.com.felhr.usbmassstorageforandroid.filesystems.fat32.FileEntry.java", "BodyUseAPI": [], "Fixed commit": "c436f1a092a340684e7279454ea82bb20bfc0b4f", "Url": "https://api.github.com/repos/felHR85/Pincho-Usb-Mass-Storage-for-Android", "Date": "2015-07-14T21:31:55Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (b.isInteger()) { c.setFactor(((org.matheclipse.core.interfaces.IInteger) (b)).longValue()); return c; }else { return new org.teaminfty.math_dragon.view.math.MathOperationMultiply(org.teaminfty.math_dragon.model.ModelHelper.toMathObject(b), c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3580/buggy-version/src.org.teaminfty.math_dragon.model.ModelHelper.java", "BodyUseAPI": ["org.teaminfty.math_dragon.model.ModelHelper.toMathObject(org.matheclipse.core.interfaces.IExpr)"], "Fixed commit": "185b2c2becc0254a5ca1af40da846dba60e99fb4", "Url": "https://api.github.com/repos/Divendo/math-dragon", "Date": "2013-12-30T13:22:50Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (conf == null) { pipelineThreshold = org.apache.hadoop.hbase.regionserver.MemStoreCompactionStrategy.COMPACTING_MEMSTORE_THRESHOLD_DEFAULT; }else { pipelineThreshold = conf.getInt(org.apache.hadoop.hbase.regionserver.MemStoreCompactionStrategy.COMPACTING_MEMSTORE_THRESHOLD_KEY, org.apache.hadoop.hbase.regionserver.MemStoreCompactionStrategy.COMPACTING_MEMSTORE_THRESHOLD_DEFAULT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3929/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.MemStoreCompactionStrategy.java", "BodyUseAPI": [], "Fixed commit": "095ea005aede855faa718bfc1e7af60c3f69c98a", "Url": "https://api.github.com/repos/Eshcar/hbase", "Date": "2017-06-13T08:36:27Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.user.core.UserStoreManager.getUserClaimValue(java.lang.String,AccountConstants.FAILED_LOGIN_ATTEMPTS_CLAIM,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(currentFailedAttemptCount)) { currentFailedAttempts = 0; }else { currentFailedAttempts = java.lang.Integer.parseInt(currentFailedAttemptCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8975/buggy-version/components.org.wso2.carbon.identity.handler.event.account.lock.src.main.java.org.wso2.carbon.identity.handler.event.account.lock.AccountLockHandler.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "735cd807738dd5cc7e7c5e48e59acfa1262fdac6", "Url": "https://api.github.com/repos/IsuraD/identity-event-handler-account-lock", "Date": "2016-07-09T06:03:34Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type == (WaypointHelper.POI)) && (btn.isChecked())) { running[0] = position; thisAdapter.notifyDataSetInvalidated(); net.osmand.plus.activities.MapActivity map = ((net.osmand.plus.activities.MapActivity) (ctx)); final net.osmand.plus.PoiFilter[] selected = new net.osmand.plus.PoiFilter[1]; android.app.AlertDialog dlg = map.getMapLayers().selectPOIFilterLayer(map.getMapView(), selected); dlg.setOnDismissListener(new android.content.DialogInterface.OnDismissListener() { @java.lang.Override public void onDismiss(android.content.DialogInterface dialog) { if (selected != null) { enableType(running, thisAdapter, type, true); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6871/buggy-version/OsmAnd.src.net.osmand.plus.helpers.WaypointDialogHelper.java", "BodyUseAPI": ["1.enableType(int[],android.widget.ArrayAdapter<java.lang.Object>,int,boolean)", "android.app.AlertDialog.setOnDismissListener(android.content.DialogInterface.OnDismissListener)"], "Fixed commit": "c97bde4bc130c52847dca50bc94d698a2ee8c2bb", "Url": "https://api.github.com/repos/poretsky/Osmand", "Date": "2014-12-24T10:27:20Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsScrolling) { return super.onTouchEvent(ev); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8237/buggy-version/sdlv.src.main.java.com.yydcdut.sdlv.SlideAndDragListView.java", "BodyUseAPI": [], "Fixed commit": "50e328b85aed4ffbd76e3c70b2243559193ac809", "Url": "https://api.github.com/repos/yydcdut/SlideAndDragListView", "Date": "2016-06-04T03:14:57Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.warren.wkrcontacts.WorkerContactsActivityActivity.getSharedPreferences(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((Meeting.getCount()) > (mPrefs.getInt(com.warren.wkrcontacts.WorkerContactsActivityActivity.MEETINGINT, 0))) Meeting.setSelection(mPrefs.getInt(com.warren.wkrcontacts.WorkerContactsActivityActivity.MEETINGINT, 0)); else Meeting.setSelection(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6037/buggy-version/src.com.warren.wkrcontacts.WorkerContactsActivityActivity.java", "BodyUseAPI": ["android.widget.Spinner.setSelection(mPrefs.getInt(com.warren.wkrcontacts.WorkerContactsActivityActivity.MEETINGINT, 0))", "android.widget.Spinner.setSelection(int)", "android.content.SharedPreferences.getInt(java.lang.String,int)"], "Fixed commit": "cb44bb9ce2919770ddbc450ff809e7f8a1d1a64e", "Url": "https://api.github.com/repos/wataylo/WorkerContactsActivity", "Date": "2013-02-22T05:23:22Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.warren.wkrcontacts.WorkerContactsActivityActivity.getSharedPreferences(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((Contacts.getCount()) > (mPrefs.getInt(com.warren.wkrcontacts.WorkerContactsActivityActivity.CONTACTSINT, 0))) Contacts.setSelectionFromTop(mPrefs.getInt(com.warren.wkrcontacts.WorkerContactsActivityActivity.CONTACTSINT, 0), 0); else Contacts.setSelectionFromTop(0, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6037/buggy-version/src.com.warren.wkrcontacts.WorkerContactsActivityActivity.java", "BodyUseAPI": ["android.widget.ListView.setSelectionFromTop(mPrefs.getInt(com.warren.wkrcontacts.WorkerContactsActivityActivity.CONTACTSINT, 0),int)", "android.widget.ListView.setSelectionFromTop(int,int)", "android.content.SharedPreferences.getInt(java.lang.String,int)"], "Fixed commit": "cb44bb9ce2919770ddbc450ff809e7f8a1d1a64e", "Url": "https://api.github.com/repos/wataylo/WorkerContactsActivity", "Date": "2013-02-22T05:23:22Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.warren.wkrcontacts.WorkerContactsActivityActivity.getSharedPreferences(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((Field.getCount()) > (mPrefs.getInt(com.warren.wkrcontacts.WorkerContactsActivityActivity.FIELDINT, 0))) Field.setSelection(mPrefs.getInt(com.warren.wkrcontacts.WorkerContactsActivityActivity.FIELDINT, 0)); else Field.setSelection(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6037/buggy-version/src.com.warren.wkrcontacts.WorkerContactsActivityActivity.java", "BodyUseAPI": ["android.widget.Spinner.setSelection(mPrefs.getInt(com.warren.wkrcontacts.WorkerContactsActivityActivity.FIELDINT, 0))", "android.widget.Spinner.setSelection(int)", "android.content.SharedPreferences.getInt(java.lang.String,int)"], "Fixed commit": "cb44bb9ce2919770ddbc450ff809e7f8a1d1a64e", "Url": "https://api.github.com/repos/wataylo/WorkerContactsActivity", "Date": "2013-02-22T05:23:22Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tagged.udf.macros.SpamDetector.getMin(java.lang.Long,java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (minDate == null) minDate = 0L; else minDate = toYYYYMMDD(minDate, dtFormatter);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8775/buggy-version/src.main.java.tagged.udf.macros.SpamDetector.java", "BodyUseAPI": ["tagged.udf.macros.SpamDetector.toYYYYMMDD(java.lang.Long,org.joda.time.format.DateTimeFormatter)"], "Fixed commit": "26e1228ae1c88b3cd31767cf118737fc44e79bdd", "Url": "https://api.github.com/repos/ifwe/brickhouse", "Date": "2016-01-19T23:21:55Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (status >= 400) in = urlConnection.getErrorStream(); else in = urlConnection.getInputStream();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7665/buggy-version/src.com.mozz.http.HttpPostFile.java", "BodyUseAPI": [], "Fixed commit": "1747e946ffa1bee2bd69fcaea2a189bfd1391219", "Url": "https://api.github.com/repos/hsllany/MozzAndroid", "Date": "2016-06-20T03:32:17Z"},
{"Line": "=>874", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentAgentsBankBalance != 0) writeToGUI((((\"\\n\" + (a.getName())) + \"s balance is: \") + (getBankBalance(a))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2717/buggy-version/Project.src.no.agentsystems_dhom.server.SCM_Server.java", "BodyUseAPI": [], "Fixed commit": "95a230bb1ec9a2656036a72fa8943a5ad78db6ff", "Url": "https://api.github.com/repos/morganbp/AgentSystems", "Date": "2014-11-25T02:22:28Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5983/buggy-version/src.main.java.de.teamproject16.pbft.NormalCase.java", "BodyUseAPI": [], "Fixed commit": "bb34e06fdaaf44f8ac8e9f4a175f3f0545535173", "Url": "https://api.github.com/repos/luckydonald/PBFT-JAVA", "Date": "2016-10-30T09:57:30Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Client.Arrivals.getTracks()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tracks != null) { for (int i = 0; i < (tracks.length); i++) { if ((tracks[i]) != null) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1532/buggy-version/src.Client.Arrivals.java", "BodyUseAPI": [], "Fixed commit": "3c6432f71e4dccd5e9fbf1936bce5b0186208eba", "Url": "https://api.github.com/repos/woller/togsjov", "Date": "2017-09-28T08:32:48Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (path.get(sourceId).getName().equals(path.get(i).getName())) { java.lang.System.out.println(((((((\"from station \" + (path.get(sourceId).getName())) + \" change to to station \") + (path.get((i + 1)).getName())) + \" on the \") + nextLine) + \" line\")); }else { java.lang.System.out.println(((((((((((\"from station \" + (path.get(sourceId).getName())) + \" go to station \") + (path.get(i).getName())) + \" on the \") + currentLine) + \" line and change to station \") + (path.get((i + 1)).getName())) + \" on the \") + nextLine) + \" line\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5460/buggy-version/multiGraph.bostonMetroGraphV0.2.src.metroPackage.App.java", "BodyUseAPI": ["java.util.List<metroPackage.INode>.get(int)", "java.io.PrintStream.println(((((((\"from station \" + (path.get(sourceId).getName())) + \" change to to station \") + (path.get((i + 1)).getName())) + \" on the \") + nextLine) + \" line\"))", "java.util.List<metroPackage.INode>.get(int)", "java.util.List<metroPackage.INode>.get(int)", "java.util.List<metroPackage.INode>.get(int)", "path.get((i + 1)).getName()", "path.get(sourceId).getName()", "path.get((i + 1)).getName()", "java.util.List<metroPackage.INode>.get(int)", "path.get(i).getName()", "java.io.PrintStream.println(((((((((((\"from station \" + (path.get(sourceId).getName())) + \" go to station \") + (path.get(i).getName())) + \" on the \") + currentLine) + \" line and change to station \") + (path.get((i + 1)).getName())) + \" on the \") + nextLine) + \" line\"))", "path.get(sourceId).getName()"], "Fixed commit": "a982b490b22e454445a9c8cd9124106b4174d26a", "Url": "https://api.github.com/repos/chris-hodgson-glasgow/bostonMetro", "Date": "2016-10-10T19:58:45Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.util.math.BlockPos.add(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((blockpos.getY()) >= 0) && ((blockpos.getY()) < 256)) && (!(worldIn.isBlockLoaded(blockpos)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7544/buggy-version/src.main.java.slimeknights.tconstruct.world.block.BlockSlimeGrass.java", "BodyUseAPI": [], "Fixed commit": "cb968b5ae36f9ba2c558ff741c59316637430f53", "Url": "https://api.github.com/repos/alexbegt/TinkersConstruct", "Date": "2016-07-29T07:21:58Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jpataide.project.utils.LivroUtils.getDetails(org.json.JSONObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((livro.getVolumeInfo().getImageLinks()) != null) { img.setImageUrl(livro.getVolumeInfo().getImageLinks().getThumbnail(), com.jpataide.project.utils.AppController.getInstance().getImageLoader()); }else { img.setImageUrl(\"\", com.jpataide.project.utils.AppController.getInstance().getImageLoader()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1229/buggy-version/app.src.main.java.com.jpataide.project.view.LivroActivity.java", "BodyUseAPI": ["livro.getVolumeInfo().getImageLinks().getThumbnail()", "livro.getVolumeInfo().getImageLinks()", "com.jpataide.project.objects.Item.getVolumeInfo()", "com.android.volley.toolbox.NetworkImageView.setImageUrl(livro.getVolumeInfo().getImageLinks().getThumbnail(),com.jpataide.project.utils.AppController.getInstance().getImageLoader())"], "Fixed commit": "1100db31372397ab0cec7a18781ea7fe20452f33", "Url": "https://api.github.com/repos/jpataide/Consumindo-WebService", "Date": "2015-08-17T18:26:07Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mode) == (org.pepsoft.worldpainter.MixedMaterial.Mode.LAYERED)) { org.pepsoft.worldpainter.MixedMaterialTableModel.COLUMN_NAMES[org.pepsoft.worldpainter.MixedMaterialTableModel.COLUMN_OCCURRENCE] = \"Thickness\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6672/buggy-version/WorldPainter.WPGUI.src.main.java.org.pepsoft.worldpainter.MixedMaterialTableModel.java", "BodyUseAPI": [], "Fixed commit": "398b7a565cc55515635a3908066b7fd30997b629", "Url": "https://api.github.com/repos/Captain-Chaos/WorldPainter", "Date": "2016-07-24T18:33:48Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((matrix[x][y]) != null) && ((matrix[x][y].getContents()) instanceof models.Blood)) { matrix[x][y] = new models.Room(new models.Goop()); }else { matrix[x][y] = new models.Room(new models.Slime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1049/buggy-version/src.models.Map.java", "BodyUseAPI": [], "Fixed commit": "0621605493ee1356f77fb715123d3b1ee714aa1d", "Url": "https://api.github.com/repos/ianrtracey/wumpus", "Date": "2015-10-18T20:20:32Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.minio.client.ErrorResponse.getCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"BucketAlreadyOwnedByYou\".equals(code)) e = new io.minio.client.BucketExistsException(); else e = new io.minio.client.InternalClientException(errorResponse.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8732/buggy-version/src.main.java.io.minio.client.Client.java", "BodyUseAPI": [], "Fixed commit": "eb588d301ff4667f5a0c1cd09bc37ae561cf2faa", "Url": "https://api.github.com/repos/minio/minio-java", "Date": "2015-07-13T03:08:45Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((skeletonVisualizer) != null) { controlled = skeletonVisualizer.getSpatial(); controlled.removeControl(skeletonVisualizer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8303/buggy-version/src.main.java.maud.view.SceneView.java", "BodyUseAPI": [], "Fixed commit": "7d063b530ae078dfc24638a5760cfaa52a3142ac", "Url": "https://api.github.com/repos/stephengold/Maud", "Date": "2017-10-25T02:24:34Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (controlled != null) { controlled.addControl(skeletonVisualizer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8303/buggy-version/src.main.java.maud.view.SceneView.java", "BodyUseAPI": ["com.jme3.scene.Spatial.addControl(jme3utilities.debug.SkeletonVisualizer)"], "Fixed commit": "7d063b530ae078dfc24638a5760cfaa52a3142ac", "Url": "https://api.github.com/repos/stephengold/Maud", "Date": "2017-10-25T02:24:34Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isMyServiceRunning(com.project.hackbu.RouteTrackService.class))) { startService(new android.content.Intent(this, com.project.hackbu.RouteTrackService.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2932/buggy-version/android.hackBU.app.src.main.java.com.project.hackbu.MapsActivity.java", "BodyUseAPI": ["com.project.hackbu.MapsActivity.5.startService(android.content.Intent)"], "Fixed commit": "2e1ad6babdeffa2d4559ec605bd7b5c765e5811b", "Url": "https://api.github.com/repos/j449li/BostonHack2015-1", "Date": "2015-11-01T16:32:17Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == 2) { return; }else if (resultCode == 0) { return; }else { java.lang.String ticker = data.getStringExtra(FundEditFragment.EXTRA_TICKER); mActiveFund.setTicker(ticker); gac.coolteamname.fundnominal.FundPortfolio.get(getActivity()).addFund(mActiveFund); updateUI(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2484/buggy-version/app.src.main.java.gac.coolteamname.fundnominal.FundListFragment.java", "BodyUseAPI": [], "Fixed commit": "7294d841327a2f340b3fb1be4210446b2e246e96", "Url": "https://api.github.com/repos/Fund-nominal/FundNominal", "Date": "2016-04-15T16:40:48Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == 1) { java.lang.String ticker = data.getStringExtra(FundEditFragment.EXTRA_TICKER); mActiveFund.setTicker(ticker); gac.coolteamname.fundnominal.FundPortfolio.get(getActivity()).updateFund(mActiveFund); updateUI(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2484/buggy-version/app.src.main.java.gac.coolteamname.fundnominal.FundListFragment.java", "BodyUseAPI": [], "Fixed commit": "7294d841327a2f340b3fb1be4210446b2e246e96", "Url": "https://api.github.com/repos/Fund-nominal/FundNominal", "Date": "2016-04-15T16:40:48Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (upperBound != null) { rand = new java.util.Random(); intVal = rand.nextInt(upperBound); }else { rand = new java.util.Random(); intVal = rand.nextInt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/787/buggy-version/src.main.java.org.teamninjaneer.simulator.locationsimulator.converter.FunctionConverter.java", "BodyUseAPI": ["java.util.Random.nextInt(java.lang.Integer)"], "Fixed commit": "0a3c99fadcd5cb45544feb51a54b8b4ad39e8ec4", "Url": "https://api.github.com/repos/rennemannt/location-simulator", "Date": "2017-08-01T02:32:23Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (param.contains(\",\")) { java.lang.String[] paramParts = param.split(\",\"); if ((paramParts.length) == 2) { java.lang.Integer seed = java.lang.Integer.valueOf(paramParts[0].trim()); java.lang.Integer upperBound = java.lang.Integer.valueOf(paramParts[1].trim()); return org.teamninjaneer.simulator.locationsimulator.converter.FunctionConverter.convertRand(seed, upperBound); } }else { java.lang.Integer upperBound = java.lang.Integer.valueOf(param.trim()); return org.teamninjaneer.simulator.locationsimulator.converter.FunctionConverter.convertRand(null, upperBound); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/787/buggy-version/src.main.java.org.teamninjaneer.simulator.locationsimulator.converter.FunctionConverter.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "0a3c99fadcd5cb45544feb51a54b8b4ad39e8ec4", "Url": "https://api.github.com/repos/rennemannt/location-simulator", "Date": "2017-08-01T02:32:23Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geotools.data.complex.config.AppSchemaDataAccessConfigurator.isJoining()", "org.geotools.data.complex.FeatureTypeMapping.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isJoining && (!((mappedSource instanceof org.geotools.jdbc.JDBCFeatureSource) || (mappedSource instanceof org.geotools.jdbc.JDBCFeatureStore)))) { if (org.geotools.data.complex.config.AppSchemaDataAccessConfigurator.isJoiningSet()) { throw new java.lang.IllegalArgumentException(\"Joining queries are only supported on JDBC data stores\"); }else { isJoining = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/435/buggy-version/modules.extension.app-schema.app-schema.src.main.java.org.geotools.data.complex.MappingFeatureIteratorFactory.java", "BodyUseAPI": [], "Fixed commit": "a87722d7cb4472b22ab5686652ea00ace3c44ea5", "Url": "https://api.github.com/repos/opengeo/geotools", "Date": "2013-03-07T11:12:11Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((findViewById(R.id.chat_menu)) != null) { findViewById(R.id.chat_menu).setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4390/buggy-version/src.com.brnv.txmessenger.ChatsActivity.java", "BodyUseAPI": [], "Fixed commit": "d83fd02d1e03f145222d1021f7744dcb83175ff4", "Url": "https://api.github.com/repos/brnv/tx", "Date": "2015-05-20T06:55:40Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((findViewById(R.id.chat_menu)) != null) { findViewById(R.id.chat_menu).setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4390/buggy-version/src.com.brnv.txmessenger.ChatsActivity.java", "BodyUseAPI": [], "Fixed commit": "d83fd02d1e03f145222d1021f7744dcb83175ff4", "Url": "https://api.github.com/repos/brnv/tx", "Date": "2015-05-20T06:55:40Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (token == (JSONToken.LITERAL_STRING)) { java.lang.String strVal = lexer.stringVal(); if ((strVal.length()) == 0) { lexer.nextToken(); return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3439/buggy-version/src.main.java.com.alibaba.fastjson.parser.JavaBeanDeserializer.java", "BodyUseAPI": [], "Fixed commit": "01f60df3410dda7b9accb98d5406565c1082c861", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-13T15:47:54Z"},
{"Line": "=>1155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eyeseetea.malariacare.data.database.model.QuestionDB.getValueBySession()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (valueDB != null) { valueDB.setValue(answer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3441/buggy-version/app.src.main.java.org.eyeseetea.malariacare.data.database.model.QuestionDB.java", "BodyUseAPI": ["org.eyeseetea.malariacare.data.database.model.ValueDB.setValue(java.lang.String)"], "Fixed commit": "9b44c1a5cdafa8c3186ec438f493f954cc09c77e", "Url": "https://api.github.com/repos/EyeSeeTea/EReferralsApp", "Date": "2017-12-05T16:29:40Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != dispatchedOpName) { org.apache.cxf.service.model.BindingOperationInfo dbop = client.getEndpoint().getBinding().getBindingInfo().getOperation(dispatchedOpName); if (dbop != null) { opName = dispatchedOpName; } org.apache.cxf.service.model.BindingOperationInfo bop = client.getEndpoint().getBinding().getBindingInfo().getOperation(opName); if (bop != null) { bop.setProperty(\"dispatchToOperation\", dbop); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/9262/buggy-version/rt.frontend.jaxws.src.main.java.org.apache.cxf.jaxws.DispatchImpl.java", "BodyUseAPI": ["client.getEndpoint().getBinding().getBindingInfo().getOperation(javax.xml.namespace.QName)"], "Fixed commit": "d4c640b4cc85bd7a58c8065e7755c1b7c54567c7", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2014-07-14T16:39:18Z"},
{"Line": "=>813", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (values == null) { int idx = 0; for (int i = 0; i < (rows.size()); ++i) { for (int j = 0; j < (columns.size()); ++j) { iRow[idx] = i; jCol[idx] = j; ++idx; } } }else { int idx = 0; for (int i = 0; i < (rows.size()); ++i) { for (int j = 0; j < (columns.size()); ++j) { values[idx] = 0; ++idx; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3786/buggy-version/src.edu.rutgers.MOST.optimization.solvers.GurobiSolver.java", "BodyUseAPI": [], "Fixed commit": "da752e511f8983fe4914fa7246fcd2acf013ce19", "Url": "https://api.github.com/repos/CodeGuro/MOST", "Date": "2014-07-04T04:06:29Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codeminders.hidapi.HIDManager.getInstance().openById(int,int,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dev == null) { throw new org.warheim.interfacing.jiffy32.exceptions.InitalizationException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1249/buggy-version/jiffy32.src.main.java.org.warheim.interfacing.jiffy32.FF32Factory.java", "BodyUseAPI": [], "Fixed commit": "3545d7ff9a8a0f1b174bfa13a2b6b5ff033eaaed", "Url": "https://api.github.com/repos/andy1024/jiffy32", "Date": "2015-12-19T00:27:35Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["okhttp3.internal.tls.DistinguishedNameParser.findMostSpecific(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (cn != null) { if (ipAddress.equalsIgnoreCase(cn)) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/369/buggy-version/okhttp.src.main.java.okhttp3.internal.tls.OkHostnameVerifier.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "56cf2e64306449adf63677f23d06e38503256ad4", "Url": "https://api.github.com/repos/topwu/okhttp", "Date": "2016-01-08T04:02:19Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (bestAssignment != null) { this.myVariable.setValue(bestAssignment); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4436/buggy-version/src.nl.coenvl.sam.solvers.MaxSumVariableSolver.java", "BodyUseAPI": ["this.myVariable.setValue(java.lang.Integer)"], "Fixed commit": "89bb69cfc8509d62d3413b2c43721520b924cc6a", "Url": "https://api.github.com/repos/coenvl/jSAM", "Date": "2016-09-05T17:08:55Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == (Reference.GUIs.ANALYZER.ordinal())) { return new com.austinv11.peripheralsplusplus.tiles.containers.ContainerAnalyzer(player, ((net.minecraft.inventory.IInventory) (world.getTileEntity(x, y, z))), 176, 166); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3579/buggy-version/src.main.java.com.austinv11.peripheralsplusplus.client.gui.GuiHandler.java", "BodyUseAPI": [], "Fixed commit": "7d40b2a02e6cc4b07bf33a38c3d12811fe8e5c89", "Url": "https://api.github.com/repos/austinv11/PeripheralsPlusPlus", "Date": "2014-11-09T00:01:04Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (brooklyn.entity.nosql.cassandra.CassandraClusterImpl.log.isDebugEnabled()) brooklyn.entity.nosql.cassandra.CassandraClusterImpl.log.debug((((\"Seeds for \" + (this)) + \" now \") + newSeeds));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1977/buggy-version/software.nosql.src.main.java.brooklyn.entity.nosql.cassandra.CassandraClusterImpl.java", "BodyUseAPI": ["org.slf4j.Logger.debug((((\"Seeds for \" + (this)) + \" now \") + newSeeds))"], "Fixed commit": "e4d7ae3c370d624846723d56739a5e8751517439", "Url": "https://api.github.com/repos/brooklyncentral/brooklyn", "Date": "2013-10-21T00:59:15Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (brooklyn.entity.nosql.cassandra.CassandraClusterImpl.log.isDebugEnabled()) brooklyn.entity.nosql.cassandra.CassandraClusterImpl.log.debug(((((((((((((\"Considering refresh of seeds for \" + (this)) + \" because \") + member) + \" is now \") + serviceUp) + \" (\") + isViable) + \" / \") + maybeAdd) + \" / \") + maybeRemove) + \")\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1977/buggy-version/software.nosql.src.main.java.brooklyn.entity.nosql.cassandra.CassandraClusterImpl.java", "BodyUseAPI": ["org.slf4j.Logger.debug(((((((((((((\"Considering refresh of seeds for \" + (this)) + \" because \") + member) + \" is now \") + serviceUp) + \" (\") + isViable) + \" / \") + maybeAdd) + \" / \") + maybeRemove) + \")\"))"], "Fixed commit": "e4d7ae3c370d624846723d56739a5e8751517439", "Url": "https://api.github.com/repos/brooklyncentral/brooklyn", "Date": "2013-10-21T00:59:15Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.teammartens.android.wattfinder.KartenActivity.mapFragment) != null) KartenActivity.mapFragment.getView().requestFocus();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5304/buggy-version/app.src.main.java.de.teammartens.android.wattfinder.worker.AnimationWorker.java", "BodyUseAPI": [], "Fixed commit": "5eed528acabfff296955e6ab24f0c3a140ab08a1", "Url": "https://api.github.com/repos/felixmartens/Wattfinder", "Date": "2017-09-16T20:32:01Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.teammartens.android.wattfinder.worker.LogWorker.isVERBOSE()) de.teammartens.android.wattfinder.worker.LogWorker.d(de.teammartens.android.wattfinder.KartenActivity.LOG_TAG, \"StandortButton: Kein g\u00fcltiger Standort\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5304/buggy-version/app.src.main.java.de.teammartens.android.wattfinder.KartenActivity.java", "BodyUseAPI": [], "Fixed commit": "5eed528acabfff296955e6ab24f0c3a140ab08a1", "Url": "https://api.github.com/repos/felixmartens/Wattfinder", "Date": "2017-09-16T20:32:01Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((players[whoseTurn].rollCount) < 3) { for (int k = 0; k < (scoreButton.length); k++) { scoreButton[k].setEnabled(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5044/buggy-version/src.Yahtzee.Yahtzee.java", "BodyUseAPI": [], "Fixed commit": "2836fed1203557aabaa5c8fae2f611c0e232eb24", "Url": "https://api.github.com/repos/fmeade/Yahtzee", "Date": "2013-04-08T16:05:20Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.smi.travel.controller.excel.ExportDataToExcelController.TicketFareAirlineReport.equalsIgnoreCase(name)) { java.lang.System.out.println(\"get excel data\"); data = reportservice.getTicketFareReport(ticketType, ticketBuy, airline, airlineCode, issuedateFrom, issuedateTo, department, staff, termPay, printby, invdateFrom, invdateTo); }else if (com.smi.travel.controller.excel.ExportDataToExcelController.TicketFareInvoicReport.equalsIgnoreCase(name)) { java.lang.System.out.println(\"get excel data\"); data = reportservice.getTicketFareReport(ticketType, ticketBuy, airline, airlineCode, issuedateFrom, issuedateTo, department, staff, termPay, printby, invdateFrom, invdateTo); java.lang.System.out.println((\" data size \" + (java.lang.String.valueOf(data.size())))); }else if (com.smi.travel.controller.excel.ExportDataToExcelController.TicketFareAgentReport.equalsIgnoreCase(name)) { java.lang.System.out.println(\"get excel data\"); data = reportservice.getTicketFareReport(ticketType, ticketBuy, airline, airlineCode, issuedateFrom, issuedateTo, department, staff, termPay, printby, invdateFrom, invdateTo); }else if (com.smi.travel.controller.excel.ExportDataToExcelController.TicketFareSummaryByStaff.equalsIgnoreCase(name)) { java.lang.System.out.println(\"get excel data staff\"); data = reportservice.getTicketFareSumAgentStaff(ticketType, ticketBuy, airline, airlineCode, department, staff, termPay, printby, issuedateFrom, issuedateTo, invdateFrom, invdateTo, \"staff\"); }else if (com.smi.travel.controller.excel.ExportDataToExcelController.TicketFareSummaryByAgent.equalsIgnoreCase(name)) { java.lang.System.out.println(\"get excel data agent\"); data = reportservice.getTicketFareSumAgentStaff(ticketType, ticketBuy, airline, airlineCode, department, staff, termPay, printby, issuedateFrom, issuedateTo, invdateFrom, invdateTo, \"agent\"); }else if (com.smi.travel.controller.excel.ExportDataToExcelController.BillAirAgent.equalsIgnoreCase(name)) { java.lang.System.out.println(\"get excel data agent\"); java.lang.String agentCode = request.getParameter(\"agentCode\"); java.lang.String invoiceFromDates = request.getParameter(\"invoiceFromDate\"); java.lang.String InvoiceToDates = request.getParameter(\"InvoiceToDate\"); java.lang.String issueFroms = request.getParameter(\"issueFrom\"); java.lang.String issueTos = request.getParameter(\"issueTo\"); java.lang.String refundFrom = request.getParameter(\"refundFrom\"); java.lang.String refundTo = request.getParameter(\"refundTo\"); java.lang.String departments = request.getParameter(\"department\"); java.lang.String salebyUsers = request.getParameter(\"salebyUser\"); java.lang.String termPays = request.getParameter(\"termPay\"); data = reportservice.getBillAirAgentReportSummary(agentCode, invoiceFromDates, InvoiceToDates, issueFroms, issueTos, refundFrom, refundTo, departments, salebyUsers, termPays, printby); }else if (com.smi.travel.controller.excel.ExportDataToExcelController.ChangeARReport.equalsIgnoreCase(name)) { java.lang.System.out.println(\"get excel data agent\"); data = reportservice.SearchArNirvanaFromFilter(invoiceType, departmnt, type, from, to, status); }else if (com.smi.travel.controller.excel.ExportDataToExcelController.BillAirAgentSummary.equalsIgnoreCase(name)) { java.lang.System.out.println(\"get excel data BillAirAgentSummary\"); java.lang.String agentCode = request.getParameter(\"agentCode\"); java.lang.String invoiceFromDates = request.getParameter(\"invoiceFrom\"); java.lang.String InvoiceToDates = request.getParameter(\"invoiceTo\"); java.lang.String issueFroms = request.getParameter(\"issueFrom\"); java.lang.String issueTos = request.getParameter(\"issueTo\"); java.lang.String refundFrom = request.getParameter(\"refundFrom\"); java.lang.String refundTo = request.getParameter(\"refundTo\"); java.lang.String departments = request.getParameter(\"department\"); java.lang.String salebyUsers = request.getParameter(\"salebyUser\"); java.lang.String termPays = request.getParameter(\"termPay\"); data = reportservice.getBillAirAgentReportSummary(agentCode, invoiceFromDates, InvoiceToDates, issueFroms, issueTos, refundFrom, refundTo, departments, salebyUsers, termPays, printby); }else if (com.smi.travel.controller.excel.ExportDataToExcelController.CollectionReport.equalsIgnoreCase(name)) { type = request.getParameter(\"type\"); status = request.getParameter(\"status\"); from = request.getParameter(\"inputFromDate\"); to = request.getParameter(\"inputToDate\"); java.lang.String invno = request.getParameter(\"invno\"); java.lang.System.out.println(\"get excel data collection report\"); data = reportservice.getCollectionNirvanaFromFilter(department, type, status, from, to, invno, printby); }else if (com.smi.travel.controller.excel.ExportDataToExcelController.ApReport.equals(name)) { status = request.getParameter(\"status\"); java.lang.String payment = request.getParameter(\"payment\"); java.lang.System.out.println(\"get excel data ap ApReport\"); data = reportservice.getApNirvanaReport(payment, ticketType, status, dateFrom, dateTo, printby); }else if (com.smi.travel.controller.excel.ExportDataToExcelController.SummaryAirline.equals(name)) { java.lang.System.out.println(\"get excel data ap SummaryAirline\"); data = reportservice.listSummaryAirline(); }else if (com.smi.travel.controller.excel.ExportDataToExcelController.TicketFareSummaryAirline.equals(name)) { java.lang.System.out.println(\"get excel data TicketFareSummaryAirline\"); data = reportservice.getTicketFareSumAirline(typeRouting, routingDetail, issuedateFrom, issuedateTo, invdateFrom, invdateTo, airlineCode, passenger, agentId, department, staff, termPay, printby); }else if (com.smi.travel.controller.excel.ExportDataToExcelController.SummaryAirlinePax.equals(name)) { java.lang.System.out.println(\"get excel data SummaryAirlinePax\"); data = reportservice.getSumAirlinePax(typeRouting, routingDetail, issuedateFrom, issuedateTo, invdateFrom, invdateTo, airlineCode, passenger, agentId, department, staff, termPay, printby); }else if (com.smi.travel.controller.excel.ExportDataToExcelController.SummaryTicketAdjustCostAndIncome.equals(name)) { java.lang.System.out.println(\"get excel data ap SummaryTicketAdjustCostAndIncome\"); java.lang.System.out.println((\"Term : \" + termPayt)); data = reportservice.getSummaryTicketAdjustCostAndIncome(reportType, invoiceFromDate, invoiceToDate, issueFrom, issueTo, paymentType, departmentt, salebyUser, termPayt, printby); }else if (com.smi.travel.controller.excel.ExportDataToExcelController.SummaryTicketCostAndIncome.equals(name)) { java.lang.System.out.println(\"get excel data ap SummaryTicketCostAndIncome\"); java.lang.System.out.println((\"Term : \" + termPayt)); data = reportservice.getSummaryTicketAdjustCostAndIncome(reportType, invoiceFromDate, invoiceToDate, issueFrom, issueTo, paymentType, departmentt, salebyUser, termPayt, printby); }else if (com.smi.travel.controller.excel.ExportDataToExcelController.SummaryTicketCommissionReceive.equals(name)) { java.lang.System.out.println(\"get excel data ap SummaryTicketCommissionReceive\"); java.lang.System.out.println((\"Term : \" + termPayt)); data = reportservice.getTicketCommissionReceive(reportType, invoiceFromDate, invoiceToDate, issueFrom, issueTo, paymentType, departmentt, salebyUser, termPayt, printby); }else if (com.smi.travel.controller.excel.ExportDataToExcelController.RefundTicketDetail.equals(name)) { java.lang.System.out.println(\"get excel data ap RefundTicketDetail\"); java.lang.System.out.println((\"Term : \" + termPayt)); java.lang.String refundagent = request.getParameter(\"\"); java.lang.String refundnameby = request.getParameter(\"\"); java.lang.String passengername = request.getParameter(\"\"); java.lang.String receivefrom = request.getParameter(\"\"); java.lang.String receiveto = request.getParameter(\"\"); java.lang.String paidfrom = request.getParameter(\"\"); java.lang.String paidto = request.getParameter(\"\"); java.lang.String typeprint = request.getParameter(\"\"); data = reportservice.getRefundTicketDetail(refundagent, refundnameby, passengername, receivefrom, receiveto, paidfrom, paidto, typeprint, printby); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1776/buggy-version/src.java.com.smi.travel.controller.excel.ExportDataToExcelController.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "43f1b0411f52b95a974c1382e39ea54187707f9d", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-10-08T10:51:28Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["result.memory().get(ShortestPathVertexProgram.MIDDLE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(middlePoint.equals(\"\"))) map.put(0, java.util.Collections.singleton(middlePoint));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/53/buggy-version/grakn-graql.src.main.java.ai.grakn.graql.internal.query.analytics.PathQueryImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.util.Set<java.lang.String>>.put(int,java.util.Set<java.lang.String>)", "java.util.Collections.singleton(java.lang.String)"], "Fixed commit": "1e931950f0bae2c18b1527fb16f691c6a1155f0f", "Url": "https://api.github.com/repos/duckofyork/mindmapsdb", "Date": "2016-12-15T15:40:55Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((linearModelMatrixInput.get()) != null) { return linearModelMatrix.getArrayValue(getArrayOffset(i, j)); }else { return rateMatrix.getValue(getArrayOffset(i, j)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1937/buggy-version/src.beast.evolution.tree.SCMigrationModel.java", "BodyUseAPI": [], "Fixed commit": "9c80038d659a8de10d9e284316e611b9fd63fdf3", "Url": "https://api.github.com/repos/andre-lichtsteiner/MultiTypeTree", "Date": "2017-01-18T21:31:36Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (getTheme().resolveAttribute(android.R.attr.actionBarSize, typedValue, true)) { screen_h -= getResources().getDimensionPixelSize(typedValue.resourceId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3884/buggy-version/practiceapp.app.src.main.java.com.example.christianlee.practiceapp.MainActivity.java", "BodyUseAPI": ["getResources().getDimensionPixelSize(typedValue.resourceId)"], "Fixed commit": "8bbaed6b70469c909a3ac5ffdf7dc6a6c0eb218f", "Url": "https://api.github.com/repos/chrisjaesun/BistianAndChing", "Date": "2017-05-27T03:29:00Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((y + (view.getWidth())) > screen_h) { y = screen_h - (view.getWidth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3884/buggy-version/practiceapp.app.src.main.java.com.example.christianlee.practiceapp.MainActivity.java", "BodyUseAPI": ["android.view.View.getWidth()"], "Fixed commit": "8bbaed6b70469c909a3ac5ffdf7dc6a6c0eb218f", "Url": "https://api.github.com/repos/chrisjaesun/BistianAndChing", "Date": "2017-05-27T03:29:00Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getResources().getIdentifier(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (resId > 0) { screen_h -= getResources().getDimensionPixelSize(resId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3884/buggy-version/practiceapp.app.src.main.java.com.example.christianlee.practiceapp.MainActivity.java", "BodyUseAPI": ["getResources().getDimensionPixelSize(int)"], "Fixed commit": "8bbaed6b70469c909a3ac5ffdf7dc6a6c0eb218f", "Url": "https://api.github.com/repos/chrisjaesun/BistianAndChing", "Date": "2017-05-27T03:29:00Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (topic == null) return new java.util.HashSet<org.araqne.logdb.cep.EventKey>(contexts.keySet()).iterator();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7610/buggy-version/araqne-logdb-cep.src.main.java.org.araqne.logdb.cep.engine.MemoryEventContextStorage.java", "BodyUseAPI": [], "Fixed commit": "9a44b9daa2b9d4a88ce2f4a4bf15e129e5d47e9c", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-11-17T10:00:33Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((headers != null) && (!(headers.isEmpty()))) { final int headersLength = headers.size(); for (int i = 0; i < headersLength; i++) { request.addHeader(headers.get(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7039/buggy-version/DataDroid.src.com.foxykeep.datadroid.network.NetworkConnection.java", "BodyUseAPI": ["java.util.ArrayList<org.apache.http.Header>.get(int)", "java.util.ArrayList<org.apache.http.Header>.size()", "org.apache.http.client.methods.HttpUriRequest.addHeader(headers.get(i))"], "Fixed commit": "4375ad54fcb1f4a16501f0ec78cb932109bcb141", "Url": "https://api.github.com/repos/foxykeep/DataDroid", "Date": "2011-08-02T13:32:04Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bastengao.struts2.freeroute.DefaultUnknownHandler.parseResultType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(resultType.equals(\"redirect\"))) { location = com.bastengao.struts2.freeroute.DefaultUnknownHandler.parsePath(contentBase, routeMapping, location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7722/buggy-version/struts2-freeroute-core.src.main.java.com.bastengao.struts2.freeroute.DefaultUnknownHandler.java", "BodyUseAPI": [], "Fixed commit": "0041756262283a7fcf22371ed7e99ee005e4812e", "Url": "https://api.github.com/repos/bastengao/struts2-freeroute", "Date": "2013-07-03T12:32:33Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.equals(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isParentResource) { try { T remoteFile = org.syncany.connection.plugins.RemoteFile.createRemoteFile(res.getName(), remoteFileClass); remoteFiles.put(res.getName(), remoteFile); org.syncany.connection.plugins.webdav.WebdavTransferManager.logger.log(java.util.logging.Level.FINE, (\"- Matching WebDAV resource: \" + res)); } catch (java.lang.Exception e) { org.syncany.connection.plugins.webdav.WebdavTransferManager.logger.log(java.util.logging.Level.INFO, ((((\"Cannot create instance of \" + (remoteFileClass.getSimpleName())) + \" for object \") + (res.getName())) + \"; maybe invalid file name pattern. Ignoring file.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3372/buggy-version/syncany-plugins.syncany-plugin-webdav.src.main.java.org.syncany.connection.plugins.webdav.WebdavTransferManager.java", "BodyUseAPI": [], "Fixed commit": "f25e7444064337134f04a23db2dc109dd1c6b6df", "Url": "https://api.github.com/repos/binwiederhier/syncany", "Date": "2013-12-27T14:35:38Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sym == null) { super.visitClassDef(tree); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5319/buggy-version/java-macro.src.main.java.com.ajjpj.macro.impl.shared.methodmacro.MacroMethodInvoker.java", "BodyUseAPI": [], "Fixed commit": "99ca95180d3e6e70854313e9b19235533446d7e4", "Url": "https://api.github.com/repos/arnohaase/java-macros", "Date": "2014-06-28T19:23:44Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listeningFlag) == (FLAG_LISTENING)) { clickBtnListening(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4689/buggy-version/app.src.main.java.chongxuocmanhinh.virtualassistant.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9470c6dd87cebd731a7490f49bf9a793fde06757", "Url": "https://api.github.com/repos/tinifyphan/VirtualAssistant", "Date": "2017-05-25T12:14:53Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listeningFlag) == (FLAG_LISTENING)) { clickBtnListening(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4689/buggy-version/app.src.main.java.chongxuocmanhinh.virtualassistant.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9470c6dd87cebd731a7490f49bf9a793fde06757", "Url": "https://api.github.com/repos/tinifyphan/VirtualAssistant", "Date": "2017-05-25T12:14:53Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((localRack) != null) { addTokens(topology, localRack, localSelector); for (java.lang.String remoteRack : remoteDCSelectors.keySet()) { addTokens(topology, remoteRack, remoteDCSelectors.get(remoteRack)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4744/buggy-version/dyno-core.src.main.java.com.netflix.dyno.connectionpool.impl.lb.HostSelectionWithFallback.java", "BodyUseAPI": [], "Fixed commit": "09c8311496dba5eaef8bd9bc33d40fb9731ddfd2", "Url": "https://api.github.com/repos/Netflix/dyno", "Date": "2016-06-02T00:07:35Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (charmGroup == null) { charmTreeRenderer.clearView(); }else { net.sf.anathema.platform.svgtree.document.visualizer.ITreePresentationProperties presentationProperties = getDisplayProperties(charmGroup); net.sf.anathema.graph.nodes.IRegularNode[] nodes = net.sf.anathema.character.generic.framework.magic.CharmGraphNodeBuilder.createNodesFromCharms(getDisplayCharms(charmGroup)); charmTreeRenderer.renderTree(resetView, presentationProperties, nodes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5887/buggy-version/Charm_Tree.src.net.sf.anathema.charmtree.presenter.view.AbstractCharmGroupChangeListener.java", "BodyUseAPI": ["net.sf.anathema.character.generic.framework.magic.CharmGraphNodeBuilder.createNodesFromCharms(java.util.Set<net.sf.anathema.character.generic.magic.ICharm>)", "net.sf.anathema.charmtree.presenter.view.AbstractCharmGroupChangeListener.getDisplayCharms(net.sf.anathema.character.generic.magic.charms.ICharmGroup)", "net.sf.anathema.charmtree.presenter.view.AbstractCharmGroupChangeListener.getDisplayProperties(net.sf.anathema.character.generic.magic.charms.ICharmGroup)"], "Fixed commit": "bea5b7d662398067c2a2c0fb0f2c741a16993180", "Url": "https://api.github.com/repos/curttasker/anathema", "Date": "2012-04-28T07:51:36Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lexer.token()) == (com.alibaba.druid.sql.parser.Token.AS)) { lexer.nextToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8405/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlCreateTableParser.java", "BodyUseAPI": ["com.alibaba.druid.sql.dialect.mysql.parser.MySqlCreateTableParser.nextToken()"], "Fixed commit": "6ef33367d4c8d6d8ad9af91abf99f1e422a61b0c", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2014-06-17T08:53:54Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mergedFieldSchema.type) == 100) { resultFieldSchema = new org.apache.pig.impl.logicalLayer.schema.Schema.FieldSchema(mergedFieldSchema.alias, new org.apache.pig.impl.logicalLayer.schema.Schema(parquet.pig.TupleReadSupport.union(mergedFieldSchema.schema.getField(0), newFieldSchema.schema.getField(0))), mergedFieldSchema.type); }else { resultFieldSchema = new org.apache.pig.impl.logicalLayer.schema.Schema.FieldSchema(mergedFieldSchema.alias, parquet.pig.TupleReadSupport.union(mergedFieldSchema.schema, newFieldSchema.schema), mergedFieldSchema.type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1873/buggy-version/parquet-pig.src.main.java.parquet.pig.TupleReadSupport.java", "BodyUseAPI": ["parquet.pig.TupleReadSupport.union(mergedFieldSchema.schema.getField(0),newFieldSchema.schema.getField(0))", "parquet.pig.TupleReadSupport.union(mergedFieldSchema.schema,newFieldSchema.schema)", "mergedFieldSchema.schema.getField(int)"], "Fixed commit": "c223117c09ce202ed9aa81806e497a287362e42c", "Url": "https://api.github.com/repos/MediaV/parquet-mr", "Date": "2015-06-17T11:42:34Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isHidden()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4957/buggy-version/src.projlab.rail.logic.Rail.java", "BodyUseAPI": [], "Fixed commit": "999dfa8379f028989a81a85faf53e46b35153df5", "Url": "https://api.github.com/repos/mktiti/ProjektLab", "Date": "2017-05-06T23:39:59Z"},
{"Line": "=>7145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needsClear) { for (int i = 0; i < (groundItemType.length); i++) { groundItemType[i] = -1; groundItemX[i] = -1; groundItemY[i] = -1; groundItemObjectVar[i] = -1; } groundItemCount = 0; needsClear = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2358/buggy-version/src.org.rscdaemon.client.mudclient.java", "BodyUseAPI": [], "Fixed commit": "291ceca52a568ec4a06cba9879061b31eb7d59e6", "Url": "https://api.github.com/repos/Joe0/RSC-Client", "Date": "2011-12-06T22:06:05Z"},
{"Line": "=>2713", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.computesystemcontroller.impl.ComputeSystemControllerImpl.getNextInitiatorOperation(export.getId(),java.util.Map<java.net.URI, java.util.List<com.emc.storageos.computesystemcontroller.impl.ComputeSystemControllerImpl.InitiatorChange>>,InitiatorOperation.ADD)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (add != null) { addedInitiators.add(add.getId()); update = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7854/buggy-version/controllersvc.src.main.java.com.emc.storageos.computesystemcontroller.impl.ComputeSystemControllerImpl.java", "BodyUseAPI": ["java.util.Set<java.net.URI>.add(add.getId())", "com.emc.storageos.db.client.model.Initiator.getId()"], "Fixed commit": "e49cffb643cbbba0a00d3afd3be6bd153d972a02", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-08-04T14:08:13Z"},
{"Line": "=>2707", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.computesystemcontroller.impl.ComputeSystemControllerImpl.getNextInitiatorOperation(export.getId(),java.util.Map<java.net.URI, java.util.List<com.emc.storageos.computesystemcontroller.impl.ComputeSystemControllerImpl.InitiatorChange>>,InitiatorOperation.REMOVE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (remove != null) { removedInitiators.add(remove.getId()); update = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7854/buggy-version/controllersvc.src.main.java.com.emc.storageos.computesystemcontroller.impl.ComputeSystemControllerImpl.java", "BodyUseAPI": ["java.util.Set<java.net.URI>.add(remove.getId())", "com.emc.storageos.db.client.model.Initiator.getId()"], "Fixed commit": "e49cffb643cbbba0a00d3afd3be6bd153d972a02", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-08-04T14:08:13Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(file.exists())) file.createNewFile();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/909/buggy-version/src.main.java.com.silicolife.textmining.processes.ie.pipelines.kineticparameters.steps.ExportKineticResultsTOCSVExtension.java", "BodyUseAPI": [], "Fixed commit": "b8c993eafe3e21d29c32710dfa493d995509984b", "Url": "https://api.github.com/repos/biotextmining/processes", "Date": "2017-03-07T15:34:30Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (image != null) image.compress(Bitmap.CompressFormat.JPEG, 55, fOut); else filename = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4249/buggy-version/app.src.main.java.by.madcat.development.f1newsreader.Utils.SystemUtils.java", "BodyUseAPI": ["android.graphics.Bitmap.compress(Bitmap.CompressFormat.JPEG,int,java.io.OutputStream)"], "Fixed commit": "e95c8dbae48d02a5f1cc1bd91d565102a3420f86", "Url": "https://api.github.com/repos/orloffski/F1-News", "Date": "2017-05-03T20:37:55Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.server.qualityprofile.ActiveRuleChange.getSeverity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (severity != null) { activeRule.setSeverity(severity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2660/buggy-version/sonar-server.src.main.java.org.sonar.server.qualityprofile.RuleActivator.java", "BodyUseAPI": ["org.sonar.core.qualityprofile.db.ActiveRuleDto.setSeverity(java.lang.String)"], "Fixed commit": "074f5c655822a466819c899ed9c90aef4ba1d2b4", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-07-01T16:55:58Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (destination)) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/239/buggy-version/Project.core.src.main.java.dhbw.karlsruhe.it.solar.core.space_units.SpaceUnit.java", "BodyUseAPI": [], "Fixed commit": "b79d100d65e3ef38edd5852eaa24b29d47d0e0a0", "Url": "https://api.github.com/repos/davidgiga1993/SOLAR", "Date": "2015-05-10T20:19:48Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(eme.handlers.MainHandler.configured)) { org.apache.log4j.BasicConfigurator.configure(); eme.handlers.MainHandler.configured = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/762/buggy-version/src.main.java.eme.handlers.MainHandler.java", "BodyUseAPI": [], "Fixed commit": "b06cb6989628ab57d63732e9789fe10e958835a4", "Url": "https://api.github.com/repos/tsaglam/EcoreMetamodelExtraction", "Date": "2017-01-26T09:26:06Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (account.isTrim()) account.setCharacterSet(element.getAttribute(\"NS1:charset\").trim());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1056/buggy-version/src.main.java.org.daveware.passwordmaker.RDFDatabaseReader.java", "BodyUseAPI": ["org.daveware.passwordmaker.Account.setCharacterSet(java.lang.String)"], "Fixed commit": "e1191ca05e25663f50437d87425864c2099f47dc", "Url": "https://api.github.com/repos/passwordmaker/java-passwordmaker-lib", "Date": "2014-09-21T12:38:46Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!trim) setCharacterSet(CharacterSets.HEX);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1056/buggy-version/src.main.java.org.daveware.passwordmaker.Account.java", "BodyUseAPI": [], "Fixed commit": "e1191ca05e25663f50437d87425864c2099f47dc", "Url": "https://api.github.com/repos/passwordmaker/java-passwordmaker-lib", "Date": "2014-09-21T12:38:46Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTrim())) characterSet = CharacterSets.HEX;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1056/buggy-version/src.main.java.org.daveware.passwordmaker.Account.java", "BodyUseAPI": [], "Fixed commit": "e1191ca05e25663f50437d87425864c2099f47dc", "Url": "https://api.github.com/repos/passwordmaker/java-passwordmaker-lib", "Date": "2014-09-21T12:38:46Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { java.util.ArrayList<se.bth.students.quizzard.Answer> ans = ((java.util.ArrayList<se.bth.students.quizzard.Answer>) (savedInstanceState.getSerializable(\"answers\"))); if ((ans != null) && ((ans.size()) > 0)) { this.answers = ans; int type = savedInstanceState.getInt(\"question_type\"); if (type == (Question.UNIQUE)) { refreshAnswerListU(); }else if (type == (Question.MULTIPLE)) { refreshAnswerListM(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2175/buggy-version/Quizzard.app.src.main.java.se.bth.students.quizzard.AddQuestion.java", "BodyUseAPI": ["android.os.Bundle.getInt(java.lang.String)", "android.os.Bundle.getSerializable(java.lang.String)"], "Fixed commit": "e1694a7b49344404652496d761e8e1aa1ade59a8", "Url": "https://api.github.com/repos/AndreasArne/DV1431", "Date": "2015-01-02T18:18:54Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gui) { for (int i = 4; i > (pumps.length); i--) { information += \"empty,empty,empty,empty,\"; } }else { output.setNumGallons(totalPumped); output.setFuelMoney((((int) (totalPumped)) * (config.getPencePerGallon()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4514/buggy-version/src.aston.station.PetrolStation.java", "BodyUseAPI": [], "Fixed commit": "7c4e8ebbd899f3e13066417e4e4edfbce599cdb5", "Url": "https://api.github.com/repos/TristanJP/petrolStation", "Date": "2017-04-13T15:49:59Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (candidates.isEmpty()) { candidates.add(possessed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5516/buggy-version/src.org.aiwolf.sample.player.SampleWerewolf.java", "BodyUseAPI": ["java.util.List<org.aiwolf.common.data.Agent>.add(org.aiwolf.common.data.Agent)"], "Fixed commit": "f34db67759c34023158067f32950691a83da4282", "Url": "https://api.github.com/repos/aiwolf/AIWolfClient", "Date": "2017-01-06T20:28:14Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((possibleMatch.parsedUnit) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5862/buggy-version/org.dsource.ddt.ide.core.src.mmrnmhrm.core.search.DeeMatchLocator.java", "BodyUseAPI": [], "Fixed commit": "a6e1409c20378c2d343589173b140f9e4e88422a", "Url": "https://api.github.com/repos/bruno-medeiros/DDT", "Date": "2014-06-27T17:17:38Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit.RetrofitError.getBodyAs(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (e != null) mSignInButton.setErrorText(e.message);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6002/buggy-version/mobile.src.main.java.de.jhbruhn.moin.gui.SignInActivity.java", "BodyUseAPI": ["com.dd.processbutton.iml.ActionProcessButton.setErrorText(e.message)"], "Fixed commit": "5e46f842c1cb141558fe17525d7a987c8a393788", "Url": "https://api.github.com/repos/MoinApp/moinapp-android", "Date": "2015-09-08T13:34:23Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit.RetrofitError.getBodyAs(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (e != null) { mRegisterButton.setErrorText(e.message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6002/buggy-version/mobile.src.main.java.de.jhbruhn.moin.gui.SignInActivity.java", "BodyUseAPI": ["com.dd.processbutton.iml.ActionProcessButton.setErrorText(e.message)"], "Fixed commit": "5e46f842c1cb141558fe17525d7a987c8a393788", "Url": "https://api.github.com/repos/MoinApp/moinapp-android", "Date": "2015-09-08T13:34:23Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nextquote < 0) nextquote = w.length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/882/buggy-version/src.fr.xtof54.mousetodon.DetToot.java", "BodyUseAPI": [], "Fixed commit": "7f86d85dc97b594b489b7dc215684d2a2821efbf", "Url": "https://api.github.com/repos/cerisara/mousetodon", "Date": "2017-05-03T16:08:49Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(userId)) { throw new org.wso2.carbon.identity.provisioning.IdentityProvisioningException(\"Could not find Provisioning User Identification\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7887/buggy-version/components.provisioning.org.wso2.carbon.identity.provisioning.connector.google.src.main.java.org.wso2.carbon.identity.provisioning.connector.google.GoogleProvisioningConnector.java", "BodyUseAPI": [], "Fixed commit": "b13505e0ea88e3ea18699a2baebc56675d503fc8", "Url": "https://api.github.com/repos/GayanM/carbon-identity", "Date": "2015-10-29T14:22:06Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getWindow().isMovingAdjacentData()) { org.eclipse.swt.widgets.Label lbl_adjacencyWarning = new org.eclipse.swt.widgets.Label(cmp_container, org.eclipse.swt.SWT.NONE); lbl_adjacencyWarning.setText(I18n.E3D_AdjacentWarningStatus); lbl_adjacencyWarning.setToolTipText(I18n.E3D_AdjacentWarningDialog); lbl_adjacencyWarning.setForeground(org.eclipse.wb.swt.SWTResourceManager.getColor(SWT.COLOR_INFO_FOREGROUND)); lbl_adjacencyWarning.setBackground(org.eclipse.wb.swt.SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4603/buggy-version/src.org.nschmidt.ldparteditor.dialogs.setcoordinates.CoordinatesDesign.java", "BodyUseAPI": [], "Fixed commit": "5f16022812e5a7f05edcd0c44966798b2ac1d1db", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-09-01T14:58:58Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (goib.isOccupied()) { if (goib.patientUsingBed.isDeteriorating) { if (((goib.patientUsingBed.health) - (goib.patientUsingBed.deteriorationRate)) > 0) { goib.patientUsingBed.health -= goib.patientUsingBed.deteriorationRate; }else { goib.patientUsingBed.health = 0; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1906/buggy-version/src.hsim.handler.GameHandler.java", "BodyUseAPI": [], "Fixed commit": "96813a0cfd47a024108b3ac18420ff93270ed2fc", "Url": "https://api.github.com/repos/klmDF14J/GameJam", "Date": "2014-03-12T18:48:14Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cmd.toLowerCase().equals(\"not\")) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4666/buggy-version/src.main.java.tingeltangel.core.scripting.Commands.java", "BodyUseAPI": [], "Fixed commit": "15997c4c4f9892db58152af95791c5d08e0a790e", "Url": "https://api.github.com/repos/Martin-Dames/Tingeltangel", "Date": "2016-02-08T12:23:09Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["set.iterator().next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cmd1.getAsm().toLowerCase().equals(\"not\")) { return cmd1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4666/buggy-version/src.main.java.tingeltangel.core.scripting.Commands.java", "BodyUseAPI": [], "Fixed commit": "15997c4c4f9892db58152af95791c5d08e0a790e", "Url": "https://api.github.com/repos/Martin-Dames/Tingeltangel", "Date": "2016-02-08T12:23:09Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getType()) != null) { return doSwitch(e.getType()); }else { return doSwitch(e.getExpr()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5845/buggy-version/jkind.xtext.src.jkind.xtext.typing.TypeChecker.java", "BodyUseAPI": ["jkind.xtext.jkind.Constant.getType()", "jkind.xtext.typing.TypeChecker.doSwitch(e.getType())", "jkind.xtext.jkind.Constant.getExpr()", "jkind.xtext.typing.TypeChecker.doSwitch(e.getExpr())"], "Fixed commit": "24913f364c83ca13dac06325d24637b099177c54", "Url": "https://api.github.com/repos/agacek/jkind-xtext", "Date": "2013-09-05T23:22:07Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URI.getPort()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (uriPort != (-1)) { setPort(uriPort); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7704/buggy-version/components.camel-ssh.src.main.java.org.apache.camel.component.ssh.SshConfiguration.java", "BodyUseAPI": ["org.apache.camel.component.ssh.SshConfiguration.setPort(int)"], "Fixed commit": "7a58fe1391c945037a449cf6616e381750c28838", "Url": "https://api.github.com/repos/scranton/camel", "Date": "2011-12-29T19:03:16Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getPart(Attributes.PHOTO)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!((photo.getSize()) == 0)) { if (isPhotoIncorrect(photo)) { errors.put(\"error\", \"Some error with photo has occurred\"); return; } photoService.saveUserPicture(newUser, photo); }else { newUser.setPhotoPath(\"/images/user.png\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2217/buggy-version/src.main.java.ua.nure.voitenkom.SummaryTask4.servlets.authentication.RegistrationServlet.java", "BodyUseAPI": ["ua.nure.voitenkom.SummaryTask4.servlets.authentication.RegistrationServlet.isPhotoIncorrect(javax.servlet.http.Part)", "ua.nure.voitenkom.SummaryTask4.service.photo.PhotoService.saveUserPicture(ua.nure.voitenkom.SummaryTask4.db.entity.User,javax.servlet.http.Part)"], "Fixed commit": "76bb45a518f4bac3ff12fe1dc46b81212c253b9b", "Url": "https://api.github.com/repos/mariiaVoitenko/CarRentalProject", "Date": "2015-08-12T13:44:10Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Abstract.DefCallExpression.getDefinition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((constructor.getThisClass()) != null) { result.type = Pi(\"\\\\this\", ClassCall(constructor.getThisClass()), result.type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5050/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.typechecking.TypeCheckingDefCall.java", "BodyUseAPI": ["com.jetbrains.jetpad.vclang.typechecking.TypeCheckingDefCall.ClassCall(constructor.getThisClass())", "com.jetbrains.jetpad.vclang.typechecking.TypeCheckingDefCall.Pi(java.lang.String,ClassCall(constructor.getThisClass()),result.type)", "com.jetbrains.jetpad.vclang.typechecking.Constructor.getThisClass()"], "Fixed commit": "87d8f001fabfebe7b233f750f6fa2999115e742b", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2015-11-27T10:42:29Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Abstract.FunctionDefinition.getArrow()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (arrow == (Abstract.Definition.Arrow.LEFT)) { visitor.setArgsStartCtxIndex(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5050/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.term.definition.visitor.DefinitionCheckTypeVisitor.java", "BodyUseAPI": [], "Fixed commit": "87d8f001fabfebe7b233f750f6fa2999115e742b", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2015-11-27T10:42:29Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getCode()) != 10) { state = event.getCode(); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8055/buggy-version/src.main.java.MusicPlayer.java", "BodyUseAPI": ["BasicPlayerEvent.getCode()"], "Fixed commit": "5dc7840fff549e123f19ea8cfc38ed2cce366086", "Url": "https://api.github.com/repos/kristinpeterson/shiTunes", "Date": "2014-11-05T00:35:48Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(screen.getText().isEmpty())) screen.setText(java.lang.String.valueOf(model.calculate(number, java.lang.Double.parseDouble(screen.getText()), operator))); else screen.setText(java.lang.String.valueOf(model.calculate(0.0, number, operator)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1533/buggy-version/CalculatorApplication.src.sample.Controller.java", "BodyUseAPI": ["java.lang.String.valueOf(model.calculate(number, java.lang.Double.parseDouble(screen.getText()), operator))", "sample.Model.calculate(double,double,java.lang.String)", "javafx.scene.text.Text.setText(java.lang.String)", "javafx.scene.text.Text.getText()", "javafx.scene.text.Text.setText(java.lang.String)", "java.lang.Double.parseDouble(screen.getText())"], "Fixed commit": "7c73f758a16b96d6db2a6c953c94f0df72440b20", "Url": "https://api.github.com/repos/pranavj1001/JavaFxApplications", "Date": "2016-12-24T05:53:44Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.strullerbaumann.visualee.examiner.Examiner.getSourceCodeScanner(javaSource.getSourceCode())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(scanner.hasNext())) { throw new java.lang.IllegalArgumentException(\"Insufficient number of tokens to set package\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2647/buggy-version/src.main.java.de.strullerbaumann.visualee.examiner.Examiner.java", "BodyUseAPI": [], "Fixed commit": "58fbf0b8274fd6d46b6a76ae08457386d31a6206", "Url": "https://api.github.com/repos/Thomas-S-B/visualee", "Date": "2015-12-22T09:30:11Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.getFileName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (filenamePath == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8326/buggy-version/scribble-http.src.main.java.io.inkstand.scribble.http.rules.FileSystemResource.java", "BodyUseAPI": [], "Fixed commit": "b14ce0317ca1b74a23f03b47d07d25656baf5a9b", "Url": "https://api.github.com/repos/inkstand-io/scribble", "Date": "2015-12-15T06:42:18Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.getFileName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (filename == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8326/buggy-version/scribble-http.src.main.java.io.inkstand.scribble.http.rules.FileSystemResource.java", "BodyUseAPI": [], "Fixed commit": "b14ce0317ca1b74a23f03b47d07d25656baf5a9b", "Url": "https://api.github.com/repos/inkstand-io/scribble", "Date": "2015-12-15T06:42:18Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.getRoot()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (root == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8326/buggy-version/scribble-http.src.main.java.io.inkstand.scribble.http.rules.FileSystemResource.java", "BodyUseAPI": [], "Fixed commit": "b14ce0317ca1b74a23f03b47d07d25656baf5a9b", "Url": "https://api.github.com/repos/inkstand-io/scribble", "Date": "2015-12-15T06:42:18Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(validateNeonExit(null))) { new android.support.v7.app.AlertDialog.Builder(activity).setTitle(((\"Please upload \" + (com.gaadi.neon.util.NeonImagesHandler.getSingletonInstance().getCurrentTag())) + \" Photo\")).setCancelable(true).setIcon(android.R.drawable.ic_dialog_alert).setPositiveButton(\"OK\", new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { dialog.dismiss(); } }).show(); }else { sendImageCollectionAndFinish(activity, ResponseCode.Back); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7866/buggy-version/Neon.src.main.java.com.gaadi.neon.util.NeonImagesHandler.java", "BodyUseAPI": [], "Fixed commit": "5d3aafe8516b173d9b5bfd2b7b398768e38360f7", "Url": "https://api.github.com/repos/lakshay148/Neon", "Date": "2017-08-14T07:33:10Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((emp_name != null) && (!(emp_name.trim().isEmpty()))) { add.append((((\" and emp_name=\" + \"'\") + emp_name) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6878/buggy-version/src.com.csu.dao.xyb.MoveEmpDao.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "863dbc86e12ad13595a407017cb0346b88870491", "Url": "https://api.github.com/repos/YuBoXu/PeopleManageSystem", "Date": "2015-09-23T06:35:23Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.trash.TrashHandlerRegistryUtil.getTrashHandler(entry.getClassName())", "com.liferay.portlet.trash.service.impl.TrashEntryServiceImpl.getPermissionChecker()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(trashHandler.hasTrashPermission(permissionChecker, 0, entry.getClassPK(), ActionKeys.VIEW))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2048/buggy-version/portal-impl.src.com.liferay.portlet.trash.service.impl.TrashEntryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "82010f1d40560d461db8c4469a3903ce1012cbc4", "Url": "https://api.github.com/repos/juliocamarero/liferay-portal", "Date": "2013-03-20T12:46:19Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((staticDetection.StaticDataContainer.readAccesses.containsKey(key)) && (staticDetection.StaticDataContainer.casts.containsKey(key))) { java.lang.String theKey = staticDetection.StaticDataContainer.writeAccesses.get(key); java.lang.String value = staticDetection.StaticDataContainer.casts.get(key); staticDetection.StaticDataContainer.keyValueContainer.add(theKey, value); }else if (((staticDetection.StaticDataContainer.returnValues.containsKey(key)) && (staticDetection.StaticDataContainer.readAccesses.containsKey(key))) && (!(staticDetection.StaticDataContainer.casts.containsKey(key)))) { java.lang.String theKey = staticDetection.StaticDataContainer.writeAccesses.get(key); java.lang.String value = staticDetection.StaticDataContainer.returnValues.get(key); staticDetection.StaticDataContainer.keyValueContainer.add(theKey, value); }else if (staticDetection.StaticDataContainer.readAccesses.containsKey(key)) { java.lang.String theKey = staticDetection.StaticDataContainer.writeAccesses.get(key); java.lang.String value = staticDetection.StaticDataContainer.readAccesses.get(key); staticDetection.StaticDataContainer.keyValueContainer.add(theKey, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4114/buggy-version/src.staticDetection.StaticDataContainer.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.containsKey(java.lang.String)"], "Fixed commit": "e6363058b4ea76e9ebd334a7481c0bf82deabc1e", "Url": "https://api.github.com/repos/mmorelli/PolymorphismDetection", "Date": "2013-07-11T14:25:39Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((grid_elements == null) || (grid_elements.isEmpty())) { grid_elements = doc.select(\"div.gd21v1-pilot\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1401/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.rroot.RSolutionIndex.java", "BodyUseAPI": [], "Fixed commit": "73df3d9ad64e6ebce48dacb048ae47689261736a", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2016-02-18T08:19:37Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((grid_elements == null) || (grid_elements.isEmpty())) { grid_elements = doc.select(\"div.gd21v1-pilot\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1401/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.rroot.RSolutionIndex.java", "BodyUseAPI": [], "Fixed commit": "73df3d9ad64e6ebce48dacb048ae47689261736a", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2016-02-18T08:19:37Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alerts == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4755/buggy-version/app.src.main.java.org.septa.android.app.systemstatus.SystemStatusState.java", "BodyUseAPI": [], "Fixed commit": "760e76e185373f51aef00968199a43cafbf3cdad", "Url": "https://api.github.com/repos/septadev/SEPTA-Android", "Date": "2017-10-26T13:17:18Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mProfilePhotoUrl.startsWith(\"http\")) { return mProfilePhotoUrl; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5737/buggy-version/app.src.main.java.com.globalfriends.com.aroundme.data.PlaceReviewMetadata.java", "BodyUseAPI": [], "Fixed commit": "4642c822cecd8f578dc5633a950e249150ed1301", "Url": "https://api.github.com/repos/GlobalFriends/AroundMe", "Date": "2015-12-18T07:40:00Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (map instanceof com.alibaba.fastjson.JSONObject) { map = ((com.alibaba.fastjson.JSONObject) (map)).getInnerMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/9003/buggy-version/src.main.java.com.alibaba.fastjson.serializer.MapSerializer.java", "BodyUseAPI": [], "Fixed commit": "251e5d05594f852bb51b1e9d0dd0a0ec95eafb36", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-11-03T07:08:53Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (calico.controllers.CCanvasController.exists(calico.controllers.CCanvasController.getCurrentUUID())) return new edu.umd.cs.piccolo.util.PBounds(CCanvasController.canvasdb.get(calico.controllers.CCanvasController.getCurrentUUID()).getLayer().globalToLocal(local)); else return local;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8040/buggy-version/plugins.IntentionalInterfacesPluginClient.src.calico.plugins.iip.inputhandlers.CIntentionCellInputHandler.java", "BodyUseAPI": [], "Fixed commit": "33b07be6c0886268b92ae98b125db582b47ca755", "Url": "https://api.github.com/repos/nfmangano/CalicoClient", "Date": "2013-01-02T01:00:22Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (calico.controllers.CCanvasController.exists(calico.controllers.CCanvasController.getCurrentUUID())) global = CCanvasController.canvasdb.get(calico.controllers.CCanvasController.getCurrentUUID()).getLayer().localToGlobal(temp); else global = temp.getBounds2D();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8040/buggy-version/trunk.calico3client-bugfixes.src.calico.components.bubblemenu.BubbleMenu.java", "BodyUseAPI": [], "Fixed commit": "33b07be6c0886268b92ae98b125db582b47ca755", "Url": "https://api.github.com/repos/nfmangano/CalicoClient", "Date": "2013-01-02T01:00:22Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<cs414.a1.rbetten.Project, java.util.HashSet<cs414.a1.rbetten.Worker>>.get(cs414.a1.rbetten.Project)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (workersAssigned.contains(worker)) { workersAssigned.remove(worker); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8720/buggy-version/src.cs414.a1.rbetten.Company.java", "BodyUseAPI": ["java.util.HashSet<cs414.a1.rbetten.Worker>.remove(cs414.a1.rbetten.Worker)"], "Fixed commit": "aef4dc22dae02ee5de8d559c894878c78bb4a4d5", "Url": "https://api.github.com/repos/renaldorini/CompanyProject", "Date": "2016-09-08T00:29:37Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (proName.startsWith(\"hsql\")) { type = DB.HSQL; }else if (proName.contains(\"derby\")) { type = DB.DERBY; }else { type = DB.OTHER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6845/buggy-version/src.org.nutz.dao.DatabaseMeta.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)"], "Fixed commit": "f8e90c6581aec5f1c2f655556db7a7a6d9b83a13", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2012-05-02T14:28:21Z"},
{"Line": "=>614", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getParam.data.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(getParam.duplicates(switches))) { getParam.setSwitches(map.get(day), switches, 5); program = getParam; org.thermostatapp.util.HeatingSystem.setWeekProgram(getParam); handler.post(new java.lang.Runnable() { public void run() { android.widget.Toast.makeText(context, \"Trigger saved!\", Toast.LENGTH_SHORT).show(); } }); }else { handler.post(new java.lang.Runnable() { public void run() { android.widget.Toast.makeText(context, \"You can not make 2 triggers at the same time of day with the same temperature\", Toast.LENGTH_SHORT).show(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4749/buggy-version/app.src.main.java.nl.tue.a37.group.thermostat.fragments.WeekFragment.java", "BodyUseAPI": ["org.thermostatapp.util.WeekProgram.setSwitches(java.lang.String,java.util.ArrayList<org.thermostatapp.util.Switch>,int)", "org.thermostatapp.util.HeatingSystem.setWeekProgram(org.thermostatapp.util.WeekProgram)"], "Fixed commit": "bb5817a858f02f233c9e4a9ef5943a9efc5fb19d", "Url": "https://api.github.com/repos/Pluuk/Thermostat", "Date": "2017-06-29T13:54:21Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.telegram.telegrambots.api.objects.MessageEntity.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (text.startsWith(org.telegram.updateshandlers.SbertlHandlers.WHO)) { who(chatId, text); }else if (text.startsWith(\"/die\")) { java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8320/buggy-version/src.main.java.org.telegram.updateshandlers.SbertlHandlers.java", "BodyUseAPI": ["org.telegram.updateshandlers.SbertlHandlers.who(java.lang.String,java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "0717d33077f4c72aa64b170c2481493a8baec801", "Url": "https://api.github.com/repos/Adven27/TelegramBot", "Date": "2016-11-03T15:32:01Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((action.equals(\"login\")) || (action.equals(\"\"))) || (action.equals(\"/\"))) { dispatchUrl = \"jsp/Login.jsp\"; }else if (action.equals(\"place_order\")) { dispatchUrl = \"jsp/PlaceOrder.jsp\"; }else if (action.equals(\"logout\")) { dispatchUrl = \"jsp/Login.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4960/buggy-version/src.java.com.pos.controller.ControllerServlet.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "6b07cd1687a528df6f5ef632a06736db34edc96c", "Url": "https://api.github.com/repos/josh23941/POSProject", "Date": "2013-02-15T17:57:44Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((xmppmsg.getType()) != (org.jivesoftware.smack.packet.Message.Type.normal)) { mAckExecutor.post(new com.magnet.mmx.client.common.MessageManager.SendAck(packet)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7196/buggy-version/common.src.main.java.com.magnet.mmx.client.common.MessageManager.java", "BodyUseAPI": [], "Fixed commit": "a3331904e613f36c2be9d8c4e5f75c76604d7902", "Url": "https://api.github.com/repos/magnetsystems/message-sdk-java-android", "Date": "2015-11-03T20:58:34Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pTile.getUnit()) == null) { if (((((pTile.getStructureType()) != (StructureType.TREE)) && ((pTile.getStructureType()) != (StructureType.VILLAGE_CAPITAL))) && ((pTile.getStructureType()) != (StructureType.TOMBSTONE))) && ((pTile.getStructureType()) != (StructureType.WATCHTOWER))) { int lHireCost; lHireCost = mw.server.gamelogic.PriceCalculator.getHireCost(pUnitType); aMap.getVillage(pTile).addOrSubtractGold((-lHireCost)); mw.server.gamelogic.Unit pUnit = new mw.server.gamelogic.Unit(pUnitType); pTile.setUnit(pUnit); pTile.notifyObservers(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2525/buggy-version/src.mw.server.gamelogic.Game.java", "BodyUseAPI": ["mw.server.gamelogic.Tile.getStructureType()", "mw.server.gamelogic.Tile.getStructureType()", "mw.server.gamelogic.Tile.getStructureType()", "mw.server.gamelogic.Tile.setUnit(mw.server.gamelogic.Unit)", "aMap.getVillage(pTile).addOrSubtractGold(int)", "mw.server.gamelogic.Tile.notifyObservers()", "mw.server.gamelogic.Tile.getStructureType()", "mw.server.gamelogic.GameMap.getVillage(mw.server.gamelogic.Tile)"], "Fixed commit": "13e63494bae0bdb9466f3feb62d5bb47e6fe6ef8", "Url": "https://api.github.com/repos/EmilyRSager/MedeivalWarfare", "Date": "2015-03-11T21:02:59Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file[i].getName().endsWith(\".xml\")) files.add(temp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3827/buggy-version/src.com.buildmlearn.fragments.NoProjectFragment.java", "BodyUseAPI": [], "Fixed commit": "9acb7aa971a109a86a965e89caa5c9169322fb2f", "Url": "https://api.github.com/repos/yogeshmadaan100/BuildmLearnToolkit-Template", "Date": "2015-04-09T16:02:22Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tmsStoryMst.getTmsTaskType()) != null) { map.put(\"taskTypeId\", tmsStoryMst.getTmsTaskType().getId()); map.put(\"taskTypeName\", tmsStoryMst.getTmsTaskType().getTaskTypeName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4822/buggy-version/source.src.main.java.com.cyb.tms.dao.impl.TmsStoryDAOImpl.java", "BodyUseAPI": ["java.util.LinkedHashMap<java.lang.String, java.lang.Object>.put(java.lang.String,tmsStoryMst.getTmsTaskType().getId())", "tmsStoryMst.getTmsTaskType().getId()", "java.util.LinkedHashMap<java.lang.String, java.lang.Object>.put(java.lang.String,tmsStoryMst.getTmsTaskType().getTaskTypeName())", "com.cyb.tms.entity.TmsStoryMst.getTmsTaskType()", "tmsStoryMst.getTmsTaskType().getTaskTypeName()", "com.cyb.tms.entity.TmsStoryMst.getTmsTaskType()"], "Fixed commit": "0141ca74bb6ca28ee7b91daca4f411f76752568b", "Url": "https://api.github.com/repos/sajus/zindabad", "Date": "2016-08-03T11:11:51Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuffer.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((open > 0) && (java.lang.Character.isDigit(x.charAt((open - 1))))) { x.insert(open, '*'); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/196/buggy-version/src.hall.collin.christopher.dicexp.DiceXp.java", "BodyUseAPI": ["java.lang.StringBuffer.insert(int,char)"], "Fixed commit": "c56329b4651edba5cd8c77c0ccd441ca51332aba", "Url": "https://api.github.com/repos/cyanobacteruim/DiceXp", "Date": "2013-08-06T22:13:38Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (HACzoning) { java.util.Set<java.lang.String> keySetOnServer = ueHAC.keySetOnServer(); ueIDsAsList = new java.util.ArrayList<>(); ueIDsAsList.addAll(keySetOnServer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/531/buggy-version/core.src.main.java.com.yahoo.ycsb.workloads.GeodeWorkload.java", "BodyUseAPI": [], "Fixed commit": "69aab6331d181336c7997104792f989da0b0a50b", "Url": "https://api.github.com/repos/Virta/YCSB", "Date": "2016-10-18T13:57:02Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((selected) != null) && (tree.getStore().contains(selected))) { return selected; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6307/buggy-version/src.main.java.ru.fly.client.ui.tree.TreeView.java", "BodyUseAPI": [], "Fixed commit": "e858b2a55e187be697dbb6d90b93965e8f0c2beb", "Url": "https://api.github.com/repos/filius/fly-gwt", "Date": "2015-05-21T20:42:51Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Clusters.get(ctr).size()) > 1) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4306/buggy-version/jedai-core.src.EntityClustering.RicochetSRClustering.java", "BodyUseAPI": [], "Fixed commit": "0c60e0383b5bedcdc7b2aa599b21bb31734732e8", "Url": "https://api.github.com/repos/scify/JedAIToolkit", "Date": "2016-12-06T01:32:05Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((date.isEmpty()) && (time.isEmpty())) { return \"\"; }else if (date.isEmpty()) { return time; }else if (time.isEmpty()) { return date; }else { return ((date) + \" \") + (time); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7347/buggy-version/src.Storage.DateTime.java", "BodyUseAPI": ["java.lang.String.isEmpty()", "java.lang.String.isEmpty()"], "Fixed commit": "c411f9ba83b112b6a8c9524338a5f1870c3eb987", "Url": "https://api.github.com/repos/cs2103aug2014-t15-1j/main", "Date": "2014-10-17T07:57:35Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tweets.size()) < 1) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7429/buggy-version/app.src.main.java.com.codepath.apps.tweettrove.fragments.TimelineFragment.java", "BodyUseAPI": [], "Fixed commit": "fa65e3937411d9eadbe59a0db8a5812d198ba43c", "Url": "https://api.github.com/repos/mhareendra/TweetTrove", "Date": "2016-08-15T04:51:07Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (new java.io.File(((path + (java.io.File.separator)) + filename)).exists()) { org.eclipse.swt.widgets.MessageBox warningPage = new org.eclipse.swt.widgets.MessageBox(getDisplay().getActiveShell(), ((org.eclipse.swt.SWT.OK) | (org.eclipse.swt.SWT.ICON_WARNING))); warningPage.setText(\"Warning!\"); warningPage.setMessage(\"Naming Conclict! Import failed!\"); warningPage.open(); getShell().dispose(); }else if ((!(filepath.contains(\".png\"))) && (!(filepath.contains(\".jpg\")))) { org.eclipse.swt.widgets.MessageBox warningPage = new org.eclipse.swt.widgets.MessageBox(getDisplay().getActiveShell(), ((org.eclipse.swt.SWT.OK) | (org.eclipse.swt.SWT.ICON_WARNING))); warningPage.setText(\"Warning!\"); warningPage.setMessage(\"Extension doesn't support!\"); warningPage.open(); getShell().dispose(); }else { fos = new java.io.FileOutputStream(((path + (java.io.File.separator)) + filename), true); byte[] b = new byte[2048]; int length; while ((length = fin.read(b)) != (-1)) { fos.write(b, 0, length); } fin.close(); fos.close(); org.eclipse.swt.graphics.Image image = new org.eclipse.swt.graphics.Image(getDisplay(), ((path + (java.io.File.separator)) + filename)); org.eclipse.nebula.widgets.gallery.GalleryItem item = new org.eclipse.nebula.widgets.gallery.GalleryItem(group, org.eclipse.swt.SWT.None); item.setImage(image); org.eclipse.swt.widgets.MessageBox successPage = new org.eclipse.swt.widgets.MessageBox(getDisplay().getActiveShell(), ((org.eclipse.swt.SWT.OK) | (org.eclipse.swt.SWT.ICON_WARNING))); successPage.setText(\"Thanks for waiting...\"); successPage.setMessage(\"Image downloaded!\"); successPage.open(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1269/buggy-version/eManager.eventSpace.organizer.preEvent.publicity.GetImageFromURL.java", "BodyUseAPI": [], "Fixed commit": "97da3cf08a57386e44742e938864720acbfda3b3", "Url": "https://api.github.com/repos/guanyilun/eManager", "Date": "2012-04-13T11:34:51Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ready) == false) { serverInterface.playerReady(clientName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8487/buggy-version/game.Game.java", "BodyUseAPI": [], "Fixed commit": "f58bfd32d24b1d99466801f260e11d80ab29fc1a", "Url": "https://api.github.com/repos/XXL6/Checkers-Client", "Date": "2015-12-03T20:24:44Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (len > 0) { char c = path.charAt((len - 1)); if (c == '/') { rtn = true; } }else { rtn = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3779/buggy-version/src.java.com.beaconhill.s3cp.S3FileInfo.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "b37fd946fefadcbfff17704af1628a7dfb8a3351", "Url": "https://api.github.com/repos/bradlucas/s3cp", "Date": "2016-10-18T13:15:56Z"},
{"Line": "=>1100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((connHandler) != null) && ((connHandler.ftpClient) != null)) { connHandler.ftpClient.completePendingCommand(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5473/buggy-version/src.main.com.mucommander.commons.file.impl.ftp.FTPFile.java", "BodyUseAPI": ["org.apache.commons.net.ftp.FTPClient.completePendingCommand()"], "Fixed commit": "9b79d8720036e9a5ce149fab0ff9737ffca1b513", "Url": "https://api.github.com/repos/trol73/mucommander", "Date": "2017-09-21T11:37:47Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["andicar.n.utils.FileUtils.getFileNames(andicar.n.service.BackupService,ConstantValues.BACKUP_FOLDER,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (newAutoBkFileNames != null) { java.util.Collections.sort(newAutoBkFileNames, java.lang.String.CASE_INSENSITIVE_ORDER); java.util.Collections.reverse(newAutoBkFileNames); autoBkFileNames.addAll(newAutoBkFileNames); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1303/buggy-version/AndiCar.src.main.java.andicar.n.service.BackupService.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.addAll(java.util.ArrayList<java.lang.String>)", "java.util.Collections.reverse(java.util.ArrayList<java.lang.String>)", "java.util.Collections.sort(java.util.ArrayList<java.lang.String>,java.util.Comparator<java.lang.String>)"], "Fixed commit": "399864c668f4a2d105b35fde15e47ce20a6d49e9", "Url": "https://api.github.com/repos/mkeresztes/AndiCar", "Date": "2017-09-01T09:08:18Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["andicar.n.utils.FileUtils.getFileNames(andicar.n.service.BackupService,ConstantValues.BACKUP_FOLDER,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (oldAutoBkFileNames != null) { java.util.Collections.sort(oldAutoBkFileNames, java.lang.String.CASE_INSENSITIVE_ORDER); java.util.Collections.reverse(oldAutoBkFileNames); autoBkFileNames.addAll(oldAutoBkFileNames); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1303/buggy-version/AndiCar.src.main.java.andicar.n.service.BackupService.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.ArrayList<java.lang.String>,java.util.Comparator<java.lang.String>)", "java.util.Collections.reverse(java.util.ArrayList<java.lang.String>)", "java.util.ArrayList<java.lang.String>.addAll(java.util.ArrayList<java.lang.String>)"], "Fixed commit": "399864c668f4a2d105b35fde15e47ce20a6d49e9", "Url": "https://api.github.com/repos/mkeresztes/AndiCar", "Date": "2017-09-01T09:08:18Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((srcType == (com.phonegap.CameraLauncher.PHOTOLIBRARY)) || (srcType == (com.phonegap.CameraLauncher.SAVEDPHOTOALBUM))) { if (resultCode == (android.app.Activity.RESULT_OK)) { android.net.Uri uri = intent.getData(); android.content.ContentResolver resolver = this.ctx.getContentResolver(); if (destType == (com.phonegap.CameraLauncher.DATA_URL)) { try { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory.decodeStream(resolver.openInputStream(uri)); bitmap = scaleBitmap(bitmap); this.processPicture(bitmap); bitmap.recycle(); bitmap = null; java.lang.System.gc(); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); this.failPicture(\"Error retrieving image.\"); } }else if (destType == (com.phonegap.CameraLauncher.FILE_URI)) { if (((this.targetHeight) != 0) && ((this.targetWidth) != 0)) { try { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory.decodeStream(resolver.openInputStream(uri)); bitmap = scaleBitmap(bitmap); java.lang.String fileName = (com.phonegap.DirectoryManager.getTempDirectoryPath(ctx)) + \"/resize.jpg\"; java.io.OutputStream os = new java.io.FileOutputStream(fileName); bitmap.compress(Bitmap.CompressFormat.JPEG, this.mQuality, os); os.close(); bitmap.recycle(); bitmap = null; this.success(new com.phonegap.api.PluginResult(PluginResult.Status.OK, (\"file://\" + fileName)), this.callbackId); java.lang.System.gc(); } catch (java.lang.Exception e) { e.printStackTrace(); this.failPicture(\"Error retrieving image.\"); } }else { this.success(new com.phonegap.api.PluginResult(PluginResult.Status.OK, uri.toString()), this.callbackId); } } }else if (resultCode == (android.app.Activity.RESULT_CANCELED)) { this.failPicture(\"Selection cancelled.\"); }else { this.failPicture(\"Selection did not complete!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1878/buggy-version/framework.src.com.phonegap.CameraLauncher.java", "BodyUseAPI": [], "Fixed commit": "2b20b1880d99d0f4d805064847e8d73fb4b2db33", "Url": "https://api.github.com/repos/macdonst/phonegap-android", "Date": "2011-09-10T19:49:00Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends org.tomighty.resources.Resources>.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (imageUrl == null) { imageUrl = getClass().getResource(org.tomighty.resources.Resources.DEFAULT_TRAY_ICON); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6610/buggy-version/src.main.java.org.tomighty.resources.Resources.java", "BodyUseAPI": [], "Fixed commit": "7164bf0ad3345568c6e14a74278ea25c3658255b", "Url": "https://api.github.com/repos/tomighty/tomighty", "Date": "2011-04-17T16:16:21Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (monthView != null) { monthView.setOnDayClickListener(mOnDayClickListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8535/buggy-version/monthview.src.main.java.com.genestream.monthview.MonthViewPagerAdapter.java", "BodyUseAPI": ["com.genestream.monthview.MonthView.setOnDayClickListener(com.genestream.monthview.OnDayClickListener)"], "Fixed commit": "a658cd140f2d3a8cc3f7783c9d835ae0f8502de8", "Url": "https://api.github.com/repos/genestream/MonthView", "Date": "2015-02-02T09:01:49Z"},
{"Line": "=>691", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lpoezy.nexpa.sqlite.SQLiteHandler.downloadLatestMsgSentOffline(long,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((sent != null) && ((sent.size()) != 0)) sentDate = com.lpoezy.nexpa.utility.DateUtils.simpleDateToMillis(sent.get(com.lpoezy.nexpa.sqlite.SQLiteHandler.MSG_DATE));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8332/buggy-version/Nexpa.src.com.lpoezy.nexpa.sqlite.SQLiteHandler.java", "BodyUseAPI": ["com.lpoezy.nexpa.utility.DateUtils.simpleDateToMillis(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "c7e253e5b1f5b2b5244397c5bec24083ed641ca7", "Url": "https://api.github.com/repos/fitzroycorpuz/Nexpa", "Date": "2015-12-11T01:29:04Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.apache.commons.lang3.StringUtils.startsWith(resource, \"http://\")) || (org.apache.commons.lang3.StringUtils.startsWith(resource, \"https://\"))) { org.eol.globi.util.ResourceUtil.LOG.info(((\"caching of [\" + resource) + \"] started...\")); is = org.eol.globi.util.ResourceUtil.getCachedRemoteInputStream(resource); org.eol.globi.util.ResourceUtil.LOG.info(((\"caching of [\" + resource) + \"] complete.\")); }else if (org.apache.commons.lang3.StringUtils.startsWith(resource, \"file://\")) { is = new java.io.FileInputStream(new java.io.File(java.net.URI.create(resource))); }else if (clazz != null) { is = clazz.getResourceAsStream(resource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6678/buggy-version/eol-globi-lib.src.main.java.org.eol.globi.util.ResourceUtil.java", "BodyUseAPI": ["org.eol.globi.util.ResourceUtil.getCachedRemoteInputStream(java.lang.String)", "org.apache.commons.lang3.StringUtils.startsWith(java.lang.String,java.lang.String)", "java.lang.Class.getResourceAsStream(java.lang.String)", "org.apache.commons.logging.Log.info(java.lang.String)", "java.net.URI.create(java.lang.String)", "org.apache.commons.logging.Log.info(java.lang.String)"], "Fixed commit": "b0c17a39312f100f4e11285e178440b97c495370", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2016-04-07T16:29:39Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (OS.contains(\"mac\")) { Haus.TechnicalFramework.Controllers.TeacherController.runScript(mac); }else if (OS.contains(\"wind\")) { Haus.TechnicalFramework.Controllers.TeacherController.runScript(windows); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8479/buggy-version/JavaFx.src.Haus.TechnicalFramework.Controllers.TeacherController.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)"], "Fixed commit": "6c8050fbfba71f0a6fe7fca132b10b32039aa817", "Url": "https://api.github.com/repos/Team9HT2017/Group9HT2017", "Date": "2017-12-09T20:37:28Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((provider.getProviderConfig()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2286/buggy-version/authsvc.src.main.java.com.emc.storageos.auth.idp.OIDCAuthenticationManager.java", "BodyUseAPI": [], "Fixed commit": "b8ae93ae1a86c24307481812d3b7857d0218b2f0", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-09-20T15:04:42Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gg.plans.throwable) == null) gg.plans.save();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7161/buggy-version/app.src.main.java.de.gebatzens.sia.GGBroadcast.java", "BodyUseAPI": ["gg.plans.save()"], "Fixed commit": "2d1d936fe6009c485e6326ef86eaa3287e18a60d", "Url": "https://api.github.com/repos/Cedgetec/SchulinfoApp-android", "Date": "2015-11-02T12:47:12Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((literature.getFulltextURLs()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2110/buggy-version/src.main.java.com.github.bfour.fpliteraturecollector.service.DefaultLiteratureService.java", "BodyUseAPI": [], "Fixed commit": "9c3a37ba0a9ca6a7242af3aa5014177991b03cb5", "Url": "https://api.github.com/repos/bfour/LiteratureCollector", "Date": "2015-11-02T11:46:33Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(World.playerList.get(i).isAlive())) { World.playerList.get(i).height = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4443/buggy-version/src.World.java", "BodyUseAPI": ["java.util.List<Player>.get(int)"], "Fixed commit": "2212faf08c8cfc3a7808fa7f9e050ee8b7b87729", "Url": "https://api.github.com/repos/DanielKrolopp/PipeStalling", "Date": "2017-02-19T12:43:11Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.diplomska.emed.martin.e_medicine.models.PillModel>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(pill.getImgUrl())) { com.squareup.picasso.Picasso.with(viewGroup.getContext()).load(R.drawable.no_image).into(holder.imgPill); }else { com.squareup.picasso.Picasso.with(viewGroup.getContext()).load(pill.getImgUrl()).into(holder.imgPill); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/9236/buggy-version/app.src.main.java.com.diplomska.emed.martin.e_medicine.adapter.PillsAdapter.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(viewGroup.getContext()).load(pill.getImgUrl()).into(holder.imgPill)", "com.squareup.picasso.Picasso.with(viewGroup.getContext()).load(pill.getImgUrl())", "com.diplomska.emed.martin.e_medicine.models.PillModel.getImgUrl()"], "Fixed commit": "1e20444a38fe8137e99360c8ab740dcbc29d888b", "Url": "https://api.github.com/repos/martin04/eMedicine", "Date": "2015-09-04T19:05:09Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((customView.getLayoutParams()) == null) { addView(customView, 1, new android.view.ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT)); }else { addView(customView, 1, new android.view.ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, customView.getLayoutParams().height)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8602/buggy-version/sdlv.src.main.java.com.yydcdut.sdlv.ItemCustomLayout.java", "BodyUseAPI": ["com.yydcdut.sdlv.ItemCustomLayout.addView(android.view.View,int,android.view.ViewGroup.LayoutParams)", "com.yydcdut.sdlv.ItemCustomLayout.addView(android.view.View,int,android.view.ViewGroup.LayoutParams)", "android.view.View.getLayoutParams()"], "Fixed commit": "2ee0d823f0c5c8c9378af844062c5cc5de6f92c2", "Url": "https://api.github.com/repos/yydcdut/SlideAndDragListView", "Date": "2016-02-29T09:30:10Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { mContent.getSettings().setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8933/buggy-version/app.src.main.java.com.adonai.manman.ManPageDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "ff306de736ee6202d7dd8ddc56c0ce410aaca96b", "Url": "https://api.github.com/repos/Adonai/Man-Man", "Date": "2015-02-22T16:59:56Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.deidentifier.arx.gui.model.ModelConfiguration.getHierarchy(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((hierarchy == null) || ((hierarchy.getHierarchy()) == null)) { hierarchy = org.deidentifier.arx.AttributeType.Hierarchy.create(); config.setHierarchy(attr, hierarchy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3333/buggy-version/src.gui.org.deidentifier.arx.gui.model.Model.java", "BodyUseAPI": [], "Fixed commit": "a924c22925522bddc26b7ccb541f316ccaa9823b", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-04-14T14:30:05Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.exent.flywithme.layout.Preferences.findPreference(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (scheduleFetchTakeoffs == null) { android.util.Log.w(getClass().getName(), \"Unable to find preference widgets, can't update preference screen\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7668/buggy-version/android.flywithme.src.main.java.net.exent.flywithme.layout.Preferences.java", "BodyUseAPI": [], "Fixed commit": "9c267c3e8706cd2271bce07ecb65890c5acb6d0b", "Url": "https://api.github.com/repos/canidae/FlyWithMe", "Date": "2014-04-24T17:41:21Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((configuration) != null) { soc.connect(new java.net.InetSocketAddress(url, java.lang.Integer.parseInt(port)), configuration.getSocketDieInterval()); }else { soc.connect(new java.net.InetSocketAddress(url, java.lang.Integer.parseInt(port)), 5000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7427/buggy-version/ServiceWatcher.src.main.java.com.cons.services.SocketService.java", "BodyUseAPI": [], "Fixed commit": "a85f5988421debf6f1457cf8c664fd147d8059dc", "Url": "https://api.github.com/repos/gtrianta1965/ServiceWatcher", "Date": "2017-07-17T07:25:55Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.galeb.manager.repository.VirtualHostRepository.findOne(virtualHost.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (virtualHostExistent != null) { throw new io.galeb.manager.exceptions.ConflictException(\"Virtual Host already exists\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5102/buggy-version/src.main.java.io.galeb.manager.handler.VirtualHostHandler.java", "BodyUseAPI": [], "Fixed commit": "f750d20a3e7e431bf0582da7e95d4cc79fee2ef6", "Url": "https://api.github.com/repos/galeb/galeb-manager", "Date": "2017-11-07T14:52:57Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentEmployee.getManager()) == null) java.lang.System.out.println(\"This is a main boss!\"); else managerRecursion(currentEmployee);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3640/buggy-version/EmplRecursion.src.main.java.EmplService.java", "BodyUseAPI": ["EmplService.managerRecursion(Employee)"], "Fixed commit": "7fce91af4c7cdaba753034e62b833e322a506d85", "Url": "https://api.github.com/repos/KondratiukVolodymyr/JavaCourse", "Date": "2016-08-22T16:43:10Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((test) == null) { if (map) throw org.basex.query.func.MAP_X_X.get(info, item.type, item); }else if ((!(test.eq(item))) && (!(item instanceof org.basex.query.func.Map))) { throw org.basex.query.func.ELMMAP_X_X_X.get(info, root.prefixId(org.basex.query.func.XML), item.type, item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/750/buggy-version/basex-core.src.main.java.org.basex.query.func.FuncOptions.java", "BodyUseAPI": [], "Fixed commit": "e26d6cd62dc575ccbeb182355fd59f7fb811590d", "Url": "https://api.github.com/repos/BaseXdb/basex", "Date": "2015-02-26T13:18:08Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model.gradebook.Gradebook.getInstance().getCurrentCourse()) != null) { javafx.fxml.FXMLLoader loader = new javafx.fxml.FXMLLoader(getClass().getResource(\"/view/gradebook/DeleteClass.fxml\")); view.ViewUtility.loadAndShowPage(loader, javafx.scene.layout.AnchorPane.class, \"Delete Class\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1113/buggy-version/trunk.implementation.controller.file.MenuBarController.java", "BodyUseAPI": [], "Fixed commit": "3b548149de1c8db8a828e439d84a36fb16f188bf", "Url": "https://api.github.com/repos/jjfazio/308Grader", "Date": "2014-03-21T01:53:33Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (properties.containsKey(supplierId)) { return properties.get(supplierId).keySet(); }else { return new java.util.HashSet<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8786/buggy-version/pricer.src.main.java.com.prima.pricer.service.SiteIdReaderService.java", "BodyUseAPI": ["properties.get(supplierId).keySet()", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.String>>>.get(java.lang.String)"], "Fixed commit": "173e8b171cde2ced6464ff005e93122cdeb8d954", "Url": "https://api.github.com/repos/ybaranov/Andrey", "Date": "2016-12-10T11:24:35Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(string.isEmpty())) arrayList.add(string);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3679/buggy-version/src.main.java.com.sneakingshadow.core.multiblock.InputHandler.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Object>.add(java.lang.String)"], "Fixed commit": "57238987aa0e63473af264b4d93b24677a589f1b", "Url": "https://api.github.com/repos/SneakingShadow/ShadowCore-1.7.10", "Date": "2016-12-04T22:36:15Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f instanceof DataHandling._return) { if (tree.children.isEmpty()) { return true; }else { return checkPossiblyConstant(tree.children.get(0)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4829/buggy-version/src.main.java.com.laytonsmith.core.Procedure.java", "BodyUseAPI": [], "Fixed commit": "5075443375c9559d8710b71505202e0e4cc9f8a0", "Url": "https://api.github.com/repos/EntityReborn/commandhelper", "Date": "2012-07-10T16:10:09Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hour == 0) { hour = (isMilitary) ? 24 : 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7252/buggy-version/src.com.potter.silencer.ui.notification.SilencedNotificationFactory.java", "BodyUseAPI": [], "Fixed commit": "85eb4d4e9dcd8a8c15fff31152eb6574f458db64", "Url": "https://api.github.com/repos/ppotter/silencer", "Date": "2014-05-25T18:12:15Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((readnext) == null) { read = \"No entries found! Please make the Captain sit down and write something before we all die!!\"; }else { read = readnext; while ((linenum > 0) && ((readnext) != null)) { read = readnext; readnext = in.readLine(); linenum--; linecount++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5136/buggy-version/src.net.daiznaew.dbot3.Listeners.Commands.ReadLog.java", "BodyUseAPI": [], "Fixed commit": "148cb5eec1f94022280caa1ccc3ea5b42324de19", "Url": "https://api.github.com/repos/snaiperskaya/DBot3", "Date": "2013-07-10T22:43:45Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cIdx + 1) != nextIdx) res.add(str.substring((cIdx + 1), nextIdx).trim());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1810/buggy-version/src.main.java.kr.tagnote.util.CommonUtils.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.substring(int,int)", "java.util.List.add(java.lang.String)"], "Fixed commit": "455ea4e3576d46accbbc6ae1f025649e41840426", "Url": "https://api.github.com/repos/BoBinLee/tagnote", "Date": "2015-06-16T13:09:02Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cardSkill.getType()) == (cfvbaibai.cardfantasy.data.SkillType.\u771f\u7406\u5bfc\u8a00)) { healHP = ((card.getMaxHP()) * (cardSkill.getImpact())) / 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4884/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.skill.Rejuvenate.java", "BodyUseAPI": ["cfvbaibai.cardfantasy.data.Skill.getImpact()"], "Fixed commit": "a7e1ec663f6eed7d7f8dd71dba363715ae6e35f1", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2016-08-05T13:52:20Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (-1)) { work.s.close(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4560/buggy-version/src.com.javaprophet.javawebserver.networking.ThreadStreamWorker.java", "BodyUseAPI": [], "Fixed commit": "75d0ad0e1552783c1088852167c88b84141ef281", "Url": "https://api.github.com/repos/Protryon/AvunaHTTPD-Java", "Date": "2015-02-01T21:27:01Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getBlobBase64Direction()) != null) { if (\"decode\".equalsIgnoreCase(getBlobBase64Direction())) { inputStream = new org.apache.commons.codec.binary.Base64InputStream(inputStream); }else if (\"encode\".equalsIgnoreCase(getBlobBase64Direction())) { inputStream = new org.apache.commons.codec.binary.Base64InputStream(inputStream, true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/635/buggy-version/core.src.main.java.nl.nn.adapterframework.jdbc.JdbcQuerySenderBase.java", "BodyUseAPI": [], "Fixed commit": "5136102b291f55fe988aad5d88e4b501c6dbe647", "Url": "https://api.github.com/repos/ibissource/iaf", "Date": "2017-01-25T14:34:26Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (candidate == (test.length)) { candidate -= test.length; }else if (candidate < 0) { candidate += test.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1432/buggy-version/sym.src.main.java.com.github.methylene.sym.Util.java", "BodyUseAPI": [], "Fixed commit": "c9c2f0d421c01a187a3732e57d4b16fe58f3c964", "Url": "https://api.github.com/repos/methylene/sym", "Date": "2015-03-06T08:33:59Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<distributed.systems.das.BattleField.ActionID, distributed.systems.das.BattleField.ActionInfo>.remove(distributed.systems.das.BattleField.ActionID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (removeAction != null) { removeAction.timer.cancel(); java.lang.System.out.println((((((((\"[S\" + (port)) + \"] OutsideSize \") + (pendingOutsideActions.size())) + \" Confirm = \") + ((java.lang.Boolean) (msg.get(\"confirm\")))) + \" RemoveAction Request: \") + (removeAction.message.get(\"request\")))); if (((java.lang.Boolean) (msg.get(\"confirm\")))) processEvent(msg, removeAction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7453/buggy-version/src.distributed.systems.das.BattleField.java", "BodyUseAPI": ["distributed.systems.core.Message.get(java.lang.String)", "distributed.systems.das.BattleField.processEvent(distributed.systems.core.Message,distributed.systems.das.BattleField.ActionInfo)", "java.util.Timer.cancel()", "java.io.PrintStream.println((((((((\"[S\" + (port)) + \"] OutsideSize \") + (pendingOutsideActions.size())) + \" Confirm = \") + ((java.lang.Boolean) (msg.get(\"confirm\")))) + \" RemoveAction Request: \") + (removeAction.message.get(\"request\"))))"], "Fixed commit": "d182b5452590046cecf84cdd0400585fe422cfb9", "Url": "https://api.github.com/repos/vascoconde/DCS-DAS", "Date": "2013-04-20T15:31:08Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gauge.value()) instanceof java.lang.Double) { measurement.getFields().put(\"value\", ((java.lang.Double) (gauge.value()))); publisher.publish(measurement); }else if (((gauge.value()) instanceof java.lang.Long) || ((gauge.value()) instanceof java.lang.Float)) { measurement.getFields().put(\"value\", java.lang.Double.valueOf(gauge.value().toString())); publisher.publish(measurement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/9130/buggy-version/metrics-reporter.src.main.java.io.amient.kafka.metrics.StreamingReporter.java", "BodyUseAPI": ["io.amient.kafka.metrics.Gauge<?>.value()", "io.amient.kafka.metrics.Gauge<?>.value()", "measurement.getFields().put(java.lang.String,java.lang.Double)", "java.lang.Double.valueOf(gauge.value().toString())", "measurement.getFields().put(java.lang.String,((java.lang.Double) (gauge.value())))", "gauge.value().toString()", "io.amient.kafka.metrics.Gauge<?>.value()", "io.amient.kafka.metrics.Gauge<?>.value()"], "Fixed commit": "db3595ee6453af1ecd5375b52b005507c974d1a9", "Url": "https://api.github.com/repos/amient/kafka-metrics", "Date": "2015-11-22T00:57:23Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((containerLogDir == null) || ((containerLogDir.listFiles()) == null)) { return new java.util.HashSet<>(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5373/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-common.src.main.java.org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat.java", "BodyUseAPI": [], "Fixed commit": "4b5bd73ac53f7de4899b5b70078249ad20216048", "Url": "https://api.github.com/repos/wwjiang007/hadoop", "Date": "2017-05-01T11:01:16Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (processDirs != null) { for (java.lang.String dir : processDirs) { java.util.regex.Matcher m = org.apache.hadoop.yarn.util.ProcfsBasedProcessTree.numberPattern.matcher(dir); if (!(m.matches())) { continue; } try { if (new java.io.File(procfsDir, dir).isDirectory()) { processList.add(dir); } } catch (java.lang.SecurityException s) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5373/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-common.src.main.java.org.apache.hadoop.yarn.util.ProcfsBasedProcessTree.java", "BodyUseAPI": [], "Fixed commit": "4b5bd73ac53f7de4899b5b70078249ad20216048", "Url": "https://api.github.com/repos/wwjiang007/hadoop", "Date": "2017-05-01T11:01:16Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (address.equals(getServerAddress())) { throw new java.lang.RuntimeException(\"Who did this?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5705/buggy-version/org.blockout.network.src.main.java.org.blockout.network.reworked.ConnectionManager.java", "BodyUseAPI": [], "Fixed commit": "81318845f55a64e999a1bbcbd1396ef13b8a0039", "Url": "https://api.github.com/repos/coding-mof/p2p-lab-blockout", "Date": "2012-07-22T09:55:35Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.players.get(((this.players.size()) - 1)).getPosition().getY()) - 0.08F) > (-1.0F)) { for (int i = 0; i < (positions.size()); i++) { this.players.get(i).addPosition(new org.lwjgl.util.vector.Vector2f(0, (((-1) - (this.players.get(((this.players.size()) - 1)).getPosition().getY())) + 0.08F))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6011/buggy-version/src.SneakySnakeClient.Scene.Players.java", "BodyUseAPI": ["this.players.get(i).addPosition(org.lwjgl.util.vector.Vector2f)", "java.util.ArrayList<SneakySnakeClient.Scene.PlayerGui>.get(((this.players.size()) - 1))", "java.util.ArrayList<SneakySnakeClient.Scene.PlayerGui>.get(int)", "this.players.get(((this.players.size()) - 1)).getPosition()", "java.util.ArrayList<SneakySnakeClient.Scene.PlayerGui>.size()", "this.players.get(((this.players.size()) - 1)).getPosition().getY()"], "Fixed commit": "065efdc5e31841f3bb4fa0175f3e85655ba1776c", "Url": "https://api.github.com/repos/PLEXATIC/SneakySnakeClient", "Date": "2016-03-08T13:28:29Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.leansoft.mxjc.module.pico.Java2PicoTypeMapper.primitiveMap.containsKey(javaType)) { return com.leansoft.mxjc.module.pico.Java2PicoTypeMapper.primitiveMap.get(javaType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8327/buggy-version/src.main.java.com.leansoft.mxjc.module.pico.Java2PicoTypeMapper.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "c24ee7570db8b4670d7a58fba18384cff61bd5c1", "Url": "https://api.github.com/repos/bulldog2011/mxjc", "Date": "2013-03-17T11:50:17Z"},
{"Line": "=>868", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(linkText.getText().equals(\"\"))) { msg = \"\"; autoApply = false; }else if (fileName.endsWith(\".zip\")) { try { java.util.zip.ZipFile zf = new java.util.zip.ZipFile(convertFile); java.util.Enumeration<? extends java.util.zip.ZipEntry> e = zf.entries(); while (e.hasMoreElements()) { java.util.zip.ZipEntry ze = ((java.util.zip.ZipEntry) (e.nextElement())); java.lang.String zeName = ze.getName().toLowerCase(); if (!(zeName.endsWith(\".csv\"))) { msg = \"Selected DOME will be Auto applied\"; autoApply = true; }else { msg = \"\"; autoApply = false; break; } } zf.close(); } catch (java.io.IOException ex) { } }else if (!(fileName.endsWith(\".csv\"))) { msg = \"Selected DOME will be Auto applied\"; autoApply = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6191/buggy-version/src.main.java.org.agmip.ui.quadui.QuadUIWindow.java", "BodyUseAPI": [], "Fixed commit": "95d3a732fc58b30b56e13299204709a30b0e6eca", "Url": "https://api.github.com/repos/agmip/quadui", "Date": "2014-04-18T15:57:53Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recycleListAdapter) != null) { recycleListAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5182/buggy-version/app.src.main.java.com.vejkamera.favorites.FavoritesActivity.java", "BodyUseAPI": [], "Fixed commit": "5b707f8c5a2bdfd88db18963c31b31ce245b812f", "Url": "https://api.github.com/repos/andersdinesen/VejKamera", "Date": "2016-01-11T23:39:00Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((returnType) == (java.sql.Timestamp.class)) { return rs.getTimestamp(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/451/buggy-version/src.main.java.org.n3r.eql.impl.EqlRsRetriever.java", "BodyUseAPI": [], "Fixed commit": "eae0bf5ecdacbc2b09c0047b4fda68f2ae8b6e3e", "Url": "https://api.github.com/repos/bingoohuang/eql", "Date": "2016-12-25T03:19:35Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jowidgets.nattable.impl.plugin.painter.AbstractJoTextPainter.convertDataType(org.eclipse.nebula.widgets.nattable.layer.cell.ILayerCell,org.eclipse.nebula.widgets.nattable.config.IConfigRegistry)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.jowidgets.util.EmptyCheck.isEmpty(text))) { text = text.replaceAll(org.jowidgets.nattable.impl.plugin.painter.NEW_LINE_REGEX, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4940/buggy-version/tycho.plugins.org.jowidgets.nattable.impl.plugin.src.main.java.org.jowidgets.nattable.impl.plugin.painter.AbstractJoTextPainter.java", "BodyUseAPI": ["java.lang.String.replaceAll(org.jowidgets.nattable.impl.plugin.painter.NEW_LINE_REGEX,java.lang.String)"], "Fixed commit": "5c079ac5ccde6e9f0ad60552b1bfa912d6db5f01", "Url": "https://api.github.com/repos/jo-source/jo-widgets", "Date": "2017-01-18T15:13:23Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (appengineConfigDir.exists()) { for (java.io.File file : appengineConfigDir.listFiles()) { if (!(file.getName().equals(\"app.yaml\"))) { try { com.google.appengine.repackaged.com.google.common.io.Files.copy(file, new java.io.File(stagingDir, file.getName())); } catch (java.io.IOException ex) { throw new org.apache.maven.plugin.MojoExecutionException((((\"Error: copying \" + (file.getAbsolutePath())) + \" \") + ex)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/9230/buggy-version/src.main.java.com.google.appengine.gcloudapp.GCloudAppStage.java", "BodyUseAPI": ["java.io.File.listFiles()"], "Fixed commit": "84c3a879db5df34cea79a652e4cffeb82ad6909d", "Url": "https://api.github.com/repos/GoogleCloudPlatform/gcloud-maven-plugin", "Date": "2016-08-10T16:41:52Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scene == null) return this;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/571/buggy-version/src.main.java.ijfx.ui.main.LoadingPopup.java", "BodyUseAPI": [], "Fixed commit": "0ddb5a932d2095c2c0642ec9e92af1abd310cc2a", "Url": "https://api.github.com/repos/cmongis/imagejfx", "Date": "2016-05-30T12:40:54Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cn.jzvd.JZVideoPlayerManager.getCurrentJzvd().currentScreen) != (cn.jzvd.JZVideoPlayer.SCREEN_WINDOW_FULLSCREEN)) { cn.jzvd.JZVideoPlayer.releaseAllVideos(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1055/buggy-version/jiaozivideoplayer.src.main.java.cn.jzvd.JZVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "93e4b14547c642a2d48127ef5e44f0ace00414d6", "Url": "https://api.github.com/repos/sproypef/JiaoZiVideoPlayer", "Date": "2017-12-09T03:12:48Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.factorx.awac.controllers.ReducingActionController.extractDTOFromRequest(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dto.getId()) == null) { reducingAction.setDocuments(documents); }else { reducingAction.getDocuments().clear(); reducingAction.getDocuments().addAll(documents); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4083/buggy-version/app.eu.factorx.awac.controllers.ReducingActionController.java", "BodyUseAPI": [], "Fixed commit": "08bbd6ff91e11d28b55f5ac9d2eb8bcd18f0d82b", "Url": "https://api.github.com/repos/Factor-X/awac", "Date": "2014-10-23T10:54:08Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["variables.get(\"Owner\").getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ownerTerm.isFunctor()) { owner = engine.getFunctorName(((com.thesett.aima.logic.fol.Functor) (ownerTerm))).equals(\"true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7849/buggy-version/catalogue-model-processor.src.main.com.thesett.catalogue.core.CatalogueModelFactory.java", "BodyUseAPI": [], "Fixed commit": "059b8a53111031718f774640ce99ffab2bd64478", "Url": "https://api.github.com/repos/rupertlssmith/jenerator", "Date": "2014-10-13T13:33:50Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mStateManager.getConfigurationActivity()) != null) { mStateManager.getConfigurationActivity().startActivityForResult(pickIntent, CoreApp.REQUEST_PICK_APPWIDGET); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6710/buggy-version/src.org.durka.hallmonitor.HMAppWidgetManager.java", "BodyUseAPI": ["org.durka.hallmonitor.CoreStateManager.getConfigurationActivity()", "mStateManager.getConfigurationActivity().startActivityForResult(android.content.Intent,CoreApp.REQUEST_PICK_APPWIDGET)"], "Fixed commit": "0054b60c164573fa26815a5a8e011f6d2d8d41f3", "Url": "https://api.github.com/repos/manusfreedom/HallMonitor", "Date": "2014-09-07T07:22:07Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mStateManager.getConfigurationActivity()) != null) { mStateManager.getConfigurationActivity().startActivityForResult(intent, CoreApp.REQUEST_CONFIGURE_APPWIDGET); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6710/buggy-version/src.org.durka.hallmonitor.HMAppWidgetManager.java", "BodyUseAPI": ["org.durka.hallmonitor.CoreStateManager.getConfigurationActivity()", "mStateManager.getConfigurationActivity().startActivityForResult(android.content.Intent,CoreApp.REQUEST_CONFIGURE_APPWIDGET)"], "Fixed commit": "0054b60c164573fa26815a5a8e011f6d2d8d41f3", "Url": "https://api.github.com/repos/manusfreedom/HallMonitor", "Date": "2014-09-07T07:22:07Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newht.getHNodeFromColumnName(hnode.getColumnName())) == null) newhnode = newht.addHNode(hnode.getColumnName(), HNodeType.Transformation, newws, factory); else newhnode = newht.addHNode(newht.getNewColumnName(hnode.getColumnName()), HNodeType.Transformation, newws, factory);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3804/buggy-version/karma-common.src.main.java.edu.isi.karma.er.helper.CloneTableUtils.java", "BodyUseAPI": ["edu.isi.karma.rep.HTable.addHNode(newht.getNewColumnName(hnode.getColumnName()),HNodeType.Transformation,edu.isi.karma.rep.Worksheet,edu.isi.karma.rep.RepFactory)", "edu.isi.karma.rep.HTable.addHNode(hnode.getColumnName(),HNodeType.Transformation,edu.isi.karma.rep.Worksheet,edu.isi.karma.rep.RepFactory)", "edu.isi.karma.rep.HTable.getNewColumnName(hnode.getColumnName())", "edu.isi.karma.rep.HNode.getColumnName()", "edu.isi.karma.rep.HNode.getColumnName()"], "Fixed commit": "dc2cb0c9f9feeba5001a0ee5d989884e0b9efd8d", "Url": "https://api.github.com/repos/InformationIntegrationGroup/Web-Karma", "Date": "2014-07-15T20:30:56Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stacks) != null) { for (net.minecraft.item.ItemStack itemStack : stacks) { if ((matchDamage) && ((itemStack.getItemDamage()) != (stack.getItemDamage()))) { continue; } if ((nbtMode) && (!(net.minecraft.item.ItemStack.areItemStackTagsEqual(itemStack, stack)))) { continue; } if (modMode) { if (modName.equals(mcjty.rftools.blocks.storage.sorters.ModItemSorter.getMod(itemStack))) { match = true; break; } }else if (itemStack.getItem().equals(stack.getItem())) { match = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5978/buggy-version/src.main.java.mcjty.rftools.items.storage.StorageFilterCache.java", "BodyUseAPI": [], "Fixed commit": "7ada476b019c33cc9cdca867ae3a7a2010c26f8d", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-06-07T16:33:02Z"},
{"Line": "=>704", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((int) (millisUntilFinished / 1000)) == 6) { if (com.hsbsoftwares.android.app.healthdiagnostic.CameraActivity.mEmergencyRingtone.isPlaying()) { com.hsbsoftwares.android.app.healthdiagnostic.CameraActivity.mEmergencyRingtone.stop(); mEmergencyButton.setVisibility(View.GONE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2628/buggy-version/app.src.main.java.com.hsbsoftwares.android.app.healthdiagnostic.CameraActivity.java", "BodyUseAPI": [], "Fixed commit": "0c670cfa9d63013f55ac19cb801ee0a014cf8497", "Url": "https://api.github.com/repos/harpreet-singh-bola/smartCED", "Date": "2015-08-06T08:36:08Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (1 == (conversation.getMembers().size())) { peerId = conversation.getMembers().get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/529/buggy-version/leancloudimkit.src.main.java.cn.leanclud.imkit.utils.LCIMConversationUtils.java", "BodyUseAPI": ["com.avos.avoscloud.im.v2.AVIMConversation.getMembers()", "conversation.getMembers().get(int)"], "Fixed commit": "71eeaa97b0f9ccaa423cfb99756208ce24218fb4", "Url": "https://api.github.com/repos/daweibayu/LeanCloudChatKit-Android", "Date": "2016-03-29T03:04:29Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.petpet.c3po.utils.ContentTypeMapping.getMappingByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (content_type != null) { tmp = new com.petpet.c3po.api.model.helper.MetadataRecord(); tmp.setProperty(new com.petpet.c3po.api.model.Property(\"content_type\", com.petpet.c3po.api.model.helper.PropertyType.STRING)); tmp.setValue(content_type); tmp.setStatus(\"SINGLE_RESULT\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3610/buggy-version/c3po-core.src.main.java.com.petpet.c3po.adaptor.rules.ContentTypeIdentificationRule.java", "BodyUseAPI": ["com.petpet.c3po.api.model.helper.MetadataRecord.setValue(java.lang.String)"], "Fixed commit": "38d418576d8c1a3fffe67f9f244c2d4faec53ec2", "Url": "https://api.github.com/repos/datascience/c3po", "Date": "2016-03-07T18:14:34Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (disconnected) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1406/buggy-version/src.main.java.asset.connect.lib.ConnectImpl.java", "BodyUseAPI": [], "Fixed commit": "c85c8329e32eb4eb737c6a6c7177b2ef8bb80803", "Url": "https://api.github.com/repos/AssetGateway/AssetConnect-LIB", "Date": "2012-11-06T19:29:43Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file == null) { setSelectedProduct(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6916/buggy-version/seadas-processing.src.main.java.gov.nasa.gsfc.seadas.processing.general.SourceProductFileSelector.java", "BodyUseAPI": [], "Fixed commit": "222387c82f2fb8551fdf9811e8f9188ee865a987", "Url": "https://api.github.com/repos/seadas/seadas", "Date": "2013-03-21T14:36:40Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((phoneNum.size()) <= 12) { phoneNum.add(t); java.lang.String values = \"\"; for (int i = 0; i < (phoneNum.size()); ++i) { values += phoneNum.get(i); } tv.setText(values); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5988/buggy-version/app.src.main.java.com.dealfaro.luca.lclicker.MainActivity.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "390f34798a1e8d105e8ac487941a16d0ca7349f7", "Url": "https://api.github.com/repos/alprusa/CMPS121-Asg1", "Date": "2015-04-05T03:32:07Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((description[i]) != null) && (!(description[i].equals(\"\")))) { manual.fonts.drawSplitString(description[i], localWidth, (localHeight + 16), 178, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7833/buggy-version/src.main.java.talonos.cavestokingdoms.client.pages.C2KClassicToolsPage.java", "BodyUseAPI": ["manual.fonts.drawSplitString(java.lang.String,int,int,int,int)"], "Fixed commit": "9dd636f4060c357c096339e22375adee7b822a3b", "Url": "https://api.github.com/repos/CannibalVox/CavesToKingdoms", "Date": "2015-07-15T19:44:05Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((title[i]) != null) { manual.fonts.drawString((\"\\u00a7n\" + (title[i])), (localWidth + 70), (localHeight + 4), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7833/buggy-version/src.main.java.talonos.cavestokingdoms.client.pages.C2KClassicToolsPage.java", "BodyUseAPI": ["manual.fonts.drawString(java.lang.String,int,int,int)"], "Fixed commit": "9dd636f4060c357c096339e22375adee7b822a3b", "Url": "https://api.github.com/repos/CannibalVox/CavesToKingdoms", "Date": "2015-07-15T19:44:05Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((icons[0][i]) != null) && ((icons[0][i].getItem()) instanceof net.minecraft.item.ItemArmor)) { manual.fonts.drawString(((freelevels + \": \") + (((net.minecraft.item.ItemArmor) (icons[0][i].getItem())).getArmorMaterial().getEnchantability())), (localWidth + 0), (localHeight + 58), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7833/buggy-version/src.main.java.talonos.cavestokingdoms.client.pages.C2KArmorPage.java", "BodyUseAPI": ["((net.minecraft.item.ItemArmor) (icons[0][i].getItem())).getArmorMaterial().getEnchantability()", "manual.fonts.drawString(((freelevels + \": \") + (((net.minecraft.item.ItemArmor) (icons[0][i].getItem())).getArmorMaterial().getEnchantability())),int,int,int)", "icons[0][i].getItem()", "((net.minecraft.item.ItemArmor) (icons[0][i].getItem())).getArmorMaterial()"], "Fixed commit": "9dd636f4060c357c096339e22375adee7b822a3b", "Url": "https://api.github.com/repos/CannibalVox/CavesToKingdoms", "Date": "2015-07-15T19:44:05Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((description[i]) != null) && (!(description[i].equals(\"\")))) { manual.fonts.drawSplitString(description[i], localWidth, (localHeight + 58), 178, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7833/buggy-version/src.main.java.talonos.cavestokingdoms.client.pages.C2KArmorPage.java", "BodyUseAPI": ["manual.fonts.drawSplitString(java.lang.String,int,int,int,int)"], "Fixed commit": "9dd636f4060c357c096339e22375adee7b822a3b", "Url": "https://api.github.com/repos/CannibalVox/CavesToKingdoms", "Date": "2015-07-15T19:44:05Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.thymeleaf.spring4.util.FieldUtils.getBindStatus(org.thymeleaf.context.IExpressionContext,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bindStatus == null) { throw new org.thymeleaf.exceptions.TemplateProcessingException(((((\"Could not bind form errors using expression \\\"\" + expression) + \"\\\". Please check this \") + \"expression is being executed inside the adequate context (e.g. a <form> with a th:object \") + \"attribute)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8211/buggy-version/thymeleaf-spring4.src.main.java.org.thymeleaf.spring4.util.FieldUtils.java", "BodyUseAPI": [], "Fixed commit": "614fa6978212a7f8a3ad74a8894a9e5a429f6f5c", "Url": "https://api.github.com/repos/thymeleaf/thymeleaf-spring", "Date": "2016-02-12T15:30:23Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.thymeleaf.spring3.util.FieldUtils.getBindStatus(org.thymeleaf.context.IExpressionContext,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bindStatus == null) { throw new org.thymeleaf.exceptions.TemplateProcessingException(((((\"Could not bind form errors using expression \\\"\" + expression) + \"\\\". Please check this \") + \"expression is being executed inside the adequate context (e.g. a <form> with a th:object \") + \"attribute)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8211/buggy-version/thymeleaf-spring3.src.main.java.org.thymeleaf.spring3.util.FieldUtils.java", "BodyUseAPI": [], "Fixed commit": "614fa6978212a7f8a3ad74a8894a9e5a429f6f5c", "Url": "https://api.github.com/repos/thymeleaf/thymeleaf-spring", "Date": "2016-02-12T15:30:23Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (versionDiff == 1) { return com.tablecloth.bookshelf.dialog.SimpleDialogActivity.getIntent(appContext, R.string.update_dialog_title, R.string.update_dialog_content_form_prev_version, R.string.update_dialog_do_review, R.string.update_dialog_do_not_review); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5312/buggy-version/app.src.main.java.com.tablecloth.bookshelf.util.VersionUtil.java", "BodyUseAPI": [], "Fixed commit": "cdb3619c7e49182b6273eb529c76c097d94dad75", "Url": "https://api.github.com/repos/tc-minami/BookShelf", "Date": "2016-11-16T18:56:07Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connState) == (edu.sintez.loggermobile.app.activity.MainActivity.ConnectionState.NOT_CONNECTION)) setupBTConnection(); else android.widget.Toast.makeText(this, \"Already connected\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1708/buggy-version/mobile.app.src.main.java.edu.sintez.loggermobile.app.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1dd2d951aa7bb951b8c655fcc769f2465ae28670", "Url": "https://api.github.com/repos/maxtat3/logger-android", "Date": "2016-06-28T17:07:11Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.pmd.lang.apex.ast.AbstractApexNode<?>.findChildrenOfType(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(left.isEmpty())) { final apex.jorje.semantic.ast.expression.VariableExpression l = left.get(0).getNode(); java.lang.StringBuffer sb = new java.lang.StringBuffer().append(l.getDefiningType()).append(\":\").append(l.getIdentifier().value); escapedNodes.add(sb.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7920/buggy-version/pmd-apex.src.main.java.net.sourceforge.pmd.lang.apex.rule.security.ApexSOQLInjectionRule.java", "BodyUseAPI": ["java.util.List<net.sourceforge.pmd.lang.apex.ast.ASTVariableExpression>.get(int)", "left.get(0).getNode()"], "Fixed commit": "c5db82f6395c0d4bdd5e894597f2242bae0b4c59", "Url": "https://api.github.com/repos/sgorbaty/pmd", "Date": "2016-11-03T23:35:46Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ModifierDescription.SEL_WEAPON_COOLDOWN.equals(modify.specifier)) { modifierType = org.lisoft.lsml.model.modifiers.ModifierDescription.ModifierType.NEGATIVE_GOOD; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1680/buggy-version/src.org.lisoft.lsml.model.datacache.gamedata.XMLQuirkDef.java", "BodyUseAPI": [], "Fixed commit": "495337d0a8c2956b6d11fb88e891489372795629", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2015-12-26T14:08:59Z"},
{"Line": "=>560", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name1 == null) || (name2 == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2010/buggy-version/src.main.java.it.polimi.modaclouds.qos_models.monitoring_rules.Validator.java", "BodyUseAPI": [], "Fixed commit": "8e7222b33d8fef5d32c61405cdb2e11610e28acd", "Url": "https://api.github.com/repos/deib-polimi/modaclouds-qos-models", "Date": "2014-09-02T13:02:51Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name1 == null) && (name2 == null)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2010/buggy-version/src.main.java.it.polimi.modaclouds.qos_models.monitoring_rules.Validator.java", "BodyUseAPI": [], "Fixed commit": "8e7222b33d8fef5d32c61405cdb2e11610e28acd", "Url": "https://api.github.com/repos/deib-polimi/modaclouds-qos-models", "Date": "2014-09-02T13:02:51Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (splitPos == (-1)) { modules.segmentation.SegmentCombinerModule.LOGGER.warning((((\"Line without delimiter ignored: '\" + line) + \"', delimiter: \") + (modules.segmentation.SegmentCombinerModule.SPLIT_DELIM))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7525/buggy-version/src.main.java.modules.segmentation.SegmentCombinerModule.java", "BodyUseAPI": [], "Fixed commit": "b16953a469542eaf330584171ef4a88c4cc5ea60", "Url": "https://api.github.com/repos/spinfo/stringsnstructures", "Date": "2016-10-20T09:35:41Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.barrier.isEmpty()) this.processAllStarts();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4153/buggy-version/gremlin-core.src.main.java.org.apache.tinkerpop.gremlin.process.traversal.step.map.NoOpBarrierStep.java", "BodyUseAPI": [], "Fixed commit": "ef1ad23ec9e0b931f530c19b029b4bb0e30c7ed8", "Url": "https://api.github.com/repos/apache/tinkerpop", "Date": "2016-03-29T23:58:25Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<microbat.model.trace.TraceNode>.indexOf(microbat.model.trace.TraceNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index == startIndex) { index = endIndex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4120/buggy-version/microbat.src.main.microbat.recommendation.StepRecommender.java", "BodyUseAPI": [], "Fixed commit": "1f64ff76c98feb7fac7a63d6d5bba2aea0fbcb34", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2016-08-14T10:25:35Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.Kex.searchElement.getRecordedDepth()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (depth < (-21)) { color = new java.awt.Color(327784); }else if (depth < (-17)) { color = new java.awt.Color(1181911); }else if (depth < (-15)) { color = new java.awt.Color(852223); }else if (depth < (-12)) { color = new java.awt.Color(220871); }else if (depth < (-9)) { color = new java.awt.Color(26330); }else if (depth < (-6)) { color = new java.awt.Color(1877721); }else if (depth < (-3)) { color = new java.awt.Color(4436956); }else if (depth < 0.001) { color = new java.awt.Color(718079); }else { color = color.GREEN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8209/buggy-version/src.controller.Kex.java", "BodyUseAPI": [], "Fixed commit": "a608ac6dafe6abfaffac3a40acef1a94ddecbea1", "Url": "https://api.github.com/repos/NiklasRolleberg/Kex-TestEnvironment", "Date": "2015-04-22T13:57:51Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kaazing.gateway.resource.address.ResourceAddressFactorySpi<T>.newResourceAddresses0(java.net.URI,java.net.URI,org.kaazing.gateway.resource.address.ResourceOptions)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((addresses.size()) == 0) { throw new java.lang.IllegalArgumentException(java.lang.String.format(\"No addresses available for binding for URI: %s\", location)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3521/buggy-version/resource.address.spi.src.main.java.org.kaazing.gateway.resource.address.ResourceAddressFactorySpi.java", "BodyUseAPI": [], "Fixed commit": "fa603f620f710577f58c06d8a3c4cd4a7657b5b3", "Url": "https://api.github.com/repos/cmebarrow/gateway", "Date": "2016-02-03T12:29:53Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kaazing.gateway.resource.address.ResourceAddressFactorySpi<T>.newResourceAddresses0(java.net.URI,java.net.URI,org.kaazing.gateway.resource.address.ResourceOptions)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((addresses.size()) == 0) { throw new java.lang.IllegalArgumentException(java.lang.String.format(\"No addresses available for binding for URI: %s\", location)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3521/buggy-version/resource.address.spi.src.main.java.org.kaazing.gateway.resource.address.ResourceAddressFactorySpi.java", "BodyUseAPI": [], "Fixed commit": "fa603f620f710577f58c06d8a3c4cd4a7657b5b3", "Url": "https://api.github.com/repos/cmebarrow/gateway", "Date": "2016-02-03T12:29:53Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((weatherInfo.getMain()) != null) { temp = weatherInfo.getMain().getTemp(); }else { temp = weatherInfo.getTemp().getDay(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8665/buggy-version/AndroidWorkshop.app.src.main.java.no.mesan.mobil.androidworkshop.view.forecast.MiniForecastFragment.java", "BodyUseAPI": ["no.mesan.mobil.androidworkshop.model.WeatherInfo.getMain()", "no.mesan.mobil.androidworkshop.model.WeatherInfo.getTemp()", "weatherInfo.getMain().getTemp()", "weatherInfo.getTemp().getDay()"], "Fixed commit": "df07f7d56075344da90274b04933ae91838b91e2", "Url": "https://api.github.com/repos/netcompanyno/android-workshop", "Date": "2015-08-23T14:41:50Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getServer().getPlayer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (target.isDead()) { player.sendMessage(((org.bukkit.ChatColor.RED) + \"You can't teleport to dead players.\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2527/buggy-version/src.main.java.com.gmail.nossr50.commands.party.PtpCommand.java", "BodyUseAPI": [], "Fixed commit": "ef3d76fb9f1e6270d679d46c9153bae4a752b5db", "Url": "https://api.github.com/repos/mcMMO-Dev/mcMMO", "Date": "2012-03-28T03:04:00Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((theRow.getInt(\"count\")) == 1) { ViewManager.JoinAggGroupByHelper.searchAndDeleteRowFromJoinAggGroupBy(stream, json, joinTable, aggKey, aggKeyValue, aggColValue, identifier); }else { stream.setUpdatedJoinAggGroupByRowOldState(new ViewManager.CustomizedRow(theRow)); myList.addAll(theRow.getList(\"agg_list\", java.lang.Float.class)); sum = theRow.getFloat(\"sum\"); count = theRow.getInt(\"count\"); count--; sum -= java.lang.Float.parseFloat(aggColValue); myList.remove(java.lang.Float.parseFloat(aggColValue)); average = sum / count; min = java.lang.Float.MAX_VALUE; max = -(java.lang.Float.MAX_VALUE); for (int i = 0; i < (myList.size()); i++) { if ((myList.get(i)) < min) { min = myList.get(i); } if ((myList.get(i)) > max) { max = myList.get(i); } } ViewManager.CustomizedRow crow = ViewManager.CustomizedRow.constructJoinAggGroupBy(aggKey, aggKeyValue, myList, sum, count, average, min, max, ViewManager.Serialize.serializeStream2(stream)); stream.setUpdatedJoinAggGroupByRow(crow); java.lang.String blob = ViewManager.Serialize.serializeStream2(stream); if (!(ViewManager.JoinAggGroupByHelper.updateStatement(sum, count, average, min, max, myList, aggKey, aggKeyValue, joinTable, json, theRow.getFloat(\"sum\"), blob, identifier))) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4423/buggy-version/src.java.ViewManager.JoinAggGroupByHelper.java", "BodyUseAPI": ["ViewManager.Stream.setUpdatedJoinAggGroupByRowOldState(ViewManager.CustomizedRow)", "java.util.List<java.lang.Float>.addAll(theRow.getList(\"agg_list\", java.lang.Float.class))", "com.datastax.driver.core.Row.getFloat(java.lang.String)", "com.datastax.driver.core.Row.getFloat(java.lang.String)", "ViewManager.JoinAggGroupByHelper.updateStatement(float,int,float,float,float,java.util.List<java.lang.Float>,java.lang.String,java.lang.String,java.lang.String,org.json.simple.JSONObject,theRow.getFloat(\"sum\"),java.lang.String,java.lang.String)", "com.datastax.driver.core.Row.getList(java.lang.String,java.lang.Class)", "com.datastax.driver.core.Row.getInt(java.lang.String)"], "Fixed commit": "3613d87d94825cf88023667c1266f0465ca6a0b1", "Url": "https://api.github.com/repos/abdelrahmanbadawy/Cassandra-VMS", "Date": "2015-10-28T12:57:04Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wrappedObject) != null) { wrappedObject.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/617/buggy-version/src.main.java.org.apache.hadoop.fs.s3a.S3AInputStream.java", "BodyUseAPI": [], "Fixed commit": "6e686260d52eaa44cb2b005f0d0db0fde8ed47f9", "Url": "https://api.github.com/repos/Aloisius/hadoop-s3a", "Date": "2014-07-07T23:14:17Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isUseEventTime()) { org.komamitsu.fluency.EventTime eventTime = org.komamitsu.fluency.EventTime.fromEpochMilli(java.lang.System.currentTimeMillis()); fluency.emit(((tag) == null ? \"\" : tag), eventTime, data); }else { fluency.emit(((tag) == null ? \"\" : tag), data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3322/buggy-version/src.main.java.ch.qos.logback.more.appenders.FluencyLogbackAppender.java", "BodyUseAPI": [], "Fixed commit": "57bce3c4de08c80accbaf1be030312b33ca46a84", "Url": "https://api.github.com/repos/sndyuk/logback-more-appenders", "Date": "2017-11-30T21:27:35Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkMode)) viewHolder.tvScore.setText((\"0/\" + (list.size())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2601/buggy-version/app.src.main.java.essential.esl.ui.page.QuizzesPage.java", "BodyUseAPI": [], "Fixed commit": "6f292e222046b88297720a96204fb0f81289724c", "Url": "https://api.github.com/repos/PikachuTeam/ESL", "Date": "2016-05-28T19:20:58Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lastIndexOfDash <= 0) { return path; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3154/buggy-version/com.anjlab.eclipse.tapestry5.src.com.anjlab.eclipse.tapestry5.DefaultAssetResolver.java", "BodyUseAPI": [], "Fixed commit": "badd041e93c5aa982bd18298639dec09dc19be08", "Url": "https://api.github.com/repos/anjlab/eclipse-tapestry5-plugin", "Date": "2013-09-09T08:41:23Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((btnRevokeAccess) != null) btnRevokeAccess.setVisible(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8233/buggy-version/project.src.il.ac.technion.socialcampus.ProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "f0132e4438074412ea9dc0bfee19104d797d5ca4", "Url": "https://api.github.com/repos/sonyagen/SocialCampus", "Date": "2014-08-04T15:35:25Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((btnRevokeAccess) != null) btnRevokeAccess.setVisible(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8233/buggy-version/project.src.il.ac.technion.socialcampus.ProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "f0132e4438074412ea9dc0bfee19104d797d5ca4", "Url": "https://api.github.com/repos/sonyagen/SocialCampus", "Date": "2014-08-04T15:35:25Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((btnSignOut) != null) btnSignOut.setVisible(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8233/buggy-version/project.src.il.ac.technion.socialcampus.ProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "f0132e4438074412ea9dc0bfee19104d797d5ca4", "Url": "https://api.github.com/repos/sonyagen/SocialCampus", "Date": "2014-08-04T15:35:25Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((btnSignOut) != null) btnSignOut.setVisible(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8233/buggy-version/project.src.il.ac.technion.socialcampus.ProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "f0132e4438074412ea9dc0bfee19104d797d5ca4", "Url": "https://api.github.com/repos/sonyagen/SocialCampus", "Date": "2014-08-04T15:35:25Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((expressions.size()) < (params.size())) { cod = cod.fromPiParameters(params.subList(expressions.size(), params.size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7145/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.term.expr.Expression.java", "BodyUseAPI": ["com.jetbrains.jetpad.vclang.term.expr.Expression.fromPiParameters(params.subList(expressions.size(), params.size()))", "java.util.List<com.jetbrains.jetpad.vclang.term.context.param.DependentLink>.size()", "java.util.List<? extends com.jetbrains.jetpad.vclang.term.expr.Expression>.size()", "java.util.List<com.jetbrains.jetpad.vclang.term.context.param.DependentLink>.subList(int,params.size())"], "Fixed commit": "67f8624c5d7965c5b2859478cbf3f9499e2ff366", "Url": "https://api.github.com/repos/part-xx/vclang", "Date": "2016-03-18T14:37:57Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(regs.cs.dtr.hasDB())) { setMode(CPUMode.Protected16); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5315/buggy-version/src.com.zms.zpc.emulator.processor.Processor.java", "BodyUseAPI": [], "Fixed commit": "2db8d070f510efe0ea4dc4c4c15c1d95607da795", "Url": "https://api.github.com/repos/zms351/ZPC", "Date": "2017-07-30T13:35:38Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((string == null) || (string.trim().isEmpty())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4195/buggy-version/src.main.java.ru.itbasis.utils.spring.security.accessrole.hibernate.type.AccessRoleUserType.java", "BodyUseAPI": [], "Fixed commit": "d2e4492d74a02c72c48ade135c41e4a051fbf479", "Url": "https://api.github.com/repos/BorzdeG/ru.itbasis.utils.spring-boot-starter-security-accessrole", "Date": "2016-07-12T05:29:09Z"},
{"Line": "=>900", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((params.get(\"cc_recipients_toggle\")) != null) && ((cc_recipients.size()) == 0)) { validation.addError(\"addActionLogComment\", \"You must include at least one cc recipient when cc'ing an email.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/9115/buggy-version/app.controllers.ViewTab.java", "BodyUseAPI": [], "Fixed commit": "a0c43f950f8af222ca4688ef06b080cc27dfe9aa", "Url": "https://api.github.com/repos/TexasDigitalLibrary/Vireo", "Date": "2015-02-11T21:29:36Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rs.get(\"field\")) != null) { model.Comment com = new model.Comment(((java.lang.Integer) (rs.get(\"cid\"))), ((java.lang.String) (rs.get(\"field\"))), hyp.getId()); hyp.getComments().add(com); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2030/buggy-version/backend.spring-workspace.spring.src.main.java.db.HyperlinkDAOImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "653de414e1db25495ee92f75923c17e80240f759", "Url": "https://api.github.com/repos/matheuscamargo/ces22-bootproject", "Date": "2015-03-26T12:47:34Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.fenixedu.ulisboa.specifications.domain.services.RegistrationServices.isCurriculumAccumulated(getRegistration())) { for (final org.fenixedu.academic.domain.StudentCurricularPlan iter : getRegistration().getStudentCurricularPlansSet()) { final org.fenixedu.academic.domain.studentCurriculum.RootCurriculumGroup curriculumGroup = iter.getRoot(); result = result.add(org.fenixedu.ulisboa.specifications.domain.services.CurriculumModuleServices.getEnroledAndNotApprovedEctsCreditsFor(curriculumGroup, input)); } }else { final org.fenixedu.academic.domain.StudentCurricularPlan plan = getStudentCurricularPlan(); final org.fenixedu.academic.domain.studentCurriculum.RootCurriculumGroup curriculumGroup = plan.getRoot(); result = result.add(org.fenixedu.ulisboa.specifications.domain.services.CurriculumModuleServices.getEnroledAndNotApprovedEctsCreditsFor(curriculumGroup, input)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8777/buggy-version/src.main.java.org.fenixedu.ulisboa.specifications.dto.student.RegistrationDataBean.java", "BodyUseAPI": [], "Fixed commit": "ddfc44020528e33fff408472792d7ca1dee6b4b0", "Url": "https://api.github.com/repos/qub-it/fenixedu-ulisboa-specifications", "Date": "2016-09-26T15:36:36Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getPlayer()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4978/buggy-version/SuperiorCraft.src.com.superiorcraft.api.blocks.CustomTexturedBlock.java", "BodyUseAPI": [], "Fixed commit": "17cc0e185e97462f4dcfac9bd14fe1e7d8c1d923", "Url": "https://api.github.com/repos/GigaGamma/SuperiorNetworks", "Date": "2017-10-22T05:10:18Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((message) != null) && ((real_message.length()) < (java.lang.Integer.MAX_VALUE))) { real_message += \"<br>\" + (message); message = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7988/buggy-version/src.mvc.controller.ChatController.java", "BodyUseAPI": [], "Fixed commit": "da732cc48d100e043337c8de6b1e77d207eae012", "Url": "https://api.github.com/repos/gustavoefeiche/InsperChat", "Date": "2016-11-23T18:43:20Z"},
{"Line": "=>712", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transCtx) != null) { rid = (transCtx.getRuleId()) + \"_\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7528/buggy-version/hadoop-ssm-project.src.main.java.org.apache.hadoop.ssm.rule.parser.SSMRuleVisitTranslator.java", "BodyUseAPI": [], "Fixed commit": "571f567269f26efed2217af31f24c5bd993f0115", "Url": "https://api.github.com/repos/huafengw/SSM", "Date": "2017-05-15T01:07:36Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.ssm.rule.RuleQueryExecutor.getAccessCountTablesBetween(long,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tableNames.size()) == 0) { tableNames.add(\"blank_access_count_info\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7528/buggy-version/hadoop-ssm-project.src.main.java.org.apache.hadoop.ssm.rule.RuleQueryExecutor.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "571f567269f26efed2217af31f24c5bd993f0115", "Url": "https://api.github.com/repos/huafengw/SSM", "Date": "2017-05-15T01:07:36Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (messages != null) { this.messages.addAll(messages); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2411/buggy-version/app.src.main.java.com.example.htrip3.CHATActivity.java", "BodyUseAPI": ["java.util.List<com.example.htrip3.Message>.addAll(java.util.List<com.example.htrip3.Message>)"], "Fixed commit": "655460304bc288126a9f38c11659d138b533159e", "Url": "https://api.github.com/repos/Artmeister999/FieldTrip", "Date": "2016-12-05T23:20:30Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.uu.ub.cora.storage.RecordStorageInMemory.extractLinkedRecordTypeValue(se.uu.ub.cora.bookkeeper.data.DataGroup)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (linksForToPart.containsKey(fromType)) { linksForToPart.get(fromType).remove(fromId); if (linksForToPart.get(fromType).isEmpty()) { linksForToPart.remove(fromType); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/62/buggy-version/src.main.java.se.uu.ub.cora.storage.RecordStorageInMemory.java", "BodyUseAPI": ["linksForToPart.get(fromType).remove(java.lang.String)", "linksForToPart.get(fromType).isEmpty()", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<se.uu.ub.cora.bookkeeper.data.DataGroup>>>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<se.uu.ub.cora.bookkeeper.data.DataGroup>>>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<se.uu.ub.cora.bookkeeper.data.DataGroup>>>.remove(java.lang.String)"], "Fixed commit": "bec807dd5346db9ef676a3bc4222ef69bd460ca1", "Url": "https://api.github.com/repos/maddekenn/cora-basicstorage", "Date": "2016-12-09T13:07:01Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index == 4) { m_scoreBoard.set(index, new slotmachinesim.HighScoreEntry(\"EMPTY\", 0)); }else { while (currentIndex >= index) { if (currentIndex == 4) { m_scoreBoard.set(currentIndex, new slotmachinesim.HighScoreEntry(\"EMPTY\", 0)); }else { auxEntry = m_scoreBoard.get(currentIndex); m_scoreBoard.set(currentIndex, new slotmachinesim.HighScoreEntry(\"EMPTY\", 0)); m_scoreBoard.set((currentIndex + 1), auxEntry); } currentIndex--; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7494/buggy-version/SlotMachineSim.src.slotmachinesim.ScoreBoard.java", "BodyUseAPI": ["java.util.ArrayList<slotmachinesim.HighScoreEntry>.set(int,slotmachinesim.HighScoreEntry)"], "Fixed commit": "2687062b35ce9893a7357a0ba552f497f3318a6b", "Url": "https://api.github.com/repos/DarkStarDevs/SlotMachineSim", "Date": "2014-01-11T22:26:56Z"},
{"Line": "=>550", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(form.containsHolder(holder))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6723/buggy-version/jbpm-form-modeler-core.jbpm-form-modeler-service.jbpm-form-modeler-service-core.src.main.java.org.jbpm.formModeler.core.config.FormManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "6d4cb8381230c2832eb3fa87c658f5b6eb376db0", "Url": "https://api.github.com/repos/droolsjbpm/jbpm-form-modeler", "Date": "2014-03-05T17:01:27Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jbpm.formModeler.core.config.Form.getDataHolderById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (holder == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6723/buggy-version/jbpm-form-modeler-core.jbpm-form-modeler-service.jbpm-form-modeler-service-core.src.main.java.org.jbpm.formModeler.core.config.FormManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "6d4cb8381230c2832eb3fa87c658f5b6eb376db0", "Url": "https://api.github.com/repos/droolsjbpm/jbpm-form-modeler", "Date": "2014-03-05T17:01:27Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["husacct.analyse.domain.famix.FamixDependencyFinder.buildDependencyDTO(husacct.analyse.domain.famix.FamixAssociation)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(result.contains(foundDependency))) result.add(foundDependency);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2012/buggy-version/src.husacct.analyse.domain.famix.FamixDependencyFinder.java", "BodyUseAPI": ["java.util.List<husacct.common.dto.DependencyDTO>.add(husacct.common.dto.DependencyDTO)"], "Fixed commit": "a5ff98790d1849b5509dd1ca33204b0dc60db6f6", "Url": "https://api.github.com/repos/timmuller/HUSACCT", "Date": "2012-05-20T15:48:12Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.placement.entity.AbstractDatacenter.AbstractCluster.getHosts()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((clusterHosts != null) && (!(clusterHosts.isEmpty()))) { hosts.addAll(clusterHosts); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2219/buggy-version/server.placement.src.main.java.com.vmware.bdd.placement.entity.AbstractDatacenter.java", "BodyUseAPI": ["java.util.List<com.vmware.bdd.placement.entity.AbstractDatacenter.AbstractHost>.addAll(java.util.List<com.vmware.bdd.placement.entity.AbstractDatacenter.AbstractHost>)"], "Fixed commit": "686987bdce1043d48f06a83bd9d37fa73d4513d0", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2015-03-26T10:18:53Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (club == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3963/buggy-version/app.src.main.java.com.ethan.myclub.club.info.edit.view.ClubInfoEditActivity.java", "BodyUseAPI": [], "Fixed commit": "0e133e4e90e1b893d5ebd03bb29ba48d5f7c570e", "Url": "https://api.github.com/repos/Ethan-yt/MyClub", "Date": "2017-04-06T10:41:17Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thrivepregnancy.data.Event.getAudioFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((audioFile == null) || ((audioFile.length()) == 0)) { audioView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6085/buggy-version/src.com.thrivepregnancy.ui.TimelineFragment.java", "BodyUseAPI": [], "Fixed commit": "cf7406467caecfa37fc07943633342d3c991f516", "Url": "https://api.github.com/repos/past5/thrive-pregnancy", "Date": "2014-07-24T01:45:10Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.nav_viewcomplaints)) { android.content.Intent intent = new android.content.Intent(this, com.complus.community.MyComplaints.class); startActivity(intent); }else if (id == (R.id.nav_leaderboard)) { startActivity(new android.content.Intent(this, com.complus.community.Leaderboard.class)); }else if (id == (R.id.nav_rewards)) { android.content.Intent intent = new android.content.Intent(this, com.complus.community.Rewards.class); startActivity(intent); }else if (id == (R.id.nav_profile)) { android.content.Intent intent = new android.content.Intent(this, com.complus.community.ProfileActivity.class); intent.putExtra(\"userid\", user.getUid()); startActivity(intent); }else if (id == (R.id.nav_signout)) { com.firebase.ui.auth.AuthUI.getInstance().signOut(this).addOnCompleteListener(new com.google.android.gms.tasks.OnCompleteListener<java.lang.Void>() { public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<java.lang.Void> task) { finish(); startActivity(new android.content.Intent(com.complus.community.HomeActivity.this, com.complus.community.StartActivity.class)); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6691/buggy-version/app.src.main.java.com.complus.community.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "d128df174fb624f2de855916c38689d85e13c197", "Url": "https://api.github.com/repos/jatin-jt/CommunityPlus", "Date": "2017-09-03T03:36:28Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nbtTags.hasKey(\"maxGas\")) { maxGas = nbtTags.getInteger(\"maxGas\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3761/buggy-version/src.main.java.mekanism.api.gas.GasTank.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.getInteger(java.lang.String)"], "Fixed commit": "d31ebf88ebb65052f868beea979d1b1acb0689e4", "Url": "https://api.github.com/repos/aidancbrady/Mekanism", "Date": "2014-09-24T20:53:25Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (itemStack.stackTagCompound.hasKey(\"fuelTank\")) { fuelTank.read(itemStack.stackTagCompound.getCompoundTag(\"fuelTank\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3761/buggy-version/src.main.java.mekanism.generators.common.tile.TileEntityGasGenerator.java", "BodyUseAPI": ["mekanism.api.gas.GasTank.read(itemStack.stackTagCompound.getCompoundTag(\"fuelTank\"))", "itemStack.stackTagCompound.getCompoundTag(java.lang.String)"], "Fixed commit": "d31ebf88ebb65052f868beea979d1b1acb0689e4", "Url": "https://api.github.com/repos/aidancbrady/Mekanism", "Date": "2014-09-24T20:53:25Z"},
{"Line": "=>1669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parentOrderBys != null) { for (org.teiid.query.optimizer.relational.OrderBy parentOrderBy : parentOrderBys) { replaceExpressions(parentOrderBy, mapping, subMapping); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2665/buggy-version/engine.src.main.java.org.teiid.query.optimizer.relational.RelationalPlanner.java", "BodyUseAPI": [], "Fixed commit": "05852207980d8812c839ab82f5016264d2649853", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2016-02-25T23:06:35Z"},
{"Line": "=>1145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((command.getOrderBy()) != null) { parentOrderBys.remove(((parentOrderBys.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2665/buggy-version/engine.src.main.java.org.teiid.query.optimizer.relational.RelationalPlanner.java", "BodyUseAPI": [], "Fixed commit": "05852207980d8812c839ab82f5016264d2649853", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2016-02-25T23:06:35Z"},
{"Line": "=>1138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((command.getOrderBy()) != null) { if (parentOrderBys == null) { parentOrderBys = new java.util.ArrayList<org.teiid.query.optimizer.relational.OrderBy>(2); } parentOrderBys.add(command.getOrderBy()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2665/buggy-version/engine.src.main.java.org.teiid.query.optimizer.relational.RelationalPlanner.java", "BodyUseAPI": ["java.util.List<org.teiid.query.optimizer.relational.OrderBy>.add(command.getOrderBy())", "org.teiid.query.optimizer.relational.QueryCommand.getOrderBy()"], "Fixed commit": "05852207980d8812c839ab82f5016264d2649853", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2016-02-25T23:06:35Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (l == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1949/buggy-version/src.interactome.data.BioDB.java", "BodyUseAPI": [], "Fixed commit": "a2cb4904afec7923ada10c44096229967e802286", "Url": "https://api.github.com/repos/tmd-gpat/CASTIN", "Date": "2017-08-23T14:56:59Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (l != null) { current_refseq = l.split(\" \")[0].substring(1); sequence = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1949/buggy-version/src.interactome.data.BioDB.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "a2cb4904afec7923ada10c44096229967e802286", "Url": "https://api.github.com/repos/tmd-gpat/CASTIN", "Date": "2017-08-23T14:56:59Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(commands.entrySet().iterator().hasNext())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4297/buggy-version/src.main.java.callofcactus.multiplayer.ServerCommandQueue.java", "BodyUseAPI": [], "Fixed commit": "342050b45258b87ca4d087b33fb649663ec4d9cc", "Url": "https://api.github.com/repos/GuusHamm/Call-of-Cactus", "Date": "2015-12-13T20:09:14Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dadGene.get(randomRoute).getNodes().size()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (numberNodes == 1) { subRoute = new java.util.ArrayList(dadGene.get(randomRoute).getNodes()); }else { int randomSubRoutStart = com.gearlles.ga.core.crossover.VrpCrossover.rand.nextInt((numberNodes - 1)); int randomSubRoutEnd = com.gearlles.ga.core.crossover.VrpCrossover.randInt((randomSubRoutStart + 1), (numberNodes - 1)); subRoute = new java.util.ArrayList(dadGene.get(randomRoute).getNodes().subList(randomSubRoutStart, (randomSubRoutEnd + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4678/buggy-version/src.main.java.com.gearlles.ga.core.crossover.VrpCrossover.java", "BodyUseAPI": ["java.util.Random.nextInt(int)", "com.gearlles.ga.core.crossover.VrpCrossover.randInt(int,int)"], "Fixed commit": "2ae3c0ce8255f49ace4f9e3602325ef7aff226c0", "Url": "https://api.github.com/repos/gearlles/natural-computing-ga", "Date": "2014-07-08T01:56:45Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.asList(context.getSuffixes())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((suffixes.contains(ArtifactContext.JS)) || (suffixes.contains(ArtifactContext.JS_MODEL))) { return getArtifactNames(context.getName(), context.getVersion(), new java.lang.String[]{ com.redhat.ceylon.cmr.api.ArtifactContext.JS, com.redhat.ceylon.cmr.api.ArtifactContext.NPM_DESCRIPTOR }); }else { return new java.lang.String[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/547/buggy-version/cmr.impl.src.main.java.com.redhat.ceylon.cmr.impl.NpmRepository.java", "BodyUseAPI": [], "Fixed commit": "f82777f4924ab8108d72cbe72f2aefca2c7dbd6a", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-07-08T15:47:18Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.cmr.api.ArtifactContext.fromNode(com.redhat.ceylon.cmr.spi.Node)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (context == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/547/buggy-version/cmr.impl.src.main.java.com.redhat.ceylon.cmr.impl.NpmRepository.java", "BodyUseAPI": [], "Fixed commit": "f82777f4924ab8108d72cbe72f2aefca2c7dbd6a", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-07-08T15:47:18Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.asList(context.getSuffixes())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(suffixes.contains(ArtifactContext.JS))) && (!(suffixes.contains(ArtifactContext.NPM_DESCRIPTOR)))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/547/buggy-version/cmr.impl.src.main.java.com.redhat.ceylon.cmr.impl.NpmRepository.java", "BodyUseAPI": [], "Fixed commit": "f82777f4924ab8108d72cbe72f2aefca2c7dbd6a", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-07-08T15:47:18Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newState == (android.support.v7.widget.RecyclerView.SCROLL_STATE_DRAGGING)) { cancelDrag(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6436/buggy-version/library.src.main.java.com.h6ah4i.android.widget.advrecyclerview.draggable.RecyclerViewDragDropManager.java", "BodyUseAPI": [], "Fixed commit": "b187cb6b30aa3beeab144f7ae2394e9d96e7b4f8", "Url": "https://api.github.com/repos/h6ah4i/android-advancedrecyclerview", "Date": "2015-10-12T05:41:32Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(Context.INPUT_METHOD_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (imm.isAcceptingText()) { imm.hideSoftInputFromWindow(v.getWindowToken(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6938/buggy-version/app.src.main.java.com.google.samples.apps.topeka.widget.quiz.AbsQuizView.java", "BodyUseAPI": ["android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(v.getWindowToken(),int)"], "Fixed commit": "ea70efb123a76bce90221897222079ff33a16a59", "Url": "https://api.github.com/repos/ShreyashPromact/android-topeka", "Date": "2015-09-24T11:46:42Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jdom.Element.getChild(java.lang.String,org.jdom.Namespace.getNamespace(\"http://www.opengis.net/samplingSpatial/2.0\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ssf != null) { org.jdom.Element shape = ssf.getChild(\"shape\", org.jdom.Namespace.getNamespace(\"http://www.opengis.net/samplingSpatial/2.0\")); shape.removeAttribute(\"type\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7014/buggy-version/src.main.java.org.uncertweb.ps.encoding.xml.OMEncoding.java", "BodyUseAPI": ["org.jdom.Element.getChild(java.lang.String,org.jdom.Namespace.getNamespace(\"http://www.opengis.net/samplingSpatial/2.0\"))"], "Fixed commit": "ca264201feb4dbd117797869704b6a22f21d75f9", "Url": "https://api.github.com/repos/itszootime/ps-framework", "Date": "2012-09-14T11:36:46Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.io.File>.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (file.getParent().equals(wallpaperDirectory.getPath())) currentImage = ((int) (id)) - (dirList.size()); else currentImage = (((int) (id)) - (dirList.size())) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/860/buggy-version/app.src.main.java.com.okunev.lecturemanager.FileBrowser.java", "BodyUseAPI": [], "Fixed commit": "ae14ee2f04529f37c193d12856a030ef905f65b1", "Url": "https://api.github.com/repos/spbisya/LectureManager", "Date": "2015-12-21T20:37:15Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((wallpaperDirectory.listFiles().length) < 2) & (wallpaperDirectory.listFiles()[0].getName().equals(\".temp\"))) { android.widget.ImageView imageView = ((android.widget.ImageView) (findViewById(R.id.imageView2))); imageView.setVisibility(View.VISIBLE); imageView.setBackgroundResource(R.drawable.nothing); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/860/buggy-version/app.src.main.java.com.okunev.lecturemanager.FileBrowser.java", "BodyUseAPI": [], "Fixed commit": "ae14ee2f04529f37c193d12856a030ef905f65b1", "Url": "https://api.github.com/repos/spbisya/LectureManager", "Date": "2015-12-21T20:37:15Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.address.model.Model.getFilteredTaskList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(index.isPresent())) || ((index.get()) > (lastShownList.size()))) { return new seedu.address.logic.commands.IncorrectCommand(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE)); }else { seedu.address.model.person.ReadOnlyTask taskToDelete = lastShownList.get(((index.get()) - 1)); return new seedu.address.logic.parser.AddCommandParser().parse(seedu.address.logic.parser.ParserUtil.getTaskArgs(taskToDelete), ((index.get()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7218/buggy-version/src.main.java.seedu.address.logic.parser.Parser.java", "BodyUseAPI": ["seedu.address.commons.core.UnmodifiableObservableList<seedu.address.model.person.ReadOnlyTask>.get(int)", "seedu.address.logic.parser.AddCommandParser.parse(seedu.address.logic.parser.ParserUtil.getTaskArgs(taskToDelete),int)", "java.util.Optional<java.lang.Integer>.get()", "java.util.Optional<java.lang.Integer>.get()"], "Fixed commit": "4bb5638eab6472d001986d67fd7e6c4994b71564", "Url": "https://api.github.com/repos/CS2103JAN2017-F12-B2/main", "Date": "2017-03-22T17:06:45Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NodeList.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (item == null) { elItem = doc.createElement(\"VirtualNetworkSites\"); element.appendChild(elItem); }else { elItem = ((org.w3c.dom.Element) (item)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/281/buggy-version/src.main.java.org.dasein.cloud.azure.network.AzureVlanSupport.java", "BodyUseAPI": [], "Fixed commit": "cf493998264185a85e2488584be5aa5e2022faf3", "Url": "https://api.github.com/repos/timf/dasein-cloud-azure", "Date": "2013-11-01T04:55:07Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((map.size()) == 0) { throw new java.lang.RuntimeException(\"Each automaton should have one corresponding regular expression.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1798/buggy-version/src.org.jgll.regex.Automaton.java", "BodyUseAPI": [], "Fixed commit": "52a49e067d6f7f949a36596de700d24952a7994f", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2014-01-22T10:58:27Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.shrinkwrap.descriptor.spi.Node.get(org.jboss.shrinkwrap.descriptor.spi.query.Query)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (found == null) { return java.util.Collections.EMPTY_LIST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4778/buggy-version/spi.src.main.java.org.jboss.shrinkwrap.descriptor.spi.Node.java", "BodyUseAPI": [], "Fixed commit": "22dfbf9023a397166f220de419fb831b28f22a33", "Url": "https://api.github.com/repos/DavideD/descriptors", "Date": "2011-07-21T10:49:39Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (path.equals(\"\")) path = \"/\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6016/buggy-version/src.com.redbrick.devchat.rblinks.RbLinkbot.java", "BodyUseAPI": [], "Fixed commit": "d7768b2e7bf4beeca6f2619fe6b0a3a9d2dc7677", "Url": "https://api.github.com/repos/DevChat/rblinks", "Date": "2013-11-21T23:47:16Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) != 1) { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"/skinstall <Skript URL>\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2247/buggy-version/src.main.java.nl.galaPATHs.easyskript.SkinstallCommand.java", "BodyUseAPI": [], "Fixed commit": "2e8fd12cf9a84d1989f24027f3e809fffe0a2760", "Url": "https://api.github.com/repos/IamGalaPATHs/EasySkript", "Date": "2015-04-15T16:24:03Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (privacyLog != null) { this.privacyLog = privacyLog; privacyLogEnabled = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/511/buggy-version/platform-infrastructure.comms-frwk.XCCommunicationMgr.src.main.java.org.societies.comm.xmpp.xc.impl.XCCommunicationMgr.java", "BodyUseAPI": [], "Fixed commit": "cd338e323dfa8cd7929df5d61fc6484a8e172228", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2013-05-30T11:23:24Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((tr.getRunState()) instanceof org.jtrfp.trcl.miss.Mission.PlayerActivity)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7489/buggy-version/src.main.java.org.jtrfp.trcl.ext.tr.ViewSelectFactory.java", "BodyUseAPI": [], "Fixed commit": "7d4d48221955252e3d5eb923049e78306bcf1d50", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2016-01-06T17:22:05Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (closedChannel) { close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/190/buggy-version/src.java.voldemort.store.socket.clientrequest.ClientRequestExecutorFactory.java", "BodyUseAPI": [], "Fixed commit": "d65428a55ca90ee8a755c0816c6d9e9f5d1abad3", "Url": "https://api.github.com/repos/ctasada/voldemort", "Date": "2012-03-15T16:06:10Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bauble_app.bauble.StoryObject.grabUniqueId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(this.mKeys.contains(key))) { this.mKeys.add(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4160/buggy-version/app.src.main.java.com.bauble_app.bauble.StorySingleton.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "9a6c271439cea28556226748eca0c61d9e955b13", "Url": "https://api.github.com/repos/eduardrg/TellToo", "Date": "2017-05-30T08:07:30Z"},
{"Line": "=>653", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.xabber.android.data.SettingsManager.spamFilterMode()) != (SettingsManager.SpamFilterMode.disabled)) && ((com.xabber.android.data.roster.RosterManager.getInstance().getRosterContact(account, companion)) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6229/buggy-version/xabber.src.main.java.com.xabber.android.data.message.MessageManager.java", "BodyUseAPI": [], "Fixed commit": "79b4a9d88f22ea3711197fa63ef1ea9b03d94ef7", "Url": "https://api.github.com/repos/ageback/xabber-android", "Date": "2017-07-12T12:05:52Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.imsweb.naaccrxml.entity.dictionary.NaaccrDictionary.getItemByNaaccrId(item.getNaaccrId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (defaultUserItem != null) { if (!(java.util.Objects.equals(defaultUserItem.getNaaccrNum(), item.getNaaccrNum()))) return ((\"invalid value for 'naaccrNum' attribute of item '\" + (item.getNaaccrId())) + \"'; should be set to \") + (defaultUserItem.getNaaccrNum()); if (!(java.util.Objects.equals(defaultUserItem.getNaaccrName(), item.getNaaccrName()))) return ((\"invalid value for 'naaccrName' attribute of item '\" + (item.getNaaccrId())) + \"'; should be set to \") + (defaultUserItem.getNaaccrName()); if (!(java.util.Objects.equals(defaultUserItem.getStartColumn(), item.getStartColumn()))) return ((\"invalid value for 'startColumn' attribute of item '\" + (item.getNaaccrId())) + \"'; should be set to \") + (defaultUserItem.getStartColumn()); if (!(java.util.Objects.equals(defaultUserItem.getLength(), item.getLength()))) return ((\"invalid value for 'length' attribute of item '\" + (item.getNaaccrId())) + \"'; should be set to \") + (defaultUserItem.getLength()); if (!(java.util.Objects.equals(defaultUserItem.getRecordTypes(), item.getRecordTypes()))) return ((\"invalid value for 'recordTypes' attribute of item '\" + (item.getNaaccrId())) + \"'; should be set to \") + (defaultUserItem.getRecordTypes()); if (!(java.util.Objects.equals(defaultUserItem.getParentXmlElement(), item.getParentXmlElement()))) return ((\"invalid value for 'parentXmlElement' attribute of item '\" + (item.getNaaccrId())) + \"'; should be set to \") + (defaultUserItem.getParentXmlElement()); if (!(java.util.Objects.equals(defaultUserItem.getDataType(), item.getDataType()))) return ((\"invalid value for 'dataType' attribute of item '\" + (item.getNaaccrId())) + \"'; should be set to \") + (defaultUserItem.getDataType()); }else { if (((item.getNaaccrNum()) < 9500) || ((item.getNaaccrNum()) > 99999)) return (\"invalid value for 'naaccrNum' attribute: \" + (item.getNaaccrNum())) + \"; allowed range is 9500-99999\"; boolean fallInAllowedRange = false; for (com.imsweb.naaccrxml.entity.dictionary.NaaccrDictionaryItem defaultItem : defaultUserDictionary.getItems()) { if (((item.getStartColumn()) >= (defaultItem.getStartColumn())) && (((item.getStartColumn()) + (item.getLength())) <= ((defaultItem.getStartColumn()) + (defaultItem.getLength())))) { fallInAllowedRange = true; break; } } if (!fallInAllowedRange) return \"invalid value for 'startColumn' and/or 'length' attributes; user-defined items can only override state requestor item, NPCR item, or reserved gaps\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1565/buggy-version/src.main.java.com.imsweb.naaccrxml.NaaccrXmlDictionaryUtils.java", "BodyUseAPI": ["com.imsweb.naaccrxml.entity.dictionary.NaaccrDictionaryItem.getNaaccrName()", "com.imsweb.naaccrxml.entity.dictionary.NaaccrDictionaryItem.getLength()", "java.util.Objects.equals(defaultUserItem.getNaaccrName(),item.getNaaccrName())", "java.util.Objects.equals(defaultUserItem.getRecordTypes(),item.getRecordTypes())", "com.imsweb.naaccrxml.entity.dictionary.NaaccrDictionaryItem.getParentXmlElement()", "com.imsweb.naaccrxml.entity.dictionary.NaaccrDictionaryItem.getNaaccrNum()", "java.util.Objects.equals(defaultUserItem.getDataType(),item.getDataType())", "com.imsweb.naaccrxml.entity.dictionary.NaaccrDictionaryItem.getStartColumn()", "com.imsweb.naaccrxml.entity.dictionary.NaaccrDictionaryItem.getNaaccrNum()", "com.imsweb.naaccrxml.entity.dictionary.NaaccrDictionaryItem.getDataType()", "com.imsweb.naaccrxml.entity.dictionary.NaaccrDictionaryItem.getRecordTypes()", "com.imsweb.naaccrxml.entity.dictionary.NaaccrDictionaryItem.getParentXmlElement()", "com.imsweb.naaccrxml.entity.dictionary.NaaccrDictionaryItem.getLength()", "java.util.Objects.equals(defaultUserItem.getParentXmlElement(),item.getParentXmlElement())", "java.util.Objects.equals(defaultUserItem.getNaaccrNum(),item.getNaaccrNum())", "com.imsweb.naaccrxml.entity.dictionary.NaaccrDictionaryItem.getNaaccrName()", "java.util.Objects.equals(defaultUserItem.getStartColumn(),item.getStartColumn())", "com.imsweb.naaccrxml.entity.dictionary.NaaccrDictionaryItem.getRecordTypes()", "com.imsweb.naaccrxml.entity.dictionary.NaaccrDictionaryItem.getDataType()", "com.imsweb.naaccrxml.entity.dictionary.NaaccrDictionaryItem.getStartColumn()", "java.util.Objects.equals(defaultUserItem.getLength(),item.getLength())"], "Fixed commit": "3f6d27c0ab929bcbfdb3a7ec861c398e683bd1a0", "Url": "https://api.github.com/repos/imsweb/naaccr-xml", "Date": "2016-05-04T20:38:12Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.anl.aps.cdb.portal.controllers.extensions.ItemEnforcedPropertiesController.getCurrent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.getPropertyValueList()) == null) { item.setPropertyValueList(new java.util.ArrayList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3104/buggy-version/src.java.CdbWebPortal.src.java.gov.anl.aps.cdb.portal.controllers.extensions.ItemEnforcedPropertiesController.java", "BodyUseAPI": ["gov.anl.aps.cdb.portal.model.db.entities.Item.setPropertyValueList(java.util.ArrayList)"], "Fixed commit": "a6d69c2ef4aaa09460c52d880e7cc245b6f7a720", "Url": "https://api.github.com/repos/iTerminate/Component.DB", "Date": "2017-07-07T14:22:42Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParent()) instanceof android.support.v4.view.ViewPager) { mBackgroundRight = mBackground.getMeasuredWidth(); }else { mBackgroundRight = (getLeft()) + (mBackground.getMeasuredWidth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8353/buggy-version/library.src.couk.jenxsol.parallaxscrollview.views.ParallaxScrollView.java", "BodyUseAPI": [], "Fixed commit": "575f69ca827d0c2f575978724871156702cc6325", "Url": "https://api.github.com/repos/caguilar187/ParallaxScrollView", "Date": "2013-11-12T21:47:18Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParent()) instanceof android.support.v4.view.ViewPager) { mBackground.layout(0, offset, mBackgroundRight, (offset + (mBackgroundBottom))); }else { mBackground.layout(getLeft(), offset, mBackgroundRight, (offset + (mBackgroundBottom))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8353/buggy-version/library.src.couk.jenxsol.parallaxscrollview.views.ParallaxScrollView.java", "BodyUseAPI": [], "Fixed commit": "575f69ca827d0c2f575978724871156702cc6325", "Url": "https://api.github.com/repos/caguilar187/ParallaxScrollView", "Date": "2013-11-12T21:47:18Z"},
{"Line": "=>771", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (control instanceof com.lightcrafts.ui.operation.LensCorrectionsControl) { child = node.addChild(com.lightcrafts.ui.operation.OpStack.LensCorrectionsTag); }else { child = node.addChild(com.lightcrafts.ui.operation.OpStack.GenericTag); com.lightcrafts.ui.operation.GenericOperation op = ((com.lightcrafts.ui.operation.GenericOperation) (control.getOperation())); com.lightcrafts.ui.operation.OperationType opType = op.getType(); child.setAttribute(com.lightcrafts.ui.operation.OpStack.OpTypeTag, opType.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5814/buggy-version/lightcrafts.src.com.lightcrafts.ui.operation.OpStack.java", "BodyUseAPI": ["com.lightcrafts.ui.operation.OpControl.getOperation()"], "Fixed commit": "2eb7dec215380c00fab05675bb03175bf4a214f4", "Url": "https://api.github.com/repos/ktgw0316/LightZone", "Date": "2017-05-08T14:19:49Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mTextColor) == null) { mTextColor = android.content.res.ColorStateList.valueOf(-16777216); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8178/buggy-version/HorizontalPicker.src.main.java.com.wefika.horizontalpicker.HorizontalPicker.java", "BodyUseAPI": [], "Fixed commit": "e1936a370b9f124416356703259f9fb4f7b99c79", "Url": "https://api.github.com/repos/blazsolar/HorizontalPicker", "Date": "2015-09-23T12:59:14Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (scope != null) { scope.putLabel(method, ((org.objectweb.asm.tree.LabelNode) (insn)), ident.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/147/buggy-version/src.main.java.uk.co.thinkofdeath.patchtools.instruction.instructions.LabelInstruction.java", "BodyUseAPI": ["uk.co.thinkofdeath.patchtools.PatchScope.putLabel(org.objectweb.asm.tree.MethodNode,org.objectweb.asm.tree.AbstractInsnNode,ident.getName())"], "Fixed commit": "b00cab2ffa167c7f8147c0b28cdd651382573a0c", "Url": "https://api.github.com/repos/thinkofdeath/patchtools", "Date": "2014-09-01T14:58:17Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mAdapter.isSelectionMode())) { mAdapter.setSelectionMode(true); mAdapter.setSelection(position); mActionMode = getActivity().startActionMode(mCallback); if ((mActionMode) != null) { mActionMode.setTitle(java.lang.String.valueOf(mAdapter.getSelectedItems().size())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4202/buggy-version/app.src.main.java.com.fin10.android.mywallpaper.list.WallpaperListFragment.java", "BodyUseAPI": ["android.view.ActionMode.setTitle(java.lang.String)", "java.util.List<com.fin10.android.mywallpaper.model.WallpaperModel>.size()", "com.fin10.android.mywallpaper.list.WallpaperListFragment.WallpaperListAdapter.setSelection(int)", "java.lang.String.valueOf(mAdapter.getSelectedItems().size())", "com.fin10.android.mywallpaper.list.WallpaperListFragment.WallpaperListAdapter.setSelectionMode(boolean)", "com.fin10.android.mywallpaper.list.WallpaperListFragment.WallpaperListAdapter.getSelectedItems()"], "Fixed commit": "866593b55bdbfde3970fffb4cd2d8fe8f3fa137c", "Url": "https://api.github.com/repos/fin10/MyWallpaper", "Date": "2016-06-25T17:06:37Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"numeric\".equals(type)) return \"double\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3948/buggy-version/railo-java.railo-core.src.railo.runtime.orm.hibernate.HibernateCaster.java", "BodyUseAPI": [], "Fixed commit": "4d8b224d4dcda59391022045b251a32c5f6ec500", "Url": "https://api.github.com/repos/clitnak/mcrailo", "Date": "2012-04-30T09:31:42Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.cuny.qc.speech.AuToBI.core.FeatureSet.getFeatureIndex(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((this.fs_attributes[idx]) != null) { return this.fs_attributes[idx]; }else { return this.attributes.get(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2861/buggy-version/src.edu.cuny.qc.speech.AuToBI.core.Region.java", "BodyUseAPI": [], "Fixed commit": "de52248fd2d02700bde7704491348be827cf6c23", "Url": "https://api.github.com/repos/ftesser/AuToBI", "Date": "2012-03-21T12:00:59Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((folder) != null) recursiveDelete(folder);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4495/buggy-version/src.main.java.org.junit.rules.TemporaryFolder.java", "BodyUseAPI": [], "Fixed commit": "2d3090bf96357c0d9387a4e8f87525f776e52799", "Url": "https://api.github.com/repos/vyazelenko/junit", "Date": "2011-10-17T22:33:35Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dismissedAlarm.isSnoozeAlarm()) { java.lang.Boolean success = com.alphan.mcan.snoozecharity.services.AlarmManagerHelper.deleteAlarm(this, dismissedAlarm); android.util.Log.i(TAG, (((\"Deleting snooze alarm: \" + (dismissedAlarm.getId())) + \" success: \") + success)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3050/buggy-version/app.src.main.java.com.alphan.mcan.snoozecharity.services.AlarmRingService.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,(((\"Deleting snooze alarm: \" + (dismissedAlarm.getId())) + \" success: \") + success))", "com.alphan.mcan.snoozecharity.services.AlarmManagerHelper.deleteAlarm(com.alphan.mcan.snoozecharity.services.AlarmRingService,com.alphan.mcan.snoozecharity.data.model.AlarmDataModel)", "com.alphan.mcan.snoozecharity.data.model.AlarmDataModel.getId()"], "Fixed commit": "69223adcd3de4a52703f919154acb9c75ec306bf", "Url": "https://api.github.com/repos/aeneas1163/EffectiveNavigation", "Date": "2015-01-11T15:06:58Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((idField.getText().compareTo(\"\")) == 0) return 0L;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5342/buggy-version/src.org.wms.view.order.OrderView.java", "BodyUseAPI": [], "Fixed commit": "107558c12c8c7e941a156a65477076aaac5b3f3c", "Url": "https://api.github.com/repos/Aula13/A-WMS", "Date": "2015-07-21T09:40:47Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.args.length) != (args.length)) && (!(hasArg(\"(list)\")))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/893/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Objects.CommandHandler.java", "BodyUseAPI": [], "Fixed commit": "739e22f4f1b4a151401798a6dba3bf3982ca2319", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-10-22T18:25:35Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(net.catacombsnatch.game.core.Game.menuStack.isEmpty())) Gdx.input.setInputProcessor(net.catacombsnatch.game.core.Game.menuStack.peek());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8628/buggy-version/core.src.main.java.net.catacombsnatch.game.core.Game.java", "BodyUseAPI": ["Gdx.input.setInputProcessor(net.catacombsnatch.game.core.Game.menuStack.peek())", "net.catacombsnatch.game.core.gui.MenuStack.peek()"], "Fixed commit": "b11cb343f818db635862e54e003d5078e4860e6b", "Url": "https://api.github.com/repos/Catacomb-Snatch/Catacomb-Snatch", "Date": "2013-01-14T14:42:14Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["activation.getLanguageConnectionContext().getDataSetProcessorType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type == (CompilerContext.DataSetProcessorType.FORCED_SPARK)) useSpark = true; else if (type == (CompilerContext.DataSetProcessorType.FORCED_CONTROL)) useSpark = false; else { com.splicemachine.db.iapi.sql.compile.CompilerContext.DataSetProcessorType queryForcedType = com.splicemachine.derby.impl.sql.execute.operations.ExplainOperation.queryHintedForcedType(opPlanMap); if (queryForcedType != null) { if (queryForcedType == (CompilerContext.DataSetProcessorType.FORCED_SPARK)) useSpark = true; else if (queryForcedType == (CompilerContext.DataSetProcessorType.FORCED_CONTROL)) useSpark = false; }else if (!useSpark) useSpark = com.splicemachine.db.impl.ast.PlanPrinter.shouldUseSpark(opPlanMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1099/buggy-version/splice_machine.src.main.java.com.splicemachine.derby.impl.sql.execute.operations.ExplainOperation.java", "BodyUseAPI": [], "Fixed commit": "50067c9b54988a80e87659c06b0c2ccdcd4bcbbe", "Url": "https://api.github.com/repos/splicemachine/spliceengine", "Date": "2017-07-05T18:48:04Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isForceShowLoadingView) { mCurrentTargetOffsetTop = ((int) ((getResources().getDisplayMetrics().density) * (niorgai.qiu.superrefreshlayout.refresh.SuperRefreshLayout.REFRESH_TRIGGER_DISTANCE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1508/buggy-version/app.src.main.java.niorgai.qiu.superrefreshlayout.refresh.SuperRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "d9f2d1b7fd47991f504ef250131b6e2229ccfda5", "Url": "https://api.github.com/repos/niorgai/SuperRefreshLayout", "Date": "2015-11-20T13:25:53Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((resultSetTrace) != null) && ((resultSetTrace.size()) > 0)) { java.sql.ResultSet lastResultSet = resultSetTrace.get(((resultSetTrace.size()) - 1)); if (lastResultSet instanceof com.alibaba.druid.pool.DruidPooledResultSet) { com.alibaba.druid.pool.DruidPooledResultSet pooledResultSet = ((com.alibaba.druid.pool.DruidPooledResultSet) (lastResultSet)); pooledResultSet.closed = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/9037/buggy-version/src.main.java.com.alibaba.druid.pool.DruidPooledStatement.java", "BodyUseAPI": ["java.util.List<java.sql.ResultSet>.size()", "java.util.List<java.sql.ResultSet>.get(int)"], "Fixed commit": "562e1d84ed4b5cdd17adec7385abb31c65cafeba", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2016-08-09T03:19:35Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((charArr.length) == 0) { arr[pointer] = 10; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3993/buggy-version/BrainfuckCompiler.src.dk.dtu.brainfuckcomp.Brainfuck.java", "BodyUseAPI": [], "Fixed commit": "d6d25bbd1ac2ecad773aaba329e836310b7342cc", "Url": "https://api.github.com/repos/Enslev/BrainfuckCompiler", "Date": "2016-05-16T18:57:06Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.studentmanagement.databasemanager.StudentListGenerator.getStudentList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rollList.size()) == 0) { model.addAttribute(\"message\", \"The class you are looking for is not found.<br/> If you are sure this is your class, create a new class from left sidebar\"); return \"somethingwentwrong\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/106/buggy-version/src.main.java.com.studentmanagement.controller.AcademicMarksController.java", "BodyUseAPI": [], "Fixed commit": "45510f43d61618e012632200c00967d34914b59a", "Url": "https://api.github.com/repos/gaurav2493/studentmanagement", "Date": "2014-03-29T18:24:11Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.getFullyQualifiedName().equals(java.util.Date.class.getName())) { s = org.jboss.errai.codegen.util.Stmt.nestedCall(new org.jboss.errai.codegen.TernaryStatement(org.jboss.errai.codegen.util.Bool.isNull(statement), org.jboss.errai.codegen.util.Stmt.load(\"\"), org.jboss.errai.codegen.util.Stmt.nestedCall(statement).invoke(\"toGMTString\"))); }else { s = org.jboss.errai.codegen.util.Stmt.nestedCall(new org.jboss.errai.codegen.TernaryStatement(org.jboss.errai.codegen.util.Bool.isNull(statement), org.jboss.errai.codegen.util.Stmt.load(\"\"), org.jboss.errai.codegen.util.Stmt.nestedCall(statement))); if (!(type.equals(org.jboss.errai.codegen.meta.MetaClassFactory.get(java.lang.String.class)))) { s = s.invoke(\"toString\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4770/buggy-version/errai-jaxrs.errai-jaxrs-client.src.main.java.org.jboss.errai.enterprise.rebind.TypeMarshaller.java", "BodyUseAPI": ["org.jboss.errai.codegen.meta.MetaClass.equals(org.jboss.errai.codegen.meta.MetaClassFactory.get(java.lang.String.class))"], "Fixed commit": "c759eda52ea25777a55360612d8c40976853aae6", "Url": "https://api.github.com/repos/mbarkley/errai", "Date": "2016-07-08T21:19:58Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<weather2.weathersystem.storm.WeatherObject>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (wo instanceof weather2.weathersystem.storm.StormObject) { weather2.weathersystem.storm.StormObject storm = ((weather2.weathersystem.storm.StormObject) (wo)); if (((storm.pos.distanceTo(parPos)) < maxDist) && ((storm.attrib_precipitation) || ((storm.levelCurIntensityStage) > (weather2.weathersystem.storm.StormObject.STATE_NORMAL)))) { storms.add(storm); } }else if (wo instanceof weather2.weathersystem.storm.WeatherObjectSandstorm) { weather2.weathersystem.storm.WeatherObjectSandstorm sandstorm = ((weather2.weathersystem.storm.WeatherObjectSandstorm) (wo)); java.util.List<CoroUtil.util.Vec3> points = sandstorm.getSandstormAsShape(); double distToStorm = CoroUtil.util.CoroUtilPhysics.getDistanceToShape(parPos, points); if (distToStorm < maxDist) { storms.add(wo); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4214/buggy-version/src.main.java.weather2.weathersystem.WeatherManagerBase.java", "BodyUseAPI": ["java.util.List<weather2.weathersystem.storm.WeatherObject>.add(weather2.weathersystem.storm.WeatherObject)"], "Fixed commit": "d5fbcefad5c568df6373437a4447b28bc16cbd2f", "Url": "https://api.github.com/repos/Corosauce/weather2", "Date": "2017-01-05T17:15:13Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (embellish) jsonResponse = com.brotherlogic.booser.storage.web.Downloader.getInstance().download(manager.embellish(url)); else jsonResponse = com.brotherlogic.booser.storage.web.Downloader.getInstance().download(url);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6288/buggy-version/src.main.java.com.brotherlogic.booser.storage.web.WebLayer.java", "BodyUseAPI": [], "Fixed commit": "9295ece395e49cf614b46b1763845134518d206f", "Url": "https://api.github.com/repos/BrotherLogic/booser", "Date": "2013-07-27T15:24:43Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((sender) != null) && (!(sender.isClosed()))) { sender.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2617/buggy-version/src.main.java.com.microsoft.eventhubs.client.EventHubSender.java", "BodyUseAPI": ["org.apache.qpid.amqp_1_0.client.Sender.close()"], "Fixed commit": "53d187467580895a177e59099daec8a82c60731a", "Url": "https://api.github.com/repos/keedio/eventhubs-client", "Date": "2016-06-29T22:16:46Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"KNOX\".equalsIgnoreCase(org.csi.yucca.dataservice.metadataapi.util.Config.getInstance().getSolrTypeAccess())) req = new org.apache.solr.client.solrj.request.GenericSolrRequest(org.apache.solr.client.solrj.SolrRequest.METHOD.GET, ((\"/\" + (org.csi.yucca.dataservice.metadataapi.util.Config.getInstance().getSearchEngineCollection())) + \"/select\"), org.csi.yucca.dataservice.metadataapi.singleton.SolrRequestParsers.parseQueryString(searchUrl.toString())); else req = new org.apache.solr.client.solrj.request.GenericSolrRequest(org.apache.solr.client.solrj.SolrRequest.METHOD.GET, \"/select\", org.csi.yucca.dataservice.metadataapi.singleton.SolrRequestParsers.parseQueryString(searchUrl.toString()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4039/buggy-version/metadata-api.src.main.java.org.csi.yucca.dataservice.metadataapi.delegate.v02.metadata.MetadataDelegate.java", "BodyUseAPI": [], "Fixed commit": "ef1460ffd1cc05ec882104f07048ac31e8af01b6", "Url": "https://api.github.com/repos/csipiemonte/yucca-dataservice", "Date": "2017-08-03T09:10:24Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"KNOX\".equalsIgnoreCase(org.csi.yucca.dataservice.metadataapi.util.Config.getInstance().getSolrTypeAccess())) req = new org.apache.solr.client.solrj.request.GenericSolrRequest(org.apache.solr.client.solrj.SolrRequest.METHOD.GET, ((\"/\" + (org.csi.yucca.dataservice.metadataapi.util.Config.getInstance().getSearchEngineCollection())) + \"/select\"), org.csi.yucca.dataservice.metadataapi.singleton.SolrRequestParsers.parseQueryString(searchUrl.toString())); else req = new org.apache.solr.client.solrj.request.GenericSolrRequest(org.apache.solr.client.solrj.SolrRequest.METHOD.GET, \"/select\", org.csi.yucca.dataservice.metadataapi.singleton.SolrRequestParsers.parseQueryString(searchUrl.toString()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4039/buggy-version/metadata-api.src.main.java.org.csi.yucca.dataservice.metadataapi.delegate.v02.metadata.MetadataDelegate.java", "BodyUseAPI": [], "Fixed commit": "ef1460ffd1cc05ec882104f07048ac31e8af01b6", "Url": "https://api.github.com/repos/csipiemonte/yucca-dataservice", "Date": "2017-08-03T09:10:24Z"},
{"Line": "=>3822", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mEditor) == null) || (!(mEditor.mErrorWasChanged))) { setError(error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1473/buggy-version/core.java.android.widget.TextView.java", "BodyUseAPI": [], "Fixed commit": "05c3e5ceef016652602f88749eab3d2a0e44ec10", "Url": "https://api.github.com/repos/OptiPop/frameworks_base", "Date": "2015-05-11T17:04:17Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.schedule_relationship) != null) { preparedStmt.setInt(3, this.schedule_relationship); }else { preparedStmt.setNull(3, java.sql.Types.NULL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1559/buggy-version/src.main.java.com.iqtransit.gtfs.TripUpdate.java", "BodyUseAPI": [], "Fixed commit": "8ad8d15b4c4a38432b94308b69863b3f1ea01715", "Url": "https://api.github.com/repos/cdalsass/iqtransit", "Date": "2016-03-10T17:25:38Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list == null) return dayAppointments;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1751/buggy-version/app.src.main.java.dhbw.timetable.data.DateHelper.java", "BodyUseAPI": [], "Fixed commit": "538c64e64b10d631e6af78a0af53db31341015aa", "Url": "https://api.github.com/repos/dhbw-timetable/dhbw-timetable-android", "Date": "2017-09-29T22:24:10Z"},
{"Line": "=>4271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((peaks.getN()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5949/buggy-version/src.algorithms.imageProcessing.ImageProcessor.java", "BodyUseAPI": [], "Fixed commit": "32584fafe76e8078187af846b696aa2338391a78", "Url": "https://api.github.com/repos/nking/curvature-scale-space-corners-and-transformations", "Date": "2015-10-01T23:08:15Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((top) == 0) { java.lang.System.out.println(\"Nothing to print, please add values first.\"); }else { for (int i = 0; i < (top); i++) { java.lang.System.out.println(((i + \": \") + (arr[i]))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6590/buggy-version/src.Stack.java", "BodyUseAPI": [], "Fixed commit": "29d889bad3c5c313e2fc20cd90f5f49195157ebb", "Url": "https://api.github.com/repos/Sureynix/StackImplementation", "Date": "2016-11-30T04:14:26Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (length == 1) { week = \"0\" + intweek; }else { week = \"\" + intweek; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/996/buggy-version/app.src.main.java.one.dichmann.lectioapp.Fragments.DayFragment.java", "BodyUseAPI": [], "Fixed commit": "144007d8cc92aefd90b68f01c4becd87cfb687de", "Url": "https://api.github.com/repos/Zentarg/Open-Lectio", "Date": "2017-01-15T20:48:28Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((loader.getMib(src)) != null) || ((loader.getMib(file)) != null)) { return; }else if (file.exists()) { if (!(loader.hasDir(file.getParentFile()))) { loader.removeAllDirs(); loader.addDir(file.getParentFile()); } mib = loader.load(file); addFilePref(file.getAbsolutePath()); }else { mib = loader.load(src); addFilePref(src); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3185/buggy-version/src.java.net.percederberg.mibble.MibbleBrowser.java", "BodyUseAPI": ["net.percederberg.mibble.MibLoader.hasDir(java.io.File)", "net.percederberg.mibble.MibLoader.load(java.lang.String)", "net.percederberg.mibble.MibbleBrowser.addFilePref(java.lang.String)", "net.percederberg.mibble.MibLoader.removeAllDirs()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.exists()", "net.percederberg.mibble.MibLoader.addDir(java.io.File)", "java.io.File.getAbsolutePath()", "net.percederberg.mibble.MibLoader.load(java.io.File)", "net.percederberg.mibble.MibbleBrowser.addFilePref(java.lang.String)"], "Fixed commit": "8fbfad0225005637e7bdee6444aa17486fcc1c45", "Url": "https://api.github.com/repos/cederberg/mibble", "Date": "2016-11-23T11:24:18Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (partInfo.hasPart) partInfo.setTexture(kihira.tails.client.texture.TextureHelper.generateTexture(partInfo));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6613/buggy-version/src.main.java.kihira.tails.client.gui.GuiEditor.java", "BodyUseAPI": ["kihira.tails.common.PartInfo.setTexture(kihira.tails.client.texture.TextureHelper.generateTexture(partInfo))", "kihira.tails.client.texture.TextureHelper.generateTexture(kihira.tails.common.PartInfo)"], "Fixed commit": "c90382687ebad3f45ae1c35ffacf1020dee7e7b5", "Url": "https://api.github.com/repos/kihira/Tails", "Date": "2014-10-11T17:55:53Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.ChatColor.stripColor(scevent.getLine(0).trim())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((line1.length()) > 13) { line2 = ((org.bukkit.ChatColor.DARK_BLUE) + (line1.substring(13, line1.length()))) + line2; line1 = (org.bukkit.ChatColor.DARK_BLUE) + (line1.substring(0, 13)); }else { line1 = (org.bukkit.ChatColor.DARK_BLUE) + line1; line2 = (org.bukkit.ChatColor.DARK_BLUE) + line2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7564/buggy-version/src.main.java.signs.regalowl.hyperconomy.TransactionSign.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "42f7e58749f3f5e92c8712fcaaedbf00cd03c8f7", "Url": "https://api.github.com/repos/RegalOwl/HyperConomy", "Date": "2013-06-15T00:58:12Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((city) == null) { mDialog.dismiss(); return; }else { getWeather(((((\"http://api.openweathermap.org/data/2.5/weather?q=\" + (city)) + \",\") + (country)) + \"&APPID=f658806f4a85bcda44d18365457f3a6b&units=metric\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2672/buggy-version/app.src.main.java.ch.bbcag.app.bkellj.badiapp.Weather.java", "BodyUseAPI": ["ch.bbcag.app.bkellj.badiapp.Weather.getWeather(java.lang.String)"], "Fixed commit": "28989f8422f6e9014de27b232938f60e61cc7dd0", "Url": "https://api.github.com/repos/julienkellerhals/BadiApp", "Date": "2017-07-07T12:57:06Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["map.GameMap.getItemAt(map.CoordinatePair)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (itemAtDesiredLocation.activate(entity)) { map.Pair tmp; tmp = getEntityPair(entity); tmp.setRight(desired); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8065/buggy-version/FinalBossGame.src.map.GameMap.java", "BodyUseAPI": ["map.GameMap.getEntityPair(entity.Entity)"], "Fixed commit": "2845cb611aa15cb9e96dc7f57c0a653a26d8fc76", "Url": "https://api.github.com/repos/jasontowens/FinalBossGame", "Date": "2015-02-14T17:21:43Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5521/buggy-version/metadata-fixer.src.main.java.org.verapdf.metadata.fixer.utils.DateConverter.java", "BodyUseAPI": [], "Fixed commit": "0e01c25680233e0c51cd1fcf2d3028e1db8b49bb", "Url": "https://api.github.com/repos/carlwilson/veraPDF-library", "Date": "2015-10-22T16:10:34Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pinnedPagesWarningsCache) < (com.orientechnologies.orient.core.storage.cache.local.O2QCache.MAX_PERCENT_OF_PINED_PAGES)) { pinnedPagesWarningCounter.increment(); final long warnings = pinnedPagesWarningCounter.get(); if (warnings < (com.orientechnologies.orient.core.storage.cache.local.O2QCache.MAX_PERCENT_OF_PINED_PAGES)) { pinnedPagesWarningsCache = ((int) (warnings)); com.orientechnologies.common.log.OLogManager.instance().warn(this, ((((\"Maximum amount of pinned pages is reached , given page \" + cacheEntry) + \" will not be marked as pinned which may lead to performance degradation. You may consider to increase percent of pined pages \") + \"by changing of property \") + (OGlobalConfiguration.DISK_CACHE_PINNED_PAGES.getKey()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/880/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.cache.local.O2QCache.java", "BodyUseAPI": [], "Fixed commit": "7b503e9a5e7979f2c99785ac10a9b66509c7db0c", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-02-16T13:36:06Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me.hawsoo.juniorproyekt.Game.motionblur) { glAccum(me.hawsoo.juniorproyekt.GL_MULT, 0.5F); glAccum(me.hawsoo.juniorproyekt.GL_ACCUM, 0.5F); glAccum(me.hawsoo.juniorproyekt.GL_RETURN, 1.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5602/buggy-version/src.me.hawsoo.juniorproyekt.Game.java", "BodyUseAPI": [], "Fixed commit": "3f06e8e5575d8200495b8eb902fa137d99dcf68b", "Url": "https://api.github.com/repos/TimoGuy/Junior-Proyekt", "Date": "2015-03-06T14:07:27Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (postOfQuestionMark < 0) { tmpUrl = searchRequestParams; }else { tmpUrl = searchRequestParams.substring(0, postOfQuestionMark); java.lang.String[] params = searchRequestParams.substring(postOfQuestionMark).split(\"&\"); if ((params.length) != 0) { for (java.lang.String param : params) { if (((param.contains(\"dateTime\")) || (param.contains(\"source\"))) || (param.contains(\"destination\"))) tmpUrl = (tmpUrl + param) + \"&\"; } tmpUrl = tmpUrl.substring(0, ((tmpUrl.length()) - 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8590/buggy-version/app.src.main.java.com.lyftoxi.lyftoxi.FIndRideListActivity.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "5aa72f4c331c303097a98b08669406375fe25437", "Url": "https://api.github.com/repos/lyftoxi/LyftOxi_app", "Date": "2016-07-21T15:43:13Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getComponent()) instanceof imageFrame.ImagePane.ImagePanel) sf = ((double) (image.getWidth())) / ((double) (((imageFrame.ImagePane.ImagePanel) (e.getComponent())).getWidth()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2133/buggy-version/src.listener.MousePixelListener.java", "BodyUseAPI": ["java.awt.event.MouseEvent.getComponent()", "java.awt.Component.getWidth()"], "Fixed commit": "d7986c9c3e26777cf6d90bdb205490bd4308c594", "Url": "https://api.github.com/repos/plaguera/VC-IE", "Date": "2017-11-22T21:21:46Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (contextFromServer.has(\"context_places\")) { places = contextFromServer.getString(\"context_places\"); java.util.regex.Pattern p = java.util.regex.Pattern.compile(\"\\\\((.*?)\\\\)\", java.util.regex.Pattern.DOTALL); java.util.regex.Matcher matcher = p.matcher(places); while (matcher.find()) { java.lang.String[] geo = matcher.group(1).split(\",\"); double lat = java.lang.Double.parseDouble(geo[0]); double lng = java.lang.Double.parseDouble(geo[1]); com.google.android.gms.maps.model.LatLng latlng = new com.google.android.gms.maps.model.LatLng(lat, lng); arrayPoints.add(latlng); drawCircles(arrayPoints); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8543/buggy-version/src.edu.mit.mitmobile2.livinglabs.LivingLabContextSpatialActivity.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "4a5043357a9ba87f0620ad659b145e99fa6d1a36", "Url": "https://api.github.com/repos/HumanDynamics/MIT-Mobile-for-Android", "Date": "2014-06-09T19:18:11Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (llsiJson.has(\"settings_context_label\")) context_label = llsiJson.getString(\"settings_context_label\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8543/buggy-version/src.edu.mit.mitmobile2.livinglabs.LivingLabContextSpatialActivity.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "4a5043357a9ba87f0620ad659b145e99fa6d1a36", "Url": "https://api.github.com/repos/HumanDynamics/MIT-Mobile-for-Android", "Date": "2014-06-09T19:18:11Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (llsiJson.has(\"settings_context_label\")) context_label = llsiJson.getString(\"settings_context_label\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8543/buggy-version/src.edu.mit.mitmobile2.livinglabs.LivingLabContextTemporalActivity.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "4a5043357a9ba87f0620ad659b145e99fa6d1a36", "Url": "https://api.github.com/repos/HumanDynamics/MIT-Mobile-for-Android", "Date": "2014-06-09T19:18:11Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((_note) != null) && (_initalContent.equals(((_note.getName()) + (_contentEditor.getText().toString()))))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5333/buggy-version/app.src.main.java.net.gsantner.markor.activity.NoteActivity.java", "BodyUseAPI": [], "Fixed commit": "2bad1440992f4cc3f78a804c73f917150f9ab9fb", "Url": "https://api.github.com/repos/gsantner/markor", "Date": "2017-09-13T15:23:31Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jp.aegif.nemaki.businesslogic.ContentService.getDocumentOfLatestVersion(document.getVersionSeriesId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (latest != null) { nemakiCache.removeCmisCache(latest.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8601/buggy-version/core.src.main.java.jp.aegif.nemaki.cmis.service.impl.VersioningServiceImpl.java", "BodyUseAPI": ["jp.aegif.nemaki.util.cache.NemakiCache.removeCmisCache(latest.getId())", "jp.aegif.nemaki.model.Document.getId()"], "Fixed commit": "c215891dc40dbd8b81c2a78698c315b5f87171e1", "Url": "https://api.github.com/repos/aegif/NemakiWare", "Date": "2015-02-28T09:42:40Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.download) != (DownloadType.DIRECT)) { if (((this.serverMD5) != null) && (!(this.serverMD5.equals(Hashing.HashCode.EMPTY)))) { if (com.atlauncher.utils.Hashing.md5(fileLoc).equals(this.serverMD5)) { return; }else { com.atlauncher.utils.FileUtils.delete(fileLoc); } }else { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6117/buggy-version/src.main.java.com.atlauncher.data.json.Mod.java", "BodyUseAPI": [], "Fixed commit": "42754931d28ac2c0fe8b79c41f8a817500320896", "Url": "https://api.github.com/repos/flaw600/ATLauncher", "Date": "2016-02-08T07:04:52Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.serverDownload) == (DownloadType.DIRECT)) { dl.checkForNewness(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6117/buggy-version/src.main.java.com.atlauncher.data.json.Mod.java", "BodyUseAPI": [], "Fixed commit": "42754931d28ac2c0fe8b79c41f8a817500320896", "Url": "https://api.github.com/repos/flaw600/ATLauncher", "Date": "2016-02-08T07:04:52Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.download) != (DownloadType.DIRECT)) { if (this.hasMD5()) { if (com.atlauncher.utils.Hashing.md5(fileLoc).equals(this.md5)) { return; }else { com.atlauncher.utils.FileUtils.delete(fileLoc); } }else { long size = 0; try { size = java.nio.file.Files.size(fileLoc); } catch (java.lang.Exception e) { com.atlauncher.managers.LogManager.logStackTrace((\"Error getting file size of \" + fileLoc), e); } if (size != 0) { return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6117/buggy-version/src.main.java.com.atlauncher.data.json.Mod.java", "BodyUseAPI": [], "Fixed commit": "42754931d28ac2c0fe8b79c41f8a817500320896", "Url": "https://api.github.com/repos/flaw600/ATLauncher", "Date": "2016-02-08T07:04:52Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(RawFrontierByAreaPair.containsKey(key))) { java.util.List<org.openbw.bwapi4j.WalkPosition> wpl = new java.util.ArrayList<>(); wpl.add(raw.second); RawFrontierByAreaPair.put(key, wpl); }else { RawFrontierByAreaPair.get(key).add(raw.second); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5118/buggy-version/BWAPI4J.src.main.java.bwem.Graph.java", "BodyUseAPI": ["java.util.AbstractMap<org.openbw.bwapi4j.util.Pair<bwem.area.AreaId, bwem.area.AreaId>, java.util.List<org.openbw.bwapi4j.WalkPosition>>.put(org.openbw.bwapi4j.util.Pair<bwem.area.AreaId, bwem.area.AreaId>,java.util.List<org.openbw.bwapi4j.WalkPosition>)", "RawFrontierByAreaPair.get(key).add(raw.second)", "java.util.AbstractMap<org.openbw.bwapi4j.util.Pair<bwem.area.AreaId, bwem.area.AreaId>, java.util.List<org.openbw.bwapi4j.WalkPosition>>.get(org.openbw.bwapi4j.util.Pair<bwem.area.AreaId, bwem.area.AreaId>)"], "Fixed commit": "b375a7b972bbb0226bcd81a551e9bd98c059f7e4", "Url": "https://api.github.com/repos/OpenBW/BWAPI4J", "Date": "2017-10-27T11:47:58Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mDiscoveredDevices.contains(_device))) { mDiscoveredDevices.add(_device); mAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3072/buggy-version/app.src.main.java.eduard.uz.meteodroid.fragments.SearchFragment.java", "BodyUseAPI": ["java.util.ArrayList<android.bluetooth.BluetoothDevice>.add(android.bluetooth.BluetoothDevice)"], "Fixed commit": "fb413e5f10a7b492d5f9be320e9d0193c89d2fcc", "Url": "https://api.github.com/repos/ChoryEduard/MeteoDroid", "Date": "2015-03-02T08:01:11Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inputArray.length) > 1) command2 = inputArray[1];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/887/buggy-version/src.futility.Game.java", "BodyUseAPI": [], "Fixed commit": "c37190048a0577f74acc71ed40a1433d297fa9ab", "Url": "https://api.github.com/repos/llevieux/futility", "Date": "2015-12-19T06:52:06Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inputArray.length) > 0) command1 = inputArray[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/887/buggy-version/src.futility.Game.java", "BodyUseAPI": [], "Fixed commit": "c37190048a0577f74acc71ed40a1433d297fa9ab", "Url": "https://api.github.com/repos/llevieux/futility", "Date": "2015-12-19T06:52:06Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fr.xephi.authme.settings.Settings.noTeleport)) { if (((fr.xephi.authme.settings.Settings.isTeleportToSpawnEnabled) && (!(fr.xephi.authme.settings.Settings.isForceSpawnLocOnJoinEnabled))) && (Settings.getForcedWorlds.contains(player.getWorld().getName()))) { if ((fr.xephi.authme.settings.Settings.isSaveQuitLocationEnabled) && ((auth.getQuitLocY()) != 0)) { packQuitLocation(); }else { teleportBackFromSpawn(); } }else if ((fr.xephi.authme.settings.Settings.isForceSpawnLocOnJoinEnabled) && (Settings.getForcedWorlds.contains(player.getWorld().getName()))) { teleportToSpawn(); }else if ((fr.xephi.authme.settings.Settings.isSaveQuitLocationEnabled) && ((auth.getQuitLocY()) != 0)) { packQuitLocation(); }else { teleportBackFromSpawn(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6297/buggy-version/src.main.java.fr.xephi.authme.process.login.ProcessSyncronousPlayerLogin.java", "BodyUseAPI": [], "Fixed commit": "b403374c2a27d24e0952a142550940ece59427ad", "Url": "https://api.github.com/repos/Xephi/AuthMeReloaded-Jenkins", "Date": "2014-06-13T16:17:23Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (copyToConsole) agent.Agent.logMessage((\"auction\" + (java.lang.Integer.toString(getAuctionID()))), (\"Submitting: \" + (bs.getBidString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2997/buggy-version/agent.Auction.java", "BodyUseAPI": [], "Fixed commit": "ee80f44a0c5146edb12015ea629bb351433f18b3", "Url": "https://api.github.com/repos/aelred/TheGreaterFool", "Date": "2014-12-05T15:21:15Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMatch) { isNeedProcessing = conditionPattern.matcher(logline.getSource()).matches(); }else { isNeedProcessing = conditionPattern.matcher(logline.getSource()).find(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5031/buggy-version/src.main.java.qla.modules.log.processors.AbstractLoglineProcessor.java", "BodyUseAPI": [], "Fixed commit": "0b987924d3b06efdbe33bfe505cf50a14bcb1428", "Url": "https://api.github.com/repos/atreidas1/QLA", "Date": "2016-10-30T12:02:03Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataIs) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1453/buggy-version/scribengin.storage.src.main.java.com.neverwinterdp.ssm.hdfs.HdfsSegmentReader.java", "BodyUseAPI": [], "Fixed commit": "b766b22c14b7188ea733ff82de6cef0d3bc1b18c", "Url": "https://api.github.com/repos/DemandCube/NeverwinterDP", "Date": "2016-01-14T09:20:37Z"},
{"Line": "=>678", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tenant.getId()) == (org.wso2.carbon.base.MultitenantConstants.SUPER_TENANT_ID)) { org.wso2.carbon.apimgt.migration.util.ResourceUtil.copyNewSequenceToExistingSequences(SequenceFilePath, \"_token_fault_\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2455/buggy-version/src.main.java.org.wso2.carbon.apimgt.migration.client.MigrateFrom18to19.java", "BodyUseAPI": [], "Fixed commit": "17c71a2a904bfaeee63021c32694916c16f4ffd5", "Url": "https://api.github.com/repos/madusankapremaratne/wso2-api-migration-client", "Date": "2015-05-25T08:26:53Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.breezejs.query.EntityQuery.getTakeCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((takeCount != null) && (takeCount == 0)) { crit.setFirstResult(java.lang.Integer.MAX_VALUE); }else { if (takeCount != null) crit.setMaxResults(takeCount); java.lang.Integer skipCount = entityQuery.getSkipCount(); if (skipCount != null) crit.setFirstResult(skipCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/9222/buggy-version/breezejs-hibernate.src.main.java.com.breezejs.hib.CriteriaBuilder.java", "BodyUseAPI": ["org.hibernate.Criteria.setMaxResults(java.lang.Integer)"], "Fixed commit": "30d41701e9c203b9181c35b5d1d81f810d3bd51e", "Url": "https://api.github.com/repos/Breeze/breeze.server.java", "Date": "2015-02-17T18:14:39Z"},
{"Line": "=>1144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((typerefInfoClass != (RestAnnotations.NULL_TYPEREF_INFO.class)) && ((com.linkedin.data.schema.DataSchemaUtil.classToPrimitiveDataSchema(keyType)) == null)) { com.linkedin.data.template.Custom.initializeCustomClass(keyType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/820/buggy-version/restli-server.src.main.java.com.linkedin.restli.internal.server.model.RestLiAnnotationReader.java", "BodyUseAPI": ["com.linkedin.data.template.Custom.initializeCustomClass(java.lang.Class<?>)"], "Fixed commit": "96c00c07f86dedf5b933bfbf8cf3499a0480c122", "Url": "https://api.github.com/repos/linkedin/rest.li", "Date": "2015-05-08T21:50:22Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((misses) == 0) { if ((hits) == 0) { return java.lang.Double.NaN; }else { return java.lang.Double.POSITIVE_INFINITY; } }else { return (((double) (hits)) / (misses)) * (com.hazelcast.monitor.impl.NearCacheStatsImpl.PERCENTAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4348/buggy-version/hazelcast.src.main.java.com.hazelcast.monitor.impl.NearCacheStatsImpl.java", "BodyUseAPI": [], "Fixed commit": "7ab1db9edc8409f599bf01054636a1643e3cf2d3", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2015-05-26T13:39:40Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.camera.PreferenceGroup.findPreference(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (isFrontCamera && (pvSt != null)) { com.android.camera.CameraSettings.removePreference(group, pvSt.getKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/85/buggy-version/src.com.android.camera.CameraSettings.java", "BodyUseAPI": ["com.android.camera.ListPreference.getKey()", "com.android.camera.CameraSettings.removePreference(com.android.camera.PreferenceGroup,pvSt.getKey())"], "Fixed commit": "7ebfc2ee043db90b3cd9d51df083a4aab5dce955", "Url": "https://api.github.com/repos/SeniorLimpio/android_packages_apps_Camera2", "Date": "2014-01-04T21:06:34Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.AccountDAO.login(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (account != null) { if ((type != null) && (type.equals(\"3\"))) { out.print(gson.toJson(\"Success\")); session.setAttribute(\"account\", account); }else if ((type == null) && ((account.getRoleId()) == 4)) { out.print(gson.toJson(account.getProfileByUsername().getFullName())); session.setAttribute(\"account\", account); }else { out.print(gson.toJson(\"Wrong\")); } }else { out.print(gson.toJson(\"Wrong\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6642/buggy-version/trunk.ORS.src.controller.ApiController.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.setAttribute(java.lang.String,controller.Account)", "controller.Account.getProfileByUsername()", "controller.Account.getRoleId()", "java.io.PrintWriter.print(gson.toJson(account.getProfileByUsername().getFullName()))", "javax.servlet.http.HttpSession.setAttribute(java.lang.String,controller.Account)", "account.getProfileByUsername().getFullName()", "com.google.gson.Gson.toJson(account.getProfileByUsername().getFullName())"], "Fixed commit": "9ad6333131cd25961d1d8be96ba557b27b42e712", "Url": "https://api.github.com/repos/tienlx93/capstone-ors", "Date": "2015-06-17T06:22:22Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((phi) >= (clusterSequence.twopi)) phi -= clusterSequence.twopi;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3675/buggy-version/clusterSequence.java", "BodyUseAPI": [], "Fixed commit": "0bffe06381f35a9939ea83d068620117aec68d47", "Url": "https://api.github.com/repos/ivankp/n2jet_java", "Date": "2015-05-01T21:23:59Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getEndTime()) != null) { return sameDate && (this.getEndTime().equals(other.getEndTime())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3867/buggy-version/PinkPanther.src.common.Task.java", "BodyUseAPI": [], "Fixed commit": "b992c6f22ec89e343a8c23a75c60b51c545de078", "Url": "https://api.github.com/repos/cs2103aug2015-t10-1j/PinkPanther-To-do-List", "Date": "2015-11-09T10:54:12Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getStartTime()) != null) { return sameDate && (this.getStartTime().equals(other.getStartTime())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3867/buggy-version/PinkPanther.src.common.Task.java", "BodyUseAPI": [], "Fixed commit": "b992c6f22ec89e343a8c23a75c60b51c545de078", "Url": "https://api.github.com/repos/cs2103aug2015-t10-1j/PinkPanther-To-do-List", "Date": "2015-11-09T10:54:12Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.van_dijken.geistesblitz.engine.GameRound.getWinner()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (winner != null) { java.util.List<eu.van_dijken.geistesblitz.engine.Player> losers = round.getLosers(); winner.addToWonCards(round.getShownCard()); for (eu.van_dijken.geistesblitz.engine.Player loser : losers) { loser.giveCardTo(winner); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2382/buggy-version/game-engine.src.main.java.eu.van_dijken.geistesblitz.engine.GeistesBlitz.java", "BodyUseAPI": ["eu.van_dijken.geistesblitz.engine.Player.addToWonCards(round.getShownCard())", "eu.van_dijken.geistesblitz.engine.Player.giveCardTo(eu.van_dijken.geistesblitz.engine.Player)"], "Fixed commit": "167bb4ef3ee4ae865516c32a1858a21ebffb946b", "Url": "https://api.github.com/repos/sunsear/VlotteGeesten", "Date": "2014-11-03T11:06:27Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.fantasyfootballrankings.ClassFiles.ManageInput.tokenize(java.lang.String,char,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (td[i].split(\" \\\\(\")[0].contains(\"Note\")) { java.lang.String splitter = \"Note \"; if (td[i].split(\" \\\\(\")[0].contains(\"Notes\")) { splitter = \"Notes \"; } fName = td[i].split(\" \\\\(\")[0].split(splitter)[1].split(\" - \")[0]; java.lang.String[] nameSet = fName.split(\" \"); for (int j = 0; j < ((nameSet.length) - 1); j++) { name += (nameSet[j]) + \" \"; } name = name.substring(0, ((name.length()) - 1)); }else { name = td[i].split(\" \\\\(\")[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/305/buggy-version/FFR.src.com.example.fantasyfootballrankings.ClassFiles.ParseFiles.ParseYahoo.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "d68f15b81f3666f5439ce120b10236b2679f1e4a", "Url": "https://api.github.com/repos/jbailey2010/FFR", "Date": "2013-10-02T06:23:00Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (llist.isEmpty()) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/9207/buggy-version/src.ch.epfl.tkvs.transactionmanager.lockingunit.LockCompatibilityTable.java", "BodyUseAPI": [], "Fixed commit": "d319854b0c569fd78b53c91b17b8e864c8a824b3", "Url": "https://api.github.com/repos/philemonf/transactional-key-value-store-project", "Date": "2015-04-19T14:54:50Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (items.containsKey(item)) { quantity = (movie.getQuantity()) - (items.get(item).getQuantity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5661/buggy-version/src.ShoppingCart.java", "BodyUseAPI": ["items.get(item).getQuantity()", "java.util.HashMap<java.lang.String, Movies>.get(java.lang.String)"], "Fixed commit": "d4b03ed875970a8f60d5d13badf85e5ca5e3b3f3", "Url": "https://api.github.com/repos/Elvinh/fakeflix", "Date": "2017-10-14T05:10:00Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (elem instanceof craftoplugin.modules.waypoint.Waypoint) { elem.showTo(player, false); }else if (elem instanceof craftoplugin.modules.waypoint.WaypointConnection) { elem.showTo(player, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3315/buggy-version/src.craftoplugin.modules.waypoint.WaypointPath.java", "BodyUseAPI": ["craftoplugin.modules.waypoint.WaypointElement.showTo(org.bukkit.entity.Player,boolean)", "craftoplugin.modules.waypoint.WaypointElement.showTo(org.bukkit.entity.Player,boolean)"], "Fixed commit": "78cf1bd6e2adb470761a140fa23b1116dde3ccd8", "Url": "https://api.github.com/repos/Craftolution/CraftoPlugin", "Date": "2015-01-15T20:39:49Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GU.api.power.PowerNetObject.UtilPower.movePower(GU.api.power.PowerNetObject.DefaultPowerManager,GU.api.power.PowerNetAbstract.IPowerManager,int,EnumSimulationType.FORCED)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (returned) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3473/buggy-version/ASB2.common.GU.blocks.containers.BlockElectisCrystal.TileElectisCrystal.java", "BodyUseAPI": [], "Fixed commit": "4d7b0cbd9f6f8af8125187ff6bdec3a5dad9d895", "Url": "https://api.github.com/repos/ASB2/GearUtilities", "Date": "2014-05-10T21:35:36Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minute < 10) { tempMinute = \"0\" + tempMinute; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8099/buggy-version/2011_2012.Apr4Apr18Cycle.OpenComm_Sean.src.edu.cornell.opencomm.controller.ConferencePlannerController.java", "BodyUseAPI": [], "Fixed commit": "be9dcd262f5cab941d875128d2a2022833cf75a2", "Url": "https://api.github.com/repos/OpenComm/OpenComm-Group", "Date": "2012-05-07T06:03:50Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minute < 10) { tempMinute = \"0\" + tempMinute; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8099/buggy-version/2011_2012.Apr4Apr18Cycle.OpenComm_Sean.src.edu.cornell.opencomm.controller.ConferencePlannerController.java", "BodyUseAPI": [], "Fixed commit": "be9dcd262f5cab941d875128d2a2022833cf75a2", "Url": "https://api.github.com/repos/OpenComm/OpenComm-Group", "Date": "2012-05-07T06:03:50Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((file != null) && (options == null)) return org.apache.commons.io.FileUtils.readFileToString(file, \"UTF-8\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6326/buggy-version/VisualFxVoEditor.src.main.java.com.kyj.fx.voeditor.visual.util.FileUtil.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.readFileToString(java.io.File,java.lang.String)"], "Fixed commit": "81c8221ee36eac602b189050f522e0a02d8d9fcf", "Url": "https://api.github.com/repos/callakrsos/Gargoyle", "Date": "2016-10-05T09:21:33Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (options == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6326/buggy-version/VisualFxVoEditor.src.main.java.com.kyj.fx.voeditor.visual.util.FileUtil.java", "BodyUseAPI": [], "Fixed commit": "81c8221ee36eac602b189050f522e0a02d8d9fcf", "Url": "https://api.github.com/repos/callakrsos/Gargoyle", "Date": "2016-10-05T09:21:33Z"},
{"Line": "=>605", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Maud.model.target.animation.isRetargetedPose()) { Maud.model.target.animation.loadBindPose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8754/buggy-version/src.main.java.maud.model.LoadedCgm.java", "BodyUseAPI": [], "Fixed commit": "476dd265955203de1aa25de9580e78c7868513a2", "Url": "https://api.github.com/repos/stephengold/Maud", "Date": "2017-07-08T15:41:10Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.JsonObject.get(stringJsonElementEntry.getKey())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((image == null) || (android.text.TextUtils.isEmpty(image.getAsString()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5789/buggy-version/library.src.main.java.com.cube.storm.ui.lib.migration.LegacyImageViewProcessor.java", "BodyUseAPI": [], "Fixed commit": "4315f68f01402671d849b1eaf062fe1718dd1746", "Url": "https://api.github.com/repos/3sidedcube/Android-LightningUi", "Date": "2015-12-18T10:12:43Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_settingsView) == null) initSettingsView();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5759/buggy-version/src.com.autumncoding.stickman.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "60476382296ccf317a49bc773e708db62a6bbb92", "Url": "https://api.github.com/repos/Aspirisha/Stickman", "Date": "2015-03-15T18:26:23Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_gameView) == null) initGameView();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5759/buggy-version/src.com.autumncoding.stickman.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "60476382296ccf317a49bc773e708db62a6bbb92", "Url": "https://api.github.com/repos/Aspirisha/Stickman", "Date": "2015-03-15T18:26:23Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (text.matches(\"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])\")) { setValue(new org.joda.time.LocalDate(text)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4236/buggy-version/src.main.java.com.excilys.computerdb.controller.LocalDateEditor.java", "BodyUseAPI": ["com.excilys.computerdb.controller.LocalDateEditor.setValue(org.joda.time.LocalDate)"], "Fixed commit": "7fa137c30c07008033e3438030f394d831a3918c", "Url": "https://api.github.com/repos/LeonardMeyer/computerDb", "Date": "2014-03-14T09:26:40Z"},
{"Line": "=>598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (v.getStatus().equals(VillageStatus.StillUpgrading)) { v.upgradeVillageType(); v.updateStatus(VillageStatus.VillageReady); }else { v.updateStatus(VillageStatus.VillageReady); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5433/buggy-version/core.src.com.potatoes.cultivation.logic.GameMap.java", "BodyUseAPI": ["com.potatoes.cultivation.logic.Village.upgradeVillageType()", "com.potatoes.cultivation.logic.Village.updateStatus(VillageStatus.VillageReady)", "com.potatoes.cultivation.logic.Village.updateStatus(VillageStatus.VillageReady)"], "Fixed commit": "3102c9703f99cb48926d175dc939abc0a98987bf", "Url": "https://api.github.com/repos/wayneleeyk/cultivationProject", "Date": "2015-04-10T05:29:19Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(imageUrl.startsWith(\"http\"))) { imageUrl = com.psddev.dari.util.JspUtils.getAbsoluteUrl(request, imageUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2109/buggy-version/util.src.main.java.com.psddev.dari.util.JavaImageServlet.java", "BodyUseAPI": ["com.psddev.dari.util.JspUtils.getAbsoluteUrl(javax.servlet.http.HttpServletRequest,java.lang.String)"], "Fixed commit": "335344f0a9ec632857b53334cfb4d524a57f25cf", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2015-05-18T12:42:57Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_awsCredentials) == null) { connection = new org.skyscreamer.nevado.jms.NevadoTopicConnection(_sqsConnectorFactory.getInstance(_awsAccessKey, _awsSecretKey, _awsSQSEndpoint, _awsSNSEndpoint)); }else { connection = new org.skyscreamer.nevado.jms.NevadoTopicConnection(_sqsConnectorFactory.getInstance(_awsCredentials, _awsSQSEndpoint, _awsSNSEndpoint)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2132/buggy-version/nevado-jms.src.main.java.org.skyscreamer.nevado.jms.NevadoConnectionFactory.java", "BodyUseAPI": [], "Fixed commit": "131bf501902dca1088aa1a572cac91b79238df7c", "Url": "https://api.github.com/repos/keithsjohnson/nevado", "Date": "2015-09-18T21:59:48Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.swt.widgets.FileDialog.open()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (filePath != null) imageLoader.save(filePath, SWT.IMAGE_JPEG);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8443/buggy-version/PhotoEditorPage.java", "BodyUseAPI": ["org.eclipse.swt.graphics.ImageLoader.save(java.lang.String,SWT.IMAGE_JPEG)"], "Fixed commit": "fc8cf6b864754c5e91b9128684e81bc7ed7284f9", "Url": "https://api.github.com/repos/guanyilun/eManager", "Date": "2012-03-29T14:24:10Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.staartvin.statz.datamanager.DataPoolManager.getStoredQueries(me.staartvin.statz.datamanager.PlayerStat)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (((queries != null) & (stat != null)) && ((plugin.getLogsManager()) != null)) { plugin.getLogsManager().writeToLogFile(queries, stat); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8228/buggy-version/src.me.staartvin.statz.datamanager.DataPoolManager.java", "BodyUseAPI": ["me.staartvin.statz.Statz.getLogsManager()", "plugin.getLogsManager().writeToLogFile(java.util.List<me.staartvin.statz.database.datatype.Query>,me.staartvin.statz.datamanager.PlayerStat)"], "Fixed commit": "bf667f83014e2a81eb84991a7f8ebc82a83f5f6c", "Url": "https://api.github.com/repos/Staartvin/Statz", "Date": "2016-08-08T08:59:36Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rowBuilders) != null) { for (org.eyeseetea.malariacare.presentation.factory.monitor.MonitorRowBuilder rowBuilder : rowBuilders) { rowBuilder.addSurvey(survey); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4059/buggy-version/app.src.main.java.org.eyeseetea.malariacare.presentation.factory.monitor.MonitorTableBuilder.java", "BodyUseAPI": [], "Fixed commit": "34b439a49b1dfde51e44648ca593edd8d149a10d", "Url": "https://api.github.com/repos/EyeSeeTea/pictureapp", "Date": "2017-05-18T09:33:49Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.impetus.kundera.metadata.EntityMetadata.Column.getField()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((((((f.getType().isPrimitive()) || (f.getType().equals(java.lang.String.class))) || (f.getType().equals(java.lang.Integer.class))) || (f.getType().equals(java.lang.Long.class))) || (f.getType().equals(java.lang.Short.class))) || (f.getType().equals(java.lang.Float.class))) || (f.getType().equals(java.lang.Double.class))) { java.lang.Object val = com.impetus.kundera.property.PropertyAccessorHelper.getObject(obj, column.getField()); dBObj.put(column.getName(), val); }else { com.impetus.kundera.mongodb.DocumentObjectMapper.log.warn(((\"Field \" + (f.getName())) + \" is not a premitive, String or Wrapper object, and hence, won't be part of persistence\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5062/buggy-version/src.main.java.com.impetus.kundera.mongodb.DocumentObjectMapper.java", "BodyUseAPI": ["org.apache.commons.logging.Log.warn(java.lang.String)", "java.lang.reflect.Field.getName()"], "Fixed commit": "6d649fcc6bf6342a758570c661203380d0b9dad6", "Url": "https://api.github.com/repos/Impetus/Kundera", "Date": "2011-07-08T11:48:00Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends com.maohi.software.maohifx.client.extendedtab.ExtendedTab>.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (iRefreshButton != null) { this.refreshButton.setBackground(null); this.refreshButton.setBorder(null); this.refreshButton.setGraphic(new javafx.scene.image.ImageView(new javafx.scene.image.Image(iRefreshButton.toString(), false))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8221/buggy-version/maohifx.client.src.main.java.com.maohi.software.maohifx.client.extendedtab.ExtendedTab.java", "BodyUseAPI": ["javafx.scene.control.Button.setGraphic(javafx.scene.image.ImageView)", "java.net.URL.toString()"], "Fixed commit": "ac64474b35ebfe965354032b111d52494c05d6a3", "Url": "https://api.github.com/repos/Heifara/maohifx", "Date": "2015-12-09T03:23:19Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends com.maohi.software.maohifx.client.extendedtab.ExtendedTab>.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (iHomeUrl != null) { this.homeButton.setBackground(null); this.homeButton.setBorder(null); this.homeButton.setGraphic(new javafx.scene.image.ImageView(new javafx.scene.image.Image(iHomeUrl.toString(), false))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8221/buggy-version/maohifx.client.src.main.java.com.maohi.software.maohifx.client.extendedtab.ExtendedTab.java", "BodyUseAPI": ["java.net.URL.toString()", "javafx.scene.control.Button.setGraphic(javafx.scene.image.ImageView)"], "Fixed commit": "ac64474b35ebfe965354032b111d52494c05d6a3", "Url": "https://api.github.com/repos/Heifara/maohifx", "Date": "2015-12-09T03:23:19Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.contrader.sprint3.service.VehicleService.findByBrandAndModelAndFuelAndVersionAndCapacity(it.contrader.sprint3.model.VehicleEntity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (veicolo == null) { model.addAttribute(\"msg\", \"Veicolo non presente\"); return \"menuUser\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8184/buggy-version/src.main.java.it.contrader.sprint3.controller.VehicleController.java", "BodyUseAPI": [], "Fixed commit": "1b6d5345898b8e0f86e8750f37dfb6d538e6159c", "Url": "https://api.github.com/repos/SabatinoContrader/ContraderSpringBoot", "Date": "2017-12-20T20:20:35Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isActive()) { epollInReady(); }else { closeOnRead(pipeline()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8848/buggy-version/transport-native-epoll.src.main.java.io.netty.channel.epoll.EpollSocketChannel.java", "BodyUseAPI": [], "Fixed commit": "eb143d6d6ecddb27aab4047531520225ee36abee", "Url": "https://api.github.com/repos/netty/netty", "Date": "2014-02-19T10:57:41Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ignoreMalformed.value()) { return; }else { throw new java.lang.IllegalArgumentException(((\"[scaled_float] only supports finite values, but got [\" + doubleValue) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4450/buggy-version/core.src.main.java.org.elasticsearch.index.mapper.ScaledFloatFieldMapper.java", "BodyUseAPI": [], "Fixed commit": "45b14a29771bfe4682d829a045f06d9c296420a8", "Url": "https://api.github.com/repos/elastic/elasticsearch", "Date": "2017-07-31T14:14:30Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["admit.getPatient().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (relationNameattr != null) { mapRelationName.put(admit.getId(), relationNameattr.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/145/buggy-version/omod.src.main.java.org.openmrs.module.ipdui.page.controller.PatientsAdmissionPageController.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.String>.put(admit.getId(),relationNameattr.getValue())", "org.openmrs.PersonAttribute.getValue()"], "Fixed commit": "0191c9b952590627fbe2e4fb4842a5d7ff86eed4", "Url": "https://api.github.com/repos/bespokeinteractive/ipdapp", "Date": "2016-07-18T09:21:12Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.JELLY_BEAN)) { rootView.getViewTreeObserver().removeGlobalOnLayoutListener(mOnGlobalLayoutListener); }else { rootView.getViewTreeObserver().removeOnGlobalLayoutListener(mOnGlobalLayoutListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6311/buggy-version/emoji.src.main.java.com.vanniktech.emoji.EmojiPopup.java", "BodyUseAPI": [], "Fixed commit": "f14e91e1fe7adc6b82314518f8eb9d473ca6e3d1", "Url": "https://api.github.com/repos/GreenSkinMonster/hipda", "Date": "2016-04-26T06:46:20Z"},
{"Line": "=>1311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"\" + type).equals(\"*\")) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4472/buggy-version/libsrc.ffdec_lib.src.com.jpexs.decompiler.flash.abc.avm2.parser.script.AVM2SourceGenerator.java", "BodyUseAPI": [], "Fixed commit": "9cc4fd5a52eff588d6f24aff195ecf97c36cafda", "Url": "https://api.github.com/repos/jindrapetrik/jpexs-decompiler", "Date": "2014-11-23T11:00:42Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.ilms49898723.fluigi.processor.parameter.Parameters.getMaxDeviceHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((y + ((component.getHeight()) / 2)) + (parameters.getComponentSpacing())) >= deviceHeight) { y = ((deviceHeight - 1) - ((component.getHeight()) / 2)) - (parameters.getComponentSpacing()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/890/buggy-version/src.main.java.com.github.ilms49898723.fluigi.device.component.point.Point2DUtil.java", "BodyUseAPI": ["com.github.ilms49898723.fluigi.device.component.BaseComponent.getHeight()", "com.github.ilms49898723.fluigi.processor.parameter.Parameters.getComponentSpacing()"], "Fixed commit": "9dd1f18f0429db0e2f184df97dc6c1d941c907cf", "Url": "https://api.github.com/repos/ilms49898723/MINTCompiler", "Date": "2017-10-23T13:06:08Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.customProjectName) == null) { this.customProjectName = build.getParent().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5115/buggy-version/src.main.java.jenkinsci.plugins.influxdb.renderer.ProjectNameRenderer.java", "BodyUseAPI": [], "Fixed commit": "15dbb126d902c6082214fe14eadbba7800ea081d", "Url": "https://api.github.com/repos/jrjohnson87/influxdb-plugin", "Date": "2017-11-29T16:17:16Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unibz.krdb.obda.model.CQIE.getBody()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (body.isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6121/buggy-version/reformulation-core.src.main.java.it.unibz.krdb.obda.owlrefplatform.core.basicoperations.CQCUtilities.java", "BodyUseAPI": [], "Fixed commit": "2ca5cdc1eaf13ab765044d02a44db5ff08276fd4", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2014-09-26T17:07:45Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2239/buggy-version/src.main.java.me.doubledutch.lazyjson.LazyElement.java", "BodyUseAPI": [], "Fixed commit": "6f048bf1e59f7d0a0e51bacda980ffece0ac2186", "Url": "https://api.github.com/repos/doubledutch/LazyJSON", "Date": "2017-05-26T20:00:11Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { remove(key); return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2239/buggy-version/src.main.java.me.doubledutch.lazyjson.LazyObject.java", "BodyUseAPI": [], "Fixed commit": "6f048bf1e59f7d0a0e51bacda980ffece0ac2186", "Url": "https://api.github.com/repos/doubledutch/LazyJSON", "Date": "2017-05-26T20:00:11Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cmd.equals(\"RefusedWaiting\")) refusedWaiting(response);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3270/buggy-version/FrozenWarsJava.src.Server.SmartFoxServer.java", "BodyUseAPI": [], "Fixed commit": "730c56acd7057cfbc7fed01d9a18356595b0a52b", "Url": "https://api.github.com/repos/fga150/FrozenWarsIS", "Date": "2013-03-07T19:35:06Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javabean.Lobby.getTable(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((table.getNumberOfPlayer()) == 5) request.setAttribute(\"exitFull\", \"true\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4895/buggy-version/Source.src.servlet.Controller.java", "BodyUseAPI": [], "Fixed commit": "0f69b3221e48e81c6c36dd2f80b9409b35f1ffc6", "Url": "https://api.github.com/repos/Sylphide/ProjetInfo", "Date": "2013-01-15T14:55:11Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javabean.Lobby.getTable(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((table.getNumberOfPlayer()) == 4) { java.nio.CharBuffer buffer = java.nio.CharBuffer.wrap(((\"CreateTable;\" + (currentTable)) + \";\")); try { connection.getWsOutbound().writeTextMessage(buffer); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4895/buggy-version/Source.src.socket.ControllerWebSocket.java", "BodyUseAPI": [], "Fixed commit": "0f69b3221e48e81c6c36dd2f80b9409b35f1ffc6", "Url": "https://api.github.com/repos/Sylphide/ProjetInfo", "Date": "2013-01-15T14:55:11Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.byteshaft.silentrecord.services.RecordService.isRecording()) { com.byteshaft.silentrecord.notification.LollipopNotification.hideNotification(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5663/buggy-version/app.src.main.java.com.byteshaft.silentrecord.services.RecordService.java", "BodyUseAPI": [], "Fixed commit": "7334e9ba07f4241f9c676d9c59e8e972021626ff", "Url": "https://api.github.com/repos/imranhakeem/silent-record", "Date": "2015-07-08T18:48:56Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (mergeFrom != null) { result.putAll(mergeFrom); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3655/buggy-version/src.main.java.io.citrine.jpif.obj.merge.MergeStrategy.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.putAll(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "51a30ed384db42cfdc233b38c770b4073964d2cc", "Url": "https://api.github.com/repos/CitrineInformatics/jpif", "Date": "2017-08-02T17:05:51Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (mergeInto != null) { result.putAll(mergeInto); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3655/buggy-version/src.main.java.io.citrine.jpif.obj.merge.MergeStrategy.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.putAll(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "51a30ed384db42cfdc233b38c770b4073964d2cc", "Url": "https://api.github.com/repos/CitrineInformatics/jpif", "Date": "2017-08-02T17:05:51Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (timeLimit <= 0) { throw new java.lang.IllegalArgumentException(\"Invalid time limit. Must be greater than zero.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2205/buggy-version/src.main.org.deidentifier.arx.algorithm.LIGHTNINGAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "890975597b45a3c27442016c3b9acd2c18ef5cda", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-06-29T14:18:43Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gameState.inGame) { drawHUD(g2d); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3016/buggy-version/src.Screens.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "5ad8ff2dc6979f8980c5e28fbb449f2567b360e4", "Url": "https://api.github.com/repos/TheJKFever/ThinkTank", "Date": "2014-11-30T23:00:29Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.method.worksurge.WebsiteConnector.WebsiteDataParser.getHrefValue(org.jsoup.select.Elements)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tempList.size()) > 0) { java.lang.String temp = \"\"; temp = dataParser.getHrefValue(jobPagination).get(0).toString(); try { maxPage = java.lang.Integer.parseInt(temp.substring(((temp.length()) - 1))); } catch (java.lang.NumberFormatException e) { maxPage = 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3089/buggy-version/WorkSurge.app.src.main.java.com.example.method.worksurge.WebsiteConnector.WebsiteConnector.java", "BodyUseAPI": [], "Fixed commit": "e33618f4d9c66d4d12d79f1fe34cf8c5fedceafa", "Url": "https://api.github.com/repos/Favna/Project-KB-50.10", "Date": "2016-01-20T18:31:19Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.stream.Stream<T>.anyMatch(java.util.function.Predicate<? super T>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hasNullObj) { throw exceptionSupplier.get(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8016/buggy-version/src.main.java.com.github.liaochong.converter.core.BeansConvertStrategy.java", "BodyUseAPI": [], "Fixed commit": "000c3fcd6d0e46b49fc536129cda9d25a90e802f", "Url": "https://api.github.com/repos/liaochong/spring-boot-starter-converter", "Date": "2017-12-04T01:09:26Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((escapedString.endsWith(\"~1\")) || (escapedString.endsWith(\"~2\"))) { }else if ((escapedString.startsWith(\"^\")) && (escapedString.endsWith(\"$\"))) { }else if (escapedString.startsWith(\"^\")) { }else if (escapedString.endsWith(\"$\")) { }else { for (java.lang.String searchField : mapForFacetQueries.keySet()) { mapForFacetQueries.put(searchField, (((searchField + \":*\") + (escapedString)) + \"*\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6470/buggy-version/src.main.java.sub.fwb.parse.tokens.Term.java", "BodyUseAPI": ["sub.fwb.parse.tokens.Term.startsWith(java.lang.String)", "sub.fwb.parse.tokens.Term.endsWith(java.lang.String)", "sub.fwb.parse.tokens.Term.endsWith(java.lang.String)", "sub.fwb.parse.tokens.Term.startsWith(java.lang.String)"], "Fixed commit": "7887f4030d135ebaf48b013561abd153e19c4ecb", "Url": "https://api.github.com/repos/subugoe/fwb-solr-mods", "Date": "2016-12-12T14:15:58Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getPackage()) != null) { return c.getPackage().getName(); }else return c.getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8575/buggy-version/src.util.trace.Tracer.java", "BodyUseAPI": ["java.lang.Package.getName()", "java.lang.Class.getPackage()", "java.lang.Class.getName()"], "Fixed commit": "f756e14e9afe55848e03b0c8b3ddd061975829cd", "Url": "https://api.github.com/repos/pdewan/util", "Date": "2017-02-08T19:50:38Z"},
{"Line": "=>794", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.startsWith(\"PROTRACTOR \", 7)) { }else if (line.startsWith(\"CSG_\", 7)) { if (line.startsWith(\"UNION\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(org.nschmidt.csg.CSG.UNION, line, parent))); }else if (line.startsWith(\"DIFFERENCE\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(org.nschmidt.csg.CSG.DIFFERENCE, line, parent))); }else if (line.startsWith(\"INTERSECTION\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(org.nschmidt.csg.CSG.INTERSECTION, line, parent))); }else if (line.startsWith(\"CUBOID\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(org.nschmidt.csg.CSG.CUBOID, line, parent))); }else if (line.startsWith(\"ELLIPSOID\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(org.nschmidt.csg.CSG.ELLIPSOID, line, parent))); }else if (line.startsWith(\"QUAD\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(org.nschmidt.csg.CSG.QUAD, line, parent))); }else if (line.startsWith(\"CYLINDER\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(org.nschmidt.csg.CSG.CYLINDER, line, parent))); }else if (line.startsWith(\"CONE\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(org.nschmidt.csg.CSG.CONE, line, parent))); }else if (line.startsWith(\"CIRCLE\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(org.nschmidt.csg.CSG.CIRCLE, line, parent))); }else if (line.startsWith(\"COMPILE\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(org.nschmidt.csg.CSG.COMPILE, line, parent))); }else if (line.startsWith(\"QUALITY\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(org.nschmidt.csg.CSG.QUALITY, line, parent))); }else if (line.startsWith(\"EPSILON\", 11)) { result.remove(0); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(new org.nschmidt.ldparteditor.data.GDataCSG(org.nschmidt.csg.CSG.EPSILON, line, parent))); } }else if (((line.startsWith(\"PNG\", 7)) && (depth == 0)) && ((data_segments.length) >= 12)) { try { org.nschmidt.ldparteditor.data.Vertex offset = new org.nschmidt.ldparteditor.data.Vertex(new java.math.BigDecimal(data_segments[3]), new java.math.BigDecimal(data_segments[4]), new java.math.BigDecimal(data_segments[5])); java.math.BigDecimal a1 = new java.math.BigDecimal(data_segments[6]); java.math.BigDecimal a2 = new java.math.BigDecimal(data_segments[7]); java.math.BigDecimal a3 = new java.math.BigDecimal(data_segments[8]); org.nschmidt.ldparteditor.data.Vertex scale = new org.nschmidt.ldparteditor.data.Vertex(new java.math.BigDecimal(data_segments[9]), new java.math.BigDecimal(data_segments[10]), java.math.BigDecimal.ONE); java.lang.StringBuilder sb = new java.lang.StringBuilder(); for (int s = 11; s < ((data_segments.length) - 1); s++) { sb.append(data_segments[s]); sb.append(\" \"); } sb.append(data_segments[((data_segments.length) - 1)]); result.remove(0); final org.nschmidt.ldparteditor.data.GDataPNG gpng = new org.nschmidt.ldparteditor.data.GDataPNG(line, offset, a1, a2, a3, scale, sb.toString()); if (!errorCheckOnly) datFile.getVertexManager().setSelectedBgPicture(gpng); result.add(0, new org.nschmidt.ldparteditor.data.ParsingResult(gpng)); if (!errorCheckOnly) org.nschmidt.ldparteditor.text.DatParser.upatePngImages = true; } catch (java.lang.Exception ex) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3647/buggy-version/src.org.nschmidt.ldparteditor.text.DatParser.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String,int)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.ParsingResult>.add(int,org.nschmidt.ldparteditor.data.ParsingResult)", "java.lang.String.startsWith(java.lang.String,int)"], "Fixed commit": "201b9abb071d705a422902534436c1adc11106cd", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-04-15T14:26:07Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((classInfo.split(seedu.address.commons.util.timetable.TimetableParserUtil.SPLIT_LEFT_SQAURE_BRACKET).length) != 2) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6202/buggy-version/src.main.java.seedu.address.commons.util.timetable.TimetableParserUtil.java", "BodyUseAPI": [], "Fixed commit": "ce3b92774cdd9ef85db7a28a3022bbe18695185f", "Url": "https://api.github.com/repos/CS2103AUG2017-W09-B1/main", "Date": "2017-11-04T04:09:31Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pathInfo.endsWith(\"/\")) { resource.append('/'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3257/buggy-version/gateway.platforms.servlet.src.main.java.io.apiman.gateway.platforms.servlet.GatewayServlet.java", "BodyUseAPI": [], "Fixed commit": "9f5205733e29c2b630b48cded9ad6e0558446d66", "Url": "https://api.github.com/repos/EricWittmann/apiman", "Date": "2015-04-09T18:06:54Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chosenTextLength == 0) { java.lang.String text = content.substring(0, length); int index = text.lastIndexOf(' '); if (index > (-1)) { text = text.substring(0, index); } return text; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8426/buggy-version/src.main.java.com.sangupta.jerry.util.HtmlUtils.java", "BodyUseAPI": [], "Fixed commit": "22ccb9d13bfd185f6c0a4d63ad389ef977706da0", "Url": "https://api.github.com/repos/sangupta/jerry", "Date": "2012-08-17T07:37:36Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.matches(\".*\\\\r\\\\n\")) { releaseTextOnCurrLine = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2877/buggy-version/src.ninja.mbedded.ninjaterm.util.streamedText.StreamFilter.java", "BodyUseAPI": [], "Fixed commit": "128cceba538d774e95d99604de50545c5ffae5ae", "Url": "https://api.github.com/repos/mbedded-ninja/NinjaTerm", "Date": "2016-09-29T17:17:16Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (whatToMutate == (plm.core.model.lesson.Exercise.StudentOrCorrection.STUDENT)) { if ((plm.core.model.Game.getProgrammingLanguage()) == (plm.core.model.Game.SCALA)) throw new plm.core.PLMCompilerException(Game.i18n.tr((\"Your entity failed to start. Did you forgot to put your code within a method?\\n\\n\" + ((((\"This problem often arises when the exercise expects you to put all the code within a \\n\" + \"method e.g. run(), but you put some statements (e.g. forward()) outside of any method.\\n\\n\") + \"The easiest solution to sort it out is to copy all your code (Ctrl-A Ctrl-C), use the \\n\") + \"\\'Exercise/Revert\\' menu to reset the template, and paste (Ctrl-V) your code within the\\n\") + \"provided method.\")))); else throw new plm.core.PLMCompilerException(Game.i18n.tr(\"Your entity failed to start. Your constructor seems to be broken, but I have no clue.\")); }else { throw new java.lang.RuntimeException(((((\"Cannot find an entity of name \" + (className(newClassName))) + \" or \") + newClassName) + \". Broken lesson.\"), e2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4025/buggy-version/src.plm.core.lang.JVMCompiledLang.java", "BodyUseAPI": [], "Fixed commit": "ea36ba8161beffb38fc57a407412ecf06693b0e1", "Url": "https://api.github.com/repos/oster/PLM", "Date": "2014-09-30T14:42:32Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(destination.startsWith(\"#\"))) && (!(content.containsKey(destination)))) { channels.addElement(destination); list = new javax.swing.DefaultListModel(); content.put(destination, list); }else { list = content.get(destination); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5247/buggy-version/src.ReceivedHandler.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, javax.swing.DefaultListModel>.get(java.lang.String)", "javax.swing.DefaultListModel.addElement(java.lang.String)", "java.util.HashMap<java.lang.String, javax.swing.DefaultListModel>.put(java.lang.String,javax.swing.DefaultListModel)"], "Fixed commit": "841887ba70c6990e82d91427649f1e729d2d0c86", "Url": "https://api.github.com/repos/callumacrae/JavaIRCClient", "Date": "2013-11-13T23:03:03Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sentencePair.toString().split(CLIRUtils.BitextSeparator)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sentences.length) < 2) { reporter.incrCounter(ivory.lsh.bitext.FilterSentencePairs.Sentences.ignored, 1); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7921/buggy-version/src.java.main.ivory.lsh.bitext.FilterSentencePairs.java", "BodyUseAPI": [], "Fixed commit": "7e9ea4574d1d06605031d59a0c6f7178c9adf2ad", "Url": "https://api.github.com/repos/ferhanture/Ivory", "Date": "2012-09-05T22:04:46Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((countScrollableColumns()) == 0) { resetFixedColumns(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5038/buggy-version/openFaces.source.org.openfaces.renderkit.table.TableStructure.java", "BodyUseAPI": [], "Fixed commit": "c51d152ef57170718de8d294feb1454eb979a0ea", "Url": "https://api.github.com/repos/OpenFaces-org/OpenFaces", "Date": "2015-02-25T17:01:23Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.romaframework.aspect.persistence.QueryByFilterItem.getQueryByFilter()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(qbf.getProjections().isEmpty())) projections.put(newAlias, qbf.getProjections());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3996/buggy-version/src.org.romaframework.aspect.persistence.datanucleus.jdo.JPQLQueryEngine.java", "BodyUseAPI": ["org.romaframework.aspect.persistence.QueryByFilter.getProjections()", "java.util.Map<java.lang.String, java.util.List<org.romaframework.aspect.persistence.QueryByFilterProjection>>.put(java.lang.String,qbf.getProjections())"], "Fixed commit": "110f657d9b3276d29f1562bfc41c735835027b54", "Url": "https://api.github.com/repos/romaframework/persistence-datanucleus", "Date": "2012-04-11T15:31:08Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dmgTaken) > 0) { (dmgTaken)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6228/buggy-version/src.GameplayElements.Ship.java", "BodyUseAPI": [], "Fixed commit": "507e138f8ddb3df599fea8461dd4b9072af0bb22", "Url": "https://api.github.com/repos/smorchi076/Asteria", "Date": "2017-05-21T02:10:01Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((missedCount) == 0) { android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.odintsov.game.FinishActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3711/buggy-version/app.src.main.java.com.odintsov.game.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7aa497ba21bf03443fd1ef8ff437db141d8e1562", "Url": "https://api.github.com/repos/sanyok7734/Game", "Date": "2016-04-11T17:19:58Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNPCs) == null) { mNPCs = new java.util.HashMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/113/buggy-version/AdventureFriends.app.src.main.java.com.makalaster.adventurefriends.dm.dmFragments.module.ModuleHolder.java", "BodyUseAPI": [], "Fixed commit": "2926ecd324148ff06a599b373ce0bdfa4afe4238", "Url": "https://api.github.com/repos/Makalaster/AdventureFriends", "Date": "2017-05-21T20:30:14Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNotes) == null) { mNotes = new java.util.HashMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/113/buggy-version/AdventureFriends.app.src.main.java.com.makalaster.adventurefriends.dm.dmFragments.module.ModuleHolder.java", "BodyUseAPI": [], "Fixed commit": "2926ecd324148ff06a599b373ce0bdfa4afe4238", "Url": "https://api.github.com/repos/Makalaster/AdventureFriends", "Date": "2017-05-21T20:30:14Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (category.equals(models.NamedEntity.Category.LOCATION)) { return string.replaceAll(((ner.RegexMatcher.LOCATION_PANTUKOY) + \"\\\\s\"), \"\").trim(); }else if (category.equals(models.NamedEntity.Category.DATE)) { return string.replaceAll(((ner.RegexMatcher.DATE_PANTUKOY) + \"\\\\s\"), \"\").trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3814/buggy-version/src.models.NamedEntity.java", "BodyUseAPI": ["models.NamedEntity.Category.equals(models.NamedEntity.Category)"], "Fixed commit": "af0f1b8efbb47a6ece027ac7e1272bfbabe6691c", "Url": "https://api.github.com/repos/Lafor8/CSC714M-Projects", "Date": "2015-09-19T15:14:49Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.impetus.client.hbase.schemamanager.HBaseSchemaManager.admin.isTableDisabled(tableInfo.getTableName().getBytes())) { com.impetus.client.hbase.schemamanager.HBaseSchemaManager.admin.enableTable(tableInfo.getTableName().getBytes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6651/buggy-version/kundera-hbase.src.main.java.com.impetus.client.hbase.schemamanager.HBaseSchemaManager.java", "BodyUseAPI": ["com.impetus.kundera.configure.schema.TableInfo.getTableName()", "org.apache.hadoop.hbase.client.HBaseAdmin.enableTable(tableInfo.getTableName().getBytes())", "tableInfo.getTableName().getBytes()"], "Fixed commit": "431d809f585f5ab53ce8eef16d196a08e90c9577", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2013-02-13T15:36:51Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(accountNumberExists(inFrom))) || (!(accountNumberExists(inTo)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3564/buggy-version/src.lcx.DatabaseInterface.java", "BodyUseAPI": [], "Fixed commit": "1c4acb25e47a3febf4b5ccff1e4e886a006cb1f0", "Url": "https://api.github.com/repos/EstiaanJ/LCX-Server", "Date": "2016-07-12T10:20:15Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(new java.io.File(((lcx.DatabaseInterface.LCX_FEE_ACCOUNT_NUMBER) + \".csv\")).exists())) { createNewAccount(lcx.DatabaseInterface.LCX_FEE_ACCOUNT_NUMBER, \"LCX\", \"terella\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3564/buggy-version/src.lcx.DatabaseInterface.java", "BodyUseAPI": [], "Fixed commit": "1c4acb25e47a3febf4b5ccff1e4e886a006cb1f0", "Url": "https://api.github.com/repos/EstiaanJ/LCX-Server", "Date": "2016-07-12T10:20:15Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((previousActivePlay.getPeriod()) != (nextActivePlay.getPeriod())) { matchingPlayers = getMatchingPlayers(playersOnFloorCurrent, player); player.setPlayerID(matchingPlayers.get(0).getPlayerID()); player.setPlayerName(matchingPlayers.get(0).getPlayerName()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5640/buggy-version/CodeGenerator.src.codeGenerator.RosterSQLGenerator.java", "BodyUseAPI": [], "Fixed commit": "c97b66bda9f1b36b3da9bc43232bb2abcbf7a068", "Url": "https://api.github.com/repos/Respectable/PBPCompilerV2", "Date": "2013-08-22T00:54:32Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.abs(xbox.getRawAxis(1))) > 0.1) return (xbox.getRawAxis(1)) * (-1); else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2902/buggy-version/src.org.usfirst.frc.team2815.robot.OI.java", "BodyUseAPI": ["edu.wpi.first.wpilibj.Joystick.getRawAxis(int)"], "Fixed commit": "dadce89ea6224cd879fd4dd5cddc272395d1e978", "Url": "https://api.github.com/repos/DreherFRC2815/RecycleBot2015", "Date": "2015-01-14T19:29:08Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (module == null) { throw org.eclipse.cft.server.core.internal.CloudErrorUtil.toCoreException(org.eclipse.osgi.util.NLS.bind(Messages.CloudFoundryDebugProvider_NO_APPLICATION_FOUND, cloudServer.getServer().getId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5869/buggy-version/org.eclipse.cft.server.core.src.org.eclipse.cft.server.core.internal.debug.CloudFoundryDebugProvider.java", "BodyUseAPI": [], "Fixed commit": "c0848f3fc468799595595d6bb2265c7959bf9090", "Url": "https://api.github.com/repos/jgwest/cft", "Date": "2016-11-02T21:29:16Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((appModule == null) || ((appModule.getLocalModule()) == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5869/buggy-version/org.eclipse.cft.server.core.src.org.eclipse.cft.server.core.internal.debug.DebugProviderRegistry.java", "BodyUseAPI": [], "Fixed commit": "c0848f3fc468799595595d6bb2265c7959bf9090", "Url": "https://api.github.com/repos/jgwest/cft", "Date": "2016-11-02T21:29:16Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (line_values[0].equals(\"subscriber\")) { new_history = history.concat(\"1\"); }else { if ((history.charAt(((history.length()) - 1))) == '0') { new_history = history; }else { new_history = history.concat(\"0\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4887/buggy-version/sub-app.src.main.java.il.ac.technion.cs.sd.sub.app.SubscriberInitializerImpl.java", "BodyUseAPI": [], "Fixed commit": "cc874840f7866c60bc3d24bca2199aee0f0dfa7d", "Url": "https://api.github.com/repos/Nadav-Levintov/SD-HW3-sub", "Date": "2017-06-19T16:52:23Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (check(from)) avail.add(from);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4227/buggy-version/DreamHalma.src.cn.edu.tsinghua.ee.Dreamland.DreamHalma.model.State.java", "BodyUseAPI": ["java.util.HashSet<cn.edu.tsinghua.ee.Dreamland.DreamHalma.model.Chess>.add(cn.edu.tsinghua.ee.Dreamland.DreamHalma.model.Chess)"], "Fixed commit": "4e65ea6721c5ad67ed057c02a2be2cd7cfea8c20", "Url": "https://api.github.com/repos/Tsinghua-Dreamland/DreamHalma", "Date": "2013-12-19T04:40:14Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isIgnored(v, ignores))) { binding.put(v.index, (count++)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3242/buggy-version/modules.wycs.src.wycs.transforms.MacroExpansion.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.lang.Integer>.put(v.index,int)"], "Fixed commit": "9868fde883607c6dd5f86026bd02f46954e87f2f", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2015-08-06T10:40:43Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sum_scores_tpgt + sum_scores_fn) > 0) return sum_scores_tpgt / (sum_scores_tpgt + sum_scores_fn); else return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5189/buggy-version/src.main.java.it.cnr.isti.hpc.dexter.eval.metrics.RecallWeightedMetric.java", "BodyUseAPI": [], "Fixed commit": "ee8e10d552c4e3f742e932c5b70379ebfa55f731", "Url": "https://api.github.com/repos/diegoceccarelli/dexter-eval", "Date": "2015-01-22T15:45:45Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tp.size()) + (fn.size())) > 0) return java.lang.Math.sqrt((se / ((tp.size()) + (fn.size())))); else return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5189/buggy-version/src.main.java.it.cnr.isti.hpc.dexter.eval.metrics.RecallRmseMetric.java", "BodyUseAPI": ["java.util.List<it.cnr.isti.hpc.dexter.eval.AnnotatedSpot>.size()", "java.util.List<it.cnr.isti.hpc.dexter.eval.AnnotatedSpot>.size()", "java.lang.Math.sqrt((se / ((tp.size()) + (fn.size()))))"], "Fixed commit": "ee8e10d552c4e3f742e932c5b70379ebfa55f731", "Url": "https://api.github.com/repos/diegoceccarelli/dexter-eval", "Date": "2015-01-22T15:45:45Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (args[0].equalsIgnoreCase(\"off\")) { java.sql.PreparedStatement statement = com.superiornetworks.icarus.ICM_SqlHandler.getConnection().prepareStatement(\"UPDATE `players` SET `loginMessage` = NULL WHERE `playerName` = ?\"); statement.setString(1, sender.getName()); statement.executeUpdate(); sender.sendMessage(((org.bukkit.ChatColor.GREEN) + \"Success! Your login message is now set to its default state!\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6970/buggy-version/src.com.superiornetworks.icarus.commands.Command_setlogin.java", "BodyUseAPI": [], "Fixed commit": "3bf4b3323a2ab9de5fcfed47a65de7832385bca2", "Url": "https://api.github.com/repos/CJFreedom-Network/IcarusMod", "Date": "2015-06-10T23:34:18Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.trolltech.qt.gui.QApplication.instance()) == null) com.trolltech.qt.gui.QApplication.initialize(new java.lang.String[]{ });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1384/buggy-version/src.main.java.com.sitegraph.core.FileSystemThumbnailer.java", "BodyUseAPI": [], "Fixed commit": "b4154b9c930c5fdc635f2c0668a881315ce8b13a", "Url": "https://api.github.com/repos/shaikhmshariq/SiteGraphThumbnailer", "Date": "2011-12-15T18:01:47Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextAct instanceof jsprit.core.problem.solution.route.activity.End) { if (!(iFacts.getNewVehicle().isReturnToDepot())) { return ConstraintsStatus.FULFILLED; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3178/buggy-version/jsprit-core.src.main.java.jsprit.core.problem.constraint.TimeWindowConstraint.java", "BodyUseAPI": [], "Fixed commit": "7a42cef1567e0cd65b42a705e9862d8e08d283a7", "Url": "https://api.github.com/repos/jsprit/jsprit", "Date": "2014-06-11T09:31:00Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fieldType.equals(byte.class)) || (fieldType.equals(java.lang.Byte.class))) o = number.byteValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7042/buggy-version/src.ids.sardine.BatchExecutor.java", "BodyUseAPI": [], "Fixed commit": "e267e31db7f67529f6e5adcb5a1dbe4bec48c10b", "Url": "https://api.github.com/repos/sharklite/Sardine", "Date": "2017-04-13T02:27:02Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (o instanceof java.lang.Number) { java.lang.Number number = ((java.lang.Number) (o)); if ((fieldType.equals(int.class)) || (fieldType.equals(java.lang.Integer.class))) o = number.intValue(); else if ((fieldType.equals(long.class)) || (fieldType.equals(java.lang.Long.class))) o = number.longValue(); else if ((fieldType.equals(short.class)) || (fieldType.equals(java.lang.Short.class))) o = number.shortValue(); else if ((fieldType.equals(byte.class)) || (fieldType.equals(java.lang.Byte.class))) o = number.byteValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7042/buggy-version/src.ids.sardine.BatchExecutor.java", "BodyUseAPI": [], "Fixed commit": "e267e31db7f67529f6e5adcb5a1dbe4bec48c10b", "Url": "https://api.github.com/repos/sharklite/Sardine", "Date": "2017-04-13T02:27:02Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.Character.isDigit(symbol.charAt(((symbol.length()) - 3)))) { return new java.lang.StringBuilder(symbol).delete(((symbol.length()) - 4), ((symbol.length()) - 2)).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6212/buggy-version/base.src.main.java.com.barchart.feed.base.provider.Symbology.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.lang.String.length()", "java.lang.StringBuilder.delete(int,int)", "java.lang.String.length()"], "Fixed commit": "8ea2cb82e251f2da9f3439c6e3e6df07536877d7", "Url": "https://api.github.com/repos/barchart/barchart-feed", "Date": "2013-12-12T15:22:07Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.world.getPlayer()) != null) { float absDist = ((game.Player) (this.world.getPlayer())).getCenterPosition().minus(this.shape.getCenter()).mag2(); if (absDist <= 300000) { float xDist = (((game.Player) (this.world.getPlayer())).getCenterPosition().x) - (this.shape.getCenter().x); if (xDist > 0) { goalVelocity = new cs195n.Vec2f(600, 0); }else { goalVelocity = new cs195n.Vec2f((-600), 0); } } if (!(goalVelocity.equals(new cs195n.Vec2f(0, 0)))) { if (!(goalVelocity.equals(getVelocity()))) { applyImpulse(goalVelocity.minus(getVelocity()).smult(0.05F)); } } super.onTick(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8116/buggy-version/src.game.ArmadilloOfDarkness.java", "BodyUseAPI": ["((game.Player) (this.world.getPlayer())).getCenterPosition().minus(this.shape.getCenter())", "this.world.getPlayer()", "((game.Player) (this.world.getPlayer())).getCenterPosition().minus(this.shape.getCenter()).mag2()", "((game.Player) (this.world.getPlayer())).getCenterPosition()", "this.world.getPlayer()", "((game.Player) (this.world.getPlayer())).getCenterPosition()"], "Fixed commit": "bc406794153a43395635c032a38851382f88a4ba", "Url": "https://api.github.com/repos/iebaker/game-final-project", "Date": "2013-12-06T05:11:55Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((drain.getDrain()) != null) mapper.mapBackward(drain, source);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2651/buggy-version/app.src.main.java.com.exallium.AndroidForms.Form.java", "BodyUseAPI": ["com.exallium.AndroidForms.Form.Mapper<S, D>.mapBackward(D,S)"], "Fixed commit": "c2b6a10b2de619e497013676b7930294c780d49a", "Url": "https://api.github.com/repos/exallium/AndroidForms", "Date": "2015-04-27T16:55:47Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.maps.GoogleMap.getUiSettings()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (mapUiSettings != null) { mapUiSettings.setMapToolbarEnabled(true); if (com.example.yeelin.projects.betweenus.BuildConfig.DEBUG) { mapUiSettings.setZoomControlsEnabled(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1476/buggy-version/app.src.main.java.com.example.yeelin.projects.betweenus.fragment.BaseMapFragment.java", "BodyUseAPI": ["com.google.android.gms.maps.UiSettings.setMapToolbarEnabled(boolean)", "com.google.android.gms.maps.UiSettings.setZoomControlsEnabled(boolean)"], "Fixed commit": "d2fac24868419a2df74015be9bc5a87f4926e259", "Url": "https://api.github.com/repos/yeelin/betweenus", "Date": "2015-08-04T02:22:24Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.walkmod.javalang.ast.body.EnumDeclaration.getEntries()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (entries != null) { for (org.walkmod.javalang.ast.body.EnumConstantDeclaration ecd : entries) { table.pushSymbol(ecd.getName(), ReferenceType.ENUM_LITERAL, symbol.getType(), ecd); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6385/buggy-version/src.main.java.org.walkmod.javalang.compiler.actions.LoadEnumConstantLiteralsAction.java", "BodyUseAPI": [], "Fixed commit": "e9905fde6e8ceda4d98e468d9763727d972ce97b", "Url": "https://api.github.com/repos/rpau/javalang-compiler", "Date": "2015-06-18T08:12:28Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.drawMoveCount) >= (this.drawMoveLimit)) { return 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3290/buggy-version/backend.Checkers.java", "BodyUseAPI": [], "Fixed commit": "dde518944b1a13838b6ee9ead8560a9a019f967c", "Url": "https://api.github.com/repos/p-patil/Checkers", "Date": "2016-01-08T21:27:03Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(_allowMultipleMatches)) && ((_currToken) != null)) && ((_exposedContext) == null)) { if ((_currToken.isStructEnd()) && (_headContext.isStartHandled())) { return _currToken = null; }else if ((((_currToken.isScalarValue()) && (!(_headContext.isStartHandled()))) && (!(_includePath))) && ((_itemFilter) == (TokenFilter.INCLUDE_ALL))) { return _currToken = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/558/buggy-version/src.main.java.com.fasterxml.jackson.core.filter.FilteringParserDelegate.java", "BodyUseAPI": [], "Fixed commit": "fd32772bb402f6cc2ffea5f58c162f86a8aa81e3", "Url": "https://api.github.com/repos/LokeshN/jackson-core", "Date": "2016-03-20T11:58:25Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<javax.swing.text.Segment>.get(int)", "javax.swing.text.Utilities.getTabbedTextOffset(javax.swing.text.Segment,java.awt.FontMetrics,int,int,javax.swing.text.TabExpander,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (to < (seg.length())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/929/buggy-version/libsrc.jsyntaxpane.jsyntaxpane.src.main.java.jsyntaxpane.UniTools.java", "BodyUseAPI": [], "Fixed commit": "bda7aeba79a0279f58ff5b3dd4ee2c128aced994", "Url": "https://api.github.com/repos/jindrapetrik/jpexs-decompiler", "Date": "2014-11-23T07:54:56Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (separator > 0) { jvmVersion = jvmVersion.substring(0, separator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1292/buggy-version/core.samples.java.src.main.java.org.codehaus.cargo.sample.java.EmbeddedContainerClasspathResolver.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "676407555d22d74a859e277b9a66528abd1c39e9", "Url": "https://api.github.com/repos/codehaus-cargo/cargo", "Date": "2016-08-07T19:44:59Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jansible.model.database.DbApplyHistory.getServerName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(serverName)) { jenkinsParameter.setGroupName(jansibleFiler.getGroupName(dbApplyHistory.getEnvironmentName(), dbApplyHistory.getGroupName())); }else { jenkinsParameter.setGroupName(jansibleFiler.getServerStartYamlName(dbApplyHistory.getEnvironmentName(), dbApplyHistory.getGroupName(), serverName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7612/buggy-version/src.main.java.jansible.web.project.JenkinsBuildService.java", "BodyUseAPI": ["jansible.file.JansibleFiler.getServerStartYamlName(dbApplyHistory.getEnvironmentName(),dbApplyHistory.getGroupName(),java.lang.String)", "jansible.jenkins.JenkinsParameter.setGroupName(jansibleFiler.getServerStartYamlName(dbApplyHistory.getEnvironmentName(), dbApplyHistory.getGroupName(), serverName))"], "Fixed commit": "2753766c1d95de27c6fbe6a14645e9cc9804dcb3", "Url": "https://api.github.com/repos/gomesuit/jansible", "Date": "2015-11-26T10:33:05Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.praqma.clearcase.ucm.entities.Component.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (p != null) { number += p; }else { status.addToLog(logger.warning(((id) + \"Sequence number did not contain a valid number\"))); throw new java.io.IOException(\"Sequence number did not contain a valid number\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3117/buggy-version/src.main.java.net.praqma.hudson.notifier.RemoteDeliver.java", "BodyUseAPI": [], "Fixed commit": "669b92cd50d69fb6fcb58276416cc3e39f49b856", "Url": "https://api.github.com/repos/Praqma/pucm", "Date": "2011-03-23T15:31:29Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.mskcc.cbio.oncokb.util.CacheUtils.VUS.containsKey(entrezGeneId)) { return org.mskcc.cbio.oncokb.util.CacheUtils.VUS.get(entrezGeneId); }else { org.mskcc.cbio.oncokb.model.Gene gene = org.mskcc.cbio.oncokb.util.GeneUtils.getGeneByEntrezId(entrezGeneId); if (gene != null) { org.mskcc.cbio.oncokb.util.CacheUtils.synEvidences(); } return org.mskcc.cbio.oncokb.util.CacheUtils.VUS.get(entrezGeneId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4643/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.util.CacheUtils.java", "BodyUseAPI": ["org.mskcc.cbio.oncokb.util.GeneUtils.getGeneByEntrezId(java.lang.Integer)", "java.util.Map<java.lang.Integer, java.util.Set<org.mskcc.cbio.oncokb.model.Alteration>>.get(java.lang.Integer)", "java.util.Map<java.lang.Integer, java.util.Set<org.mskcc.cbio.oncokb.model.Alteration>>.get(java.lang.Integer)"], "Fixed commit": "47d75af371496a051437f8fc77cc40f79e09998a", "Url": "https://api.github.com/repos/JiaoJiao123/oncokb", "Date": "2017-03-13T19:21:04Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(wordValue))) { word.setType(Symbol.ident); word.setValue(wordValue); }else { word.setType(Symbol.endsym); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6975/buggy-version/src.compiler.lexer.Lexer.java", "BodyUseAPI": ["compiler.common.Word.setValue(java.lang.String)"], "Fixed commit": "8c1f5789ca5fc232876a93d02aeb354d2ae7e4d8", "Url": "https://api.github.com/repos/caipengbo/C0_Compiler", "Date": "2017-05-04T14:54:52Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (directionOut) vertex.addEdge(edgeClass, targetVertex); else targetVertex.addEdge(edgeClass, vertex);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7847/buggy-version/src.main.java.com.orientechnologies.orient.etl.transformer.OEdgeTransformer.java", "BodyUseAPI": [], "Fixed commit": "5da827a4f75c2a1f99718680c470209222d4a052", "Url": "https://api.github.com/repos/mmacfadden/orientdb", "Date": "2014-08-13T08:32:06Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (iConfiguration.containsField(\"direction\")) { final java.lang.String direction = iConfiguration.field(\"direction\"); if (\"out\".equalsIgnoreCase(direction)) directionOut = true; else if (\"in\".equalsIgnoreCase(direction)) directionOut = false; else throw new com.orientechnologies.orient.core.exception.OConfigurationException((\"Direction can be 'in' or 'out', but found: \" + direction)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7847/buggy-version/src.main.java.com.orientechnologies.orient.etl.transformer.OEdgeTransformer.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String)"], "Fixed commit": "5da827a4f75c2a1f99718680c470209222d4a052", "Url": "https://api.github.com/repos/mmacfadden/orientdb", "Date": "2014-08-13T08:32:06Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i == 1) && (\"java\".equals(identifier))) { modifiedIdentifier.append('_'); }else { if (javax.lang.model.SourceVersion.isKeyword(identifier)) { modifiedIdentifier.append('_'); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8970/buggy-version/src.main.java.jetbrick.template.resource.Resource.java", "BodyUseAPI": ["javax.lang.model.SourceVersion.isKeyword(java.lang.String)"], "Fixed commit": "3ad034ac5b3db9f7e6dfba5a753dde9a7d264bfe", "Url": "https://api.github.com/repos/subchen/jetbrick-template", "Date": "2014-02-12T12:37:14Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tdnext.ParserAPI.startingTime.isEmpty())) { tdnext.ParserAPI.formateTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5796/buggy-version/src.tdnext.ParserAPI.java", "BodyUseAPI": [], "Fixed commit": "1c38d045619a9a956dba233f1939492ccdeedaa7", "Url": "https://api.github.com/repos/cs2103aug2015-t16-2j/main", "Date": "2015-11-08T03:35:13Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (best == null) { best = new offset.sim.movePair(); best.move = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3403/buggy-version/src.offset.lessdumb.Player.java", "BodyUseAPI": [], "Fixed commit": "381b4a5bb935318608acc990bd4476e316c7d6dd", "Url": "https://api.github.com/repos/gauravahuja/Offset", "Date": "2014-10-01T15:43:54Z"},
{"Line": "=>679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(getFile(newPath).exists())) { super.move(oldPath, newPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8657/buggy-version/modules-provider.src.main.java.org.jahia.modules.external.modules.ModulesDataSource.java", "BodyUseAPI": ["org.jahia.modules.external.vfs.VFSDataSource.move(java.lang.String,java.lang.String)"], "Fixed commit": "ae8a5a2f1416440076816eedf987131f227c96eb", "Url": "https://api.github.com/repos/Jahia/external-provider", "Date": "2014-01-15T22:18:13Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((file.getParentFile().listFiles()) != null) { for (java.io.File f : file.getParentFile().listFiles()) { java.lang.String s = org.apache.commons.lang.StringUtils.substringAfterLast(org.apache.commons.lang.StringUtils.substringBeforeLast(f.getName(), \".\"), \"_\"); if ((!(org.apache.commons.lang.StringUtils.isEmpty(s))) && (!(langs.contains(s)))) { langs.add(s); changed = true; } } if (changed) { site.setLanguages(langs); session.save(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8657/buggy-version/modules-provider.src.main.java.org.jahia.modules.external.modules.ModulesDataSource.java", "BodyUseAPI": ["java.io.File.getParentFile()", "java.io.File.listFiles()"], "Fixed commit": "ae8a5a2f1416440076816eedf987131f227c96eb", "Url": "https://api.github.com/repos/Jahia/external-provider", "Date": "2014-01-15T22:18:13Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((Rpath.length()) > 0) && (!(Rpath.endsWith(java.io.File.separator)))) Rpath = (Rpath) + (java.io.File.separator);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1486/buggy-version/src.org.seqcode.deepseq.events.EventsConfig.java", "BodyUseAPI": [], "Fixed commit": "7b633fdc553b1f5d1849c44fb3896ab921ad16c8", "Url": "https://api.github.com/repos/seqcode/seqcode-core", "Date": "2016-11-25T01:56:15Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.philihp.weblabora.model.Board.findBuildingInstance(com.philihp.weblabora.model.BuildingEnum)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((building.getLocation()) == null) throw new com.philihp.weblabora.model.WeblaboraException(((\"Can't place a clergyman on \" + building) + \" because it hasn't been built yet.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7275/buggy-version/src.main.java.com.philihp.weblabora.model.CommandUse.java", "BodyUseAPI": [], "Fixed commit": "6803ceedd658e8028b3a6329bb1f7e6a66d9dea4", "Url": "https://api.github.com/repos/philihp/WebLabora", "Date": "2012-04-29T17:27:12Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (responseCode >= (org.apache.http.HttpStatus.SC_BAD_REQUEST)) { reader = new java.io.InputStreamReader(urlConnection.getErrorStream()); }else { reader = new java.io.InputStreamReader(urlConnection.getInputStream()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7198/buggy-version/crary.src.main.java.com.croquis.crary.restclient.CraryRestClientImplJavaNet.java", "BodyUseAPI": [], "Fixed commit": "070ea695c1ffc276fe0319c277bce469aef3e210", "Url": "https://api.github.com/repos/croquiscom/Crary-Android", "Date": "2015-06-17T08:16:34Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Game.player.getHealth()) < 0) { greenValue = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7531/buggy-version/src.display.HUD.java", "BodyUseAPI": [], "Fixed commit": "9b757375bb0b255e3e3be0e078d46bb0dcc5dbba", "Url": "https://api.github.com/repos/Team-New-Orleans/The-Undertaker", "Date": "2015-11-07T08:31:32Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dotcms.enterprise.LicenseUtil.processForm(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (error != null) { return com.dotcms.repackage.javax.ws.rs.core.Response.ok(com.liferay.portal.language.LanguageUtil.get(u, \"license-bad-id-explanation\"), MediaType.APPLICATION_JSON_TYPE).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/951/buggy-version/src.com.dotcms.rest.LicenseResource.java", "BodyUseAPI": [], "Fixed commit": "4b6dd8759ba7b5bba5a44a775855286d2fbc287e", "Url": "https://api.github.com/repos/dotCMS/core", "Date": "2014-09-17T21:38:53Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.sound.midi.ShortMessage.getChannel()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (chan == 9) { }else { if ((msg.getData2()) == 0) notes.remove(new com.sk89q.craftbook.util.Tuple3<java.lang.Integer, java.lang.Integer, java.lang.Integer>(chan, n, msg.getData2())); else notes.add(new com.sk89q.craftbook.util.Tuple3<java.lang.Integer, java.lang.Integer, java.lang.Integer>(chan, n, msg.getData2())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3907/buggy-version/circuits.src.main.java.com.sk89q.craftbook.jinglenote.MidiJingleSequencer.java", "BodyUseAPI": ["java.util.List<com.sk89q.craftbook.util.Tuple3<java.lang.Integer, java.lang.Integer, java.lang.Integer>>.add(com.sk89q.craftbook.util.Tuple3<java.lang.Integer, java.lang.Integer, java.lang.Integer>)", "java.util.List<com.sk89q.craftbook.util.Tuple3<java.lang.Integer, java.lang.Integer, java.lang.Integer>>.remove(com.sk89q.craftbook.util.Tuple3<java.lang.Integer, java.lang.Integer, java.lang.Integer>)"], "Fixed commit": "71b77e86713def23a23a66e70a6f244aaf108661", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2012-12-24T07:27:55Z"},
{"Line": "=>602", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (util.tableExists(classname, util.getDate())) util.SQLUpdate(classname, (((\"DELETE FROM \" + (util.getDate())) + \" WHERE Session=\") + currentsession));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2738/buggy-version/src.arm.editTimetable.java", "BodyUseAPI": ["arm.editTimetable.getDate()", "arm.editTimetable.SQLUpdate(java.lang.String,(((\"DELETE FROM \" + (util.getDate())) + \" WHERE Session=\") + currentsession))"], "Fixed commit": "522ebb529def86d4873a8554294916ed1580d58e", "Url": "https://api.github.com/repos/RahulSriram/ARM-attendance-manager", "Date": "2016-03-07T20:50:08Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m.find()) { java.lang.String s = m.group(0); date = date.replaceAll(s, ((((s.trim()) + \"/\") + (new main.CustomDate(new java.util.Date()).getYear())) + \" \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2663/buggy-version/src.Commands.Command.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)"], "Fixed commit": "41cd1ea57663dd55d6bf0d3864b90e28184250fb", "Url": "https://api.github.com/repos/cs2103aug2015-f10-4j/main", "Date": "2015-11-05T07:07:29Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key.down) { g.drawImage(ColorManager.pressed, 2, 2, null); }else { g.setColor(ColorManager.foreground); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8013/buggy-version/KeysPerSecond.src.me.roan.kps.KeyPanel.java", "BodyUseAPI": [], "Fixed commit": "6a4514a7caff5184139d35ca9be1294b5d1ec474", "Url": "https://api.github.com/repos/RoanH/KeysPerSecond", "Date": "2017-02-17T19:18:54Z"},
{"Line": "=>741", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((categoryArray[i]) != null) { if ((categoryArray[i].getId()) == (event.getCategoryID())) { java.lang.System.out.println((\"should select \" + i)); categoryComboBox.setSelectedIndex(i); java.lang.System.out.println((\"actually select \" + (categoryComboBox.getSelectedIndex()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4916/buggy-version/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.AddEventPanel.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "categoryArray[i].getId()", "javax.swing.JComboBox<edu.wpi.cs.wpisuitetng.modules.calendar.model.Category>.setSelectedIndex(int)"], "Fixed commit": "4b1237e45637e9bf74e0758e86ec2fceda72ee2d", "Url": "https://api.github.com/repos/Tommzy/wpi-suite", "Date": "2013-12-18T14:35:40Z"},
{"Line": "=>551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((categoryArray[i]) != null) { if ((categoryArray[i].getId()) == (commitment.getCategoryID())) { java.lang.System.out.println((\"should select \" + i)); categoryComboBox.setSelectedIndex(i); java.lang.System.out.println((\"actually select \" + (categoryComboBox.getSelectedIndex()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4916/buggy-version/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.AddCommitmentPanel.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "categoryArray[i].getId()", "javax.swing.JComboBox<edu.wpi.cs.wpisuitetng.modules.calendar.model.Category>.setSelectedIndex(int)"], "Fixed commit": "4b1237e45637e9bf74e0758e86ec2fceda72ee2d", "Url": "https://api.github.com/repos/Tommzy/wpi-suite", "Date": "2013-12-18T14:35:40Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mn.instructions.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (min instanceof org.objectweb.asm.tree.MethodInsnNode) { org.objectweb.asm.tree.MethodInsnNode mmin = ((org.objectweb.asm.tree.MethodInsnNode) (min)); name = mmin.name; desc = mmin.desc; }else if (min instanceof org.objectweb.asm.tree.InvokeDynamicInsnNode) { org.objectweb.asm.tree.InvokeDynamicInsnNode idmin = ((org.objectweb.asm.tree.InvokeDynamicInsnNode) (min)); name = idmin.name; desc = idmin.desc; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5119/buggy-version/quasar-core.src.main.java.co.paralleluniverse.fibers.instrument.InstrumentMethod.java", "BodyUseAPI": [], "Fixed commit": "006804c01a62160a61f735f65ae809ded0656225", "Url": "https://api.github.com/repos/puniverse/quasar", "Date": "2015-03-04T11:52:37Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == \"\u53ef\u7f16\u8f91\") id = 1; else if (s == \"\u5df2\u63d0\u4ea4\") id = 2; else if (s == \"\u4f7f\u7528\u4e2d\") id = 3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8706/buggy-version/pages.src.main.java.com.risk.auto.pages.FirstLevelList.java", "BodyUseAPI": [], "Fixed commit": "19a7fa324393ff2cd1256105f59c9c779d07ba67", "Url": "https://api.github.com/repos/zhengjiali/crawl-page", "Date": "2017-10-11T10:22:39Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.quinn.githubknife.ui.fragments.TreeFragment.PathCallback.getAbosolutePath(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((absPath != null) && ((absPath.isEmpty()) == false)) path = ((callback.getAbosolutePath(position)) + \"/\") + (((com.quinn.httpknife.github.TreeItem) (dataItems.get(position))).getPath()); else path = ((com.quinn.httpknife.github.TreeItem) (dataItems.get(position))).getPath();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6051/buggy-version/app.src.main.java.com.quinn.githubknife.ui.fragments.TreeFragment.java", "BodyUseAPI": [], "Fixed commit": "8711ddc9ec17ee367331f4c3e0f1c3a1a6d2120e", "Url": "https://api.github.com/repos/Leaking/WeGit", "Date": "2015-08-15T11:38:01Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["thor12022.hardcorewither.powerUps.PowerUpLightning.getAITarget()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (target != null) { double lightningXPos = (target.lastTickPosX) + ((4 * (thor12022.hardcorewither.powerUps.PowerUpLightning.random.nextGaussian())) * (thor12022.hardcorewither.powerUps.PowerUpLightning.lightningInaccuracy)); double lightningYPos = (target.lastTickPosX) + ((4 * (thor12022.hardcorewither.powerUps.PowerUpLightning.random.nextGaussian())) * (thor12022.hardcorewither.powerUps.PowerUpLightning.lightningInaccuracy)); double lightningZPos = (target.lastTickPosX) + ((4 * (thor12022.hardcorewither.powerUps.PowerUpLightning.random.nextGaussian())) * (thor12022.hardcorewither.powerUps.PowerUpLightning.lightningInaccuracy)); ownerWither.worldObj.addWeatherEffect(new net.minecraft.entity.effect.EntityLightningBolt(ownerWither.worldObj, lightningXPos, lightningYPos, lightningZPos)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1166/buggy-version/src.main.java.thor12022.hardcorewither.powerUps.PowerUpLightning.java", "BodyUseAPI": [], "Fixed commit": "a37929deab780926f18811c775862bf4ef875bc3", "Url": "https://api.github.com/repos/thor12022/HardcoreWither", "Date": "2015-06-24T11:57:54Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.strategicgains.restexpress.pipeline.MessageContext.getResponse()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(response.hasHeader(com.strategicgains.restexpress.pipeline.CONTENT_TYPE))) { java.lang.String contentType = ((context.getContentType()) == null) ? com.strategicgains.restexpress.ContentType.TEXT_PLAIN : context.getContentType(); context.getResponse().addHeader(com.strategicgains.restexpress.pipeline.CONTENT_TYPE, contentType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8314/buggy-version/src.java.com.strategicgains.restexpress.pipeline.DefaultRequestHandler.java", "BodyUseAPI": [], "Fixed commit": "c1ff1948f52f5d6481f470dc4ad8a103660e686d", "Url": "https://api.github.com/repos/RestExpress/RestExpress", "Date": "2011-06-03T21:57:43Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lex.errorLine) != (-1)) { java.lang.System.out.println((\"Syntaxfel p\u00e5 rad \" + (lex.errorLine))); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4388/buggy-version/S2medHybris.Main.java", "BodyUseAPI": ["java.io.PrintStream.println((\"Syntaxfel p\u00e5 rad \" + (lex.errorLine)))"], "Fixed commit": "9da94bb0548f29e6035b29a01f67d45eaa57597b", "Url": "https://api.github.com/repos/TeodorIsaacs/S2medHybris", "Date": "2016-11-18T09:43:49Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((level) == 0) syntaxFel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4388/buggy-version/S2medHybris.Parser.java", "BodyUseAPI": [], "Fixed commit": "9da94bb0548f29e6035b29a01f67d45eaa57597b", "Url": "https://api.github.com/repos/TeodorIsaacs/S2medHybris", "Date": "2016-11-18T09:43:49Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ui.getQueryState().getAql().getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(query.isEmpty())) { controller.validateQuery(query); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6600/buggy-version/annis-gui.src.main.java.annis.gui.controlpanel.CorpusListPanel.java", "BodyUseAPI": ["annis.gui.QueryController.validateQuery(java.lang.String)"], "Fixed commit": "a6f71c7bd048375fb8828662f25b583073a9974a", "Url": "https://api.github.com/repos/amir-zeldes/ANNIS", "Date": "2015-06-19T20:53:31Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mUrl) != null) { android.content.Intent i = new android.content.Intent(android.content.Intent.ACTION_VIEW); i.setData(android.net.Uri.parse(mUrl)); getContext().startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7939/buggy-version/library.src.com.laurencedawson.activetextview.ActiveTextView.java", "BodyUseAPI": [], "Fixed commit": "e2a6af7630e6e7c2514fda3a52876c9f37984709", "Url": "https://api.github.com/repos/laurencedawson/activetextview", "Date": "2012-11-29T19:28:15Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (url != null) { android.content.Intent i = new android.content.Intent(android.content.Intent.ACTION_VIEW); i.setData(android.net.Uri.parse(url)); startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7939/buggy-version/sample.src.com.laurencedawson.sample.SampleActivity.java", "BodyUseAPI": ["android.content.Intent.setData(android.net.Uri.parse(url))", "android.net.Uri.parse(java.lang.String)"], "Fixed commit": "e2a6af7630e6e7c2514fda3a52876c9f37984709", "Url": "https://api.github.com/repos/laurencedawson/activetextview", "Date": "2012-11-29T19:28:15Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.matchId) == (java.lang.Integer.parseInt(params[2]))) { int ok = java.lang.Integer.parseInt(mParams[1]); if (ok == 0) pool.execute(new net.NetConnection(this.server, inFromServer, ((((\"5;\" + (playerId)) + \";\") + (matchId)) + \"\\n\"))); else clearGame(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1549/buggy-version/src.control.MainScreenController.java", "BodyUseAPI": [], "Fixed commit": "92ee227d780a7bbc826f8752808fb9f76a89b198", "Url": "https://api.github.com/repos/totapo/redes_cliente", "Date": "2017-10-08T16:38:36Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fQuote) { sText = ('\"' + sText) + '\"'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1934/buggy-version/src.main.java.com.nearbyfyi.ner.NERResource.java", "BodyUseAPI": [], "Fixed commit": "0d7f6a865673749b77500bd4086de00abf6b2b83", "Url": "https://api.github.com/repos/NearbyFYI/text-entities", "Date": "2012-11-15T14:57:26Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sText == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1934/buggy-version/src.main.java.com.nearbyfyi.ner.NERResource.java", "BodyUseAPI": [], "Fixed commit": "0d7f6a865673749b77500bd4086de00abf6b2b83", "Url": "https://api.github.com/repos/NearbyFYI/text-entities", "Date": "2012-11-15T14:57:26Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((numD[cluster]) == 0) { int indx = ((int) ((java.lang.Math.random()) * N)); MX[cluster] = X[indx]; MY[cluster] = Y[indx]; java.lang.System.out.printf(\"Warning: no points assigned to cluster %d!\\n\", cluster); }else { MX[cluster] = (XTotal[cluster]) / (numD[cluster]); MY[cluster] = (YTotal[cluster]) / (numD[cluster]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4692/buggy-version/OpenMPIKMeans.src.com.yzong.dsf14.openMPIKMeans.euclidean.EuclideanSequential.java", "BodyUseAPI": ["java.io.PrintStream.printf(java.lang.String,int)"], "Fixed commit": "5bc57acbf6e17dab6f15a485101a5194c5d2cb8b", "Url": "https://api.github.com/repos/ymzong/dsf14", "Date": "2014-11-27T01:47:26Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.unikoblenz.stpr.ScoredArrayTrie.ScoredArrayTrie.getTopK(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (res == null) { de.renepickhardt.utils.IOHelper.log(\"prefix not in trie\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8715/buggy-version/src.main.java.de.renepickhardt.executables.Run.java", "BodyUseAPI": [], "Fixed commit": "ff2890034e2bb1cc46034150240df139efb0c9fc", "Url": "https://api.github.com/repos/renepickhardt/scored-topk-prefix-retrieval", "Date": "2013-05-14T15:25:13Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.stratos.autoscaler.context.AutoscalerContext.getInstance().getApplicationContext(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ApplicationContext.STATUS_DEPLOYED.equals(appContext.getStatus())) { java.lang.String msg = java.lang.String.format(\"Application is deployed : [application-id] %s. Please undeploy before deleting it.\", applicationId); throw new org.apache.stratos.autoscaler.exception.AutoScalerException(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1765/buggy-version/components.org.apache.stratos.autoscaler.src.main.java.org.apache.stratos.autoscaler.services.impl.AutoscalerServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "257be0e20256bf702be533ad5abeac7d80ef64ae", "Url": "https://api.github.com/repos/hsbhathiya/stratos", "Date": "2015-03-13T12:16:44Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.apache.stratos.autoscaler.registry.RegistryManager.getInstance().getApplication(applicationId)) == null) { java.lang.String msg = java.lang.String.format(\"Application not found : [application-id] %s\", applicationId); throw new java.lang.RuntimeException(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1765/buggy-version/components.org.apache.stratos.autoscaler.src.main.java.org.apache.stratos.autoscaler.services.impl.AutoscalerServiceImpl.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)"], "Fixed commit": "257be0e20256bf702be533ad5abeac7d80ef64ae", "Url": "https://api.github.com/repos/hsbhathiya/stratos", "Date": "2015-03-13T12:16:44Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.dynious.soundscool.handler.SoundHandler.sounds.contains(sound))) com.dynious.soundscool.handler.SoundHandler.sounds.add(sound);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4961/buggy-version/java.com.dynious.soundscool.handler.SoundHandler.java", "BodyUseAPI": ["java.util.ArrayList<com.dynious.soundscool.sound.Sound>.add(com.dynious.soundscool.sound.Sound)"], "Fixed commit": "4e06174c436df922751384194b887049afc1b402", "Url": "https://api.github.com/repos/zoonie/SoundsCool", "Date": "2016-02-07T17:50:14Z"},
{"Line": "=>743", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.quartz.JobDataMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (params == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2274/buggy-version/src.org.exist.security.internal.SecurityManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "af0460d269d2eb4cbd48f83510228230aba4e1e0", "Url": "https://api.github.com/repos/eXist-db/exist", "Date": "2014-09-03T12:07:32Z"},
{"Line": "=>797", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opendaylight.yangtools.yang.common.RpcResult<?>.getResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resultObj instanceof org.opendaylight.yangtools.yang.binding.DataObject) { final org.opendaylight.yangtools.yang.data.api.CompositeNode output = mappingService.toDataDom(((org.opendaylight.yangtools.yang.binding.DataObject) (resultObj))); return org.opendaylight.controller.sal.common.util.Rpcs.getRpcResult(true, output, java.util.Collections.<org.opendaylight.yangtools.yang.common.RpcError>emptySet()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1709/buggy-version/opendaylight.md-sal.sal-binding-broker.src.main.java.org.opendaylight.controller.sal.binding.impl.connect.dom.BindingIndependentConnector.java", "BodyUseAPI": [], "Fixed commit": "80887bb706a758b78cae70fcdb7531661139256c", "Url": "https://api.github.com/repos/opendaylight/controller", "Date": "2014-01-30T10:27:13Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (body.containsKey(\"results\")) { for (java.util.Map map : ((java.util.List<java.util.Map>) (body.get(\"results\")))) { results.add(new org.neo4j.jdbc.http.driver.Neo4jResult(map)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5693/buggy-version/neo4j-jdbc-http.src.main.java.org.neo4j.jdbc.http.driver.Neo4jResponse.java", "BodyUseAPI": [], "Fixed commit": "e0f339bf645613cc88bc5d45fc8ad0ecc748bca2", "Url": "https://api.github.com/repos/mvitz/neo4j-jdbc", "Date": "2016-06-10T09:25:07Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (molt.equals(\"\")) return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6453/buggy-version/Plotter.src.com.maths.ParseFunction.java", "BodyUseAPI": [], "Fixed commit": "2c1f10a7d07841d883229cd9c533a8ddf48d923d", "Url": "https://api.github.com/repos/JeffGillispie/ASU-SER216-PlotterProject", "Date": "2016-05-03T18:37:37Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((begin_index >= 0) && (end_index == (-1))) throw new java.lang.NumberFormatException(); else if ((end_index >= 0) && (begin_index == (-1))) throw new java.lang.NumberFormatException(); else if ((begin_index >= 0) && (end_index >= 0)) { return begin_index < end_index; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6453/buggy-version/Plotter.src.com.maths.ParseFunction.java", "BodyUseAPI": [], "Fixed commit": "2c1f10a7d07841d883229cd9c533a8ddf48d923d", "Url": "https://api.github.com/repos/JeffGillispie/ASU-SER216-PlotterProject", "Date": "2016-05-03T18:37:37Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.kpi.pzks.gui.modelview.NodeView.getUpperLeftCorner()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isXMinus || ((upperLeftCorner.y) < 0)) { if (isXMinus) { upperLeftCorner.x = 0; }else { upperLeftCorner.y = 0; } nodeView.setUpperLeftCorner(upperLeftCorner); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8673/buggy-version/ComputerSystemsSoftwareGui.src.main.java.edu.kpi.pzks.gui.ui.GraphPanel.java", "BodyUseAPI": ["edu.kpi.pzks.gui.modelview.NodeView.setUpperLeftCorner(java.awt.Point)"], "Fixed commit": "d025ec8f1d1b3bb0c4b7ce9e68ace0d837233062", "Url": "https://api.github.com/repos/SnoopInf/pzks", "Date": "2013-02-14T21:09:20Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerQuitEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (plugin.clock.contains(player.getName())) { plugin.clock.remove(player.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4861/buggy-version/src.main.java.me.dirolgaming.shub.OnQuitListener.java", "BodyUseAPI": ["plugin.clock.remove(player.getName())", "org.bukkit.entity.Player.getName()"], "Fixed commit": "1deda14f835882baea7e1c98120ac9a8c86efc70", "Url": "https://api.github.com/repos/DirolGaming/SHub-SafeHub", "Date": "2017-12-13T21:26:44Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerQuitEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (plugin.chat.contains(player.getName())) { plugin.chat.remove(player.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4861/buggy-version/src.main.java.me.dirolgaming.shub.OnQuitListener.java", "BodyUseAPI": ["plugin.chat.remove(player.getName())", "org.bukkit.entity.Player.getName()"], "Fixed commit": "1deda14f835882baea7e1c98120ac9a8c86efc70", "Url": "https://api.github.com/repos/DirolGaming/SHub-SafeHub", "Date": "2017-12-13T21:26:44Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sectionNumber) == 1) { deliveryAdapter.setDeliveryList(co.rapiddelivery.RDApplication.getDeliveryModels()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1316/buggy-version/app.src.main.java.co.rapiddelivery.src.TabActivity.java", "BodyUseAPI": [], "Fixed commit": "5548d8dabd64f67d92c8b9c8666c1489e00d992e", "Url": "https://api.github.com/repos/KunalBhavsar/SamosaDelivery", "Date": "2017-01-04T06:14:55Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sectionNumber) == 2) { pickUpAdapter.setPickUpModelList(co.rapiddelivery.RDApplication.getPickupSetModel().getPickupSetModels()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1316/buggy-version/app.src.main.java.co.rapiddelivery.src.TabActivity.java", "BodyUseAPI": [], "Fixed commit": "5548d8dabd64f67d92c8b9c8666c1489e00d992e", "Url": "https://api.github.com/repos/KunalBhavsar/SamosaDelivery", "Date": "2017-01-04T06:14:55Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.eclipse.core.runtime.Platform.getOS().equalsIgnoreCase(Platform.OS_WIN32)) { workspaceLocation = workspaceLocation.substring(1, workspaceLocation.length()); workspaceLocation = workspaceLocation.replace(\"/\", \"\\\\\"); outputPlatformRelativePath = outputAbsolutePath.replace(workspaceLocation, \"\"); outputPlatformRelativePath = outputPlatformRelativePath.replace(\"\\\\\", \"/\"); }else { outputPlatformRelativePath = outputAbsolutePath.replace((workspaceLocation + (org.eclipse.core.runtime.Path.SEPARATOR)), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/4698/buggy-version/launchers.fr.tpt.aadl.ramses.control.atl.launch.src.fr.tpt.aadl.ramses.control.atl.AadlToTargetSpecificAadl.java", "BodyUseAPI": [], "Fixed commit": "fb8b5ab4eff18636af87c51e663b9565338f8c84", "Url": "https://api.github.com/repos/ramses-project/ramses", "Date": "2014-07-10T15:06:14Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Gui.alarms.getThreadByID(alarmID).alarm.getInputHour()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hour != 12) { hour = hour - 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2765/buggy-version/DismissAlarm.java", "BodyUseAPI": [], "Fixed commit": "fb390da40a21dd52911ab03f38d1e9babe7f32f3", "Url": "https://api.github.com/repos/agsicat/SENG403-AlarmClock", "Date": "2017-04-09T18:54:51Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.as.controller.SimpleAttributeDefinition.resolveModelAttribute(org.jboss.as.controller.OperationContext,org.jboss.dmr.ModelNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (directBuffersModel.isDefined()) { direct = directBuffersModel.asBoolean(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3199/buggy-version/io.src.main.java.org.wildfly.extension.io.BufferPoolResourceDefinition.java", "BodyUseAPI": ["org.jboss.dmr.ModelNode.asBoolean()"], "Fixed commit": "a22a45cd4b30e6ade2df86d8a8e84ccef6c60a8d", "Url": "https://api.github.com/repos/jimma/wildfly", "Date": "2013-06-11T05:08:54Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((batch++) > 1000) { ps.executeBatch(); batch = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7227/buggy-version/OsmAndMapCreator.src.net.osmand.data.changeset.CalculateCountryForChangesets.java", "BodyUseAPI": [], "Fixed commit": "f7d88691349c4344ef70ed5e5cde7b234e2490c5", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-tools", "Date": "2016-01-13T13:26:05Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.osmand.map.OsmandRegions.getRegionData(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (reg.isRegionMapDownload()) { java.lang.System.out.println(((((((changesetId + \" \") + full) + \" \") + (reg.getLocaleName())) + \" \") + (map.get(reg)))); if ((map.get(reg)) == null) { throw new java.lang.UnsupportedOperationException((((\"Not found \" + changesetId) + \" \") + full)); } boolean small = true; java.util.List<net.osmand.map.WorldRegion> subs = reg.getSubregions(); if (subs != null) { for (net.osmand.map.WorldRegion sub : subs) { if (sub.isRegionMapDownload()) { small = false; break; } } } ps.setString(1, changesetId); ps.setInt(2, map.get(reg)); ps.setInt(3, (small ? 1 : 0)); ps.addBatch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7227/buggy-version/OsmAndMapCreator.src.net.osmand.data.changeset.CalculateCountryForChangesets.java", "BodyUseAPI": ["java.util.Map<net.osmand.map.WorldRegion, java.lang.Integer>.get(net.osmand.map.WorldRegion)", "java.io.PrintStream.println(((((((changesetId + \" \") + full) + \" \") + (reg.getLocaleName())) + \" \") + (map.get(reg))))", "java.util.Map<net.osmand.map.WorldRegion, java.lang.Integer>.get(net.osmand.map.WorldRegion)", "net.osmand.map.WorldRegion.getSubregions()", "java.util.Map<net.osmand.map.WorldRegion, java.lang.Integer>.get(net.osmand.map.WorldRegion)", "net.osmand.map.WorldRegion.getLocaleName()", "java.sql.PreparedStatement.setInt(int,map.get(reg))"], "Fixed commit": "f7d88691349c4344ef70ed5e5cde7b234e2490c5", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-tools", "Date": "2016-01-13T13:26:05Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.badlogic.gdx.scenes.scene2d.ui.List<edu.chalmers.sankoss.core.Room>.getSelected()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (room == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5452/buggy-version/desktop.src.main.java.edu.chalmers.sankoss.java.renderers.LobbyRenderer.java", "BodyUseAPI": [], "Fixed commit": "9ea5cc7c49bb20a2c1f7896306264e6de960eb97", "Url": "https://api.github.com/repos/Bipshark/TDA367", "Date": "2014-05-18T18:54:17Z"},
{"Line": "=>536", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((body.getSourceType()) == (DocumentDTO.SourceTypeEnum.INLINE)) { apiProvider.addDocumentationContent(docid, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8902/buggy-version/components.apimgt.org.wso2.carbon.apimgt.rest.api.publisher.src.main.java.org.wso2.carbon.apimgt.rest.api.publisher.impl.ApisApiServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "a5aa7d953197f7272a1b62becda441ffa10c0a2e", "Url": "https://api.github.com/repos/tharikaGitHub/carbon-apimgt", "Date": "2017-07-23T17:28:30Z"},
{"Line": "=>1148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLocalCloud) { return !(org.cloudifysource.dsl.utils.ServiceUtils.isPortFree(OpenspacesConstants.DEFAULT_LOCALCLOUD_LUS_PORT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/41/buggy-version/CLI.src.main.java.org.cloudifysource.shell.installer.LocalhostGridAgentBootstrapper.java", "BodyUseAPI": [], "Fixed commit": "60288aeb37c72885185204504a105477d2e08409", "Url": "https://api.github.com/repos/CloudifySource/cloudify", "Date": "2013-07-18T09:32:29Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MonsterQuest.GameMap.canEnderTitle(((int) ((x) - velocity)), ((int) (y)))) return new MonsterQuest.Location(((x) - velocity), y); else return new MonsterQuest.Location(x, y);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5170/buggy-version/src.MonsterQuest.Location.java", "BodyUseAPI": [], "Fixed commit": "5a084da450bca9b7fda416bfdec7f7c1d2349506", "Url": "https://api.github.com/repos/ZRazor/MMORPG", "Date": "2014-03-06T16:31:21Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MonsterQuest.GameMap.canEnderTitle(((int) (x)), ((int) ((y) + velocity)))) return new MonsterQuest.Location(x, ((y) + velocity)); else return new MonsterQuest.Location(x, y);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5170/buggy-version/src.MonsterQuest.Location.java", "BodyUseAPI": [], "Fixed commit": "5a084da450bca9b7fda416bfdec7f7c1d2349506", "Url": "https://api.github.com/repos/ZRazor/MMORPG", "Date": "2014-03-06T16:31:21Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MonsterQuest.GameMap.canEnderTitle(((int) (x)), ((int) ((y) - velocity)))) return new MonsterQuest.Location(x, ((y) - velocity)); else return new MonsterQuest.Location(x, y);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5170/buggy-version/src.MonsterQuest.Location.java", "BodyUseAPI": [], "Fixed commit": "5a084da450bca9b7fda416bfdec7f7c1d2349506", "Url": "https://api.github.com/repos/ZRazor/MMORPG", "Date": "2014-03-06T16:31:21Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MonsterQuest.GameMap.canEnderTitle(((int) ((x) + velocity)), ((int) (y)))) return new MonsterQuest.Location(((x) + velocity), y); else return new MonsterQuest.Location(x, y);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5170/buggy-version/src.MonsterQuest.Location.java", "BodyUseAPI": [], "Fixed commit": "5a084da450bca9b7fda416bfdec7f7c1d2349506", "Url": "https://api.github.com/repos/ZRazor/MMORPG", "Date": "2014-03-06T16:31:21Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { if (getIntent().getBooleanExtra(org.ohmage.app.MainActivity.EXTRA_VIEW_STREAMS, false)) { setFragment(getString(R.string.streams)); }else { setFragment(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/9012/buggy-version/ohmage.src.main.java.org.ohmage.app.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "632241f6745165cf6b6b563d011ef26f58edff7b", "Url": "https://api.github.com/repos/ohmage/android", "Date": "2014-06-23T20:50:17Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.gender) == null) { return Gender.NULL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5202/buggy-version/src.main.java.com.github.irobson.jgenderize.model.NameGender.java", "BodyUseAPI": [], "Fixed commit": "3095f1a4f8a52a11881fca2f9fa883e691147f53", "Url": "https://api.github.com/repos/irobson/jgenderize", "Date": "2015-02-11T02:18:42Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getColumnIndex(MediaStore.Images.Media.DATA)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (column_index == (-1)) { android.util.Log.e(com.catchingnow.sharetodelete.MyUtil.PACKAGE_NAME, \"column_index out of index!\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8449/buggy-version/app.src.main.java.com.catchingnow.sharetodelete.MyUtil.java", "BodyUseAPI": [], "Fixed commit": "2a71bc056fcec3ac2991daad67a2a2cd5b6bbcf5", "Url": "https://api.github.com/repos/heruoxin/share-to-delete", "Date": "2015-03-30T15:16:37Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resourceName.endsWith(\".class\")) { resourceName = resourceName.substring(0, ((resourceName.length()) - (\".class\".length()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2302/buggy-version/src.main.java.org.phidias.compile.BundleJavaManager.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "ff8f8053bd38263166521691e057938ee94b2d31", "Url": "https://api.github.com/repos/rotty3000/phidias", "Date": "2015-12-04T17:50:41Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (c != null) c.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/8199/buggy-version/web-applications.datastores.Servlet-Search.src.main.java.org.se.lab.ui.ControllerServlet.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "38d512a73ce6776630d20fd9dc0513ee543a27c1", "Url": "https://api.github.com/repos/teiniker/teiniker-lectures-securedesign", "Date": "2017-03-08T14:35:32Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value != 0.0) { values[index] = value; indices[index] = counter.clone(); index++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5116/buggy-version/solvers.java.src.main.java.com.analog.lyric.util.misc.Misc.java", "BodyUseAPI": [], "Fixed commit": "85c6e1a1cb2cc1fd2ab63adb5bc609247c6c9c5f", "Url": "https://api.github.com/repos/analog-garage/dimple", "Date": "2015-09-22T16:40:39Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index < size) { indices = java.util.Arrays.copyOf(indices, index); values = java.util.Arrays.copyOf(values, index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/5116/buggy-version/solvers.java.src.main.java.com.analog.lyric.util.misc.Misc.java", "BodyUseAPI": ["java.util.Arrays.copyOf(int[][],int)", "java.util.Arrays.copyOf(double[],int)"], "Fixed commit": "85c6e1a1cb2cc1fd2ab63adb5bc609247c6c9c5f", "Url": "https://api.github.com/repos/analog-garage/dimple", "Date": "2015-09-22T16:40:39Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((contentView.getMeasuredWidth()) == 0) { contentView.measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1676/buggy-version/commonlibrary.src.main.java.com.example.commonlibrary.cusotomview.CustomPopWindow.java", "BodyUseAPI": ["android.view.View.measure(View.MeasureSpec.UNSPECIFIED,View.MeasureSpec.UNSPECIFIED)"], "Fixed commit": "69876a7f07ff9cc8d1f4e9e8e4bcd978c25bb5ee", "Url": "https://api.github.com/repos/HelloChenJinJun/NewFastFrame", "Date": "2017-12-03T02:45:36Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (input != null) { input.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/1544/buggy-version/annis-service.src.main.java.annis.dao.SpringAnnisDao.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "3a45a3181ca691d98ec4a1efc16186863725587b", "Url": "https://api.github.com/repos/korpling/ANNIS", "Date": "2014-03-03T14:44:03Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.AuthorEntry.AUTHOR))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (authors == null) { authors = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3764/buggy-version/app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": [], "Fixed commit": "878116808551e95fed6105e51bb610c044da5e7b", "Url": "https://api.github.com/repos/eamontaaffe/Alexandria", "Date": "2015-09-02T01:26:14Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((foodID) != (-1)) TFC.Food.ItemFoodTFC.FoodList[foodID] = this.itemID;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6294/buggy-version/TFC_Shared.src.TFC.Food.ItemFoodTFC.java", "BodyUseAPI": [], "Fixed commit": "fa1f46fec7aa688878dba038d4b2dfd94c92076e", "Url": "https://api.github.com/repos/Deadrik/TFCraft", "Date": "2014-02-11T23:27:23Z"},
{"Line": "=>721", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/3954/buggy-version/object.src.main.java.com.orientechnologies.orient.object.enhancement.OObjectProxyMethodHandler.java", "BodyUseAPI": [], "Fixed commit": "69b62c92baccdfdd79a06d402611864248139a72", "Url": "https://api.github.com/repos/nagarajasr/orientdb", "Date": "2015-05-08T16:54:30Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((all.length) < 7) { java.lang.System.out.println(line); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/7220/buggy-version/utilities.twitter-preprocess.src.edu.columbia.watson.twitter.DuplicateCharacterRemover.java", "BodyUseAPI": [], "Fixed commit": "2a2b1910d417cd8b4aa3669d9cfa2689022b38d0", "Url": "https://api.github.com/repos/qiao-y/twitter-semantic-search", "Date": "2013-05-09T01:48:56Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (returnsValue) { result.append(\"}\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/2661/buggy-version/src.main.java.com.lemondo.commons.db.ProcMetaData.java", "BodyUseAPI": [], "Fixed commit": "180f94e5415683b05c4e72691e86a9d988629bb4", "Url": "https://api.github.com/repos/kandelakig/crud4j", "Date": "2012-11-28T19:50:55Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(type.equals(\"nugget\"))) { registerDiscovery((type + \"Quicksilver\"), \"discover.cavestokingdoms.quicksilver\"); registerDiscovery((type + \"Quicksilver\"), \"discover.cavestokingdoms.harvestlevel6\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/6925/buggy-version/src.main.java.talonos.cavestokingdoms.client.pages.orediscovery.OreDiscoveryRegistry.java", "BodyUseAPI": ["talonos.cavestokingdoms.client.pages.orediscovery.OreDiscoveryRegistry.registerDiscovery(java.lang.String,java.lang.String)", "talonos.cavestokingdoms.client.pages.orediscovery.OreDiscoveryRegistry.registerDiscovery(java.lang.String,java.lang.String)"], "Fixed commit": "f75f06db210aebeb7a891ed42c35cf2d0298cbe0", "Url": "https://api.github.com/repos/CannibalVox/CavesToKingdoms", "Date": "2015-08-21T22:03:34Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.equals(null)) { l = new javax.swing.JLabel(\"\"); }else { l = new javax.swing.JLabel(value.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V63/91/buggy-version/ChatProject.src.gui.MainWindow.java", "BodyUseAPI": ["gui.Message.toString()"], "Fixed commit": "c3a6c3f8137525795692fa3b9a56d9c8135bcef2", "Url": "https://api.github.com/repos/FHast/NetworkSystemsProject", "Date": "2017-04-11T09:11:30Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tasks[i]) != null) { tasks[i].stop(); tasks[i].cancel(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2282/buggy-version/app.src.main.java.com.catherine.webservices.fragments.P03_Downloader.java", "BodyUseAPI": ["tasks[i].stop()", "tasks[i].cancel(boolean)"], "Fixed commit": "6bfabc8c52c95f1e850d08c0269b3948a2edd24b", "Url": "https://api.github.com/repos/Catherine22/WebServices", "Date": "2017-09-19T07:05:35Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (accessories == null) { sb.append(\",,,,\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1164/buggy-version/shivas-protocol.src.main.java.org.shivas.protocol.client.formatters.ItemGameMessageFormatter.java", "BodyUseAPI": [], "Fixed commit": "ae6b754b62c44db59d45a1493a0ac6338e310778", "Url": "https://api.github.com/repos/Blackrush/Shivas", "Date": "2012-04-16T09:55:32Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (accessories == null) { sb.append(\",,,,\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1164/buggy-version/shivas-protocol.src.main.java.org.shivas.protocol.client.formatters.ItemGameMessageFormatter.java", "BodyUseAPI": [], "Fixed commit": "ae6b754b62c44db59d45a1493a0ac6338e310778", "Url": "https://api.github.com/repos/Blackrush/Shivas", "Date": "2012-04-16T09:55:32Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((option) == (br.cefetmg.games.minigames.util.GameOption.SURVIVAL)) { br.cefetmg.games.screens.RankScreen ranque; super.game.setScreen((ranque = new br.cefetmg.games.screens.RankScreen(super.game, this))); ranque.setPoints(sequencer.getGameNumber()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3105/buggy-version/core.src.br.cefetmg.games.screens.PlayingGamesScreen.java", "BodyUseAPI": [], "Fixed commit": "ffd2c092abccb5c3325ec3a8f9acbe787640de0f", "Url": "https://api.github.com/repos/chenriquealvarenga/cefet-games-brushmyteethplz", "Date": "2016-10-28T14:16:25Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((grid[row][col].possibles[(val - 1)]) != 0) { grid[row][col].possibles[(val - 1)] = 0; (grid[row][col].size)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1868/buggy-version/src.SimpleSolver.java", "BodyUseAPI": [], "Fixed commit": "1c150d6359b9df06d4fd39e3b0d7c0943182a100", "Url": "https://api.github.com/repos/alamana/sudoku", "Date": "2013-04-08T17:04:27Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action != (Action.CHECK)) { view.info(org.basex.gui.view.editor.OK, true, false); error((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8373/buggy-version/src.main.java.org.basex.gui.view.editor.EditorArea.java", "BodyUseAPI": [], "Fixed commit": "a1d87bdfd966395d0ea1fd557e50ff54e4b97276", "Url": "https://api.github.com/repos/LukasK/basex", "Date": "2012-10-24T16:04:11Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gmail.walles.johan.cleverdrawer.Launchable.doGetTrueName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (trueName != null) { return trueName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7506/buggy-version/app.src.main.java.com.gmail.walles.johan.cleverdrawer.Launchable.java", "BodyUseAPI": [], "Fixed commit": "18e5afd3c77d2cb827b2502fc985649f75733a85", "Url": "https://api.github.com/repos/walles/cleverdrawer", "Date": "2017-12-20T19:43:13Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((latestCollageBitmap) != null) latestCollageBitmap.recycle();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5901/buggy-version/app.src.main.java.ru.dimsuz.collagecreator.CollageActivity.java", "BodyUseAPI": [], "Fixed commit": "b6ba12fe655626e0cbf942014ca16702dbc1bc7a", "Url": "https://api.github.com/repos/dimsuz/collagecreator", "Date": "2015-06-05T09:47:52Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kj.scotlyard.game.model.GameState.getLastMove(kj.scotlyard.game.model.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (lastMove == null) { throw new java.lang.IllegalStateException(\"Player has not moved yet.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3119/buggy-version/ScotlYard.src.kj.scotlyard.game.rules.TheMovePolicy.java", "BodyUseAPI": [], "Fixed commit": "c209d8339c27784ceb8274ff6979b0bdfc5e2999", "Url": "https://api.github.com/repos/jakob190590/ScotlYard", "Date": "2012-04-21T18:50:13Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GameModel.Map.BoardSpace.topTile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((thisTile.terrainType()) == (GameModel.Map.Tile.TerrainType.VOLCANO)) returnMe.addAll(getLegalPlacementsAtHexTile(tht, thisTile));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4468/buggy-version/src.GameModel.Map.GameMap.java", "BodyUseAPI": ["GameModel.Map.GameMap.getLegalPlacementsAtHexTile(GameModel.Map.TriHexTile,GameModel.Map.Tile.HexTile)", "java.util.ArrayList<GameControl.Placement>.addAll(java.util.ArrayList<GameControl.Placement>)"], "Fixed commit": "a92329786c7fc93c8866ef3162d8711480cc0cc2", "Url": "https://api.github.com/repos/TeamDee/TotoRoyale", "Date": "2017-03-20T22:35:03Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Objects.requireNonNull(model.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (num instanceof java.lang.Byte) { result.append(java.lang.Byte.toString(num.byteValue())); }else if (num instanceof java.lang.Short) { result.append(java.lang.Short.toString(num.shortValue())); }else if (num instanceof java.lang.Integer) { result.append(java.lang.Integer.toString(num.intValue())); }else if (num instanceof java.lang.Long) { result.append(java.lang.Long.toString(num.longValue())).append(\"l\"); }else if (num instanceof java.lang.Float) { result.append(java.lang.Float.toString(num.floatValue())).append(\"f\"); }else if (num instanceof java.lang.Double) { result.append(java.lang.Double.toString(num.doubleValue())).append(\"d\"); }else if (num instanceof java.math.BigInteger) { result.append(\"new \"); if (!(gen.getDependencyMgr().isLoaded(java.math.BigDecimal.class.getName()))) { result.append(\"java.math.\"); } result.append(\"BigInteger(\\\"\").append(((java.math.BigInteger) (num)).toString()).append(\"\\\")\"); }else if (num instanceof java.math.BigDecimal) { result.append(\"new \"); if (!(gen.getDependencyMgr().isLoaded(java.math.BigDecimal.class.getName()))) { result.append(\"java.math.\"); } result.append(\"BigDecimal(\\\"\").append(((java.math.BigDecimal) (num)).toPlainString()).append(\"\\\")\"); }else { throw new java.lang.UnsupportedOperationException(((\"Unknown Number implementation '\" + (num.getClass().getName())) + \"'.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1440/buggy-version/codegen.src.main.java.com.speedment.fika.codegen.internal.java.value.NumberValueView.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.Short.toString(short)", "java.lang.Number.longValue()", "java.lang.Class<? extends java.lang.Number>.getName()", "java.lang.Number.shortValue()", "java.lang.Number.byteValue()", "java.lang.Number.doubleValue()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.Integer.toString(int)", "java.lang.Number.intValue()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.Number.getClass()", "java.lang.Float.toString(float)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.Long.toString(long)", "java.lang.Number.floatValue()", "java.lang.Byte.toString(byte)", "java.lang.Double.toString(double)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "e4099abc9475ba8940fd769af6a7c376855b711b", "Url": "https://api.github.com/repos/speedment/fika", "Date": "2016-05-20T00:30:28Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((objectChangesMap.get()) != null) objectChangesMap.remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2725/buggy-version/api.src.main.java.org.openmrs.module.auditlog.api.db.hibernate.interceptor.HibernateAuditLogInterceptor.java", "BodyUseAPI": ["java.lang.ThreadLocal<java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.Object[]>>>.remove()"], "Fixed commit": "e8f6e5ff83da4bdfaffeafd8dd62c767d9b3e085", "Url": "https://api.github.com/repos/openmrs/openmrs-module-auditlog", "Date": "2012-08-01T06:46:39Z"},
{"Line": "=>1322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (constant instanceof jasm.io.Constant.Float) { jasm.io.Constant.Float c = ((jasm.io.Constant.Float) (constant)); return c.value; }else if (constant instanceof jasm.io.Constant.Double) { jasm.io.Constant.Double c = ((jasm.io.Constant.Double) (constant)); return c.value; }else if (constant instanceof jasm.io.Constant.Class) { jasm.io.Constant.Class c = ((jasm.io.Constant.Class) (constant)); return jasm.io.ClassFileReader.parseClassDescriptor(((\"L\" + (c.name.str)) + \";\")); }else { throw new java.lang.IllegalArgumentException((\"unknown constant pool item encountered: \" + constant)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7451/buggy-version/src.jasm.io.ClassFileReader.java", "BodyUseAPI": [], "Fixed commit": "d5df78da5ce41e33d981e7fed241dc745fbeb7d7", "Url": "https://api.github.com/repos/DavePearce/Jasm", "Date": "2013-08-14T10:02:37Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((constant) instanceof jasm.lang.JvmType.Reference) { return \"ldc_w \" + (constant); }else { return \"aconst_null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7451/buggy-version/src.jasm.lang.Bytecode.java", "BodyUseAPI": [], "Fixed commit": "d5df78da5ce41e33d981e7fed241dc745fbeb7d7", "Url": "https://api.github.com/repos/DavePearce/Jasm", "Date": "2013-08-14T10:02:37Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prefs.getBoolean(\"force-portrait\", true)) { if ((android.os.Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR2)) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_USER_PORTRAIT); }else { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT); } }else { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_USER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8906/buggy-version/app.src.main.java.fr.neamar.kiss.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "c12cd3ca11a8f3a4d29d02f33cfa8e52c2c32066", "Url": "https://api.github.com/repos/Evenilink/KISS", "Date": "2016-11-30T18:58:23Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (output != null) { java.lang.String[] sp = output.split(\" \"); for (java.lang.String s : sp) { s = s.trim(); if (s.endsWith(\"nvcc\")) { return s.substring(0, s.lastIndexOf(\"nvcc\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3238/buggy-version/src.edu.syr.pcpratts.rootbeer.util.CudaPath.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "3c06b265f83abb0bf981f45e74edb9626af22718", "Url": "https://api.github.com/repos/millecker/rootbeer1", "Date": "2013-08-25T14:37:17Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((players.size()) == 0) { gc.allLosers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3001/buggy-version/src.main.java.game.Game.java", "BodyUseAPI": [], "Fixed commit": "46d658ea4650bb4b1f675f9915d987771650f581", "Url": "https://api.github.com/repos/timothyjamesjensen/war", "Date": "2016-04-21T20:37:09Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.springframework.util.StringUtils.isEmpty(locationCode))) { com.kabuda.entity.Location locationByLC = locationService.getLocationByLC(locationCode); user.setLocation(locationByLC.getCity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7830/buggy-version/src.main.java.com.kabuda.controller.UserController.java", "BodyUseAPI": ["com.kabuda.service.LocationService.getLocationByLC(java.lang.String)"], "Fixed commit": "6fac155942a3b25458a9531930b6ac71a92f992a", "Url": "https://api.github.com/repos/BUAAMusketeers/kabuda", "Date": "2017-02-19T03:06:05Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((text) != null) { canvas.drawText(text, xPos, yPos, mTextPaint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3400/buggy-version/src.com.fuzzydev.LabeledImageView.java", "BodyUseAPI": [], "Fixed commit": "bf8bf8061e36d212bce9f6a57f748e8f388faecf", "Url": "https://api.github.com/repos/DejanRistic/LabeledImageView", "Date": "2014-03-29T20:51:12Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_operation) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3419/buggy-version/app.src.main.java.ca.brocku.cs97aa.assignment1.CalculatorModel.java", "BodyUseAPI": [], "Fixed commit": "0afc9731033bbe5a3b57645d51b944d44d76c9f3", "Url": "https://api.github.com/repos/curtesmith/COSC3P97-Assignment1", "Date": "2015-09-28T02:28:31Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getRawSlot()) >= (size)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5613/buggy-version/src.main.java.io.mazenmc.menuapi.menu.Menu.java", "BodyUseAPI": [], "Fixed commit": "a501cd96b577475aada3cde571bd2d582936c6d5", "Url": "https://api.github.com/repos/mkotb/MenuAPI", "Date": "2015-02-25T08:56:49Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x >= (this.X)) && (x <= ((this.X) + (this.width)))) { if ((y >= (this.Y)) && (y <= ((this.Y) + (this.height)))) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3686/buggy-version/workspace_2.1.DungeonOfDoom.src.main.Avatar.java", "BodyUseAPI": [], "Fixed commit": "38e150884787e01ee75afe07a80f10d95e2e1e35", "Url": "https://api.github.com/repos/ahts20/no-added-sugar", "Date": "2016-12-08T15:43:08Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Sirius.server.search.builtin.GeoSearch.getGeoSearchSql(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (sqlStatement != null) { getLog().info((\"geosearch: \" + sqlStatement)); final java.util.ArrayList<java.util.ArrayList> result = ms.performCustomSearch(sqlStatement); for (final java.util.ArrayList al : result) { final int cid = ((java.lang.Integer) (al.get(0))); final int oid = ((java.lang.Integer) (al.get(1))); final Sirius.server.middleware.types.MetaObjectNode mon = new Sirius.server.middleware.types.MetaObjectNode(((java.lang.String) (domainKey)), oid, cid); aln.add(mon); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4687/buggy-version/src.main.java.Sirius.server.search.builtin.GeoSearch.java", "BodyUseAPI": ["getLog().info(java.lang.String)", "Sirius.server.middleware.interfaces.domainserver.MetaService.performCustomSearch(java.lang.String)"], "Fixed commit": "b9336963993797fad14b9f02f2b4f5278886fd77", "Url": "https://api.github.com/repos/cismet/cids-server", "Date": "2011-12-16T12:43:39Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((host.getPlaylist()) != null) { org.hibernate.Hibernate.initialize(host.getPlaylist()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1852/buggy-version/src.main.java.persistence.host.TablePartyHostOperations.java", "BodyUseAPI": ["org.hibernate.Hibernate.initialize(host.getPlaylist())", "entities.PartyHost.getPlaylist()"], "Fixed commit": "ee11662d8dd54595c5453bd1b9946e074373beea", "Url": "https://api.github.com/repos/AlexBoehner/TeamPlayServer", "Date": "2017-01-15T15:59:38Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((p.getPlaylist()) != null) && ((p.getPlaylist().getTracks()) != null)) { org.hibernate.Hibernate.initialize(p.getPlaylist().getTracks()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1852/buggy-version/src.main.java.persistence.host.TablePartyHostOperations.java", "BodyUseAPI": ["entities.Party.getPlaylist()", "p.getPlaylist().getTracks()", "org.hibernate.Hibernate.initialize(p.getPlaylist().getTracks())"], "Fixed commit": "ee11662d8dd54595c5453bd1b9946e074373beea", "Url": "https://api.github.com/repos/AlexBoehner/TeamPlayServer", "Date": "2017-01-15T15:59:38Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getTracks()) != null) { org.hibernate.Hibernate.initialize(p.getTracks()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1852/buggy-version/src.main.java.persistence.host.TablePartyHostOperations.java", "BodyUseAPI": ["entities.Playlist.getTracks()", "org.hibernate.Hibernate.initialize(p.getTracks())"], "Fixed commit": "ee11662d8dd54595c5453bd1b9946e074373beea", "Url": "https://api.github.com/repos/AlexBoehner/TeamPlayServer", "Date": "2017-01-15T15:59:38Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((host.getParties()) != null) { org.hibernate.Hibernate.initialize(host.getParties()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1852/buggy-version/src.main.java.persistence.host.TablePartyHostOperations.java", "BodyUseAPI": ["entities.PartyHost.getParties()", "org.hibernate.Hibernate.initialize(host.getParties())"], "Fixed commit": "ee11662d8dd54595c5453bd1b9946e074373beea", "Url": "https://api.github.com/repos/AlexBoehner/TeamPlayServer", "Date": "2017-01-15T15:59:38Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((mode.equals(Mode.INSTALLER)) || (mode.equals(Mode.CONVERT)))) { final uk.ac.ebi.interpro.scan.management.model.implementations.panther.PantherBinaryStep stepPantherRunBinary = ((uk.ac.ebi.interpro.scan.management.model.implementations.panther.PantherBinaryStep) (ctx.getBean(\"stepPantherRunBinary\"))); stepPantherRunBinary.setUserDir(parsedCommandLine.getOptionValue(I5Option.USER_DIR.getLongOpt()).trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8369/buggy-version/core.jms-implementation.src.main.java.uk.ac.ebi.interpro.scan.jms.main.Run.java", "BodyUseAPI": [], "Fixed commit": "afd896dfcb0ad950d4d878e56bcae75947fd79eb", "Url": "https://api.github.com/repos/ebi-pf-team/interproscan", "Date": "2015-12-08T13:08:32Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((folderList) != null) && ((folderList.size()) > 0)) { database.deleteElement(folderList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8192/buggy-version/ch.droptilllate.application.src.ch.droptilllate.application.controller.ViewController.java", "BodyUseAPI": ["ch.droptilllate.database.api.IDatabase.deleteElement(java.util.List<ch.droptilllate.application.model.GhostFolderDob>)"], "Fixed commit": "8c7b457d75acc39dc2ab40c363f36392c8baaa23", "Url": "https://api.github.com/repos/dev131/DropTillLate_Application", "Date": "2014-06-05T14:26:03Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line.length()) < 4) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8556/buggy-version/src.main.java.uk.co.nickthecoder.wrkfoo.command.GitStatusTask.java", "BodyUseAPI": [], "Fixed commit": "7f814774ee56d32b6ee0030d88c755b325361802", "Url": "https://api.github.com/repos/nickthecoder/wrkfoo", "Date": "2017-03-03T20:40:37Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDenominator()) == 0) { return \"0\"; }else { return ((\"\" + (getNumerator())) + '/') + (getDenominator()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7141/buggy-version/Fraction.java", "BodyUseAPI": [], "Fixed commit": "ad28b4f7fec3cc0f43aca03ff34ea3ee34a410c8", "Url": "https://api.github.com/repos/BBK-PiJ-2014-23/cw2", "Date": "2014-11-23T15:01:20Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((denom1 != 0) && (denom2 != 0)) { while ((denom1 % denom2) != 0) { denom1 += initDenom1; multiplicator1++; } multiplicator2 = denom1 / denom2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7141/buggy-version/Fraction.java", "BodyUseAPI": [], "Fixed commit": "ad28b4f7fec3cc0f43aca03ff34ea3ee34a410c8", "Url": "https://api.github.com/repos/BBK-PiJ-2014-23/cw2", "Date": "2014-11-23T15:01:20Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((play.mvc.Controller.session(\"connected\")) != null) { return redirect(routes.SimpleReleaseContoller.index()); }else { return ok(login.render(\"\u0412\u0445\u0456\u0434 \u0434\u043e \u0441\u0438\u0441\u0442\u0435\u043c\u0438...\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/288/buggy-version/app.controllers.LoginController.java", "BodyUseAPI": [], "Fixed commit": "cbad7f714ee55c9c89ac84ddf5752202a21ea0d2", "Url": "https://api.github.com/repos/spoilt-exile/RibbonWeb", "Date": "2013-08-01T11:21:31Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isOpened) != 0) overridePendingTransition(R.anim.activity_start_first, R.anim.activity_start_second);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/670/buggy-version/app.src.main.java.com.teambulldozer.hett.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2c125fb36b49b36ad618b06d1063a196081733d1", "Url": "https://api.github.com/repos/teamBull/HETT", "Date": "2016-02-29T16:48:33Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getScenarioElementType()) != null) { return getScenarioElementType().getId(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7923/buggy-version/src.main.java.edu.berkeley.path.model_objects.scenario.Actuator.java", "BodyUseAPI": [], "Fixed commit": "5e534df987db4616c5354eca32b360067737dd94", "Url": "https://api.github.com/repos/andrewbts/model-objects", "Date": "2013-11-06T18:58:49Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAdapterNull())) { ((com.nct.adapter.FragCompanyAdapter) (mBaseAdapter)).setDataSavelist(data.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5429/buggy-version/app.src.main.java.com.nct.fragment.FragCreateCardSearch.java", "BodyUseAPI": [], "Fixed commit": "ea0726ecc2a500bed2fbc6713347951a08aa124a", "Url": "https://api.github.com/repos/thanhoanghai/mycouper", "Date": "2015-06-12T10:41:05Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tagItem.isMandatory()) { undefinedRadioButton.setEnabled(false); undefinedRadioButton.setChecked(false); }else { undefinedRadioButton.setChecked(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7192/buggy-version/src.main.java.io.jawg.osmcontributor.ui.adapters.binding.RadioChoiceViewBinder.java", "BodyUseAPI": [], "Fixed commit": "441f02c1bd3c7ca2f6ff62c29458e674c03d8e3b", "Url": "https://api.github.com/repos/jawg/osm-contributor", "Date": "2017-07-17T14:18:25Z"},
{"Line": "=>670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.ignite.internal.util.tostring.GridToStringBuilder.isPrimitiveWraper(cls)) return java.lang.String.valueOf(obj);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7848/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.util.tostring.GridToStringBuilder.java", "BodyUseAPI": [], "Fixed commit": "70ca0702963106d68ef6ad7792c89ddb255e8e47", "Url": "https://api.github.com/repos/SomeFire/ignite", "Date": "2017-04-05T14:42:01Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resources) != null) { resources.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7935/buggy-version/subprojects.core-impl.src.main.groovy.org.gradle.api.internal.artifacts.ivyservice.resolveengine.store.DefaultBinaryStore.java", "BodyUseAPI": [], "Fixed commit": "b1dd0d383718221f770c480d4de325f253f1e91d", "Url": "https://api.github.com/repos/gradle/gradle", "Date": "2013-09-01T14:53:29Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(typeFilter.isPrepared())) typeFilter.prepare();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3170/buggy-version/src.framework.scuba.domain.P2Set.java", "BodyUseAPI": ["joeq.Class.jq_Type.prepare()"], "Fixed commit": "e736e5ddd7494fc50526dfbbea4a8e7f365f6d21", "Url": "https://api.github.com/repos/fredfeng/Scuba", "Date": "2014-07-01T05:23:44Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.columnActivityAfterSeeingImage.size()) <= 1) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2863/buggy-version/src.main.java.model.MARK_I.SDR.SDRScoreCalculator.java", "BodyUseAPI": [], "Fixed commit": "3a1a1c1f56e7efeb3d604b90191e20fb5a68c3ed", "Url": "https://api.github.com/repos/quinnliu/WalnutiQ", "Date": "2014-04-19T16:03:56Z"},
{"Line": "=>7283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (query.list().isEmpty()) { sql = (((((((((((((((((((((((((((((((((\"select distinct tIn.id as transactionId, ms.displayName as messageTypeName, \" + (((((((((((((\"CONCAT_WS('<br />', fromOrg.orgName, CONCAT_WS(' ',fromOrg.address, fromOrg.address2), CONCAT_WS(' ',fromOrg.city, CONCAT(fromOrg.state,','), fromOrg.postalCode), CONCAT('phone: ',fromOrg.phone)) as sendingOrgInfo, \" + \"CONCAT_WS('<br />', toOrg.orgName, CONCAT_WS(' ',toOrg.address, toOrg.address2), CONCAT_WS(' ',toOrg.city, CONCAT(toOrg.state,','), toOrg.postalCode), CONCAT('phone: ',toOrg.phone)) as targetOrgInfo, \") + \"CONCAT_WS('<br />', CONCAT_WS(' ', patientInfo.firstName, patientInfo.lastName), CONCAT_WS(' ', patientAddr.line1, patientAddr.line2), CONCAT_WS(' ', patientAddr.city, CONCAT(patientAddr.state,','), patientAddr.postalCode), patientAddr.phone1) as patientInfo,\") + \"tIn.dateCreated as dateSubmitted, tIn.statusId, ps.displayCode as statusValue, ds.transactionInId as transactionRecordId, visitInfo.messageStatus\") + \" from batchuploadsummary ds inner join\") + \" batchuploads bu on bu.id = ds.batchId inner join\") + \" messageTypes ms on ms.id = ds.messageTypeId inner join\") + \" organizations fromOrg on fromOrg.id = \") + \" (case\") + \" WHEN ds.sourceSubOrgId > 0 THEN ds.SourceSubOrgId\") + \" ELSE ds.sourceOrgId\") + \" END) inner join\") + \" organizations toOrg on toOrg.id = ds.targetOrgId inner join\") + \" transactionin tIn on tIn.batchId = ds.batchId and tIn.id = ds.transactionInId and tIn.dateCreated >= '\")) + (sdf.format(fromDate))) + \" 00:00:00' and tIn.dateCreated < '\") + (sdf.format(toDate))) + \" 23:59:59' inner join\") + \" message_patients patientInfo on patientInfo.transactionInId = tIn.id inner join \") + \" message_patientaddresses patientAddr on patientAddr.transactionInId = tIn.id inner join\") + \" message_visitinfo visitInfo on visitInfo.transactionInId = tIn.id inner join\") + \" lu_processstatus ps on ps.id = tIn.statusId\") + \" where ds.batchId in \") + \"(\") + \" select id\") + \" from batchUploads\") + \" where orgId = \") + orgId) + \" and statusId in (4,22,23,24,25,28,29,30,32)\") + \") \") + \" and ds.batchId in ( \") + \" select batchUploadId \") + \" from transactiontarget \") + \" where batchDLId in ( \") + \" select batchId from batchdownloadsummary \") + \" where sourceOrgId = \") + orgId) + \" and targetConfigId in ( \") + \" select configId from configurationtransportdetails where transportMethodId = 6))) \") + \" and ds.sourceConfigId in ( \") + \" select sourceConfigId \") + \" from configurationconnections \") + \" where id in (select connectionId from configurationconnectionsenders where userId = \") + userId) + \") \") + \") \") + \"order by tIn.dateCreated desc\"; query = sessionFactory.getCurrentSession().createSQLQuery(sql).setResultTransformer(org.hibernate.transform.Transformers.aliasToBean(com.ut.dph.model.Transaction.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8263/buggy-version/src.main.java.com.ut.dph.dao.impl.transactionInDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "7ee562a5cb245289790973d4751788894bd3c6eb", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2016-11-29T14:36:49Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tp.size()) + (fp.size())) > 0) { return java.lang.Math.sqrt((se / ((tp.size()) + (fp.size())))); }else { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5583/buggy-version/src.main.java.it.cnr.isti.hpc.dexter.eval.metrics.saliency.PrecisionRmseMetric.java", "BodyUseAPI": ["java.lang.Math.sqrt((se / ((tp.size()) + (fp.size()))))", "java.util.List<it.cnr.isti.hpc.dexter.eval.AnnotatedSpot>.size()", "java.util.List<it.cnr.isti.hpc.dexter.eval.AnnotatedSpot>.size()"], "Fixed commit": "0deac6d43514043d93e126c3bf79247440f16c85", "Url": "https://api.github.com/repos/diegoceccarelli/dexter-eval", "Date": "2015-01-23T19:39:09Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sum_scores_tpgt + (fp.size())) > 0) { return sum_scores_tpgt / (sum_scores_tpgt + ((fp.size()) * 1)); }else { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5583/buggy-version/src.main.java.it.cnr.isti.hpc.dexter.eval.metrics.saliency.PrecisionWeightedMetric.java", "BodyUseAPI": ["java.util.List<it.cnr.isti.hpc.dexter.eval.AnnotatedSpot>.size()"], "Fixed commit": "0deac6d43514043d93e126c3bf79247440f16c85", "Url": "https://api.github.com/repos/diegoceccarelli/dexter-eval", "Date": "2015-01-23T19:39:09Z"},
{"Line": "=>1238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAttached())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5059/buggy-version/src.main.java.com.googlecode.mgwt.ui.client.widget.impl.ScrollPanelTouchImpl.java", "BodyUseAPI": [], "Fixed commit": "1b0776dc3af072f3ace2f9b12d3e418ae5d96329", "Url": "https://api.github.com/repos/dankurka/mgwt", "Date": "2012-10-27T16:12:01Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((r == 8) && (c == 8)) && (puzzle[r][c].equals(\"\"))) { for (int i = 1; i < ((SudokuSolver.vals.length) + 1); i++) { if (((SudokuSolver.noSameRow(puzzle[r], c, SudokuSolver.vals[(i - 1)])) && (SudokuSolver.noSameCol(puzzle, r, c, SudokuSolver.vals[(i - 1)]))) && (SudokuSolver.noSameBox(puzzle, r, c, SudokuSolver.vals[(i - 1)]))) { puzzle[r][c] = SudokuSolver.vals[(i - 1)]; } } return !(puzzle[r][c].equals(\"\")); }else if ((r == 8) && (c == 8)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3543/buggy-version/SudokuSolver.java", "BodyUseAPI": ["SudokuSolver.noSameBox(java.lang.String[][],int,int,java.lang.String)", "java.lang.String.equals(java.lang.String)", "SudokuSolver.noSameRow(java.lang.String[],int,java.lang.String)", "SudokuSolver.noSameCol(java.lang.String[][],int,int,java.lang.String)"], "Fixed commit": "44fd71163e0d337e522ac24b20d4ad3353f14569", "Url": "https://api.github.com/repos/kkhan01/APCS1_Final_Project", "Date": "2017-01-08T03:16:19Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.model.getModelTF().isTerminal(sprime))) { nextStatePotential = this.potential.potentialValue(sprime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4042/buggy-version/src.burlap.behavior.singleagent.learning.modellearning.rmax.PotentialShapedRMax.java", "BodyUseAPI": ["burlap.behavior.singleagent.shaping.potential.PotentialFunction.potentialValue(burlap.oomdp.core.State)"], "Fixed commit": "804c067122a8ed418cd8305f8e46983ad16615dc", "Url": "https://api.github.com/repos/jmacglashan/burlap", "Date": "2015-01-14T23:16:28Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((text.indexOf(\" \")) > 0) to = text.substring(0, text.indexOf(\" \")).trim(); else if ((text.indexOf(\" \")) > 0) to = text.substring(0, text.indexOf(\" \")).trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5444/buggy-version/hipda.src.main.java.net.jejer.hipda.bean.ContentQuote.java", "BodyUseAPI": [], "Fixed commit": "7203fa0fb947ad12ef46e711a733a360ee346809", "Url": "https://api.github.com/repos/zwpaper/hipda", "Date": "2015-03-26T12:19:34Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.darglk.onlineshop.service.ProductService.findById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((product.getQuantity()) <= 0L) { return \"redirect:/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8722/buggy-version/src.main.java.com.darglk.onlineshop.controller.ProductController.java", "BodyUseAPI": [], "Fixed commit": "589af3389bac1bc5c0d9d9ccdcc0d1d4d3579877", "Url": "https://api.github.com/repos/darglk/OnlineShop", "Date": "2017-09-16T10:35:56Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (channel == null) { com.minecarts.chitchat.ChitChat.getPlugin().getLogger().log(java.util.logging.Level.WARNING, (\"Attempted to set channel to a null channel for \" + (player.getName()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8189/buggy-version/src.com.minecarts.chitchat.manager.ChannelManager.java", "BodyUseAPI": [], "Fixed commit": "920af36d5bb6d30786a233ffea3333baabb67949", "Url": "https://api.github.com/repos/Minecarts/ChitChat", "Date": "2012-03-13T19:35:12Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.mcgill.cs.comp303.rummy.model.Hand.autoMatchRecurse(java.util.ArrayList<ca.mcgill.cs.comp303.rummy.model.CardSet>,java.util.ArrayList<ca.mcgill.cs.comp303.rummy.model.Card>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((matches.size()) != 0) { java.util.ArrayList<java.lang.Integer> sortedPoints = new java.util.ArrayList<java.lang.Integer>(matches.keySet()); java.util.Collections.sort(sortedPoints); for (ca.mcgill.cs.comp303.rummy.model.CardSet s : matches.get(sortedPoints.get(((sortedPoints.size()) - 1)))) { for (ca.mcgill.cs.comp303.rummy.model.Card c : s) { aHand.put(c, true); } aMatchedSet.put(s, true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/884/buggy-version/Rummy-M1.src.ca.mcgill.cs.comp303.rummy.model.Hand.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.util.HashSet<ca.mcgill.cs.comp303.rummy.model.CardSet>>.get(java.lang.Integer)", "java.util.HashMap<java.lang.Integer, java.util.HashSet<ca.mcgill.cs.comp303.rummy.model.CardSet>>.keySet()"], "Fixed commit": "6225eac9a694f5bd1f36c0d733bfa40f47d70d96", "Url": "https://api.github.com/repos/ytixu/rummyGin", "Date": "2014-11-04T01:55:50Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.appointext.backend.FindSentiment.findSentiment(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (returnVal.equalsIgnoreCase(\"no\")) { com.appointext.backend.UpdateReminder.cancelReminder(con, curText, senderNumber, recieverNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3717/buggy-version/src.com.appointext.backend.SetReminder.java", "BodyUseAPI": [], "Fixed commit": "9b6fde5717f5c09a9f0b1529e328dfb39231f431", "Url": "https://api.github.com/repos/CodeGood/AppoinText", "Date": "2014-05-03T05:09:44Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(read)) || (!(isPresent()))) { throw new java.lang.IllegalStateException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8358/buggy-version/src.main.java.org.xmlbeam.AutoValue.java", "BodyUseAPI": [], "Fixed commit": "57f53700e0f47f7420d57a2758c766202cee7359", "Url": "https://api.github.com/repos/SvenEwald/xmlbeam", "Date": "2017-06-07T14:53:54Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (interfaceClass != null) { this.interfaces.add(interfaceClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/127/buggy-version/common.util.src.main.java.com.alibaba.citrus.util.internal.InterfaceImplementorBuilder.java", "BodyUseAPI": ["java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>)"], "Fixed commit": "69ebe308796cb2be13e4ae1561408e79ca187427", "Url": "https://api.github.com/repos/webx/citrus", "Date": "2013-09-26T08:13:49Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { node.genCode(mg); }else if ((i > 0) && ((((((((((((node instanceof io.lambdacloud.node.AssignNode) || (node instanceof io.lambdacloud.node.FuncCallNode)) || (node instanceof io.lambdacloud.node.arithmetric.AddAsignNode)) || (node instanceof io.lambdacloud.node.arithmetric.SubAsignNode)) || (node instanceof io.lambdacloud.node.arithmetric.MulAsignNode)) || (node instanceof io.lambdacloud.node.arithmetric.DivAsignNode)) || (node instanceof io.lambdacloud.node.IfNode)) || (node instanceof io.lambdacloud.node.WhileNode)) || (node instanceof io.lambdacloud.node.FuncDefNode)) || (node instanceof io.lambdacloud.node.matrix.MatrixAssignNode)) || (node instanceof io.lambdacloud.node.ReturnNode)) || (node instanceof io.lambdacloud.node.ForNode))) { if (node instanceof io.lambdacloud.node.FuncCallNode) ((io.lambdacloud.node.FuncCallNode) (node)).isPopReturn = true; else node.genLoadInsn(false); node.genCode(mg); }else { java.lang.System.out.println(((\"Code generation for '\" + (node.toString())) + \"' is ignored.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2265/buggy-version/src.io.lambdacloud.node.IfNode.java", "BodyUseAPI": [], "Fixed commit": "e2d3163a4c4b5bc079aac0edf3849387547e457f", "Url": "https://api.github.com/repos/yuemingl/ExprEngine", "Date": "2016-08-15T06:33:58Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((elseBlockExprs.size()) == 0) return org.objectweb.asm.Type.VOID_TYPE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2265/buggy-version/src.io.lambdacloud.node.IfNode.java", "BodyUseAPI": [], "Fixed commit": "e2d3163a4c4b5bc079aac0edf3849387547e457f", "Url": "https://api.github.com/repos/yuemingl/ExprEngine", "Date": "2016-08-15T06:33:58Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { node.genCode(mg); }else if ((i > 0) && ((((((((((((node instanceof io.lambdacloud.node.AssignNode) || (node instanceof io.lambdacloud.node.FuncCallNode)) || (node instanceof io.lambdacloud.node.arithmetric.AddAsignNode)) || (node instanceof io.lambdacloud.node.arithmetric.SubAsignNode)) || (node instanceof io.lambdacloud.node.arithmetric.MulAsignNode)) || (node instanceof io.lambdacloud.node.arithmetric.DivAsignNode)) || (node instanceof io.lambdacloud.node.IfNode)) || (node instanceof io.lambdacloud.node.WhileNode)) || (node instanceof io.lambdacloud.node.FuncDefNode)) || (node instanceof io.lambdacloud.node.matrix.MatrixAssignNode)) || (node instanceof io.lambdacloud.node.ReturnNode)) || (node instanceof io.lambdacloud.node.ForNode))) { if (node instanceof io.lambdacloud.node.FuncCallNode) ((io.lambdacloud.node.FuncCallNode) (node)).isPopReturn = true; else node.genLoadInsn(false); node.genCode(mg); }else { java.lang.System.out.println(((\"Code generation for '\" + (node.toString())) + \"' is ignored.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2265/buggy-version/src.io.lambdacloud.node.IfNode.java", "BodyUseAPI": [], "Fixed commit": "e2d3163a4c4b5bc079aac0edf3849387547e457f", "Url": "https://api.github.com/repos/yuemingl/ExprEngine", "Date": "2016-08-15T06:33:58Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((m.group(6)) != null) { java.lang.String[] params = m.group(6).split(\":\"); if ((params.length) > 0) { param1 = params[0]; } if ((params.length) > 1) { param2 = params[1]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3514/buggy-version/bundles.binding.org.openhab.binding.harmonyhub.src.main.java.org.openhab.binding.harmonyhub.internal.HarmonyHubGenericBindingProvider.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "8c279073a0bec85b9a671796eb08b6a400805184", "Url": "https://api.github.com/repos/digitaldan/openhab", "Date": "2015-03-19T15:53:04Z"},
{"Line": "=>928", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (points != null) { for (org.fruct.oss.getssupplement.Model.Point point : points) addMarker(point); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2994/buggy-version/app.src.main.java.org.fruct.oss.getssupplement.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "49d75735f85ba57ef08ab129c9a86aaaee5f51e4", "Url": "https://api.github.com/repos/oss-fruct-org/gets-supplement-android", "Date": "2015-11-03T23:33:06Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((queryRequest.getQueryGroup()) != null) && ((queryRequest.getQueryGroup().getEntityMapping()) != null)) { for (java.util.Map.Entry<java.lang.String, java.lang.String> entry : queryRequest.getQueryGroup().getEntityMapping().entrySet()) { countHql.append(\" , \").append(entry.getKey()).append(\" AS \").append(entry.getValue()).append(' '); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/454/buggy-version/src.main.java.com.qeeka.repository.BaseSearchRepository.java", "BodyUseAPI": ["queryRequest.getQueryGroup().getEntityMapping()", "com.qeeka.http.QueryRequest.getQueryGroup()", "queryRequest.getQueryGroup().getEntityMapping().entrySet()"], "Fixed commit": "c51f5f8b9f2df2d096f4ca58c7145d2283495ff4", "Url": "https://api.github.com/repos/decimalism-team/base-search", "Date": "2015-10-14T05:18:48Z"},
{"Line": "=>1742", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.getClass().isEnum()) { value = value.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1178/buggy-version/src.de.caluga.morphium.writer.MorphiumWriterImpl.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "35450dde1325cedced1c0d150dba90af34856b94", "Url": "https://api.github.com/repos/sboesebeck/morphium", "Date": "2015-08-14T08:55:07Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (myPosition >= (theBytes.length)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/9201/buggy-version/src.oscP5.OscPatcher.java", "BodyUseAPI": [], "Fixed commit": "c866de82de3451124c269cec8ba89bde46ee408c", "Url": "https://api.github.com/repos/fdb/oscp5", "Date": "2012-12-23T06:49:11Z"},
{"Line": "=>2036", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mContentAdapter) != null) mContentAdapter.updateData();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/578/buggy-version/src.org.brandroid.openmanager.fragments.ContentFragment.java", "BodyUseAPI": [], "Fixed commit": "4f4350771339ba4fe3e24fbb9512a0b1b85d85be", "Url": "https://api.github.com/repos/BrandroidTools/OpenExplorer", "Date": "2012-07-26T17:41:08Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((onlyFailed) && (taskNum == 1)) { ca.mcgill.mcb.pcingola.bigDataScript.task.Task task = new ca.mcgill.mcb.pcingola.bigDataScript.task.Task(); task.setExitValue(0); createReport(rTemplate, task, taskNum, yaml); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4817/buggy-version/src.ca.mcgill.mcb.pcingola.bigDataScript.report.Report.java", "BodyUseAPI": ["ca.mcgill.mcb.pcingola.bigDataScript.report.Report.createReport(ca.mcgill.mcb.pcingola.bigDataScript.report.RTemplate,ca.mcgill.mcb.pcingola.bigDataScript.task.Task,int,boolean)"], "Fixed commit": "c32f4a04789b79faaf2c582d58d67d5c736cd7d4", "Url": "https://api.github.com/repos/babass83/BigDataScript", "Date": "2016-03-21T08:55:25Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["T.apply(ca.mcgill.mcb.pcingola.interval.Variant)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (mcopy != null) { mcopy.setParent(newMarker); newMarker.add(mcopy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5599/buggy-version/src.main.java.ca.mcgill.mcb.pcingola.interval.IntervalAndSubIntervals.java", "BodyUseAPI": ["ca.mcgill.mcb.pcingola.interval.IntervalAndSubIntervals<T>.add(T)", "T.setParent(ca.mcgill.mcb.pcingola.interval.IntervalAndSubIntervals<T>)"], "Fixed commit": "5d9f163e2acae41d902db63e08db4ffeaf844d4f", "Url": "https://api.github.com/repos/pcingola/SnpEff", "Date": "2015-09-07T14:48:05Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.classes) == null) { this.classes = new ch.eonum.pipeline.core.Features(); java.util.Set<java.lang.String> classes = trainingDataSet.collectClasses(); for (java.lang.String className : classes) this.classes.addFeature(className); this.classes.recalculateIndex(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2022/buggy-version/src.ch.eonum.pipeline.classification.tree.DecisionTree.java", "BodyUseAPI": [], "Fixed commit": "9932394d9b5ea7e74fed82f68f63531e41fa7e42", "Url": "https://api.github.com/repos/eonum/pipeline", "Date": "2015-07-21T16:31:15Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!((inputLit.getAtom()) instanceof de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.atoms.EprQuantifiedPredicateAtom)) { newLiterals.add(inputLit); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2184/buggy-version/SMTInterpol.src.de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.ApplyConstructiveEqualityReasoning.java", "BodyUseAPI": [], "Fixed commit": "1be1cce55db141b4c439c159b4ee9e9dadc2e21b", "Url": "https://api.github.com/repos/ultimate-pa/smtinterpol", "Date": "2017-03-21T16:03:40Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInBlacklist) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8585/buggy-version/src.main.java.com.lothrazar.cyclicmagic.module.GuiTerrariaButtonsModule.java", "BodyUseAPI": [], "Fixed commit": "e16810a0ac77798c4ebd1bde8742d686deb86bd3", "Url": "https://api.github.com/repos/PrinceOfAmber/Cyclic", "Date": "2016-09-15T07:02:51Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (wcs.openClicked()) { database = ((data.Database) (data.TimeLine.getInstance().getCurrentElement())); dbTreePanel.setDatabase(database); dbTreePanel.updateTree(); relationView.display(database); relationDetailsView.display(database); if ((guiLogic.getLastFileName()) != null) { frame.setTitle((((locale.getString(\"GUI_FrameTitle\")) + \" - \") + (guiLogic.getLastFileName()))); }else { frame.setTitle((((locale.getString(\"GUI_FrameTitle\")) + \" - \") + (locale.getString(\"GUI_FrameTitleNotSaved\")))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4424/buggy-version/src.dba.gui.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "d96fdf583c361d8d353334b0484f8466209beff4", "Url": "https://api.github.com/repos/nexxx/Database-Analyzer", "Date": "2012-07-01T20:05:05Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(us.myles.ViaVersion.api.Via.getConfig().isSuppressMetadataErrors())) nl.matsv.viabackwards.ViaBackwards.getPlatform().getLogger().warning((((\"Metadata for entity id: \" + entityId) + \" not sent because the entity doesn't exist. \") + storage));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3903/buggy-version/core.src.main.java.nl.matsv.viabackwards.api.rewriters.EntityRewriter.java", "BodyUseAPI": [], "Fixed commit": "ea2f603cf7b3475d9d9942e56d2962a2a2523a45", "Url": "https://api.github.com/repos/Matsv/ViaBackwards", "Date": "2017-07-04T19:12:09Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Telephony.Sms.getDefaultSmsPackage(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (nativePackage != null) { com.kaliturin.blacklist.utils.Settings.setStringValue(context, Settings.DEFAULT_SMS_APP_NATIVE_PACKAGE, nativePackage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5437/buggy-version/app.src.main.java.com.kaliturin.blacklist.utils.DefaultSMSAppHelper.java", "BodyUseAPI": ["com.kaliturin.blacklist.utils.Settings.setStringValue(android.content.Context,Settings.DEFAULT_SMS_APP_NATIVE_PACKAGE,java.lang.String)"], "Fixed commit": "80172211ce5c7203cda7bcceb8b432e0f765f63a", "Url": "https://api.github.com/repos/kaliturin/BlackList", "Date": "2017-09-13T14:29:11Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (seconds == 0) { seconds = 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2342/buggy-version/playerSDK.src.main.java.com.kaltura.playersdk.KControlsView.java", "BodyUseAPI": [], "Fixed commit": "1c1b5a62ff98339601d18864ff9ed9309d6d66f4", "Url": "https://api.github.com/repos/kaltura/player-sdk-native-android", "Date": "2016-03-24T16:48:03Z"},
{"Line": "=>581", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.elasticsearch.common.settings.Settings.getByPrefix(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.floragunn.searchguard.support.WildcardMatcher.allPatternsMatched(roleMapSettings.getAsArray(\".and_backendroles\"), user.getRoles().toArray(new java.lang.String[0]))) { sgRoles.add(roleMap); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2654/buggy-version/src.main.java.com.floragunn.searchguard.configuration.PrivilegesEvaluator.java", "BodyUseAPI": [], "Fixed commit": "04a3574948b8442c1b49a178010559a5b99377fe", "Url": "https://api.github.com/repos/floragunncom/search-guard", "Date": "2017-01-25T13:54:06Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getID()) == (java.awt.event.MouseEvent.MOUSE_PRESSED)) { mLastMouseDownPos = java.awt.MouseInfo.getPointerInfo().getLocation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4676/buggy-version/EditorDemo.src.editor.BaseMouseController.java", "BodyUseAPI": [], "Fixed commit": "25d51ab16e69ef9dbc5a1a16bd889ff89c9c0e24", "Url": "https://api.github.com/repos/KurtSerge/VisualEditor", "Date": "2013-07-26T20:19:32Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getID()) == (java.awt.event.MouseEvent.MOUSE_RELEASED)) { if ((mLastMouseDownPos) == null) return; mLastMouseDownPos = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4676/buggy-version/EditorDemo.src.editor.BaseMouseController.java", "BodyUseAPI": [], "Fixed commit": "25d51ab16e69ef9dbc5a1a16bd889ff89c9c0e24", "Url": "https://api.github.com/repos/KurtSerge/VisualEditor", "Date": "2013-07-26T20:19:32Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((attacher) != null) { displayRect = attacher.getDisplayRect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5205/buggy-version/workspace.WATisRain.src.com.lucky.watisrain.map.MapView.java", "BodyUseAPI": [], "Fixed commit": "b31f15e0ef4fd226db2a400d6e8af1cb27335f87", "Url": "https://api.github.com/repos/spratt/WATisRain", "Date": "2014-08-03T21:19:43Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stack.getData()) < 0) { stack.setData(((short) (0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/888/buggy-version/mechanisms.src.main.java.com.sk89q.craftbook.mech.cauldron.ImprovedCauldron.java", "BodyUseAPI": ["com.sk89q.craftbook.mech.cauldron.CauldronItemStack.setData(int)"], "Fixed commit": "d5f26358fc14075ccf77f96f84dfdd9b5a7bcb55", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2012-08-13T16:33:17Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((command.getCooldown()) > 0) actor.addCooldown(command.getCooldownGroup(), command.getCooldown());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/788/buggy-version/src.services.command.CommandService.java", "BodyUseAPI": ["services.command.BaseSWGCommand.getCooldown()", "resources.objects.creature.CreatureObject.addCooldown(command.getCooldownGroup(),command.getCooldown())", "services.command.BaseSWGCommand.getCooldownGroup()"], "Fixed commit": "b7bcf89361a272ea6cfc62efedefd5108bf42fc3", "Url": "https://api.github.com/repos/ProjectSWGCore/NGECore2", "Date": "2014-04-12T19:20:05Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (warmupTime > 0) { try { java.lang.Thread.sleep(warmupTime); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/788/buggy-version/src.services.command.CommandService.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "b7bcf89361a272ea6cfc62efedefd5108bf42fc3", "Url": "https://api.github.com/repos/ProjectSWGCore/NGECore2", "Date": "2014-04-12T19:20:05Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["murilo.libs.model.ModelLinker.get(eobj.get(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (obj != null) eobj = new murilo.libs.relational.EncapsulatedObjectRelational<murilo.libs.relational.ObjectRelational>(obj);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1818/buggy-version/Database-Helper.src.murilo.libs.model.ModelLinker.java", "BodyUseAPI": [], "Fixed commit": "66e91781c840bfaf003c42c8e9dbec564b70c44c", "Url": "https://api.github.com/repos/MuriloACQ/Database-Helper-MySQL", "Date": "2014-09-23T22:08:37Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["murilo.libs.model.Model<T>.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (t != null) et = new murilo.libs.relational.EncapsulatedObjectRelational<T>(t);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1818/buggy-version/Database-Helper.src.murilo.libs.model.Model.java", "BodyUseAPI": [], "Fixed commit": "66e91781c840bfaf003c42c8e9dbec564b70c44c", "Url": "https://api.github.com/repos/MuriloACQ/Database-Helper-MySQL", "Date": "2014-09-23T22:08:37Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["murilo.libs.model.Model<T>.get(et.get())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (t != null) et = new murilo.libs.relational.EncapsulatedObjectRelational<T>(t);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1818/buggy-version/Database-Helper.src.murilo.libs.model.Model.java", "BodyUseAPI": [], "Fixed commit": "66e91781c840bfaf003c42c8e9dbec564b70c44c", "Url": "https://api.github.com/repos/MuriloACQ/Database-Helper-MySQL", "Date": "2014-09-23T22:08:37Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["murilo.libs.model.Model<T>.get(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (t != null) et = new murilo.libs.relational.EncapsulatedObjectRelational<T>(t);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1818/buggy-version/Database-Helper.src.murilo.libs.model.Model.java", "BodyUseAPI": [], "Fixed commit": "66e91781c840bfaf003c42c8e9dbec564b70c44c", "Url": "https://api.github.com/repos/MuriloACQ/Database-Helper-MySQL", "Date": "2014-09-23T22:08:37Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (samuelpalmer.sensorautorotation.processes.service.ServiceHolder.isRunning()) samuelpalmer.sensorautorotation.processes.service.ServiceHolder.instance().activityMonitor.setCurrentApp(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4615/buggy-version/app.src.main.java.samuelpalmer.sensorautorotation.processes.service.WindowChangeDetectingService.java", "BodyUseAPI": [], "Fixed commit": "4607ee6738585535a9d3b8e5b5243e479f2af5b4", "Url": "https://api.github.com/repos/sampalmer/sideways-mode", "Date": "2016-11-10T08:08:06Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tag != null) { tagName = tag; }else { tagName = ((session.getAttribute(\"tag\")) != null) ? ((java.lang.String) (session.getAttribute(\"tag\"))) : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3580/buggy-version/src.main.java.by.dzmitry.controllers.QuestionsController.java", "BodyUseAPI": [], "Fixed commit": "f6eef834182246623345174424ab5b5c00874819", "Url": "https://api.github.com/repos/dzmitry-ivanou/words-mvc-gae", "Date": "2017-05-23T15:46:52Z"},
{"Line": "=>854", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_projectMetatData.getTargetRuntime()) != null) { java.lang.String label = _projectMetatData.getTargetRuntime().getProperty(\"switchyard.label\"); isIntegration = label.contains(\"Integration\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4632/buggy-version/eclipse.plugins.org.switchyard.tools.ui.src.org.switchyard.tools.ui.operations.CreateSwitchYardProjectOperation.java", "BodyUseAPI": ["org.switchyard.tools.ui.operations.CreateSwitchYardProjectOperation.NewSwitchYardProjectMetaData.getTargetRuntime()", "org.eclipse.wst.common.project.facet.core.runtime.IRuntimeComponent.getProperty(java.lang.String)"], "Fixed commit": "9a5486b2431b8f6add7401c53f19ff1275addb89", "Url": "https://api.github.com/repos/apodhrad/tools", "Date": "2015-11-12T17:44:28Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_projectMetatData.getTargetRuntime()) != null) { java.lang.String label = _projectMetatData.getTargetRuntime().getProperty(\"switchyard.label\"); isIntegration = label.contains(\"Integration\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4632/buggy-version/eclipse.plugins.org.switchyard.tools.ui.src.org.switchyard.tools.ui.operations.CreateSwitchYardProjectOperation.java", "BodyUseAPI": ["org.switchyard.tools.ui.operations.CreateSwitchYardProjectOperation.NewSwitchYardProjectMetaData.getTargetRuntime()", "org.eclipse.wst.common.project.facet.core.runtime.IRuntimeComponent.getProperty(java.lang.String)"], "Fixed commit": "9a5486b2431b8f6add7401c53f19ff1275addb89", "Url": "https://api.github.com/repos/apodhrad/tools", "Date": "2015-11-12T17:44:28Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTargetRuntime()) != null) { java.lang.String label = getTargetRuntime().getProperty(\"switchyard.label\"); isIntegration = label.contains(\"Integration\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4632/buggy-version/eclipse.plugins.org.switchyard.tools.ui.src.org.switchyard.tools.ui.wizards.ProjectConfigurationWizardPage.java", "BodyUseAPI": [], "Fixed commit": "9a5486b2431b8f6add7401c53f19ff1275addb89", "Url": "https://api.github.com/repos/apodhrad/tools", "Date": "2015-11-12T17:44:28Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTargetRuntime()) != null) { java.lang.String label = getTargetRuntime().getProperty(\"switchyard.label\"); isIntegration = label.contains(\"Integration\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4632/buggy-version/eclipse.plugins.org.switchyard.tools.ui.src.org.switchyard.tools.ui.wizards.ProjectConfigurationWizardPage.java", "BodyUseAPI": [], "Fixed commit": "9a5486b2431b8f6add7401c53f19ff1275addb89", "Url": "https://api.github.com/repos/apodhrad/tools", "Date": "2015-11-12T17:44:28Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_settingsGroup.getSelectedTargetRuntime()) != null) { java.lang.String label = _settingsGroup.getSelectedTargetRuntime().getProperty(\"switchyard.label\"); isIntegration = label.contains(\"Integration\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4632/buggy-version/eclipse.plugins.org.switchyard.tools.ui.src.org.switchyard.tools.ui.properties.SwitchYardSettingsPropertyPage.java", "BodyUseAPI": ["_settingsGroup.getSelectedTargetRuntime().getProperty(java.lang.String)", "org.switchyard.tools.ui.common.SwitchYardSettingsGroup.getSelectedTargetRuntime()"], "Fixed commit": "9a5486b2431b8f6add7401c53f19ff1275addb89", "Url": "https://api.github.com/repos/apodhrad/tools", "Date": "2015-11-12T17:44:28Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_settingsGroup.getSelectedTargetRuntime()) != null) { java.lang.String label = _settingsGroup.getSelectedTargetRuntime().getProperty(\"switchyard.label\"); isIntegration = label.contains(\"Integration\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4632/buggy-version/eclipse.plugins.org.switchyard.tools.ui.src.org.switchyard.tools.ui.properties.SwitchYardSettingsPropertyPage.java", "BodyUseAPI": ["org.switchyard.tools.ui.common.SwitchYardSettingsGroup.getSelectedTargetRuntime()", "_settingsGroup.getSelectedTargetRuntime().getProperty(java.lang.String)"], "Fixed commit": "9a5486b2431b8f6add7401c53f19ff1275addb89", "Url": "https://api.github.com/repos/apodhrad/tools", "Date": "2015-11-12T17:44:28Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["routeActivity.getRoute().getBusStops()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (busStops != null) { if (busStopMarkers.isEmpty()) { for (org.rudirect.android.data.model.BusStop stop : busStops) { com.google.android.gms.maps.model.MarkerOptions markerOptions = new com.google.android.gms.maps.model.MarkerOptions().position(getLatLng(stop.getLatitude(), stop.getLongitude())).title(stop.getTitle()); if (!(stop.isActive())) { markerOptions.icon(com.google.android.gms.maps.model.BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_AZURE)); } busStopMarkers.add(mMap.addMarker(markerOptions)); } }else { for (int i = 0; i < (busStops.length); i++) { if (!(busStops[i].isActive())) { busStopMarkers.get(i).setIcon(com.google.android.gms.maps.model.BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_AZURE)); }else { busStopMarkers.get(i).setIcon(com.google.android.gms.maps.model.BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_RED)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7155/buggy-version/app.src.main.java.org.rudirect.android.fragment.BusMapFragment.java", "BodyUseAPI": ["busStops[i].isActive()"], "Fixed commit": "f0e072a31537704c12cccd46f2011c6f7976ead2", "Url": "https://api.github.com/repos/churichard/ru-direct", "Date": "2016-04-08T22:17:45Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (accessToken != null) requestBuilder.header(com.paulvarry.intra42.api.ServiceGenerator.HEADER_KEY_API_AUTH, (((accessToken.tokenType) + \" \") + (accessToken.accessToken)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1777/buggy-version/app.src.main.java.com.paulvarry.intra42.api.ServiceGenerator.java", "BodyUseAPI": ["Request.Builder.header(java.lang.String,(((accessToken.tokenType) + \" \") + (accessToken.accessToken)))"], "Fixed commit": "213cb001d3ace689357876d77594ffa8237b4fd8", "Url": "https://api.github.com/repos/pvarry/intra42", "Date": "2017-11-20T23:07:40Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (app.userIsLogged(allowRedirectWrongAuth)) com.paulvarry.intra42.api.ServiceGenerator.httpClient.addInterceptor(com.paulvarry.intra42.api.ServiceGenerator.getHeaderInterceptor(com.paulvarry.intra42.api.ServiceGenerator.accessTokenIntra42));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1777/buggy-version/app.src.main.java.com.paulvarry.intra42.api.ServiceGenerator.java", "BodyUseAPI": [], "Fixed commit": "213cb001d3ace689357876d77594ffa8237b4fd8", "Url": "https://api.github.com/repos/pvarry/intra42", "Date": "2017-11-20T23:07:40Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.ByteBuffer.remaining()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bufferedBytes > 0) { curArrayLength = bufferedBytes; }else { curArrayLength = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6186/buggy-version/src.net.meisen.general.genmisc.resources.BaseByteBufferReader.java", "BodyUseAPI": [], "Fixed commit": "ccfc94b62c5fa15eb916da52d2a41e52271923d7", "Url": "https://api.github.com/repos/pmeisen/gen-misc", "Date": "2014-05-29T12:59:56Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.latestVersion) != null) { this.latestVersionLastUpdate = latestVersion.getStringLastUpdated(); this.latestVersionName = latestVersion.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/68/buggy-version/src.application.Query.java", "BodyUseAPI": [], "Fixed commit": "ba66ed57c6add9f36f2bd2a41150e3fb1ea0a0ce", "Url": "https://api.github.com/repos/aianta/codepile-cypher-workbench", "Date": "2017-04-10T03:02:27Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lowerHalf.contains(median)) { lowerHalf.remove(median); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4057/buggy-version/src.me.nickpierson.StatsCalculator.basic.BasicModel.java", "BodyUseAPI": ["java.util.List<java.lang.Double>.remove(double)"], "Fixed commit": "7488b67617500790b9b98d6216fab9a75c123fae", "Url": "https://api.github.com/repos/nkcrpn/Stats-Calculator", "Date": "2014-02-13T04:09:59Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (upperHalf.contains(median)) { upperHalf.remove(median); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4057/buggy-version/src.me.nickpierson.StatsCalculator.basic.BasicModel.java", "BodyUseAPI": ["java.util.List<java.lang.Double>.remove(double)"], "Fixed commit": "7488b67617500790b9b98d6216fab9a75c123fae", "Url": "https://api.github.com/repos/nkcrpn/Stats-Calculator", "Date": "2014-02-13T04:09:59Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { progressBar = new android.widget.ProgressBar(context, null, 0, android.R.style.Widget_Holo_ProgressBar); }else { progressBar = new android.widget.ProgressBar(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/178/buggy-version/library.src.main.java.me.sjun.assholelibrary.Asshole.java", "BodyUseAPI": [], "Fixed commit": "85e54bafb0efd2cf6e7b399c3098a314657d3a4a", "Url": "https://api.github.com/repos/shenwenjun/Asshole", "Date": "2017-03-27T16:28:03Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.m_fuelStateMachine.m_timeoutEvent) == (com.ezhang.pop.ui.FuelStateMachine.EmEvent.SuburbEvent)) { m_statusText.setText(\"Unable to get suburb. Probably because network is disabled.\"); }else if ((this.m_fuelStateMachine.m_timeoutEvent) == (com.ezhang.pop.ui.FuelStateMachine.EmEvent.FuelInfoEvent)) { m_statusText.setText(\"Unable to get fuel info. Probably because network is disabled.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3074/buggy-version/src.com.ezhang.pop.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "99b08fd27480fa8d62c3a3002d39f1e8be21fee7", "Url": "https://api.github.com/repos/ebencheung/Pop", "Date": "2013-05-07T02:49:33Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(startAction)) { startToWork(); startAction = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8271/buggy-version/src.com.isrtk.nihtfti.MainService.java", "BodyUseAPI": [], "Fixed commit": "d26eb9439ab6ebe2ef6704a13e35398fde073bd9", "Url": "https://api.github.com/repos/jackteldan/nihtafti", "Date": "2014-06-19T21:47:03Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rest > 21) { char S1 = charAt(((bp) + 21)); if ((S1 >= '0') && (S1 <= '9')) { millis = (millis * 10) + (S1 - '0'); millisLen = 2; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8322/buggy-version/src.main.java.com.alibaba.fastjson.parser.JSONScanner.java", "BodyUseAPI": [], "Fixed commit": "0410267354178ae8788d3d435fdcd654f5d30caf", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-01-11T08:27:46Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loadJobs) game.getEventManager().register(this, teJobs);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8544/buggy-version/src.com.erigitic.main.TotalEconomy.java", "BodyUseAPI": [], "Fixed commit": "16d34534f769fd28111deb84c452860d71cd8584", "Url": "https://api.github.com/repos/Erigitic/TotalEconomy", "Date": "2015-07-17T17:28:14Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTaskRoot())) { final android.content.Intent intent = getIntent(); final java.lang.String intentAction = intent.getAction(); if (((intent.hasCategory(Intent.CATEGORY_LAUNCHER)) && (intentAction != null)) && (intentAction.equals(Intent.ACTION_MAIN))) { finish(); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8357/buggy-version/app.src.main.java.reports.payu.com.app.payureports.LoginSignUpActivity.java", "BodyUseAPI": [], "Fixed commit": "240880e0ba32fa11ca2aa167ffba8c7160b74f4e", "Url": "https://api.github.com/repos/shrutivig/payUReports", "Date": "2016-05-17T10:40:31Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (out != null) { out.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4/buggy-version/gde-backend.src.main.java.com.nagarro.gde.webservice.EligoServiceClient.java", "BodyUseAPI": ["java.io.OutputStream.close()"], "Fixed commit": "d88d8dedcf9119fea46212ce52f826b6414f247c", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-02-25T10:14:58Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (in != null) { in.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4/buggy-version/gde-backend.src.main.java.com.nagarro.gde.webservice.EligoServiceClient.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "d88d8dedcf9119fea46212ce52f826b6414f247c", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-02-25T10:14:58Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((long) (req.getSession().getAttribute(\"user_id\"))) == target_user_id) { req.getSession().setAttribute(\"user_username\", target.getUsername()); req.getSession().setAttribute(\"user_fname\", target.getFname()); req.getSession().setAttribute(\"user_lname\", target.getLname()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5270/buggy-version/src.facebroke.Settings.java", "BodyUseAPI": ["req.getSession().setAttribute(java.lang.String,target.getFname())", "javax.servlet.http.HttpServletRequest.getSession()", "req.getSession().setAttribute(java.lang.String,target.getUsername())", "javax.servlet.http.HttpServletRequest.getSession()", "req.getSession().setAttribute(java.lang.String,target.getLname())", "javax.servlet.http.HttpServletRequest.getSession()"], "Fixed commit": "363f97c4c5634178d86235cddb9a7a1d118511a3", "Url": "https://api.github.com/repos/softwaresecured/FaceBroke", "Date": "2017-11-10T14:24:10Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.drinviewer.droiddrinviewer.DrinHostCollection.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (data != null) { serverNameLine.setText(data.hostname); serverIPLine.setText(data.address); iconPaired.setImageDrawable(context.getResources().getDrawable((data.isPaired ? android.R.drawable.btn_star_big_on : android.R.drawable.btn_star_big_off))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/135/buggy-version/DroidDrinViewer.src.com.drinviewer.droiddrinviewer.DrinHostAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(data.address)", "android.widget.TextView.setText(data.hostname)", "context.getResources().getDrawable((data.isPaired ? android.R.drawable.btn_star_big_on : android.R.drawable.btn_star_big_off))", "android.widget.ImageView.setImageDrawable(context.getResources().getDrawable((data.isPaired ? android.R.drawable.btn_star_big_on : android.R.drawable.btn_star_big_off)))"], "Fixed commit": "e760f387091508617cefc28f10dddb0c60c52570", "Url": "https://api.github.com/repos/HobieCat/drinviewer", "Date": "2014-01-23T22:23:08Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(m_messageList.contains(uim))) { if ((m_messageList) == (java.util.Collections.EMPTY_LIST)) m_messageList = new java.util.ArrayList<to.etc.domui.dom.errors.UIMessage>(15); m_messageList.add(uim); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7515/buggy-version/to.etc.domui.src.main.java.to.etc.domui.dom.errors.ErrorFenceHandler.java", "BodyUseAPI": ["java.util.List<to.etc.domui.dom.errors.UIMessage>.add(to.etc.domui.dom.errors.UIMessage)"], "Fixed commit": "d418811035be9da96c31d5bc0e47ffadc367eea5", "Url": "https://api.github.com/repos/fjalvingh/domui", "Date": "2017-11-23T16:00:59Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jToggleButton1.isSelected()) { populateServicesLabels(); regionChanged = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/532/buggy-version/src.RITOPLS.GUI.java", "BodyUseAPI": [], "Fixed commit": "14ff904243ec7313050d1e3581af5f05dc7d8427", "Url": "https://api.github.com/repos/chrismeyers/rito-pls", "Date": "2015-06-13T20:00:16Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxCPUField.getText().length()) == 0) { return com.seancheey.Controller.MAX_CPU; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5835/buggy-version/src.com.seancheey.gui.FunctionPanel.java", "BodyUseAPI": [], "Fixed commit": "8d8df9bc69f9baa0c5b483f8c90fbfa4b5d1d57a", "Url": "https://api.github.com/repos/Seancheey/RobocraftCalculator", "Date": "2016-04-26T14:54:03Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position == (currentFragment)) { mDrawerLayout.closeDrawer(mDrawerList); }else { currentFragment = position; displayView(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3441/buggy-version/app.src.main.java.com.cs371m.strengthpal.MyActivity.java", "BodyUseAPI": ["com.cs371m.strengthpal.MyActivity.DrawerItemClickListener.displayView(int)"], "Fixed commit": "57fe1ba14cd16ae44ee638d5f33a6517b76eb5b4", "Url": "https://api.github.com/repos/ncho91/StrengthPal", "Date": "2014-12-02T18:50:32Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cursor != null) { cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7658/buggy-version/app.src.main.java.com.example.app.ContentProviders.TokenProvider.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "261a4bb2f08f8065762381630c391abb3e48442d", "Url": "https://api.github.com/repos/chrisessley/ContentProviderExamples", "Date": "2014-01-29T18:49:50Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cursor != null) { cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7658/buggy-version/app.src.main.java.com.example.app.ContentProviders.UserProvider.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "261a4bb2f08f8065762381630c391abb3e48442d", "Url": "https://api.github.com/repos/chrisessley/ContentProviderExamples", "Date": "2014-01-29T18:49:50Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.frankandrobot.reminderer.parser.GrammarRule.RepeatsToken.Type.toType(get(com.frankandrobot.reminderer.datastructures.Task.Task_Int.repeatsType))) != (com.frankandrobot.reminderer.parser.GrammarRule.RepeatsToken.Type.HOUR)) { dueDate = new org.joda.time.LocalDate(get(com.frankandrobot.reminderer.datastructures.Task.Task_Parser_Calendar.dueDate).getDate()); today = org.joda.time.LocalDate.now(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6883/buggy-version/src.com.frankandrobot.reminderer.datastructures.Task.java", "BodyUseAPI": [], "Fixed commit": "887b8826bcc54f61a6798ca749e50b3f59991348", "Url": "https://api.github.com/repos/frankandrobot/Reminderer", "Date": "2013-08-13T02:38:21Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (current.containsKey(org.n52.sos.ds.datasource.HIBERNATE_DATASOURCE_TIME_STRING_Z)) { settings.put(org.n52.sos.ds.datasource.TIME_STRING_Z_KEY, java.lang.Boolean.valueOf(current.getProperty(org.n52.sos.ds.datasource.HIBERNATE_DATASOURCE_TIME_STRING_Z))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4341/buggy-version/hibernate.datasource.common.src.main.java.org.n52.sos.ds.datasource.AbstractHibernateFullDBDatasource.java", "BodyUseAPI": ["java.util.Properties.getProperty(org.n52.sos.ds.datasource.HIBERNATE_DATASOURCE_TIME_STRING_Z)", "java.util.Map<java.lang.String, java.lang.Object>.put(org.n52.sos.ds.datasource.TIME_STRING_Z_KEY,java.lang.Boolean)", "java.lang.Boolean.valueOf(java.lang.String)"], "Fixed commit": "8383a6fdc320e8af2aefb903d91de3484d38f8d1", "Url": "https://api.github.com/repos/autermann/SOS", "Date": "2016-09-27T08:53:35Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (current.containsKey(org.n52.sos.ds.datasource.HIBERNATE_DATASOURCE_TIME_STRING_FORMAT)) { settings.put(org.n52.sos.ds.datasource.TIME_STRING_FORMAT_KEY, current.getProperty(org.n52.sos.ds.datasource.HIBERNATE_DATASOURCE_TIME_STRING_FORMAT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4341/buggy-version/hibernate.datasource.common.src.main.java.org.n52.sos.ds.datasource.AbstractHibernateFullDBDatasource.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(org.n52.sos.ds.datasource.TIME_STRING_FORMAT_KEY,java.lang.String)", "java.util.Properties.getProperty(org.n52.sos.ds.datasource.HIBERNATE_DATASOURCE_TIME_STRING_FORMAT)"], "Fixed commit": "8383a6fdc320e8af2aefb903d91de3484d38f8d1", "Url": "https://api.github.com/repos/autermann/SOS", "Date": "2016-09-27T08:53:35Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (settings.containsKey(org.n52.sos.ds.datasource.TIMEZONE_KEY)) { p.put(org.n52.sos.ds.datasource.HIBERNATE_DATASOURCE_TIMEZONE, settings.get(org.n52.sos.ds.datasource.TIMEZONE_KEY)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4341/buggy-version/hibernate.datasource.common.src.main.java.org.n52.sos.ds.datasource.AbstractHibernateFullDBDatasource.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(org.n52.sos.ds.datasource.TIMEZONE_KEY)", "java.util.Properties.put(org.n52.sos.ds.datasource.HIBERNATE_DATASOURCE_TIMEZONE,java.lang.Object)"], "Fixed commit": "8383a6fdc320e8af2aefb903d91de3484d38f8d1", "Url": "https://api.github.com/repos/autermann/SOS", "Date": "2016-09-27T08:53:35Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (settings.containsKey(org.n52.sos.ds.datasource.TIME_STRING_Z_KEY)) { p.put(org.n52.sos.ds.datasource.HIBERNATE_DATASOURCE_TIME_STRING_Z, settings.get(org.n52.sos.ds.datasource.TIME_STRING_Z_KEY).toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4341/buggy-version/hibernate.datasource.common.src.main.java.org.n52.sos.ds.datasource.AbstractHibernateFullDBDatasource.java", "BodyUseAPI": ["java.util.Properties.put(org.n52.sos.ds.datasource.HIBERNATE_DATASOURCE_TIME_STRING_Z,settings.get(org.n52.sos.ds.datasource.TIME_STRING_Z_KEY).toString())", "java.lang.Object.toString()", "java.util.Map<java.lang.String, java.lang.Object>.get(org.n52.sos.ds.datasource.TIME_STRING_Z_KEY)"], "Fixed commit": "8383a6fdc320e8af2aefb903d91de3484d38f8d1", "Url": "https://api.github.com/repos/autermann/SOS", "Date": "2016-09-27T08:53:35Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (settings.containsKey(org.n52.sos.ds.datasource.TIME_STRING_FORMAT_KEY)) { p.put(org.n52.sos.ds.datasource.HIBERNATE_DATASOURCE_TIME_STRING_FORMAT, settings.get(org.n52.sos.ds.datasource.TIME_STRING_FORMAT_KEY)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4341/buggy-version/hibernate.datasource.common.src.main.java.org.n52.sos.ds.datasource.AbstractHibernateFullDBDatasource.java", "BodyUseAPI": ["java.util.Properties.put(org.n52.sos.ds.datasource.HIBERNATE_DATASOURCE_TIME_STRING_FORMAT,java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.get(org.n52.sos.ds.datasource.TIME_STRING_FORMAT_KEY)"], "Fixed commit": "8383a6fdc320e8af2aefb903d91de3484d38f8d1", "Url": "https://api.github.com/repos/autermann/SOS", "Date": "2016-09-27T08:53:35Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (current.containsKey(org.n52.sos.ds.datasource.HIBERNATE_DATASOURCE_TIMEZONE)) { settings.put(org.n52.sos.ds.datasource.TIMEZONE_KEY, current.getProperty(org.n52.sos.ds.datasource.HIBERNATE_DATASOURCE_TIMEZONE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4341/buggy-version/hibernate.datasource.common.src.main.java.org.n52.sos.ds.datasource.AbstractHibernateFullDBDatasource.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(org.n52.sos.ds.datasource.TIMEZONE_KEY,java.lang.String)", "java.util.Properties.getProperty(org.n52.sos.ds.datasource.HIBERNATE_DATASOURCE_TIMEZONE)"], "Fixed commit": "8383a6fdc320e8af2aefb903d91de3484d38f8d1", "Url": "https://api.github.com/repos/autermann/SOS", "Date": "2016-09-27T08:53:35Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index == (-1)) { max = org.apache.commons.math3.fraction.BigFraction.ZERO; }else { max = sd.getEntry(index).divide(check.getEntry(index)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5968/buggy-version/src.model.LP.java", "BodyUseAPI": ["org.apache.commons.math3.linear.FieldVector<org.apache.commons.math3.fraction.BigFraction>.getEntry(int)", "org.apache.commons.math3.linear.FieldVector<org.apache.commons.math3.fraction.BigFraction>.getEntry(int)", "sd.getEntry(index).divide(check.getEntry(index))"], "Fixed commit": "04b303d55af87143cc298db43ccdaeb6a276ab29", "Url": "https://api.github.com/repos/andern/pplex", "Date": "2012-09-12T10:39:15Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (id > (ids.get())) { ids.set(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5669/buggy-version/rapidoid-inmem.src.main.java.org.rapidoid.inmem.InMem.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicLong.set(java.lang.Long)"], "Fixed commit": "ad2726af9734775908da26bec91528b382ae2a8b", "Url": "https://api.github.com/repos/rapidoid/rapidoid", "Date": "2014-11-20T17:04:41Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((computerOverallScore) > 100) { android.widget.Toast.makeText(getApplicationContext(), \"Computer Wins!!\", Toast.LENGTH_LONG).show(); status.setText(\"Computer : I won the Game !!!\"); enableButtons(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7299/buggy-version/Scarnes-Dice.app.src.main.java.amrith.com.scarnesdice.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c789b7dc7c0f39a698ba83ddf4d4c15e9a24252f", "Url": "https://api.github.com/repos/amrithm98/Applied_CS_With_Android-Code", "Date": "2017-06-02T07:04:02Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userOverallScore) >= 100) { android.widget.Toast.makeText(getApplicationContext(), \"You Won!!\", Toast.LENGTH_SHORT).show(); status.setText(\"You Are the Winner!!\"); enableButtons(false); }else { computerTurn(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7299/buggy-version/Scarnes-Dice.app.src.main.java.amrith.com.scarnesdice.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c789b7dc7c0f39a698ba83ddf4d4c15e9a24252f", "Url": "https://api.github.com/repos/amrithm98/Applied_CS_With_Android-Code", "Date": "2017-06-02T07:04:02Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (enemy != null) ch.attack(enemy);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3680/buggy-version/src.com.shatteredpixel.shatteredpixeldungeon.sprites.TenguSprite.java", "BodyUseAPI": ["com.shatteredpixel.shatteredpixeldungeon.sprites.TenguSprite.1.attack(com.shatteredpixel.shatteredpixeldungeon.actors.Char)"], "Fixed commit": "2bb18fcd14b5e30aad816623a228731a4a63374c", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2015-12-24T08:47:13Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enemy == null) || (!(enemy.isAlive()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3680/buggy-version/src.com.shatteredpixel.shatteredpixeldungeon.actors.Char.java", "BodyUseAPI": [], "Fixed commit": "2bb18fcd14b5e30aad816623a228731a4a63374c", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2015-12-24T08:47:13Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((events.EventControlPanel.events) != null) { rv = !(events.EventControlPanel.events.isEmpty()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/198/buggy-version/src.events.EventControlPanel.java", "BodyUseAPI": [], "Fixed commit": "bdeb8ebc7d26714e00003d4aed885be0ffb31eb8", "Url": "https://api.github.com/repos/Enifs/EventHandling", "Date": "2015-07-01T16:04:03Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.karumi.dexter.Dexter.instance) != null) { com.karumi.dexter.Dexter.instance.onActivityDestroyed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7827/buggy-version/dexter.src.main.java.com.karumi.dexter.Dexter.java", "BodyUseAPI": [], "Fixed commit": "3f4a83b42372e9569dd55b8c6bdaffe2f38ae92c", "Url": "https://api.github.com/repos/Coppernic/Dexter", "Date": "2017-05-11T14:42:47Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["holder.toolbar.getMenu().size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (menuSize == 0) { holder.toolbar.inflateMenu(R.menu.note_view_menu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/334/buggy-version/app.src.main.java.com.brandonbahret.simplenote.FirebaseNoteAdapter.java", "BodyUseAPI": [], "Fixed commit": "f76fe936a5f965ffb08b89c05276234eea1fd6c1", "Url": "https://api.github.com/repos/BrandonBahret/SimpleNote--android-app--", "Date": "2017-09-04T22:41:57Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(pageRequest.getRequest().getContextPath())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (indexOfContextPath >= 0) { url = url.substring(indexOfContextPath); log.debug((\"Relative redirect:\" + url)); return url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8940/buggy-version/omod.src.main.java.org.openmrs.module.referenceapplication.page.controller.LoginPageController.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "5f7fa45707657b176dd8f6040f45d00fce271b51", "Url": "https://api.github.com/repos/openmrs/openmrs-module-referenceapplication", "Date": "2013-08-01T17:56:32Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((n) == 1) && ((size) == 1)) { compareIdx = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8506/buggy-version/src.algorithms.imageProcessing.FixedSizeSortedVector.java", "BodyUseAPI": [], "Fixed commit": "d527da6967816500ffd1e50915da22ebee89ea56", "Url": "https://api.github.com/repos/nking/curvature-scale-space-corners-and-transformations", "Date": "2015-11-09T18:19:16Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (fixedCapacity < 1) { throw new java.lang.IllegalArgumentException(((\"fixedCapacity must be a positive non zero (arg was \" + fixedCapacity) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8506/buggy-version/src.algorithms.imageProcessing.FixedSizeSortedVector.java", "BodyUseAPI": [], "Fixed commit": "d527da6967816500ffd1e50915da22ebee89ea56", "Url": "https://api.github.com/repos/nking/curvature-scale-space-corners-and-transformations", "Date": "2015-11-09T18:19:16Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((business) == null) { com.idega.util.expression.ELUtil.getInstance().autowire(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/387/buggy-version/src.java.is.idega.idegaweb.pheidippides.webservice.isb.server.ISBServiceSoapBindingImpl.java", "BodyUseAPI": [], "Fixed commit": "2ef3de8debd7e5de65b2999beec4416d7dd1b4c2", "Url": "https://api.github.com/repos/bluebottle/is.idega.idegaweb.block.pheidippides", "Date": "2012-05-15T11:00:12Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((device) != null) { message = \" connection=\" + (device.getConnection().getDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2164/buggy-version/NFCommunicator.nfcommunicator.src.main.java.com.neofect.communicator.CommunicationController.java", "BodyUseAPI": [], "Fixed commit": "9d1533502ac8276f3e70e8e20ef14f4ef1f48bf3", "Url": "https://api.github.com/repos/Neofect/Communicator", "Date": "2017-10-20T13:18:40Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.aic2014.onion.directorynode.LoadBalancingChainCalculator.StatsInfoHolder.getStats()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (stats != null) { if ((stats.getErrors()) > 0) { currentWeight = currentWeight / ((double) (stats.getErrors())); } if ((stats.getMessagesProcessed()) > 0) { currentWeight = currentWeight * ((double) (stats.getMessagesProcessed())); } if ((stats.getTimeSpentInSuccessfulRequests()) > 0) { currentWeight = currentWeight / ((double) (stats.getTimeSpentInSuccessfulRequests())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5593/buggy-version/code.onion.onion-directorynode.src.main.java.com.github.aic2014.onion.directorynode.LoadBalancingChainCalculator.java", "BodyUseAPI": ["com.github.aic2014.onion.model.ChainNodeRoutingStats.getMessagesProcessed()", "com.github.aic2014.onion.model.ChainNodeRoutingStats.getTimeSpentInSuccessfulRequests()", "com.github.aic2014.onion.model.ChainNodeRoutingStats.getTimeSpentInSuccessfulRequests()", "com.github.aic2014.onion.model.ChainNodeRoutingStats.getErrors()", "com.github.aic2014.onion.model.ChainNodeRoutingStats.getErrors()", "com.github.aic2014.onion.model.ChainNodeRoutingStats.getMessagesProcessed()"], "Fixed commit": "b1e1db4289a9830fd9c573d2cf91bd12719a3589", "Url": "https://api.github.com/repos/fkleedorfer/aic2014", "Date": "2015-01-24T16:31:12Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p.x) == (-1)) { now = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7052/buggy-version/src.ui.PaintPanel.java", "BodyUseAPI": [], "Fixed commit": "ac8bf4dc32d6102ebd358b4ad9febd24dccb3ec6", "Url": "https://api.github.com/repos/notmorbos/DrawMyThing", "Date": "2015-03-07T16:10:31Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ca.rmen.nounours.nounours.DEFAULT_THEME_ID.equals(id)) theme = getDefaultTheme(); else theme = getThemes().get(id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2210/buggy-version/app.src.main.java.ca.rmen.nounours.nounours.AndroidNounours.java", "BodyUseAPI": ["getThemes().get(java.lang.String)"], "Fixed commit": "1a3171d4e4abfabadd597633524764701d2da054", "Url": "https://api.github.com/repos/caarmen/nounours-android", "Date": "2015-10-10T10:26:52Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Call.Type.HEARTBEAT_S2N) == type) return heartbeatTasks.get(tid); else return tasks.get(tid);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5067/buggy-version/src.nameserver.NameServer.java", "BodyUseAPI": [], "Fixed commit": "af6e54ae1587b52ed45786f172f36b49f2035509", "Url": "https://api.github.com/repos/dshnightmare/DistributedFileSystem", "Date": "2014-07-05T16:43:18Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.world) != (ep.world)) { sentChunks.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2708/buggy-version/src.com.bergerkiller.bukkit.nolagg.chunks.ChunkSendQueue.java", "BodyUseAPI": [], "Fixed commit": "7d66b6b9d5e455fdb467050562e000d29fe99450", "Url": "https://api.github.com/repos/bergerkiller/NoLagg", "Date": "2012-10-04T15:19:48Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (effects != null) if (!(effects.isEmpty())) { for (be.infogroep.optalk.PotionEffect P : effects) { message[index] = ((P.getType().getName()) + \": \") + (P.getDuration()); } }else { message[index] = \"None\"; index = index + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7659/buggy-version/OpTalk.OpTalk.src.be.infogroep.optalk.ItemShare.java", "BodyUseAPI": [], "Fixed commit": "aff6d5f9e86b6921ea28600b2af5e358e271dac3", "Url": "https://api.github.com/repos/spartam/Bukkit", "Date": "2013-06-20T15:51:07Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.text.Editable.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((newText.length()) < 1) { lastGoodInput = \"\"; editText.setRawValue(0); editText.setText(\"\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3782/buggy-version/currencyedittext.src.main.java.com.blackcat.currencyedittext.CurrencyTextWatcher.java", "BodyUseAPI": [], "Fixed commit": "91f8c793aafcc7084230bc3cf6b4f97e098d5930", "Url": "https://api.github.com/repos/BlacKCaT27/CurrencyEditText", "Date": "2017-07-14T00:38:30Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (loadCrashNotificationValue(context)) { android.content.Intent serviceIntent = new android.content.Intent(context, com.randmcnally.crashdetection.services.CNService.class); context.startService(serviceIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2856/buggy-version/CrashDetection.app.src.main.java.com.randmcnally.crashdetection.services.OnBootReceiver.java", "BodyUseAPI": ["android.content.Context.startService(android.content.Intent)"], "Fixed commit": "6eddef365e2c5a7ff7cd173dda459317f803f845", "Url": "https://api.github.com/repos/ccolteu/crashdetection", "Date": "2016-08-10T16:48:26Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((className != null) && (!(\"null\".equals(className)))) { clazz = java.lang.Class.forName(className); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2533/buggy-version/src.edu.umass.cs.reconfiguration.ReconfigurationConfig.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)"], "Fixed commit": "63767f7013300c827a8272beed060eb139596410", "Url": "https://api.github.com/repos/MobilityFirst/gigapaxos", "Date": "2015-11-20T02:04:04Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((className != null) && (!(\"null\".equals(className)))) { clazz = java.lang.Class.forName(className); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2533/buggy-version/src.edu.umass.cs.gigapaxos.PaxosConfig.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)"], "Fixed commit": "63767f7013300c827a8272beed060eb139596410", "Url": "https://api.github.com/repos/MobilityFirst/gigapaxos", "Date": "2015-11-20T02:04:04Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((responseClass == null) || (responseClass.equals(java.lang.Void.class))) { if (((operation.getResponses()) != null) && (!(operation.getResponses().isEmpty()))) { com.wordnik.swagger.models.Response apiOperationResponse = operation.getResponses().get(java.lang.String.valueOf(apiResponse.code())); if (apiOperationResponse != null) { response.setSchema(apiOperationResponse.getSchema()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6867/buggy-version/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java", "BodyUseAPI": [], "Fixed commit": "2bea30120900b55aaff712fdaffd09a31a51e93d", "Url": "https://api.github.com/repos/kongchen/swagger-maven-plugin", "Date": "2015-05-18T23:38:22Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URI.getScheme()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"vm\".equals(scheme)) { return connectorURI; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8550/buggy-version/activemq-broker.src.main.java.org.apache.activemq.broker.PublishedAddressPolicy.java", "BodyUseAPI": [], "Fixed commit": "37c46b9b42c8e93378afb101815a857d1c86dc4e", "Url": "https://api.github.com/repos/bdjdev/activemq", "Date": "2015-06-23T10:25:13Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line = readFile.nextLine()) != null) { java.lang.System.out.println(line); outStream.writeBytes((line + (delim))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7341/buggy-version/src.Server.RequestHandler.java", "BodyUseAPI": [], "Fixed commit": "b6f7f5a29d043917b354d0895db27de2b3124497", "Url": "https://api.github.com/repos/juda96/csci-2020u-TeamHypeProjects", "Date": "2016-04-08T06:48:37Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jclouds.blobstore.BlobStoreContextFactory.createContext(provider.getProviderBService(),con.getLogin(),con.getPassword())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (blobContext == null) { java.lang.System.out.println(\"bunda\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2381/buggy-version/src.main.java.eclis.jcloudsviewer.model.JVBlobStoreContextFactory.java", "BodyUseAPI": [], "Fixed commit": "3005ed26e864a9d8f8079b422d166ed02c143da6", "Url": "https://api.github.com/repos/Eclis/Jclouds-Viewer", "Date": "2012-06-20T02:23:09Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DEBUG) { android.util.Log.i(mTag, (((\"onFling: parentScrollX = \" + parentScrollX) + \" ,parentScrollY = \") + parentScrollY)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4839/buggy-version/Android-stick-navigation-layout.android-nestedscroll.src.main.java.com.heaven7.android.scroll.NestedScrollHelper.java", "BodyUseAPI": [], "Fixed commit": "731b92a869a417ca5c57ff2daaf0119f19265ddd", "Url": "https://api.github.com/repos/LightSun/Android-sticky-navigation-layout", "Date": "2016-11-17T12:07:57Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (campus.equals(\"DVL\")) port = 13325; else if (campus.equals(\"KKL\")) port = 13335; else if (campus.equals(\"WST\")) port = 13345;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/773/buggy-version/DistributedRoomResrvSys_lyc.src.RoomResrvSys.RequestWorker.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "40778612e2e53a20859a2a86031c5aa200e2bbb0", "Url": "https://api.github.com/repos/WingCuengRay/DistributedRoomRsrvSys", "Date": "2017-12-08T08:41:41Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((label_x.size()) > 0) { gc.setForeground(media.get(org.csstudio.swt.rtplot.internal.YAxisImpl.getColor())); org.csstudio.swt.rtplot.internal.util.GraphicsUtils.drawVerticalText(gc, label_x.get(0), label_y.get(0), org.csstudio.swt.rtplot.internal.YAxisImpl.getName(), SWT.UP); gc.setForeground(old_fg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3188/buggy-version/applications.plugins.org.csstudio.swt.rtplot.src.org.csstudio.swt.rtplot.internal.YAxisImpl.java", "BodyUseAPI": ["org.csstudio.swt.rtplot.internal.util.GraphicsUtils.drawVerticalText(org.eclipse.swt.graphics.GC,label_x.get(0),label_y.get(0),org.csstudio.swt.rtplot.internal.YAxisImpl.getName(),SWT.UP)", "org.csstudio.swt.rtplot.internal.util.IntList.get(int)"], "Fixed commit": "40fe40f14344d60fd5dd69c4aba9775bfa87c349", "Url": "https://api.github.com/repos/ControlSystemStudio/cs-studio", "Date": "2014-12-03T20:37:26Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((grid[c.getXCoord()][c.getYCoord()]) != 1) && ((grid[c.getXCoord()][c.getYCoord()]) != 2)) { setGrid(c.getXCoord(), c.getYCoord(), getCurrentColor()); }else { javax.swing.JOptionPane.showMessageDialog(null, \"You can't put your pieces over other players!\", \"Error\", javax.swing.JOptionPane.ERROR_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/9159/buggy-version/src.edu.ucsb.cs56.projects.games.gomoku.Gomoku.java", "BodyUseAPI": ["edu.ucsb.cs56.projects.games.gomoku.Controller.getYCoord()", "edu.ucsb.cs56.projects.games.gomoku.Controller.getXCoord()", "edu.ucsb.cs56.projects.games.gomoku.Gomoku.setGrid(c.getXCoord(),c.getYCoord(),int)"], "Fixed commit": "b7611f50d21e15ee4ad8051a04589261d05dc613", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-games-gomoku", "Date": "2017-11-09T00:48:43Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(channelControllers.isEmpty())) selectedTCId = channelControllers.firstKey(); else selectedTCId = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1902/buggy-version/src-plugins.Cell_Blob_Tracking.frameWork.Controller.java", "BodyUseAPI": ["java.util.SortedMap<java.lang.Integer, frameWork.ChannelController<? extends frameWork.Trackable, IT>>.firstKey()"], "Fixed commit": "fd23973299614cae47a2369018568193df76385a", "Url": "https://api.github.com/repos/alex-krull/fiji", "Date": "2012-04-02T16:58:05Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.SortedMap<java.lang.Integer, frameWork.ChannelController<? extends frameWork.Trackable, IT>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cc == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1902/buggy-version/src-plugins.Cell_Blob_Tracking.frameWork.Controller.java", "BodyUseAPI": [], "Fixed commit": "fd23973299614cae47a2369018568193df76385a", "Url": "https://api.github.com/repos/alex-krull/fiji", "Date": "2012-04-02T16:58:05Z"},
{"Line": "=>764", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((line.contains(\"=\")) && ((line.split(\"=\").length) == 2)) && (line.split(\"=\")[1].trim().startsWith(\"0x\"))) { Analyzer.bw.write(((((\"assembly~!~\" + (Analyzer.lineNumber)) + \"|\") + line) + (java.lang.System.lineSeparator()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1063/buggy-version/Analyzer.java", "BodyUseAPI": ["java.io.BufferedWriter.write(java.lang.String)"], "Fixed commit": "1fcfb34f64d8c70dce7b09d50a5750a4fe37d696", "Url": "https://api.github.com/repos/JamesWWalker/SecureCvisualJ", "Date": "2017-09-19T16:32:39Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.github.onepiecex.session.share.core.util.CookieEncryption>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == cookieEncryption) { synchronized(com.github.onepiecex.session.share.core.util.CookieEncryption.class) { if (null == cookieEncryption) { cookieEncryption = new com.github.onepiecex.session.share.core.util.CookieEncryption(secret); com.github.onepiecex.session.share.core.util.CookieEncryption.cookieEncryptionMap.put(secret, cookieEncryption); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/9272/buggy-version/onepiecex-session-share-core.src.main.java.com.github.onepiecex.session.share.core.util.CookieEncryption.java", "BodyUseAPI": [], "Fixed commit": "f225c77b3ae9020c2d09849701b55ac27c73cccd", "Url": "https://api.github.com/repos/onepiecex/session-share", "Date": "2017-06-30T17:05:28Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mCurrentFrame) < (Constants.LAST_FRAME)) { if (java.util.Arrays.equals(mPinState[mCurrentFrame][0], Constants.FRAME_PINS_DOWN)) { int firstBallNextFrame = ca.josephroque.bowlingcompanion.data.GameScore.getValueOfFrame(mPinState[((mCurrentFrame) + 1)][0]); if ((firstBallNextFrame == 15) && ((mCurrentFrame) < ((Constants.LAST_FRAME) - 1))) { possibleScore -= 15; possibleScore -= ca.josephroque.bowlingcompanion.data.GameScore.getValueOfFrame(mPinState[((mCurrentFrame) + 2)][0]); }else { possibleScore -= ca.josephroque.bowlingcompanion.data.GameScore.getValueOfFrame(mPinState[((mCurrentFrame) + 1)][1]); } }else if (java.util.Arrays.equals(mPinState[mCurrentFrame][1], Constants.FRAME_PINS_DOWN)) { possibleScore -= ca.josephroque.bowlingcompanion.data.GameScore.getValueOfFrame(mPinState[((mCurrentFrame) + 1)][0]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5865/buggy-version/BC-Android-Free.app.src.main.java.ca.josephroque.bowlingcompanion.GameActivity.java", "BodyUseAPI": ["ca.josephroque.bowlingcompanion.data.GameScore.getValueOfFrame(boolean[])", "ca.josephroque.bowlingcompanion.data.GameScore.getValueOfFrame(boolean[])", "ca.josephroque.bowlingcompanion.data.GameScore.getValueOfFrame(boolean[])", "ca.josephroque.bowlingcompanion.data.GameScore.getValueOfFrame(boolean[])"], "Fixed commit": "e2c30761b0a77a05e67e60f31ff0cc60c80ddf98", "Url": "https://api.github.com/repos/josephroqueca/bowling-companion", "Date": "2015-02-27T00:01:07Z"},
{"Line": "=>1077", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (propName.contains(\" \")) { propName = propName.replace(\" \", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7135/buggy-version/src.main.java.com.dotmarketing.plugin.util.PluginFileMerger.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "27e2271c9265e3162d2a76f047a6758188421fe7", "Url": "https://api.github.com/repos/dotCMS/ant-tooling", "Date": "2017-06-09T22:14:30Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugins.luceneMatching.LuceneMatching.searchForOntologyTermPaths(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((nodePathSet.size()) == 0) nodePathSet = searchForOntologyTermPaths(eachBlock, \"ontologyTermSynonym\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3943/buggy-version/apps.bioshare.plugins.luceneMatching.LuceneMatching.java", "BodyUseAPI": [], "Fixed commit": "b7a78de8c21f3152d132b9944bb00eac1b5911c9", "Url": "https://api.github.com/repos/ChaoPang/molgenis_apps-legacy", "Date": "2013-04-03T23:22:40Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getDiagnosis()) != null) { for (int i = 0; i < (this.getDiagnosis().length); i++) { if (i == 0) { result = result + (this.getDiagosisAtIndex(i)); }else { result = (result + \",\") + (this.getDiagosisAtIndex(i)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/540/buggy-version/LCA_BAG_Sentinella_Library.src.ch.bfh.lca._15h.library.model.DoctorPatientContact.java", "BodyUseAPI": [], "Fixed commit": "84f900620192d421c4219737db6deccc72a921de", "Url": "https://api.github.com/repos/michelet/LCA_BAG_Sentinella", "Date": "2015-11-16T00:14:50Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spatial.getParent()) == null) { node.removeFromParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5430/buggy-version/src.main.java.com.nx.util.jme3.lemur.LemurHelper.java", "BodyUseAPI": [], "Fixed commit": "750576c7a8269ffc3f017bf117673a67ff795aac", "Url": "https://api.github.com/repos/NemesisMate/UtilJME3-Lemur", "Date": "2017-08-11T09:40:27Z"}]}
