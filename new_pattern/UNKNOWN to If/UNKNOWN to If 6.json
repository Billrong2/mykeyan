{"UNKNOWN to If":[{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.vtst.ow.closure.compiler.compile.CompilerRun.getScope(context.getNode())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (scope == null) return java.util.Collections.emptyList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2444/buggy-version/src.eclipse.net.vtst.ow.eclipse.js.closure.src.net.vtst.ow.eclipse.js.closure.editor.contentassist.ClosureCompletionProposalCollector.java", "BodyUseAPI": [], "Fixed commit": "b900762ca44f8ef05a33cd5aa396989e8b3a9f97", "Url": "https://api.github.com/repos/vtst/ow", "Date": "2012-05-05T07:59:47Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lc.getDefLocaleTwin()) != null) { lc.getDefLocaleTwin().removeTwin(lc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5082/buggy-version/src.net.localizethat.model.jpa.LocaleContainerJPAHelper.java", "BodyUseAPI": ["net.localizethat.model.LocaleContainer.getDefLocaleTwin()", "lc.getDefLocaleTwin().removeTwin(net.localizethat.model.LocaleContainer)"], "Fixed commit": "564a811a9791bf22f26a7b77e3190742aaf13174", "Url": "https://api.github.com/repos/RickieES/localizethat", "Date": "2015-07-26T10:31:00Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((current_text) != null) && (!(current_text.isEmpty()))) { g.setColor(java.awt.Color.BLACK); g.drawString(current_text, x, y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2593/buggy-version/src.mudmap2.frontend.GUIElement.ScrollLabel.java", "BodyUseAPI": ["java.awt.Graphics.drawString(java.lang.String,int,int)"], "Fixed commit": "db8eb9d7e848ee3e32532137ae1c21e421dc7b89", "Url": "https://api.github.com/repos/Neop/mudmap2", "Date": "2014-07-23T13:12:19Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (is_in_use) { outstream.println((((\"a \" + (a.get_id())) + \" \") + (a.get_name()))); outstream.println((((((\"acol \" + (a.get_color().getRed())) + \" \") + (a.get_color().getGreen())) + \" \") + (a.get_color().getBlue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2593/buggy-version/src.mudmap2.backend.World.java", "BodyUseAPI": [], "Fixed commit": "db8eb9d7e848ee3e32532137ae1c21e421dc7b89", "Url": "https://api.github.com/repos/Neop/mudmap2", "Date": "2014-07-23T13:12:19Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player == null) { return net.t00thpick1.residence.protection.yaml.YAMLGroupManager.config.getConfigurationSection(\"DefaultSettings\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6190/buggy-version/src.main.java.net.t00thpick1.residence.protection.yaml.YAMLGroupManager.java", "BodyUseAPI": [], "Fixed commit": "9fc13d7f57c11c62a9606cc378049b42e789b969", "Url": "https://api.github.com/repos/t00thpick1/Residence", "Date": "2014-04-02T05:44:24Z"},
{"Line": "=>1220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(itemProperties.containsKey(org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE))) { itemProperties.put(org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE, arrayValueBlockType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6511/buggy-version/plugins.org.wso2.developerstudio.visualdatamapper.diagram.src.org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.java", "BodyUseAPI": ["org.json.simple.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "ccf25aea119b8cb21604baae590bc6c58fb28511", "Url": "https://api.github.com/repos/wso2/devstudio-tooling-esb", "Date": "2016-04-20T14:04:46Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valueMap == null) { throw new java.lang.IllegalArgumentException(\"valueMap is expected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6424/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionCount.java", "BodyUseAPI": [], "Fixed commit": "6c0537ca5aa64c5da6f2d423c8c6923d46a61131", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-22T17:05:03Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (arguments == null) { throw new java.lang.IllegalArgumentException(\"One argument is expected\"); }else if ((arguments.size()) != 1) { throw new java.lang.IllegalArgumentException(((\"One argument was expected, \" + (arguments.size())) + \" were supplied\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6424/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionCount.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "6c0537ca5aa64c5da6f2d423c8c6923d46a61131", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-22T17:05:03Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (actualViewModel == null) { actualViewModel = de.saxsys.mvvmfx.internal.viewloader.ViewLoaderReflectionUtils.createViewModel(loadedController); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3805/buggy-version/mvvmfx.src.main.java.de.saxsys.mvvmfx.internal.viewloader.FxmlViewLoader.java", "BodyUseAPI": [], "Fixed commit": "d667cfd053ed8a5949aab777bddb652a3dc66cde", "Url": "https://api.github.com/repos/sialcasa/mvvmFX", "Date": "2015-08-17T11:21:52Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index > ((length) - 1)) || (index < 0)) { throw new java.lang.ArrayIndexOutOfBoundsException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5318/buggy-version/src.SortedArrayList.java", "BodyUseAPI": [], "Fixed commit": "1382d2502c1230ed3c7ee1c70ac07820f2038ff7", "Url": "https://api.github.com/repos/serdyn321/DataStructures", "Date": "2015-09-29T23:59:38Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.time.LocalDate>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index == (Parser.DateTimeParser.FIRST_INDEX)) { tempDate = java.time.LocalDate.now(); }else { tempDate = dateList.get((index - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8065/buggy-version/src.Parser.DateTimeParser.java", "BodyUseAPI": ["java.util.ArrayList<java.time.LocalDate>.get(int)"], "Fixed commit": "3737df37abbbe681f078c5671296bb9f0295b2b1", "Url": "https://api.github.com/repos/cs2103jan2016-t09-2j/main", "Date": "2016-03-06T09:40:36Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.getFilesDir()) == null) f = new java.io.File(context.getCacheDir(), com.joanzapata.android.iconify.Utils.ICON_FONT_FOLDER); else f = new java.io.File(context.getFilesDir(), com.joanzapata.android.iconify.Utils.ICON_FONT_FOLDER);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7660/buggy-version/android-iconify.src.main.java.com.joanzapata.android.iconify.Utils.java", "BodyUseAPI": ["android.content.Context.getCacheDir()", "android.content.Context.getFilesDir()"], "Fixed commit": "b1ea7ce7fbb610c9a896c82245b5f58fb49a0cb6", "Url": "https://api.github.com/repos/loicortola/android-iconify", "Date": "2014-06-04T14:16:29Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contextPath != null) && ((contextPath.length()) == 0)) { contextPath = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7291/buggy-version/WebResRuntime.src.main.java.org.unidal.webres.resource.runtime.ResourceRuntime.java", "BodyUseAPI": [], "Fixed commit": "4dcb0a0a5cdb2e9b5dd22581df850c11d87f649a", "Url": "https://api.github.com/repos/unidal/webres", "Date": "2013-08-06T08:20:35Z"},
{"Line": "=>750", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(timeoutFlag)) { response = receivedPacket.getData(); if (((response[0]) == 0) && ((response[1]) == 5)) { switch (errorType) { case 1 : console.printError(1, \"File not found, please select again\"); errorFlag = true; break; case 2 : console.printError(2, \"You do not have the rights for this, please select again\"); errorFlag = true; break; case 3 : console.printError(3, \"Location full, please select a new location to write to\"); errorFlag = true; break; case 6 : console.printError(6, \"The file already exists, please select a new file\"); errorFlag = true; break; default : break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/293/buggy-version/iteration_1.src.TFTPClient.java", "BodyUseAPI": [], "Fixed commit": "0229f78fae15f354bc927b684edc1d33f5e8a388", "Url": "https://api.github.com/repos/SYSC3303-Team4/Iteration_4", "Date": "2016-11-26T00:09:40Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.izzan.eyediseasesdiagnosismobile.models.Symptom>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((mSymptom.getSymptomArise()) == 0) { holder.itemView.setSelected(false); }else if ((mSymptom.getSymptomArise()) == 1) { holder.itemView.setSelected(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5729/buggy-version/app.src.main.java.com.izzan.eyediseasesdiagnosismobile.others.SymptomRecyclerViewAdapter.java", "BodyUseAPI": ["com.izzan.eyediseasesdiagnosismobile.models.Symptom.getSymptomArise()"], "Fixed commit": "ff0ef8fd36f6f37ff418162dafe9815d4ba98269", "Url": "https://api.github.com/repos/faishalnahidha/EyeDiseasesDiagnosisMobile", "Date": "2017-07-07T01:03:12Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (initialized.compareAndSet(false, true)) { this.initDiscovery(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6718/buggy-version/tephra-core.src.main.java.co.cask.tephra.distributed.AbstractClientProvider.java", "BodyUseAPI": [], "Fixed commit": "3662810c6c5fc4df26d8a9c59390ac34f9dffd45", "Url": "https://api.github.com/repos/StackVista/tephra", "Date": "2015-07-15T10:50:28Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((directionPower) == 0) sendData(\"00\"); else sendData(java.lang.String.valueOf(directionPower));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5464/buggy-version/app.src.main.java.moonblade.control.Main.java", "BodyUseAPI": [], "Fixed commit": "60e38864ebe90b405d19fe1e3ba8397474880b3a", "Url": "https://api.github.com/repos/moonblade/Control", "Date": "2015-01-11T14:36:11Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (distance < 4) { if ((Player.xCoord) > (this.xCoord)) { Main.currentRoom.enemies.add(new Projectile(this.xCoord, this.yCoord, 1)); }else if ((Player.xCoord) < (this.xCoord)) { Main.currentRoom.enemies.add(new Projectile(this.xCoord, this.yCoord, 3)); }else if ((Player.yCoord) > (this.yCoord)) { Main.currentRoom.enemies.add(new Projectile(this.xCoord, this.yCoord, 4)); }else { Main.currentRoom.enemies.add(new Projectile(this.xCoord, this.yCoord, 2)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/825/buggy-version/Dingwings.src.Candle.java", "BodyUseAPI": [], "Fixed commit": "ad15257d1c1e894d1193cee8af31d57d38e76ad7", "Url": "https://api.github.com/repos/pi-memorizer/Operation-Dingwings", "Date": "2016-12-01T18:06:07Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jameslandrum.bluetoothsmart.SmartDevice<T>.getCharacteristic(charDef.service(),charDef.id())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (chars.getCharacteristicLabel().equals(\"Unknown\")) { chars.setCharacteristicLabel(f.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/9154/buggy-version/src.main.java.com.jameslandrum.bluetoothsmart.SmartDevice.java", "BodyUseAPI": ["com.jameslandrum.bluetoothsmart.Characteristic.setCharacteristicLabel(java.lang.String)"], "Fixed commit": "13b280695eb7a4d59c66657c412ebe4346fcfb3c", "Url": "https://api.github.com/repos/jlandrum/bluetoothsmart", "Date": "2016-08-11T20:06:05Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataSnapshot_FriendList_FG) == null) { dataSnapshot_FriendList_FG = user.getmFriendlist_DS(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1941/buggy-version/StudyBuddy.app.src.main.java.uw.studybuddy.UserProfile.FriendListFragment.java", "BodyUseAPI": [], "Fixed commit": "1cf74597be56b8a1bd25bd3444e0288f9a850f49", "Url": "https://api.github.com/repos/Leksha/StudyBuddy", "Date": "2017-07-14T19:35:08Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) android.widget.Toast.makeText(this, \"onCancle\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6886/buggy-version/sample.src.main.java.th.or.nectec.thai.widget.sample.DatePickerSampleActivity.java", "BodyUseAPI": [], "Fixed commit": "eb6d01b1b5b0e56227deb421a147713e11da078e", "Url": "https://api.github.com/repos/nectec-opensource/thai-widget", "Date": "2016-03-20T12:27:19Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(firstName.equals(\"\"))) p.setFirstName(firstName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1956/buggy-version/src.studybuddy.SaveProfileInformationServlet.java", "BodyUseAPI": ["studybuddy.Person.setFirstName(java.lang.String)"], "Fixed commit": "68b691dace275429bc000c9f239d18951c18cf73", "Url": "https://api.github.com/repos/dianaruth/studybuddy", "Date": "2015-11-30T00:14:00Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(email.equals(\"\"))) p.setEmail(email);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1956/buggy-version/src.studybuddy.SaveProfileInformationServlet.java", "BodyUseAPI": ["studybuddy.Person.setEmail(java.lang.String)"], "Fixed commit": "68b691dace275429bc000c9f239d18951c18cf73", "Url": "https://api.github.com/repos/dianaruth/studybuddy", "Date": "2015-11-30T00:14:00Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(lastName.equals(\"\"))) p.setLastName(lastName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1956/buggy-version/src.studybuddy.SaveProfileInformationServlet.java", "BodyUseAPI": ["studybuddy.Person.setLastName(java.lang.String)"], "Fixed commit": "68b691dace275429bc000c9f239d18951c18cf73", "Url": "https://api.github.com/repos/dianaruth/studybuddy", "Date": "2015-11-30T00:14:00Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (notificationId >= (old_notificationId)) { old_notificationId = notificationId; return originalResponse.newBuilder().body(new org.catrobat.catroid.web.ProgressResponseBody(originalResponse.body(), receiver, notificationId)).build(); }else { return originalResponse; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7296/buggy-version/catroid.src.org.catrobat.catroid.web.ServerCalls.java", "BodyUseAPI": ["originalResponse.newBuilder().body(org.catrobat.catroid.web.ProgressResponseBody)", "originalResponse.newBuilder().body(new org.catrobat.catroid.web.ProgressResponseBody(originalResponse.body(), receiver, notificationId)).build()"], "Fixed commit": "41c81bc7343dbe5088d0c2d539987e6322b43709", "Url": "https://api.github.com/repos/Manu91/Catroid", "Date": "2015-06-22T09:46:15Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ownable) { projectile.setShooter(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7251/buggy-version/src.com.amoebaman.blocklobber.BlockLobber.java", "BodyUseAPI": [], "Fixed commit": "7b845a2782e41f0b82f7299d5da812643538cf73", "Url": "https://api.github.com/repos/necrodoom/BlockLobber", "Date": "2013-06-04T14:11:05Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (secure) { authenticator = new alabno.userauth.LdapAuthenticator(dbconn, accountManager); }else { authenticator = new alabno.userauth.NullAuthenticator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8002/buggy-version/infrastructure.infrastructure.src.main.java.alabno.wserver.Main.java", "BodyUseAPI": [], "Fixed commit": "e2242221e24592fd4615db88425f0ef8bc9a6925", "Url": "https://api.github.com/repos/ke00n/alabno", "Date": "2016-12-24T11:55:19Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inc < 0) current.splitStack((-inc)); else if (inc > 0) { if (((current.stackSize) + inc) <= (current.getMaxStackSize())) current.stackSize += inc; else { int added = (current.getMaxStackSize()) - (current.stackSize); current.stackSize = current.getMaxStackSize(); net.minecraft.item.ItemStack extraStack = current.copy(); extraStack.stackSize = inc - added; if (!(player.inventory.addItemStackToInventory(extraStack))) { player.dropPlayerItemWithRandomChoice(extraStack, false); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4053/buggy-version/src.main.java.minechem.utils.MinechemUtil.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.splitStack(int)"], "Fixed commit": "caf45c5f2862848e785495f96ded09358f8e0785", "Url": "https://api.github.com/repos/jakimfett/Minechem", "Date": "2014-11-07T14:24:36Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["minechem.item.element.MinechemUtil.getFluid(net.minecraft.tileentity.TileEntity)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fluid == (net.minecraftforge.fluids.FluidRegistry.WATER)) molecule = minechem.item.molecule.MoleculeEnum.water;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4053/buggy-version/src.main.java.minechem.item.element.ElementItem.java", "BodyUseAPI": [], "Fixed commit": "caf45c5f2862848e785495f96ded09358f8e0785", "Url": "https://api.github.com/repos/jakimfett/Minechem", "Date": "2014-11-07T14:24:36Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uses) > 0) { int nKind = com.nyrds.android.util.Util.indexOf(com.nyrds.pixeldungeon.levels.objects.Trap.traps, kind); return nKind + 1; }else { return usedImage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7547/buggy-version/PixelDungeon.src.main.java.com.nyrds.pixeldungeon.levels.objects.Trap.java", "BodyUseAPI": [], "Fixed commit": "1d262b5099b0564b412083898752dcc289103f60", "Url": "https://api.github.com/repos/NYRDS/pixel-dungeon-remix", "Date": "2017-10-08T20:38:29Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (matcher.find()) { html = matcher.replaceAll(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8558/buggy-version/src.main.java.com.bitplan.w3ccheck.W3CValidator.java", "BodyUseAPI": ["java.util.regex.Matcher.replaceAll(java.lang.String)"], "Fixed commit": "0517e4decdb5e8ea18f84f24b9af3c60b60c5149", "Url": "https://api.github.com/repos/WolfgangFahl/w3cValidator", "Date": "2014-09-26T17:12:46Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["user.ConceptsGroup.getConcept(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((graph.WholeSystem.getListSystemGraphData().get(lastIterationWithinOfLoopWithDistanceMeasuresCalculation).getNodeData(concept.getBlankName())) != null) { if ((graph.WholeSystem.getListSystemGraphData().get(lastIterationWithinOfLoopWithDistanceMeasuresCalculation).getNodeData(concept.getBlankName()).getBetweenness()) > 0) { graph.WholeSystem.getFinalHeadNodes().insert(nodeData); } }else { count++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4226/buggy-version/Relationship.src.graph.SystemGraphData.java", "BodyUseAPI": ["graph.WholeSystem.getListSystemGraphData().get(lastIterationWithinOfLoopWithDistanceMeasuresCalculation).getNodeData(concept.getBlankName()).getBetweenness()", "graph.WholeSystem.getListSystemGraphData().get(int)", "graph.WholeSystem.getListSystemGraphData().get(lastIterationWithinOfLoopWithDistanceMeasuresCalculation).getNodeData(concept.getBlankName())", "user.Concept.getBlankName()"], "Fixed commit": "aa6b0a21d9fafffe67d14af38a3e64b0d25799f2", "Url": "https://api.github.com/repos/hmcristovao/Prototype", "Date": "2015-09-20T00:18:25Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (countOptions != 1) { java.lang.System.err.println(\"\\nExactly one config variable must be true: isSelected, isBetweennessCloseness or isEigenvector.\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4226/buggy-version/Relationship.src.graph.SystemGraphData.java", "BodyUseAPI": [], "Fixed commit": "aa6b0a21d9fafffe67d14af38a3e64b0d25799f2", "Url": "https://api.github.com/repos/hmcristovao/Prototype", "Date": "2015-09-20T00:18:25Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (WholeSystem.configTable.getBoolean(\"isBetweennessCloseness\")) { selectedConcepts = graph.WholeSystem.getConceptsRegister().getSelectedBetweennessClosenessConcepts(); countOptions++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4226/buggy-version/Relationship.src.graph.SystemGraphData.java", "BodyUseAPI": [], "Fixed commit": "aa6b0a21d9fafffe67d14af38a3e64b0d25799f2", "Url": "https://api.github.com/repos/hmcristovao/Prototype", "Date": "2015-09-20T00:18:25Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tracking) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/9222/buggy-version/src.br.com.carlosrafaelgn.fplay.ui.BgListView.java", "BodyUseAPI": [], "Fixed commit": "f21de25dc42ad9c41dca64d52370cc79a18c18fd", "Url": "https://api.github.com/repos/carlosrafaelgn/FPlayAndroid", "Date": "2016-01-30T15:10:18Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((the8Digits.charAt(0)) == 1) com.kmitl.smartplug.SharedValues.showDialog(this, \"Appliance is using\"); else com.kmitl.smartplug.SharedValues.showDialog(this, \"Appliance is not using\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3582/buggy-version/src.com.kmitl.smartplug.SwitchActivity.java", "BodyUseAPI": [], "Fixed commit": "e49ce089976daa50ad8d5842aa5062a4077b661f", "Url": "https://api.github.com/repos/batmaster/SmartPlug", "Date": "2016-02-02T05:50:30Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.camel.util.ObjectHelper.isNotEmpty(ccfb.getDependsOn())) { factory2.addDependsOn(ccfb.getDependsOn()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7170/buggy-version/components.camel-blueprint.src.main.java.org.apache.camel.blueprint.handler.CamelNamespaceHandler.java", "BodyUseAPI": ["org.apache.aries.blueprint.mutable.MutableBeanMetadata.addDependsOn(ccfb.getDependsOn())", "org.apache.camel.blueprint.CamelContextFactoryBean.getDependsOn()"], "Fixed commit": "9facd03a3a92697a1023047fef05e45b48672fbf", "Url": "https://api.github.com/repos/sabre1041/camel", "Date": "2015-05-13T06:37:38Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(selectedPhoto.contains(photo.getFilePath()))) this.selectedPhoto.add(photo.getFilePath());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8336/buggy-version/imagepicker.src.main.java.com.imnjh.imagepicker.adapter.PhotoAdapter.java", "BodyUseAPI": ["com.imnjh.imagepicker.model.Photo.getFilePath()", "java.util.ArrayList<java.lang.String>.add(photo.getFilePath())"], "Fixed commit": "72437cfa828114cda6e278dfeee7ebabcaa65fb9", "Url": "https://api.github.com/repos/WHZWHZ1229/ImagePicker", "Date": "2017-08-22T08:07:51Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.facebook.Profile.getCurrentProfile()) != null) { startMapActivity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/663/buggy-version/app.src.main.java.com.buzzardparking.buzzard.activities.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "34ed3b04d02a6e9579b55aa3b2cb37e06ecc9ee6", "Url": "https://api.github.com/repos/BuzzardParking/buzzard-android", "Date": "2016-09-20T16:55:34Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.oscarehr.common.dao.DrugProductDao.find(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((drugProduct != null) && ((drugProduct.getDispensingEvent()) != null)) { throw new java.lang.RuntimeException(\"Cannot delete a dispensed drug\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/226/buggy-version/src.main.java.org.oscarehr.managers.DrugProductManager.java", "BodyUseAPI": [], "Fixed commit": "9731cb5263c42a32943c78a751aefdc484dc71ca", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2015-10-01T17:20:11Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (date.contains(\"*\")) { date = date.replace(\"*\", \"\"); dateColumn = POS_DATE_COLUMN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8026/buggy-version/app.src.main.java.com.jabarasca.financial_app.dao.DatabaseAccess.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "5c092ea42472e0dff04a424725f00c63940e9902", "Url": "https://api.github.com/repos/filipeborges/Financial-App", "Date": "2017-03-13T16:50:12Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((blocks[i][c]) != null) blocks[i][c].moveUp();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5489/buggy-version/src.simpleslickgame.TVShape.java", "BodyUseAPI": ["blocks[i][c].moveUp()"], "Fixed commit": "50ffa521fe3228c087cdf40f56643f54cbada9c0", "Url": "https://api.github.com/repos/arsalankhalid/Tetrov", "Date": "2015-04-10T01:01:46Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.todoroo.astrid.utility.Constants.DEBUG) android.util.Log.w(CalendarAlarmScheduler.TAG, (\"Creating tag with members: \" + (membersArray.toString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/99/buggy-version/astrid.plugin-src.com.todoroo.astrid.gcal.CreateEventListActivity.java", "BodyUseAPI": [], "Fixed commit": "a68360026f6611415d77686857263d8b84f5f18b", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2012-10-10T23:10:48Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (prefix != null) { sb.append(prefix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5892/buggy-version/src.main.java.com.sop4j.dbutils.EntityUtils.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "e0f7ddc6508e0ddd2f95afa4970fcc837255df56", "Url": "https://api.github.com/repos/wspeirs/sop4j-dbutils", "Date": "2014-04-30T21:49:20Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((photo) == null) { photo = ((android.graphics.drawable.BitmapDrawable) (profilePic.getDrawable())).getBitmap(); java.io.ByteArrayOutputStream stream = new java.io.ByteArrayOutputStream(); photo.compress(Bitmap.CompressFormat.JPEG, 100, stream); byte[] byteArray = stream.toByteArray(); com.parse.ParseFile file = new com.parse.ParseFile(\"profile.png\", byteArray); parseUser.put(\"Picture\", file); }else { java.io.ByteArrayOutputStream stream = new java.io.ByteArrayOutputStream(); photo.compress(Bitmap.CompressFormat.PNG, 100, stream); byte[] byteArray = stream.toByteArray(); com.parse.ParseFile file = new com.parse.ParseFile(\"profile.png\", byteArray); parseUser.put(\"Picture\", file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5789/buggy-version/app.src.main.java.com.chamas.luis.get.SetUpProfile.java", "BodyUseAPI": [], "Fixed commit": "bf9cfb485c205cff92d6c047885ed3970c29cf6b", "Url": "https://api.github.com/repos/Albertorio/Get-Android", "Date": "2015-12-03T01:01:01Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["FlattenBinaryTree.traverse(TreeNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rightTail != null) { return rightTail; }else { return leftTail; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/143/buggy-version/src.FlattenBinaryTree.java", "BodyUseAPI": [], "Fixed commit": "dc297228505a83af99af3e0c299d6c9b9a457c55", "Url": "https://api.github.com/repos/fredplusplus/staysharp", "Date": "2013-09-15T18:34:04Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.component.getStatus()) == (marytts.tools.newinstall.enums.Status.INSTALLED)) { this.unInstallButton.setText(\"Uninstall\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8505/buggy-version/src.main.java.marytts.tools.newinstall.gui.ComponentPanel.java", "BodyUseAPI": [], "Fixed commit": "a7749f5570e64cfb20b7e3bc7b83953b6c405ab4", "Url": "https://api.github.com/repos/psibre/marytts-installer", "Date": "2014-04-02T09:14:43Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jface.viewers.ISelectionProvider.getSelection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(((newSelection.getOffset()) == (currentSelection.getOffset())) && ((newSelection.getLength()) == (currentSelection.getLength())))) { debounceSelectionChanged = true; selectionProvider.setSelection(newSelection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4086/buggy-version/org.strategoxt.imp.runtime.src.org.strategoxt.imp.runtime.services.outline.SpoofaxOutlinePage.java", "BodyUseAPI": ["org.eclipse.jface.viewers.ISelectionProvider.setSelection(org.eclipse.jface.text.TextSelection)"], "Fixed commit": "3a5b10cf4181aa81b732d1de5325adfcb3b00660", "Url": "https://api.github.com/repos/metaborg/spoofax", "Date": "2013-07-02T02:46:25Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (input != null) { for (int i = 0; i < (input.length()); i++) { if ((input.charAt(i)) == '\\n') { count++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7623/buggy-version/src.sg.edu.nus.comp.cs4218.impl.extended2.WcTool.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.length()"], "Fixed commit": "8a0c46dcec88e6c5f9d4097839dc0562005213fe", "Url": "https://api.github.com/repos/azatris/cs4218", "Date": "2014-03-30T08:57:24Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input == \"\") { count = 0; }else { java.lang.String[] token = input.trim().split(\"\\\\s+\"); count = token.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7623/buggy-version/src.sg.edu.nus.comp.cs4218.impl.extended2.WcTool.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.split(java.lang.String)"], "Fixed commit": "8a0c46dcec88e6c5f9d4097839dc0562005213fe", "Url": "https://api.github.com/repos/azatris/cs4218", "Date": "2014-03-30T08:57:24Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(event.getPlayer().equals(player))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5122/buggy-version/src.main.java.net.citizensnpcs.trait.waypoint.LinearWaypointProvider.java", "BodyUseAPI": [], "Fixed commit": "5f8c8aafc33b60777f0725360dbe1d5fd59727d7", "Url": "https://api.github.com/repos/CitizensDev/Citizens2", "Date": "2012-02-28T07:39:00Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sakaiproject.nakamura.api.lite.authorizable.AuthorizableManager.findAuthorizable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (auth != null) { org.sakaiproject.nakamura.user.counts.GroupMembersCounter.LOGGER.debug((\"Counting member: \" + (auth.getId()))); count++; }else { org.sakaiproject.nakamura.user.counts.GroupMembersCounter.LOGGER.debug(((\"Authorizable is null, member \" + member) + \" likely has been deleted, not counting\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6099/buggy-version/bundles.user.src.main.java.org.sakaiproject.nakamura.user.counts.GroupMembersCounter.java", "BodyUseAPI": ["org.sakaiproject.nakamura.api.lite.authorizable.Authorizable.getId()", "org.slf4j.Logger.debug((\"Counting member: \" + (auth.getId())))"], "Fixed commit": "fb7e3b88b081d73dda3fb77685bfd1396464c3b2", "Url": "https://api.github.com/repos/johnfking2/nakamura", "Date": "2011-09-20T21:17:21Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (param instanceof java.lang.Number) preparedStatement.setLong(psParamIndex, ((java.lang.Number) (param)).longValue()); else if (param instanceof java.lang.Boolean) preparedStatement.setBoolean(psParamIndex, ((java.lang.Boolean) (param)).booleanValue()); else if (param instanceof org.jboss.dashboard.domain.label.LabelInterval) preparedStatement.setString(psParamIndex, ((org.jboss.dashboard.domain.label.LabelInterval) (param)).getLabel());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4103/buggy-version/modules.dashboard-providers.dashboard-provider-sql.src.main.java.org.jboss.dashboard.dataset.sql.SQLStatement.java", "BodyUseAPI": [], "Fixed commit": "52f74b9ea64a57df9b000e5cab1ab150cf2b22da", "Url": "https://api.github.com/repos/etirelli/dashboard-builder", "Date": "2013-07-09T17:39:33Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.reactivesw.customer.info.domain.model.Customer.getAddresses()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (addresses == null) { addresses = new java.util.HashSet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8534/buggy-version/src.main.java.io.reactivesw.customer.info.application.model.mapper.update.AddAddressMapper.java", "BodyUseAPI": [], "Fixed commit": "3de3fd013df202e47f9534c06bb8fe10bdcc8672", "Url": "https://api.github.com/repos/reactivesw/customer-info", "Date": "2017-03-21T12:39:53Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSwipeRefreshLayout) != null) { mSwipeRefreshLayout.setRefreshing(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4791/buggy-version/sstannouncer.app.src.main.java.com.sst.anouncements.FeedFragment.java", "BodyUseAPI": [], "Fixed commit": "5481887441db9157c5f6e053b802f35e3741ab11", "Url": "https://api.github.com/repos/joeltio/sstannouncer", "Date": "2017-04-26T05:46:47Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getRespawnLocation().getWorld()) == null) { event.setRespawnLocation(net.vectorgaming.varenas.ArenaAPI.getHubWorld().getSpawnLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2764/buggy-version/src.net.vectorgaming.varenas.listeners.PlayerRespawnListener.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerRespawnEvent.setRespawnLocation(net.vectorgaming.varenas.ArenaAPI.getHubWorld().getSpawnLocation())"], "Fixed commit": "24f72c6ac0425e5f21aec50896a0a7839fdd46af", "Url": "https://api.github.com/repos/exload/VArenas", "Date": "2013-11-24T21:57:05Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dainst.gazetteer.dao.RecordGroupRepository.findOne(place.getRecordGroupId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (group.getShowPlaces()) return org.dainst.gazetteer.helpers.PlaceAccessService.AccessStatus.LIMITED_READ; else return org.dainst.gazetteer.helpers.PlaceAccessService.AccessStatus.NONE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3817/buggy-version/src.main.java.org.dainst.gazetteer.helpers.PlaceAccessService.java", "BodyUseAPI": [], "Fixed commit": "a673e899fb72c42453ac5c2f9b4019a9541ceafa", "Url": "https://api.github.com/repos/dainst/gazetteer", "Date": "2016-02-15T13:12:46Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input == null) || (output == null)) net.minecraftforge.fml.common.FMLLog.severe(\"%s: %s: Crusher recipe not registered because of null input or output. \\n %s\", BaseMetals.MODID, cyano.basemetals.registry.CrusherRecipeRegistry.class, java.util.Arrays.toString(java.lang.Thread.currentThread().getStackTrace()).replace(\", \", \"\\n\").replace(\"[\", \"\").replace(\"]\", \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1625/buggy-version/src.main.java.cyano.basemetals.registry.CrusherRecipeRegistry.java", "BodyUseAPI": [], "Fixed commit": "194bac6c492ec70908af4253f0f13a6a3c0f94db", "Url": "https://api.github.com/repos/cyanobacterium/BaseMetals", "Date": "2016-02-19T12:28:02Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (output == null) throw new java.lang.NullPointerException(((this.getClass().getName()) + \": cannot have null output item\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1625/buggy-version/src.main.java.cyano.basemetals.registry.recipe.ArbitraryCrusherRecipe.java", "BodyUseAPI": [], "Fixed commit": "194bac6c492ec70908af4253f0f13a6a3c0f94db", "Url": "https://api.github.com/repos/cyanobacterium/BaseMetals", "Date": "2016-02-19T12:28:02Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (input == null) throw new java.lang.NullPointerException(((this.getClass().getName()) + \": cannot have null input item\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1625/buggy-version/src.main.java.cyano.basemetals.registry.recipe.ArbitraryCrusherRecipe.java", "BodyUseAPI": [], "Fixed commit": "194bac6c492ec70908af4253f0f13a6a3c0f94db", "Url": "https://api.github.com/repos/cyanobacterium/BaseMetals", "Date": "2016-02-19T12:28:02Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lexer.isBlankInput()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/9176/buggy-version/src.main.java.com.alibaba.fastjson.parser.JavaBeanDeserializer.java", "BodyUseAPI": [], "Fixed commit": "f1220103c34af514356043d8100964990ec980fb", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-11T17:18:16Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { java.lang.Class<?> fieldClass = fieldInfo.fieldClass; if ((((((((fieldClass == (byte.class)) || (fieldClass == (short.class))) || (fieldClass == (int.class))) || (fieldClass == (long.class))) || (fieldClass == (float.class))) || (fieldClass == (double.class))) || (fieldClass == (boolean.class))) || (fieldClass == (char.class))) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/9176/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.FieldDeserializer.java", "BodyUseAPI": [], "Fixed commit": "f1220103c34af514356043d8100964990ec980fb", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-11T17:18:16Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (args == null) { args = new android.os.Bundle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7989/buggy-version/app.src.main.java.org.stepic.droid.view.activities.SectionActivity.java", "BodyUseAPI": [], "Fixed commit": "d956048513845e9752ba4ed8755608e85b498339", "Url": "https://api.github.com/repos/StepicOrg/stepik-android", "Date": "2016-06-30T14:38:30Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (volumeInfoObject.has(\"description\")) { description = volumeInfoObject.getString(\"description\"); }else { description = \"No description given.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4362/buggy-version/app.src.main.java.com.namclu.android.justbooks.api.QueryUtils.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "b3960b2ae2cf19d3d475d2539d866a5aba472c34", "Url": "https://api.github.com/repos/namclu/JustBooks", "Date": "2017-04-13T23:41:21Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOwner) != null) aNBT.setString(\"mOwner\", mOwner.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5165/buggy-version/src.Java.gtPlusPlus.xmod.gregtech.common.tileentities.automation.GT_MetaTileEntity_TesseractGenerator.java", "BodyUseAPI": [], "Fixed commit": "c0f49b852a44c97062f0e179df9aa6638f639b8a", "Url": "https://api.github.com/repos/GTNewHorizons/GTplusplus", "Date": "2017-09-27T11:25:05Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GT_Recipe.GT_Recipe_Map.sSifterRecipes.findRecipe(this.getBaseMetaTileEntity(),boolean,long,<nulltype>,net.minecraft.item.ItemStack[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (tRecipe != null) baseRecipe = tRecipe.copy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5165/buggy-version/src.Java.gtPlusPlus.xmod.gregtech.common.tileentities.machines.multi.GregtechMetaTileEntity_IndustrialSifter.java", "BodyUseAPI": ["gregtech.api.util.GT_Recipe.copy()"], "Fixed commit": "c0f49b852a44c97062f0e179df9aa6638f639b8a", "Url": "https://api.github.com/repos/GTNewHorizons/GTplusplus", "Date": "2017-09-27T11:25:05Z"},
{"Line": "=>991", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.alljoyn.bus.Status.ALLJOYN_JOINSESSION_REPLY_ALREADY_JOINED) == status) { mIsjoinSession = true; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6554/buggy-version/upnp.src.org.upnp.alljoynservice.end.EndPtService.java", "BodyUseAPI": [], "Fixed commit": "0b441e29910c46d6b4aa3d5d06687c3b8df6b84e", "Url": "https://api.github.com/repos/europelee/AjUtil", "Date": "2014-05-22T09:48:01Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(com.alibaba.fastjson.JSONObject,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((ctxLocal != null) && (input != obj)) { ctxLocal.setObject(object); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1997/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": ["com.alibaba.fastjson.parser.ParseContext.setObject(java.util.Map)"], "Fixed commit": "a266e7bf6082705397e95216768c8bf8c8bdc8db", "Url": "https://api.github.com/repos/rabbitgyk/fastjson", "Date": "2014-10-02T16:25:09Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parentIsArray) { setContext(context, obj, key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1997/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": [], "Fixed commit": "a266e7bf6082705397e95216768c8bf8c8bdc8db", "Url": "https://api.github.com/repos/rabbitgyk/fastjson", "Date": "2014-10-02T16:25:09Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getContext()) != null) { com.alibaba.fastjson.parser.ParseContext thisContext = this.getContext(); java.lang.Object thisObj = thisContext.getObject(); if ((thisObj instanceof java.lang.Object[]) || (thisObj instanceof java.util.Collection<?>)) { refValue = thisObj; }else if ((thisContext.getParentContext()) != null) { refValue = thisContext.getParentContext().getObject(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1997/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": [], "Fixed commit": "a266e7bf6082705397e95216768c8bf8c8bdc8db", "Url": "https://api.github.com/repos/rabbitgyk/fastjson", "Date": "2014-10-02T16:25:09Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!parentIsArray) { ctxLocal = setContext(context, input, key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1997/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": [], "Fixed commit": "a266e7bf6082705397e95216768c8bf8c8bdc8db", "Url": "https://api.github.com/repos/rabbitgyk/fastjson", "Date": "2014-10-02T16:25:09Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((board.length) == 2) || ((board.length) == 3)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5902/buggy-version/02NQueens.QueenBoard.java", "BodyUseAPI": [], "Fixed commit": "8ed5dfc662259d79ffdb7f4e8cabd9c11a695bcb", "Url": "https://api.github.com/repos/benweinstein/MKS22X", "Date": "2017-02-13T19:48:32Z"},
{"Line": "=>1118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((parts.length) == 3) { command += ((\" \" + (parts[1])) + \" \") + (parts[2]); rowsAffected = 0L; }else if ((parts.length) == 4) { command += ((((\" \" + (parts[1])) + \" \") + (parts[2])) + \" \") + (parts[3]); rowsAffected = 0L; }else { throw new java.io.IOException(((((\"error parsing command tag: \" + command) + \" (\") + (java.util.Arrays.toString(parts))) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2205/buggy-version/src.main.java.com.impossibl.postgres.protocol.v30.ProtocolImpl.java", "BodyUseAPI": ["java.util.Arrays.toString(java.lang.String[])"], "Fixed commit": "44b2317cd2a8e18d7dbe30df7e302ee98bc90f87", "Url": "https://api.github.com/repos/marschall/pgjdbc-ng", "Date": "2015-06-17T06:08:42Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kabuda.service.VehicleService.getVehicleList(com.kabuda.entity.domain.VehicleRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (carList != null) { vehicleCount = carList.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1472/buggy-version/src.main.java.com.kabuda.controller.VehicleController.java", "BodyUseAPI": ["java.util.List<com.kabuda.entity.domain.VehicleBean>.size()"], "Fixed commit": "cfd6eef2c3492eba4a693b54aa7d611629564867", "Url": "https://api.github.com/repos/BUAAMusketeers/kabuda", "Date": "2017-01-19T15:48:40Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["act.route.Router.root(H.Method)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (node.terminateRouteSearch()) { java.lang.StringBuilder sb = new java.lang.StringBuilder(); while (path.hasNext()) { sb.append('/').append(path.next()); } context.param(ParamNames.PATH, sb.toString()); return node; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6418/buggy-version/src.main.java.act.route.Router.java", "BodyUseAPI": [], "Fixed commit": "d21ef7493e75531875de1177cbd51aa8e6a0a779", "Url": "https://api.github.com/repos/actframework/actframework", "Date": "2016-05-15T02:42:28Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p == ((line.length()) - 1)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7472/buggy-version/Project.TabToPDF.TabObj.tabparts.TabStaff.java", "BodyUseAPI": [], "Fixed commit": "eaed510d4411807d613f85d35b943d032d328d5b", "Url": "https://api.github.com/repos/rhduke/RuntimeDefenders3", "Date": "2014-03-31T18:20:42Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(myFutureActivatedTurtles.contains(turtleIndex))) { myFutureActivatedTurtles.add(turtleIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3204/buggy-version/src.slogo.Model.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.add(int)"], "Fixed commit": "5b5a0f5ebc735b2c656bf2732c04d364a632cb3b", "Url": "https://api.github.com/repos/th365thli/SLogo", "Date": "2013-03-26T02:14:01Z"},
{"Line": "=>630", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opendaylight.yangtools.yang.model.util.SchemaContextUtil.findNodeInSchemaContext(org.opendaylight.yangtools.yang.model.api.SchemaContext,u.getGroupingPath().getPathFromRoot())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(targetGrouping instanceof org.opendaylight.yangtools.yang.model.api.GroupingDefinition)) { targetGrouping = org.opendaylight.yangtools.yang.model.util.SchemaContextUtil.findGrouping(ctx, org.opendaylight.yangtools.yang.model.util.SchemaContextUtil.getParentModule(targetGrouping, ctx), u.getGroupingPath().getPathFromRoot()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/9065/buggy-version/yang.yang-model-util.src.main.java.org.opendaylight.yangtools.yang.model.util.SchemaContextUtil.java", "BodyUseAPI": ["org.opendaylight.yangtools.yang.model.util.SchemaContextUtil.getParentModule(org.opendaylight.yangtools.yang.model.api.SchemaNode,org.opendaylight.yangtools.yang.model.api.SchemaContext)", "org.opendaylight.yangtools.yang.model.util.SchemaContextUtil.findGrouping(org.opendaylight.yangtools.yang.model.api.SchemaContext,java.lang.Module,u.getGroupingPath().getPathFromRoot())"], "Fixed commit": "ac8aab5cefd508cce3a1227d81da8e0664d4fd3a", "Url": "https://api.github.com/repos/opendaylight/yangtools", "Date": "2014-07-11T07:53:52Z"},
{"Line": "=>1619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.emc.storageos.volumecontroller.impl.utils.ConsistencyUtils.getCloneConsistencyGroup(fullCopy, dbClient)) != null) { arrayGroupToFullCopies = com.emc.storageos.volumecontroller.impl.ControllerUtils.groupVolumesByArrayGroup(fullCopyVolumeObjects, dbClient); }else { arrayGroupToFullCopies = new java.util.HashMap<java.lang.String, java.util.List<com.emc.storageos.db.client.model.Volume>>(); arrayGroupToFullCopies.put(\"NO_ARRAY_GROUP\", fullCopyVolumeObjects); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/9010/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.ControllerUtils.java", "BodyUseAPI": ["com.emc.storageos.volumecontroller.impl.ControllerUtils.groupVolumesByArrayGroup(java.util.List<com.emc.storageos.db.client.model.Volume>,com.emc.storageos.db.client.DbClient)"], "Fixed commit": "7e72593e607a0d3a827640a1429eaa8468a41ad8", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-04T21:54:28Z"},
{"Line": "=>1612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.db.client.DbClient.queryObject(java.lang.Class,java.net.URI)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fullCopyVolume.isVPlexVolume(dbClient)) { com.emc.storageos.db.client.model.Volume backendfullCopy = com.emc.storageos.util.VPlexUtil.getVPLEXBackendVolume(fullCopyVolume, true, dbClient); if (backendfullCopy != null) { fullCopy = backendfullCopy.getId(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/9010/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.ControllerUtils.java", "BodyUseAPI": ["com.emc.storageos.util.VPlexUtil.getVPLEXBackendVolume(com.emc.storageos.db.client.model.Volume,boolean,com.emc.storageos.db.client.DbClient)"], "Fixed commit": "7e72593e607a0d3a827640a1429eaa8468a41ad8", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-04T21:54:28Z"},
{"Line": "=>7888", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.db.client.model.BlockObject.fetch(com.emc.storageos.db.client.DbClient,firstFullCopy.getAssociatedSourceVolume())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(com.emc.storageos.db.client.util.NullColumnValueGetter.isNullURI(firstSource.getConsistencyGroup()))) { completer.addConsistencyGroupId(firstSource.getConsistencyGroup()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/9010/buggy-version/controllersvc.src.main.java.com.emc.storageos.vplexcontroller.VPlexDeviceController.java", "BodyUseAPI": ["com.emc.storageos.volumecontroller.TaskCompleter.addConsistencyGroupId(firstSource.getConsistencyGroup())", "com.emc.storageos.db.client.model.BlockObject.getConsistencyGroup()"], "Fixed commit": "7e72593e607a0d3a827640a1429eaa8468a41ad8", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-04T21:54:28Z"},
{"Line": "=>7302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.db.client.model.BlockObject.fetch(com.emc.storageos.db.client.DbClient,firstFullCopy.getAssociatedSourceVolume())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(com.emc.storageos.db.client.util.NullColumnValueGetter.isNullURI(firstSource.getConsistencyGroup()))) { completer.addConsistencyGroupId(firstSource.getConsistencyGroup()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/9010/buggy-version/controllersvc.src.main.java.com.emc.storageos.vplexcontroller.VPlexDeviceController.java", "BodyUseAPI": ["com.emc.storageos.volumecontroller.TaskCompleter.addConsistencyGroupId(firstSource.getConsistencyGroup())", "com.emc.storageos.db.client.model.BlockObject.getConsistencyGroup()"], "Fixed commit": "7e72593e607a0d3a827640a1429eaa8468a41ad8", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-04T21:54:28Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newAllele.isSnpAllele()) { newAllele.addComplement(org.molgenis.genotype.Allele.create(org.molgenis.genotype.util.Utils.getComplementNucleotide(alleleChar))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4876/buggy-version/molgenis-genotype-reader.src.main.java.org.molgenis.genotype.Allele.java", "BodyUseAPI": ["org.molgenis.genotype.Allele.addComplement(org.molgenis.genotype.Allele)"], "Fixed commit": "e9c612862bcd51aa488622431e7e99a80cdd32f4", "Url": "https://api.github.com/repos/Bonder-MJ/systemsgenetics", "Date": "2013-08-21T10:26:19Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (move.preconditionsMet(this)) { edu.cwru.sepia.agent.planner.GameState afterMove = move.apply(this); if (gatherG.preconditionsMet(afterMove)) { returnList.add(gatherG.apply(afterMove)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5535/buggy-version/391PR3.src.edu.cwru.sepia.agent.planner.GameState.java", "BodyUseAPI": ["edu.cwru.sepia.agent.planner.actions.StripsMove.apply(edu.cwru.sepia.agent.planner.GameState)"], "Fixed commit": "453cae2e27260cc6c5abd1c4fc0b6e836ee7eb5b", "Url": "https://api.github.com/repos/chhf129/EECS391", "Date": "2016-03-31T04:08:28Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (move.preconditionsMet(this)) { edu.cwru.sepia.agent.planner.GameState afterMove = move.apply(this); if (gatherW.preconditionsMet(afterMove)) { returnList.add(gatherW.apply(afterMove)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5535/buggy-version/391PR3.src.edu.cwru.sepia.agent.planner.GameState.java", "BodyUseAPI": ["edu.cwru.sepia.agent.planner.actions.StripsMove.apply(edu.cwru.sepia.agent.planner.GameState)"], "Fixed commit": "453cae2e27260cc6c5abd1c4fc0b6e836ee7eb5b", "Url": "https://api.github.com/repos/chhf129/EECS391", "Date": "2016-03-31T04:08:28Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (taskAObject.get(0).equals(taskBObject.get(0))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5026/buggy-version/template.localSearchNode.java", "BodyUseAPI": [], "Fixed commit": "511d6e5d76e15f4ce362a827638fc8c66553e1a0", "Url": "https://api.github.com/repos/rkempter/centralized-agents", "Date": "2012-11-18T11:44:31Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((taskAObject.get(1).equals(actionStates.DELIVER)) && (taskBObject.get(1).equals(actionStates.DELIVER))) { if (((timeArray.getValue(hashBCheck)) < (timeArray.getValue(hashAReal))) && ((timeArray.getValue(hashBReal)) > (timeArray.getValue(hashACheck)))) { return true; } }else if ((taskAObject.get(1).equals(actionStates.PICKUP)) && (taskBObject.get(1).equals(actionStates.PICKUP))) { if (((timeArray.getValue(hashBCheck)) > (timeArray.getValue(hashAReal))) && ((timeArray.getValue(hashBReal)) < (timeArray.getValue(hashACheck)))) { return true; } }else { if (((timeArray.getValue(hashBCheck)) > (timeArray.getValue(hashAReal))) && ((timeArray.getValue(hashBReal)) > (timeArray.getValue(hashACheck)))) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5026/buggy-version/template.localSearchNode.java", "BodyUseAPI": ["java.lang.Object.equals(actionStates.PICKUP)", "java.lang.Object.equals(actionStates.PICKUP)", "java.util.ArrayList<java.lang.Object>.get(int)", "java.util.ArrayList<java.lang.Object>.get(int)"], "Fixed commit": "511d6e5d76e15f4ce362a827638fc8c66553e1a0", "Url": "https://api.github.com/repos/rkempter/centralized-agents", "Date": "2012-11-18T11:44:31Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((editTextIp.getText().toString()) == null) || (editTextIp.getText().toString().equals(\"\"))) || ((editTextPortNumber.getText().toString()) == null)) || (editTextPortNumber.getText().toString().equals(\"\"))) { android.widget.Toast.makeText(this, \"You must fill the IP address and port number\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4943/buggy-version/app.src.main.java.com.anhv.gamingpc.cocc.Login.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "cba7423e28a1765e84ffef0788f32669edf275d7", "Url": "https://api.github.com/repos/AnhVu23/ChatClient", "Date": "2017-10-04T20:41:34Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((n instanceof org.yinwang.rubysonar.ast.Array) && ((((org.yinwang.rubysonar.ast.Array) (n)).elts.size()) == 1)) { n = ((org.yinwang.rubysonar.ast.Array) (n)).elts.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2539/buggy-version/src.main.java.org.yinwang.rubysonar.ast.Return.java", "BodyUseAPI": [], "Fixed commit": "2125f1acdf90364cf2530dca126a01c706a7a21a", "Url": "https://api.github.com/repos/lambdalab/rubysonar", "Date": "2017-10-07T15:26:57Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((references) != null) { for (java.lang.String reference : references) { java.lang.String[] pathParts = reference.split(\"::\"); java.lang.String referencedValue = storyPathReference.getReferencedValue(reference); if ((referencedValue == null) || (!(referencedValue.equals(pathParts[3])))) { result = false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1380/buggy-version/app.src.main.java.scal.io.liger.CardModel.java", "BodyUseAPI": [], "Fixed commit": "9f3e1df009b085dfd646570c385aac348f1b8d30", "Url": "https://api.github.com/repos/scalio/liger-prototype", "Date": "2014-07-21T23:01:49Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(MCDir.exists())) { MCDir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/75/buggy-version/src.main.java.com.skcraft.launcher.Instance.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "6d3e89834467f2d0fd6f6643795bae1a5ab76b80", "Url": "https://api.github.com/repos/Mrbrutal/Launcher", "Date": "2014-07-28T20:36:05Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<freenet.plugin.SoneBridge.datamodel.twitter.Tweet>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((tweet.entities) != null) && ((tweet.entities.urls) != null)) { for (freenet.plugin.SoneBridge.datamodel.twitter.TwitterURLData urlData : tweet.entities.urls) { text = text.replace(urlData.url, urlData.expanded_url); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7229/buggy-version/src.freenet.plugin.SoneBridge.TwitterTracker.java", "BodyUseAPI": [], "Fixed commit": "e6d2b25bd2ea6f6e6dde0436e34bc4ae1b949bd7", "Url": "https://api.github.com/repos/tmarkus/SoneBridge", "Date": "2012-03-18T21:05:18Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (sender == null) { java.lang.System.out.println(message); }else { sender.sendMessage(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/182/buggy-version/src.main.java.ca.q0r.sponge.mchat.util.MessageUtil.java", "BodyUseAPI": ["org.spongepowered.api.util.command.CommandSource.sendMessage(java.lang.String)"], "Fixed commit": "56a7ce8c900bf16a5329940f29249591ea9c0b54", "Url": "https://api.github.com/repos/Q0rDev/MChat-Sponge", "Date": "2015-02-11T21:10:43Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((dataParts != null) && ((dataParts.length) >= (waveformSize))) { for (int index = 0; index < (waveformSize); index++) { currentWave[index] = java.lang.Double.parseDouble(dataParts[(index + ((waveformSize) * waveNum))]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3260/buggy-version/JMonkeyEngine.LibGeneral_Util.src.org.zrd.util.dataHelp.SignalDataProcessor.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "bbfc15f3672c2ec38710e6ba90769f6fd67906ba", "Url": "https://api.github.com/repos/zackattacknyu/BLI_ProbePathRender", "Date": "2014-09-23T01:05:03Z"},
{"Line": "=>614", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ietr.dftools.algorithm.model.PropertyBean.getValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (hostVertices != null) { for (org.ietr.preesm.memory.exclusiongraph.MemoryExclusionVertex hostVertex : hostVertices.keySet()) { for (org.ietr.preesm.memory.exclusiongraph.MemoryExclusionVertex mergedVertex : hostVertices.get(hostVertex)) { if ((mergedVertex.getWeight()) != 0) { this.removeVertex(mergedVertex); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6216/buggy-version/plugins.org.ietr.preesm.memory.src.org.ietr.preesm.memory.exclusiongraph.MemoryExclusionGraph.java", "BodyUseAPI": ["java.util.Map<org.ietr.preesm.memory.exclusiongraph.MemoryExclusionVertex, java.util.Set<org.ietr.preesm.memory.exclusiongraph.MemoryExclusionVertex>>.keySet()", "java.util.Map<org.ietr.preesm.memory.exclusiongraph.MemoryExclusionVertex, java.util.Set<org.ietr.preesm.memory.exclusiongraph.MemoryExclusionVertex>>.get(org.ietr.preesm.memory.exclusiongraph.MemoryExclusionVertex)"], "Fixed commit": "c2782efba42d6df70f6ba3d113392b84d51e180b", "Url": "https://api.github.com/repos/preesm/preesm", "Date": "2014-05-23T09:10:00Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((versionBean.getEndpointContentType()) != null) { gatewaySvc.setEndpointContentType(versionBean.getEndpointContentType().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3314/buggy-version/manager.api.rest-impl.src.main.java.io.apiman.manager.api.rest.impl.ActionResourceImpl.java", "BodyUseAPI": ["versionBean.getEndpointContentType().toString()", "io.apiman.gateway.engine.beans.Service.setEndpointContentType(versionBean.getEndpointContentType().toString())", "io.apiman.manager.api.beans.services.ServiceVersionBean.getEndpointContentType()"], "Fixed commit": "19389943193679baa95af65cb2c6ef4a83d8d9fe", "Url": "https://api.github.com/repos/kahboom/apiman", "Date": "2015-11-16T22:36:28Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.toolkits.scalar.UnitValueBoxPair.getUnit()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(use.containsArrayRef())) || ((use.getArrayRef().getBase()) != loc)) replaceWithNull(use);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8134/buggy-version/src.soot.dexpler.DexNullTransformer.java", "BodyUseAPI": ["soot.dexpler.DexNullTransformer.replaceWithNull(soot.jimple.Stmt)"], "Fixed commit": "596be7d399df3226249288ec624a02f34237170d", "Url": "https://api.github.com/repos/lilicoding/soot", "Date": "2014-12-15T13:18:21Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) { return ret; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4824/buggy-version/src.com.jascotty2.CheckInput.java", "BodyUseAPI": [], "Fixed commit": "bfb9231e95e2bae59c8f388fdd30132a915e0e4f", "Url": "https://api.github.com/repos/jascotty2/CookieMonster", "Date": "2011-09-06T01:03:19Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (world.isChunkInUse(chunkX, chunkZ)) { world.spawnFallingBlock(randomLocation, org.bukkit.Material.getMaterial(type.toUpperCase()), ((byte) (0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3358/buggy-version/src.fr.alienationgaming.jailworker.Jail.java", "BodyUseAPI": ["org.bukkit.World.spawnFallingBlock(org.bukkit.Location,org.bukkit.Material.getMaterial(type.toUpperCase()),int)"], "Fixed commit": "d9ec2ce87548f04dbdf0d94a41efc5a554829a13", "Url": "https://api.github.com/repos/RoinujNosde/JailWorker", "Date": "2016-03-12T22:02:11Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((p.getVx()) == 0) && ((p.getVy()) == 0)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8476/buggy-version/src.utils.CollisionUtils.java", "BodyUseAPI": [], "Fixed commit": "68aa11ca83396f193991d41afe7dad8794e800d4", "Url": "https://api.github.com/repos/lukkm/SystemsSimulation", "Date": "2016-04-18T23:42:32Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.restexpress.Request.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (hname == null) { hname = apiDefaultHierarchy; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2124/buggy-version/GazetteerWeb.src.main.java.me.osm.gazetteer.web.api.SearchAPI.java", "BodyUseAPI": [], "Fixed commit": "c8033546486e0e241c8b20ad6b9030eb7db1081b", "Url": "https://api.github.com/repos/kiselev-dv/gazetteer", "Date": "2016-04-26T08:23:55Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((queryText.length) > 1) { for (java.lang.String pair : queryText[1].split(\"&\")) { int idxOfEqual = pair.indexOf(\"=\"); if (idxOfEqual < 0) { queryString.put(pair, \"\"); }else { java.lang.String key = pair.substring(0, idxOfEqual); java.lang.String value = pair.substring((idxOfEqual + 1)); queryString.put(key, value); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/9178/buggy-version/src.request.HTTPRequest.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "8e58e8463dfcf1360c169c811a951e891a7e706d", "Url": "https://api.github.com/repos/dylansturg/CSSE477-Extended-SWS", "Date": "2015-05-01T18:45:32Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((descendentClass.extendedClassName) != null) { if (SemanticAnalysis.SymbolTable.validatePredeccessor(predeccessor, new SemanticAnalysis.ICTypeInfo(descendentClass.extendedClassName, 0))) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8757/buggy-version/WINDOWS_COMMAND_LINE.FOLDER_3_src.SemanticAnalysis.SymbolTable.java", "BodyUseAPI": ["SemanticAnalysis.SymbolTable.validatePredeccessor(SemanticAnalysis.ICTypeInfo,SemanticAnalysis.ICTypeInfo)"], "Fixed commit": "42136e651a50bc0224fdaf324701ab59b01a2013", "Url": "https://api.github.com/repos/DanielleTab/Compilation", "Date": "2016-12-25T20:07:43Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.ide.eclipse.boot.dash.cloudfoundry.ops.CreateAndUpdateCloudAppOp.getCloudApplication()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((properties.getUrls()) != null) && (!(properties.getUrls().equals(app.getUris())))) { subMonitor.setTaskName(((\"Updating \" + appName) + \" mapped URLs.\")); client.updateApplicationUris(appName, properties.getUrls()); subMonitor.worked(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6238/buggy-version/plugins.org.springframework.ide.eclipse.boot.dash.src.org.springframework.ide.eclipse.boot.dash.cloudfoundry.ops.CreateAndUpdateCloudAppOp.java", "BodyUseAPI": ["org.springframework.ide.eclipse.boot.dash.cloudfoundry.ops.CreateAndUpdateCloudAppOp.updateApplicationUris(java.lang.String,properties.getUrls())", "org.springframework.ide.eclipse.boot.dash.cloudfoundry.CloudApplicationDeploymentProperties.getUrls()"], "Fixed commit": "144f139ffee2560008a6de972cda5df59c643862", "Url": "https://api.github.com/repos/spring-projects/spring-ide", "Date": "2015-07-27T01:38:25Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.fs.Path.getFileSystem(org.apache.hadoop.conf.Configuration)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fs.exists(outputPath)) { fs.delete(outputPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/65/buggy-version/src.main.java.edu.umn.cs.sthadoop.operations.STJoin.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileSystem.delete(org.apache.hadoop.fs.Path)"], "Fixed commit": "9b159178665ad4143fe934764e11daa50bad8aa2", "Url": "https://api.github.com/repos/lmarabi/st-hadoop", "Date": "2017-04-06T17:16:21Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hska.localgram.dao.ImageDAOImpl.getImageByFileNameAndUser(newImage.getFile_name(),newImage.getOwner())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (image != null) image.addTagSet(newImage.getTag_list()); else image = newImage;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2256/buggy-version/src.main.java.com.hska.localgram.dao.ImageDAOImpl.java", "BodyUseAPI": ["com.hska.localgram.model.Image.addTagSet(newImage.getTag_list())"], "Fixed commit": "1f9995f3064b8b7944d50cc0be401d84db23ae9e", "Url": "https://api.github.com/repos/bafa1012/localgramServer", "Date": "2015-01-20T19:40:08Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.beans.PropertyDescriptor.getPropertyType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type == (java.lang.Class.class)) { method.invoke(service, java.lang.Thread.currentThread().getContextClassLoader().loadClass(value.unwrapped().toString())); }else if (type == (java.io.File.class)) { method.invoke(service, new java.io.File(value.unwrapped().toString())); }else { method.invoke(service, value.unwrapped()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6350/buggy-version/core.src.main.java.net.kuujo.copycat.internal.util.Services.java", "BodyUseAPI": [], "Fixed commit": "a985d960589ccf0de18d8c033ad4f9f2a1de4e83", "Url": "https://api.github.com/repos/kuujo/copycat", "Date": "2014-12-14T11:55:05Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (cells == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6535/buggy-version/BMS.src.readExcel.java", "BodyUseAPI": [], "Fixed commit": "62c984206474f013bfa63d968c8aa0030bb28325", "Url": "https://api.github.com/repos/pit4nya/BookManagementSystem", "Date": "2016-07-25T02:15:03Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(trimmedBirthday.equals(seedu.address.model.person.Birthday.BIRTHDAY_NOT_ASSIGNED))) { java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat(\"dd-MM-yyyy\"); dateFormat.setLenient(false); try { dateFormat.parse(trimmedBirthday); } catch (java.text.ParseException e) { throw new seedu.address.commons.exceptions.IllegalValueException(seedu.address.model.person.Birthday.MESSAGE_BIRTHDAY_CONSTRAINTS); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1214/buggy-version/src.main.java.seedu.address.model.person.Birthday.java", "BodyUseAPI": [], "Fixed commit": "5f4a2b0a0c1da1dac90b827a0fc256da6eca7eb8", "Url": "https://api.github.com/repos/stan789/OneBook", "Date": "2017-10-25T04:26:29Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((number.length()) > 2) { for (int i = 0; (i <= 3) && (length == 0); i++) { for (java.lang.String code : de.gdata.messaging.CountryCodes.m_Codes) { if (number.substring(0, i).equals(code)) { length = i; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4397/buggy-version/src.de.gdata.messaging.util.GUtil.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "f3376d9e07f80943c47e9da5b74a5e1cef087495", "Url": "https://api.github.com/repos/GDATASoftwareAG/SecureChat", "Date": "2015-10-06T08:32:26Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (in.nextLine().trim().equals(\"\")) { move(); atIntersection(); java.lang.System.out.println(((((\"(\" + (x)) + \" ,\") + (y)) + \")\")); for (int i = 0; i < 5; i++) { java.lang.System.out.println(\"\"); } java.lang.System.out.println(this); }else { java.lang.System.out.println(\"no\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2802/buggy-version/src.Solver.java", "BodyUseAPI": [], "Fixed commit": "1abedbbb42c0932edfe5e9530f8c9eb1775a6225", "Url": "https://api.github.com/repos/ryanlyrl/MazeSolver", "Date": "2017-03-28T21:52:16Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.example.mohammedal.learnarabic.Word>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((current.getAudioResourceId()) != 0) { android.media.MediaPlayer mp = android.media.MediaPlayer.create(this, current.getAudioResourceId()); mp.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3672/buggy-version/app.src.main.java.com.example.mohammedal.learnarabic.NumbersActivity.java", "BodyUseAPI": ["android.media.MediaPlayer.create(com.example.mohammedal.learnarabic.NumbersActivity,current.getAudioResourceId())", "com.example.mohammedal.learnarabic.Word.getAudioResourceId()"], "Fixed commit": "a0d8becce7a8adc02704a04283aed3fbd66ac714", "Url": "https://api.github.com/repos/brilliant-ember/Arabic-Teaching-app", "Date": "2017-12-14T01:14:48Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldTrimStr) { value = value.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8143/buggy-version/src.main.java.cn.com.deepdata.es_adapter.adapter.SimpleXlsFile2MapsAdapter.java", "BodyUseAPI": [], "Fixed commit": "127b71f62d19e35bb4177837935bcae4f98ba05e", "Url": "https://api.github.com/repos/bidiu/elasticsearch-adapter", "Date": "2016-06-24T08:50:04Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (config.hasChanged()) { config.save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/13/buggy-version/ControlBlocks.src.main.java.com.lothrazar.samscontrolblocks.ModControlBlocks.java", "BodyUseAPI": ["net.minecraftforge.common.config.Configuration.save()"], "Fixed commit": "ed1ea71ca397b4bb5e7c30a70416e49660a239d1", "Url": "https://api.github.com/repos/PrinceOfAmber/SamsPowerups", "Date": "2015-06-10T22:51:02Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mStationIDSelected) >= 0) { mStationList.get(stationIDSelected).setPlaybackState(playbackState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8525/buggy-version/app.src.main.java.org.y20k.transistor.CollectionAdapter.java", "BodyUseAPI": [], "Fixed commit": "393862a4513e8b3a24e41664c935606204bfff61", "Url": "https://api.github.com/repos/kkfong/transistor", "Date": "2016-09-02T13:14:28Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.y20k.transistor.helpers.NotificationHelper.mService) != null) { org.y20k.transistor.helpers.NotificationHelper.mService.stopForeground(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8525/buggy-version/app.src.main.java.org.y20k.transistor.helpers.NotificationHelper.java", "BodyUseAPI": [], "Fixed commit": "393862a4513e8b3a24e41664c935606204bfff61", "Url": "https://api.github.com/repos/kkfong/transistor", "Date": "2016-09-02T13:14:28Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (labels != null) { labels = labels.replace(\"\\\\\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2102/buggy-version/liquibase-core.src.main.java.liquibase.LabelExpression.java", "BodyUseAPI": [], "Fixed commit": "d753a2d57ebec52338341bc8527f9d9897024718", "Url": "https://api.github.com/repos/germantech/liquibase", "Date": "2014-12-19T01:08:57Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URI.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(path)) { path = \".\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3429/buggy-version/repo.repo-sql-impl.src.main.java.com.evolveum.midpoint.repo.sql.SqlRepositoryFactory.java", "BodyUseAPI": [], "Fixed commit": "5b8c9abc8f0d685c0f316cc1b635bf70f517d845", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2014-02-18T11:13:54Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.evolveum.midpoint.repo.sql.SqlRepositoryFactory.LOGGER.isTraceEnabled()) { java.lang.String stringArgs = org.apache.commons.lang.StringUtils.join(serverArguments, \" \"); com.evolveum.midpoint.repo.sql.SqlRepositoryFactory.LOGGER.trace(\"Starting H2 server with arguments: {}\", stringArgs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3429/buggy-version/repo.repo-sql-impl.src.main.java.com.evolveum.midpoint.repo.sql.SqlRepositoryFactory.java", "BodyUseAPI": ["com.evolveum.midpoint.util.logging.Trace.trace(java.lang.String,java.lang.String)"], "Fixed commit": "5b8c9abc8f0d685c0f316cc1b635bf70f517d845", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2014-02-18T11:13:54Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<realtalk.util.MessageInfo>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((mi.compareTo(miOther)) == 0) && (mi.stBody().equals(miOther.stBody()))) && (mi.stSender().equals(miOther.stSender()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2236/buggy-version/src.realtalk.model.ChatRoomModel.java", "BodyUseAPI": [], "Fixed commit": "22dd465da5d0f852f3d2c28805803649fd5413c1", "Url": "https://api.github.com/repos/colinkho/realtalk", "Date": "2013-06-09T07:00:24Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.core.JsonParser.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (text.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/520/buggy-version/java-csv-sage.src.main.java.com.hashnot.csv.sage.convert.LocalDateDeserializer.java", "BodyUseAPI": [], "Fixed commit": "f54d22853feaf85a30161686ae0e193103dbfa2b", "Url": "https://api.github.com/repos/rafalkrupinski/csv", "Date": "2016-02-07T14:39:12Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (equals(other)) { return 0; }else if (this.geneticAlgorithm.getCalculateScore().shouldMinimize()) { if ((getScore()) > (other.getScore())) { return 1; } return -1; }else { if ((getScore()) > (other.getScore())) { return -1; } return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4832/buggy-version/src.main.java.org.encog.ml.genetic.genome.BasicGenome.java", "BodyUseAPI": ["org.encog.ml.genetic.genome.Genome.getScore()", "org.encog.ml.genetic.genome.Genome.getScore()"], "Fixed commit": "c96151b47a693fe3291f3e05d1598bd891634b42", "Url": "https://api.github.com/repos/encog/encog-java-core", "Date": "2011-07-29T02:25:44Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getConf().getBoolean(\"anchors.track.hosts\", false)) { job.setReducerClass(com.moz.commoncrawl.AnchorAggregator.HostReducer.class); }else { job.setReducerClass(com.moz.commoncrawl.AnchorReducer.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6455/buggy-version/src.main.java.com.moz.commoncrawl.AnchorAggregator.java", "BodyUseAPI": [], "Fixed commit": "ee78e8627458c438fb27298f67c60bd1699ea250", "Url": "https://api.github.com/repos/rjonesx/common-crawl-anchor-text-extraction", "Date": "2017-03-06T10:30:41Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.glassBeingProcessed) != null) { if ((com.glassBeingProcessed.glass.getId()) == (g.getId())) { com.inUse = false; com.glassBeingProcessed = null; print(((\"Glass with ID (\" + (g.getId())) + \") recieved from machine\")); stateChanged(); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4318/buggy-version/src.factory_v0_Tim.agents.PopUpAgent.java", "BodyUseAPI": ["com.glassBeingProcessed.glass.getId()"], "Fixed commit": "7789d027d611423e5643eb84aa795183f7bc6115", "Url": "https://api.github.com/repos/timrighettini/GlassLine_Factory_v0", "Date": "2013-03-31T20:22:38Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((location) != null) { latLng = new com.google.android.gms.maps.model.LatLng(location.getLatitude(), location.getLongitude()); }else { latLng = new com.google.android.gms.maps.model.LatLng(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7733/buggy-version/app.src.main.java.k7i3.code.tnc.transport.activity.BaseGoogleMapsActivity.java", "BodyUseAPI": [], "Fixed commit": "ec68f5f63b83459a883d724236d8a82ee03cc0fd", "Url": "https://api.github.com/repos/k7i3/transport", "Date": "2015-10-21T06:11:49Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((factory) != null) { return mapper.map(source, factory); }else { return mapper.map(source, klassU); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4588/buggy-version/src.main.java.com.github.mjeanroy.spring.bean.mapping.objects.AbstractObjectMapper.java", "BodyUseAPI": [], "Fixed commit": "28f024f224bc3763a021e95026b5eb2faf18fc76", "Url": "https://api.github.com/repos/mjeanroy/spring-bean-mapping", "Date": "2014-10-03T11:45:31Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mProcess.isAlive()) { out.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6218/buggy-version/src.main.java.io.appetizerio.RunningTaskControl.java", "BodyUseAPI": [], "Fixed commit": "2eb570144cd4dd39f8f796fb7fc34dec0473ee83", "Url": "https://api.github.com/repos/appetizerio/replaykit.java", "Date": "2017-06-20T07:21:35Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((app.geo.fragments.AddCachesFragment.v) != null) { android.view.ViewGroup parent = ((android.view.ViewGroup) (app.geo.fragments.AddCachesFragment.v.getParent())); if (parent != null) { parent.removeView(app.geo.fragments.AddCachesFragment.v); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3619/buggy-version/app.src.main.java.app.geo.fragments.AddCachesFragment.java", "BodyUseAPI": [], "Fixed commit": "1004af83f697d2c1a6d2c4accf19ded6b628c7dc", "Url": "https://api.github.com/repos/NGrant92/geo-android-app", "Date": "2017-11-23T09:14:13Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (charSequence.toString().isEmpty()) currentBill.setAmount(0.0); else { double amount = (java.lang.Double.parseDouble(charSequence.toString())) / 100.0; currentBill.setAmount(amount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3070/buggy-version/app.src.main.java.edu.orangecoastcollege.cs273.tipcalculator.MainActivity.java", "BodyUseAPI": ["java.lang.CharSequence.toString()", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "72d7b05d0711031751380c310096029822f8f9ff", "Url": "https://api.github.com/repos/kdo94/TipCalculator", "Date": "2016-09-13T23:25:02Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (message != null) { try { endMeetingAttributes.add(\"message\", java.net.URLEncoder.encode(message, \"UTF8\")); } catch (java.io.UnsupportedEncodingException e) { throw new cz.cesnet.shongo.api.jade.CommandException(\"Error while message encoding.\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8617/buggy-version/shongo-connector.src.main.java.cz.cesnet.shongo.connector.device.AdobeConnectConnector.java", "BodyUseAPI": ["cz.cesnet.shongo.connector.device.AdobeConnectConnector.RequestAttributeList.add(java.lang.String,java.lang.String)", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "400b24d09a722e7a6f2afc791e35cb82ff340ad8", "Url": "https://api.github.com/repos/shongo/shongo", "Date": "2014-10-20T16:28:43Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (element.getName().equals(\"tab\")) { for (int i = 0; i < 8; i++) org.oruji.odt2html.App.outHTML.append(\"&nbsp;\"); }else if (element.getName().equals(\"s\")) { int spaceNo = java.lang.Integer.parseInt(element.getAttributeValue(\"c\", element.getNamespace())); for (int i = 0; i <= spaceNo; i++) org.oruji.odt2html.App.outHTML.append(\"&nbsp;\"); }else { for (java.lang.Object obj2 : element.getContent()) { org.oruji.odt2html.App.recursiveElement(obj2); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1750/buggy-version/src.main.java.org.oruji.odt2html.App.java", "BodyUseAPI": ["org.jdom.Element.getContent()", "element.getName().equals(java.lang.String)", "org.jdom.Element.getName()", "java.lang.Integer.parseInt(element.getAttributeValue(\"c\", element.getNamespace()))", "org.jdom.Element.getNamespace()", "org.jdom.Element.getAttributeValue(java.lang.String,element.getNamespace())"], "Fixed commit": "6a9123fdfeb170cdc58cd76ba2b322084df2f5c7", "Url": "https://api.github.com/repos/aminpy/odt2html", "Date": "2013-09-15T12:26:57Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (convertView.isSelected()) { convertView.setBackgroundColor(1717986918); }else { convertView.setBackgroundColor(16777215); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/700/buggy-version/app.src.main.java.com.freak.videosenfants.elements.preferences.DlnaAdapter.java", "BodyUseAPI": ["android.view.View.setBackgroundColor(int)", "android.view.View.setBackgroundColor(int)"], "Fixed commit": "8d78de20c952823694b8dab53107ab77931ab8bf", "Url": "https://api.github.com/repos/Pilou44/VideosEnfants", "Date": "2016-04-04T09:33:49Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.droidplanner.services.android.core.drone.autopilot.MavLinkDrone.getMagnetometerCalibration()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (magnetometer != null) magnetometer.setListener(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1292/buggy-version/ServiceApp.src.org.droidplanner.services.android.core.drone.DroneManager.java", "BodyUseAPI": ["org.droidplanner.services.android.core.drone.variables.calibration.MagnetometerCalibrationImpl.setListener(<nulltype>)"], "Fixed commit": "76ab3f740453bca4035a3092ae7b24208a49e929", "Url": "https://api.github.com/repos/dronekit/dronekit-android", "Date": "2015-10-06T23:25:59Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((controllerHandler) != null) controllerHandler.shutdown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3280/buggy-version/src.main.java.com.yumcouver.tunnel.server.forward.ForwardingServerHandlerAdapter.java", "BodyUseAPI": [], "Fixed commit": "f485c3e80f51310154a7768e409267debafa9d16", "Url": "https://api.github.com/repos/Torres9/TCPTunnelServer", "Date": "2015-03-24T02:16:54Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_rotation) > (_numSteps)) { _rotation %= _numSteps; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7626/buggy-version/src.com.hisschemoller.epg.view.components.Pattern.java", "BodyUseAPI": [], "Fixed commit": "a5dc394246d1eb95ea65cb77e646fed827be19fb", "Url": "https://api.github.com/repos/hisschemoller/Euclidean-Pattern-Generator", "Date": "2015-08-21T13:07:09Z"},
{"Line": "=>2953", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == (ca.cumulonimbus.barometernetwork.BarometerNetworkActivity.CONDITIONS_REQUEST_CODE)) { downloadAndShowConditions(); }else if (requestCode == (ca.cumulonimbus.barometernetwork.BarometerNetworkActivity.REQUEST_SETTINGS)) { refreshMap(); }else { log(\"barometernetworkactivity received data intent null:\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2876/buggy-version/src.ca.cumulonimbus.barometernetwork.BarometerNetworkActivity.java", "BodyUseAPI": [], "Fixed commit": "d7781d8eea85bdb81c846e3a257baec09ae990c0", "Url": "https://api.github.com/repos/Cbsoftware/PressureNet", "Date": "2015-08-11T18:29:00Z"},
{"Line": "=>1067", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (wir == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8319/buggy-version/src.org.yawlfoundation.yawl.resourcing.jsf.SessionBean.java", "BodyUseAPI": [], "Fixed commit": "8c7a7e2b70af3d55c71c2447b483b78334c0dec8", "Url": "https://api.github.com/repos/mlawry/yawl", "Date": "2017-09-13T23:00:48Z"},
{"Line": "=>1072", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (wir == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8319/buggy-version/src.org.yawlfoundation.yawl.resourcing.jsf.SessionBean.java", "BodyUseAPI": [], "Fixed commit": "8c7a7e2b70af3d55c71c2447b483b78334c0dec8", "Url": "https://api.github.com/repos/mlawry/yawl", "Date": "2017-09-13T23:00:48Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(jsonObject.getString(\"Ask\").equals(\"null\"))) { batchOperations.add(com.sahil.android.stockhawk.rest.Utils.buildBatchOperation(jsonObject)); }else { android.os.Handler mHandler = new android.os.Handler(getMainLooper()); mHandler.post(new java.lang.Runnable() { @java.lang.Override public void run() { android.widget.Toast.makeText(mContext, \"Entered invalid stock\", Toast.LENGTH_SHORT).show(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/776/buggy-version/app.src.main.java.com.sahil.android.stockhawk.rest.Utils.java", "BodyUseAPI": ["java.util.ArrayList<android.content.ContentProviderOperation>.add(android.content.ContentProviderOperation)", "com.sahil.android.stockhawk.rest.Utils.buildBatchOperation(org.json.JSONObject)"], "Fixed commit": "ec84f027b75123cc751ab9b38a876048a463290a", "Url": "https://api.github.com/repos/supreme96/StockHawk", "Date": "2016-07-11T04:00:54Z"},
{"Line": "=>1082", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((options.getVerifyMode()) == (org.onepf.oms.OpenIabHelper.Options.VERIFY_SKIP)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/9084/buggy-version/library.src.main.java.org.onepf.oms.OpenIabHelper.java", "BodyUseAPI": [], "Fixed commit": "9e663c0401306a4fde1025424ec4bf8ea3c843eb", "Url": "https://api.github.com/repos/onepf/OpenIAB", "Date": "2014-11-24T21:02:23Z"},
{"Line": "=>930", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dotmarketing.portlets.structure.model.Field.getDefaultValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((defaultValue.equalsIgnoreCase(\"true\")) || (defaultValue.equalsIgnoreCase(\"1\"))) || (defaultValue.equalsIgnoreCase(\"yes\"))) || (defaultValue.equalsIgnoreCase(\"y\"))) || (defaultValue.equalsIgnoreCase(\"on\"))) defaultValueBoolean = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1010/buggy-version/src.com.dotmarketing.portlets.contentlet.action.EditContentletAction.java", "BodyUseAPI": [], "Fixed commit": "8b0a184fb356bbd2ba33892ee7fee352d568392a", "Url": "https://api.github.com/repos/dotCMS/dotCMS", "Date": "2013-07-03T13:46:55Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentOwnerAddress) == null) { gvs.access.ConnectionMonitor.logger.debug(\"Service already released.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2201/buggy-version/src.main.java.gvs.access.ConnectionMonitor.java", "BodyUseAPI": [], "Fixed commit": "fc8dce58bda28f0e20015552ad8a097fde2df153", "Url": "https://api.github.com/repos/Graphs-Visualization-Service/gvs-ui", "Date": "2017-11-07T13:35:58Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (osId == null) { osId = server.getTag(\"guestosid\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1222/buggy-version/src.main.java.org.dasein.cloud.cloudstack.compute.Templates.java", "BodyUseAPI": [], "Fixed commit": "7848c71d950e2110cad4253fb07989b8d4bf7f8c", "Url": "https://api.github.com/repos/daniellemayne/dasein-cloud-cloudstack", "Date": "2013-12-18T15:21:17Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.netbeans.api.lexer.TokenSequence<? extends net.dfranek.typoscript.lexer.TSTokenId>.offset()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((r.getEnd()) > offset) { r = new net.dfranek.typoscript.parser.OffsetRange(offset, r.getEnd()); kind = net.dfranek.typoscript.parser.TSStructureScanner.FOLD_BLOCKS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6839/buggy-version/src.net.dfranek.typoscript.parser.TSStructureScanner.java", "BodyUseAPI": ["net.dfranek.typoscript.parser.OffsetRange.getEnd()"], "Fixed commit": "f2ae6466ebb1fa90226785799251f86d2731920a", "Url": "https://api.github.com/repos/dfranek/NetBeans-TypoScript", "Date": "2013-10-31T22:01:38Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inTown) { updateSpriteLocation(); inTown = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6524/buggy-version/MapGUI.java", "BodyUseAPI": [], "Fixed commit": "feaa2fa1f3697836bd694a08dae7a4629c89d819", "Url": "https://api.github.com/repos/bwoodbury3/CS2340-MULE", "Date": "2015-09-22T23:44:16Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportFragmentManager().findFragmentById(R.id.content_frame)) == null) { showFragmentLogin(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/951/buggy-version/app.src.main.java.be.nmct.unitycard.activities.login.AccountActivity.java", "BodyUseAPI": [], "Fixed commit": "8ba0ab092d9da4b1ac151babbe4f5fd9e94177e8", "Url": "https://api.github.com/repos/StephenBeirlaen/unitycard", "Date": "2016-11-24T08:24:48Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportFragmentManager().findFragmentById(R.id.content_frame)) == null) { showFragmentMyLoyaltyCard(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/951/buggy-version/app.src.main.java.be.nmct.unitycard.activities.customer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8ba0ab092d9da4b1ac151babbe4f5fd9e94177e8", "Url": "https://api.github.com/repos/StephenBeirlaen/unitycard", "Date": "2016-11-24T08:24:48Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportFragmentManager().findFragmentById(R.id.content_frame)) == null) { showFragmentRetailerAdmin(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/951/buggy-version/app.src.main.java.be.nmct.unitycard.activities.retailer.RetailerAdminActivity.java", "BodyUseAPI": [], "Fixed commit": "8ba0ab092d9da4b1ac151babbe4f5fd9e94177e8", "Url": "https://api.github.com/repos/StephenBeirlaen/unitycard", "Date": "2016-11-24T08:24:48Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxTestIdleTimeSecs) > 0) { return maxTestIdleTimeSecs; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3607/buggy-version/src.main.java.de.zalando.ep.zalenium.proxy.DockerSeleniumRemoteProxy.java", "BodyUseAPI": [], "Fixed commit": "f3fe96d3044387d9155793f842a4097142b5b013", "Url": "https://api.github.com/repos/paulbrodner/zalenium", "Date": "2017-06-06T09:53:22Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLastKnownLocation) == null) { mLastKnownLocation = new android.location.Location(\"geisel\"); mLastKnownLocation.setLatitude(32.880915); mLastKnownLocation.setLongitude((-117.237562)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/313/buggy-version/app.src.main.java.com.ttmaps.maps.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "48526406625584e02825154e4e9238ffb33d1b5b", "Url": "https://api.github.com/repos/esguo/MAPS", "Date": "2017-12-01T00:49:30Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.illinois.cs.Calculator.getTwoNum(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((nums[1]) != 0) ans = (nums[0]) / (nums[1]); else if ((nums[0]) > 0) ans = java.lang.Double.MAX_VALUE; else ans = 0 - (java.lang.Double.MAX_VALUE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2830/buggy-version/CommandLineCal.src.edu.illinois.cs.Calculator.java", "BodyUseAPI": [], "Fixed commit": "a163cc3b97c0f27afa2c624b5ae4ea4573d73a10", "Url": "https://api.github.com/repos/yx-z/Playground", "Date": "2016-01-24T17:00:04Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opensourcetlapp.tl.TLLib.TagNodeFromURLEx2(org.htmlcleaner.HtmlCleaner,java.net.URL,org.opensourcetlapp.tl.TLHandler,android.content.Context,java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((org.htmlcleaner.TagNode) (node.evaluateXPath(\"//tbody/tr[position()>2]\")[0])).getChildren().size()) > 3) { nodeList = node.evaluateXPath(\"//tbody/tr[position()>2]\"); }else { nodeList = node.evaluateXPath(\"//tbody/tr[position()>3]\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3641/buggy-version/tlandroidapp.src.org.opensourcetlapp.tl.ShowMyPM.java", "BodyUseAPI": ["org.htmlcleaner.TagNode.evaluateXPath(java.lang.String)", "org.htmlcleaner.TagNode.evaluateXPath(java.lang.String)"], "Fixed commit": "07598b0f666068b41bc54cfbde2b10fe25749f2d", "Url": "https://api.github.com/repos/FranzPoize/TL-android-app", "Date": "2012-03-28T17:37:10Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasInjectionPointsForAnnotation(roboguice.inject.InjectPreference.class)) { bindListener(com.google.inject.matcher.Matchers.any(), preferenceListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4728/buggy-version/roboguice.src.main.java.roboguice.config.DefaultRoboModule.java", "BodyUseAPI": [], "Fixed commit": "0d4dc39d42bed692a1f3a8cd27945561e2443fc8", "Url": "https://api.github.com/repos/stephanenicolas/roboguice", "Date": "2014-07-29T17:50:13Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jazmin.server.web.mvc.Dispatcher.logger.isDebugEnabled()) { jazmin.server.web.mvc.Dispatcher.logger.debug(\"register controller:{}-{}\", cc.id(), obj.getClass()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4166/buggy-version/JazminServer.src.jazmin.server.web.mvc.Dispatcher.java", "BodyUseAPI": ["jazmin.log.Logger.debug(java.lang.String,cc.id(),java.lang.Class<? extends java.lang.Object>)"], "Fixed commit": "33f3ca4fbc67bb9cb656f6de6ac87ac363ef2367", "Url": "https://api.github.com/repos/guooscar/JazminServer", "Date": "2015-04-07T15:25:29Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getDeclaredAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (methodStubs.containsKey(srv.id())) { throw new java.lang.IllegalArgumentException(((\"service :\" + (srv.id())) + \" already exists\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4166/buggy-version/JazminServer.src.jazmin.server.web.mvc.ControllerStub.java", "BodyUseAPI": ["jazmin.server.web.mvc.Service.id()"], "Fixed commit": "33f3ca4fbc67bb9cb656f6de6ac87ac363ef2367", "Url": "https://api.github.com/repos/guooscar/JazminServer", "Date": "2015-04-07T15:25:29Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (jsonConf.has(\"domainName\")) targetConf.setTargetDomainName(jsonConf.getString(\"domainName\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7996/buggy-version/src.radlab.rain.TargetSchedule.java", "BodyUseAPI": ["radlab.rain.TargetConfiguration.setTargetDomainName(jsonConf.getString(\"domainName\"))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "c98233b3506ede1c563b1c0099c22e2a45453a4a", "Url": "https://api.github.com/repos/jacksonicson/rain", "Date": "2013-11-15T09:32:27Z"},
{"Line": "=>957", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n instanceof de.peeeq.wurstscript.ast.WPackage) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4132/buggy-version/de.peeeq.wurstscript.src.de.peeeq.wurstscript.validation.WurstValidator.java", "BodyUseAPI": [], "Fixed commit": "a74fdb1945b0fef6d9010742850dc40e74b2f360", "Url": "https://api.github.com/repos/peq/WurstScript", "Date": "2012-08-12T23:31:14Z"},
{"Line": "=>1093", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(editing.getText().equals(\"\"))) { editing.setText(taskManager.localization.Localizer.getString(\"EditingComment\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1933/buggy-version/TaskManager.src.main.java.taskManager.view.EditTaskView.java", "BodyUseAPI": ["javax.swing.JLabel.setText(taskManager.localization.Localizer.getString(\"EditingComment\"))"], "Fixed commit": "cb1e7314c69915ef4f733e75f7f36cad6e4c487f", "Url": "https://api.github.com/repos/slash-slash-no-comment-WPI-cs3733/wpi-suite", "Date": "2014-12-17T01:25:00Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(command.trim().isEmpty())) { commandStack.insertCommand(command); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7978/buggy-version/src.uiView.CommandBoxPanel.java", "BodyUseAPI": ["uiView.CommandStack.insertCommand(java.lang.String)"], "Fixed commit": "51345fb71f2e62c03d501ff03ee4111705a68d99", "Url": "https://api.github.com/repos/cs2103aug2014-t17-1j/main", "Date": "2014-11-02T13:55:48Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.audit4j.core.Context.getConfig().getMetaData().getClass().equals(org.audit4j.core.DummyMetaData.class)) { event.setActor(CoreConstants.DEFAULT_ACTOR); org.audit4j.core.Log.warn(((((((\"Audit4j:WARN If you are not parsing the actor to the AuditEvent,\\n\" + (\"Audit4j:WARN you should make a your own AuditMetaData implementation. \\n\" + \"Audit4j:WARN otherwise actor will be hard coded as \\\"\")) + (CoreConstants.DEFAULT_ACTOR)) + \"\\\" in the audit log. \") + \"\\nAudit4j: See \") + (ErrorURL.NULL_ACTOR)) + \" for further details.\")); }else { event.setActor(org.audit4j.core.Context.getConfig().getMetaData().getActor()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/874/buggy-version/src.main.java.org.audit4j.core.TroubleshootManager.java", "BodyUseAPI": [], "Fixed commit": "007f26de35f8edbb761c1edb7ea3daeb0544981d", "Url": "https://api.github.com/repos/audit4j/audit4j-core", "Date": "2014-07-23T02:18:23Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((curObj == null) || ((curObj.type) == null)) || ((curObj.type.elemType) == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6600/buggy-version/src.at.jku.ssw.cmm.compiler.Tab.java", "BodyUseAPI": [], "Fixed commit": "72b4674a42cb268c867fac2da400cc20431aa0fc", "Url": "https://api.github.com/repos/pointhi/CMM", "Date": "2015-03-24T07:57:33Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (peakMz > 0) { uk.ac.ebi.pride.spectracluster.hadoop.keys.PeakMZKey mzKey = new uk.ac.ebi.pride.spectracluster.hadoop.keys.PeakMZKey(peakMz, precursorMz); keyOutputText.set(mzKey.toString()); valueOutputText.set(value.toString()); context.write(keyOutputText, valueOutputText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7094/buggy-version/src.main.java.uk.ac.ebi.pride.spectracluster.hadoop.peak.MajorPeakMapper.java", "BodyUseAPI": [], "Fixed commit": "f9a0bcf8f053ecfd2eb5b384e47ccdfef386e1a5", "Url": "https://api.github.com/repos/spectra-cluster/spectra-cluster-hadoop", "Date": "2015-04-07T09:32:19Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isMouseOver()) || (isMouseOverChildComponent())) { scrollToAdd = io.github.craftedcart.mcliquidui.component.GuiUtils.getMouseDWheel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2906/buggy-version/src.main.java.io.github.craftedcart.mcliquidui.component.UIListBox.java", "BodyUseAPI": [], "Fixed commit": "85d1b691d5c652862deebd39539bc5706ed253b0", "Url": "https://api.github.com/repos/CraftedCart/MCLiquidUI", "Date": "2016-06-21T20:20:56Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tags) != null) { journal.setTags(tags); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4126/buggy-version/app.src.main.java.com.example.jingyuan.footprints.JournalEditorActivity.java", "BodyUseAPI": [], "Fixed commit": "6883d16e0e20bf3d6042e442f7423cb378d32724", "Url": "https://api.github.com/repos/marlonli/Android-Footprints", "Date": "2017-12-17T21:23:20Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.device) instanceof it.polito.elite.dog.core.library.model.devicecategory.Lamp) { ((it.polito.elite.dog.core.library.model.devicecategory.Lamp) (this.device)).notifyOn(); }else if ((this.device) instanceof it.polito.elite.dog.core.library.model.devicecategory.Buzzer) { ((it.polito.elite.dog.core.library.model.devicecategory.Buzzer) (this.device)).notifyOn(); }else ((it.polito.elite.dog.core.library.model.devicecategory.OnOffOutput) (this.device)).notifyOn();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6155/buggy-version/it.polito.elite.dog.drivers.zwave.onoffdevice.src.it.polito.elite.dog.drivers.zwave.onoffdevice.ZWaveOnOffDeviceDriverInstance.java", "BodyUseAPI": [], "Fixed commit": "8ac57b8b9114c9a7bb46204d179f5fa496f14e50", "Url": "https://api.github.com/repos/dog-gateway/zwave-drivers", "Date": "2014-05-19T11:38:19Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.device) instanceof it.polito.elite.dog.core.library.model.devicecategory.Lamp) { ((it.polito.elite.dog.core.library.model.devicecategory.Lamp) (this.device)).notifyOff(); }else if ((this.device) instanceof it.polito.elite.dog.core.library.model.devicecategory.Buzzer) { ((it.polito.elite.dog.core.library.model.devicecategory.Buzzer) (this.device)).notifyOff(); }else ((it.polito.elite.dog.core.library.model.devicecategory.OnOffOutput) (this.device)).notifyOff();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6155/buggy-version/it.polito.elite.dog.drivers.zwave.onoffdevice.src.it.polito.elite.dog.drivers.zwave.onoffdevice.ZWaveOnOffDeviceDriverInstance.java", "BodyUseAPI": [], "Fixed commit": "8ac57b8b9114c9a7bb46204d179f5fa496f14e50", "Url": "https://api.github.com/repos/dog-gateway/zwave-drivers", "Date": "2014-05-19T11:38:19Z"},
{"Line": "=>1628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (healthCheckHandler)) { healthCheckHandler = new com.netflix.appinfo.HealthCheckCallbackToHandlerBridge(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5631/buggy-version/eureka-client.src.main.java.com.netflix.discovery.DiscoveryClient.java", "BodyUseAPI": [], "Fixed commit": "dd6a885af4e289b920096105dd3d38b8752e162d", "Url": "https://api.github.com/repos/elandau/eureka", "Date": "2014-07-06T03:15:24Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (backCompatPreYoda) { com.emc.storageos.systemservices.impl.vdc.VdcManager.log.info(\"Back compatiblilty to preyoda flag detected. Skip the reboot until all vdcs are upgraded to yoda\"); }else { reboot(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6165/buggy-version/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcManager.java", "BodyUseAPI": [], "Fixed commit": "404c52945885388c697fa2b1b7a942725cde18a4", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-01-08T00:00:18Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == source) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1087/buggy-version/src.main.java.de.ronnyfriedland.nosql.mongodb.converter.StringToIntegerConverter.java", "BodyUseAPI": [], "Fixed commit": "29a97147bc023e868e173da96862b40d6e7df246", "Url": "https://api.github.com/repos/ronnyfriedland/sqltomongodb", "Date": "2017-03-06T20:07:18Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == source) { return java.lang.Boolean.FALSE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1087/buggy-version/src.main.java.de.ronnyfriedland.nosql.mongodb.converter.IntegerToBooleanConverter.java", "BodyUseAPI": [], "Fixed commit": "29a97147bc023e868e173da96862b40d6e7df246", "Url": "https://api.github.com/repos/ronnyfriedland/sqltomongodb", "Date": "2017-03-06T20:07:18Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loanApplicationTerms.getLoanTermVariations().nextVariation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((loanTermVariationsData.getDecimalValue()) == null) { adjustInstallmentOrPrincipalAmount(loanApplicationTerms, totalCumulativePrincipal, periodNumber, mc, holidayDetailDTO); }else { loanApplicationTerms.setCurrentPeriodFixedEmiAmount(loanTermVariationsData.getDecimalValue()); recalculateAmounts = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4002/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.loanaccount.loanschedule.domain.AbstractLoanScheduleGenerator.java", "BodyUseAPI": ["org.mifosplatform.portfolio.loanaccount.loanschedule.domain.LoanApplicationTerms.setCurrentPeriodFixedEmiAmount(loanTermVariationsData.getDecimalValue())", "org.mifosplatform.portfolio.loanaccount.data.LoanTermVariationsData.getDecimalValue()"], "Fixed commit": "ae5a780b5cad0ba5e1f1cd37f3afa653f6f4967d", "Url": "https://api.github.com/repos/pramodn02/mifosx", "Date": "2015-12-10T05:51:19Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["newTaskComposite.getDetailsSideBar().getSubTaskTableViewer().getTable().getSelectionIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (selectionIndex == (-1)) { newTaskComposite.getNewTaskDetailsContainer().showGeneralInfo(); }else { newTaskComposite.getNewTaskDetailsContainer().showSubTaskInfo(selectionIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4219/buggy-version/RuM_Workspace.src.ee.ut.cs.rum.workspace.internal.ui.task.newtask.sidebar.SubTaskSelectionChangedListener.java", "BodyUseAPI": ["newTaskComposite.getNewTaskDetailsContainer().showSubTaskInfo(int)"], "Fixed commit": "59bb3f92edd3c6b32277b11ec60d999e2b42ef00", "Url": "https://api.github.com/repos/FableBlaze/RuM", "Date": "2016-06-22T21:29:22Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.IndexerRegistry.nullSafeGetIndexer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (indexer.isPermissionAware()) { indexer.reindex(resourceName, com.liferay.portal.kernel.util.GetterUtil.getLong(resourceClassPK)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2389/buggy-version/modules.portal-search.portal-search.src.main.java.com.liferay.portal.search.internal.SearchPermissionCheckerImpl.java", "BodyUseAPI": ["com.liferay.portal.kernel.search.Indexer<?>.reindex(java.lang.String,com.liferay.portal.kernel.util.GetterUtil.getLong(resourceClassPK))"], "Fixed commit": "c3d1d468b7b0c7b68dd598eac8918662917673b2", "Url": "https://api.github.com/repos/Preston-Crary/liferay-portal", "Date": "2016-02-12T22:20:46Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 4) { java.lang.System.out.println(\"Missing parameter. Correct use it moteurIndexation MODE CONF INPUT OUTPUT [QUERY]\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6347/buggy-version/src.main.java.fr.univtours.polytech.indexing_engine_mapreduce.main.Main.java", "BodyUseAPI": [], "Fixed commit": "f960624641764e0f34acbfb04735ae553d714427", "Url": "https://api.github.com/repos/jeromeheissler/indexing-engine-mapreduce", "Date": "2013-04-05T09:31:01Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.stepic.droid.preferences.SharedPreferenceHelper.getInt(org.stepic.droid.preferences.SharedPreferenceHelper.PreferenceType,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (codeInt > 0) { return true; }else if (codeInt == 0) { return false; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4890/buggy-version/app.src.main.java.org.stepic.droid.preferences.SharedPreferenceHelper.java", "BodyUseAPI": [], "Fixed commit": "4fc5641dfa173c16f34d942ff267c5a1ccbc453a", "Url": "https://api.github.com/repos/StepicOrg/stepik-android", "Date": "2016-11-28T21:59:56Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hasData(edt_start.getText().toString())) && (hasData(edt_end.getText().toString()))) { startActivity(new android.content.Intent(getApplicationContext(), com.jatin.mapsdemo.TransitDirectionActivity.class).putExtra(\"originLatLng\", origin).putExtra(\"destLatLng\", destination)); }else { android.widget.Toast.makeText(getApplicationContext(), \"Please enter both source & destination to proceed\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7940/buggy-version/app.src.main.java.com.jatin.mapsdemo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cc906fb9711357700a34f38260206a499cbf50b6", "Url": "https://api.github.com/repos/way2jatin/MapsDemo", "Date": "2017-05-28T14:19:20Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((image) != null) params.put(\"image\", image);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1523/buggy-version/bundles.binding.org.openhab.binding.xbmc.src.main.java.org.openhab.binding.xbmc.rpc.calls.GUIShowNotification.java", "BodyUseAPI": [], "Fixed commit": "4103418242147a4d76dbcf9baba627b636db9172", "Url": "https://api.github.com/repos/jenskastensson/openhab", "Date": "2014-03-23T01:45:13Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openhab.binding.xbmc.internal.XbmcActiveBinding.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (property.equals(\"GUI.ShowNotification\")) connector.showNotification(\"openHAB\", command.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1523/buggy-version/bundles.binding.org.openhab.binding.xbmc.src.main.java.org.openhab.binding.xbmc.internal.XbmcActiveBinding.java", "BodyUseAPI": [], "Fixed commit": "4103418242147a4d76dbcf9baba627b636db9172", "Url": "https://api.github.com/repos/jenskastensson/openhab", "Date": "2014-03-23T01:45:13Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.continuousassurance.swamp.eclipse.BugDetail.getBugInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((bug.getBugGroup()) != null) { sb.append(constructParagraph(org.continuousassurance.swamp.eclipse.ui.DetailView.fmtBold(org.continuousassurance.swamp.eclipse.ui.DetailView.GROUP_LABEL), bug.getBugGroup())); }else { sb.append(constructParagraph(org.continuousassurance.swamp.eclipse.ui.DetailView.fmtBold(org.continuousassurance.swamp.eclipse.ui.DetailView.GROUP_LABEL), \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6017/buggy-version/eclipseplugin.src.org.continuousassurance.swamp.eclipse.ui.DetailView.java", "BodyUseAPI": ["org.continuousassurance.scarf.datastructures.BugInstance.getBugGroup()", "org.continuousassurance.swamp.eclipse.ui.DetailView.constructParagraph(java.lang.String,bug.getBugGroup())", "java.lang.StringBuffer.append(java.lang.StringBuffer)"], "Fixed commit": "495b547a600c76efe03c5c3c0bde5e47458af3ff", "Url": "https://api.github.com/repos/mirswamp/swamp-eclipse-plugin", "Date": "2017-11-02T17:08:17Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bugGroup == null) { bugGroup = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6017/buggy-version/eclipseplugin.src.org.continuousassurance.swamp.eclipse.Activator.java", "BodyUseAPI": [], "Fixed commit": "495b547a600c76efe03c5c3c0bde5e47458af3ff", "Url": "https://api.github.com/repos/mirswamp/swamp-eclipse-plugin", "Date": "2017-11-02T17:08:17Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bug.getBugGroup()) != null) { item.setText(3, bug.getBugGroup()); }else { item.setText(3, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6017/buggy-version/eclipseplugin.src.org.continuousassurance.swamp.eclipse.Controller.java", "BodyUseAPI": ["org.continuousassurance.scarf.datastructures.BugInstance.getBugGroup()", "org.eclipse.swt.widgets.TableItem.setText(int,bug.getBugGroup())"], "Fixed commit": "495b547a600c76efe03c5c3c0bde5e47458af3ff", "Url": "https://api.github.com/repos/mirswamp/swamp-eclipse-plugin", "Date": "2017-11-02T17:08:17Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(player.getTurn())) { java.lang.System.out.println(\"It's NOT your turn\"); }else { java.lang.System.out.println(\"YOUR TURN\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4759/buggy-version/3-2.src._3_2Game_DesktopGUI.GameBoardGUI.java", "BodyUseAPI": [], "Fixed commit": "e86bedd73ffce5f391f44185aae66c5353989c93", "Url": "https://api.github.com/repos/ivantm24/3-2", "Date": "2015-05-10T10:05:59Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 1) { client.DrawFromMD(); }else { client.DrawFromDD(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4759/buggy-version/3-2.src._3_2Game_Client.Player_Client.java", "BodyUseAPI": [], "Fixed commit": "e86bedd73ffce5f391f44185aae66c5353989c93", "Url": "https://api.github.com/repos/ivantm24/3-2", "Date": "2015-05-10T10:05:59Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity instanceof ubic.gemma.model.common.Auditable) { ubic.gemma.model.common.Auditable auditable = ((ubic.gemma.model.common.Auditable) (entity)); if ((auditable.getAuditTrail()) == null) { auditable.setAuditTrail(AuditTrail.Factory.newInstance()); } auditable.setAuditTrail(persistAuditTrail(auditable.getAuditTrail())); if (entity instanceof ubic.gemma.model.common.auditAndSecurity.curation.Curatable) { this.initializeCurationDetails(((ubic.gemma.model.common.auditAndSecurity.curation.Curatable) (entity))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5117/buggy-version/gemma-mda.src.main.java.ubic.gemma.persistence.PersisterHelper.java", "BodyUseAPI": [], "Fixed commit": "c8654994dbd11593a38b2c80964f80a649349b0a", "Url": "https://api.github.com/repos/PavlidisLab/Gemma", "Date": "2017-03-16T17:11:08Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (currentObject.has(\"shortDescription\")) { productDescriptionTV.setText(currentObject.getString(\"shortDescription\")); }else if (currentObject.has(\"longDescription\")) { java.lang.String description = currentObject.getString(\"longDescription\"); productDescriptionTV.setText(description.substring(0, java.lang.Math.min(description.length(), 200))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4745/buggy-version/app.src.main.java.com.projectpinacolada.ucsd.projectpinacolada.ProductInfo.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.has(java.lang.String)", "android.widget.TextView.setText(currentObject.getString(\"shortDescription\"))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "c7604ce09eab97444cf9f7cc202635d3d5db3c0a", "Url": "https://api.github.com/repos/ucsdCSE110wi16/CSE110M240T8", "Date": "2016-02-21T00:04:31Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cisco.oss.foundation.directory.exception.ServiceRuntimeException.getServiceDirectoryError()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((reason != null) && ((reason.getExceptionCode()) != null)) && ((reason.getExceptionCode()) == (com.cisco.oss.foundation.directory.exception.ErrorCode.SERVICE_NOT_EXIST))) { com.cisco.oss.foundation.directory.impl.LookupManagerImpl.LOGGER.info(java.lang.String.format(\"The service name %s not found at Service Directory\", serviceName)); }else { throw new com.cisco.oss.foundation.directory.exception.ServiceException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/641/buggy-version/1.1.sd-api.src.main.java.com.cisco.oss.foundation.directory.impl.LookupManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "96af2abbfc0134ccf51c9b2d68c19435a9e98580", "Url": "https://api.github.com/repos/foundation-runtime/service-directory", "Date": "2015-01-19T07:57:14Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count < 1) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1425/buggy-version/src.mycash.manager.PageCreater.java", "BodyUseAPI": [], "Fixed commit": "d7e5404dfe9b4bbcd2fd8c2aa1136735b5f72511", "Url": "https://api.github.com/repos/MCFT-Server/MyCash", "Date": "2016-10-30T13:21:45Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((args.size()) - 1) >= fromindex) && (((args.size()) - 1) <= toindex)) toindex = args.size(); else if ((args.size()) < toindex) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1425/buggy-version/src.mycash.manager.PageCreater.java", "BodyUseAPI": ["java.util.List<T>.size()", "java.util.List<T>.size()"], "Fixed commit": "d7e5404dfe9b4bbcd2fd8c2aa1136735b5f72511", "Url": "https://api.github.com/repos/MCFT-Server/MyCash", "Date": "2016-10-30T13:21:45Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (page < 1) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1425/buggy-version/src.mycash.manager.PageCreater.java", "BodyUseAPI": [], "Fixed commit": "d7e5404dfe9b4bbcd2fd8c2aa1136735b5f72511", "Url": "https://api.github.com/repos/MCFT-Server/MyCash", "Date": "2016-10-30T13:21:45Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (from < 0) { from = 0; to = getPageCount(); }else if (from > (args.length)) { from = args.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1425/buggy-version/src.mycash.manager.PageCreater.java", "BodyUseAPI": [], "Fixed commit": "d7e5404dfe9b4bbcd2fd8c2aa1136735b5f72511", "Url": "https://api.github.com/repos/MCFT-Server/MyCash", "Date": "2016-10-30T13:21:45Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(self.centerXProperty().isBound())) setCenterX(newX);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/9140/buggy-version/src.main.java.edu.fx_01.ObjectsManipulation.java", "BodyUseAPI": [], "Fixed commit": "3a0da12b3046beaf93f40f329dbb8ffae68bcebf", "Url": "https://api.github.com/repos/ILDAR1976/funwithjavafx", "Date": "2017-06-24T12:47:42Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(self.centerYProperty().isBound())) setCenterY(newY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/9140/buggy-version/src.main.java.edu.fx_01.ObjectsManipulation.java", "BodyUseAPI": [], "Fixed commit": "3a0da12b3046beaf93f40f329dbb8ffae68bcebf", "Url": "https://api.github.com/repos/ILDAR1976/funwithjavafx", "Date": "2017-06-24T12:47:42Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((row.get(i)) != null) { add = fillChars(((maxSizeOfColumn[i]) - (row.get(i).length())), ' '); }else { add = fillChars(((maxSizeOfColumn[i]) - (\"null\".length())), ' '); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4787/buggy-version/src.main.java.ua.com.juja.sergiishcherbakov.sqlcmd.view.FirstTablePrinter.java", "BodyUseAPI": ["ua.com.juja.sergiishcherbakov.sqlcmd.view.FirstTablePrinter.fillChars(int,char)", "java.lang.String.length()", "java.util.List<java.lang.String>.get(int)", "ua.com.juja.sergiishcherbakov.sqlcmd.view.FirstTablePrinter.fillChars(int,char)"], "Fixed commit": "a477ae667820b02789f744c2ddeec280a2522158", "Url": "https://api.github.com/repos/SergiiShcherbakov/SQLCmd", "Date": "2017-05-16T13:28:01Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((table.get(i).get(column)) != null) { currentSize = table.get(i).get(column).length(); if (currentSize > result) result = currentSize; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4787/buggy-version/src.main.java.ua.com.juja.sergiishcherbakov.sqlcmd.view.FirstTablePrinter.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "java.util.List<java.util.List<java.lang.String>>.get(int)", "java.lang.String.length()"], "Fixed commit": "a477ae667820b02789f744c2ddeec280a2522158", "Url": "https://api.github.com/repos/SergiiShcherbakov/SQLCmd", "Date": "2017-05-16T13:28:01Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.mobicents.servlet.sip.core.timers.FaultTolerantSasTimerService.logger.isTraceEnabled()) { org.mobicents.servlet.sip.core.timers.FaultTolerantSasTimerService.logger.trace((((\"Trying to cancel Task with Task ID \" + taskId) + \" on sip app session \") + (expirationTimerTask.getSipApplicationSession().getKey()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3894/buggy-version/containers.sip-servlets-jboss5.src.main.java.org.mobicents.servlet.sip.core.timers.FaultTolerantSasTimerService.java", "BodyUseAPI": ["org.apache.log4j.Logger.trace((((\"Trying to cancel Task with Task ID \" + taskId) + \" on sip app session \") + (expirationTimerTask.getSipApplicationSession().getKey())))"], "Fixed commit": "51ca66f14e4da24608bf00f83e4aab6ec148e758", "Url": "https://api.github.com/repos/Mobicents/sip-servlets", "Date": "2013-01-29T13:47:08Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mobicents.servlet.sip.core.timers.SipApplicationSessionTimerTask.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (timerData == null) { if (org.mobicents.servlet.sip.core.timers.FaultTolerantSasTimerService.logger.isDebugEnabled()) { org.mobicents.servlet.sip.core.timers.FaultTolerantSasTimerService.logger.debug(((\"Task \" + (expirationTimerTask.getSipApplicationSession().getKey())) + \" couldn't be cancelled because timerData is null\")); } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3894/buggy-version/containers.sip-servlets-jboss5.src.main.java.org.mobicents.servlet.sip.core.timers.FaultTolerantSasTimerService.java", "BodyUseAPI": [], "Fixed commit": "51ca66f14e4da24608bf00f83e4aab6ec148e758", "Url": "https://api.github.com/repos/Mobicents/sip-servlets", "Date": "2013-01-29T13:47:08Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mExoPlayer.getCurrentPosition()) >= (mExoPlayer.getDuration())) && ((mExoPlayer.getDuration()) > 0)) { mQueueIndex = ((mQueueIndex) + 1) % (mQueue.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4525/buggy-version/app.src.main.java.com.marverenic.music.player.QueuedExoPlayer.java", "BodyUseAPI": [], "Fixed commit": "236bacf57b42b748bd959614c350f7ac5cfc43ba", "Url": "https://api.github.com/repos/marverenic/Jockey", "Date": "2017-04-04T03:35:11Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxV) > 1) { flT = (flT) / (maxV); frT = (frT) / (maxV); blT = (blT) / (maxV); brT = (brT) / (maxV); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3730/buggy-version/src.org.usfirst.frc.team1160.robot.subsystems.DriveTrain.java", "BodyUseAPI": [], "Fixed commit": "9707c30c6ccf9e7c21a4eade1a649b6e5f301426", "Url": "https://api.github.com/repos/FRC-Team-1160/2015-Recycle-Rush", "Date": "2015-01-22T02:14:32Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (makeImage) { resultImage = getResultImage(roi.scaledImage, roi.width, roi.height, roi.minimum, roi.maximum, roi.sieve, (((determineAlfa.alfa) / (java.lang.Math.PI)) * 180.0), DistributionAnalysis.marrowCenter, determineAlfa.pind, determineAlfa.pindColor, DistributionAnalysis.R, DistributionAnalysis.R2, DistributionAnalysis.Theta); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3443/buggy-version/src.org.doube.bonej.pqct.Distribution_Analysis.java", "BodyUseAPI": [], "Fixed commit": "dfd22b25fad58a6321ed7759a633e5d3a35cfc04", "Url": "https://api.github.com/repos/tjrantal/BoneJ", "Date": "2011-11-04T04:45:42Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.doube.bonej.pqct.GenericDialog.getNextBoolean()", "org.doube.bonej.pqct.GenericDialog.getNextBoolean()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (suppressImages && (!saveImageOnDisk)) { makeImage = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3443/buggy-version/src.org.doube.bonej.pqct.Distribution_Analysis.java", "BodyUseAPI": [], "Fixed commit": "dfd22b25fad58a6321ed7759a633e5d3a35cfc04", "Url": "https://api.github.com/repos/tjrantal/BoneJ", "Date": "2011-11-04T04:45:42Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getList().isEmpty()) { if (bundle == null) gettingDataFromApi(page, size); else restoreData(bundle); }else characterFragmentView.showCharactersList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4278/buggy-version/app.src.main.java.com.sadwyn.iceandfire.presenters.CharactersListPresenter.java", "BodyUseAPI": [], "Fixed commit": "0159d103ae93bd8e214a53c5002b94641860c2ac", "Url": "https://api.github.com/repos/Sadwyn/IceAndFire", "Date": "2017-03-16T14:06:45Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((incompatibleImprovements) >= (freemarker.template._TemplateAPI.VERSION_INT_2_3_22)) { if (m instanceof freemarker.template.TemplateDateModel) { return ((freemarker.template.TemplateDateModel) (m)).getAsDate(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7305/buggy-version/src.main.java.freemarker.ext.jsp.FreeMarkerPageContext.java", "BodyUseAPI": [], "Fixed commit": "9c638804a1ad91739eec96de55ece6c6eeb412b6", "Url": "https://api.github.com/repos/freemarker/freemarker", "Date": "2014-12-20T18:45:49Z"},
{"Line": "=>721", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nagarro.gde.service.api.AssessmentCentreTestDetailsService.fetchByUserId(dto.getUserid())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null != asCentreTestDetails) { updateAssessmentCentreTestDetailsObjFromDto(asCentreTestDetails, dto); assessmentCentreTestDetailsService.saveOrrMerge(asCentreTestDetails); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8372/buggy-version/gde-webapp.src.main.java.com.nagarro.gde.controller.EligoController.java", "BodyUseAPI": ["com.nagarro.gde.controller.EligoController.updateAssessmentCentreTestDetailsObjFromDto(com.nagarro.gde.persistence.model.AssessmentCentreTestDetails,com.nagarro.gde.dto.RegistrationEligoDto)", "com.nagarro.gde.service.api.AssessmentCentreTestDetailsService.saveOrrMerge(com.nagarro.gde.persistence.model.AssessmentCentreTestDetails)"], "Fixed commit": "e11af66b8e8b076bdf855d525b4ce8e1a70a2f44", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-02-24T06:21:47Z"},
{"Line": "=>714", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nagarro.gde.service.api.RegistrationEligoTestDetailsService.fetchByUserId(dto.getUserid())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null != registrationEligoTestDetails) { updateRegEligoTestDetailsObjfromDto(registrationEligoTestDetails, dto); testDetailsService.saveOrrMerge(registrationEligoTestDetails); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8372/buggy-version/gde-webapp.src.main.java.com.nagarro.gde.controller.EligoController.java", "BodyUseAPI": ["com.nagarro.gde.service.api.RegistrationEligoTestDetailsService.saveOrrMerge(com.nagarro.gde.persistence.model.RegistrationEligoTestDetails)", "com.nagarro.gde.controller.EligoController.updateRegEligoTestDetailsObjfromDto(com.nagarro.gde.persistence.model.RegistrationEligoTestDetails,com.nagarro.gde.dto.RegistrationEligoDto)"], "Fixed commit": "e11af66b8e8b076bdf855d525b4ce8e1a70a2f44", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-02-24T06:21:47Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((playerleft) && (collides()))) { cm.setPaint(java.awt.Color.white); }else if (collides()) { cm.setPaint(java.awt.Color.gray); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/841/buggy-version/src.mapobjects.Bomb.java", "BodyUseAPI": [], "Fixed commit": "1cb96a818ab0a7a3d08f3bad26825b5730fe7018", "Url": "https://api.github.com/repos/propra12-orga/gruppe21", "Date": "2012-06-10T13:43:11Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.elfak.chasegame.GameService.isThief) { if ((gameTimer) != null) gameTimer.cancel(); if ((vestHandler) != null) vestHandler.removeCallbacks(announceBulletproofEnd); items.addAll(gatheredItems); gatheredItems = new java.util.ArrayList<edu.elfak.chasegame.ObjectOnMap>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2250/buggy-version/src.edu.elfak.chasegame.GameService.java", "BodyUseAPI": [], "Fixed commit": "9e1080fae4aba5a5a61848b31e4f8cb9c46a608c", "Url": "https://api.github.com/repos/filip-jovanovic/chase_game", "Date": "2013-02-10T19:16:42Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.core.issue.db.IssueChangeDao.selectCommentByKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (comment == null) { throw new java.lang.IllegalStateException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/984/buggy-version/sonar-server.src.main.java.org.sonar.server.issue.IssueCommentService.java", "BodyUseAPI": [], "Fixed commit": "e63a71c6b124d1286fac11bcb89aff7984e8cede", "Url": "https://api.github.com/repos/SonarSource/sonar", "Date": "2013-05-15T14:36:03Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.core.issue.db.IssueChangeDao.selectCommentByKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.google.common.base.Strings.isNullOrEmpty(comment.userLogin())) || (!(com.google.common.base.Objects.equal(comment.userLogin(), userSession.login())))) { throw new java.lang.IllegalStateException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/984/buggy-version/sonar-server.src.main.java.org.sonar.server.issue.IssueCommentService.java", "BodyUseAPI": [], "Fixed commit": "e63a71c6b124d1286fac11bcb89aff7984e8cede", "Url": "https://api.github.com/repos/SonarSource/sonar", "Date": "2013-05-15T14:36:03Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((iSeason[i]) > 20) && (((iSeason[i]) % 4) == 0)) && ((isCut[i]) == false)) && ((java.lang.Math.random()) < 0.05)) { isDead[i] = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3497/buggy-version/src.h13_Methods.H13_Final_02_Orchard.java", "BodyUseAPI": [], "Fixed commit": "6ce44e13cbd1b12e0d0a32d32ea8b0151a20ff0a", "Url": "https://api.github.com/repos/2025989/inleiding-java", "Date": "2015-10-30T08:50:13Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((iSeason[i]) > 20) && (((iSeason[i]) % 4) == 0)) && ((isCut[i]) == false)) && ((java.lang.Math.random()) < 0.05)) { isDead[i] = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3497/buggy-version/src.h13_Methods.H13_Final_02_Orchard.java", "BodyUseAPI": [], "Fixed commit": "6ce44e13cbd1b12e0d0a32d32ea8b0151a20ff0a", "Url": "https://api.github.com/repos/2025989/inleiding-java", "Date": "2015-10-30T08:50:13Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((al) == 0) a = 0; else a = java.lang.Float.parseFloat(sp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6317/buggy-version/calculator.src.calculator.home.java", "BodyUseAPI": [], "Fixed commit": "a5f78858f36dfc0e7ef9485972290d2386ae3efc", "Url": "https://api.github.com/repos/thamshid/calculator", "Date": "2014-11-03T02:59:12Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (taskDo.CategoryList.getCategoryList().isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6647/buggy-version/src.taskDo.CategoryList.java", "BodyUseAPI": [], "Fixed commit": "2533d187fbad9a53a4c4f7686712cb8729f7ce70", "Url": "https://api.github.com/repos/cs2103aug2014-t17-1j/main", "Date": "2014-10-23T08:39:02Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((maxRoundSeconds == 0) && (maxRoundMinutes == 0)) { roundMaxMinutes = java.lang.Integer.MAX_VALUE; roundMaxSeconds = java.lang.Integer.MAX_VALUE; }else { this.roundMaxMinutes = maxRoundMinutes; this.roundMaxSeconds = maxRoundSeconds; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/844/buggy-version/app.src.main.java.com.fighttimer.stambeto09.fighttimer.Timer.java", "BodyUseAPI": [], "Fixed commit": "841607b0acd99e97b3f2f4d9868ff10d8c743252", "Url": "https://api.github.com/repos/stambeto09/FightTimer", "Date": "2015-02-12T07:05:55Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (playlist_as_string.isEmpty()) song_ids = new java.lang.String[0]; else song_ids = playlist_as_string.split(\"#\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/9000/buggy-version/src.model.Playlist.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "b1cf06f7d43bd5e4b4123f3938c7f723905d9bd1", "Url": "https://api.github.com/repos/scottstav/aural", "Date": "2017-03-21T04:09:30Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5215/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "d5ef8cec561c80ae5e85f8ae41c289301ea5a75b", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(info.jkjensen.familymap.Model.FamilyMap.getInstance().mIsUserLoggedIn)) { mMenuItemFilter.setVisible(false); mMenuItemSearch.setVisible(false); mMenuItemSettings.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2282/buggy-version/FamilyMap.app.src.main.java.info.jkjensen.familymap.UI.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "30e8768a605f88fb334370d78a9b672a4f009892", "Url": "https://api.github.com/repos/azjkjensen/Android-Projects", "Date": "2016-03-25T22:23:48Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jazmin.driver.rpc.SyncRpcInvocationHandler.invokeSync(jazmin.server.rpc.RpcSession,java.lang.String,java.lang.Object[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (msg == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1870/buggy-version/JazminServer.src.jazmin.driver.rpc.SyncRpcInvocationHandler.java", "BodyUseAPI": [], "Fixed commit": "7012e3038ca9c5ef841e6aa26af36cd4587ccaa1", "Url": "https://api.github.com/repos/guooscar/JazminServer", "Date": "2016-01-04T13:28:05Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context.getIntent()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/980/buggy-version/src.com.axelby.podax.FlattrHelper.java", "BodyUseAPI": [], "Fixed commit": "9c3be57a36840b7395f3912662fc451fa10f3186", "Url": "https://api.github.com/repos/thasmin/Podax", "Date": "2012-11-10T17:00:47Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((value != null) && ((value.getSize()) > 0)) { for (org.qii.weiciyuan.bean.MessageBean b : value.getStatuses()) { org.qii.weiciyuan.support.utils.TimeTool.dealMills(b); org.qii.weiciyuan.support.utils.ListViewTool.addJustHighLightLinks(b); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2967/buggy-version/src.org.qii.weiciyuan.dao.user.StatusesTimeLineDao.java", "BodyUseAPI": ["org.qii.weiciyuan.bean.MessageListBean.getStatuses()"], "Fixed commit": "37bbf72404ce09901944c5e4ebe1bc5896d6bbec", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-06T04:03:25Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((value != null) && ((value.getReposts().size()) > 0)) { for (org.qii.weiciyuan.bean.MessageBean b : value.getReposts()) { org.qii.weiciyuan.support.utils.TimeTool.dealMills(b); org.qii.weiciyuan.support.utils.ListViewTool.addJustHighLightLinks(b); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2967/buggy-version/src.org.qii.weiciyuan.dao.timeline.RepostsTimeLineByIdDao.java", "BodyUseAPI": ["org.qii.weiciyuan.bean.RepostListBean.getReposts()"], "Fixed commit": "37bbf72404ce09901944c5e4ebe1bc5896d6bbec", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-06T04:03:25Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(params.isEmpty())) jerseyRequest.addParams(params);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4135/buggy-version/src.main.java.com.jaspersoft.jasperserver.jaxrs.client.apiadapters.context.SingleContextAdapter.java", "BodyUseAPI": ["com.jaspersoft.jasperserver.jaxrs.client.core.JerseyRequest<M>.addParams(javax.ws.rs.core.MultivaluedHashMap<java.lang.String, java.lang.String>)"], "Fixed commit": "221d8a0ed31bf41426f8e2734b97defadc8b1906", "Url": "https://api.github.com/repos/TanyaEf/jrs-rest-java-client", "Date": "2017-06-12T15:53:49Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(com.TeamHEC.LocomotionCommotion.Goal.Graph.GoalGenerationAlgorithm.stations.contains(currentNode.mapobj))) && (i == ((pathLength) - 1))) { goalPath.remove(currentNode); i--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5984/buggy-version/core.src.com.TeamHEC.LocomotionCommotion.Goal.Graph.GoalGenerationAlgorithm.java", "BodyUseAPI": ["java.util.ArrayList<com.TeamHEC.LocomotionCommotion.Goal.Graph.Node>.remove(com.TeamHEC.LocomotionCommotion.Goal.Graph.Node)"], "Fixed commit": "200f2687235c347219c154de49c217a788f3c44b", "Url": "https://api.github.com/repos/SEPR-EEP/taxe-game-2", "Date": "2015-02-15T17:28:21Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inserted == null) throw new java.lang.IllegalStateException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/74/buggy-version/src.main.java.grammar.derivationtree.DerivationTree.java", "BodyUseAPI": [], "Fixed commit": "d8a2d6bca6e8163bacb7a9450a8bc81e4701e3b9", "Url": "https://api.github.com/repos/fapsi/JTIG", "Date": "2013-11-08T00:57:24Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subjects.isEmpty()) java.lang.System.out.println(\"ups\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4290/buggy-version/src.de.freiburg.uni.iig.sisi.simulation.SimulationEngine.java", "BodyUseAPI": [], "Fixed commit": "c168facde89649898c65d3a927f6fd4adb3941e3", "Url": "https://api.github.com/repos/sebald/SiSi", "Date": "2012-06-05T19:16:39Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expEventVisited) { return maxExitRate; }else { return 1.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1646/buggy-version/prism.src.explicit.GSMPSimple.java", "BodyUseAPI": [], "Fixed commit": "56b1976671b15a76c2fe96a4ae3b66da3b2884db", "Url": "https://api.github.com/repos/muhrik/prism-gsmp", "Date": "2017-12-06T18:32:09Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, com.mulesoft.portal.client.APIModel>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (apiModel == null) { apiModel = version.getAPIModel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2095/buggy-version/com.mulesoft.portal.sync.buildSrc.src.main.java.com.mulesoft.portal.apis.sync.SynchronizationManager.java", "BodyUseAPI": [], "Fixed commit": "1fcf6e0bca452d1599ebfdc3d75791657bec0cf4", "Url": "https://api.github.com/repos/raml-apis/synchronization", "Date": "2015-04-01T21:30:13Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.resources.UserInput.getTask()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (task.isRecurring()) { task.setRecurTime(((task.getRecurTime()) - 1)); java.util.Calendar calStart = java.util.Calendar.getInstance(); java.util.Calendar calEnd = java.util.Calendar.getInstance(); while ((task.getRecurTime()) > 0) { main.resources.Task newTask = main.resources.Task.duplicateTask(task); taskList.add(newTask); task.setRecurTime(((task.getRecurTime()) - 1)); main.resources.Date dateStart = task.getTaskStartDate(); calStart.set(dateStart.getYear(), dateStart.getMonth(), dateStart.getDay()); main.resources.Date dateEnd; if ((task.getTaskEndDate()) != null) { dateEnd = task.getTaskEndDate(); calEnd.set(dateEnd.getYear(), dateEnd.getMonth(), dateEnd.getDay()); } switch (task.getRecurFrequency()) { case 1 : { calStart.add(java.util.Calendar.DAY_OF_MONTH, 1); calEnd.add(java.util.Calendar.DAY_OF_MONTH, 1); task.setTaskStartDate(new main.resources.Date(calStart.get(java.util.Calendar.DAY_OF_MONTH), calStart.get(java.util.Calendar.MONTH), calStart.get(java.util.Calendar.YEAR))); if ((task.getTaskEndDate()) != null) { task.setTaskEndDate(new main.resources.Date(calEnd.get(java.util.Calendar.DAY_OF_MONTH), calEnd.get(java.util.Calendar.MONTH), calEnd.get(java.util.Calendar.YEAR))); } break; } case 2 : { calStart.add(java.util.Calendar.DAY_OF_MONTH, 7); calEnd.add(java.util.Calendar.DAY_OF_MONTH, 7); task.setTaskStartDate(new main.resources.Date(calStart.get(java.util.Calendar.DAY_OF_MONTH), calStart.get(java.util.Calendar.MONTH), calStart.get(java.util.Calendar.YEAR))); if ((task.getTaskEndDate()) != null) { task.setTaskEndDate(new main.resources.Date(calEnd.get(java.util.Calendar.DAY_OF_MONTH), calEnd.get(java.util.Calendar.MONTH), calEnd.get(java.util.Calendar.YEAR))); } break; } case 3 : { calStart.add(java.util.Calendar.MONTH, 1); calEnd.add(java.util.Calendar.MONTH, 1); task.setTaskStartDate(new main.resources.Date(calStart.get(java.util.Calendar.DAY_OF_MONTH), calStart.get(java.util.Calendar.MONTH), calStart.get(java.util.Calendar.YEAR))); if ((task.getTaskEndDate()) != null) { task.setTaskEndDate(new main.resources.Date(calEnd.get(java.util.Calendar.DAY_OF_MONTH), calEnd.get(java.util.Calendar.MONTH), calEnd.get(java.util.Calendar.YEAR))); } break; } case 4 : { calStart.add(java.util.Calendar.YEAR, 1); calEnd.add(java.util.Calendar.YEAR, 1); task.setTaskStartDate(new main.resources.Date(calStart.get(java.util.Calendar.DAY_OF_MONTH), calStart.get(java.util.Calendar.MONTH), calStart.get(java.util.Calendar.YEAR))); if ((task.getTaskEndDate()) != null) { task.setTaskEndDate(new main.resources.Date(calEnd.get(java.util.Calendar.DAY_OF_MONTH), calEnd.get(java.util.Calendar.MONTH), calEnd.get(java.util.Calendar.YEAR))); } break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7723/buggy-version/src.main.logic.Add.java", "BodyUseAPI": ["main.resources.Task.getRecurTime()", "main.resources.Task.setRecurTime(((task.getRecurTime()) - 1))", "main.resources.Task.setRecurTime(((task.getRecurTime()) - 1))", "main.resources.Task.getRecurFrequency()", "main.resources.Task.setTaskStartDate(main.resources.Date)", "main.resources.Task.setTaskStartDate(main.resources.Date)", "main.resources.Task.setTaskEndDate(main.resources.Date)", "main.resources.Task.getTaskStartDate()", "main.resources.Task.getTaskEndDate()", "main.resources.Task.setTaskStartDate(main.resources.Date)", "main.resources.Task.getTaskEndDate()", "main.resources.Task.getRecurTime()", "main.resources.Task.getTaskEndDate()", "main.resources.Task.setTaskStartDate(main.resources.Date)", "main.resources.Task.duplicateTask(main.resources.Task)", "main.resources.Task.getRecurTime()", "main.resources.Task.getTaskEndDate()", "main.resources.Task.getTaskEndDate()", "main.resources.Task.getTaskEndDate()", "main.resources.Task.setTaskEndDate(main.resources.Date)", "main.resources.Task.setTaskEndDate(main.resources.Date)", "main.resources.Task.setTaskEndDate(main.resources.Date)"], "Fixed commit": "7a20f7bd5e4625bdd00a98dedc7d6d4825ab3b63", "Url": "https://api.github.com/repos/cs2103jan2016-f13-2j/main", "Date": "2016-04-08T12:21:19Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.resources.UserInput.getTask()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((task.getTaskStartDate()) != null) && ((task.getTaskStartDate().compareTo(main.logic.MainLogic.getCurrentDate())) < 0)) { task.setExpired(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7723/buggy-version/src.main.logic.Add.java", "BodyUseAPI": ["main.resources.Task.setExpired(boolean)"], "Fixed commit": "7a20f7bd5e4625bdd00a98dedc7d6d4825ab3b63", "Url": "https://api.github.com/repos/cs2103jan2016-f13-2j/main", "Date": "2016-04-08T12:21:19Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { initConnectionReceiver(); connectionManager = new ch.hsr.zedcontrol.roborio.ConnectionManager(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1440/buggy-version/ZEDControl.app.src.main.java.ch.hsr.zedcontrol.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f2885adb52cb4d559bcca86598486d40e3560447", "Url": "https://api.github.com/repos/AZOM/cybathlon", "Date": "2016-06-21T13:40:25Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MainClass.mazeRunner.isText()) { MainClass.mazeRunner.removeText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6004/buggy-version/MazeRunner.src.UserInput.UserInput.java", "BodyUseAPI": [], "Fixed commit": "63e9444f99afd2f3bb6088dbf3f9b54d3b692d6a", "Url": "https://api.github.com/repos/jwang92/EWI3620TU-GROUP10", "Date": "2014-01-10T11:19:26Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((engine.GlobalData.getCurrentState()) instanceof engine.state.MainGame) { ((engine.state.MainGame) (engine.GlobalData.getCurrentState())).formManager.clearTutorial(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3970/buggy-version/src.engine.network.client.ClientTutorial.java", "BodyUseAPI": [], "Fixed commit": "2987d550a0d98e17d38aaad38b10ed0017e9681c", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-09-18T09:14:11Z"},
{"Line": "=>740", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Sirius.server.middleware.types.MetaObject.getAttribs()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mAttr[i].isVirtualOneToManyAttribute()) { if (value == null) { if (Sirius.server.localserver.object.PersistenceManager.LOG.isDebugEnabled()) { Sirius.server.localserver.object.PersistenceManager.LOG.debug(((mAttr[i]) + \"is virtual one to many attribute and has no values -> ignored\")); } }else { final Sirius.server.middleware.types.MetaObject moAttr = ((Sirius.server.middleware.types.MetaObject) (value)); insertMetaObjectArray(user, moAttr); } continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5219/buggy-version/cids-server.src.main.java.Sirius.server.localserver.object.PersistenceManager.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(((mAttr[i]) + \"is virtual one to many attribute and has no values -> ignored\"))"], "Fixed commit": "20e5e99e1b976008b1c0d4707caecf5d79b9f4d5", "Url": "https://api.github.com/repos/cismet/cids-server", "Date": "2012-04-13T13:11:36Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (e != null) { if ((e.getCause()) != null) result = e.getCause().getMessage(); else result = e.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3200/buggy-version/data-weave-plugin.src.main.java.org.mule.tooling.lang.dw.editor.WeavePreview.java", "BodyUseAPI": ["java.lang.Throwable.getMessage()", "java.lang.Exception.getCause()", "java.lang.Exception.getCause()", "java.lang.Exception.getMessage()"], "Fixed commit": "188a85048d6840f900c11c869992cc8d84c7f5a0", "Url": "https://api.github.com/repos/machaval/mule-intellij-plugins", "Date": "2017-03-10T16:55:42Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gephi.visualization.swing.GraphCanvas.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (c != null) { c.remove(graphComponent); c.add(graphComponent, java.awt.BorderLayout.CENTER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1685/buggy-version/modules.VisualizationImpl.src.main.java.org.gephi.visualization.swing.GraphCanvas.java", "BodyUseAPI": ["java.awt.Container.add(org.gephi.visualization.swing.GraphCanvas,java.lang.String)", "java.awt.Container.remove(org.gephi.visualization.swing.GraphCanvas)"], "Fixed commit": "55f6484a14f83509e3281da27a9c21b6ffc6bbea", "Url": "https://api.github.com/repos/duncdrum/gephi", "Date": "2016-02-07T10:56:03Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bsg.upm.api.http.RespJson.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (datas.isEmpty()) { return new com.alibaba.fastjson.JSONArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6102/buggy-version/src.main.java.com.bsg.upm.api.service.MonitorHostConfigService.java", "BodyUseAPI": [], "Fixed commit": "e7afa57bee9a42865eedc4a631e37596de8de2b1", "Url": "https://api.github.com/repos/upmio/upm_api", "Date": "2017-11-20T08:14:33Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bsg.upm.api.http.RespJson.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (datas.isEmpty()) { return new com.alibaba.fastjson.JSONArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6102/buggy-version/src.main.java.com.bsg.upm.api.service.MonitorHostConfigService.java", "BodyUseAPI": [], "Fixed commit": "e7afa57bee9a42865eedc4a631e37596de8de2b1", "Url": "https://api.github.com/repos/upmio/upm_api", "Date": "2017-11-20T08:14:33Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pullToRefresh) { if (com.tale.rxrepositorymosby.RxRepositoryMvpLcePresenter.isViewAttached()) { com.tale.rxrepositorymosby.RxRepositoryMvpLcePresenter.getView().showContent(); } }else if (((error) == null) && (!(repository.hasCache()))) { if (com.tale.rxrepositorymosby.RxRepositoryMvpLcePresenter.isViewAttached()) { com.tale.rxrepositorymosby.RxRepositoryMvpLcePresenter.getView().showError(new java.util.NoSuchElementException(), this.pullToRefresh); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5755/buggy-version/rxrepositorymosby.src.main.java.com.tale.rxrepositorymosby.RxRepositoryMvpLcePresenter.java", "BodyUseAPI": [], "Fixed commit": "584e5ffe7557cafcc15d0744b004c98d39744d09", "Url": "https://api.github.com/repos/talenguyen/RxRepository", "Date": "2015-12-31T02:02:03Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.tale.rxrepositorymosby.RxRepositoryMvpLcePresenter.isViewAttached()) { com.tale.rxrepositorymosby.RxRepositoryMvpLcePresenter.getView().showError(e, true); if (pullToRefresh) { com.tale.rxrepositorymosby.RxRepositoryMvpLcePresenter.getView().showContent(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5755/buggy-version/rxrepositorymosby.src.main.java.com.tale.rxrepositorymosby.RxRepositoryMvpLcePresenter.java", "BodyUseAPI": [], "Fixed commit": "584e5ffe7557cafcc15d0744b004c98d39744d09", "Url": "https://api.github.com/repos/talenguyen/RxRepository", "Date": "2015-12-31T02:02:03Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mRefreshed)) { startRefresh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/551/buggy-version/android.src.main.java.com.thebluealliance.androidclient.activities.RefreshableHostActivity.java", "BodyUseAPI": [], "Fixed commit": "13756a8b0a3f359deea05f3066e590d70508088d", "Url": "https://api.github.com/repos/the-blue-alliance/the-blue-alliance-android", "Date": "2014-08-13T01:28:20Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((checkInTime) == null) { checkInTime = new java.util.Date(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7064/buggy-version/src.main.java.org.kumoricon.model.attendee.Attendee.java", "BodyUseAPI": [], "Fixed commit": "d6b54b9c47d3586a1106084bd3f7c2bbcf3a5cc9", "Url": "https://api.github.com/repos/kumoregdev/kumoreg", "Date": "2017-09-04T17:40:44Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.dots.size()) > 0) && (this.dots.get(((this.dots.size()) - 1)).inLine())) { while (((this.dots.size()) > 0) && (this.dots.get(((this.dots.size()) - 1)).inLine())) { this.dots.remove(((this.dots.size()) - 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2880/buggy-version/src.Canvas.java", "BodyUseAPI": ["java.util.ArrayList<Dot>.get(int)", "java.util.ArrayList<Dot>.size()", "java.util.ArrayList<Dot>.size()", "java.util.ArrayList<Dot>.size()", "Dot.inLine()", "java.util.ArrayList<Dot>.remove(int)"], "Fixed commit": "b7caee1d57c286e10d9189ec6957de5fa036f73d", "Url": "https://api.github.com/repos/Famousjasper/Jollgren", "Date": "2017-10-20T20:08:24Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBound) && ((mDataCollectionService) != null)) { mDataCount = mDataCollectionService.getCount(); }else { mDataCount = prefs.getLong(getString(R.string.pref_dataCount), 0L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6115/buggy-version/app.src.main.java.org.fraunhofer.cese.madcap.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b24e00f87159c6c9f042aa7edb289a7f6a4a0331", "Url": "https://api.github.com/repos/FraunhoferCESE/madcap", "Date": "2017-05-02T15:36:27Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((viewHolder.getAdapterPosition()) < 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/180/buggy-version/powerfulrecyclerviewlib.src.main.java.com.zjutkz.powerfulrecyclerview.touchHelper.SimpleItemTouchHelperCallback.java", "BodyUseAPI": [], "Fixed commit": "429d07ba804379ae1e2bcd6bdafed00c70122ec9", "Url": "https://api.github.com/repos/zjutkz/PowerfulRecyclerView", "Date": "2016-11-24T06:07:36Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == ((felipe.size()) - 1)) { result += felipe.get(i); }else { result += (felipe.get(i)) + \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6063/buggy-version/Map.java", "BodyUseAPI": ["java.util.ArrayList.get(int)", "java.util.ArrayList.get(int)"], "Fixed commit": "8e0570a05103f9ecaccaa16f5c02e390a626dfb4", "Url": "https://api.github.com/repos/Mohamedtamara/WabbaFlabba", "Date": "2017-01-22T13:11:59Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isViewMode) { if ((event.getAction()) == (android.view.MotionEvent.ACTION_DOWN)) { prevX = event.getX(); prevY = event.getY(); } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6070/buggy-version/app.src.main.java.hcay.pui.com.umlapp.DrawingView.java", "BodyUseAPI": [], "Fixed commit": "6c5e5b243002391667ab32e1e23e6c7abbf6158f", "Url": "https://api.github.com/repos/aybarra/CS6456Project", "Date": "2015-11-15T04:24:12Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pc.getApplicationContext().isSetDomainCookies())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/302/buggy-version/railo-java.railo-core.src.railo.runtime.util.PageContextUtil.java", "BodyUseAPI": [], "Fixed commit": "cc7faa05eeb134fa6711610976a1f040ebf60218", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-11-27T16:35:12Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (returnString.equals(\"WR,RB\")) { returnString = \"RB\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5534/buggy-version/FFR.src.com.example.fantasyfootballrankings.ClassFiles.LittleStorage.BasicInfo.java", "BodyUseAPI": [], "Fixed commit": "948b1cd2b4c51bfb3ec636c02bb4da247c42fd70", "Url": "https://api.github.com/repos/jbailey2010/FFR", "Date": "2014-06-04T03:37:41Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dna.profiler.complexity.ComplexityType.Type.compareTo(dna.profiler.complexity.ComplexityType.Type)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((res == 0) && ((this.complexityType) == (dna.profiler.complexity.ComplexityType.Type.Linear))) { res = this.complexityBase.compareTo(o.complexityBase); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3194/buggy-version/src.dna.profiler.complexity.ComplexityType.java", "BodyUseAPI": [], "Fixed commit": "925b3853bfe2fd77c04a90444d986183daf16545", "Url": "https://api.github.com/repos/NicoHaase/DNA", "Date": "2013-10-09T09:00:04Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((updateData) == \"gt\") return (a.compareTo(b)) > 0; else if ((updateData) == \"lt\") return (a.compareTo(b)) < 0; else if ((updateData) == \"eq\") return a.equals(b);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4394/buggy-version/Update.java", "BodyUseAPI": [], "Fixed commit": "c2141e86ccac92e2ff165b552d56560b0ec09bc0", "Url": "https://api.github.com/repos/sopu/OO-GraphDB", "Date": "2014-11-01T07:41:46Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Properties.class.isAssignableFrom(f.getType())) { return new org.kohsuke.args4j.spi.FieldSetter(bean, f); }else if (java.util.Map.class.isAssignableFrom(f.getType())) { return new org.kohsuke.args4j.MapSetter(bean, f); }else { return new org.kohsuke.args4j.spi.FieldSetter(bean, f); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4079/buggy-version/args4j.src.org.kohsuke.args4j.spi.Setters.java", "BodyUseAPI": ["java.lang.Class.isAssignableFrom(java.lang.Class<?>)", "java.lang.reflect.Field.getType()"], "Fixed commit": "e81c390dce2f0b0e65cd8bc8b9096c5964a4cc60", "Url": "https://api.github.com/repos/danbim/args4j", "Date": "2013-02-19T21:21:11Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["KunderaMetadata.INSTANCE.getApplicationMetadata()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (appMetadata.isNative(jpaQuery)) { mappedClass = appMetadata.getMappedClass(jpaQuery); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5619/buggy-version/kundera-core.src.main.java.com.impetus.kundera.query.QueryResolver.java", "BodyUseAPI": ["com.impetus.kundera.metadata.model.ApplicationMetadata.getMappedClass(java.lang.String)"], "Fixed commit": "e47a828502a7224860e5427b85b6abfe3116a310", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2013-09-12T12:24:45Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(entry.isDirectory())) && (entry.getName().toLowerCase().equals(\"mod.properties\"))) { java.util.Properties properties = new java.util.Properties(); properties.load(zipInputStream); className = properties.getProperty(\"modClass\"); }else if ((!(entry.isDirectory())) && (entry.getName().toLowerCase().startsWith(\"assets/\"))) { ethanjones.modularworld.core.mod.ModManager.writeToFile(modAssets.child(fileHandle.name()).child(entry.getName().substring(7)), zipInputStream); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6461/buggy-version/core.src.ethanjones.modularworld.core.mod.ModManager.java", "BodyUseAPI": ["java.util.zip.ZipEntry.isDirectory()", "java.lang.String.startsWith(java.lang.String)", "modAssets.child(fileHandle.name()).child(java.lang.String)", "java.lang.String.toLowerCase()", "ethanjones.modularworld.core.mod.ModManager.writeToFile(modAssets.child(fileHandle.name()).child(entry.getName().substring(7)),java.util.zip.ZipInputStream)", "java.util.zip.ZipEntry.getName()", "java.util.zip.ZipEntry.getName()", "java.lang.String.substring(int)"], "Fixed commit": "18be1223cbc7d05ec104cd937268ccb453aac0fc", "Url": "https://api.github.com/repos/ictrobot/ModularWorld", "Date": "2014-10-23T20:10:53Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((chatHistory.getChatMessages().size()) != 0) recyclerViewChatHistory.smoothScrollToPosition(((chatHistory.getChatMessages().size()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3547/buggy-version/app.src.main.java.net.atomarea.flowx.ui.activities.ChatHistoryActivity.java", "BodyUseAPI": ["net.atomarea.flowx.data.ChatHistory.getChatMessages()", "chatHistory.getChatMessages().size()", "android.support.v7.widget.RecyclerView.smoothScrollToPosition(((chatHistory.getChatMessages().size()) - 1))"], "Fixed commit": "b97aa9af0ef6c73a1a030033b083f6388e71e2e9", "Url": "https://api.github.com/repos/atomarea/FlowX", "Date": "2016-08-09T11:10:25Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(params.fixTimeWarpBug)) { store.setChainHead(checkpoint); }else { if (((checkpoint.getHeight()) % (params.getInterval())) == 0) { org.bitcoinj.core.StoredBlock checkpoint2015 = null; for (org.bitcoinj.core.StoredBlock block : manager.checkpoints.values()) if ((block.getHeight()) == ((checkpoint.getHeight()) - 1)) { checkpoint2015 = block; break; } if (checkpoint2015 == null) throw new java.lang.RuntimeException(\"Could not find checkpoint 'mod 2015' block. Something wrong with checkpoint export tool\"); store.put(checkpoint2015); store.setChainHead(checkpoint); }else if (((checkpoint.getHeight()) % (params.getInterval())) == 2015) { org.bitcoinj.core.StoredBlock checkpoint2016 = null; for (org.bitcoinj.core.StoredBlock block : manager.checkpoints.values()) if ((block.getHeight()) == ((checkpoint.getHeight()) + 1)) { checkpoint2016 = block; break; } if (checkpoint2016 == null) throw new java.lang.RuntimeException(\"Could not find checkpoint 'mod 2016' block. Something wrong with checkpoint export tool\"); store.put(checkpoint2016); store.setChainHead(checkpoint2016); }else throw new java.lang.RuntimeException(\"must never happen! Something wrong with checkpoint export tool\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3556/buggy-version/core.src.main.java.org.bitcoinj.core.CheckpointManager.java", "BodyUseAPI": ["org.bitcoinj.core.NetworkParameters.getInterval()", "org.bitcoinj.core.NetworkParameters.getInterval()"], "Fixed commit": "ab930b5c83fc8efb6d52b9bfcbfed15d8d489a90", "Url": "https://api.github.com/repos/litecoin-project/bitcoinj-alice", "Date": "2015-01-18T10:16:22Z"},
{"Line": "=>869", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (params.fixTimeWarpBug) if (((storedPrev.getHeight()) + 1) != (params.getInterval())) realInterval = params.getInterval();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3556/buggy-version/core.src.main.java.org.bitcoinj.core.AbstractBlockChain.java", "BodyUseAPI": ["org.bitcoinj.core.NetworkParameters.getInterval()", "org.bitcoinj.core.NetworkParameters.getInterval()"], "Fixed commit": "ab930b5c83fc8efb6d52b9bfcbfed15d8d489a90", "Url": "https://api.github.com/repos/litecoin-project/bitcoinj-alice", "Date": "2015-01-18T10:16:22Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((o2.getObject()) != null) && ((o2.getObject().getHeight()) == 1)) { o2y--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8642/buggy-version/CLIENT.src.data_handlers.MapHandler.java", "BodyUseAPI": [], "Fixed commit": "0d1147c8b7c9ddb0256e50e35c99cdddf85a2155", "Url": "https://api.github.com/repos/Titousensei/bluesaga", "Date": "2016-08-10T02:14:12Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((o1.getObject()) != null) && ((o1.getObject().getHeight()) == 1)) { o1y--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8642/buggy-version/CLIENT.src.data_handlers.MapHandler.java", "BodyUseAPI": [], "Fixed commit": "0d1147c8b7c9ddb0256e50e35c99cdddf85a2155", "Url": "https://api.github.com/repos/Titousensei/bluesaga", "Date": "2016-08-10T02:14:12Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.commcare.suite.model.StackFrameStep.getId()", "org.commcare.suite.model.StackFrameStep.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((key != null) && (value != null)) { data.put(key, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1219/buggy-version/backend.src.org.commcare.util.CommCareSession.java", "BodyUseAPI": ["org.javarosa.core.util.OrderedHashtable.put(java.lang.String,java.lang.String)"], "Fixed commit": "f9d1bf105d3e4e6d821e1e0ee1c3d5e2d6d1d50d", "Url": "https://api.github.com/repos/dimagi/commcare-core", "Date": "2015-05-01T01:33:29Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loading.isLoading()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1942/buggy-version/app.src.main.java.com.hyc.eyepetizer.view.SelectionActivity.java", "BodyUseAPI": [], "Fixed commit": "526fe47a040f8631859b2512d9cbe43ffa14e87f", "Url": "https://api.github.com/repos/1201205/Eyepetizer", "Date": "2016-10-17T15:23:25Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAnimating) { if (isStarting) { return true; } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1942/buggy-version/app.src.main.java.com.hyc.eyepetizer.view.SelectionActivity.java", "BodyUseAPI": [], "Fixed commit": "526fe47a040f8631859b2512d9cbe43ffa14e87f", "Url": "https://api.github.com/repos/1201205/Eyepetizer", "Date": "2016-10-17T15:23:25Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kiran.mytweetsapp.TweetsArrayAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tweet.isliked()) { viewHolder.likeIcon.setImageResource(R.drawable.ic_liked); }else { viewHolder.likeIcon.setImageResource(R.drawable.ic_like); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7136/buggy-version/app.src.main.java.com.kiran.mytweetsapp.TweetsArrayAdapter.java", "BodyUseAPI": [], "Fixed commit": "eb150448baea60866671f5b573c4fbf91220d2c5", "Url": "https://api.github.com/repos/kkanchamreddy/MyTweetsApp", "Date": "2015-12-22T15:40:59Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((new com.acenosekai.antplayer.realms.repo.MusicRepo(((com.acenosekai.antplayer.App) (getApplication())).getRealm()).countMusic()) > 0) { changePage(getInitialFragment()); playbackService.generateList(); playbackService.init(); }else { changePage(new com.acenosekai.antplayer.fragments.LibraryFragment()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1788/buggy-version/app.src.main.java.com.acenosekai.antplayer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a7200a05ab8d883092ead2cf24017d9f586f0e5e", "Url": "https://api.github.com/repos/acenosekai/antPlayer", "Date": "2016-02-21T12:10:00Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((new com.acenosekai.antplayer.realms.repo.MusicRepo(((com.acenosekai.antplayer.App) (getApplication())).getRealm()).countMusic()) == 0) && (!(fragment.getClass().getSimpleName().equals(\"FolderSelectFragment\")))) && (!(fragment.getClass().getSimpleName().equals(\"LoadingFragment\")))) { android.widget.Toast.makeText(this, \"No music file registered. Please Add files to library\", Toast.LENGTH_SHORT).show(); fragment = new com.acenosekai.antplayer.fragments.LibraryFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1788/buggy-version/app.src.main.java.com.acenosekai.antplayer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a7200a05ab8d883092ead2cf24017d9f586f0e5e", "Url": "https://api.github.com/repos/acenosekai/antPlayer", "Date": "2016-02-21T12:10:00Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (reinit) reinitTextureMovable();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2954/buggy-version/core.src.com.tgco.animalBook.view.World.java", "BodyUseAPI": [], "Fixed commit": "e8492adaab7efefa7db7bf2bb69662d3ff6c30f4", "Url": "https://api.github.com/repos/tgco/animalBook", "Date": "2014-06-16T23:33:19Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(txt.isDisposed())) return this.txt.setFocus(); else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4905/buggy-version/org.agilereview.ui.basic.src.org.agilereview.ui.basic.detail.CommentDetail.java", "BodyUseAPI": [], "Fixed commit": "20b1fe5d4df07d224bdc73be94004e9edc937bee", "Url": "https://api.github.com/repos/AgileReview-Project/AgileReview-EclipsePlugin", "Date": "2014-06-16T08:56:32Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(txt.isDisposed())) return this.txt.setFocus(); else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4905/buggy-version/org.agilereview.ui.basic.src.org.agilereview.ui.basic.detail.ReviewDetail.java", "BodyUseAPI": [], "Fixed commit": "20b1fe5d4df07d224bdc73be94004e9edc937bee", "Url": "https://api.github.com/repos/AgileReview-Project/AgileReview-EclipsePlugin", "Date": "2014-06-16T08:56:32Z"},
{"Line": "=>718", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMaxPostInPage) < (net.jejer.hipda.bean.HiSettingsHelper.getInstance().getMaxPostsInPage())) { mMaxPostInPage = net.jejer.hipda.bean.HiSettingsHelper.getInstance().getMaxPostsInPage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3344/buggy-version/hipda.src.main.java.net.jejer.hipda.ui.ThreadDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "f1cb00324df8c5a761f218ed92ebfe9a0951ec8c", "Url": "https://api.github.com/repos/GreenSkinMonster/hipda", "Date": "2015-03-17T07:32:57Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_socket) != null) { _socket.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6583/buggy-version/CardGame.src.sw805a.cardgame.comm.bluetooth.BluetoothGameCommunication.java", "BodyUseAPI": [], "Fixed commit": "3b946dedd02ad560671988ff3fcee1408d9a786b", "Url": "https://api.github.com/repos/sw805a/Ace-It", "Date": "2011-06-20T07:45:20Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_serverSocket) != null) { _serverSocket.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6583/buggy-version/CardGame.src.sw805a.cardgame.comm.bluetooth.BluetoothGameCommunication.java", "BodyUseAPI": [], "Fixed commit": "3b946dedd02ad560671988ff3fcee1408d9a786b", "Url": "https://api.github.com/repos/sw805a/Ace-It", "Date": "2011-06-20T07:45:20Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_socket) != null) { _socket.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6583/buggy-version/CardGame.src.sw805a.cardgame.comm.bluetooth.BluetoothGameCommunication.java", "BodyUseAPI": [], "Fixed commit": "3b946dedd02ad560671988ff3fcee1408d9a786b", "Url": "https://api.github.com/repos/sw805a/Ace-It", "Date": "2011-06-20T07:45:20Z"},
{"Line": "=>525", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTree.DropLocation.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (oldDrop != null) { java.awt.Rectangle oldBounds = getPathBounds(tree, oldDrop); tree.repaint(0, oldBounds.y, tree.getWidth(), oldBounds.height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4671/buggy-version/substance.src.main.java.org.pushingpixels.substance.internal.ui.SubstanceTreeUI.java", "BodyUseAPI": ["org.pushingpixels.substance.internal.ui.SubstanceTreeUI.1.getPathBounds(javax.swing.JTree,javax.swing.tree.TreePath)"], "Fixed commit": "6fb710250ebbf62f0b7178e5f75e30ce65e77143", "Url": "https://api.github.com/repos/vtsaplin/insubstantial", "Date": "2014-04-19T13:07:16Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((calendarType) == 0) { npYear.setValue(iranianYear); npMonth.setValue(iranianMonth); npDay.setValue(iranianDay); }else if ((calendarType) == 1) { npYear.setValue(jdf.getGregorianYear()); npMonth.setValue(jdf.getGregorianMonth()); npDay.setValue(jdf.getGregorianDay()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5751/buggy-version/src.com.parang.fulldatepicker.FullDatePicker.java", "BodyUseAPI": [], "Fixed commit": "33942fa59b155a835268bf40dae8b2c7ee85f191", "Url": "https://api.github.com/repos/badkoubehei/FullDatePicker", "Date": "2014-06-07T11:21:26Z"},
{"Line": "=>656", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bhApp.mainActivity.findViewById(R.id.weeklyLdUserRL)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (container != null) container.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/379/buggy-version/app.src.main.java.com.maksl5.bl_hunt.custom_ui.fragment.WeeklyLeaderboardLayout.java", "BodyUseAPI": ["android.view.View.setVisibility(View.GONE)"], "Fixed commit": "01269f055d2af6cf58a867b67a0e225f2cec4d31", "Url": "https://api.github.com/repos/Maksl5/blue-hunter", "Date": "2015-12-20T16:27:14Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((proxy) != null) { android.util.Log.i(TAG, \"stop old proxy\"); proxy.stop(); proxy = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4244/buggy-version/app.src.main.java.net.programmierecke.radiodroid2.PlayerService.java", "BodyUseAPI": [], "Fixed commit": "639e27db0bfc4d8a6701bc4d1cf59c65f150b129", "Url": "https://api.github.com/repos/centic9/RadioDroid", "Date": "2017-07-04T18:25:36Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (obs.getValueCoded().getConceptClass().getName().equals(\"LabSet\")) { investigations.add(obs.getValueCoded()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6776/buggy-version/omod.src.main.java.org.openmrs.module.patientdashboard.web.controller.autocomplete.AutoCompleteController.java", "BodyUseAPI": ["java.util.List<org.openmrs.Concept>.add(obs.getValueCoded())", "org.openmrs.Obs.getValueCoded()"], "Fixed commit": "2729f59e36dcec45dd7cf784868a616f393fd12c", "Url": "https://api.github.com/repos/hispindia/patient-dashboard", "Date": "2014-11-13T10:13:18Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (obs.getValueCoded().getConceptClass().getName().equals(\"LabSet\")) { investigations.add(obs.getValueCoded()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6776/buggy-version/omod.src.main.java.org.openmrs.module.patientdashboard.web.controller.PrintClinicalSummaryController.java", "BodyUseAPI": ["org.openmrs.Obs.getValueCoded()", "java.util.List<org.openmrs.Concept>.add(obs.getValueCoded())"], "Fixed commit": "2729f59e36dcec45dd7cf784868a616f393fd12c", "Url": "https://api.github.com/repos/hispindia/patient-dashboard", "Date": "2014-11-13T10:13:18Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lancamento.getTipo()) == null) { lancamento.setTipo(new br.com.solimar.finan.entity.Tipo()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2265/buggy-version/src.main.java.br.com.solimar.finan.view.lancamento.LancamentoEditMB.java", "BodyUseAPI": ["br.com.solimar.finan.entity.Lancamento.setTipo(br.com.solimar.finan.entity.Tipo)"], "Fixed commit": "a3dc7632e9c1874c46f275b2de816d8e5194ec85", "Url": "https://api.github.com/repos/solimarss/finan", "Date": "2017-07-27T12:23:47Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["writer2latex.util.Misc.getChildByTagName(org.w3c.dom.Node,XMLString.TEXT_LIST_ITEM)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (item != null) { org.w3c.dom.NodeList paras = item.getElementsByTagName(XMLString.TEXT_P); if ((paras != null) && ((paras.getLength()) > 0)) { para = ((org.w3c.dom.Element) (paras.item(0))); } org.w3c.dom.NodeList heads = item.getElementsByTagName(XMLString.TEXT_H); if ((heads != null) && ((heads.getLength()) > 0)) { head = ((org.w3c.dom.Element) (heads.item(0))); } if (para != null) { writer2latex.office.StyleWithProperties paraStyle = ofr.getParStyle(writer2latex.util.Misc.getAttribute(para, XMLString.TEXT_STYLE_NAME)); if (paraStyle != null) { newPageNumberProperty = paraStyle.getParProperty(XMLString.STYLE_PAGE_NUMBER, true); } newPageNumberProperty = paraStyle.getParProperty(XMLString.STYLE_PAGE_NUMBER, true); if ((checkMasterPageBreak(paraStyle)) || (newPageNumberProperty != null)) { style = paraStyle; } } if ((head != null) && (style == null)) { writer2latex.office.StyleWithProperties headStyle = ofr.getParStyle(writer2latex.util.Misc.getAttribute(para, XMLString.TEXT_STYLE_NAME)); if (headStyle != null) { newPageNumberProperty = headStyle.getParProperty(XMLString.STYLE_PAGE_NUMBER, true); } if ((checkMasterPageBreak(headStyle)) || (newPageNumberProperty != null)) { style = headStyle; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7646/buggy-version/source.java.writer2latex.xhtml.TextConverter.java", "BodyUseAPI": ["org.w3c.dom.Element.getElementsByTagName(XMLString.TEXT_H)", "org.w3c.dom.Element.getElementsByTagName(XMLString.TEXT_P)"], "Fixed commit": "4eb92e7f01e87b58db82f7ceb7ac2e26fa70b767", "Url": "https://api.github.com/repos/litvinovg/writer2latex", "Date": "2016-12-26T14:49:08Z"},
{"Line": "=>1667", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inList) { return hnode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7646/buggy-version/source.java.writer2latex.xhtml.TextConverter.java", "BodyUseAPI": [], "Fixed commit": "4eb92e7f01e87b58db82f7ceb7ac2e26fa70b767", "Url": "https://api.github.com/repos/litvinovg/writer2latex", "Date": "2016-12-26T14:49:08Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processor) <= (other.processor)) { return -1; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2410/buggy-version/src.main.java.ProjetoMetci.elements.NodePower.java", "BodyUseAPI": [], "Fixed commit": "3402b70441a0eb9d226ef3d0ff2cf5656bd2887b", "Url": "https://api.github.com/repos/IgorVictor/Metci", "Date": "2017-03-22T14:22:53Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processor) >= (other.processor)) { return 1; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2410/buggy-version/src.main.java.ProjetoMetci.elements.NodePower.java", "BodyUseAPI": [], "Fixed commit": "3402b70441a0eb9d226ef3d0ff2cf5656bd2887b", "Url": "https://api.github.com/repos/IgorVictor/Metci", "Date": "2017-03-22T14:22:53Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (players.contains(Player.CPU_MAP_PLAYER)) nrOfPlayers--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5553/buggy-version/src.tora.train.risk.ArenaController.java", "BodyUseAPI": [], "Fixed commit": "e655879004cafb3324a29708615e7067d70d5674", "Url": "https://api.github.com/repos/Dacus/Risk", "Date": "2015-07-21T11:44:44Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openl.rules.binding.RuleRowHelper.loadNativeValue(org.openl.rules.table.ICell,org.openl.types.IOpenClass,openlAdapter.getBindingContext(),java.lang.String,java.lang.String,org.openl.rules.table.ILogicalTable)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (res != null) { org.openl.rules.binding.RuleRowHelper.validateValue(res, paramType); if (!(openlAdapter.getBindingContext().isExecutionMode())) { org.openl.rules.binding.RuleRowHelper.setCellMetaInfo(table, paramName, paramType, false); } return res; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2051/buggy-version/DEV.org.openl.rules.src.org.openl.rules.binding.RuleRowHelper.java", "BodyUseAPI": ["org.openl.rules.binding.RuleRowHelper.validateValue(java.lang.Object,org.openl.types.IOpenClass)"], "Fixed commit": "bf27e2dffc24ae1be33cceba1aa50b55f91b05f4", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2016-02-08T20:39:05Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Throwable.getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (message == null) { message = \"Can't load cell value\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2051/buggy-version/DEV.org.openl.rules.src.org.openl.rules.binding.RuleRowHelper.java", "BodyUseAPI": [], "Fixed commit": "bf27e2dffc24ae1be33cceba1aa50b55f91b05f4", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2016-02-08T20:39:05Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uk.co.oliwali.HawkEye.util.Config.Debug) e.printStackTrace();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5599/buggy-version/src.uk.co.oliwali.HawkEye.HawkEye.java", "BodyUseAPI": [], "Fixed commit": "ccdd3a325db0bd81133826128e2b0d4610bce384", "Url": "https://api.github.com/repos/oliverwoodings/HawkEye", "Date": "2011-09-22T11:58:37Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((Values.length) == 2) { this.RequestParameters.put(Values[0], Values[1]); }else if ((Values.length) == 1) { this.RequestParameters.put(Values[0], null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8792/buggy-version/src.com.nexus.webserver.WebServerClientThread.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,<nulltype>)", "java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "59cee2821987a84569870aac3626b9c329e707dd", "Url": "https://api.github.com/repos/TeamNexus/nexus-java", "Date": "2013-04-28T18:43:33Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == 0) { changedLabel.setText(\"Initial State\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5478/buggy-version/COMP4106_FinalProject.src.ShipYardGUI.java", "BodyUseAPI": [], "Fixed commit": "a92d2bdbe05261f9c839565f9a4f3b48901f64e8", "Url": "https://api.github.com/repos/marctebo/Comp4106_FinalProject", "Date": "2017-04-14T20:46:21Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pty) == null) { pty = java.lang.Boolean.FALSE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8252/buggy-version/src.main.java.org.jvnet.hudson.plugins.SSHSite.java", "BodyUseAPI": [], "Fixed commit": "d215b6901c4af28600e6e2062110f468b193ec94", "Url": "https://api.github.com/repos/jenkinsci/ssh-plugin", "Date": "2012-09-03T21:18:12Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shift == 0) { data[shift] = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3872/buggy-version/04Sorts.Sorts.java", "BodyUseAPI": [], "Fixed commit": "2b682f604e8edac9b5b065f5804cd67edb1f4f3f", "Url": "https://api.github.com/repos/MashaZorin/MKS21X", "Date": "2016-12-14T11:39:10Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fallback_value.getType()) != (computed_type)) { int fb_type = fallback_value.getType(); if (fb_type == (CssTypes.CSS_NUMBER)) { if (true) { break; } } if (fb_type == (CssTypes.CSS_PERCENTAGE)) { if ((((((computed_type) == (CssTypes.CSS_LENGTH)) || ((computed_type) == (CssTypes.CSS_ANGLE))) || ((computed_type) == (CssTypes.CSS_FREQUENCY))) || ((computed_type) == (CssTypes.CSS_NUMBER))) || ((computed_type) == (CssTypes.CSS_TIME))) { break; } } throw new org.w3c.css.util.InvalidParamException(\"typevaluemismatch\", fallback_value, value_type, ac); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/463/buggy-version/org.w3c.css.values.CssAttr.java", "BodyUseAPI": ["org.w3c.css.values.CssValue.getType()"], "Fixed commit": "e70e3bf2f4d3b450c25301098e5faaa924d402ae", "Url": "https://api.github.com/repos/w3c/css-validator", "Date": "2016-05-04T13:50:01Z"},
{"Line": "=>604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.ihmc.robotics.robotSide.SideDependentList<us.ihmc.robotics.geometry.FrameConvexPolygon2d>.get(us.ihmc.robotics.robotSide.RobotSide)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (footPolygonInSoleZUpFrame.isEmpty()) centroidOfCurrentFootstep.setToZero(soleZUpFrames.get(robotSide)); else centroidOfCurrentFootstep.setIncludingFrame(footPolygonInSoleZUpFrame.getCentroid());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4419/buggy-version/CommonWalkingControlModules.src.us.ihmc.commonWalkingControlModules.instantaneousCapturePoint.ReferenceCentroidalMomentumPivotLocationsCalculator.java", "BodyUseAPI": ["us.ihmc.robotics.geometry.FrameConvexPolygon2d.getCentroid()", "us.ihmc.robotics.geometry.FramePoint2d.setIncludingFrame(footPolygonInSoleZUpFrame.getCentroid())"], "Fixed commit": "d46a0a04c264ac726c1777a4223aecd0c9ed681b", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2016-05-06T19:33:05Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.ihmc.robotics.robotSide.SideDependentList<us.ihmc.robotics.geometry.FrameConvexPolygon2d>.get(us.ihmc.robotics.robotSide.RobotSide)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (footPolygonInSoleZUpFrame.isEmpty()) centroidOfCurrentFootstep.setToZero(soleZUpFrames.get(robotSide)); else centroidOfCurrentFootstep.setIncludingFrame(footPolygonInSoleZUpFrame.getCentroid());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4419/buggy-version/CommonWalkingControlModules.src.us.ihmc.commonWalkingControlModules.instantaneousCapturePoint.ReferenceCentroidalMomentumPivotLocationsCalculator.java", "BodyUseAPI": ["us.ihmc.robotics.geometry.FramePoint2d.setIncludingFrame(footPolygonInSoleZUpFrame.getCentroid())", "us.ihmc.robotics.geometry.FrameConvexPolygon2d.getCentroid()"], "Fixed commit": "d46a0a04c264ac726c1777a4223aecd0c9ed681b", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2016-05-06T19:33:05Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scanner.hasNextLine()) { scanner.nextLine(); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1662/buggy-version/src.main.java.edu.cmu.lti.oaqa.framework.eval.gs.PathMatchingGoldStandardPersistenceProvider.java", "BodyUseAPI": ["java.util.Scanner.nextLine()"], "Fixed commit": "6fac40e50d7fce825aa50ed166dfb41c95d3e134", "Url": "https://api.github.com/repos/oaqa/baseqa", "Date": "2012-10-28T21:03:53Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageView) != null) { if ((imageView.highlightViews) != null) { imageView.highlightViews.clear(); } imageView.invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2996/buggy-version/lib.src.main.java.com.soundcloud.android.crop.ImageAreaPickerActivity.java", "BodyUseAPI": [], "Fixed commit": "8e65caf5b82a35022c5217ef8c840a5a6d9c8559", "Url": "https://api.github.com/repos/h46incon/android-crop", "Date": "2014-09-03T11:28:23Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (includePermissions) { request.setContentType(com.jaspersoft.jasperserver.jaxrs.client.core.MimeTypeUtil.toCorrectContentMime(sessionStorage.getConfiguration(), \"application/hal+{mime}\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1919/buggy-version/src.main.java.com.jaspersoft.jasperserver.jaxrs.client.apiadapters.attributes.SingleAttributeAdapter.java", "BodyUseAPI": [], "Fixed commit": "cdf6e73b87c5ed7781a42580ba78dc60de4d2cb4", "Url": "https://api.github.com/repos/TanyaEf/jrs-rest-java-client", "Date": "2015-11-03T10:31:37Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selectedTab) >= (tabs.size())) { selectTab(((selectedTab) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3294/buggy-version/src.com.calsignlabs.apde.support.ScrollingTabContainerView.java", "BodyUseAPI": ["com.calsignlabs.apde.support.ScrollingTabContainerView.selectTab(int)"], "Fixed commit": "b489e388653079db3b989efb414a6de7293c9148", "Url": "https://api.github.com/repos/Calsign/APDE", "Date": "2014-04-05T18:10:55Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (topNode == null) { clearSelectionDisplay(); mCurrentSelection = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8188/buggy-version/projects.android_studio.JavaLisp.AndroidLispGuiBuilder.src.main.java.com.evolved.automata.android.lisp.guibuilder.LispEditText.java", "BodyUseAPI": [], "Fixed commit": "bfb1e54cdc6b57e6d0456bafb1439075c9ae83af", "Url": "https://api.github.com/repos/hexagonc/Android-Lisp", "Date": "2017-09-23T04:52:48Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mUploadButton.isChecked()) android.widget.Toast.makeText(getActivity(), \"Nothing to upload\", Toast.LENGTH_LONG).show(); else android.widget.Toast.makeText(getActivity(), \"Nothing to download\", Toast.LENGTH_LONG).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8188/buggy-version/projects.android_studio.JavaLisp.AndroidLispGuiBuilder.src.main.java.com.evolved.automata.android.lisp.guibuilder.ui.PagePropertiesFragment.java", "BodyUseAPI": [], "Fixed commit": "bfb1e54cdc6b57e6d0456bafb1439075c9ae83af", "Url": "https://api.github.com/repos/hexagonc/Android-Lisp", "Date": "2017-09-23T04:52:48Z"},
{"Line": "=>2369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ednovo.gooru.domain.service.ScollectionServiceImpl.getCollectionItemById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (collectionItem == null) { throw new org.ednovo.gooru.core.exception.NotFoundException(generateErrorMessage(org.ednovo.gooru.domain.service.GL0056, org.ednovo.gooru.domain.service.COLLECTION_ITEM)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4403/buggy-version/api.src.main.java.org.ednovo.gooru.domain.service.ScollectionServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "863213d8bdf53f3bb171235f1de430645f036569", "Url": "https://api.github.com/repos/sheebans/Gooru-Core-API-1", "Date": "2014-12-15T12:24:18Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.taobao.luaview.util.NetworkUtil.sConnectionBroadcastReceiver.getListenerSize()) == 0) { com.taobao.luaview.util.NetworkUtil.sConnectionBroadcastReceiver = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2947/buggy-version/Android.LuaViewSDK.src.com.taobao.luaview.util.NetworkUtil.java", "BodyUseAPI": [], "Fixed commit": "c600bd32a8d4eb1056f9bc80b8cae28629205111", "Url": "https://api.github.com/repos/Zhaoyy/LuaViewSDK", "Date": "2016-04-28T06:32:16Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(totSqGrad.containsKey(feature))) return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4505/buggy-version/src.java.main.edu.cmu.ml.proppr.learn.AdaGradSRW.java", "BodyUseAPI": [], "Fixed commit": "0af2af753344d52caff153e342e8a6d8a84a5971", "Url": "https://api.github.com/repos/TeamCohen/ProPPR", "Date": "2015-12-08T21:22:04Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edu.cmu.ml.proppr.QueryAnswerer.log.isDebugEnabled()) { edu.cmu.ml.proppr.QueryAnswerer.log.debug((((x.toString()) + \"\\t\") + (s.getValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4505/buggy-version/src.java.main.edu.cmu.ml.proppr.QueryAnswerer.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug((((x.toString()) + \"\\t\") + (s.getValue())))"], "Fixed commit": "0af2af753344d52caff153e342e8a6d8a84a5971", "Url": "https://api.github.com/repos/TeamCohen/ProPPR", "Date": "2015-12-08T21:22:04Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edu.cmu.ml.proppr.QueryAnswerer.log.isDebugEnabled()) { edu.cmu.ml.proppr.QueryAnswerer.log.debug((((s.toString()) + \"\\t\") + (s.getValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4505/buggy-version/src.java.main.edu.cmu.ml.proppr.QueryAnswerer.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug((((s.toString()) + \"\\t\") + (s.getValue())))"], "Fixed commit": "0af2af753344d52caff153e342e8a6d8a84a5971", "Url": "https://api.github.com/repos/TeamCohen/ProPPR", "Date": "2015-12-08T21:22:04Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (an instanceof lobstre.chtrie.ConcurrentHashTrieMap.SNode) { @java.lang.SuppressWarnings(\"unchecked\") final lobstre.chtrie.ConcurrentHashTrieMap.SNode<K, V> sn = ((lobstre.chtrie.ConcurrentHashTrieMap.SNode<K, V>) (an)); if ((hashcode + (java.lang.Integer.MIN_VALUE)) >= ((sn.hash()) + (java.lang.Integer.MIN_VALUE))) { return ipickupFirstSibling(i, level, cn, flagPos, 1); }else { return new lobstre.chtrie.ConcurrentHashTrieMap.Result<lobstre.chtrie.ConcurrentHashTrieMap.SNode<K, V>>(lobstre.chtrie.ConcurrentHashTrieMap.ResultType.FOUND, sn); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1202/buggy-version/concurrent-hash-trie.src.lobstre.chtrie.ConcurrentHashTrieMap.java", "BodyUseAPI": [], "Fixed commit": "31efb1d8ce107fcd8b84fe820a49c448eae94b6f", "Url": "https://api.github.com/repos/flegall/concurrent-hash-trie", "Date": "2011-12-31T10:44:09Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getHeader(\"X-Forwarded-For\")) != null) { message.name = request.getHeader(\"X-Forwarded-For\"); }else { message.name = java.lang.String.valueOf(o.get(\"name\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2394/buggy-version/src.main.java.org.dynmap.servlet.SendMessageServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)"], "Fixed commit": "4e875196abd6864773002230ec3b99f1a1ea3337", "Url": "https://api.github.com/repos/KenanY/DynmapCore", "Date": "2012-08-31T17:18:51Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dfh.profiler.Timer.singleton) == null) dfh.profiler.Timer.singleton = this.instance();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3707/buggy-version/src.dfh.profiler.Timer.java", "BodyUseAPI": [], "Fixed commit": "459aae4eb5a5c4708c512bbe51707d57e3dbceed", "Url": "https://api.github.com/repos/dfhoughton/PaupersProfiler", "Date": "2011-03-05T15:05:19Z"},
{"Line": "=>869", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((map.physics.isUpdated((255 & ((int) (t33[0]))))) && (map.physics.isSent((255 & ((int) (t33[0])))))) { serv.sendAllOnMap(id, getPacket()); }else { serv.sendOthersOnMap(id, getPacket()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6696/buggy-version/server.CraftrClient.java", "BodyUseAPI": [], "Fixed commit": "bf8c47ec3110fb6f036eb5b6266174737e2c21c6", "Url": "https://api.github.com/repos/asiekierka/64pixels", "Date": "2013-06-30T11:01:31Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.Movie.decodeStream(getResources().getAssets().open(filename))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((movie.duration()) <= 0) { throw new java.lang.IllegalStateException(\"movie.duration() <= 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5771/buggy-version/app.src.main.java.se.olander.android.pixelpaper.PixelPaperWallpaperService.java", "BodyUseAPI": [], "Fixed commit": "bc06ad655e2722d1ad4d6bbffe3b48ffa0546e35", "Url": "https://api.github.com/repos/simonolander/pixerpaper", "Date": "2017-10-21T11:06:43Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.Movie.decodeStream(getResources().getAssets().open(filename))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((movie.width()) <= 0) { throw new java.lang.IllegalStateException(\"movie.width() <= 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5771/buggy-version/app.src.main.java.se.olander.android.pixelpaper.PixelPaperWallpaperService.java", "BodyUseAPI": [], "Fixed commit": "bc06ad655e2722d1ad4d6bbffe3b48ffa0546e35", "Url": "https://api.github.com/repos/simonolander/pixerpaper", "Date": "2017-10-21T11:06:43Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.Movie.decodeStream(getResources().getAssets().open(filename))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((movie.height()) <= 0) { throw new java.lang.IllegalStateException(\"movie.height() <= 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5771/buggy-version/app.src.main.java.se.olander.android.pixelpaper.PixelPaperWallpaperService.java", "BodyUseAPI": [], "Fixed commit": "bc06ad655e2722d1ad4d6bbffe3b48ffa0546e35", "Url": "https://api.github.com/repos/simonolander/pixerpaper", "Date": "2017-10-21T11:06:43Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.Movie.decodeStream(getResources().getAssets().open(filename))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (movie == null) { throw new java.lang.IllegalStateException(\"Movie is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5771/buggy-version/app.src.main.java.se.olander.android.pixelpaper.PixelPaperWallpaperService.java", "BodyUseAPI": [], "Fixed commit": "bc06ad655e2722d1ad4d6bbffe3b48ffa0546e35", "Url": "https://api.github.com/repos/simonolander/pixerpaper", "Date": "2017-10-21T11:06:43Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serviceOperations) != null) { mRecordButton.setEnabled(serviceOperations.isServiceConnected()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5187/buggy-version/app.src.main.java.com.danielkim.soundrecorder.fragments.RecordFragment.java", "BodyUseAPI": [], "Fixed commit": "fc14926532f33ad0e689ba4d0e6dc70235a414ba", "Url": "https://api.github.com/repos/iClaude/SoundRecorder", "Date": "2017-10-22T15:01:58Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((actionsIn.get(0)) != null) currentAction = actionsIn.get(0); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4331/buggy-version/src.edu.cwru.SimpleRTS.agent.PEAgent.java", "BodyUseAPI": ["java.util.ArrayList<edu.cwru.SimpleRTS.agent.STRIP>.get(int)"], "Fixed commit": "d2050e7f7d8da41bce54bf338c2fd1c4a171d27f", "Url": "https://api.github.com/repos/cxc330/EECS391_prog3", "Date": "2012-03-21T03:05:10Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((actionsIn.get(0)) != null) currentAction = actionsIn.get(0); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4331/buggy-version/src.edu.cwru.SimpleRTS.agent.PEAgent.java", "BodyUseAPI": ["java.util.ArrayList<edu.cwru.SimpleRTS.agent.STRIP>.get(int)"], "Fixed commit": "d2050e7f7d8da41bce54bf338c2fd1c4a171d27f", "Url": "https://api.github.com/repos/cxc330/EECS391_prog3", "Date": "2012-03-21T03:05:10Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((actionsIn.get(0)) != null) currentAction = actionsIn.get(0); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4331/buggy-version/src.edu.cwru.SimpleRTS.agent.PEAgent.java", "BodyUseAPI": ["java.util.ArrayList<edu.cwru.SimpleRTS.agent.STRIP>.get(int)"], "Fixed commit": "d2050e7f7d8da41bce54bf338c2fd1c4a171d27f", "Url": "https://api.github.com/repos/cxc330/EECS391_prog3", "Date": "2012-03-21T03:05:10Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isNotEmpty(userIds)) { criteria.andUserIdIn(userIds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4088/buggy-version/racing_server.src.main.java.com.racing.model.repo.UserPointsAppRecordRepo.java", "BodyUseAPI": ["UserPointsAppRecordExample.Criteria.andUserIdIn(java.util.List<java.lang.Integer>)"], "Fixed commit": "50b46c7e4599f38c16b7e96a04360b3447956a88", "Url": "https://api.github.com/repos/leon-repository/racing_server", "Date": "2016-09-25T13:31:14Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((escalationRequest.getGrievanceType()) != 0L) { isAppendAndClause = addAndClauseIfRequired(isAppendAndClause, selectQuery); selectQuery.append(\" escalation.complaint_type_id = ?\"); preparedStatementValues.add(escalationRequest.getGrievanceType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3370/buggy-version/core.egov-workflow.src.main.java.org.egov.workflow.persistence.QueryBuilder.EscalationTimeTypeQueryBuilder.java", "BodyUseAPI": ["org.egov.workflow.web.contract.EscalationTimeTypeGetReq.getGrievanceType()", "java.util.List.add(escalationRequest.getGrievanceType())"], "Fixed commit": "0ba477b75067449171fbd29c811a86ad99bc3dde", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-07-06T08:04:50Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (bits >= 64) { throw new java.lang.IllegalArgumentException(\"Class doesn't work for >= 64 bits\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5441/buggy-version/src.java.abfab3d.grid.AttributeChannel.java", "BodyUseAPI": [], "Fixed commit": "fb95d47a4c8b7ba0e4a0565525ad62c3fd85f286", "Url": "https://api.github.com/repos/AbFab3D/AbFab3D", "Date": "2015-11-17T16:55:21Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.tree.DefaultMutableTreeNode.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (selectedCategoryName.equals(\"Alla varor\")) { currentProducts = iMatModel.getAllProducts(); }else { currentProducts = new java.util.ArrayList<imatproject.Product>(); map = iMatModel.getProducts(selectedCategoryName); for (java.util.ArrayList<imatproject.Product> al : map.values()) { currentProducts.addAll(al); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3716/buggy-version/iMatProject.src.imatproject.IMatController.java", "BodyUseAPI": ["imatproject.IMatModel.getProducts(java.lang.String)"], "Fixed commit": "01b2dcf3a8602313e380a1fc7cc2d6347c36ff32", "Url": "https://api.github.com/repos/Matpan/GUIProjekt", "Date": "2015-03-04T15:43:35Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.isatools.isacreator.ontologymanager.bioportal.jsonresulthandlers.BioPortalSearchResultHandler.queryOntologyEndpoint()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (content.contains(\"Internal server error\")) { java.lang.System.err.println(\"The BioPortal REST service reports Internal server error\"); return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1206/buggy-version/src.main.java.org.isatools.isacreator.ontologymanager.bioportal.jsonresulthandlers.BioPortalSearchResultHandler.java", "BodyUseAPI": [], "Fixed commit": "c150336fd95e0f151b9cd21b93e4ee7c6310ea32", "Url": "https://api.github.com/repos/ISA-tools/ISAcreator", "Date": "2017-12-05T17:35:11Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pokemons[index]) == null) return names;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4057/buggy-version/src.Pokedex.java", "BodyUseAPI": [], "Fixed commit": "4aa9c94d8a5b0d0208ae65d06e9a695552b8e9cc", "Url": "https://api.github.com/repos/LW-C/COP3502_Project3", "Date": "2017-11-05T23:26:18Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.getKey(\"c\").clicked) || (input.getKey(\"enter\").clicked)) { input.changeKeyBinding(actionKeys[selected]); listeningForBind = true; }else if (input.getKey(\"a\").clicked) { input.addKeyBinding(actionKeys[selected]); listeningForBind = true; }else if ((input.getKey(\"shift-d\").clicked) && (!(confirmReset))) { confirmReset = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5690/buggy-version/src.minicraft.screen.KeyInputMenu.java", "BodyUseAPI": ["minicraft.screen.KeyInputMenu.addKeyBinding(java.lang.String)", "minicraft.screen.KeyInputMenu.getKey(java.lang.String)", "minicraft.screen.KeyInputMenu.changeKeyBinding(java.lang.String)", "minicraft.screen.KeyInputMenu.getKey(java.lang.String)"], "Fixed commit": "74eb4c6ec7a143e3d9cf18307910f7bf0554b39a", "Url": "https://api.github.com/repos/chrisj42/minicraft-plus-revived", "Date": "2017-07-09T22:48:22Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input.getKey(\"exit\").clicked) { confirmReset = false; }else if (input.getKey(\"select\").clicked) { confirmReset = false; input.resetKeyBindings(); updateKeys(input.getKeyPrefs()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5690/buggy-version/src.minicraft.screen.KeyInputMenu.java", "BodyUseAPI": ["minicraft.screen.KeyInputMenu.updateKeys(input.getKeyPrefs())", "minicraft.screen.KeyInputMenu.resetKeyBindings()", "minicraft.screen.KeyInputMenu.getKey(java.lang.String)", "minicraft.screen.KeyInputMenu.getKeyPrefs()"], "Fixed commit": "74eb4c6ec7a143e3d9cf18307910f7bf0554b39a", "Url": "https://api.github.com/repos/chrisj42/minicraft-plus-revived", "Date": "2017-07-09T22:48:22Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((minicraft.Game.levels[i]) != null) minicraft.Game.levels[i].updateMobCap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5690/buggy-version/src.minicraft.screen.OptionsMenu.java", "BodyUseAPI": ["minicraft.Game.levels[i].updateMobCap()"], "Fixed commit": "74eb4c6ec7a143e3d9cf18307910f7bf0554b39a", "Url": "https://api.github.com/repos/chrisj42/minicraft-plus-revived", "Date": "2017-07-09T22:48:22Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Vector<java.lang.String>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((NewPortsCopy.size()) == 0) && (NewPortsCopySize == (PrefNewPortsCopySize + 1))) { console.println(\"Comport appeared and disappeared with same name\"); return defaultComPort; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1415/buggy-version/it.baeyens.arduino.core.src.it.baeyens.arduino.communication.ArduinoSerial.java", "BodyUseAPI": [], "Fixed commit": "8d5b3d53dc1e04a0eacc340bb5a4fee1b95dbd7a", "Url": "https://api.github.com/repos/Sloeber/arduino-eclipse-plugin", "Date": "2015-07-14T08:01:02Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jp.getCurrentToken()) == (JsonToken.VALUE_NULL)) { if ((_nullProvider) == null) { return null; } return ((java.lang.String) (_nullProvider.nullValue(ctxt))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5628/buggy-version/src.main.java.com.fasterxml.jackson.module.afterburner.deser.OptimizedSettableBeanProperty.java", "BodyUseAPI": [], "Fixed commit": "c6aefaedc386e76f4eeac859a3dccc6c72bfb45b", "Url": "https://api.github.com/repos/FasterXML/jackson-module-afterburner", "Date": "2012-11-06T04:31:33Z"},
{"Line": "=>1795", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ggp.base.player.gamer.statemachine.sancho.MCTSTree.allocateNode(org.ggp.base.util.propnet.polymorphic.forwardDeadReckon.ForwardDeadReckonInternalMachineState,org.ggp.base.player.gamer.statemachine.sancho.TreeNode,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((newChild.depth) < 0) || ((newChild.depth) > (depth))) { newChild.depth = ((short) ((depth) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2780/buggy-version/src.org.ggp.base.player.gamer.statemachine.sancho.TreeNode.java", "BodyUseAPI": [], "Fixed commit": "01be426dcb91050d3313926eca63b22384c6965a", "Url": "https://api.github.com/repos/SteveDraper/ggp-base", "Date": "2014-06-25T18:17:45Z"},
{"Line": "=>1168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currToken.isElemRef) { havabol.STEntry stArray = st.getSymbol(currToken.tokenStr); if (stArray == null) { error(((\"Symbol '\" + (currToken.tokenStr)) + \"' is not in Symbol Table.\"), currToken); } try { tokOp2 = ((havabol.Token) (stk.pop())); } catch (java.util.EmptyStackException a) { error(\"Missing right expression operand for array element reference.\", currToken); } if ((tokOp2.subClassif) == (Token.IDENTIFIER)) { havabol.STEntry stEnt2 = st.getSymbol(tokOp2.tokenStr); if (stEnt2 == null) { error(((\"Symbol '\" + tokOp2) + \"' is not in Symbol Table.\"), tokOp2); } resOp2 = new havabol.ResultValue(stEnt2.value); resOp2.type = ((havabol.STIdentifier) (stEnt2)).type; }else { resOp2 = new havabol.ResultValue(tokOp2.tokenStr); resOp2.type = tokOp2.subClassif; } resOp2.structure.add(\"ARRAY ELEM REF\"); nOp2 = new havabol.Numeric(this, resOp2, currToken.tokenStr, \"2nd Operand\"); resTemp = ((havabol.STIdentifier) (stArray)).getArray().get(nOp2.integerValue); extraToken1 = tokOp2; extraToken1.tokenStr = resTemp.value; extraToken1.primClassif = Token.OPERAND; extraToken1.subClassif = resTemp.type; stk.push(extraToken1); resMain.structure.add(\"ARRAY ELEM REF\"); }else { stk.push(currToken); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1881/buggy-version/src.havabol.Parser.java", "BodyUseAPI": ["havabol.SymbolTable.getSymbol(currToken.tokenStr)", "java.util.Stack<havabol.Token>.push(havabol.Token)", "havabol.Parser.error(((\"Symbol '\" + (currToken.tokenStr)) + \"' is not in Symbol Table.\"),havabol.Token)", "havabol.Parser.error(java.lang.String,havabol.Token)"], "Fixed commit": "76ad7c3f556c279de32cd28893c7af1026d1b8ea", "Url": "https://api.github.com/repos/bucknercd/Interpreter", "Date": "2017-04-08T19:27:09Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (container != null) { container.removeAllViews(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4585/buggy-version/app.src.main.java.com.community.mnahm5.clubsnade.EventsFragment.java", "BodyUseAPI": ["android.view.ViewGroup.removeAllViews()"], "Fixed commit": "5afaadcc7adee091e7fbb4bb691471bea16ca122", "Url": "https://api.github.com/repos/mnahm5/clubs.nade", "Date": "2017-06-29T00:21:39Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (container != null) { container.removeAllViews(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4585/buggy-version/app.src.main.java.com.community.mnahm5.clubsnade.ClubsFragment.java", "BodyUseAPI": ["android.view.ViewGroup.removeAllViews()"], "Fixed commit": "5afaadcc7adee091e7fbb4bb691471bea16ca122", "Url": "https://api.github.com/repos/mnahm5/clubs.nade", "Date": "2017-06-29T00:21:39Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (container != null) { container.removeAllViews(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4585/buggy-version/app.src.main.java.com.community.mnahm5.clubsnade.ProfileFragment.java", "BodyUseAPI": ["android.view.ViewGroup.removeAllViews()"], "Fixed commit": "5afaadcc7adee091e7fbb4bb691471bea16ca122", "Url": "https://api.github.com/repos/mnahm5/clubs.nade", "Date": "2017-06-29T00:21:39Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.enchantment.EnchantmentHelper.getEnchantmentLevel(Enchantments.LOOTING,net.minecraft.item.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((event.getEntityLiving()) instanceof com.witchworks.common.item.tool.EntityEnderman) && ((rand.nextInt(5)) <= (2 + (2 * looting)))) addDrop(event, new net.minecraft.item.ItemStack(com.witchworks.common.item.ModItems.ectoplasm, 1)); else if (((event.getEntityLiving()) instanceof com.witchworks.common.item.tool.EntityZombie) && ((rand.nextInt(16)) <= (2 + (2 * looting)))) addDrop(event, new net.minecraft.item.ItemStack(com.witchworks.common.item.ModItems.spectral_dust, 1)); else if (((event.getEntityLiving()) instanceof com.witchworks.common.item.tool.EntitySkeleton) && ((rand.nextInt(16)) <= (2 + (2 * looting)))) addDrop(event, new net.minecraft.item.ItemStack(com.witchworks.common.item.ModItems.spectral_dust, 1)); else if (((event.getEntityLiving()) instanceof net.minecraft.entity.passive.EntitySkeletonHorse) && ((rand.nextInt(16)) <= (2 + (2 * looting)))) addDrop(event, new net.minecraft.item.ItemStack(com.witchworks.common.item.ModItems.spectral_dust, 2)); else if (((event.getEntityLiving()) instanceof com.witchworks.common.item.tool.EntityStray) && ((rand.nextInt(16)) <= (2 + (2 * looting)))) addDrop(event, new net.minecraft.item.ItemStack(com.witchworks.common.item.ModItems.spectral_dust, 1)); else if (((event.getEntityLiving()) instanceof com.witchworks.common.item.tool.EntityPigZombie) && ((rand.nextInt(16)) <= (2 + (2 * looting)))) addDrop(event, new net.minecraft.item.ItemStack(com.witchworks.common.item.ModItems.spectral_dust, 3)); else if (((event.getEntityLiving()) instanceof com.witchworks.common.item.tool.EntityHusk) && ((rand.nextInt(16)) <= (2 + (2 * looting)))) addDrop(event, new net.minecraft.item.ItemStack(com.witchworks.common.item.ModItems.spectral_dust, 1)); else if (((event.getEntityLiving()) instanceof com.witchworks.common.item.tool.EntityWitherSkeleton) && ((rand.nextInt(16)) <= (2 + (2 * looting)))) addDrop(event, new net.minecraft.item.ItemStack(com.witchworks.common.item.ModItems.spectral_dust, 2)); else if (((event.getEntityLiving()) instanceof net.minecraft.entity.passive.EntityZombieHorse) && ((rand.nextInt(16)) <= (2 + (2 * looting)))) addDrop(event, new net.minecraft.item.ItemStack(com.witchworks.common.item.ModItems.spectral_dust, 1)); else if (((event.getEntityLiving()) instanceof com.witchworks.common.item.tool.EntityZombieVillager) && ((rand.nextInt(16)) <= (2 + (2 * looting)))) addDrop(event, new net.minecraft.item.ItemStack(com.witchworks.common.item.ModItems.spectral_dust, 1)); else if (((event.getEntityLiving()) instanceof net.minecraft.entity.boss.EntityWither) && ((rand.nextInt(16)) <= (2 + (2 * looting)))) addDrop(event, new net.minecraft.item.ItemStack(com.witchworks.common.item.ModItems.spectral_dust, 6)); else if (((event.getEntityLiving()) instanceof com.witchworks.common.item.tool.EntitySilverfish) && ((rand.nextInt(16)) <= (2 + (2 * looting)))) addDrop(event, new net.minecraft.item.ItemStack(com.witchworks.common.item.ModItems.silver_scales, 2)); else if (((event.getEntityLiving()) instanceof com.witchworks.common.item.tool.EntityGuardian) && ((rand.nextInt(10)) <= (2 + (2 * looting)))) addDrop(event, new net.minecraft.item.ItemStack(com.witchworks.common.item.ModItems.eye_of_old, 1)); else if (((event.getEntityLiving()) instanceof net.minecraft.entity.player.EntityPlayer) && ((rand.nextInt(11)) <= (1 + looting))) { net.minecraft.item.ItemStack stack = new net.minecraft.item.ItemStack(net.minecraft.init.Items.SKULL, 1, 3); com.witchworks.common.core.helper.ItemNBTHelper.setString(stack, \"SkullOwner\", event.getEntityLiving().getName()); addDrop(event, stack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3417/buggy-version/src.main.java.com.witchworks.common.item.tool.ItemAthame.java", "BodyUseAPI": ["com.witchworks.common.item.tool.ItemAthame.addDrop(net.minecraftforge.event.entity.living.LivingDropsEvent,net.minecraft.item.ItemStack)", "com.witchworks.common.item.tool.ItemAthame.addDrop(net.minecraftforge.event.entity.living.LivingDropsEvent,net.minecraft.item.ItemStack)", "java.util.Random.nextInt(int)", "java.util.Random.nextInt(int)", "java.util.Random.nextInt(int)", "net.minecraftforge.event.entity.living.LivingDropsEvent.getEntityLiving()", "java.util.Random.nextInt(int)", "net.minecraftforge.event.entity.living.LivingDropsEvent.getEntityLiving()", "java.util.Random.nextInt(int)", "net.minecraftforge.event.entity.living.LivingDropsEvent.getEntityLiving()", "java.util.Random.nextInt(int)", "java.util.Random.nextInt(int)", "com.witchworks.common.item.tool.ItemAthame.addDrop(net.minecraftforge.event.entity.living.LivingDropsEvent,net.minecraft.item.ItemStack)", "net.minecraftforge.event.entity.living.LivingDropsEvent.getEntityLiving()", "java.util.Random.nextInt(int)", "com.witchworks.common.item.tool.ItemAthame.addDrop(net.minecraftforge.event.entity.living.LivingDropsEvent,net.minecraft.item.ItemStack)", "net.minecraftforge.event.entity.living.LivingDropsEvent.getEntityLiving()", "net.minecraftforge.event.entity.living.LivingDropsEvent.getEntityLiving()", "com.witchworks.common.item.tool.ItemAthame.addDrop(net.minecraftforge.event.entity.living.LivingDropsEvent,net.minecraft.item.ItemStack)", "com.witchworks.common.item.tool.ItemAthame.addDrop(net.minecraftforge.event.entity.living.LivingDropsEvent,net.minecraft.item.ItemStack)", "net.minecraftforge.event.entity.living.LivingDropsEvent.getEntityLiving()", "java.util.Random.nextInt(int)", "java.util.Random.nextInt(int)", "net.minecraftforge.event.entity.living.LivingDropsEvent.getEntityLiving()", "com.witchworks.common.core.helper.ItemNBTHelper.setString(net.minecraft.item.ItemStack,java.lang.String,event.getEntityLiving().getName())", "com.witchworks.common.item.tool.ItemAthame.addDrop(net.minecraftforge.event.entity.living.LivingDropsEvent,net.minecraft.item.ItemStack)", "net.minecraftforge.event.entity.living.LivingDropsEvent.getEntityLiving()", "com.witchworks.common.item.tool.ItemAthame.addDrop(net.minecraftforge.event.entity.living.LivingDropsEvent,net.minecraft.item.ItemStack)", "com.witchworks.common.item.tool.ItemAthame.addDrop(net.minecraftforge.event.entity.living.LivingDropsEvent,net.minecraft.item.ItemStack)", "event.getEntityLiving().getName()", "net.minecraftforge.event.entity.living.LivingDropsEvent.getEntityLiving()", "com.witchworks.common.item.tool.ItemAthame.addDrop(net.minecraftforge.event.entity.living.LivingDropsEvent,net.minecraft.item.ItemStack)", "com.witchworks.common.item.tool.ItemAthame.addDrop(net.minecraftforge.event.entity.living.LivingDropsEvent,net.minecraft.item.ItemStack)", "com.witchworks.common.item.tool.ItemAthame.addDrop(net.minecraftforge.event.entity.living.LivingDropsEvent,net.minecraft.item.ItemStack)", "java.util.Random.nextInt(int)", "com.witchworks.common.item.tool.ItemAthame.addDrop(net.minecraftforge.event.entity.living.LivingDropsEvent,net.minecraft.item.ItemStack)", "java.util.Random.nextInt(int)", "net.minecraftforge.event.entity.living.LivingDropsEvent.getEntityLiving()", "java.util.Random.nextInt(int)", "net.minecraftforge.event.entity.living.LivingDropsEvent.getEntityLiving()", "com.witchworks.common.item.tool.ItemAthame.addDrop(net.minecraftforge.event.entity.living.LivingDropsEvent,net.minecraft.item.ItemStack)", "net.minecraftforge.event.entity.living.LivingDropsEvent.getEntityLiving()", "net.minecraftforge.event.entity.living.LivingDropsEvent.getEntityLiving()"], "Fixed commit": "64744c6c6d3006a3b0de99c1c3935b76e0b6dbea", "Url": "https://api.github.com/repos/backuporg/Witchworks", "Date": "2017-07-26T23:27:55Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCount()) > 0) { this.firstCardState = firstCardState; slm2015.hey.entity.Issue issue = this.filteList.get(((this.getCount()) - 1)); issue.setLike((firstCardState == (slm2015.hey.view.tabs.watch.CardIssueAdapter.CardState.LIKE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4346/buggy-version/app.src.main.java.slm2015.hey.view.tabs.watch.CardIssueAdapter.java", "BodyUseAPI": [], "Fixed commit": "523b438ab955535a7c3a2b12273642ea78a7110b", "Url": "https://api.github.com/repos/ZhongTing/Hey", "Date": "2015-06-22T08:53:00Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.abiquo.server.core.cloud.VirtualDatacenterRep.findById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (vdc == null) { addNotFoundErrors(APIError.NON_EXISTENT_VIRTUAL_DATACENTER); flushErrors(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7214/buggy-version/api.src.main.java.com.abiquo.api.services.NetworkService.java", "BodyUseAPI": [], "Fixed commit": "770cfeb27eee8f92a175d52df24b61526f9365b2", "Url": "https://api.github.com/repos/abiquo/abiquo", "Date": "2011-09-05T09:15:57Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cursor) != null) { cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8081/buggy-version/src.main.java.org.opennms.android.ui.alarms.AlarmDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "ea598ac0e416c1df8446cf26d2f3f9d335e22307", "Url": "https://api.github.com/repos/Tsukanov/OpenNMS-Android-Client", "Date": "2013-08-06T01:26:52Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menuInflater) != null) { menuInflater.inflate(R.menu.alarm, menu); updateMenu(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8081/buggy-version/src.main.java.org.opennms.android.ui.alarms.AlarmDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "ea598ac0e416c1df8446cf26d2f3f9d335e22307", "Url": "https://api.github.com/repos/Tsukanov/OpenNMS-Android-Client", "Date": "2013-08-06T01:26:52Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sync) new it.borove.playerborove.PlayerController.SynchronizeDb().execute();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/9145/buggy-version/PlayerBoRoVe.src.it.borove.playerborove.LibraryActivity.java", "BodyUseAPI": [], "Fixed commit": "60d0579815cb40a0a8c7f94b6624ca1c0d5e27a9", "Url": "https://api.github.com/repos/WAFcoding/ProgettoMobileProgramming", "Date": "2014-10-20T15:52:04Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (temp != 0) vec = far.math.vec.Vec3f.div(vec, temp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/891/buggy-version/GameEngine.math.far.math.vec.Vec3f.java", "BodyUseAPI": ["far.math.vec.Vec3f.div(far.math.vec.Vec3f,float)"], "Fixed commit": "b51895334c803e4ddcb247f175596ffa54463d76", "Url": "https://api.github.com/repos/albrecht-flo/GameEngine", "Date": "2017-07-18T13:05:56Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m.getActionView()) != null) { stopRefreshButtonAnimation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5127/buggy-version/app.src.main.java.com.rocdev.guardianreader.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fc875d869da1d41f080234534d09d0473f4d7a8c", "Url": "https://api.github.com/repos/pieeet/GuardianReader", "Date": "2017-05-31T16:07:22Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(newDir.isDirectory())) { throw new java.io.IOException(\"It is file, not directory\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7009/buggy-version/src.main.java.ru.spbau.mit.commands.CommandCd.java", "BodyUseAPI": [], "Fixed commit": "359d90d7c5ac41683055c9c6466084b13ac75d3a", "Url": "https://api.github.com/repos/N-buga/spbau-software-design", "Date": "2016-12-18T21:32:20Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(newDir.exists())) { throw new java.io.IOException(\"The directory doesn't exist\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7009/buggy-version/src.main.java.ru.spbau.mit.commands.CommandCd.java", "BodyUseAPI": [], "Fixed commit": "359d90d7c5ac41683055c9c6466084b13ac75d3a", "Url": "https://api.github.com/repos/N-buga/spbau-software-design", "Date": "2016-12-18T21:32:20Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newDirString.equals(\"..\")) { newDirString = java.nio.file.Paths.get(environment.getCurDir()).getParent().toString(); }else if ((newDirString.charAt(0)) == '.') { newDirString = (environment.getCurDir()) + (newDirString.substring(1)); }else if ((newDirString.charAt(0)) != (java.io.File.separatorChar)) { newDirString = java.nio.file.Paths.get(environment.getCurDir(), newDirString).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7009/buggy-version/src.main.java.ru.spbau.mit.commands.CommandCd.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.charAt(int)"], "Fixed commit": "359d90d7c5ac41683055c9c6466084b13ac75d3a", "Url": "https://api.github.com/repos/N-buga/spbau-software-design", "Date": "2016-12-18T21:32:20Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mesaj.getText().toString().trim().length()) > 0) postToMenemen(mesaj.getText().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8286/buggy-version/app.src.main.java.com.incitorrent.radyo.menemen.pro.fragments.sohbet.java", "BodyUseAPI": ["mesaj.getText().toString()", "android.widget.EditText.getText()", "com.incitorrent.radyo.menemen.pro.fragments.sohbet.postToMenemen(mesaj.getText().toString())"], "Fixed commit": "d48de58f60e9b74ca9fec2e44c3d104e0b2503c3", "Url": "https://api.github.com/repos/LutfiTekin/RadyoMenemenPro", "Date": "2016-06-09T20:40:37Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (line == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8286/buggy-version/app.src.main.java.com.incitorrent.radyo.menemen.pro.fragments.sohbet.java", "BodyUseAPI": [], "Fixed commit": "d48de58f60e9b74ca9fec2e44c3d104e0b2503c3", "Url": "https://api.github.com/repos/LutfiTekin/RadyoMenemenPro", "Date": "2016-06-09T20:40:37Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(imageUrl)) { imageView.setImageResource(R.drawable.no_image); }else { com.squareup.picasso.Picasso.with(imageView.getContext()).load(imageUrl).fit().placeholder(R.drawable.place_holder).error(R.drawable.no_image).centerCrop().into(imageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8811/buggy-version/app.src.main.java.jp.shts.android.keyakifeed.utils.DataBindingAttributeUtil.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(imageView.getContext()).load(imageUrl).fit()", "com.squareup.picasso.Picasso.with(imageView.getContext()).load(java.lang.String)", "com.squareup.picasso.Picasso.with(imageView.getContext()).load(imageUrl).fit().placeholder(R.drawable.place_holder).error(R.drawable.no_image).centerCrop()", "com.squareup.picasso.Picasso.with(imageView.getContext()).load(imageUrl).fit().placeholder(R.drawable.place_holder)", "com.squareup.picasso.Picasso.with(imageView.getContext()).load(imageUrl).fit().placeholder(R.drawable.place_holder).error(R.drawable.no_image)", "com.squareup.picasso.Picasso.with(imageView.getContext()).load(imageUrl).fit().placeholder(R.drawable.place_holder).error(R.drawable.no_image).centerCrop().into(android.widget.ImageView)"], "Fixed commit": "0ca1a31aa474a049e4aa056f01f0c8b86dd3887f", "Url": "https://api.github.com/repos/shts/KeyakiFeed", "Date": "2017-02-04T05:59:09Z"},
{"Line": "=>657", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((SSLDHParametersFile) != null) { org.apache.tomcat.jni.SSLContext.setDHParameters(sslContext, SSLDHParametersFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4080/buggy-version/java.org.apache.tomcat.util.net.AprEndpoint.java", "BodyUseAPI": [], "Fixed commit": "51c62acfef5cb505de900f0f957f072202a38f68", "Url": "https://api.github.com/repos/andreydomas/tomcat70", "Date": "2015-12-01T09:35:46Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (difference < 0) { if (verifiyStratumNonZeroMass(selectedStratum, workOnTop)) { addToStrata(null, (amount - difference), workOnTop); return placeAmount(type, difference, workOnTop); } }else { addToStrata(null, amount, workOnTop); verifiyStratumNonZeroMass(selectedStratum, workOnTop); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/323/buggy-version/src.planet.surface.GeoCell.java", "BodyUseAPI": ["planet.surface.GeoCell.placeAmount(planet.surface.Layer.Layer,float,boolean)", "planet.surface.GeoCell.addToStrata(<nulltype>,float,boolean)"], "Fixed commit": "de4dd9eddd623c44bbfc7a9b60caeb63ec6c242f", "Url": "https://api.github.com/repos/redferret/planet", "Date": "2016-05-02T17:46:09Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mParent.getRealView()) instanceof com.taobao.weex.ui.view.refresh.wrapper.BaseBounceView) && ((this) instanceof com.taobao.weex.ui.component.WXBaseRefresh)) { android.widget.LinearLayout.LayoutParams params = new android.widget.LinearLayout.LayoutParams(realWidth, realHeight); params.setMargins(realLeft, realTop, realRight, realBottom); mHost.setLayoutParams(params); }else if ((mParent.getRealView()) instanceof android.widget.FrameLayout) { android.widget.FrameLayout.LayoutParams params = new android.widget.FrameLayout.LayoutParams(realWidth, realHeight); params.setMargins(realLeft, realTop, realRight, realBottom); mHost.setLayoutParams(params); }else if ((mParent.getRealView()) instanceof android.widget.LinearLayout) { android.widget.LinearLayout.LayoutParams params = new android.widget.LinearLayout.LayoutParams(realWidth, realHeight); params.setMargins(realLeft, realTop, realRight, realBottom); mHost.setLayoutParams(params); }else if ((mParent.getRealView()) instanceof android.widget.ScrollView) { android.widget.ScrollView.LayoutParams params = new android.widget.ScrollView.LayoutParams(realWidth, realHeight); params.setMargins(realLeft, realTop, realRight, realBottom); mHost.setLayoutParams(params); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3439/buggy-version/android.sdk.src.main.java.com.taobao.weex.ui.component.WXComponent.java", "BodyUseAPI": ["com.taobao.weex.ui.component.WXVContainer.getRealView()", "com.taobao.weex.ui.component.WXVContainer.getRealView()", "com.taobao.weex.ui.component.WXVContainer.getRealView()"], "Fixed commit": "b70f6e204d2367b816884ea9f649f48bded1e72b", "Url": "https://api.github.com/repos/sospartan/weex", "Date": "2016-08-03T11:34:14Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((desc.ctor) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7057/buggy-version/src.main.java.com.jsoniter.spi.Config.java", "BodyUseAPI": [], "Fixed commit": "00619879c2d9d6cff63cc0e0604a71a884851c03", "Url": "https://api.github.com/repos/plokhotnyuk/jsoniter-java", "Date": "2017-10-12T04:07:15Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stackable) || ((this) instanceof com.shatteredpixel.shatteredpixeldungeon.items.weapon.missiles.Boomerang)) Dungeon.quickslot.replaceSimilar(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8142/buggy-version/src.com.shatteredpixel.shatteredpixeldungeon.items.Item.java", "BodyUseAPI": [], "Fixed commit": "944d2d33a231fab994ddbf59746bbaf12823f88e", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2015-01-26T07:11:39Z"},
{"Line": "=>606", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rootSpatial) == null) { clone.rootSpatial = null; }else { clone.rootSpatial = rootSpatial.clone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/211/buggy-version/src.main.java.maud.model.LoadedCGModel.java", "BodyUseAPI": [], "Fixed commit": "01796b51d51765ec37f74bbf0fe57406706b4ce4", "Url": "https://api.github.com/repos/stephengold/Maud", "Date": "2017-05-29T00:48:52Z"},
{"Line": "=>1831", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(message.getContentChunkList().isEmpty())) { if ((message.getContentChunkList().get(0).getData().length) != 0) { createRetainedEntry(connection, message); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8655/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.store.rdbms.RDBMSMessageStoreImpl.java", "BodyUseAPI": ["org.wso2.andes.kernel.AndesMessage.getContentChunkList()", "message.getContentChunkList().get(int)", "org.wso2.andes.store.rdbms.RDBMSMessageStoreImpl.createRetainedEntry(java.sql.Connection,org.wso2.andes.kernel.AndesMessage)", "message.getContentChunkList().get(0).getData()"], "Fixed commit": "cc679712abd9bf12aaf6dfc68ee59bc4ddd2230d", "Url": "https://api.github.com/repos/pumudu88/andes", "Date": "2015-10-02T06:31:35Z"},
{"Line": "=>720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isScheduledTransaction) { intent.putExtra(Constants.RESULT_SCHEDULE_TRANSACTION, scheduledTransactionWrapped); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7541/buggy-version/app.src.main.java.com.zhan.budget.Activity.TransactionInfoActivity.java", "BodyUseAPI": [], "Fixed commit": "df02874fb284acab33f12399659f4304e5d8174b", "Url": "https://api.github.com/repos/zhanhui913/Budget", "Date": "2016-03-21T20:11:00Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newValue == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4263/buggy-version/editor.core.src.main.java.es.eucm.ead.editor.view.builders.mockup.menu.InitialScreen.java", "BodyUseAPI": [], "Fixed commit": "e7c2529ce357424f80900904e7537fdae02e3563", "Url": "https://api.github.com/repos/imartinezortiz/ead", "Date": "2014-03-07T00:54:04Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((incompleteWord) == null) { generateWord(DIFFICULTY.EASY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7696/buggy-version/src.com.awesome.lettergetter.dto.User.java", "BodyUseAPI": [], "Fixed commit": "8663192a63ec654d5ea8d9468558b7914eee65e2", "Url": "https://api.github.com/repos/suchintan/LetterGetter", "Date": "2014-04-04T14:48:49Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((memoryEncounters[playerID]) == 1) { action = 1; }else { action = memory[playerID][0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8051/buggy-version/src.Agent.java", "BodyUseAPI": [], "Fixed commit": "7690d4f53092010f0cac46521d3f0c68ed9ea5c1", "Url": "https://api.github.com/repos/CC007/KAT-hwset-4", "Date": "2014-09-29T12:40:28Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (strategy.equals(\"ALL-C\")) { action = 1; }else if (strategy.equals(\"JOSS\")) { if ((r.nextInt(10)) == 0) { action = -1; }else if ((memoryEncounters[playerID]) == 1) { action = 1; }else { action = memory[playerID][0]; } }else if (strategy.equals(\"RANDOM\")) { if ((memoryEncounters[playerID]) == 1) { action = -1; }else if ((memory[playerID][0]) == 1) { if ((memoryEncounters[playerID]) < 4) { action = 1; }else if (((memoryOwnActions[playerID][0]) == (-1)) || ((memoryOwnActions[playerID][1]) == (-1))) { action = 1; }else { action = -1; } }else { action = memory[playerID][0]; } }else if (strategy.equals(\"RANDOM\")) { action = (r.nextBoolean()) ? 1 : -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8051/buggy-version/src.Agent.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "7690d4f53092010f0cac46521d3f0c68ed9ea5c1", "Url": "https://api.github.com/repos/CC007/KAT-hwset-4", "Date": "2014-09-29T12:40:28Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.ByteBuffer.allocate(query.getFileSize())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((outputBuffer.remaining()) != 0) throw new java.lang.RuntimeException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/895/buggy-version/src.FileSystem.java", "BodyUseAPI": [], "Fixed commit": "b6718a4e2beed352f9021a12a64da862763a613e", "Url": "https://api.github.com/repos/Strikeskids/CacheReader", "Date": "2013-12-08T15:35:32Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (solrCore == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4856/buggy-version/KeywordSearch.src.org.sleuthkit.autopsy.keywordsearch.ExtractedContentViewer.java", "BodyUseAPI": [], "Fixed commit": "0c6865cf927f602d6fa557838b70647c90e91797", "Url": "https://api.github.com/repos/sleuthkit/autopsy", "Date": "2012-03-16T20:24:04Z"},
{"Line": "=>805", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rect != null) { java.awt.geom.Rectangle2D rect2d = new java.awt.geom.Rectangle2D.Double(rect.x, rect.y, rect.width, rect.height); clsClipPolygon2.ClipPolygon(tgl, rect2d); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7474/buggy-version/renderer.mil-sym-renderer.src.main.java.sec.web.renderer.MultiPointHandler.java", "BodyUseAPI": [], "Fixed commit": "8ab28d1f0e972b18e54a74b377b86e6257c0e010", "Url": "https://api.github.com/repos/missioncommand/mil-sym-java", "Date": "2015-08-19T21:48:05Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tmpExams.size()) != 0) { for (int j = 0; j < (examiners.size()); j++) { if ((examiners.get(j).hasSubject(tmpExams.get(i).getSubjects()[0])) || (examiners.get(j).hasSubject(tmpExams.get(i).getSubjects()[1]))) { if (((tmpExams.get(i).getExaminer()[0]) == null) || ((tmpExams.get(i).getExaminer()[1]) == null)) { tmpExams.get(i).addExaminer(examiners.get(j)); }else { tmpExams.remove(i); j = -1; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8064/buggy-version/src.de.hs_mannheim.IB.SS15.OOT.Backend.java", "BodyUseAPI": ["tmpExams.get(i).getSubjects()", "java.util.ArrayList<de.hs_mannheim.IB.SS15.OOT.PlanObjects.Exam>.get(int)", "tmpExams.get(i).getExaminer()", "java.util.ArrayList<de.hs_mannheim.IB.SS15.OOT.PlanObjects.Exam>.get(int)", "tmpExams.get(i).addExaminer(examiners.get(j))", "java.util.ArrayList<de.hs_mannheim.IB.SS15.OOT.PlanObjects.Exam>.get(int)", "tmpExams.get(i).getExaminer()", "java.util.ArrayList<de.hs_mannheim.IB.SS15.OOT.PlanObjects.Exam>.remove(int)", "examiners.get(j).hasSubject(tmpExams.get(i).getSubjects()[1])", "java.util.ArrayList<de.hs_mannheim.IB.SS15.OOT.PlanObjects.Exam>.get(int)", "java.util.ArrayList<de.hs_mannheim.IB.SS15.OOT.PlanObjects.Exam>.get(int)", "examiners.get(j).hasSubject(tmpExams.get(i).getSubjects()[0])", "tmpExams.get(i).getSubjects()"], "Fixed commit": "97e1cc65ee944d8c1c3e361054caefc32e60ced1", "Url": "https://api.github.com/repos/Toures/LALBaer2015", "Date": "2015-06-23T14:52:13Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((textPadding) == null) { textPadding = textView.getPaddingTop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1236/buggy-version/app.src.main.java.com.playposse.egoeater.activity.ProfileBuilderSummaryFragment.java", "BodyUseAPI": [], "Fixed commit": "2311a8b8f0780f98db755170a08f5bc0b34fef1d", "Url": "https://api.github.com/repos/thomasfischersm/EgoEater", "Date": "2017-12-05T00:52:13Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((textPadding) != null) { view.setPadding(textPadding, textPadding, textPadding, textPadding); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1236/buggy-version/app.src.main.java.com.playposse.egoeater.activity.ProfileBuilderSummaryFragment.java", "BodyUseAPI": [], "Fixed commit": "2311a8b8f0780f98db755170a08f5bc0b34fef1d", "Url": "https://api.github.com/repos/thomasfischersm/EgoEater", "Date": "2017-12-05T00:52:13Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bew instanceof org.codehaus.groovy.classgen.asm.BinaryObjectExpressionHelper) { os.replace(ClassHelper.OBJECT_TYPE, 2); }else { os.replace(leftType, 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7434/buggy-version/src.main.org.codehaus.groovy.classgen.asm.BinaryExpressionMultiTypeDispatcher.java", "BodyUseAPI": [], "Fixed commit": "4ddaa73e23da1463d7915162f5946c783ab7f331", "Url": "https://api.github.com/repos/russel/groovy", "Date": "2011-11-30T02:48:49Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fs.exists(path)) { fs.delete(path, isDirectory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7000/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.planner.sql.handlers.CreateFunctionHandler.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileSystem.delete(org.apache.hadoop.fs.Path,boolean)"], "Fixed commit": "d62808724665680be61335e3812dd57d227d8607", "Url": "https://api.github.com/repos/arina-ielchiieva/drill", "Date": "2017-03-06T11:34:56Z"},
{"Line": "=>2234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((next == null) || ((next.getFeatureMatrix()) == null)) || ((next.getLabels()) == null)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6867/buggy-version/deeplearning4j-core.src.main.java.org.deeplearning4j.nn.multilayer.MultiLayerNetwork.java", "BodyUseAPI": [], "Fixed commit": "a93c7dbf91227bb80fbc0c76c6845997a3ce8282", "Url": "https://api.github.com/repos/darrenfoong/deeplearning4j", "Date": "2016-03-05T16:16:52Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sdicons.json.JsonUtil.parseJson(java.io.StreamTokenizer,java.lang.StringBuilder)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(key instanceof java.lang.String)) { throw new java.lang.IllegalArgumentException(java.lang.String.format(com.sdicons.json.JsonUtil.JSON004, parsed.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3253/buggy-version/src.main.java.com.sdicons.json.JsonUtil.java", "BodyUseAPI": [], "Fixed commit": "034e06a09be8969e0b9e025b1b7acf74f0027235", "Url": "https://api.github.com/repos/branscha/lib-jsonutil", "Date": "2012-12-13T18:34:01Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((this.mCurrentScreen) instanceof com.dreamdigitizers.drugmanagement.views.implementations.fragments.screens.ScreenPrescriptionList)) { screen = new com.dreamdigitizers.drugmanagement.views.implementations.fragments.screens.ScreenPrescriptionList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2545/buggy-version/app.src.main.java.com.dreamdigitizers.drugmanagement.views.implementations.activities.ActivityMain.java", "BodyUseAPI": [], "Fixed commit": "0593ae8bf2c888925bb2cc23f19d64ce7bf2331c", "Url": "https://api.github.com/repos/daole/MedicineNotebook", "Date": "2015-11-17T17:45:38Z"},
{"Line": "=>698", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wasSelfPaused) { this.isPaused = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2595/buggy-version/src.mss.View.java", "BodyUseAPI": [], "Fixed commit": "0996d8f7931bc4cd61516d8c7b447663def162da", "Url": "https://api.github.com/repos/WebsiteDeveloper/Seminararbeit", "Date": "2013-09-08T18:01:17Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.server.OClientSessions.getConnections()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((connections.size()) == 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1684/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.binary.OLiveCommandResultListener.java", "BodyUseAPI": [], "Fixed commit": "a0f1a24c8076c9d2cf0010f22c4209ccc20588e8", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-06-15T15:11:08Z"},
{"Line": "=>1448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTitleCondensed) == null) { return getTitle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7420/buggy-version/actionbar.src.com.markupartist.android.widget.ActionBar.java", "BodyUseAPI": [], "Fixed commit": "b75c50356315b67cde0286c49a3e4ac9574d0d9d", "Url": "https://api.github.com/repos/johannilsson/android-actionbar", "Date": "2011-05-21T22:14:00Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getIntent().getStringExtra(\"type\")) == null) fab.show(); else if (!(getIntent().getStringExtra(\"type\").equals(\"newMessage\"))) fab.show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/773/buggy-version/app.src.main.java.it.polito.group05.group05.GroupActivity.java", "BodyUseAPI": [], "Fixed commit": "b425e09c4d93dbfcab376c7f0b4fea40b375ae3e", "Url": "https://api.github.com/repos/Nem2s/Group05", "Date": "2017-06-07T15:25:28Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.uni_koblenz.jgralab.greql.schema.GreqlExpression.get_importedTypes()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (importedTypes != null) { for (java.lang.String impType : importedTypes) { sb.append(\"import \").append(impType).append(\";\\n\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5500/buggy-version/src.de.uni_koblenz.jgralab.greql.serialising.GreqlSerializer.java", "BodyUseAPI": [], "Fixed commit": "6f323bf647519e0d29ceb33d44047c7ae95b4cfd", "Url": "https://api.github.com/repos/jgralab/jgralab", "Date": "2013-01-15T11:33:49Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.cover) != null) { this.cover_big = cover.replace(\"large\", \"t500x500\"); }else { this.cover_big = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8600/buggy-version/sound4u.src.main.java.it.polimi.dima.sound4u.model.Sound.java", "BodyUseAPI": [], "Fixed commit": "218adc7e8cd8a57ad9989f43614079f5fb726771", "Url": "https://api.github.com/repos/caps7744/sound4u", "Date": "2014-02-17T10:58:07Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["build.getEnvironment(listener).expand(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (passedPackageName == null) { passedPackageName = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4066/buggy-version/src.main.java.org.jenkinsci.plugins.environmentdashboard.DashboardBuilder.java", "BodyUseAPI": [], "Fixed commit": "27af95ba44f6d03f2a53d5e5b9f7fd9ed6f3e201", "Url": "https://api.github.com/repos/mmcgarr/environment-dashboard", "Date": "2015-01-09T16:02:44Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["build.getEnvironment(listener).expand(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (passedPackageName == null) { passedPackageName = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4066/buggy-version/src.main.java.org.jenkinsci.plugins.environmentdashboard.DashboardBuilder.java", "BodyUseAPI": [], "Fixed commit": "27af95ba44f6d03f2a53d5e5b9f7fd9ed6f3e201", "Url": "https://api.github.com/repos/mmcgarr/environment-dashboard", "Date": "2015-01-09T16:02:44Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.astrocytes.server.Mat.get(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (pixel == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/9159/buggy-version/src.main.java.com.astrocytes.server.OperationsImpl.java", "BodyUseAPI": [], "Fixed commit": "3fb72fe98e780cdf89bb03c77f808b4335b923de", "Url": "https://api.github.com/repos/komarovn/AstrocytesDetector", "Date": "2017-04-17T19:44:40Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["twillRuntimeSpec.getLogLevels().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (defaultLogLevels != null) { logLevels.putAll(defaultLogLevels); }else { defaultLogLevels = com.google.common.collect.ImmutableMap.of(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4957/buggy-version/twill-yarn.src.main.java.org.apache.twill.internal.container.TwillContainerMain.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.putAll(java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "33cf94d661f854b5770ec448531331cf2faafaf7", "Url": "https://api.github.com/repos/yaojiefeng/twill", "Date": "2017-03-16T23:57:05Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.processsesCurrentlySelected.contains((\"Process\" + currentProcess))) setDataForPage(currentData, propertiesForPage.getIndex());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7540/buggy-version/src.main.java.com.hit.view.MMUView.java", "BodyUseAPI": [], "Fixed commit": "2c52a87ed99e453017d0718ee270418a0686d4c1", "Url": "https://api.github.com/repos/yakirLLC/MMUProject", "Date": "2017-02-17T13:51:46Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shiftTime == 6) shiftTimeAsString = \"0\".concat(shiftTimeAsString);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2660/buggy-version/Project.src.utilities.RosterParser.java", "BodyUseAPI": [], "Fixed commit": "7a2511d045b73be45f54d8b56b403cc8aacc3e40", "Url": "https://api.github.com/repos/hcix/CSC531", "Date": "2012-04-17T13:33:32Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(urls.isEmpty())) { context.getFlowScope().put(org.apereo.cas.support.pac4j.web.flow.ClientAction.PAC4J_URLS, urls); }else { logger.warn(\"No clients could be determined based on the provided configuration\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6665/buggy-version/cas-server-support-pac4j.src.main.java.org.apereo.cas.support.pac4j.web.flow.ClientAction.java", "BodyUseAPI": ["context.getFlowScope().put(java.lang.String,java.util.Set<org.apereo.cas.support.pac4j.web.flow.ClientAction.ProviderLoginPageConfiguration>)"], "Fixed commit": "25c547c32ad0fdf6c1024653c07e3886059f0455", "Url": "https://api.github.com/repos/apereo/cas", "Date": "2016-08-26T07:41:29Z"},
{"Line": "=>1326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jgroups.protocols.UNICAST2.SenderEntry.getFirstMessage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (msg == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6056/buggy-version/src.org.jgroups.protocols.UNICAST2.java", "BodyUseAPI": [], "Fixed commit": "6c60e3b2076f0e5ed43e4cdb6e2797f5096bcc97", "Url": "https://api.github.com/repos/danberindei/JGroups", "Date": "2013-01-22T16:47:40Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index.equals(\"\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6799/buggy-version/src.main.java.de.completionary.proxy.elasticsearch.SuggestionIndex.java", "BodyUseAPI": [], "Fixed commit": "6f2032fdb705bee8f2bd0f6fe6f7a9cd3ac8e2e2", "Url": "https://api.github.com/repos/Completionary/completionProxy", "Date": "2014-08-03T11:48:03Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["node.facebook.FacebookFrontendSystem.getTransactionIdFromReplyId(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (txnid == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5386/buggy-version/assignment2.src.node.facebook.FacebookFrontendSystem.java", "BodyUseAPI": [], "Fixed commit": "f28adeb8230e7e49415aed5823e97b44f2cb34b4", "Url": "https://api.github.com/repos/sergioclemente/distributed_systems", "Date": "2012-05-14T04:38:32Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getBaseURI()) != null) { isource.setSystemId(node.getBaseURI().toASCIIString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4514/buggy-version/src.com.xmlcalabash.util.S9apiUtils.java", "BodyUseAPI": ["org.xml.sax.InputSource.setSystemId(node.getBaseURI().toASCIIString())", "net.sf.saxon.s9api.XdmNode.getBaseURI()", "node.getBaseURI().toASCIIString()"], "Fixed commit": "1f0d90a95e283beb32f27eb8d6f60d058f4eff54", "Url": "https://api.github.com/repos/rdeltour/xmlcalabash1", "Date": "2013-03-08T02:17:22Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_dPitch <= 0.0) _dPitch = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/9030/buggy-version/projetp1.src.com.github.projetp1.Mathematics.java", "BodyUseAPI": [], "Fixed commit": "866d7ceb8aef00390d8271680660d3ec3c55554b", "Url": "https://api.github.com/repos/IssaBarbier/Frontend", "Date": "2012-09-03T09:21:46Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((trial.getStepTimes()) != null) { while (nextStep < (trial.getStepTimes().length)) { if ((trial.getStepTimes()[nextStep]) == (data.getElapsedTimestamps()[i])) { graphData.addEntry(new com.github.mikephil.charting.data.Entry(10, (i + startPoint)), 2); nextStep++; added = true; break; } if ((trial.getStepTimes()[nextStep]) > (data.getElapsedTimestamps()[i])) { break; } nextStep++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4725/buggy-version/app.src.main.java.com.uoft.journey.ui.activity.MeasureActivity.java", "BodyUseAPI": ["com.uoft.journey.entity.Trial.getStepTimes()", "com.uoft.journey.entity.Trial.getStepTimes()", "com.uoft.journey.entity.Trial.getStepTimes()"], "Fixed commit": "6048ca28ca5c39cdeff50beb62803b2857be0ff4", "Url": "https://api.github.com/repos/jennaleeb/journey_wireframes", "Date": "2016-02-25T19:10:58Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["filterName.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userTofind.equals(\"\")) { neueFreundeList = MainActivity.manager.getmDatenbank(); displayList(); }else if (!(filterName.equals(null))) { neueFreundeList = MainActivity.manager.filterUserListName(filterName.getText().toString(), neueFreundeList); displayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5777/buggy-version/TeamSRMF.app.src.main.java.mobpro.hslu.ch.teamsrmf.NeueFreunde.java", "BodyUseAPI": [], "Fixed commit": "a83564772779c09e4521960847ac2a52f5d945cc", "Url": "https://api.github.com/repos/0wncl0ud/MobProPro", "Date": "2016-05-23T14:36:13Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataSnapshot.getValue()) != null) { java.lang.String foodName = dataSnapshot.child(\"name\").getValue().toString(); java.lang.String price = dataSnapshot.child(\"price\").getValue().toString(); holder.text1.setText((((foodName + \" (\") + price) + \"\u0e1a.)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/9113/buggy-version/app.src.main.java.com.app.fa.restaurantmate_v1.adapter.admin.FoodAdapter.java", "BodyUseAPI": ["dataSnapshot.child(\"price\").getValue()", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "dataSnapshot.child(\"name\").getValue()", "dataSnapshot.child(\"price\").getValue().toString()", "dataSnapshot.child(\"name\").getValue().toString()", "com.google.firebase.database.DataSnapshot.child(java.lang.String)"], "Fixed commit": "9188e989c6cc06a1fc9579ab77bce20cf46c6c3d", "Url": "https://api.github.com/repos/forefour/RestaurantMate-V1", "Date": "2016-11-27T16:02:51Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (danielm59.deathlog.handler.LogHandler.data.containsKey(player)) { playerData = ((java.util.LinkedHashMap<java.lang.String, java.lang.Integer>) (danielm59.deathlog.handler.LogHandler.data.get(player).clone())); if (danielm59.deathlog.handler.LogHandler.statRecorded(player, stat)) { oldCount = playerData.get(stat); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6012/buggy-version/src.main.java.danielm59.deathlog.handler.LogHandler.java", "BodyUseAPI": ["java.util.LinkedHashMap<java.lang.String, java.lang.Integer>.clone()", "danielm59.deathlog.handler.LogHandler.statRecorded(java.lang.String,java.lang.String)", "java.util.LinkedHashMap<java.lang.String, java.util.LinkedHashMap<java.lang.String, java.lang.Integer>>.get(java.lang.String)"], "Fixed commit": "9f3c01b857ade22d93f20765f97ea70e3fab75dc", "Url": "https://api.github.com/repos/danielm59/DeathLog", "Date": "2015-11-15T10:27:45Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataSnapshot.getValue()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4452/buggy-version/app.src.main.java.com.handup.handup.controller.course.CourseActivity.java", "BodyUseAPI": [], "Fixed commit": "4681035c8efade6a30e0d785fe675f857233dcb3", "Url": "https://api.github.com/repos/c4goldsw/HandUp", "Date": "2016-03-01T22:22:06Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hour == 12) { hour = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2888/buggy-version/app.src.main.java.com.oneminutebefore.workout.helpers.Utils.java", "BodyUseAPI": [], "Fixed commit": "f16e6ffb00f833aa56d0f3683262071f466abd3b", "Url": "https://api.github.com/repos/GrexoftDevelopers/omb", "Date": "2017-07-23T18:54:27Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.h31ix.anticheat.util.Utilities.isInstantBreak(block)) || (((tool.getType()) == (org.bukkit.Material.SHEARS)) && ((block.getId()) == (Material.LEAVES.getId())))) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8407/buggy-version/src.main.java.net.h31ix.anticheat.util.Utilities.java", "BodyUseAPI": [], "Fixed commit": "7ea8765212f231dd9215a3a544f33b499555b322", "Url": "https://api.github.com/repos/h31ix/AntiCheat", "Date": "2013-01-06T19:38:05Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (conf.getBoolean(org.apache.hadoop.hbase.regionserver.SegmentFactory.USEMSLAB_KEY, org.apache.hadoop.hbase.regionserver.SegmentFactory.USEMSLAB_DEFAULT)) { java.util.List<org.apache.hadoop.hbase.regionserver.MemStoreLAB> mslabs = new java.util.ArrayList<org.apache.hadoop.hbase.regionserver.MemStoreLAB>(); for (org.apache.hadoop.hbase.regionserver.ImmutableSegment segment : segments) { mslabs.add(segment.getMemStoreLAB()); } memStoreLAB = new org.apache.hadoop.hbase.regionserver.ImmutableMemStoreLAB(mslabs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5845/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.SegmentFactory.java", "BodyUseAPI": [], "Fixed commit": "ca6e3e630962e8d6e6bfb87661cd5565a998b0b7", "Url": "https://api.github.com/repos/Eshcar/hbase", "Date": "2016-11-10T13:01:11Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event) != null) { sb.append(\"event: \").append(event.replace(\"\\n\", \"\")).append('\\n'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6026/buggy-version/src.main.java.info.macias.sse.events.MessageEvent.java", "BodyUseAPI": [], "Fixed commit": "aa37b6601604d1a5b1f4d0b642d8df3c1c6543d2", "Url": "https://api.github.com/repos/mariomac/jeasse", "Date": "2015-12-21T21:57:46Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (destinationId == null) { return (((((\" if have(\\\"\" + objectName) + \"\\\") then remove(\\\"\") + objectName) + \"\\\", \") + \"inv()); end;\") + (com.nlbhub.nlb.domain.export.STEADExportManager.LINE_SEPARATOR); }else { return ((((\" objs(\" + (decorateId(destinationId))) + \"):del(\") + (decorateId(objectId))) + \");\") + (com.nlbhub.nlb.domain.export.STEADExportManager.LINE_SEPARATOR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2152/buggy-version/NLBL.src.main.java.com.nlbhub.nlb.domain.export.STEADExportManager.java", "BodyUseAPI": ["com.nlbhub.nlb.domain.export.STEADExportManager.decorateId(java.lang.String)"], "Fixed commit": "6866d33f012c90039a0600b1efc3321c3d53b7db", "Url": "https://api.github.com/repos/Antokolos/NLB", "Date": "2014-09-05T18:58:15Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (destinationId == null) { return ((((\" if not have(\\\"\" + objectName) + \"\\\") then take(\\'\") + (decorateId(objectId))) + \"'); end;\") + (com.nlbhub.nlb.domain.export.STEADExportManager.LINE_SEPARATOR); }else { return ((((\" objs(\" + (decorateId(destinationId))) + \"):add(\") + (decorateId(objectId))) + \");\") + (com.nlbhub.nlb.domain.export.STEADExportManager.LINE_SEPARATOR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2152/buggy-version/NLBL.src.main.java.com.nlbhub.nlb.domain.export.STEADExportManager.java", "BodyUseAPI": ["com.nlbhub.nlb.domain.export.STEADExportManager.decorateId(java.lang.String)"], "Fixed commit": "6866d33f012c90039a0600b1efc3321c3d53b7db", "Url": "https://api.github.com/repos/Antokolos/NLB", "Date": "2014-09-05T18:58:15Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((build.getResult()) == null) { result = \"?\"; ordinal = 5; }else { result = build.getResult().toString(); ordinal = build.getResult().ordinal; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7173/buggy-version/src.main.java.jenkinsci.plugins.influxdb.generators.JenkinsBasePointGenerator.java", "BodyUseAPI": ["hudson.model.Run<?, ?>.getResult()", "build.getResult().toString()", "hudson.model.Run<?, ?>.getResult()"], "Fixed commit": "a0b72f2abb1098d8a9ab246cac221afe17be73e3", "Url": "https://api.github.com/repos/harmti/influxdb-plugin", "Date": "2017-01-16T14:27:01Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (drive.equals(\"Personal Documents\")) { nav.goToPersonalDocuments(); click(org.exoplatform.selenium.platform.ecms.admin.ELEMENT_VIEW_MODE_LINK.replace(\"${viewName}\", view)); org.exoplatform.selenium.Utils.pause(500); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4853/buggy-version/ui-common.src.main.java.org.exoplatform.selenium.platform.ecms.admin.ManageDrive.java", "BodyUseAPI": [], "Fixed commit": "4cb2eef74b8826af913277060e244f022f051714", "Url": "https://api.github.com/repos/exoplatform/ui-test", "Date": "2013-09-17T09:51:54Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!((currentValue) instanceof org.pikater.core.ontology.subtrees.newOption.values.QuestionMarkRange)) && (!(type.getRangeRestriction().validatesValue(((org.pikater.core.ontology.subtrees.newOption.values.interfaces.IComparableValueData) (currentValue)))))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7590/buggy-version/src.org.pikater.core.ontology.subtrees.newOption.base.Value.java", "BodyUseAPI": [], "Fixed commit": "5254598a8ddf77dcf352d0790e2a849d872b177d", "Url": "https://api.github.com/repos/krajj7/pikater", "Date": "2014-09-04T21:48:12Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(intent.getAction().equals(Intent.ACTION_PACKAGE_REPLACED))) && (intent.getBooleanExtra(Intent.EXTRA_REPLACING, false))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1899/buggy-version/app.src.main.java.applock.mindorks.com.applock.services.NewAppInstalledReceiver.java", "BodyUseAPI": [], "Fixed commit": "240a192981b1b1b57165876beac91ea8b2ee2d03", "Url": "https://api.github.com/repos/amitshekhariitbhu/AppLock", "Date": "2015-05-01T18:03:22Z"},
{"Line": "=>654", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((protocol.equals(NetUtils.GRE_PROTO)) || (protocol.equals(NetUtils.ESP_PROTO))) || (protocol.equals(NetUtils.AH_PROTO))) { startPortOrType = 0; endPortOrCode = 0; }else { if ((startPort == null) || (endPort == null)) { throw new com.cloud.exception.InvalidParameterValueException((((\"Invalid port range specified, startPort = \" + startPort) + \", endPort = \") + endPort)); } if ((startPort == 0) && (endPort == 0)) { endPort = 65535; } if (startPort > endPort) { throw new com.cloud.exception.InvalidParameterValueException((((\"Invalid port range \" + startPort) + \":\") + endPort)); } if ((((startPort > 65535) || (endPort > 65535)) || (startPort < (-1))) || (endPort < (-1))) { throw new com.cloud.exception.InvalidParameterValueException((((\"Invalid port numbers \" + startPort) + \":\") + endPort)); } if ((startPort < 0) || (endPort < 0)) { throw new com.cloud.exception.InvalidParameterValueException((((\"Invalid port range \" + startPort) + \":\") + endPort)); } startPortOrType = startPort; endPortOrCode = endPort; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2414/buggy-version/server.src.com.cloud.network.security.SecurityGroupManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "d94dd9f67edf068414083bfb6cdf22003847f06c", "Url": "https://api.github.com/repos/exoscale/cloudstack", "Date": "2014-12-18T13:59:04Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (switches[i].isChecked()) { graphView.addSeries(graphs[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4680/buggy-version/app.src.main.java.com.laudien.p1xelfehler.batterywarner.fragments.GraphFragment.java", "BodyUseAPI": ["com.laudien.p1xelfehler.batterywarner.fragments.GraphFragment.addSeries(graphs[i])"], "Fixed commit": "0ca2fe0872608971c6b583deffa10e778ee853b8", "Url": "https://api.github.com/repos/P1xelfehler/BatteryWarner", "Date": "2017-09-12T09:22:05Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!complexType) superTypesCache.put(dec, superType);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/9077/buggy-version/src.com.redhat.ceylon.compiler.typechecker.model.ProducedType.java", "BodyUseAPI": [], "Fixed commit": "36453d59f6d0216ff443f7cc25ee9488e4c29b39", "Url": "https://api.github.com/repos/davidfestal/ceylon-spec", "Date": "2012-12-04T16:49:38Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (super.modelConfig.getVarSelect().getFilterBySE()) { this.postProcessFIVarSelect(mergedResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4154/buggy-version/src.main.java.ml.shifu.shifu.core.processor.VarSelectModelProcessor.java", "BodyUseAPI": [], "Fixed commit": "888e53867bc45d02011c7728b3f7b3aa56783815", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2016-12-20T09:47:03Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentLocationListener.locationManager) != null) { currentLocationListener.locationManager.removeUpdates(currentLocationListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2612/buggy-version/src.main.java.net.atomcode.bearing.location.PeriodicLocationTask.java", "BodyUseAPI": ["android.location.LocationManager.removeUpdates(net.atomcode.bearing.location.PeriodicLocationTask.CurrentLocationListener)"], "Fixed commit": "1f52d1bd3bdc50d5cb40c162e0f3109849b4f7c9", "Url": "https://api.github.com/repos/tom-bell/Bearing", "Date": "2014-05-15T14:47:51Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentLocationListener.client) != null) { currentLocationListener.client.removeLocationUpdates(currentLocationListener); currentLocationListener.client.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2612/buggy-version/src.main.java.net.atomcode.bearing.location.PeriodicLocationTask.java", "BodyUseAPI": ["com.google.android.gms.location.LocationClient.removeLocationUpdates(net.atomcode.bearing.location.PeriodicLocationTask.CurrentLocationListener)", "com.google.android.gms.location.LocationClient.disconnect()"], "Fixed commit": "1f52d1bd3bdc50d5cb40c162e0f3109849b4f7c9", "Url": "https://api.github.com/repos/tom-bell/Bearing", "Date": "2014-05-15T14:47:51Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mTablet) { prefs.removePreference(mForceTabletUI); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/128/buggy-version/src.com.baked.romcontrol.fragments.SystemExtra.java", "BodyUseAPI": [], "Fixed commit": "bf76511641c52c511ea4d2b549e861484691844b", "Url": "https://api.github.com/repos/TeamBAKED/packages_apps_ROMControl", "Date": "2012-09-16T22:24:29Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.network.vpc.dao.NetworkACLItemDaoImpl.findOneBy(com.cloud.utils.db.SearchCriteria<com.cloud.network.vpc.NetworkACLItemVO>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (vo != null) { loadCidrs(vo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1280/buggy-version/engine.schema.src.com.cloud.network.vpc.dao.NetworkACLItemDaoImpl.java", "BodyUseAPI": ["com.cloud.network.vpc.dao.NetworkACLItemDaoImpl.loadCidrs(com.cloud.network.vpc.NetworkACLItemVO)"], "Fixed commit": "980eac607f0dbb3b2c4478f75ffebb741ddc6981", "Url": "https://api.github.com/repos/SungardAS-CloudDevelopers/cloudstack", "Date": "2014-05-06T15:59:53Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gitDir.isDirectory()) { submittables = new org.webcat.submitter.SubmittableFile[(children.length) - 1]; }else { submittables = new org.webcat.submitter.SubmittableFile[children.length]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7777/buggy-version/org.webcat.eclipse.projectlink.src.org.webcat.eclipse.projectlink.exporter.SubmitAssignmentWizard.java", "BodyUseAPI": [], "Fixed commit": "e27e1e8fc2d43660555b22bccebfd562d511b982", "Url": "https://api.github.com/repos/web-cat/eclipse-plugins-importer-exporter", "Date": "2016-02-24T18:24:57Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (set != null) { authorName = set.getString(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5096/buggy-version/src.sourcePackage.Database.java", "BodyUseAPI": ["java.sql.ResultSet.getString(int)"], "Fixed commit": "ce044fc1d462af6782df7b4fc9cea22f9ac5255f", "Url": "https://api.github.com/repos/IKhaduri/QuizWebsite", "Date": "2016-06-06T08:51:35Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.plotReorder) != null) && reOrder) { java.util.ArrayList<java.lang.String[]> plotReorder = ((java.util.ArrayList<java.lang.String[]>) (this.plotReorder.clone())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8413/buggy-version/src.ToolUI.ThermoLoadingFrame.java", "BodyUseAPI": [], "Fixed commit": "033318a141f6a18be1271b3d16fd293f933e43b9", "Url": "https://api.github.com/repos/kkahrizi/DiAssessDataAnalysisTool", "Date": "2017-06-02T01:52:39Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["serverInformationContext.getServerConfigBuilderContext().getReadingDelay()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (delay > 0) { pipeline.addLast(new org.wso2.carbon.protocol.emulator.http.server.handler.SlowReadingHandler(delay)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2837/buggy-version/emulator.src.main.java.org.wso2.carbon.protocol.emulator.http.ChannelPipelineInitializer.java", "BodyUseAPI": ["io.netty.channel.ChannelPipeline.addLast(org.wso2.carbon.protocol.emulator.http.server.handler.SlowReadingHandler)"], "Fixed commit": "70c55f18f4c9b709655515e1359adb76e6ad6e7b", "Url": "https://api.github.com/repos/a5anka/wso2-protocol-emulator", "Date": "2017-10-16T10:51:55Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((GP) % (CA)) != 0) { GPA = ((double) (java.lang.Math.round(((GPA) * 100)))) / 100.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5586/buggy-version/app.src.main.java.com.example.clarinetmaster.gpacalculator.Model.Student.java", "BodyUseAPI": [], "Fixed commit": "5d8c62e504aba41e47b28b72d78ae8555e5c18fd", "Url": "https://api.github.com/repos/ChampClarinet/GPACalculator", "Date": "2016-10-26T16:16:20Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["word.getJSONArray(\"ex\").getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (example.has(\"ref\")) { ((java.util.List) (wordConfig.get(\"examples\"))).add(example.getString(\"ref\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5754/buggy-version/resource-container.src.main.java.org.unfoldingword.resourcecontainer.ContainerTools.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "java.lang.Object.add(example.getString(\"ref\"))"], "Fixed commit": "04f74763209cd357e9c6ea924e9d10f65177079d", "Url": "https://api.github.com/repos/unfoldingWord-dev/android-resource-container", "Date": "2016-11-03T02:44:38Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.example.andrea.starship_battle.model.CasellaPosition>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (casellaSelected.getImageName().equals(\"space\")) image.setImageDrawable(getResources().getDrawable(R.mipmap.ic_launcher)); else image.setImageDrawable(getResources().getDrawable(R.drawable.icon));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1285/buggy-version/app.src.main.java.com.example.andrea.starship_battle.Activities.StartGameActivity.java", "BodyUseAPI": [], "Fixed commit": "5c5a8629b0bde765fb2f95a2c656f01f7ca40c41", "Url": "https://api.github.com/repos/andreacarrarini/SpaceShip2.0", "Date": "2017-09-09T18:25:38Z"},
{"Line": "=>1772", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (o instanceof java.sql.Date) { o = ((java.sql.Date) (o)).toString(); }else if (o instanceof java.sql.Time) { o = ((java.sql.Time) (o)).toString(); }else if (o instanceof java.sql.Timestamp) { o = ((java.sql.Timestamp) (o)).toString(); }else if (o instanceof java.math.BigDecimal) { o = o.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8253/buggy-version/src.main.java.core.com.giisoo.core.bean.Bean.java", "BodyUseAPI": [], "Fixed commit": "8735e9079629893d232689ed899ea648ac1e01d8", "Url": "https://api.github.com/repos/s20000/webgiisoo", "Date": "2015-09-11T07:22:59Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((top) == ((nodes.length) - 1)) nodes[top] = null; else (top)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8410/buggy-version/12-Stack.ArrayStack.java", "BodyUseAPI": [], "Fixed commit": "99e80e99730887c296f1a537c3f0082f14c1be35", "Url": "https://api.github.com/repos/kylerchase/apcs-hw", "Date": "2014-04-08T13:52:11Z"},
{"Line": "=>1805", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(prevToken.tokenStr.equals(\")\"))) && ((scan.nextToken.primClassif) != (Token.EOF))) error(\"ERROR: PRINT FUNCTION IS MISSING ClOSING ')'\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8067/buggy-version/src.havabol.Parser.java", "BodyUseAPI": [], "Fixed commit": "c5f013120d7c56eeb1906936be9f091e9009a1b6", "Url": "https://api.github.com/repos/pabloevd950/havaBol", "Date": "2017-04-19T23:14:35Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.termListMap.get(index)) == null) { val = 0; }else { val = this.termListMap.get(index).hashCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/161/buggy-version/src.minhash.MinHash.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.lang.String>.get(int)", "java.lang.String.hashCode()"], "Fixed commit": "5ccb0b6a4392409e714ae6acc4357e1631470160", "Url": "https://api.github.com/repos/nishanthsiva/documentsimilarity", "Date": "2016-03-11T14:22:24Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(options.debug)) { try { org.apache.commons.io.FileUtils.deleteDirectory(tempDir); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/816/buggy-version/k-core.src.main.java.org.kframework.utils.file.FileUtil.java", "BodyUseAPI": [], "Fixed commit": "78394edef5bd4c8bb08a3d2280ec891d1f936d9c", "Url": "https://api.github.com/repos/dwightguth/k", "Date": "2014-10-24T19:17:14Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(protocol.isEmpty())) builder.append(protocol).append(\"://\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/163/buggy-version/cascading-core.src.main.java.cascading.management.annotation.URISanitizer.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "7fe1224dbf4cafd1b862d8460c73d57759397458", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2016-01-20T23:09:51Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parts.length) == 2) protocol = parts[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/163/buggy-version/cascading-core.src.main.java.cascading.management.annotation.URISanitizer.java", "BodyUseAPI": [], "Fixed commit": "7fe1224dbf4cafd1b862d8460c73d57759397458", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2016-01-20T23:09:51Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showDisplayOptions()) { com.android.dialer.settings.Header displayOptionsHeader = new com.android.dialer.settings.Header(); displayOptionsHeader.titleRes = R.string.display_options_title; displayOptionsHeader.fragment = com.android.dialer.settings.DisplayOptionsSettingsFragment.class.getName(); target.add(displayOptionsHeader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5740/buggy-version/com.android.dialer.src.main.java.com.android.dialer.settings.DialerSettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "f6b7bc5fc7c044d162e038198cc0c9277afde98e", "Url": "https://api.github.com/repos/geniusgithub/AndroidDialer", "Date": "2016-11-26T11:59:19Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((server.QueueHandlerThread.PBQ.peek()) == null)) { { server.QueueHandlerThread.PBQ.poll().BI.Implement(lockForBI, Table); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1168/buggy-version/ClusterServer.src.server.QueueHandlerThread.java", "BodyUseAPI": ["server.QueueHandlerThread.PBQ.poll().BI.Implement(java.lang.Object,javax.swing.JTable)", "java.util.concurrent.PriorityBlockingQueue<server.ComparatorPriorityTask>.poll()"], "Fixed commit": "ad06a4b27d948fe705757995c3b72525d521d470", "Url": "https://api.github.com/repos/andreymarchenko/JAVA-client-server", "Date": "2016-12-09T13:48:29Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s2.length()) > (s1.length())) { s2 = s2.substring(0, s1.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2730/buggy-version/OpenGov.src.main.java.za.org.opengov.common.util.StringMatcher.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "bf972269e16a449403fe874adaae61112db1a16f", "Url": "https://api.github.com/repos/JamesWillLewis/opengov", "Date": "2013-10-13T17:47:23Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v.getId()) == (discardButton.getId())) { this.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3430/buggy-version/src.com.mh.activity.EditShedule.java", "BodyUseAPI": [], "Fixed commit": "4ab6bc9821fb7acd389021178c7a98f7f18544d0", "Url": "https://api.github.com/repos/mh494078416/ClassShedule", "Date": "2013-10-16T09:44:46Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processes) == null) { this.processes = processes; }else { this.processes.clear(); this.processes.addAll(processes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2960/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Batch.java", "BodyUseAPI": [], "Fixed commit": "32cc3237d3e12a934beb905e8430e38733a6d619", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batches) == null) { this.batches = batches; }else { this.batches.clear(); this.batches.addAll(batches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2960/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Process.java", "BodyUseAPI": [], "Fixed commit": "32cc3237d3e12a934beb905e8430e38733a6d619", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((conMgr) != null) { currentNetworkSubType = conMgr.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).getSubtype(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7542/buggy-version/native.SalesforceSDK.src.com.salesforce.androidsdk.auth.HttpAccess.java", "BodyUseAPI": [], "Fixed commit": "e4bef425ef8670bf5e6780e70ce99a3bfed8cc75", "Url": "https://api.github.com/repos/forcedotcom/SalesforceMobileSDK-Android", "Date": "2012-07-03T21:47:56Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gotSeconds) { org.dungeon.debug.DebugTools.rollDate(seconds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6532/buggy-version/src.main.java.org.dungeon.debug.DebugTools.java", "BodyUseAPI": [], "Fixed commit": "733fea548e18d6c94a0e3c8b278c1ad4b42f825a", "Url": "https://api.github.com/repos/bernardosulzbach/dungeon", "Date": "2015-05-30T04:48:49Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newFragment) instanceof com.murad.gradecalculator.FourPointFragment) { view = ((android.view.View) (findViewById(R.id.four_point_table))); }else if ((newFragment) instanceof com.murad.gradecalculator.NinePointFragment) { view = ((android.view.View) (findViewById(R.id.nine_point_table))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6266/buggy-version/app.src.main.java.com.murad.gradecalculator.GPACalculatorActivity.java", "BodyUseAPI": [], "Fixed commit": "44c0ff58437ff10320ea725ee6a4e95a23351b38", "Url": "https://api.github.com/repos/christinem/GradeCalculator", "Date": "2014-12-26T07:38:29Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((compacted) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1238/buggy-version/extensions.hdrhistogram.src.main.java.org.radargun.stats.HistogramOperationStats.java", "BodyUseAPI": [], "Fixed commit": "e7afaabf334e8cbc1452e9c981fd296b6ca9d509", "Url": "https://api.github.com/repos/radargun/radargun", "Date": "2014-11-07T10:36:51Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((histogram) == null) throw new java.lang.IllegalStateException(\"Either compacted or expanded form has to be defined!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1238/buggy-version/extensions.hdrhistogram.src.main.java.org.radargun.stats.HistogramOperationStats.java", "BodyUseAPI": [], "Fixed commit": "e7afaabf334e8cbc1452e9c981fd296b6ca9d509", "Url": "https://api.github.com/repos/radargun/radargun", "Date": "2014-11-07T10:36:51Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mob.buff(com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Terror.class)) != null) { count++; affected = mob; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4606/buggy-version/src.com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfTerror.java", "BodyUseAPI": [], "Fixed commit": "f09e96651b09199bc149514c50e81bc4409aaca5", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2015-09-11T17:54:16Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mGoogleApiClient.isConnected()) { java.util.List<java.lang.String> geofenceRequestId = new java.util.ArrayList<java.lang.String>(); geofenceRequestId.add(alarme1.getTitre()); LocationServices.GeofencingApi.removeGeofences(mGoogleApiClient, geofenceRequestId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1113/buggy-version/app.src.main.java.com.geominder.esiea.geonav.ModifierActivity.java", "BodyUseAPI": ["LocationServices.GeofencingApi.removeGeofences(com.google.android.gms.common.api.GoogleApiClient,java.util.List<java.lang.String>)"], "Fixed commit": "13b31e46f13feb6425fcbb22ef220a4b9757d481", "Url": "https://api.github.com/repos/aurelienperillat/GeoMinder", "Date": "2016-01-21T02:34:59Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p.getPosition().equals(de.movope.game.Square.create(square))) { return p; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3118/buggy-version/src.de.movope.game.Board.java", "BodyUseAPI": [], "Fixed commit": "52a76f110508297fee17a5e702de8c5eae54c19f", "Url": "https://api.github.com/repos/movope/cheesechess", "Date": "2014-03-23T17:37:26Z"},
{"Line": "=>641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.CheckBox.getTag()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ac.getItems().contains(bluetooth)) { disableBluetooth(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6376/buggy-version/app.src.main.java.edu.nd.darts.cimon.PhysicianInterface.java", "BodyUseAPI": [], "Fixed commit": "5632b376ae0932d59c5be7b325b7c8785d38da00", "Url": "https://api.github.com/repos/ningPATH/NDroidAdmin", "Date": "2015-03-14T19:54:52Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((vaadinApplicationFilter) != null) && (!(vaadinApplicationFilter.equals(vaadinApplication)))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6520/buggy-version/org.lunifera.runtime.web.vaadin.osgi.src.org.lunifera.runtime.web.vaadin.osgi.webapp.VaadinApplicationFactory.java", "BodyUseAPI": [], "Fixed commit": "96128a46956b49357c905c6bdf6bebbc7c97ee13", "Url": "https://api.github.com/repos/lunifera/lunifera-runtime-web", "Date": "2013-08-04T13:49:38Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (javacGenerateDebugSymbols) { options.add(\"-g\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7902/buggy-version/src.main.java.scala_maven.ScalaMojoSupport.java", "BodyUseAPI": [], "Fixed commit": "cd8361805728e86a7a76b724dbaf5252f2034aad", "Url": "https://api.github.com/repos/davidB/scala-maven-plugin", "Date": "2013-01-08T22:08:10Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.linkedin.camus.etl.kafka.common.EtlRequest, com.linkedin.camus.etl.kafka.common.EtlKey>.get(com.linkedin.camus.etl.kafka.common.EtlRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (key == null) { request.setOffset(((request.getEarliestOffset()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5851/buggy-version/camus-etl-kafka.src.main.java.com.linkedin.camus.etl.kafka.mapred.EtlInputFormat.java", "BodyUseAPI": [], "Fixed commit": "8a7ad376aa324acb74e1fe55dce6351b0ddef11e", "Url": "https://api.github.com/repos/bbaugher/camus", "Date": "2013-11-25T20:59:09Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((retValue.getItems()) != null) { for (final com.redhat.topicindex.rest.entities.interfaces.RESTImageV1 image : retValue.getItems()) { if (((image.getLanguageImages_OTM()) != null) && ((image.getLanguageImages_OTM().getItems()) != null)) { for (final com.redhat.topicindex.rest.entities.interfaces.RESTLanguageImageV1 langImage : image.getLanguageImages_OTM().getItems()) { results.append(((((image.getId()) + \": \") + (langImage.getFilename())) + \"\\n\")); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/881/buggy-version/src.main.java.com.redhat.topicindex.extras.client.local.App.java", "BodyUseAPI": ["com.redhat.topicindex.rest.collections.BaseRestCollectionV1<com.redhat.topicindex.rest.entities.interfaces.RESTImageV1>.getItems()"], "Fixed commit": "a7373e9ef81cf55014109b192be0cb6acd9728e3", "Url": "https://api.github.com/repos/mcasperson/TopicIndexExtras", "Date": "2012-06-12T08:36:59Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((image.getLanguageImages_OTM()) != null) && ((image.getLanguageImages_OTM().getItems()) != null)) { for (final com.redhat.topicindex.rest.entities.interfaces.RESTLanguageImageV1 langImage : image.getLanguageImages_OTM().getItems()) { results.append(((((image.getId()) + \": \") + (langImage.getFilename())) + \"\\n\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/881/buggy-version/src.main.java.com.redhat.topicindex.extras.client.local.App.java", "BodyUseAPI": ["com.redhat.topicindex.rest.entities.interfaces.RESTImageV1.getId()", "image.getLanguageImages_OTM().getItems()", "java.lang.StringBuilder.append(((((image.getId()) + \": \") + (langImage.getFilename())) + \"\\n\"))", "com.redhat.topicindex.rest.entities.interfaces.RESTImageV1.getLanguageImages_OTM()"], "Fixed commit": "a7373e9ef81cf55014109b192be0cb6acd9728e3", "Url": "https://api.github.com/repos/mcasperson/TopicIndexExtras", "Date": "2012-06-12T08:36:59Z"},
{"Line": "=>2497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mKeyboard) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3931/buggy-version/src.com.anysoftkeyboard.keyboards.views.AnyKeyboardBaseView.java", "BodyUseAPI": [], "Fixed commit": "f3434c5391d98caf38e1688ee203e41110217bf3", "Url": "https://api.github.com/repos/AnySoftKeyboard/AnySoftKeyboard", "Date": "2013-04-18T00:17:45Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getView().findViewById(R.id.llLoading)) != null) { llLoading = ((android.widget.RelativeLayout) (getView().findViewById(R.id.llLoading))); llLoading.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4948/buggy-version/app.src.main.java.com.example.jinjinz.concertprev.fragments.SongsFragment.java", "BodyUseAPI": [], "Fixed commit": "2c08265a5c059874666c82d857766d687fb7122f", "Url": "https://api.github.com/repos/beccablee/ConcertsPreview", "Date": "2016-07-21T19:26:17Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getScheduledStart().compareTimes(this.getScheduledStop())) == 1) { new_voidblock.setScheduledStop(new_voidblock.getScheduledStop().add(new org.joda.time.Period().plusDays(1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7447/buggy-version/Android.Skeem.app.src.main.java.sstinc.skeem.models.Voidblock.java", "BodyUseAPI": [], "Fixed commit": "bf38987012ff13bd409fdd03098a7fba6e8cba8b", "Url": "https://api.github.com/repos/mrzzy/Skeem", "Date": "2016-12-31T12:27:46Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Vector<java.lang.Double>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fieldIndex >= 0) && (!(drawn.contains(fieldIndex)))) { int xMid = (x1 + x2) / 2; int yMid = (y1 + y2) / 2; g.drawString(java.lang.Integer.toString(((int) (fieldIndex))), xMid, (yMid + 10)); drawn.add(fieldIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5396/buggy-version/src.nbtool.src.nbtool.gui.logviews.images.LineView.java", "BodyUseAPI": ["java.util.List<java.lang.Double>.add(double)"], "Fixed commit": "8319e979168038ee7a1f9db5c178547fa7b5f52e", "Url": "https://api.github.com/repos/coryalini/nbites", "Date": "2015-06-24T14:26:59Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(animateOnResult)) { overridePendingTransition(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/30/buggy-version/src.cz.quinix.condroid.ui.ProgramActivity.java", "BodyUseAPI": [], "Fixed commit": "4f332bb21d943b149ed57114e8add0dd6f20c498", "Url": "https://api.github.com/repos/Quinix/Condroid", "Date": "2012-05-30T21:40:26Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.elmakers.mine.bukkit.api.wand.Wand.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (((exactPath) != null) && (!(exactPath.equals(path.getKey())))) { com.elmakers.mine.bukkit.api.wand.WandUpgradePath requiresPath = controller.getPath(exactPath); if (requiresPath != null) { context.showMessage(context.getMessage(\"no_path_exact\", \"You must be at $path!\").replace(\"$path\", requiresPath.getName())); }else { context.getLogger().warning((\"Invalid path specified in Shop action: \" + (exactPath))); } return com.elmakers.mine.bukkit.api.spell.SpellResult.FAIL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7313/buggy-version/src.main.java.com.elmakers.mine.bukkit.action.BaseShopAction.java", "BodyUseAPI": ["com.elmakers.mine.bukkit.api.magic.MageController.getPath(java.lang.String)", "context.getLogger().warning(java.lang.String)"], "Fixed commit": "cb266cf929004da91e169028cddbf0f5fd7e5121", "Url": "https://api.github.com/repos/elBukkit/MagicLib", "Date": "2016-01-25T16:42:35Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gameProfile.getName()) != null) { gameProfile1 = net.minecraft.server.v1_8_R2.MinecraftServer.getServer().getUserCache().getProfile(gameProfile.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1986/buggy-version/src.main.java.net.aufdemrand.denizen.objects.properties.item.ItemSkullskin.java", "BodyUseAPI": ["com.mojang.authlib.GameProfile.getName()", "net.minecraft.server.v1_8_R2.MinecraftServer.getServer().getUserCache().getProfile(gameProfile.getName())"], "Fixed commit": "576c32ea75e63a1e8e700e4d9d6775e6f348b483", "Url": "https://api.github.com/repos/mcmonkey4eva/Denizen", "Date": "2015-05-01T02:29:41Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.followFragment.isAdded())) { transaction.add(R.id.basketDrawerFrame, followFragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5772/buggy-version/app.src.main.java.com.example.group21.balancebasket.BasketDrawer.java", "BodyUseAPI": [], "Fixed commit": "eb1b2d8e54ee954642ecfb7bd6b6b33c8e1aa56e", "Url": "https://api.github.com/repos/RensMD/BalanceBasket", "Date": "2016-04-14T21:09:43Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["var1.getEntityWorld().perWorldStorage.loadData(java.lang.Class,WorldData.name)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (d == null) { d = new net.shadowmage.ancientwarfare.core.gamedata.WorldData(); var1.getEntityWorld().perWorldStorage.setData(WorldData.name, d); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2139/buggy-version/src.main.java.net.shadowmage.ancientwarfare.npc.command.CommandDebugAI.java", "BodyUseAPI": ["var1.getEntityWorld().perWorldStorage.setData(WorldData.name,net.shadowmage.ancientwarfare.core.gamedata.WorldData)"], "Fixed commit": "8124768eb74939f339c353f5fae4ba697c38c96d", "Url": "https://api.github.com/repos/shadowmage45/AncientWarfare2", "Date": "2014-12-23T01:01:14Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) { if (file.mkdir()) { java.lang.System.out.println(\"Directory is created!\"); }else { java.lang.System.out.println(\"Failed to create directory!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4827/buggy-version/Catan.Server.server.games.AGamesFacade.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "7b2f41e45b070c1f60fcd06a90380ac4609f399b", "Url": "https://api.github.com/repos/Chad-Barlow/CS340", "Date": "2014-11-19T03:19:52Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((me.chaseoes.tf2.GameUtilities.getUtilities().getGame(map).getStatus()) != (GameStatus.WAITING)) && ((me.chaseoes.tf2.GameUtilities.getUtilities().getGame(map).getStatus()) != (GameStatus.DISABLED))) { me.chaseoes.tf2.GameUtilities.getUtilities().getGame(map).stopMatch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6074/buggy-version/src.me.chaseoes.tf2.TF2.java", "BodyUseAPI": ["me.chaseoes.tf2.GameUtilities.getUtilities().getGame(map).stopMatch()", "me.chaseoes.tf2.GameUtilities.getUtilities().getGame(me.chaseoes.tf2.Map)"], "Fixed commit": "230ef574f59329fbfdea2df9c768b17154ec2688", "Url": "https://api.github.com/repos/chaseoes/TF2", "Date": "2013-01-02T21:05:17Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (val < 0) val += 256;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4190/buggy-version/Source.com.drew.metadata.exif.makernotes.NikonType2MakernoteDescriptor.java", "BodyUseAPI": [], "Fixed commit": "a293829eaa79e27dec1743ae5aec1711950d7211", "Url": "https://api.github.com/repos/InvLim/metadata-extractor", "Date": "2016-03-03T17:28:33Z"},
{"Line": "=>730", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (pkgFail != null) { newFailReason(pkgFail, \"Package temporary black listed\", ep); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/9237/buggy-version/osgi.framework.src.org.knopflerfish.framework.Resolver.java", "BodyUseAPI": ["org.knopflerfish.framework.Resolver.newFailReason(java.lang.StringBuffer,java.lang.String,org.knopflerfish.framework.ExportPkg)"], "Fixed commit": "ed571c1054fbd8f679f452695e20bbd69a201a09", "Url": "https://api.github.com/repos/knopflerfish/knopflerfish.org", "Date": "2016-07-14T07:32:55Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getWorld().getName()", "org.bukkit.entity.Player.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (plugin.commandUtils.hasMemberPermission(player, world, name)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7821/buggy-version/src.main.java.net.willsr71.mystcraftutils.PlayerManager.java", "BodyUseAPI": [], "Fixed commit": "73638f14291128cd2892fcea4bb47b770af6e9d7", "Url": "https://api.github.com/repos/Willsr71/DimensionGuard", "Date": "2015-09-09T20:11:26Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getName()", "player.getWorld().getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (plugin.commandUtils.hasOwnerPermission(player, world, name)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7821/buggy-version/src.main.java.net.willsr71.mystcraftutils.PlayerManager.java", "BodyUseAPI": [], "Fixed commit": "73638f14291128cd2892fcea4bb47b770af6e9d7", "Url": "https://api.github.com/repos/Willsr71/DimensionGuard", "Date": "2015-09-09T20:11:26Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getAction()) != (org.bukkit.event.block.Action.RIGHT_CLICK_BLOCK)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7821/buggy-version/src.main.java.net.willsr71.mystcraftutils.EventListener.java", "BodyUseAPI": [], "Fixed commit": "73638f14291128cd2892fcea4bb47b770af6e9d7", "Url": "https://api.github.com/repos/Willsr71/DimensionGuard", "Date": "2015-09-09T20:11:26Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((row >= 0) && (column >= 0)) { return playerMatrix[row][column]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4133/buggy-version/src.CellMatrix.java", "BodyUseAPI": [], "Fixed commit": "2dab0f9ec8bce3585421f23cc493509a3a451adc", "Url": "https://api.github.com/repos/DoNgocTrinh/TechkidsChess", "Date": "2016-06-05T04:01:34Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rData.get_categories()) != null) { for (com.taesiri.kioskfoodanroid.CategoryData cat : rData.get_categories()) { mAdapter.add(cat); } _currentData = rData; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5373/buggy-version/KioskFoodAndroid.app.src.main.java.com.taesiri.kioskfoodanroid.HomeActivity.java", "BodyUseAPI": ["com.taesiri.kioskfoodanroid.RestaurantData.get_categories()"], "Fixed commit": "4471a0ef6c853f082881a7c3baf4a505d07f0eb2", "Url": "https://api.github.com/repos/KioskTeam/KioskFoodAndroid", "Date": "2014-09-08T20:13:48Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (result != null) { HomeActivity.instance.dataReceived(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5373/buggy-version/KioskFoodAndroid.app.src.main.java.com.taesiri.kioskfoodanroid.KioskCommunicator.java", "BodyUseAPI": ["HomeActivity.instance.dataReceived(com.taesiri.kioskfoodanroid.RestaurantData)"], "Fixed commit": "4471a0ef6c853f082881a7c3baf4a505d07f0eb2", "Url": "https://api.github.com/repos/KioskTeam/KioskFoodAndroid", "Date": "2014-09-08T20:13:48Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (activity instanceof com.afollestad.appthemeengine.customizers.ATETaskDescriptionCustomizer) { com.afollestad.appthemeengine.customizers.ATETaskDescriptionCustomizer customizer = ((com.afollestad.appthemeengine.customizers.ATETaskDescriptionCustomizer) (activity)); color = customizer.getTaskDescriptionColor(); icon = customizer.getTaskDescriptionIcon(); }else { color = com.afollestad.appthemeengine.Config.primaryColor(activity, key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7184/buggy-version/library.src.main.java.com.afollestad.appthemeengine.ATE.java", "BodyUseAPI": ["com.afollestad.appthemeengine.Config.primaryColor(android.app.Activity,java.lang.String)"], "Fixed commit": "114ffa15d25966a358872037558068990b70e348", "Url": "https://api.github.com/repos/naman14/app-theme-engine", "Date": "2016-01-01T19:47:19Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (icon == null) icon = ((android.graphics.drawable.BitmapDrawable) (activity.getApplicationInfo().loadIcon(activity.getPackageManager()))).getBitmap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7184/buggy-version/library.src.main.java.com.afollestad.appthemeengine.ATE.java", "BodyUseAPI": [], "Fixed commit": "114ffa15d25966a358872037558068990b70e348", "Url": "https://api.github.com/repos/naman14/app-theme-engine", "Date": "2016-01-01T19:47:19Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s0.equals(s1)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4931/buggy-version/src.main.java.info.debatty.java.stringsimilarity.NGram.java", "BodyUseAPI": [], "Fixed commit": "bc519bcf8a1bd6ba2e70d8f7572f8e68803667b9", "Url": "https://api.github.com/repos/tdebatty/java-string-similarity", "Date": "2016-12-14T13:56:38Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.PATHoleilu.hutool.util.ReUtil.get(java.util.regex.Pattern,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.PATHoleilu.hutool.util.StrUtil.containsIgnoreCase(charsetInContentStr, \"utf-8\")) { charsetInContent = com.PATHoleilu.hutool.util.CharsetUtil.CHARSET_UTF_8; }else if (com.PATHoleilu.hutool.util.StrUtil.containsIgnoreCase(charsetInContentStr, \"gbk\")) { charsetInContent = com.PATHoleilu.hutool.util.CharsetUtil.CHARSET_GBK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4232/buggy-version/hutool-http.src.main.java.com.PATHoleilu.hutool.http.HttpUtil.java", "BodyUseAPI": ["com.PATHoleilu.hutool.util.StrUtil.containsIgnoreCase(java.lang.String,java.lang.String)"], "Fixed commit": "735da225ec96bc9faf579ec7f84b5f0040ae68d6", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2017-09-27T10:50:33Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.affectedObjectsSet) { for (java.util.Iterator<java.util.UUID> it = objects.iterator(); it.hasNext();) { java.util.UUID permanentId = it.next(); mage.game.permanent.Permanent permanent = game.getPermanent(permanentId); if (permanent != null) { permanent.addPower(power.calculate(game, source, this)); permanent.addToughness(toughness.calculate(game, source, this)); }else { it.remove(); } } }else { for (mage.game.permanent.Permanent perm : game.getBattlefield().getActivePermanents(filter, source.getControllerId(), source.getSourceId(), game)) { if (!((excludeSource) && (perm.getId().equals(source.getSourceId())))) { perm.addPower(power.calculate(game, source, this)); perm.addToughness(toughness.calculate(game, source, this)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/9064/buggy-version/Mage.src.mage.abilities.effects.common.continious.BoostAllEffect.java", "BodyUseAPI": [], "Fixed commit": "746c86363fc2a257cfaf8c32fad3be0fe844200a", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-08-19T13:04:33Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(imageOnAnotherDevice)) { imageViewAnimator.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6906/buggy-version/src.main.java.blot.jordan.ellis.com.blot.SearchResultsNoteAdapter.java", "BodyUseAPI": [], "Fixed commit": "6d1da7f024b199cc0501b642067460a0e22e8332", "Url": "https://api.github.com/repos/jordaniellis/Blot", "Date": "2015-05-09T16:38:12Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(imageOnAnotherDevice)) { imageViewAnimator.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6906/buggy-version/src.main.java.blot.jordan.ellis.com.blot.ArchivedNoteAdapter.java", "BodyUseAPI": [], "Fixed commit": "6d1da7f024b199cc0501b642067460a0e22e8332", "Url": "https://api.github.com/repos/jordaniellis/Blot", "Date": "2015-05-09T16:38:12Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(imageOnAnotherDevice)) { imageViewAnimator.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6906/buggy-version/src.main.java.blot.jordan.ellis.com.blot.NoteAdapter.java", "BodyUseAPI": [], "Fixed commit": "6d1da7f024b199cc0501b642067460a0e22e8332", "Url": "https://api.github.com/repos/jordaniellis/Blot", "Date": "2015-05-09T16:38:12Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((locationB.getString(\"location\")) != null) { java.lang.String locationS = locationB.getString(\"location\"); loadWeatherDataStringCurrent(locationS); }else { android.util.Log.d(com.example.utkua.weathertron.ChosenCityActivity.TAG, \"Intent extra location null on start of ChosenCityActivity\"); loadWeatherDataCoordinatesCurrent(lat, lon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6946/buggy-version/app.src.main.java.com.example.utkua.weathertron.ChosenCityActivity.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "719d1be8755bbe94095afc3b086793367b6dc438", "Url": "https://api.github.com/repos/Brodican/WeatherTron", "Date": "2017-08-10T11:38:08Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((trimmedString.length()) == 0) { return new java.util.ArrayList<>(); }else { java.lang.String[] tokens = trimmedString.split(regex); return java.util.Arrays.asList(tokens); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5866/buggy-version/java-string-tokens.src.Solution.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "96cbbf2d3cd89c1921fe862981228ae2c49ba569", "Url": "https://api.github.com/repos/ecarlste/hacker-rank-java", "Date": "2017-02-12T11:19:49Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gigigo.orchextra.core.domain.entities.elementcache.ElementCache.getRender()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (render != null) { processCustomTabs(render.getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3901/buggy-version/ocmsdk.src.main.java.com.gigigo.orchextra.core.sdk.OcmSchemeHandler.java", "BodyUseAPI": ["com.gigigo.orchextra.core.domain.entities.elementcache.ElementCacheRender.getUrl()", "com.gigigo.orchextra.core.sdk.OcmSchemeHandler.processCustomTabs(render.getUrl())"], "Fixed commit": "bfd07b68dd30cb89146ceb58ab0f09dc9d98caa5", "Url": "https://api.github.com/repos/Orchextra/orchextra-content-android-sdk", "Date": "2017-07-13T15:13:34Z"},
{"Line": "=>619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hp.hpl.jena.rdf.model.Statement.getString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((formulaString.split(\"=\", 2)[0].equals(\"VALUATION\")) || (formulaString.split(\"=\", 2)[0].equals(\"EXPENSES\"))) { double value = java.lang.Float.valueOf(formula.getString().split(\"=\", 2)[1]); valuePortValuation += value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/9220/buggy-version/src.main.java.e3fraud.model.E3Model.java", "BodyUseAPI": [], "Fixed commit": "6098498185a45af896f70f366a0486779ed26567", "Url": "https://api.github.com/repos/danionita/e3tools", "Date": "2016-09-19T14:36:54Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((statuses.size()) > 8) { countOfTaskItems = 8; }else { countOfTaskItems = statuses.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5295/buggy-version/java.com.alexkaz.simplytaskmanager.uicomp.TaskIndictor.java", "BodyUseAPI": ["java.util.ArrayList<com.alexkaz.simplytaskmanager.uicomp.TaskStatus>.size()"], "Fixed commit": "e676c8dc064eab2a72525abeca0146509c25d945", "Url": "https://api.github.com/repos/AlexKazmirchuk/SimplyTaskManager", "Date": "2016-09-04T10:51:57Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((snackbarAndFabContainer) != null) && ((snackbarAndFabContainer.getLayoutParams()) instanceof android.widget.RelativeLayout.LayoutParams)) alignSnackbarContainerWithBottomTabs(((com.reactnativenavigation.layouts.LayoutParams) (snackbarAndFabContainer.getLayoutParams())), params);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5962/buggy-version/android.app.src.main.java.com.reactnativenavigation.layouts.BottomTabsLayout.java", "BodyUseAPI": ["com.reactnativenavigation.views.SnackbarAndFabContainer.getLayoutParams()", "com.reactnativenavigation.layouts.BottomTabsLayout.alignSnackbarContainerWithBottomTabs(((com.reactnativenavigation.layouts.LayoutParams) (snackbarAndFabContainer.getLayoutParams())),com.reactnativenavigation.params.StyleParams)"], "Fixed commit": "34052a901d24050bc2befce61c555788927d836c", "Url": "https://api.github.com/repos/xandyn/react-native-navigation", "Date": "2017-06-29T13:12:01Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.counter) != null) { this.counter.setText((\"Connected: \" + (this.count))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1329/buggy-version/desktop.src.main.nl.tudelft.ti2806.riverrush.screen.WaitingScreen.java", "BodyUseAPI": [], "Fixed commit": "ff516a51e7504d362737856729a5ecadd90c43ac", "Url": "https://api.github.com/repos/StreetLampStudios/RiverRush", "Date": "2015-06-16T09:22:34Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.doctor_andonuts.mylife.Chain>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (chain.getType().equals(\"MinMax\")) { java.lang.String dayStatus = chain.getDayStatus(todayString); if (dayStatus.equals(\"Done\")) { doneButton.setBackgroundColor(-12345273); }else if (dayStatus.equals(\"Should do\")) { doneButton.setBackgroundColor(-141259); }else if (dayStatus.equals(\"No need\")) { doneButton.setBackgroundColor(-14983648); }else if (dayStatus.equals(\"DO IT!\")) { doneButton.setBackgroundColor(-3790808); }else { doneButton.setBackgroundColor(-10066330); } }else { int[] onceOverData = chain.getOnceOverData(todayString); if ((onceOverData[0]) == (onceOverData[1])) { doneButton.setBackgroundColor(-3790808); }else if ((((double) (onceOverData[0])) / ((double) (onceOverData[1]))) >= 0.5) { doneButton.setBackgroundColor(-141259); }else { doneButton.setBackgroundColor(-14983648); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/304/buggy-version/app.src.main.java.com.doctor_andonuts.mylife.CustomArrayAdapter.java", "BodyUseAPI": ["com.doctor_andonuts.mylife.Chain.getDayStatus(java.lang.String)", "com.doctor_andonuts.mylife.Chain.getOnceOverData(java.lang.String)"], "Fixed commit": "fc66e872837c48dafe2e44bb37a369176a752e5b", "Url": "https://api.github.com/repos/Doctor-Andonuts/MyLife", "Date": "2016-02-01T17:14:07Z"},
{"Line": "=>1309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.foyt.fni.rest.illusion.IllusionRestServices.DataOutputFormat.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (outputFormat == null) { return javax.ws.rs.core.Response.status(Status.BAD_REQUEST).entity(\"invalid format\").build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7745/buggy-version/webapp.src.main.java.fi.foyt.fni.rest.illusion.IllusionRestServices.java", "BodyUseAPI": [], "Fixed commit": "e611bc59d35af6e39dc1030b4674ca5a15155cb8", "Url": "https://api.github.com/repos/foyt/fni", "Date": "2015-03-03T04:36:36Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (label != null) labelName = label.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1055/buggy-version/src.main.java.com.redhat.foreman.ForemanSharedNodeCloud.java", "BodyUseAPI": ["hudson.model.Label.toString()"], "Fixed commit": "dc8e5cb1776aa120975053f5c47c15e586ee2531", "Url": "https://api.github.com/repos/pjanouse/node-sharing-plugin", "Date": "2016-09-19T10:51:29Z"},
{"Line": "=>4813", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTenantFlowStarted) { org.wso2.carbon.context.PrivilegedCarbonContext.endTenantFlow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1408/buggy-version/components.apimgt.org.wso2.carbon.apimgt.hostobjects.src.main.java.org.wso2.carbon.apimgt.hostobjects.APIProviderHostObject.java", "BodyUseAPI": [], "Fixed commit": "d8ef8c293b7e6ac7526fe4b0351fcbbaa545df0f", "Url": "https://api.github.com/repos/ruks/carbon-apimgt", "Date": "2016-01-28T12:40:57Z"},
{"Line": "=>3399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equals(tenantDomain))) { org.wso2.carbon.context.PrivilegedCarbonContext.startTenantFlow(); org.wso2.carbon.context.PrivilegedCarbonContext.getThreadLocalCarbonContext().setTenantDomain(tenantDomain, true); isTenantFlowStarted = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1408/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.APIProviderImpl.java", "BodyUseAPI": ["org.wso2.carbon.context.PrivilegedCarbonContext.getThreadLocalCarbonContext().setTenantDomain(java.lang.String,boolean)"], "Fixed commit": "d8ef8c293b7e6ac7526fe4b0351fcbbaa545df0f", "Url": "https://api.github.com/repos/ruks/carbon-apimgt", "Date": "2016-01-28T12:40:57Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (one.lindegaard.MobHunting.MobHunting.getMobHuntingManager().getDamageHistory().containsKey(entity)) return !(one.lindegaard.MobHunting.MobHunting.getMobHuntingManager().getDamageHistory().get(entity).getCrackShotWeaponUsed().isEmpty());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5345/buggy-version/src.one.lindegaard.MobHunting.compatibility.CrackShotCompat.java", "BodyUseAPI": ["one.lindegaard.MobHunting.MobHunting.getMobHuntingManager().getDamageHistory().get(entity).getCrackShotWeaponUsed().isEmpty()", "one.lindegaard.MobHunting.MobHunting.getMobHuntingManager().getDamageHistory().get(entity).getCrackShotWeaponUsed()", "one.lindegaard.MobHunting.MobHunting.getMobHuntingManager().getDamageHistory().get(org.bukkit.entity.Entity)"], "Fixed commit": "b102bb4a598e442850e0ba0f8859302baa524c00", "Url": "https://api.github.com/repos/Rocologo/MobHunting", "Date": "2017-06-11T17:46:36Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.first.wpilibj.smartdashboard.SendableChooser.getSelected()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mode == (org.usfirst.frc.team4525.robot.Robot.autoMode.INIT_ERROR_FIX)) { while (isEnabled()) { double val = 0.5; one.set(val); two.set(val); three.set((-val)); four.set((-val)); } }else if (mode == (org.usfirst.frc.team4525.robot.Robot.autoMode.GET_TOTE)) { tilt.retract(); claw.extend(); }else if (mode == (org.usfirst.frc.team4525.robot.Robot.autoMode.NOTHING)) { claw.extend(); winch.set(org.usfirst.frc.team4525.robot.Robot.Winch.UP.get()); }else if (mode == (org.usfirst.frc.team4525.robot.Robot.autoMode.KICK_THE_ROBOT)) { while (isEnabled()) { driveDistance(75, 0.3, false); driveDistance((-75), (-0.3), false); } }else if (mode == (org.usfirst.frc.team4525.robot.Robot.autoMode.FULL_OUT_CLOSE)) { claw.retract(); tilt.extend(); gyro.reset(); driveDistance(22, 0.35, true); org.usfirst.frc.team4525.robot.ArmMovements boomForward = new org.usfirst.frc.team4525.robot.ArmMovements(boom, org.usfirst.frc.team4525.robot.Robot.Boom.FORWARD.get(), boomBackSwitch, 0.5); java.lang.Thread boomForwardThread = new java.lang.Thread(boomForward); boomForwardThread.start(); org.usfirst.frc.team4525.robot.ArmMovements dropClaw = new org.usfirst.frc.team4525.robot.ArmMovements(winch, org.usfirst.frc.team4525.robot.Robot.Winch.DOWN.get(), 3); java.lang.Thread dropClawThread = new java.lang.Thread(dropClaw); dropClawThread.start(); driveDistanceOrLimit(86, 0.5, robotFrontTouch, false); while (!(boomForward.isReady())); claw.extend(); edu.wpi.first.wpilibj.Timer.delay(0.5); winch.set(org.usfirst.frc.team4525.robot.Robot.Winch.UP.get()); edu.wpi.first.wpilibj.Timer.delay(3); winch.set(org.usfirst.frc.team4525.robot.Robot.Winch.OFF.get()); }else { claw.retract(); tilt.extend(); gyro.reset(); org.usfirst.frc.team4525.robot.ArmMovements boomForward = new org.usfirst.frc.team4525.robot.ArmMovements(boom, org.usfirst.frc.team4525.robot.Robot.Boom.FORWARD.get(), boomBackSwitch, 0.5); java.lang.Thread boomForwardThread = new java.lang.Thread(boomForward); boomForwardThread.start(); driveDistance(50, 0.5, false); org.usfirst.frc.team4525.robot.ArmMovements dropClaw = new org.usfirst.frc.team4525.robot.ArmMovements(winch, org.usfirst.frc.team4525.robot.Robot.Winch.DOWN.get(), 3); java.lang.Thread dropClawThread = new java.lang.Thread(dropClaw); dropClawThread.start(); driveDistanceOrLimit(53, 0.35, robotFrontTouch, true); while (!(boomForward.isReady())); claw.extend(); edu.wpi.first.wpilibj.Timer.delay(0.5); winch.set(org.usfirst.frc.team4525.robot.Robot.Winch.UP.get()); edu.wpi.first.wpilibj.Timer.delay(3); winch.set(org.usfirst.frc.team4525.robot.Robot.Winch.OFF.get()); org.usfirst.frc.team4525.robot.ArmMovements boomBackward = new org.usfirst.frc.team4525.robot.ArmMovements(boom, org.usfirst.frc.team4525.robot.Robot.Boom.BACKWARD.get(), boomFrontSwitch); java.lang.Thread boomBackwardThread = new java.lang.Thread(boomBackward); boomBackwardThread.start(); edu.wpi.first.wpilibj.Timer.delay(0.25); driveDistance((-15), (-0.35), true); driveDistance((-20), (-0.5), false); org.usfirst.frc.team4525.robot.ArmMovements winchDrop = new org.usfirst.frc.team4525.robot.ArmMovements(winch, org.usfirst.frc.team4525.robot.Robot.Winch.DOWN.get(), 3.5); java.lang.Thread winchDropThread = new java.lang.Thread(winchDrop); winchDropThread.start(); driveDistance((-11), 0.4, false); driveDistance((-4), 0.3, false); edu.wpi.first.wpilibj.Timer.delay(1.5); spinRobot((-30), 0.4); edu.wpi.first.wpilibj.Timer.delay(0.5); driveDistance((-2), 0.35, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6887/buggy-version/src.org.usfirst.frc.team4525.robot.Robot.java", "BodyUseAPI": [], "Fixed commit": "9b681bf14aab90155ac21bcc5d8ad57ded74aed1", "Url": "https://api.github.com/repos/RenaissanceRobotics/RecycleRush2015", "Date": "2015-02-16T15:47:27Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (interactive) { configuration = getInteractiveConfiguration(configuration, processor, project, com.photon.phresco.plugins.PhrescoStart.START); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/500/buggy-version/phresco-maven-plugin.src.main.java.com.photon.phresco.plugins.PhrescoStart.java", "BodyUseAPI": [], "Fixed commit": "9e84f65f23073a8933693498cc901ffe8b36b4a8", "Url": "https://api.github.com/repos/photon-infotech/plugins", "Date": "2014-04-17T09:32:15Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Files.readAllLines(java.nio.file.Path,java.nio.charset.Charset)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((lines.size()) == 0) { return new java.lang.String[]{ null, \"\" }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3563/buggy-version/src.main.java.fr.skyost.skydocs.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "5cd5e1ab678e43b2f0da5b4f303784de0569f7cf", "Url": "https://api.github.com/repos/Skyost/SkyDocs", "Date": "2017-07-12T22:25:50Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stringTokenizer.countTokens()) > 1) { fieldName = stringTokenizer.nextToken(); java.lang.String embeddedFieldName = stringTokenizer.nextToken(); javax.persistence.metamodel.Attribute embeddable = entityType.getAttribute(fieldName); javax.persistence.metamodel.EmbeddableType embeddedEntity = ((javax.persistence.metamodel.EmbeddableType) (kunderaMetadata.getApplicationMetadata().getMetaModelBuilder(metadata.getPersistenceUnit()).getEmbeddables().get(((com.impetus.kundera.metadata.model.attributes.AbstractAttribute) (embeddable)).getBindableJavaType()))); javax.persistence.metamodel.Attribute embeddedAttribute = embeddedEntity.getAttribute(embeddedFieldName); builder.append(((com.impetus.kundera.metadata.model.attributes.AbstractAttribute) (embeddedAttribute)).getJPAColumnName()); }else { builder.append(((com.impetus.kundera.metadata.model.attributes.AbstractAttribute) (entityType.getAttribute(fieldName))).getJPAColumnName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5864/buggy-version/src.jpa-engine.core.src.main.java.com.impetus.kundera.metadata.processor.IndexProcessor.java", "BodyUseAPI": ["java.util.StringTokenizer.nextToken()", "java.util.StringTokenizer.nextToken()"], "Fixed commit": "52b0214981001d28cf26cf2e7ef674c1071a1995", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2014-05-19T12:18:23Z"},
{"Line": "=>1168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stringTokenizer.countTokens()) > 1) { fieldName = stringTokenizer.nextToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5864/buggy-version/src.kundera-oracle-nosql.src.main.java.com.impetus.client.oraclenosql.OracleNoSQLClient.java", "BodyUseAPI": ["java.util.StringTokenizer.nextToken()"], "Fixed commit": "52b0214981001d28cf26cf2e7ef674c1071a1995", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2014-05-19T12:18:23Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((token(1).type.isOperator()) || (match(1, org.zoodb.internal.query.QueryParserV4.T_TYPE.DOT))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7378/buggy-version/src.org.zoodb.internal.query.QueryParserV4.java", "BodyUseAPI": [], "Fixed commit": "0009cdcf08777af4efa79a6aba448e46519695f8", "Url": "https://api.github.com/repos/tzaeschke/zoodb", "Date": "2017-12-11T17:29:03Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (expression != null) try { presto.type.IType type = expression.check(writer.getContext()); presto.grammar.INamed actual = writer.getContext().getRegisteredValue(presto.grammar.INamed.class, name); if (actual == null) writer.getContext().registerValue(new presto.runtime.Variable(name, type)); } catch (presto.error.SyntaxError e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8512/buggy-version/Java-Core.src.main.java.presto.grammar.VariableInstance.java", "BodyUseAPI": ["presto.expression.IExpression.check(writer.getContext())"], "Fixed commit": "614dfceda23ba109c0c0a874719060c08b831d78", "Url": "https://api.github.com/repos/prompto/prompto-java", "Date": "2015-04-28T10:55:22Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.matrix.MatrixProject.getAxes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(org.springframework.util.CollectionUtils.isEmpty(axes))) { java.util.Collections.sort(getAxes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3302/buggy-version/hudson-core.src.main.java.hudson.matrix.MatrixProject.java", "BodyUseAPI": [], "Fixed commit": "88debbc89d895f221542edfdfa2160d01f8f7c92", "Url": "https://api.github.com/repos/antkozak/hudson", "Date": "2011-10-13T08:29:31Z"},
{"Line": "=>551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.matrix.MatrixProject.getAxes()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.springframework.util.CollectionUtils.isEmpty(axes))) { for (hudson.matrix.Combination c : axes.list()) { java.lang.String combinationFilter = getCombinationFilter(); if (c.evalGroovyExpression(axes, combinationFilter)) { hudson.matrix.MatrixProject.LOGGER.fine((\"Adding configuration: \" + c)); hudson.matrix.MatrixConfiguration config = configurations.get(c); if (config == null) { config = new hudson.matrix.MatrixConfiguration(this, c); config.save(); configurations.put(config.getCombination(), config); } active.add(config); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3302/buggy-version/hudson-core.src.main.java.hudson.matrix.MatrixProject.java", "BodyUseAPI": ["hudson.matrix.AxisList.list()", "hudson.matrix.Combination.evalGroovyExpression(hudson.matrix.AxisList,java.lang.String)"], "Fixed commit": "88debbc89d895f221542edfdfa2160d01f8f7c92", "Url": "https://api.github.com/repos/antkozak/hudson", "Date": "2011-10-13T08:29:31Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((status == (android.location.LocationProvider.OUT_OF_SERVICE)) || (status == (android.location.LocationProvider.TEMPORARILY_UNAVAILABLE))) { android.widget.Toast.makeText(this, \"Location provider is unavailable\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5686/buggy-version/GoogleMaps.app.src.main.java.first.alexander.com.googlemaps.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "9566f19fc77cfdb6616adcd559cb057af954ffa9", "Url": "https://api.github.com/repos/Foobar-Consulting-Ltd/Car2Park-Android-Google-Map", "Date": "2017-10-22T00:30:26Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String[]>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (goal[2].equals(\"false\")) { image.setImageResource(R.drawable.nicht_freigeschaltet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5461/buggy-version/app.src.main.java.de.daschubbm.alkchievements.AlkchievementsAlkdapder.java", "BodyUseAPI": [], "Fixed commit": "20b55f039ff2195910eee47e2762eb156cb48029", "Url": "https://api.github.com/repos/mtronicsDev/Alkchievements", "Date": "2016-10-03T10:19:59Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.lisoft.lsml.model.metrics.MaxSustainedDPS.getEngine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (null != engine) { heatleft -= engine.getHeat(modifiers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1305/buggy-version/src.org.lisoft.lsml.model.metrics.MaxSustainedDPS.java", "BodyUseAPI": ["org.lisoft.lsml.model.item.Engine.getHeat(java.util.Collection<org.lisoft.lsml.model.modifiers.Modifier>)"], "Fixed commit": "b23a5d9c2676b73ba7463a12cc0582650e079bc1", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2015-10-21T15:27:08Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.teotigraphix.caustk.node.RackNode.saveSong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(file.getParentFile().equals(file.getParentFile()))) && (file.getName().equals(song.getName()))) { org.apache.commons.io.FileUtils.copyFileToDirectory(song, file.getParentFile()); song.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2735/buggy-version/Caustk.src.com.teotigraphix.caustk.node.RackNode.java", "BodyUseAPI": ["java.io.File.delete()", "java.io.File.getParentFile()", "org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File,java.io.File)"], "Fixed commit": "2484f096e7eac52e0d19f95e33fc55960c2617c8", "Url": "https://api.github.com/repos/teotigraphix/CausticSDK", "Date": "2014-02-24T19:52:00Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((operation != null) && (PolicyOperation.POLICY_OPERATION_CODE.equals(operation.getCode()))) { authorizedDeviceList = deviceIds; }else { authorizedDeviceList = org.wso2.carbon.device.mgt.core.internal.DeviceManagementDataHolder.getInstance().getDeviceAccessAuthorizationService().isUserAuthorized(deviceIds).getAuthorizedDevices(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/71/buggy-version/components.device-mgt.org.wso2.carbon.device.mgt.core.src.main.java.org.wso2.carbon.device.mgt.core.operation.mgt.OperationManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "a3e20367f269376d5867612a00d30d5ccdcd1965", "Url": "https://api.github.com/repos/wso2/carbon-device-mgt", "Date": "2015-11-16T14:21:59Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shopSelectionList.getSelectionModel().getSelectedItem()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8211/buggy-version/1.SemesterProject.src.UI.GUI.ShopkeeperScreenController.java", "BodyUseAPI": [], "Fixed commit": "5755e0e5584c24e992d46ca0ae586786ce265dbd", "Url": "https://api.github.com/repos/SduSeStGoupe25/1.Semester_project", "Date": "2017-12-11T20:12:25Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerInventoryList.getSelectionModel().getSelectedItem()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8211/buggy-version/1.SemesterProject.src.UI.GUI.ShopkeeperScreenController.java", "BodyUseAPI": [], "Fixed commit": "5755e0e5584c24e992d46ca0ae586786ce265dbd", "Url": "https://api.github.com/repos/SduSeStGoupe25/1.Semester_project", "Date": "2017-12-11T20:12:25Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (geospace.Main.ARG_ALWAYSRENDER.equalsIgnoreCase(arg)) { container.setAlwaysRender(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/9147/buggy-version/src.geospace.Main.java", "BodyUseAPI": [], "Fixed commit": "2ae86ebcaed2bd57a6a9ea86873d43bf5f1253ec", "Url": "https://api.github.com/repos/GeoJosh/geospace", "Date": "2011-10-11T16:16:45Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((size == null) || (!(size > 0))) { size = property.getDiskUsageOfBuild(java.lang.String.valueOf(build.getNumber())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/902/buggy-version/src.main.java.hudson.plugins.disk_usage.BuildDiskUsageAction.java", "BodyUseAPI": [], "Fixed commit": "27b3a67717cbdb19354a64d2817d1c1cfe01d064", "Url": "https://api.github.com/repos/jenkinsci/disk-usage-plugin", "Date": "2017-10-25T10:21:56Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ngusta.cupassist.domain.Clazz.parse(clazzElem.text())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (clazz != (com.ngusta.cupassist.domain.Clazz.UNKNOWN)) { if (maxNumberOfTeamsElem.text().isEmpty()) { if (!(maxNumberOfTeamsMap.containsKey(clazz))) { maxNumberOfTeamsMap.put(clazz, 1000); } }else { int maxNumberOfTeams = java.lang.Integer.parseInt(maxNumberOfTeamsElem.text()); maxNumberOfTeamsMap.put(clazz, maxNumberOfTeams); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8730/buggy-version/app.src.main.java.com.ngusta.cupassist.parser.TournamentParser.java", "BodyUseAPI": ["java.util.Map<com.ngusta.cupassist.domain.Clazz, java.lang.Integer>.containsKey(com.ngusta.cupassist.domain.Clazz)", "java.util.Map<com.ngusta.cupassist.domain.Clazz, java.lang.Integer>.put(com.ngusta.cupassist.domain.Clazz,int)", "java.util.Map<com.ngusta.cupassist.domain.Clazz, java.lang.Integer>.put(com.ngusta.cupassist.domain.Clazz,int)"], "Fixed commit": "c3e7f59559d72d2c877ca5d432d1c47a68815cab", "Url": "https://api.github.com/repos/ngusta/Beachvolley", "Date": "2017-08-10T20:16:36Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.data.DataAccessor.getPratilipi(java.lang.Long)", "com.pratilipi.data.BlobAccessor.getBlob(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((blobEntry == null) && ((((pratilipi.getId()) == 5385510763626496L) || ((pratilipi.getId()) == 5768181499035648L)) || ((pratilipi.getId()) == 5486454792781824L))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6136/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDocUtil.java", "BodyUseAPI": [], "Fixed commit": "bcab92fade754ad5c5f441480af9f2ca17966b72", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-10-20T09:52:14Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.data.DataAccessor.getPratilipi(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((pratilipi.getId()) == 5639838220943360L) && (i <= 5)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6136/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDocUtil.java", "BodyUseAPI": [], "Fixed commit": "bcab92fade754ad5c5f441480af9f2ca17966b72", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-10-20T09:52:14Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (query == null) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2243/buggy-version/src.main.java.ylc.appier.challenge.HttpWorker.java", "BodyUseAPI": [], "Fixed commit": "2ee249e3ee65ccb5805cbfdbb5df6eb34e624680", "Url": "https://api.github.com/repos/ylc1218/Challenge-Ubike", "Date": "2017-04-12T05:35:26Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxLines) > 0) { while ((tableModel.getRowCount()) > (maxLines)) { removeRow(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4305/buggy-version/yamcs-core.src.main.java.org.yamcs.ui.packetviewer.PacketsTable.java", "BodyUseAPI": [], "Fixed commit": "b2296f08571c9244ba7689089e268cc0d919a3ed", "Url": "https://api.github.com/repos/yamcs/yamcs", "Date": "2017-03-16T03:51:14Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.heigvd.amt.moussaraser.services.dao.EndUserDAOLocal.findById(eventDTO.getToUserId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (endUser == null) { return ch.heigvd.amt.moussaraser.rest.config.response.SendEvent.errorUserIdInvalid(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5107/buggy-version/projet.MoussaRaser.src.main.java.ch.heigvd.amt.moussaraser.rest.resources.EventsRessource.java", "BodyUseAPI": [], "Fixed commit": "6b02483a1a9bfb0522595451f1f1750b78d2acff", "Url": "https://api.github.com/repos/Kjnokeer/Teaching-HEIGVD-AMT-2015-Project", "Date": "2016-01-17T14:41:29Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.LOLLIPOP)) { final android.graphics.drawable.Drawable d = view.getBackground(); d.setColorFilter(color, PorterDuff.Mode.MULTIPLY); }else { view.setBackgroundColor(color); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/487/buggy-version/material-sheet-fab.src.main.java.com.gordonwong.materialsheetfab.animations.MaterialSheetAnimation.java", "BodyUseAPI": [], "Fixed commit": "6fafd82d1a86dfd5eee1e9a4dc50bd3185e57b13", "Url": "https://api.github.com/repos/prabel/material-sheet-fab", "Date": "2015-08-10T10:19:35Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((quiz.getGroepen()) != null) { for (be.xios.project.business.Groep g : quiz.getGroepen()) { gdb.setGroep(g); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/383/buggy-version/wp4wp5.src.be.xios.project.DB.QuizDB.java", "BodyUseAPI": ["be.xios.project.business.Quiz.getGroepen()"], "Fixed commit": "2fcfe35862366bea7a9da0066f4bea0234826301", "Url": "https://api.github.com/repos/hfsdo/project2ti", "Date": "2013-02-23T15:31:03Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((quiz.getSpelers()) != null) { for (be.xios.project.business.Speler s : quiz.getSpelers()) { sdb.setSpeler(s, gdb.getLastGroepID(), getLastQuizID()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/383/buggy-version/wp4wp5.src.be.xios.project.DB.QuizDB.java", "BodyUseAPI": ["be.xios.project.business.Quiz.getSpelers()"], "Fixed commit": "2fcfe35862366bea7a9da0066f4bea0234826301", "Url": "https://api.github.com/repos/hfsdo/project2ti", "Date": "2013-02-23T15:31:03Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((invoiceProduct.getId()) == null) { cloneInvoiceProduct.setId(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1593/buggy-version/src.main.java.com.boutique.util.CloneUtil.java", "BodyUseAPI": [], "Fixed commit": "6cf6c49867f175deb7fd43b09485687308d13ded", "Url": "https://api.github.com/repos/mukeshm4m/boutique", "Date": "2017-03-26T18:03:15Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (caseSensitive) { return import2.compareTo(import1); }else { return import2.compareToIgnoreCase(import1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8209/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck.java", "BodyUseAPI": [], "Fixed commit": "ca01219a3e3e09a9dfbf6bb1e4a285a2d36babda", "Url": "https://api.github.com/repos/linelect/checkstyle", "Date": "2016-09-18T15:49:55Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ofbiz.entity.Delegator.findByAnd(java.lang.String,org.ofbiz.base.util.UtilMisc.toMap(\"idValue\", goodIdentification.get(\"idValue\"), \"goodIdentificationTypeId\", \"EAN\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.ofbiz.base.util.UtilValidate.isNotEmpty(EAN)) { if ((EAN.size()) > 1) { request.setAttribute(\"_ERROR_MESSAGE_\", ((goodIdentification.get(\"idValue\")) + \"\u88ab\u53d1\u73b0\u4e0e\u591a\u4e2a\u5546\u54c1\u5173\u8054\u8bf7\u786e\u8ba4!\")); return \"error\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2296/buggy-version/hot-deploy.manufact.src.com.zuczug.product.ManufactService.java", "BodyUseAPI": ["java.util.List<org.ofbiz.entity.GenericValue>.size()"], "Fixed commit": "3596e942494e3957e6b6f56618ae11a17eb91337", "Url": "https://api.github.com/repos/zuczug/bluemountain", "Date": "2016-07-27T06:52:17Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ikasan.spec.exclusion.ExclusionManagementService<org.ikasan.exclusion.model.ExclusionEvent, java.lang.String>.find(this.categorisedErrorOccurrence.getErrorOccurrence().getUri())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (exclusionEvent != null) { originalMessageEditor.setValue(new java.lang.String(exclusionEvent.getEvent())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4552/buggy-version/ikasaneip.dashboard.war.src.main.java.org.ikasan.dashboard.ui.topology.panel.CategorisedErrorOccurrenceViewPanel.java", "BodyUseAPI": ["org.vaadin.aceeditor.AceEditor.setValue(java.lang.String)", "org.ikasan.exclusion.model.ExclusionEvent.getEvent()"], "Fixed commit": "2449972b4383dde52cca90a8314255c1419391d8", "Url": "https://api.github.com/repos/ikasanEIP/ikasan", "Date": "2016-03-28T21:48:03Z"},
{"Line": "=>1497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.jet.lang.cfg.ResolvedCall<?>.getArgumentMapping(org.jetbrains.jet.lang.cfg.ValueArgument)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (argumentMapping instanceof org.jetbrains.jet.lang.cfg.ArgumentMatch) { parameterValues = generateValueArgument(argument, ((org.jetbrains.jet.lang.cfg.ArgumentMatch) (argumentMapping)).getValueParameter(), parameterValues); }else if (argumentExpression != null) { generateInstructions(argumentExpression); java.util.List<org.jetbrains.jet.lang.cfg.PseudoValue> values = com.intellij.util.containers.ContainerUtil.createMaybeSingletonList(builder.getBoundValue(argumentExpression)); builder.magic(argumentExpression, null, values, defaultTypeMap(values), MagicKind.VALUE_CONSUMER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8665/buggy-version/compiler.frontend.src.org.jetbrains.jet.lang.cfg.JetControlFlowProcessor.java", "BodyUseAPI": [], "Fixed commit": "545113e266c813b0f35d4d485ac5800b596cd1c2", "Url": "https://api.github.com/repos/JetBrains/kotlin", "Date": "2014-07-29T08:41:42Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.cs.wpisuitetcw.modules.planningpoker.entitymanagers.PlanningPokerVoteEntityManager.getAll(edu.wpi.cs.wpisuitetng.Session)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((allSessions.length) == 0) { newID = 1; }else { edu.wpi.cs.wpisuitetcw.modules.planningpoker.models.PlanningPokerVote mostRecent = allSessions[((allSessions.length) - 1)]; newID = (mostRecent.getID()) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1589/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetcw.modules.planningpoker.entitymanagers.PlanningPokerVoteEntityManager.java", "BodyUseAPI": [], "Fixed commit": "66c521e5e4851e5ff0ca5d5c5f4a027083b1d722", "Url": "https://api.github.com/repos/Team-Combat-Wombat/wpi-suite-tcw", "Date": "2014-04-02T01:43:48Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.trie4j.util.Pair<java.lang.Integer, java.lang.String>.getFirst()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (nid > 0) { b.append(labels[nid]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1556/buggy-version/trie4j.src.org.trie4j.louds.TailLOUDSTrie.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)"], "Fixed commit": "8287e6054a4b5a6eba57cd87a405eeec0435fbae", "Url": "https://api.github.com/repos/takawitter/trie4j", "Date": "2014-07-02T05:38:16Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.getCommandSenderName().equals(getOwnerName())) { if (player.isSneaking()) { if ((this.followingPlayerName) == null) { this.followingPlayerName = player.getCommandSenderName(); }else if (this.followingPlayerName.equals(player.getCommandSenderName())) { this.followingPlayerName = null; }else { this.followingPlayerName = player.getCommandSenderName(); } }else { openGUI(player); } }else { if (((!(player.worldObj.isRemote)) && ((getFoodRemaining()) > 0)) && ((trader) == null)) { trader = player; openAltGui(player); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5402/buggy-version/src.main.java.net.shadowmage.ancientwarfare.npc.entity.NpcTrader.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.getCommandSenderName()", "net.shadowmage.ancientwarfare.npc.entity.NpcTrader.openGUI(net.minecraft.entity.player.EntityPlayer)", "net.shadowmage.ancientwarfare.npc.entity.NpcTrader.openAltGui(net.minecraft.entity.player.EntityPlayer)", "net.minecraft.entity.player.EntityPlayer.getCommandSenderName()", "net.minecraft.entity.player.EntityPlayer.getCommandSenderName()", "net.minecraft.entity.player.EntityPlayer.isSneaking()", "this.followingPlayerName.equals(player.getCommandSenderName())"], "Fixed commit": "73e7dde148c0fe7b769b5005ada4e767164ee3f9", "Url": "https://api.github.com/repos/shadowmage45/AncientWarfare2", "Date": "2014-09-20T18:48:35Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (baton) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5402/buggy-version/src.main.java.net.shadowmage.ancientwarfare.npc.entity.NpcTrader.java", "BodyUseAPI": [], "Fixed commit": "73e7dde148c0fe7b769b5005ada4e767164ee3f9", "Url": "https://api.github.com/repos/shadowmage45/AncientWarfare2", "Date": "2014-09-20T18:48:35Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.RuntimeException.getCause()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cause == null) cause = exception;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4781/buggy-version/services.src.main.java.org.jboss.windup.web.services.rest.UnhandledExceptionHandler.java", "BodyUseAPI": [], "Fixed commit": "132f0e28a5a7db623d4c5bb4a33b417cb3c6a5c9", "Url": "https://api.github.com/repos/klinki/windup-web", "Date": "2017-02-14T23:47:24Z"},
{"Line": "=>1483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p == (com.github.nmorel.gwtjackson.client.stream.impl.NonBufferedJsonReader.PEEKED_BUFFERED)) { writer.value(peekedString); }else if (p == (com.github.nmorel.gwtjackson.client.stream.impl.NonBufferedJsonReader.PEEKED_NULL)) { writer.nullValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1566/buggy-version/gwt-jackson.src.main.java.com.github.nmorel.gwtjackson.client.stream.impl.NonBufferedJsonReader.java", "BodyUseAPI": [], "Fixed commit": "33f1798ca623410fdf8584e85bae67db2fac30f1", "Url": "https://api.github.com/repos/nmorel/gwt-jackson", "Date": "2017-03-09T13:39:32Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.catrobat.catroid.ProjectManager.getInstance().getCurrentProject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((currentProject != null) && (!(org.catrobat.catroid.utils.DownloadUtil.getInstance().isProgramNameInDownloadQueueIgnoreCase(currentProject.getName())))) { org.catrobat.catroid.ProjectManager.getInstance().saveProject(); org.catrobat.catroid.utils.Utils.saveToPreferences(this, Constants.PREF_PROJECTNAME_KEY, currentProject.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8797/buggy-version/catroid.src.org.catrobat.catroid.ui.MainMenuActivity.java", "BodyUseAPI": ["org.catrobat.catroid.utils.Utils.saveToPreferences(org.catrobat.catroid.ui.MainMenuActivity,Constants.PREF_PROJECTNAME_KEY,currentProject.getName())", "org.catrobat.catroid.content.Project.getName()"], "Fixed commit": "1969118fb629461dfdcebc6171f9d52b054f2c3c", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2014-03-20T17:19:50Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bestGuessLICAForNames) != null) { if ((matchedTaxon.isPreferredTaxChildOf(bestGuessLICAForNames)) == false) { int d = taxonomy.getInternodalDistThroughMRCA(hit, bestGuessLICAForNames.getNode(), RelType.PREFTAXCHILDOF); scoreModifier *= 1 / (java.lang.Math.log(d)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8169/buggy-version/src.main.java.org.opentree.tnrs.queries.MultiNameContextQuery.java", "BodyUseAPI": [], "Fixed commit": "468284542f6fe13ef98ad90535166d64b2a6fe09", "Url": "https://api.github.com/repos/OpenTreeOfLife/taxomachine", "Date": "2014-02-27T19:30:50Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((synonyms.size()) > 0) { for (org.neo4j.graphdb.Node n : match.getSynonymNodes()) { synonyms.add(((java.lang.String) (n.getProperty(\"name\")))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7372/buggy-version/src.main.java.org.opentree.taxonomy.plugins.TNRS.java", "BodyUseAPI": ["java.util.HashSet<java.lang.String>.add(((java.lang.String) (n.getProperty(\"name\"))))"], "Fixed commit": "c6730227f1b12958b7754c979e6c83c39c89b616", "Url": "https://api.github.com/repos/OpenTreeOfLife/taxomachine", "Date": "2014-01-25T03:30:00Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showerMin < 0) { showerMin = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8774/buggy-version/app.src.main.java.com.cookie_computing.wastenomore.ActivityWaterCheckIn.java", "BodyUseAPI": [], "Fixed commit": "0b276eb0599fd0dc0ea23abe4977bf6f31f68211", "Url": "https://api.github.com/repos/sennera/waste-no-more", "Date": "2015-04-08T15:06:10Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (baths < 0) { baths = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8774/buggy-version/app.src.main.java.com.cookie_computing.wastenomore.ActivityWaterCheckIn.java", "BodyUseAPI": [], "Fixed commit": "0b276eb0599fd0dc0ea23abe4977bf6f31f68211", "Url": "https://api.github.com/repos/sennera/waste-no-more", "Date": "2015-04-08T15:06:10Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loads < 0) { loads = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8774/buggy-version/app.src.main.java.com.cookie_computing.wastenomore.ActivityWaterCheckIn.java", "BodyUseAPI": [], "Fixed commit": "0b276eb0599fd0dc0ea23abe4977bf6f31f68211", "Url": "https://api.github.com/repos/sennera/waste-no-more", "Date": "2015-04-08T15:06:10Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (largeBags < 0) { largeBags = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8774/buggy-version/app.src.main.java.com.cookie_computing.wastenomore.ActivityTrashCheckIn.java", "BodyUseAPI": [], "Fixed commit": "0b276eb0599fd0dc0ea23abe4977bf6f31f68211", "Url": "https://api.github.com/repos/sennera/waste-no-more", "Date": "2015-04-08T15:06:10Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (smallBags < 0) { smallBags = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8774/buggy-version/app.src.main.java.com.cookie_computing.wastenomore.ActivityTrashCheckIn.java", "BodyUseAPI": [], "Fixed commit": "0b276eb0599fd0dc0ea23abe4977bf6f31f68211", "Url": "https://api.github.com/repos/sennera/waste-no-more", "Date": "2015-04-08T15:06:10Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (medBags < 0) { medBags = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8774/buggy-version/app.src.main.java.com.cookie_computing.wastenomore.ActivityTrashCheckIn.java", "BodyUseAPI": [], "Fixed commit": "0b276eb0599fd0dc0ea23abe4977bf6f31f68211", "Url": "https://api.github.com/repos/sennera/waste-no-more", "Date": "2015-04-08T15:06:10Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((readCache) != null) readCache.changeMaximumAmountOfMemory(calculateReadCacheMaxMemory(cacheSize));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6226/buggy-version/core.src.main.java.com.orientechnologies.orient.core.engine.local.OEngineLocalPaginated.java", "BodyUseAPI": [], "Fixed commit": "ea8a96e8651e0d601b2a62220e6393aa96fc1de2", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-01-18T12:49:47Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ema.isSampleRequired()) != null) { sampleRequired |= ema.isSampleRequired(); if (ema.isSampleRequired()) { if ((listBuilder.length()) > 0) listBuilder.append(\",\"); listBuilder.append(ema.getAttributeName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3423/buggy-version/main.src.java.org.jcvi.ometa.validation.ModelValidator.java", "BodyUseAPI": ["java.lang.StringBuilder.append(ema.getAttributeName())", "org.jcvi.ometa.validation.EventMetaAttribute.getAttributeName()", "org.jcvi.ometa.validation.EventMetaAttribute.isSampleRequired()", "org.jcvi.ometa.validation.EventMetaAttribute.isSampleRequired()"], "Fixed commit": "82c9406921d2ccbb7a00f47e33f554d82ecc213c", "Url": "https://api.github.com/repos/movence/OMETA", "Date": "2017-03-10T21:42:22Z"},
{"Line": "=>853", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.id.ORID.getRecord()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (doc != null) underlying.delete(doc);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3978/buggy-version/object.src.main.java.com.orientechnologies.orient.object.db.OObjectDatabaseTx.java", "BodyUseAPI": ["com.orientechnologies.orient.object.db.OObjectDatabaseTx.delete(com.orientechnologies.orient.core.record.impl.ODocument)"], "Fixed commit": "c15a0fbd884df2bfdf1e1a9845f2277f108e3294", "Url": "https://api.github.com/repos/sonatype/orientdb", "Date": "2016-02-15T06:37:22Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(activateFaucet())) active = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4458/buggy-version/src.main.java.tconstruct.smeltery.logic.FaucetLogic.java", "BodyUseAPI": [], "Fixed commit": "6f8446221557e56524d8141ab7c561136dd306e6", "Url": "https://api.github.com/repos/SlimeKnights/TinkersConstruct", "Date": "2014-08-06T13:19:43Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(rawResult.equals(\"\\\"\\\"\"))) { inDoc = json.parse(result.getDataAsStream(), topMessage); }else { inDoc = com.dexels.navajo.document.NavajoFactory.getInstance().createNavajo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5175/buggy-version/server.com.dexels.navajo.adapters.src.com.dexels.navajo.adapter.RESTAdapter.java", "BodyUseAPI": [], "Fixed commit": "b9341e4691227c0274045c31e7d51989611c0e4a", "Url": "https://api.github.com/repos/Dexels/navajo", "Date": "2015-07-23T11:47:43Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node.childrenCount()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/873/buggy-version/src.org.jgll.traversal.SPPFVisitorUtil.java", "BodyUseAPI": [], "Fixed commit": "b936ca640ea449eabc85e2d71b23c78b24032b9d", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2013-09-16T20:34:35Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (users.contains(user)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3389/buggy-version/src.codeu.chat.server.LocalFile.java", "BodyUseAPI": [], "Fixed commit": "7a29d5894f4f185054dd7ebea73566a96b570abe", "Url": "https://api.github.com/repos/vgomezASC/CodeU-Summer-2017", "Date": "2017-06-22T10:29:51Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (messages.contains(message)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3389/buggy-version/src.codeu.chat.server.LocalFile.java", "BodyUseAPI": [], "Fixed commit": "7a29d5894f4f185054dd7ebea73566a96b570abe", "Url": "https://api.github.com/repos/vgomezASC/CodeU-Summer-2017", "Date": "2017-06-22T10:29:51Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (conversationHeaders.contains(header)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3389/buggy-version/src.codeu.chat.server.LocalFile.java", "BodyUseAPI": [], "Fixed commit": "7a29d5894f4f185054dd7ebea73566a96b570abe", "Url": "https://api.github.com/repos/vgomezASC/CodeU-Summer-2017", "Date": "2017-06-22T10:29:51Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((end.getMonthValue()) == 1) && ((end.getDayOfMonth()) == 1)) { endDate = end.withYear(((end.getYear()) - 1)).withMonth(12).withDayOfMonth(31).withHour(23).withMinute(59); currentStartDate = start; currentEndDate = end.withYear(((end.getYear()) - 1)).withMonth(12).withDayOfMonth(31).withHour(23).withMinute(59); }else { endDate = end; currentStartDate = start; currentEndDate = end; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8428/buggy-version/src.ui.timelineVisuals.VisualTimeline.java", "BodyUseAPI": ["java.time.LocalDateTime.getYear()", "java.time.LocalDateTime.withDayOfMonth(int)", "java.time.LocalDateTime.withMonth(int)", "java.time.LocalDateTime.getYear()", "java.time.LocalDateTime.withHour(int)", "java.time.LocalDateTime.withMinute(int)", "java.time.LocalDateTime.withYear(int)", "java.time.LocalDateTime.withMinute(int)", "java.time.LocalDateTime.withDayOfMonth(int)", "java.time.LocalDateTime.withMonth(int)", "java.time.LocalDateTime.withYear(int)", "java.time.LocalDateTime.withHour(int)"], "Fixed commit": "5bb98b65d40cf91e0e54acc179e22959c1be8fd4", "Url": "https://api.github.com/repos/Group7-1DV508/1DV508-group7", "Date": "2017-05-16T08:52:29Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newProjectDir.mkdir()) { pm.setDirectory(newProjectDir); return pm; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8741/buggy-version/app.src.main.java.dataloading.XmlDataManager.java", "BodyUseAPI": ["models.ProjectModel.setDirectory(java.io.File)"], "Fixed commit": "68ce6d81bf289d2bf646a587d3e24e6da436552e", "Url": "https://api.github.com/repos/newcat/Showroom2", "Date": "2016-11-21T22:11:54Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fields.length) == 6) { msg = new de.dmarcini.submatix.android4.comm.BtServiceMessage(de.dmarcini.submatix.android4.utils.ProjectConst.MESSAGE_INDIVID_READ, new java.lang.String[]{ fields[1], fields[2], fields[3], fields[4], fields[5] }); sendMessageToApp(msg); if (de.dmarcini.submatix.android4.BuildConfig.DEBUG) android.util.Log.d(TAGREADER, \"Device individual settings recived!\"); }else { if (de.dmarcini.submatix.android4.BuildConfig.DEBUG) android.util.Log.d(TAGREADER, \"no individual license...!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2778/buggy-version/src.de.dmarcini.submatix.android4.comm.BlueThoothComService.java", "BodyUseAPI": [], "Fixed commit": "5ee5319c3cdc48c717fc7702745844856dd08a37", "Url": "https://api.github.com/repos/dmarc0001/submatixBTAndroid4", "Date": "2013-07-15T14:58:27Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getSource()) == (this)) { server.removePostHandler(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4760/buggy-version/core.src.main.java.edu.wpi.grip.core.sources.HttpSource.java", "BodyUseAPI": [], "Fixed commit": "45f5edc0e67cbcc83f6e6b339986126714f1ba88", "Url": "https://api.github.com/repos/SamCarlberg/GRIP", "Date": "2016-03-24T15:56:49Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (score == (-1)) return; else if ((this.getScore(idLvl, idConfig)) == (-1)) this.scoreboard.add(new int[]{ idLvl, idConfig, score }); else for (int[] t : this.scoreboard) if ((((t[0]) == idLvl) && ((t[1]) == idConfig)) && ((t[2]) > score)) this.scoreboard.set(scoreboard.indexOf(t), new int[]{ idLvl, idConfig, score });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5697/buggy-version/Player.java", "BodyUseAPI": ["java.util.ArrayList<int[]>.add(int[])", "java.util.ArrayList<int[]>.set(int,int[])"], "Fixed commit": "659c4712f633f77269cd953610968e7617d7d65d", "Url": "https://api.github.com/repos/xavierleblond/rushHour", "Date": "2014-02-24T14:44:34Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.emory.mathcs.nlp.emorynlp.ner.features.NERFeatureTemplate.getNode(edu.emory.mathcs.nlp.emorynlp.component.feature.FeatureItem<?>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((state.getEntityVector(node)) != null) { return state.getEntityVector(node).toString(); }else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6302/buggy-version/src.main.java.edu.emory.mathcs.nlp.emorynlp.ner.features.NERFeatureTemplate.java", "BodyUseAPI": ["edu.emory.mathcs.nlp.emorynlp.ner.features.NERFeatureTemplate.getEntityVector(N)", "state.getEntityVector(node).toString()"], "Fixed commit": "b8f3c3b2cccaef8eb3b1236d3be0282af65d5af9", "Url": "https://api.github.com/repos/meera1hahn/emorynlp", "Date": "2015-11-10T02:43:53Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(userDAO.compare(ircServer.getSelf(), nick))) { se.alkohest.irkksome.model.entity.IrcChannel channel = serverDAO.getChannel(ircServer, channelName); se.alkohest.irkksome.model.entity.IrcUser user = serverDAO.getUser(ircServer, nick); channelDAO.removeUser(channel, user); listener.userLeftChannel(channel, user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3273/buggy-version/app.src.main.java.se.alkohest.irkksome.model.api.ServerImpl.java", "BodyUseAPI": ["se.alkohest.irkksome.model.api.local.IrcServerDAOLocal.getUser(se.alkohest.irkksome.model.entity.IrcServer,java.lang.String)", "se.alkohest.irkksome.model.api.local.IrcServerDAOLocal.getChannel(se.alkohest.irkksome.model.entity.IrcServer,java.lang.String)"], "Fixed commit": "948619c5fca524a21f812291ec50b10325e4228c", "Url": "https://api.github.com/repos/ircSEX/irkksome", "Date": "2014-07-21T10:40:18Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (entityObject != null) { com.impetus.kundera.graph.Node childNode = this.generator.generate(entityObject, pd, pc, null); if (childNode != null) { if ((org.apache.commons.lang.StringUtils.isEmpty(relation.getMappedBy())) && ((relation.getProperty().getAnnotation(javax.persistence.MapKeyJoinColumn.class)) != null)) { com.impetus.kundera.graph.NodeLink nodeLink = new com.impetus.kundera.graph.NodeLink(source.getNodeId(), childNode.getNodeId()); this.generator.setLink(source, relation, childNode, nodeLink); nodeLink.addLinkProperty(LinkProperty.LINK_VALUE, relObject); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7988/buggy-version/src.jpa-engine.core.src.main.java.com.impetus.kundera.graph.GraphBuilder.java", "BodyUseAPI": ["com.impetus.kundera.graph.GraphGenerator.generate(java.lang.Object,com.impetus.kundera.persistence.PersistenceDelegator,com.impetus.kundera.persistence.context.PersistenceCache,<nulltype>)"], "Fixed commit": "afb215c822ce8e199986f24fe6d68400a39e81a5", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2014-01-31T16:02:20Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entity instanceof net.minecraft.entity.EntityLiving) { return java.util.Optional.of((!(((net.minecraft.world.WorldServer) (entity.worldObj)).getEntityTracker().trackedEntityHashTable.containsItem(entity.getEntityId())))); }else { return java.util.Optional.of(entity.isInvisible()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8668/buggy-version/src.main.java.org.spongepowered.common.data.processor.dual.entity.InvisibilityDataProcessor.java", "BodyUseAPI": ["((net.minecraft.world.WorldServer) (entity.worldObj)).getEntityTracker().trackedEntityHashTable.containsItem(entity.getEntityId())", "((net.minecraft.world.WorldServer) (entity.worldObj)).getEntityTracker()", "net.minecraft.entity.Entity.isInvisible()", "java.util.Optional.of((!(((net.minecraft.world.WorldServer) (entity.worldObj)).getEntityTracker().trackedEntityHashTable.containsItem(entity.getEntityId()))))", "net.minecraft.entity.Entity.getEntityId()", "java.util.Optional.of(entity.isInvisible())"], "Fixed commit": "5c35e1a57cf94ffe5f86e395247ce58dc911f564", "Url": "https://api.github.com/repos/hsyyid/SpongeCommon", "Date": "2015-12-29T21:12:32Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entity instanceof net.minecraft.entity.EntityLiving) { if (value) { ((net.minecraft.world.WorldServer) (entity.worldObj)).getEntityTracker().untrackEntity(entity); }else { ((net.minecraft.world.WorldServer) (entity.worldObj)).getEntityTracker().trackEntity(entity); } ((net.minecraft.world.WorldServer) (entity.worldObj)).getEntityTracker().updateTrackedEntities(); }else { entity.setInvisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8668/buggy-version/src.main.java.org.spongepowered.common.data.processor.dual.entity.InvisibilityDataProcessor.java", "BodyUseAPI": ["((net.minecraft.world.WorldServer) (entity.worldObj)).getEntityTracker()", "((net.minecraft.world.WorldServer) (entity.worldObj)).getEntityTracker()", "((net.minecraft.world.WorldServer) (entity.worldObj)).getEntityTracker()", "((net.minecraft.world.WorldServer) (entity.worldObj)).getEntityTracker().updateTrackedEntities()", "((net.minecraft.world.WorldServer) (entity.worldObj)).getEntityTracker().untrackEntity(net.minecraft.entity.Entity)", "((net.minecraft.world.WorldServer) (entity.worldObj)).getEntityTracker().trackEntity(net.minecraft.entity.Entity)", "net.minecraft.entity.Entity.setInvisible(boolean)"], "Fixed commit": "5c35e1a57cf94ffe5f86e395247ce58dc911f564", "Url": "https://api.github.com/repos/hsyyid/SpongeCommon", "Date": "2015-12-29T21:12:32Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(draw)) return (lower + upper) / 2; else return draw;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7494/buggy-version/src.dr.inference.operators.LatentFactorLiabilityGibbsOperator.java", "BodyUseAPI": [], "Fixed commit": "4fe8856f36f6d625ca27e16f44d5c55c01304758", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2016-12-17T01:30:24Z"},
{"Line": "=>867", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(_sticky)) { if ((_removedSessions.remove(sessionId)) == null) { _lockingStrategy.onBackupWithoutLoadedSession(sessionId, requestId, _backupSessionService); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2622/buggy-version/core.src.main.java.de.javakaffee.web.msm.MemcachedSessionService.java", "BodyUseAPI": [], "Fixed commit": "aae3265e9d9024645f51ef28d9c218ebcf0a010e", "Url": "https://api.github.com/repos/magro/memcached-session-manager", "Date": "2011-12-21T23:41:54Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(webRequest.isFollowRedirects())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5425/buggy-version/library.src.at.diamonddogs.net.WebClientDefaultHttpClient.java", "BodyUseAPI": [], "Fixed commit": "f21cd8b89f0626d9f2fd7264a51f9bee44647021", "Url": "https://api.github.com/repos/the-diamond-dogs-group-oss/android-http", "Date": "2013-08-20T11:19:50Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getName()) == null) { task.addLabel(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2106/buggy-version/Application.CoffeeBreak.app.src.main.java.cbstudios.coffeebreak.model.tododatamodule.categorylist.LabelCategory.java", "BodyUseAPI": ["cbstudios.coffeebreak.model.tododatamodule.todolist.IAdvancedTask.addLabel(cbstudios.coffeebreak.model.tododatamodule.categorylist.LabelCategory)"], "Fixed commit": "0453149679b2bc7377c0b5dafe22abd02479b80a", "Url": "https://api.github.com/repos/felixnorden/coffeebreak", "Date": "2017-04-23T21:02:37Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((services.UsuarioDAO.find(id)) == null) { throw new services.UsuariosException((\"No existe usuario a borrar: \" + id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4322/buggy-version/app.services.UsuariosService.java", "BodyUseAPI": [], "Fixed commit": "f2d459a822d88ff18e5f267f62b9719b7cb836ef", "Url": "https://api.github.com/repos/domingogallardo/mads-todolist", "Date": "2016-10-14T08:57:27Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (review == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1059/buggy-version/proj.app.src.main.java.com.mun.minh_minhh.interlac.Events.ArtWork.ArtworkViewMain.java", "BodyUseAPI": [], "Fixed commit": "ed2e91908a615afec36869201a18a5bcae9dbb1e", "Url": "https://api.github.com/repos/eilx2/interLAC", "Date": "2017-06-01T11:21:03Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((org.apache.commons.lang.StringUtils.isNotBlank(org.apache.commons.lang.StringEscapeUtils.escapeXml(existingAnchorAbsolutePath))) && (org.apache.commons.lang.StringUtils.isNotBlank(updatedAnchorPath))) { outeHtmlText = outeHtmlText.replace(((\"\\\"\" + (org.apache.commons.lang.StringEscapeUtils.escapeXml(existingAnchorAbsolutePath))) + \"\\\"\"), ((\"\\\"\" + updatedAnchorPath) + \"\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/388/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.config.FrameworkUtils.java", "BodyUseAPI": ["org.apache.commons.lang.StringEscapeUtils.escapeXml(java.lang.String)", "java.lang.String.replace(((\"\\\"\" + (org.apache.commons.lang.StringEscapeUtils.escapeXml(existingAnchorAbsolutePath))) + \"\\\"\"),java.lang.String)"], "Fixed commit": "6d9aa0ee080c790a10626ed7a1ac86d3ec6001bc", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2016-02-19T11:51:14Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.absUrl(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(anchorHref)) { anchorHref = anchor.attr(\"href\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/388/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.web.WebVariation1.java", "BodyUseAPI": [], "Fixed commit": "6d9aa0ee080c790a10626ed7a1ac86d3ec6001bc", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2016-02-19T11:51:14Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((enemy.getHP()) < 0) { enemy.setHP(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4891/buggy-version/ToDoRPG.Android.NewToDoRPG.src.com.cs429.todorpg.revised.BattleActivity.java", "BodyUseAPI": ["com.cs429.todorpg.revised.model.ToDoCharacter.setHP(int)"], "Fixed commit": "ad16f0f8db77d9f3cc9f162487f45c9e64e48cfa", "Url": "https://api.github.com/repos/kevinwchen26/ToDoRPG", "Date": "2014-04-28T14:14:17Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getHP()) < 0) { player.setHP(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4891/buggy-version/ToDoRPG.Android.NewToDoRPG.src.com.cs429.todorpg.revised.BattleActivity.java", "BodyUseAPI": ["com.cs429.todorpg.revised.model.ToDoCharacter.setHP(int)"], "Fixed commit": "ad16f0f8db77d9f3cc9f162487f45c9e64e48cfa", "Url": "https://api.github.com/repos/kevinwchen26/ToDoRPG", "Date": "2014-04-28T14:14:17Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((droneMgr) != null) { droneMgr.executeAsyncAction(action, listener); }else { org.droidplanner.services.android.utils.CommonApiUtils.postErrorEvent(CommandExecutionError.COMMAND_FAILED, listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5620/buggy-version/ServiceApp.src.org.droidplanner.services.android.api.DroneApi.java", "BodyUseAPI": [], "Fixed commit": "e367596b6e63b31eeb077dc9e5a27637bc6f8988", "Url": "https://api.github.com/repos/dronekit/dronekit-android", "Date": "2015-10-18T13:12:13Z"},
{"Line": "=>844", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isGLES()) { profileOpt = ((ctxGLSLVersion.compareTo(javax.media.opengl.GLContext.Version300)) >= 0) ? \" es\" : javax.media.opengl.GLContext.S_EMPTY; }else if (isGLCoreProfile()) { profileOpt = ((ctxGLSLVersion.compareTo(javax.media.opengl.GLContext.Version150)) >= 0) ? \" core\" : javax.media.opengl.GLContext.S_EMPTY; }else if (isGLCompatibilityProfile()) { profileOpt = ((ctxGLSLVersion.compareTo(javax.media.opengl.GLContext.Version150)) >= 0) ? \" compatibility\" : javax.media.opengl.GLContext.S_EMPTY; }else { throw new java.lang.InternalError((\"Neither ES, Core nor Compat: \" + (this))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7563/buggy-version/src.jogl.classes.javax.media.opengl.GLContext.java", "BodyUseAPI": [], "Fixed commit": "fbbc153150faecdaa7f37c15eb03fc484276bb40", "Url": "https://api.github.com/repos/JogAmp/jogl", "Date": "2014-09-02T05:16:58Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.num) < 0) { this.num = (this.num) * (-1); this.denom = (this.denom) * (-1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2549/buggy-version/src.Rational.java", "BodyUseAPI": [], "Fixed commit": "b8b86fd2cd30d623e1d216f7761eb02daf0fccb1", "Url": "https://api.github.com/repos/dkirby13/lab01_dkirby13", "Date": "2016-10-04T22:51:35Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.splunk.modinput.Param.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((val != null) && ((val.length()) > 0)) reliableDeliveryDirectory = val;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7861/buggy-version/mqtt.src.com.splunk.modinput.mqtt.MQTTModularInput.java", "BodyUseAPI": [], "Fixed commit": "d9bf88ab81c1953e5a862bcd2b9a702fa7bfd595", "Url": "https://api.github.com/repos/damiendallimore/SplunkModularInputsJavaFramework", "Date": "2014-10-22T07:59:19Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cn.idongjia.util.Utils.isEmpty(search.getKrname())) { search.setKrname(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1638/buggy-version/order.src.main.java.top.jhechem.order.service.impl.OrderServiceImpl.java", "BodyUseAPI": ["top.jhechem.order.pojo.OrderSearch.setKrname(<nulltype>)"], "Fixed commit": "f45087fe69d689ff4e3059c874b90111d3a78453", "Url": "https://api.github.com/repos/devonkey/jhechem", "Date": "2017-08-29T15:39:22Z"},
{"Line": "=>1011", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getInventory().getHelmet()) == null) { player.sendMessage((((org.bukkit.ChatColor.DARK_BLUE) + \"[Halloween] \") + \"\u4eca\u65e5\u306f\u30cf\u30ed\u30a6\u30a3\u30f3\uff01\u5f53\u30b5\u30fc\u30d0\u3067\u306f\u982d\u306b\u30b8\u30e3\u30c3\u30af\u30aa\u30e9\u30f3\u30bf\u30f3\u3092\u304b\u3076\u305b\u3066\u3044\u307e\u3059\uff01\")); player.sendMessage((((org.bukkit.ChatColor.DARK_BLUE) + \"[Halloween] \") + \"\u4eca\u65e5\u4e00\u65e5\u306f\u5916\u3057\u3066\u3082\u3059\u3050\u306b\u518d\u5ea6\u304b\u3076\u305b\u3089\u308c\u3061\u3083\u3046\u306e\u3067\u6211\u6162\u3057\u3066\u306d\uff01\")); player.getInventory().setHelmet(new org.bukkit.inventory.ItemStack(org.bukkit.Material.JACK_O_LANTERN)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2544/buggy-version/src.main.java.xyz.jaoafa.mymaid.MyMaid.java", "BodyUseAPI": ["player.getInventory().setHelmet(org.bukkit.inventory.ItemStack)", "org.bukkit.entity.Player.sendMessage((((org.bukkit.ChatColor.DARK_BLUE) + \"[Halloween] \") + \"\u4eca\u65e5\u4e00\u65e5\u306f\u5916\u3057\u3066\u3082\u3059\u3050\u306b\u518d\u5ea6\u304b\u3076\u305b\u3089\u308c\u3061\u3083\u3046\u306e\u3067\u6211\u6162\u3057\u3066\u306d\uff01\"))", "org.bukkit.entity.Player.sendMessage((((org.bukkit.ChatColor.DARK_BLUE) + \"[Halloween] \") + \"\u4eca\u65e5\u306f\u30cf\u30ed\u30a6\u30a3\u30f3\uff01\u5f53\u30b5\u30fc\u30d0\u3067\u306f\u982d\u306b\u30b8\u30e3\u30c3\u30af\u30aa\u30e9\u30f3\u30bf\u30f3\u3092\u304b\u3076\u305b\u3066\u3044\u307e\u3059\uff01\"))", "org.bukkit.entity.Player.getInventory()"], "Fixed commit": "eb5f52112abd4949cf92116b1edf8918522dd8d4", "Url": "https://api.github.com/repos/book000/MyMaid", "Date": "2017-10-30T15:43:46Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof java.lang.Boolean) { return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8484/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.parser.OInputParameter.java", "BodyUseAPI": [], "Fixed commit": "e6b2fc52270cdbee13bb9e091a205851db9b1b69", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-08-12T13:51:34Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == null) { type = Indexer.idx.builtins.unknown; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1973/buggy-version/Builtins.java", "BodyUseAPI": [], "Fixed commit": "b139efe841edb79faf87a72193840d08c6358c4f", "Url": "https://api.github.com/repos/yinwang0/pysonar2", "Date": "2013-10-31T17:06:18Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ru.mintscale.heromania.Heromania.isActivityVisible())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/735/buggy-version/app.src.main.java.ru.mintscale.heromania.QuizActivity.java", "BodyUseAPI": [], "Fixed commit": "3a960a62e35e3e43487b9a680611da3cdda0c58a", "Url": "https://api.github.com/repos/vasileknik76/HeroMania", "Date": "2017-05-17T15:10:57Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((except != null) && (except.contains(key))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/659/buggy-version/src.main.java.i5.las2peer.api.Configurable.java", "BodyUseAPI": [], "Fixed commit": "c8a857d933f9c8100c5ad5c2152331ef16226d52", "Url": "https://api.github.com/repos/Gordin/las2peer", "Date": "2013-08-04T16:25:35Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.nlp.util.PropertiesUtils.extractPrefixedProperties(java.util.Properties,((Annotator.STANFORD_COREF) + \".\"),boolean)", "java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((java.util.Arrays.asList(annotatorsList).contains(Annotator.STANFORD_PARSE)) && (!(corefProperties.containsKey(((Annotator.STANFORD_COREF) + \".useConstituencyParse\"))))) { corefProperties.setProperty(((Annotator.STANFORD_COREF) + \".useConstituencyParse\"), \"true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7897/buggy-version/src.edu.stanford.nlp.pipeline.AnnotatorImplementations.java", "BodyUseAPI": ["java.util.Properties.setProperty(((Annotator.STANFORD_COREF) + \".useConstituencyParse\"),java.lang.String)"], "Fixed commit": "0a0fa6cfcb52b27ef3205f994f1b72b3d085b082", "Url": "https://api.github.com/repos/ollie314/CoreNLP", "Date": "2016-10-18T05:40:46Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.xdebugger.impl.ui.tree.nodes.WatchesRootNode.getAllChildren()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (children != null) { for (com.intellij.xdebugger.impl.ui.tree.nodes.WatchNode node : rootNode.getAllChildren()) { expressionsToSave.add(node.getExpression().getExpression()); } if (properties.setWatchExpressions(expressionsToSave.toArray(new java.lang.String[expressionsToSave.size()]))) { lineBreakpointImpl.fireBreakpointChanged(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8318/buggy-version/google-cloud-tools-plugin.src.com.google.gct.idea.debugger.ui.BreakpointConfigurationPanel.java", "BodyUseAPI": [], "Fixed commit": "981f93cfe93c6185517a4193b346e6248d6a46b9", "Url": "https://api.github.com/repos/GoogleCloudPlatform/google-cloud-intellij", "Date": "2016-03-16T17:40:44Z"},
{"Line": "=>609", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPolyline) != null) { mPolyline.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4907/buggy-version/src.com.cruzroja.creuroja.CRMapFragment.java", "BodyUseAPI": [], "Fixed commit": "a4459099c4d02cdd5c157ac5b2ee32bd9e335f4f", "Url": "https://api.github.com/repos/darthsuicune/CreuRoja", "Date": "2013-08-01T16:03:22Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((directions.size()) == 0) { android.widget.Toast.makeText(getActivity(), R.string.error_limit_reached, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4907/buggy-version/src.com.cruzroja.creuroja.CRMapFragment.java", "BodyUseAPI": [], "Fixed commit": "a4459099c4d02cdd5c157ac5b2ee32bd9e335f4f", "Url": "https://api.github.com/repos/darthsuicune/CreuRoja", "Date": "2013-08-01T16:03:22Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mGoogleMap) == null) || (directions == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4907/buggy-version/src.com.cruzroja.creuroja.CRMapFragment.java", "BodyUseAPI": [], "Fixed commit": "a4459099c4d02cdd5c157ac5b2ee32bd9e335f4f", "Url": "https://api.github.com/repos/darthsuicune/CreuRoja", "Date": "2013-08-01T16:03:22Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof java.lang.Iterable) { return java.util.List.class; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/607/buggy-version/cql-engine.src.main.java.org.opencds.cqf.cql.execution.Context.java", "BodyUseAPI": [], "Fixed commit": "32a5333c028d55dbc23aacb4b39f315e5516ef5a", "Url": "https://api.github.com/repos/DBCG/cql_engine", "Date": "2017-05-07T10:53:27Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Package.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (packageName.startsWith(\"java\")) { return value.getClass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/607/buggy-version/cql-engine.src.main.java.org.opencds.cqf.cql.execution.Context.java", "BodyUseAPI": [], "Fixed commit": "32a5333c028d55dbc23aacb4b39f315e5516ef5a", "Url": "https://api.github.com/repos/DBCG/cql_engine", "Date": "2017-05-07T10:53:27Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.ndatasource.rdbms.RDBMSDataSourceReader.loadConfig(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rdbmsConfiguration.getUsername()) != null) { java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl(), rdbmsConfiguration.getUsername(), rdbmsConfiguration.getPassword()); }else { java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8384/buggy-version/core.org.wso2.carbon.ndatasource.rdbms.src.main.java.org.wso2.carbon.ndatasource.rdbms.RDBMSDataSourceReader.java", "BodyUseAPI": ["java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl())", "java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl(),rdbmsConfiguration.getUsername(),rdbmsConfiguration.getPassword())", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUrl()", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getPassword()", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUrl()", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUsername()"], "Fixed commit": "745d1f105ef85df1a34172755ea4439ea1231356", "Url": "https://api.github.com/repos/darshanasbg/carbon-kernel", "Date": "2015-09-03T04:40:02Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (last == anotherOne) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/348/buggy-version/src.ConsistencyGraph.java", "BodyUseAPI": [], "Fixed commit": "225281c33946add26c329de740915b75a983c82d", "Url": "https://api.github.com/repos/ctlab/DFA-Inductor", "Date": "2015-09-03T16:52:12Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (last == anotherOne) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/348/buggy-version/src.ConsistencyGraph.java", "BodyUseAPI": [], "Fixed commit": "225281c33946add26c329de740915b75a983c82d", "Url": "https://api.github.com/repos/ctlab/DFA-Inductor", "Date": "2015-09-03T16:52:12Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (taskManager.controller.ToolbarController.getInstance().getView().isFunMode()) { taskManager.controller.WorkflowController.getInstance().reloadData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7734/buggy-version/TaskManager.src.main.java.taskManager.controller.StageController.java", "BodyUseAPI": [], "Fixed commit": "2067148464ad6e145f3ce2fe4fbb15fbc2e042e2", "Url": "https://api.github.com/repos/slash-slash-no-comment-WPI-cs3733/wpi-suite", "Date": "2014-12-12T23:51:29Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(journalNodesMap.isEmpty())) { value = numLiveJournalNodes / (journalNodesMap.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1339/buggy-version/eagle-topology-check.eagle-topology-app.src.main.java.org.apache.eagle.topology.extractor.hdfs.HdfsTopologyEntityParser.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.apache.eagle.topology.entity.JournalNodeServiceAPIEntity>.size()"], "Fixed commit": "b5543a5ff79d8a222f7c444aba4fffb57e6c8cfb", "Url": "https://api.github.com/repos/qingwen220/eagle", "Date": "2016-09-20T17:02:17Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opengis.context.ContextFilter.getElementValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(eleValue.equals(\"\"))) || ((currentAttrs.get(\"href\")) == null)) { java.lang.String sCon = parent.getContentBuffer(qName); sCon = sCon.substring(((sCon.indexOf(\">\")) + 1)); int idx = ((sCon.lastIndexOf(\"</\")) > (-1)) ? sCon.lastIndexOf(\"</\") : sCon.length(); sCon = sCon.substring(0, idx); content = new com.augtech.geoapi.context.ContentImpl(sCon, contentType, extensions.get(Content.TAG)); }else { java.lang.String uri = currentAttrs.get(\"href\"); try { content = new com.augtech.geoapi.context.ContentImpl(new java.net.URI(uri), contentType); } catch (java.net.URISyntaxException e) { } parent.getContentBuffer(\"????\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6265/buggy-version/AugTech_GeoAPI_Impl.com.augtech.geoapi.context.xml.EntryFilter.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "25b902b62f0158a998796320272bc552ed07d557", "Url": "https://api.github.com/repos/opengeospatial/Java-OpenMobility", "Date": "2014-02-05T18:59:38Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.mycompany.nncloudrestservice.dto.NeuronDTO>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((ndt.getId()) != null) neuron.setId(ndt.getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5077/buggy-version/BE.nnCloudRESTService.src.main.java.com.mycompany.nncloudrestservice.dto.transform.DTOToNetwork.java", "BodyUseAPI": ["com.mycompany.nncloudrestservice.pojo.Neuron.setId(ndt.getId())", "com.mycompany.nncloudrestservice.dto.NeuronDTO.getId()"], "Fixed commit": "9ce1c328bab516e249d7013d391ec68870990dd1", "Url": "https://api.github.com/repos/kowalt/nnCloud", "Date": "2016-10-28T12:07:22Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof java.lang.String) { return value; }else if (value instanceof com.google.protobuf.Descriptors.EnumDescriptor) { return ((com.google.protobuf.Descriptors.EnumDescriptor) (value)).getName(); }else if (value instanceof com.google.protobuf.Descriptors.EnumValueDescriptor) { return ((com.google.protobuf.Descriptors.EnumValueDescriptor) (value)).getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6611/buggy-version/src.main.java.com.github.taojoe.Transformer.java", "BodyUseAPI": [], "Fixed commit": "1648fadb1858a9f5ef2b1eb4c900cb3b2ae9b403", "Url": "https://api.github.com/repos/taojoe/protobuf-transformer", "Date": "2016-11-25T14:44:04Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (emojiConfig.isTwitchEnabled()) { return emojiById.get(java.lang.Integer.toString(emojiId)); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/439/buggy-version/src.main.java.com.glitchcog.fontificator.emoji.EmojiManager.java", "BodyUseAPI": [], "Fixed commit": "fbaeb12c522ebcb566f40b86f92bf3116516f393", "Url": "https://api.github.com/repos/GlitchCog/ChatGameFontificator", "Date": "2016-02-16T18:07:20Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getClass()) != (obj.getClass())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/779/buggy-version/modeshape-jca.src.main.java.org.modeshape.jca.JcrManagedConnectionFactory.java", "BodyUseAPI": [], "Fixed commit": "60bd084c8a1b364f2d4d4e298d06bd4a42a385fa", "Url": "https://api.github.com/repos/albertdev/modeshape", "Date": "2013-05-10T08:43:31Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/779/buggy-version/modeshape-jca.src.main.java.org.modeshape.jca.JcrManagedConnectionFactory.java", "BodyUseAPI": [], "Fixed commit": "60bd084c8a1b364f2d4d4e298d06bd4a42a385fa", "Url": "https://api.github.com/repos/albertdev/modeshape", "Date": "2013-05-10T08:43:31Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((other.repositoryURL) != null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/779/buggy-version/modeshape-jca.src.main.java.org.modeshape.jca.JcrManagedConnectionFactory.java", "BodyUseAPI": [], "Fixed commit": "60bd084c8a1b364f2d4d4e298d06bd4a42a385fa", "Url": "https://api.github.com/repos/albertdev/modeshape", "Date": "2013-05-10T08:43:31Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (countryPicker.getValue().equals(\"United States\")) { statePicker.setVisible(true); statePickerLabel.setVisible(true); }else { statePicker.setVisible(false); statePickerLabel.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2062/buggy-version/src.main.java.com.gitrekt.resort.controller.PlaceBookingScreenController.java", "BodyUseAPI": [], "Fixed commit": "9ca1ff8c7764ce3416c5629cab779add69302c42", "Url": "https://api.github.com/repos/maillouxc/git-rekt", "Date": "2017-11-18T03:56:23Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (processFile) { org.sammelbox.model.album.AlbumItemPicture picture = org.sammelbox.view.image.ImageManipulator.adaptAndStoreImageForCollector(new java.io.File(filename), org.sammelbox.controller.GuiController.getGuiState().getSelectedAlbum()); if (picture == null) { showDroppedUnsupportedFileMessageBox(filename); }else { pictures.add(picture); } }else { showDroppedUnsupportedFileMessageBox(filename); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3207/buggy-version/Sammelbox-Desktop.src.org.sammelbox.view.image.ImageDropAndManagementComposite.java", "BodyUseAPI": [], "Fixed commit": "a4d56289c16779b1120b2b10ec759ebbf47efec9", "Url": "https://api.github.com/repos/jeromewagener/Sammelbox", "Date": "2013-12-01T16:18:43Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((core.getCoreDescriptor().getCloudDescriptor()) != null) && (core.getCoreDescriptor().getCloudDescriptor().isLeader())) && (!(softCommit))) { command.version = core.getUpdateHandler().getUpdateLog().getVersionInfo().getNewClock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5601/buggy-version/solr.core.src.java.org.apache.solr.update.CommitTracker.java", "BodyUseAPI": ["core.getUpdateHandler().getUpdateLog()", "org.apache.solr.core.SolrCore.getUpdateHandler()", "core.getUpdateHandler().getUpdateLog().getVersionInfo()", "core.getUpdateHandler().getUpdateLog().getVersionInfo().getNewClock()"], "Fixed commit": "d4c4f797741f225a1cd774bb259fd21af0960d09", "Url": "https://api.github.com/repos/CaoManhDat/lucene-solr", "Date": "2017-01-02T00:04:59Z"},
{"Line": "=>694", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((in.remaining()) == 0) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5335/buggy-version/src.main.java.net.openhft.chronicle.bytes.BytesUtil.java", "BodyUseAPI": [], "Fixed commit": "7aaa59c37dee6bcc2320be163314032891b560a9", "Url": "https://api.github.com/repos/OpenHFT/Chronicle-Bytes", "Date": "2015-03-29T19:14:24Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.youmayon.lebang.service.impl.TaskServiceImpl.findOne(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (savedTask == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7507/buggy-version/src.main.java.com.youmayon.lebang.service.impl.TaskServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "394d33ac7b3769870a968a1e285a1c1b8b3ad60f", "Url": "https://api.github.com/repos/hezudaopp/lebang", "Date": "2017-05-08T02:25:04Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (tempButton == null) { android.util.Log.e(\"gatekeeper update()\", ((\"Gatekeeper server returned a door (\" + doorName) + \") I don't know about\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8388/buggy-version/src.edu.rit.csh.agargiulo.Gatekeeper.GatekeeperActivity.java", "BodyUseAPI": [], "Fixed commit": "1cfafaf84ae345c4eaf02a1f8e60edd3a510e4d9", "Url": "https://api.github.com/repos/agargiulo/gatekeeper-android", "Date": "2013-11-20T04:12:27Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (res.isEmpty()) { res.add(new org.rascalmpl.interpreter.matching.IVarPattern() { @java.lang.Override public java.lang.String name() { return \"_\"; } @java.lang.Override public boolean isVarIntroducing() { return false; } @java.lang.Override public org.eclipse.imp.pdb.facts.type.Type getType() { return tf.voidType(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/263/buggy-version/src.org.rascalmpl.interpreter.matching.NodePattern.java", "BodyUseAPI": ["java.util.LinkedList<org.rascalmpl.interpreter.matching.IVarPattern>.add(org.rascalmpl.interpreter.matching.IVarPattern)"], "Fixed commit": "8878093943828c03c45dbf85100eb3605b5d7c0f", "Url": "https://api.github.com/repos/usethesource/rascal", "Date": "2015-10-05T18:36:18Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minLatitude == 90.0) { return new org.apache.lucene.search.MatchNoDocsQuery(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5084/buggy-version/lucene.sandbox.src.java.org.apache.lucene.document.LatLonPoint.java", "BodyUseAPI": [], "Fixed commit": "e0c507a40012a1148da65b81d722bd9b29ec9d8e", "Url": "https://api.github.com/repos/risdenk/lucene-solr", "Date": "2016-04-07T04:09:56Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minLongitude == 180.0) { if (maxLongitude == 180.0) { return new org.apache.lucene.search.MatchNoDocsQuery(); }else if (maxLongitude < minLongitude) { minLongitude = -180.0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5084/buggy-version/lucene.sandbox.src.java.org.apache.lucene.document.LatLonPoint.java", "BodyUseAPI": [], "Fixed commit": "e0c507a40012a1148da65b81d722bd9b29ec9d8e", "Url": "https://api.github.com/repos/risdenk/lucene-solr", "Date": "2016-04-07T04:09:56Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((object.getTextRange().getEndOffset()) < (getTextRange().getEndOffset())) { if (dotAccess) { descriptors.add(new com.intellij.lang.folding.FoldingDescriptor(element.getNode(), com.intellij.openapi.util.TextRange.create(getTextRange().getStartOffset(), object.getTextRange().getStartOffset()), group) { @org.jetbrains.annotations.Nullable @java.lang.Override public java.lang.String getPlaceholderText() { return \"\"; } }); descriptors.add(new com.intellij.lang.folding.FoldingDescriptor(element.getNode(), com.intellij.openapi.util.TextRange.create(object.getTextRange().getEndOffset(), ((getTextRange().getEndOffset()) + 1)), group) { @org.jetbrains.annotations.Nullable @java.lang.Override public java.lang.String getPlaceholderText() { return \".\"; } }); }else { descriptors.add(new com.intellij.lang.folding.FoldingDescriptor(element.getNode(), com.intellij.openapi.util.TextRange.create(getTextRange().getStartOffset(), object.getTextRange().getStartOffset()), group) { @org.jetbrains.annotations.Nullable @java.lang.Override public java.lang.String getPlaceholderText() { return \"~\"; } }); descriptors.add(new com.intellij.lang.folding.FoldingDescriptor(element.getNode(), com.intellij.openapi.util.TextRange.create(object.getTextRange().getEndOffset(), getTextRange().getEndOffset()), group) { @org.jetbrains.annotations.Nullable @java.lang.Override public java.lang.String getPlaceholderText() { return \"\"; } }); } }else { descriptors.add(new com.intellij.lang.folding.FoldingDescriptor(element.getNode(), com.intellij.openapi.util.TextRange.create(getTextRange().getStartOffset(), object.getTextRange().getStartOffset()), group) { @org.jetbrains.annotations.Nullable @java.lang.Override public java.lang.String getPlaceholderText() { return \"~\"; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4970/buggy-version/src.com.intellij.advancedExpressionFolding.TypeCast.java", "BodyUseAPI": ["com.intellij.advancedExpressionFolding.Expression.getTextRange()", "com.intellij.openapi.util.TextRange.create(getTextRange().getStartOffset(),object.getTextRange().getStartOffset())", "com.intellij.advancedExpressionFolding.Expression.getTextRange()", "object.getTextRange().getEndOffset()", "com.intellij.advancedExpressionFolding.Expression.getTextRange()", "com.intellij.openapi.util.TextRange.create(getTextRange().getStartOffset(),object.getTextRange().getStartOffset())", "com.intellij.advancedExpressionFolding.Expression.getTextRange()", "java.util.ArrayList<com.intellij.lang.folding.FoldingDescriptor>.add(com.intellij.lang.folding.FoldingDescriptor)", "com.intellij.openapi.util.TextRange.create(object.getTextRange().getEndOffset(),getTextRange().getEndOffset())", "java.util.ArrayList<com.intellij.lang.folding.FoldingDescriptor>.add(com.intellij.lang.folding.FoldingDescriptor)", "object.getTextRange().getStartOffset()", "java.util.ArrayList<com.intellij.lang.folding.FoldingDescriptor>.add(com.intellij.lang.folding.FoldingDescriptor)", "object.getTextRange().getStartOffset()", "object.getTextRange().getEndOffset()", "object.getTextRange().getStartOffset()", "java.util.ArrayList<com.intellij.lang.folding.FoldingDescriptor>.add(com.intellij.lang.folding.FoldingDescriptor)", "com.intellij.advancedExpressionFolding.Expression.getTextRange()", "com.intellij.openapi.util.TextRange.create(object.getTextRange().getEndOffset(),((getTextRange().getEndOffset()) + 1))", "com.intellij.openapi.util.TextRange.create(getTextRange().getStartOffset(),object.getTextRange().getStartOffset())", "java.util.ArrayList<com.intellij.lang.folding.FoldingDescriptor>.add(com.intellij.lang.folding.FoldingDescriptor)"], "Fixed commit": "0125456da5381d1391664bff8cca1f8d4ae2367c", "Url": "https://api.github.com/repos/cheptsov/AdvancedExpressionFolding", "Date": "2017-01-04T16:01:49Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (object.supportsFoldRegions(document)) { java.util.Collections.addAll(descriptors, object.buildFoldRegions(element, document)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4970/buggy-version/src.com.intellij.advancedExpressionFolding.TypeCast.java", "BodyUseAPI": ["java.util.Collections.addAll(java.util.ArrayList<com.intellij.lang.folding.FoldingDescriptor>,object.buildFoldRegions(element, document))", "com.intellij.advancedExpressionFolding.Expression.buildFoldRegions(com.intellij.psi.PsiElement,com.intellij.openapi.editor.Document)"], "Fixed commit": "0125456da5381d1391664bff8cca1f8d4ae2367c", "Url": "https://api.github.com/repos/cheptsov/AdvancedExpressionFolding", "Date": "2017-01-04T16:01:49Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canPass) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4169/buggy-version/powercraft.transport.PCtr_BeltHelper.java", "BodyUseAPI": [], "Fixed commit": "72b4d5206e91ec9161d554d64494ed831716ed94", "Url": "https://api.github.com/repos/PowerCraft/Modules", "Date": "2014-06-02T14:16:33Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dir.isVertical()) && ((diff = powercraft.api.PC_MathHelper.abs_double((((y + 0.5) + ((dir.offsetY) * 0.5)) - (entity.posY)))) < (2 * speed))) { entity.motionY = (powercraft.transport.PCtr_BeltHelper.getSpeedForDiff(diff)) * (dir.offsetY); }else if ((dir.isHorizontalX()) && ((diff = powercraft.api.PC_MathHelper.abs_double((((x + 0.5) + ((dir.offsetX) * 0.5)) - (entity.posX)))) < (2 * speed))) { entity.motionX = (powercraft.transport.PCtr_BeltHelper.getSpeedForDiff(diff)) * (dir.offsetX); }else if ((dir.isHorizontalZ()) && ((diff = powercraft.api.PC_MathHelper.abs_double((((z + 0.5) + ((dir.offsetZ) * 0.5)) - (entity.posZ)))) < (2 * speed))) { entity.motionZ = (powercraft.transport.PCtr_BeltHelper.getSpeedForDiff(diff)) * (dir.offsetZ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4169/buggy-version/powercraft.transport.PCtr_BeltHelper.java", "BodyUseAPI": ["powercraft.api.PC_Direction.isHorizontalX()", "powercraft.api.PC_MathHelper.abs_double((((z + 0.5) + ((dir.offsetZ) * 0.5)) - (entity.posZ)))", "powercraft.api.PC_Direction.isHorizontalZ()", "powercraft.api.PC_MathHelper.abs_double((((x + 0.5) + ((dir.offsetX) * 0.5)) - (entity.posX)))"], "Fixed commit": "72b4d5206e91ec9161d554d64494ed831716ed94", "Url": "https://api.github.com/repos/PowerCraft/Modules", "Date": "2014-06-02T14:16:33Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { mCurrentScreenArgs = savedInstanceState.getBundle(com.eficksan.whereami.presentation.MainActivity.KEY_CURRENT_SCREEN_ARGS); mCurrentScreenKey = savedInstanceState.getInt(com.eficksan.whereami.presentation.MainActivity.KEY_CURRENT_SCREEN_KEY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4810/buggy-version/app.src.main.java.com.eficksan.whereami.presentation.MainActivity.java", "BodyUseAPI": ["android.os.Bundle.getBundle(java.lang.String)", "android.os.Bundle.getInt(java.lang.String)"], "Fixed commit": "e9ba96b4e345f131c3b9294c1db3846eae8194be", "Url": "https://api.github.com/repos/AlekseiIvshin/WhereAmI", "Date": "2016-09-16T11:44:19Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((port.getRemoved()) != null) || (port.getState().equalsIgnoreCase(CommonStatesConstants.REMOVING))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4729/buggy-version/code.iaas.model.src.main.java.io.cattle.platform.core.dao.impl.NetworkDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "2a6e3582445c0a1ca26c4e39fc530383cf11f584", "Url": "https://api.github.com/repos/alena1108/cattle", "Date": "2016-11-21T18:58:32Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSessionHandler()) != null) getSessionHandler().addEventListener(weldListener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8367/buggy-version/jetty-cdi.cdi-servlet.src.main.java.org.eclipse.jetty.cdi.servlet.EmbeddedCdiHandler.java", "BodyUseAPI": [], "Fixed commit": "8cc9f9ddcf806322fa8cc65092ed81b8a19924bb", "Url": "https://api.github.com/repos/eclipse/jetty.project", "Date": "2017-11-22T08:37:42Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["inputDescription.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (description.isEmpty()) { android.widget.Toast.makeText(this, \"Favor preencher a descricao!\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1724/buggy-version/app.src.main.java.br.com.painelsocial.NewRequestActivity.java", "BodyUseAPI": [], "Fixed commit": "45fa30b10b1219cb701610224cb2ad8218dd7215", "Url": "https://api.github.com/repos/dougmaitelli/PainelSocialAndroid", "Date": "2015-06-17T00:22:49Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["inputPassword.getText().toString()", "inputEmail.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((email.isEmpty()) || (password.isEmpty())) { android.widget.Toast.makeText(this, \"Favor preencher todos os campos!\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1724/buggy-version/app.src.main.java.br.com.painelsocial.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "45fa30b10b1219cb701610224cb2ad8218dd7215", "Url": "https://api.github.com/repos/dougmaitelli/PainelSocialAndroid", "Date": "2015-06-17T00:22:49Z"},
{"Line": "=>936", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getDistroVendor().equalsIgnoreCase(Constants.CDH_VENDOR)) { java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(Constants.CDH4_PATTERN); if (!(pattern.matcher(this.getDistroVersion()).matches())) { return; } if ((compare(this.getDistroVersion(), \"4.2.1\")) > 0) { warningMsgList.add(Constants.MUST_CONFIGURE_FQDN); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3399/buggy-version/common.src.main.java.com.vmware.bdd.apitypes.ClusterCreate.java", "BodyUseAPI": [], "Fixed commit": "e7b7043a854066c783f60798d04544f8d68b1bbd", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-07-12T00:30:17Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lc == ']') { pipe = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5643/buggy-version/src.unluac.decompile.Constant.java", "BodyUseAPI": [], "Fixed commit": "f59462eeb55a5d4b033e6bbc0b184e7a7bea5924", "Url": "https://api.github.com/repos/HansWessels/unluac", "Date": "2015-07-11T15:09:33Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.yannici.bedwars.Main.getInstance().getBooleanConfig(java.lang.String,boolean)", "io.github.yannici.bedwars.Game.Team.isDead(io.github.yannici.bedwars.Game.Game)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((onlyOnBedDestroy && teamIsDead) || (!onlyOnBedDestroy)) { java.util.List<java.lang.String> commands = io.github.yannici.bedwars.Main.getInstance().getConfig().getStringList(\"rewards.player-kill\"); io.github.yannici.bedwars.Main.getInstance().dispatchRewardCommands(commands, com.google.common.collect.ImmutableMap.of(\"{player}\", killer.getName(), \"{score}\", java.lang.String.valueOf(io.github.yannici.bedwars.Main.getInstance().getIntConfig(\"statistics.scores.kill\", 10)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/9117/buggy-version/src.io.github.yannici.bedwars.Game.GameCycle.java", "BodyUseAPI": [], "Fixed commit": "ba4c1a59e1b775c8e86c913c64f600443c7004e8", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-06-24T15:00:52Z"},
{"Line": "=>958", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (initialSpawn) { this.getEntityAttribute(SharedMonsterAttributes.MAX_HEALTH).setBaseValue(((this.getEntityAttribute(SharedMonsterAttributes.MAX_HEALTH).getBaseValue()) * 2.5)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1585/buggy-version/src.main.java.mod.akrivus.kagic.entity.EntityGem.java", "BodyUseAPI": [], "Fixed commit": "b2af03696b89bb531db60ccba621c651dcc0662a", "Url": "https://api.github.com/repos/gryttr/KAGIC", "Date": "2017-08-14T03:29:58Z"},
{"Line": "=>945", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (initialSpawn) { this.getEntityAttribute(SharedMonsterAttributes.ATTACK_DAMAGE).setBaseValue(((this.getEntityAttribute(SharedMonsterAttributes.ATTACK_DAMAGE).getBaseValue()) * 2.0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1585/buggy-version/src.main.java.mod.akrivus.kagic.entity.EntityGem.java", "BodyUseAPI": [], "Fixed commit": "b2af03696b89bb531db60ccba621c651dcc0662a", "Url": "https://api.github.com/repos/gryttr/KAGIC", "Date": "2017-08-14T03:29:58Z"},
{"Line": "=>950", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (initialSpawn) { this.getEntityAttribute(SharedMonsterAttributes.ATTACK_DAMAGE).setBaseValue(((this.getEntityAttribute(SharedMonsterAttributes.ATTACK_DAMAGE).getBaseValue()) * 2.0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1585/buggy-version/src.main.java.mod.akrivus.kagic.entity.EntityGem.java", "BodyUseAPI": [], "Fixed commit": "b2af03696b89bb531db60ccba621c651dcc0662a", "Url": "https://api.github.com/repos/gryttr/KAGIC", "Date": "2017-08-14T03:29:58Z"},
{"Line": "=>778", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.fluffr.app.fluffr.BrowserActivity.getCurrentState().equals(\"Browse\")) savePosition();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1687/buggy-version/app.src.main.java.com.fluffr.app.fluffr.BrowserActivity.java", "BodyUseAPI": [], "Fixed commit": "f90bf6209f5ab469a729ee0d30b09df39061d9d8", "Url": "https://api.github.com/repos/plandrem/fluffr-android", "Date": "2014-12-20T22:31:23Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAnimationStopped)) { com.facebook.react.bridge.ReactContext reactContext = ((com.facebook.react.bridge.ReactContext) (getContext())); sendEvent(reactContext, \"onEnd\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7769/buggy-version/android.src.main.java.dk.madslee.imageSequence.RCTImageSequenceView.java", "BodyUseAPI": [], "Fixed commit": "108f25abeadea5daf5472330e9e1f5abce6caaea", "Url": "https://api.github.com/repos/rad182/react-native-image-sequence", "Date": "2017-09-13T16:33:53Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.startsWith(\"/\")) { return path; }else { if (curWorkingDir.equals(\"/\")) return (curWorkingDir) + path; else return ((curWorkingDir) + \"/\") + path; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1756/buggy-version/src.org.apache.cassandra.contrib.fs.cli.FSCliMain.java", "BodyUseAPI": [], "Fixed commit": "e1486d3a10ed4c1ce4160a351f4191f413c9fb43", "Url": "https://api.github.com/repos/ftylitak/cassandra-fs", "Date": "2011-12-12T09:31:41Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loci.formats.meta.IMetadata.getChannelName(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (channelName == null) { channelName = \"CHANNEL_\" + i; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6517/buggy-version/AnnotationToolMicroscopy.ch.ethz.scu.obit.microscopy.readers.MicroscopyReader.java", "BodyUseAPI": [], "Fixed commit": "90ae96369abe0e8e4fd6a10948e8c304f97a328c", "Url": "https://api.github.com/repos/aarpon/obit_annotation_tool", "Date": "2014-06-02T12:27:37Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getRequest().getPath().indexOf('?')) != (-1)) path = getRequest().getPath().substring(0, getRequest().getPath().indexOf('?')); else path = getRequest().getPath();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/475/buggy-version/demo.FileHandler.java", "BodyUseAPI": [], "Fixed commit": "d05f8ceaa59f701fe860e9e882e6cef95ac37da2", "Url": "https://api.github.com/repos/dkuntz2/java-httpserver", "Date": "2013-08-06T19:15:52Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.indexOf('=')) != (-1)) out.put(item.substring(0, item.indexOf('=')), value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/475/buggy-version/httpserver.HTTPRequest.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.String.indexOf(char)"], "Fixed commit": "d05f8ceaa59f701fe860e9e882e6cef95ac37da2", "Url": "https://api.github.com/repos/dkuntz2/java-httpserver", "Date": "2013-08-06T19:15:52Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.geom.Line2D.ptSegDist(connection.getStation1().getLocation().getX(),connection.getStation1().getLocation().getY(),connection.getStation2().getLocation().getX(),connection.getStation2().getLocation().getY(),train.getPosition().getX(),train.getPosition().getY())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (trainFromTrack < 0.1) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5428/buggy-version/core.src.fvs.taxe.controller.ConnectionController.java", "BodyUseAPI": [], "Fixed commit": "ea6bbc0866b2215ac1367afdb7e9b858d4d9c74b", "Url": "https://api.github.com/repos/keemyb/SEPR-LYS-A4", "Date": "2015-04-22T13:10:48Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((train.getPosition()) == null) || ((train.getLocation()) != null)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5428/buggy-version/core.src.fvs.taxe.controller.ConnectionController.java", "BodyUseAPI": [], "Fixed commit": "ea6bbc0866b2215ac1367afdb7e9b858d4d9c74b", "Url": "https://api.github.com/repos/keemyb/SEPR-LYS-A4", "Date": "2015-04-22T13:10:48Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(android.text.TextUtils.isEmpty(address))) { buf = new android.text.SpannableStringBuilder(address); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4075/buggy-version/src.com.android.mms.ui.MailboxMode.MailBoxMessageListAdapter.java", "BodyUseAPI": [], "Fixed commit": "9891d0d15f0239c5c2cf3d6eaceffff4a49f643f", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Mms", "Date": "2016-03-23T09:07:36Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["iter.next().asTriple()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(listOfResources.contains(a.getPredicate()))) listOfResources.add(new org.aksw.simba.pagerank.definitions.RankedNode(a.getPredicate()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2520/buggy-version/autoindex.src.main.java.org.aksw.simba.pagerank.input.ProcessedInput.java", "BodyUseAPI": ["com.hp.hpl.jena.graph.Triple.getPredicate()", "java.util.List<org.aksw.simba.pagerank.definitions.RankedNode>.add(org.aksw.simba.pagerank.definitions.RankedNode)"], "Fixed commit": "c681bd2fa2910ccb4b71ff94793bebee9fbcb280", "Url": "https://api.github.com/repos/dice-group/autoindex", "Date": "2016-11-11T11:03:46Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["iter.next().asTriple()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(listOfResources.contains(a.getObject()))) listOfResources.add(new org.aksw.simba.pagerank.definitions.RankedNode(a.getObject()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2520/buggy-version/autoindex.src.main.java.org.aksw.simba.pagerank.input.ProcessedInput.java", "BodyUseAPI": ["com.hp.hpl.jena.graph.Triple.getObject()", "java.util.List<org.aksw.simba.pagerank.definitions.RankedNode>.add(org.aksw.simba.pagerank.definitions.RankedNode)"], "Fixed commit": "c681bd2fa2910ccb4b71ff94793bebee9fbcb280", "Url": "https://api.github.com/repos/dice-group/autoindex", "Date": "2016-11-11T11:03:46Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["iter.next().asTriple()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(listOfResources.contains(a.getSubject()))) listOfResources.add(new org.aksw.simba.pagerank.definitions.RankedNode(a.getSubject()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2520/buggy-version/autoindex.src.main.java.org.aksw.simba.pagerank.input.ProcessedInput.java", "BodyUseAPI": ["java.util.List<org.aksw.simba.pagerank.definitions.RankedNode>.add(org.aksw.simba.pagerank.definitions.RankedNode)", "com.hp.hpl.jena.graph.Triple.getSubject()"], "Fixed commit": "c681bd2fa2910ccb4b71ff94793bebee9fbcb280", "Url": "https://api.github.com/repos/dice-group/autoindex", "Date": "2016-11-11T11:03:46Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (samples == 0) { return -1; }else { return sumAvgOpsSec / samples; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6424/buggy-version/drivers.autonomic-benchmarks-suite.src.main.java.es.bsc.autonomicbenchmarks.benchmarks.DataServing.java", "BodyUseAPI": [], "Fixed commit": "668b16b1f2facdd2e9eaba91ffdf821ca8bd1d27", "Url": "https://api.github.com/repos/mariomac/demiurge", "Date": "2016-04-07T12:26:57Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (player == null) player = mGame.getPlayer1();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7111/buggy-version/src.com.sam.hex.view.BoardView.java", "BodyUseAPI": [], "Fixed commit": "57d1c65f5e6b6bd384bc53c83ec175b2e3db9114", "Url": "https://api.github.com/repos/Xlythe/HexGame_Android", "Date": "2013-07-01T22:32:08Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiElement.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (parent instanceof com.perl5.lang.perl.idea.annotators.PerlMethod) { com.intellij.psi.PsiElement grandParent = parent.getParent(); com.perl5.lang.perl.idea.annotators.PerlNamespaceElement methodNamespace = ((com.perl5.lang.perl.idea.annotators.PerlMethod) (parent)).getNamespaceElement(); if (((!(grandParent instanceof com.perl5.lang.perl.idea.annotators.PsiPerlNestedCall)) && ((methodNamespace == null) || (\"CORE\".equals(methodNamespace.getCanonicalName())))) && (((com.perl5.lang.perl.idea.annotators.PerlSubNameElement) (element)).isBuiltIn())) { decorateElement(holder.createInfoAnnotation(element, null), PerlSyntaxHighlighter.PERL_SUB, ((com.perl5.lang.perl.idea.annotators.PerlSubNameElement) (element)).isBuiltIn(), false); }else { com.intellij.psi.PsiReference reference = element.getReference(); if (reference instanceof com.perl5.lang.perl.psi.references.PerlSubReference) { ((com.perl5.lang.perl.psi.references.PerlSubReference) (reference)).multiResolve(false); if (((com.perl5.lang.perl.psi.references.PerlSubReference) (reference)).isConstant()) holder.createInfoAnnotation(element, \"Constant\").setTextAttributes(PerlSyntaxHighlighter.PERL_CONSTANT); else if (((com.perl5.lang.perl.psi.references.PerlSubReference) (reference)).isAutoloaded()) holder.createInfoAnnotation(element, \"Auto-loaded sub\").setTextAttributes(PerlSyntaxHighlighter.PERL_AUTOLOAD); else decorateElement(holder.createInfoAnnotation(element, null), PerlSyntaxHighlighter.PERL_SUB, ((com.perl5.lang.perl.idea.annotators.PerlSubNameElement) (element)).isBuiltIn(), false); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/996/buggy-version/src.com.perl5.lang.perl.idea.annotators.PerlAnnotatorSubs.java", "BodyUseAPI": ["com.intellij.psi.PsiElement.getParent()"], "Fixed commit": "ce9f91db382a96cab8748a6ff1d3070f3ea4ae4f", "Url": "https://api.github.com/repos/Camelcade/Perl5-IDEA", "Date": "2015-08-14T07:16:22Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.ovgu.featureide.core.CorePlugin.getFeatureProject(org.eclipse.core.resources.IProject)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (featureProject == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7400/buggy-version/plugins.de.ovgu.featureide.core.aspectj.src.de.ovgu.featureide.aspectj.AspectJFMCompserExtension.java", "BodyUseAPI": [], "Fixed commit": "6e248c89457587e0bffab09d4b5bab41a9ca07dc", "Url": "https://api.github.com/repos/skrieter/FeatureIDE", "Date": "2015-05-06T15:06:09Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jayway.android.robotium.solo.Waiter.waitForAndGetView(int,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (line > (absListView.getChildCount())) { junit.framework.Assert.assertTrue(((((\"Can not click line number \" + line) + \" as there are only \") + numberOfLines) + \" lines available\"), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3719/buggy-version/robotium-solo.src.main.java.com.jayway.android.robotium.solo.Clicker.java", "BodyUseAPI": ["junit.framework.Assert.assertTrue(java.lang.String,boolean)"], "Fixed commit": "3b81a75465aaeb1bbd66fa127edee79192f34a49", "Url": "https://api.github.com/repos/szprutamich/robotium", "Date": "2012-06-01T13:36:38Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Hashtable.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (o instanceof java.util.List) ((java.util.List) (o)).add(type); else { java.util.List l = new java.util.ArrayList(2); if ((o instanceof org.universAAL.middleware.rdf.Resource) && (!(type.equals(o)))) l.add(o); l.add(type); props.put(org.universAAL.middleware.rdf.Resource.PROP_RDF_TYPE, l); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6718/buggy-version/middleware.core.mw.data.representation.core.src.main.java.org.universAAL.middleware.rdf.Resource.java", "BodyUseAPI": ["java.util.List.add(java.lang.Object)", "org.universAAL.middleware.rdf.Resource.equals(java.lang.Object)"], "Fixed commit": "4ae6172ab66d6b28e9af3dc9f816606c3b6a6893", "Url": "https://api.github.com/repos/universAAL/middleware", "Date": "2017-07-18T12:05:26Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container, new cg.stevendende.deliciousrecipes.ui.RecipesFragment()).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5464/buggy-version/app.src.main.java.cg.stevendende.deliciousrecipes.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8220cdccb7538ab6c3582d9d9de50334f3ca5ba0", "Url": "https://api.github.com/repos/steve111MV/DeliciousRecipes", "Date": "2017-09-24T17:18:57Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState != null) { try { populateViews(mRecipeStep); } catch (java.lang.Exception ex) { ex.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5464/buggy-version/app.src.main.java.cg.stevendende.deliciousrecipes.ui.StepDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "8220cdccb7538ab6c3582d9d9de50334f3ca5ba0", "Url": "https://api.github.com/repos/steve111MV/DeliciousRecipes", "Date": "2017-09-24T17:18:57Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(envValue)) { envValue = envValue.substring(0, envValue.lastIndexOf(\",\")); parameter.setValue(envValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7381/buggy-version/com.photon.phresco.ui.src.com.photon.phresco.ui.phrescoexplorer.Unit.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "c9e7f73d3eb078a56754147ea166ac4581ac539b", "Url": "https://api.github.com/repos/photon-infotech/phresco-eclipse", "Date": "2013-08-23T14:04:46Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(parameter.getKey())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (checkBoxButton != null) { boolean selection = checkBoxButton.getSelection(); java.lang.System.out.println((\"Selection = \" + selection)); parameter.setValue(java.lang.String.valueOf(selection)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7381/buggy-version/com.photon.phresco.ui.src.com.photon.phresco.ui.phrescoexplorer.Unit.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Button.getSelection()"], "Fixed commit": "c9e7f73d3eb078a56754147ea166ac4581ac539b", "Url": "https://api.github.com/repos/photon-infotech/phresco-eclipse", "Date": "2013-08-23T14:04:46Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ballerinalang.plugins.idea.psi.IdentifierPSINode.getPsi()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (element instanceof org.ballerinalang.plugins.idea.psi.IdentifierPSINode) { org.ballerinalang.plugins.idea.psi.AssignmentStatementNode assignmentStatementNode = com.intellij.psi.util.PsiTreeUtil.getParentOfType(element, org.ballerinalang.plugins.idea.psi.AssignmentStatementNode.class); if ((assignmentStatementNode != null) && (org.ballerinalang.plugins.idea.psi.impl.BallerinaPsiImplUtil.isVarAssignmentStatement(assignmentStatementNode))) { org.ballerinalang.plugins.idea.psi.IdentifierPSINode identifier = ((org.ballerinalang.plugins.idea.psi.IdentifierPSINode) (element)); if (org.ballerinalang.plugins.idea.psi.impl.BallerinaPsiImplUtil.isValidVarVariable(assignmentStatementNode, identifier)) { return null; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1769/buggy-version/src.main.java.org.ballerinalang.plugins.idea.psi.IdentifierPSINode.java", "BodyUseAPI": ["com.intellij.psi.util.PsiTreeUtil.getParentOfType(com.intellij.psi.PsiElement,java.lang.Class)"], "Fixed commit": "f2dd0e00c8929e6a1f3e449a21cafc198abbe6d8", "Url": "https://api.github.com/repos/ballerina-attic/plugin-intellij", "Date": "2017-07-24T05:44:41Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((manager) != null) manager.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8029/buggy-version/src.edu.wildlifesecurity.trapdevice.SurveillanceService.java", "BodyUseAPI": [], "Fixed commit": "81b30fac46a65bb554f3ea2766dbfd105dd3034f", "Url": "https://api.github.com/repos/carka684/CDIO-TrapDevice", "Date": "2014-12-18T10:49:11Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((channel) != null) channel.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8029/buggy-version/src.edu.wildlifesecurity.trapdevice.communicatorclient.impl.Communicator.java", "BodyUseAPI": [], "Fixed commit": "81b30fac46a65bb554f3ea2766dbfd105dd3034f", "Url": "https://api.github.com/repos/carka684/CDIO-TrapDevice", "Date": "2014-12-18T10:49:11Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEOF) { errorStr = \"Unterminated string\"; scanError(lineNumber, errorStr); return new easy.SyntacticAnalyzer.Token(easy.SyntacticAnalyzer.TokenKind.ERROR, errorStr, new easy.SyntacticAnalyzer.Line(lineNumber)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8853/buggy-version/easy.SyntacticAnalyzer.Scanner.java", "BodyUseAPI": [], "Fixed commit": "49eedd10a00252f837115c701f449f9b6ff9bb7c", "Url": "https://api.github.com/repos/fmenozzi/easy-compiler", "Date": "2014-06-16T20:59:56Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rs.next()) == false) { java.lang.System.out.println(\"Error!!There is NO SCHEMA TO RETRIEVE!\\nThe schema is retrieved from the configuration file\"); unable2Conn = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2294/buggy-version/src.SQLEngine.java", "BodyUseAPI": [], "Fixed commit": "fd52df8102b5a6d58684a8956a33104fbe72b424", "Url": "https://api.github.com/repos/spanoselias/TestingSQLCompliance", "Date": "2017-06-30T16:50:24Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((origin.getSignedProperties().getSignatureProductionPlace()) != null) { countryName = origin.getSignedProperties().getSignatureProductionPlace().getCountryName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1134/buggy-version/src.org.digidoc4j.impl.ddoc.DDocSignature.java", "BodyUseAPI": ["org.digidoc4j.Signature.getSignedProperties()", "origin.getSignedProperties().getSignatureProductionPlace()", "origin.getSignedProperties().getSignatureProductionPlace().getCountryName()"], "Fixed commit": "9d5d378ae0ec53591a71b7ee0bf1c7902ebddcfd", "Url": "https://api.github.com/repos/open-eid/digidoc4j", "Date": "2015-10-02T10:01:34Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((origin.getSignedProperties().getSignatureProductionPlace()) != null) { postalCode = origin.getSignedProperties().getSignatureProductionPlace().getPostalCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1134/buggy-version/src.org.digidoc4j.impl.ddoc.DDocSignature.java", "BodyUseAPI": ["origin.getSignedProperties().getSignatureProductionPlace().getPostalCode()", "origin.getSignedProperties().getSignatureProductionPlace()", "org.digidoc4j.Signature.getSignedProperties()"], "Fixed commit": "9d5d378ae0ec53591a71b7ee0bf1c7902ebddcfd", "Url": "https://api.github.com/repos/open-eid/digidoc4j", "Date": "2015-10-02T10:01:34Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((origin.getSignedProperties().getSignatureProductionPlace()) != null) { city = origin.getSignedProperties().getSignatureProductionPlace().getCity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1134/buggy-version/src.org.digidoc4j.impl.ddoc.DDocSignature.java", "BodyUseAPI": ["origin.getSignedProperties().getSignatureProductionPlace()", "org.digidoc4j.Signature.getSignedProperties()", "origin.getSignedProperties().getSignatureProductionPlace().getCity()"], "Fixed commit": "9d5d378ae0ec53591a71b7ee0bf1c7902ebddcfd", "Url": "https://api.github.com/repos/open-eid/digidoc4j", "Date": "2015-10-02T10:01:34Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((origin.getSignedProperties().getSignatureProductionPlace()) != null) { stateOrProvince = origin.getSignedProperties().getSignatureProductionPlace().getStateOrProvince(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1134/buggy-version/src.org.digidoc4j.impl.ddoc.DDocSignature.java", "BodyUseAPI": ["origin.getSignedProperties().getSignatureProductionPlace().getStateOrProvince()", "origin.getSignedProperties().getSignatureProductionPlace()", "org.digidoc4j.Signature.getSignedProperties()"], "Fixed commit": "9d5d378ae0ec53591a71b7ee0bf1c7902ebddcfd", "Url": "https://api.github.com/repos/open-eid/digidoc4j", "Date": "2015-10-02T10:01:34Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextUserSpaceAvailableBlockIndex == 32) { int nextSystemSpaceAvailableBlockIndex = (lastSystemSpaceBlockReadData.getBlockNumber()) + 1; int nextSystemSpaceAvailableBlockAddress = (lastSystemSpaceBlockReadData.getBlockAddress()) + 32; OS.printLine((\"nextSystemSpaceAvailableBlockIndex: \" + nextSystemSpaceAvailableBlockIndex)); OS.printLine((\"nextSystemSpaceAvailableBlockAddress: \" + nextSystemSpaceAvailableBlockAddress)); OS.printLine((\"nextSystemSpaceAvailableBlockAddress: \" + nextSystemSpaceAvailableBlockAddress)); loadBlockToSystemSpace(nextSystemSpaceAvailableBlockIndex, nextSystemSpaceAvailableBlockAddress); OS.printLine(\"\"); OS.printLine(\"\"); OS.printLine((\"nextSystemSpaceAvailableBlockAddress: \" + nextSystemSpaceAvailableBlockAddress)); OS.printLine((\"nextSystemSpaceAvailableBlockAddress: \" + nextSystemSpaceAvailableBlockAddress)); OS.printLine(\"\"); OS.printLine(\"\"); addSystemBaseBlockToMemoryManager(nextSystemSpaceAvailableBlockAddress, nextSystemSpaceAvailableBlockAddress, blockNumber, readToAddress); lastSystemSpaceBlockReadData.setBlockNumber(nextSystemSpaceAvailableBlockAddress); lastSystemSpaceBlockReadData.setBlockAddress(nextSystemSpaceAvailableBlockAddress); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1515/buggy-version/src.OS.java", "BodyUseAPI": [], "Fixed commit": "52f0ed7a587be41a766424c4706dd0846fc140a5", "Url": "https://api.github.com/repos/mflorez/cs-os-a2", "Date": "2012-03-18T05:47:51Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["compile.analyze.ModuleAnalyzer.analyze(java.lang.Module)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (analyzed) dict.add(module);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1887/buggy-version/src.java.compile.ScriptCompiler.java", "BodyUseAPI": [], "Fixed commit": "d485e55f67bf96dd1857df672ef4d81aa8976b8c", "Url": "https://api.github.com/repos/mcguigan/mesh", "Date": "2013-05-30T15:14:45Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((mur.position) <= (this.getYCenter())) && ((mur.position) <= (objets.recepteur.getYCenter()))) || (((mur.position) >= (this.getYCenter())) && ((mur.position) >= (objets.recepteur.getYCenter())))) { if ((xIntersection >= (mur.debut)) && (xIntersection <= (mur.fin))) { objets.rays.add(new Ray(objets, this.getXCenter(), this.getYCenter(), xIntersection, mur.position, 0)); objets.rays.add(new Ray(objets, xIntersection, mur.position, objets.recepteur.getXCenter(), objets.recepteur.getYCenter(), 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1813/buggy-version/src.Antenne.java", "BodyUseAPI": ["objets.rays.add(Ray)", "objets.rays.add(Ray)", "objets.recepteur.getXCenter()", "objets.recepteur.getYCenter()"], "Fixed commit": "2c0f5be9ad46b632be79fbc8d1e9f26f0e908266", "Url": "https://api.github.com/repos/medwil/RayTracing", "Date": "2017-05-08T19:19:01Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((mur.position) <= (this.getXCenter())) && ((mur.position) <= (objets.recepteur.getXCenter()))) || (((mur.position) >= (this.getXCenter())) && ((mur.position) >= (objets.recepteur.getXCenter())))) { if ((yIntersection >= (mur.debut)) && (yIntersection <= (mur.fin))) { objets.rays.add(new Ray(objets, this.getXCenter(), this.getYCenter(), mur.position, yIntersection, 0)); objets.rays.add(new Ray(objets, mur.position, yIntersection, objets.recepteur.getXCenter(), objets.recepteur.getYCenter(), 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1813/buggy-version/src.Antenne.java", "BodyUseAPI": ["objets.rays.add(Ray)", "objets.recepteur.getXCenter()", "objets.rays.add(Ray)", "objets.recepteur.getYCenter()"], "Fixed commit": "2c0f5be9ad46b632be79fbc8d1e9f26f0e908266", "Url": "https://api.github.com/repos/medwil/RayTracing", "Date": "2017-05-08T19:19:01Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jsonFile.getName().equals(\"document.json\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3246/buggy-version/src.main.java.de.lutana.geodataextractor.entity.FigureCollection.java", "BodyUseAPI": [], "Fixed commit": "6a6060a32b67a26866595006fde938ebd1327cb8", "Url": "https://api.github.com/repos/m-mohr/geodata-extractor", "Date": "2017-11-01T22:08:13Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cookies == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3500/buggy-version/src.com.roc.core.Utils.WebUtil.java", "BodyUseAPI": [], "Fixed commit": "56b31a001251b654034ee2da61b8aab05fe9adf4", "Url": "https://api.github.com/repos/roczpwu/RVFrame", "Date": "2016-11-09T07:07:16Z"},
{"Line": "=>942", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((characterStyle instanceof com.jiaminglu.markdownedittext.InlineImage) || (characterStyle instanceof com.jiaminglu.markdownedittext.MarkdownEditText.LinePrefixImageSpan)) || (characterStyle instanceof android.text.style.ClickableSpan)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/226/buggy-version/library.src.main.java.com.jiaminglu.markdownedittext.MarkdownEditText.java", "BodyUseAPI": [], "Fixed commit": "2138cd30c29500b33ad41c52482cca60cc29a097", "Url": "https://api.github.com/repos/jiaminglu/MarkdownEditText", "Date": "2015-06-15T05:42:39Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (in == 0) return \"0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5594/buggy-version/src.AddBinary.java", "BodyUseAPI": [], "Fixed commit": "3dee71ff109cbb89a6add0c7edb0ea6a8c0b1b09", "Url": "https://api.github.com/repos/ghost2004/Leetcode", "Date": "2012-10-16T06:08:59Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (visible) lblRedraw.addMouseListener(redrawMouseListener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7172/buggy-version/src.view.HorizontalPanel.java", "BodyUseAPI": [], "Fixed commit": "e8b29260eb8d30ddd57701e05553935434fd790a", "Url": "https://api.github.com/repos/chaochao1104/LuckyDraw", "Date": "2013-01-06T00:57:57Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.useDelimiter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (in.hasNext()) { int mid = in.nextInt(); MatchStringList.clear(); f.endMatch(mid); readMatchLists(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1176/buggy-version/gui.MatchPlayPanel.java", "BodyUseAPI": ["java.util.Scanner.nextInt()"], "Fixed commit": "2232c1bb454d08121db9b009e8e5ea7d3cd1c341", "Url": "https://api.github.com/repos/Muroz/cs3716", "Date": "2016-12-01T19:18:03Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j == 0) { descRows++; rubricDescriptions.add(new java.util.ArrayList<java.lang.String>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1359/buggy-version/src.main.java.teammates.common.datatransfer.FeedbackRubricQuestionDetails.java", "BodyUseAPI": [], "Fixed commit": "94b6919371ca6d82909dfbcb36ee624f72ff948b", "Url": "https://api.github.com/repos/TEAMMATES/repo", "Date": "2014-12-17T07:11:40Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.backend.self.SelfManagementController.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(cn.bran.japid.util.StringUtils.isEmpty(merchantName))) { m.name = merchantName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1257/buggy-version/modules.quhao.appserver.app.controllers.backend.self.SelfManagementController.java", "BodyUseAPI": [], "Fixed commit": "76e9ba336b5d569aff09ba72042322892a08c8c2", "Url": "https://api.github.com/repos/withitergroup/quhao", "Date": "2013-09-30T06:39:50Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.backend.self.SelfManagementController.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(cn.bran.japid.util.StringUtils.isEmpty(merchantName))) { m.name = merchantName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1257/buggy-version/modules.quhao.appserver.app.controllers.backend.self.SelfManagementController.java", "BodyUseAPI": [], "Fixed commit": "76e9ba336b5d569aff09ba72042322892a08c8c2", "Url": "https://api.github.com/repos/withitergroup/quhao", "Date": "2013-09-30T06:39:50Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.intermine.bio.dataconversion.NcbiGeneInfoParser.getGeneInfoRecords()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((taxonIds.size()) > (records.size())) { java.util.Set<java.lang.String> taxonIdsCopy = new java.util.HashSet<java.lang.String>(taxonIds); taxonIdsCopy.removeAll(records.keySet()); if ((taxonIdsCopy.size()) > 0) { org.intermine.bio.dataconversion.EntrezGeneIdResolverFactory.LOG.warn((\"No records in gene_info file for species: \" + taxonIdsCopy)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8022/buggy-version/bio.core.main.src.org.intermine.bio.dataconversion.EntrezGeneIdResolverFactory.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Set<org.intermine.bio.dataconversion.GeneInfoRecord>>.keySet()", "java.util.Set<java.lang.String>.removeAll(records.keySet())"], "Fixed commit": "d1bd84befc97afc56ff84638d63118dc6662c1a7", "Url": "https://api.github.com/repos/intermine/intermine", "Date": "2012-10-15T14:57:21Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.todoroo.astrid.actfm.sync.ActFmPreferenceService.isPremiumUser())) attachment.putTransitory(SyncFlags.ACTFM_SUPPRESS_OUTSTANDING_ENTRIES, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8533/buggy-version/astrid.plugin-src.com.todoroo.astrid.actfm.sync.AstridNewSyncMigrator.java", "BodyUseAPI": [], "Fixed commit": "6df92fce1f95982533795214861dd6417b873f76", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2013-03-06T23:05:37Z"},
{"Line": "=>1159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.todoroo.astrid.actfm.sync.ActFmPreferenceService.isPremiumUser())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8533/buggy-version/astrid.src.com.todoroo.astrid.activity.TaskEditFragment.java", "BodyUseAPI": [], "Fixed commit": "6df92fce1f95982533795214861dd6417b873f76", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2013-03-06T23:05:37Z"},
{"Line": "=>1485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tasksToPersist.isEmpty()) { tasksToPersist.wait(5000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5122/buggy-version/server.src.main.java.es.caib.seycon.ng.sync.servei.TaskQueueImpl.java", "BodyUseAPI": ["java.util.LinkedList<es.caib.seycon.ng.sync.engine.TaskHandler>.wait(int)"], "Fixed commit": "cdfd9a04fa20a65590255e8d22f66beb20c2e68c", "Url": "https://api.github.com/repos/SoffidIAM/syncserver", "Date": "2016-12-18T14:36:06Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (task != null) taskQueue.persistTask(task);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5122/buggy-version/server.src.main.java.es.caib.seycon.ng.sync.engine.UpdateTaskStatusThread.java", "BodyUseAPI": ["es.caib.seycon.ng.sync.servei.TaskQueue.persistTask(es.caib.seycon.ng.sync.engine.TaskHandler)"], "Fixed commit": "cdfd9a04fa20a65590255e8d22f66beb20c2e68c", "Url": "https://api.github.com/repos/SoffidIAM/syncserver", "Date": "2016-12-18T14:36:06Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getFirstVisiblePosition()) != ((getCount()) - 1)) { setSelection(((getCount()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1289/buggy-version/chatmessageview.src.main.java.com.github.bassaer.chatmessageview.views.MessageView.java", "BodyUseAPI": [], "Fixed commit": "6ef09e576597b74364e3acd63d9c629e0a0d373a", "Url": "https://api.github.com/repos/sikmi/ChatMessageView", "Date": "2017-06-02T02:34:32Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((features.length) != 0) this.addEntry(new data.Sample(sampleNum, features, label));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6099/buggy-version/src.data.Dataset.java", "BodyUseAPI": ["data.Dataset.addEntry(data.Sample)"], "Fixed commit": "ff05eb4433574d7046146d065a35dc1379e884c2", "Url": "https://api.github.com/repos/vz-chameleon/MachineLearningCourse_Sandbox", "Date": "2017-12-10T15:05:52Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cxf.rs.security.jose.jwt.JwtToken.getClaims()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(iss.equals(claims.getIssuer()))) { throw new java.lang.SecurityException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5731/buggy-version/rt.rs.security.oauth-parent.oauth2.src.main.java.org.apache.cxf.rs.security.oauth2.grants.code.JwtRequestCodeFilter.java", "BodyUseAPI": [], "Fixed commit": "43fafd0440a8d5ffd6eaf4ace917b62fb3f3181b", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2016-02-17T16:17:27Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cxf.rs.security.jose.jwt.JwtClaims.getClaim(OAuthConstants.RESPONSE_TYPE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((tokenResponseType != null) && (!(tokenResponseType.equals(params.getFirst(OAuthConstants.RESPONSE_TYPE))))) { throw new java.lang.SecurityException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5731/buggy-version/rt.rs.security.oauth-parent.oauth2.src.main.java.org.apache.cxf.rs.security.oauth2.grants.code.JwtRequestCodeFilter.java", "BodyUseAPI": [], "Fixed commit": "43fafd0440a8d5ffd6eaf4ace917b62fb3f3181b", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2016-02-17T16:17:27Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((storedFluid.fluidStack) != null) storedFluid.fluidStack.amount = ((int) (java.lang.Math.min(java.lang.Integer.MAX_VALUE, storedFluid.amount)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6197/buggy-version/src.main.java.com.cjm721.overloaded.storage.fluid.LongFluidStorage.java", "BodyUseAPI": ["java.lang.Math.min(int,storedFluid.amount)"], "Fixed commit": "5a1c505859cf74e79a12e5808683776718b5405e", "Url": "https://api.github.com/repos/CJ-MC-Mods/Overloaded", "Date": "2017-10-11T03:35:21Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sagebionetworks.bridge.scripts.StormpathToMySqlMigration.getJsonNumberField(com.fasterxml.jackson.databind.JsonNode,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (consentCreatedOn == null) { consentCreatedOn = 0L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/144/buggy-version/src.main.java.org.sagebionetworks.bridge.scripts.StormpathToMySqlMigration.java", "BodyUseAPI": [], "Fixed commit": "90de2233ec82ec63b56aeb64bb746003f0d90c23", "Url": "https://api.github.com/repos/DwayneJengSage/BridgeDJengScripts", "Date": "2017-06-19T07:51:19Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (audioTrackInitiated) { audioTrack.pause(); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2099/buggy-version/SputifyGUI.src.se.mah.patmic.sputifygui.PlayActivity.java", "BodyUseAPI": [], "Fixed commit": "cb027e5d16d76219f35b2906ae5f633d5a81b054", "Url": "https://api.github.com/repos/P1-Sputify/SputifyGUI", "Date": "2014-05-26T17:17:06Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.refs) != null) { for (org.apache.skywalking.apm.agent.core.context.trace.TraceSegmentRef ref : this.refs) { spanBuilder.addRefs(ref.transform()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/56/buggy-version/apm-sniffer.apm-agent-core.src.main.java.org.apache.skywalking.apm.agent.core.context.trace.AbstractTracingSpan.java", "BodyUseAPI": [], "Fixed commit": "8de1f9c85d0c0b82ecd349b0ee21479c10d78b45", "Url": "https://api.github.com/repos/ascrutae/sky-walking", "Date": "2017-12-14T02:43:00Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((acceptedOffers.size()) > 0) { block.updateOfferStatus(getOperations(recommendations)); }else { block.updateOfferStatus(java.util.Optional.empty()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7307/buggy-version/src.main.java.org.apache.mesos.scheduler.plan.DefaultBlockScheduler.java", "BodyUseAPI": [], "Fixed commit": "e5a99f9063f55fa04ba95d72d14792decb67602c", "Url": "https://api.github.com/repos/mesosphere/dcos-commons", "Date": "2016-08-28T23:27:51Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tinkerpop.blueprints.impls.orient.OrientEdge.getInVertex()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (inVertex != null) { inVertexRecord = inVertex.getRecord(); if (inVertexRecord != null) { final java.lang.String inFieldName = com.tinkerpop.blueprints.impls.orient.OrientVertex.getConnectionFieldName(Direction.IN, edgeClassName, useVertexFieldsForEdgeLabels); inVertexChanged = dropEdgeFromVertex(outVertexEdge, inVertexRecord, inFieldName, inVertexRecord.field(inFieldName)); }else com.orientechnologies.common.log.OLogManager.instance().debug(this, (((\"Found broken link to incoming vertex \" + (inVertex.getIdentity())) + \" while removing edge \") + (getId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/9231/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientEdge.java", "BodyUseAPI": ["com.orientechnologies.common.log.OLogManager.instance().debug(com.tinkerpop.blueprints.impls.orient.OrientEdge,(((\"Found broken link to incoming vertex \" + (inVertex.getIdentity())) + \" while removing edge \") + (getId())))", "com.orientechnologies.orient.core.db.record.OIdentifiable.getRecord()", "com.orientechnologies.orient.core.db.record.OIdentifiable.getIdentity()"], "Fixed commit": "a99914423648f34c819d713695001945ea85c673", "Url": "https://api.github.com/repos/matanshukry/orientdb", "Date": "2015-11-22T18:36:40Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == minScheduledStartTime) minScheduledStartTime = newStartTime;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2629/buggy-version/src.main.java.com.ldbc.driver.WorkloadStreams.java", "BodyUseAPI": [], "Fixed commit": "b0ffee46d203e14f4eced7bada0b50ae07b4c891", "Url": "https://api.github.com/repos/ldbc/ldbc_driver", "Date": "2014-10-13T12:14:37Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mTasks.isEmpty()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1447/buggy-version/TodoToday.src.com.laytonlabs.android.todotoday.TaskLab.java", "BodyUseAPI": [], "Fixed commit": "650347ff0cebae62ad4a3adf446370603e8681ba", "Url": "https://api.github.com/repos/mlayton20/android", "Date": "2015-08-13T07:50:02Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof java.util.List) { value = ((java.util.List) (value)).toArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5624/buggy-version/core.src.main.java.com.gentics.mesh.core.data.schema.impl.AbstractSchemaChange.java", "BodyUseAPI": [], "Fixed commit": "805e372ab58eebbc6d106b9be031439e665ad16a", "Url": "https://api.github.com/repos/gentics/mesh", "Date": "2017-08-09T09:54:30Z"},
{"Line": "=>709", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity instanceof org.rapla.entities.dynamictype.DynamicType) { ((org.rapla.entities.dynamictype.internal.DynamicTypeImpl) (entity)).setOperator(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/97/buggy-version/src.main.java.org.rapla.storage.impl.server.LocalAbstractCachableOperator.java", "BodyUseAPI": [], "Fixed commit": "641f2c0db5f3547bfa85592a93034903154b0ab8", "Url": "https://api.github.com/repos/rapla/rapla", "Date": "2016-01-11T14:06:06Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.fenixedu.domain.thesis.ThesisEvaluationParticipant.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((type == (net.sourceforge.fenixedu.domain.thesis.ThesisParticipationType.ORIENTATOR)) || (type == (net.sourceforge.fenixedu.domain.thesis.ThesisParticipationType.COORIENTATOR))) { net.sourceforge.fenixedu.domain.ExecutionCourse executionCourse = thesisEvaluationParticipant.getThesis().getEnrolment().getExecutionCourseFor(executionSemester); if (executionCourse != null) { addLecturedCurricularUnit(executionCourse.getDegreePresentationString(), executionCourse.getName(), \"OT\", ((float) (0))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6528/buggy-version/src.main.java.net.sourceforge.fenixedu.dataTransferObject.externalServices.TeacherCurricularInformation.java", "BodyUseAPI": [], "Fixed commit": "ed9f69dd41f9aea394499ecddbde3926a26c8f25", "Url": "https://api.github.com/repos/FenixEdu/fenix", "Date": "2013-11-26T14:29:18Z"},
{"Line": "=>678", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((model.getOutputDefinition()) != null) { for (final java.lang.String qi : node.getQuasiIdentifyingAttributes()) { int height = (model.getOutputDefinition().isHierarchyAvailable(qi)) ? model.getOutputDefinition().getHierarchy(qi)[0].length : 0; b.append(\" * \"); b.append(qi); b.append(\": \"); b.append(format.format(asRelativeValue(node.getGeneralization(qi), (height - 1)))); b.append(\" [%]\\n\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/279/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.explore.ViewLattice.java", "BodyUseAPI": ["model.getOutputDefinition().isHierarchyAvailable(java.lang.String)", "model.getOutputDefinition().getHierarchy(java.lang.String)", "org.deidentifier.arx.gui.model.Model.getOutputDefinition()", "org.deidentifier.arx.gui.model.Model.getOutputDefinition()"], "Fixed commit": "dea6cbafd744b5802b36531e8d93858fce1e6d8e", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-09-01T16:28:02Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (variableDescriptor.isPlanningValuesCacheable()) { if ((minimumCacheType.compareTo(SelectionCacheType.PHASE)) < 0) { minimumCacheType = org.drools.planner.core.heuristic.selector.common.SelectionCacheType.PHASE; } }else { if ((minimumCacheType.compareTo(SelectionCacheType.STEP)) < 0) { minimumCacheType = org.drools.planner.core.heuristic.selector.common.SelectionCacheType.STEP; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5938/buggy-version/drools-planner-core.src.main.java.org.drools.planner.config.heuristic.selector.value.ValueSelectorConfig.java", "BodyUseAPI": [], "Fixed commit": "a27e8284abb49bc72d4106da0c7c31a57f594e69", "Url": "https://api.github.com/repos/etirelli/drools-planner", "Date": "2012-12-23T10:17:32Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bauble_app.bauble.StoryObject.grabUniqueId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(this.mKeys.contains(key))) { this.mKeys.add(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2945/buggy-version/app.src.main.java.com.bauble_app.bauble.StorySingleton.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "97051e1bb6baa873b8fbebbe33bfdf4ee4febf0b", "Url": "https://api.github.com/repos/eduardrg/TellToo", "Date": "2017-05-30T08:07:30Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.mail.park.customviews.FlowLayout.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((currentView.getLayoutParams().height) == (LayoutParams.MATCH_PARENT)) { h = maxHeight; }else { h = currentView.getLayoutParams().height; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7277/buggy-version/app.src.main.java.ru.mail.park.customviews.FlowLayout.java", "BodyUseAPI": ["android.view.View.getLayoutParams()"], "Fixed commit": "38ee32a7be59c50bc6f6541e3fd3d1f56171c44f", "Url": "https://api.github.com/repos/IlyaNikk/Lecture6-CustomViews", "Date": "2017-04-11T20:14:24Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.mail.park.customviews.FlowLayout.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((currentView.getLayoutParams().width) == (LayoutParams.MATCH_PARENT)) { w = maxWidth; }else { w = currentView.getLayoutParams().width; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7277/buggy-version/app.src.main.java.ru.mail.park.customviews.FlowLayout.java", "BodyUseAPI": ["android.view.View.getLayoutParams()"], "Fixed commit": "38ee32a7be59c50bc6f6541e3fd3d1f56171c44f", "Url": "https://api.github.com/repos/IlyaNikk/Lecture6-CustomViews", "Date": "2017-04-11T20:14:24Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["logic.mark.Incomplete.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (task.getStartDateTime().isAfter(java.time.LocalDateTime.now())) { task.setStatus(logic.mark.STATUS_INCOMPLETE); logger.log(java.util.logging.Level.INFO, \"Status changed to \\'incomplete\\'\"); }else { task.setStatus(logic.mark.STATUS_OVERDUE); logger.log(java.util.logging.Level.INFO, \"Status changed to \\'overdue\\'\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8954/buggy-version/src.logic.mark.Incomplete.java", "BodyUseAPI": ["common.TaskObject.setStatus(logic.mark.STATUS_OVERDUE)", "common.TaskObject.setStatus(logic.mark.STATUS_INCOMPLETE)"], "Fixed commit": "d86d53dd83a93c5accf63c11fe46a28b1f1c14df", "Url": "https://api.github.com/repos/cs2103jan2016-t11-3j/main", "Date": "2016-04-06T19:21:53Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNull(_password)) { _password = com.liferay.portal.kernel.util.StringPool.BLANK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5276/buggy-version/shared.solr4-shared.src.com.liferay.portal.search.solr.http.BasicAuthPoolingHttpClientFactory.java", "BodyUseAPI": [], "Fixed commit": "bbca589c52c228b7135688441c3e38f7610b04de", "Url": "https://api.github.com/repos/laszlocsontos/liferay-plugins", "Date": "2014-11-28T11:50:31Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hiriver.unbiz.mysql.lib.protocol.Position.factory()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pos.getPos()) < (columnMetaDef.length)) { throw new java.lang.RuntimeException(\"meta info parse error.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1499/buggy-version/hiriver-modules.mysql-proto.src.main.java.com.hiriver.unbiz.mysql.lib.protocol.binlog.event.TableMapEvent.java", "BodyUseAPI": [], "Fixed commit": "f1241bd0ae9543de75ba90ccf5bef625cc5db27e", "Url": "https://api.github.com/repos/rolandhe/hiriver", "Date": "2016-03-05T07:56:03Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getKeyChar()) == 'o') { loadCustomImage(); }else if ((key) == 's') { mesh.saveAsSTL(sketchPath(((\"faceit-\" + (toxi.util.DateUtils.timeStamp())) + \".stl\"))); }else if ((e.getKeyChar()) == 'w') { wireframeMode = !(wireframeMode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1536/buggy-version/src.studio4faceit.Studio4Faceit.java", "BodyUseAPI": ["java.awt.event.KeyEvent.getKeyChar()"], "Fixed commit": "d946f01ba441429fb8a7f2eea9d987914f36441e", "Url": "https://api.github.com/repos/joonasrouhiainen/studio4-faceit", "Date": "2012-12-14T19:26:03Z"},
{"Line": "=>786", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (radio.isAttached()) { handleMuteRequest(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4444/buggy-version/app.src.main.java.com.freshollie.monkeyboarddabradio.playback.RadioPlayerService.java", "BodyUseAPI": [], "Fixed commit": "b76631cbb7911b235ca1e1871f58a33ee8952d64", "Url": "https://api.github.com/repos/freshollie/monkeyboard-radio-android", "Date": "2017-02-13T22:22:14Z"},
{"Line": "=>781", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (radio.isAttached()) { handleFocusDuck(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4444/buggy-version/app.src.main.java.com.freshollie.monkeyboarddabradio.playback.RadioPlayerService.java", "BodyUseAPI": [], "Fixed commit": "b76631cbb7911b235ca1e1871f58a33ee8952d64", "Url": "https://api.github.com/repos/freshollie/monkeyboard-radio-android", "Date": "2017-02-13T22:22:14Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRegistered()) return this;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1167/buggy-version/xss-plugin.src.main.java.org.restexpress.plugins.xss.XssPlugin.java", "BodyUseAPI": [], "Fixed commit": "d76332540961d0633b2711e28497f8dd6eaf6911", "Url": "https://api.github.com/repos/RestExpress/PluginExpress", "Date": "2014-04-02T14:53:58Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((authorData.getLanguage()) != null) docBuilder.addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getNameEn())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getNameEn())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getNameEn())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getNameEn()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1251/buggy-version/src.main.java.com.pratilipi.data.SearchAccessorGaeImpl.java", "BodyUseAPI": ["docBuilder.addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getNameEn())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getNameEn())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getNameEn())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getNameEn()))", "authorData.getLanguage().getName()", "com.pratilipi.data.client.AuthorData.getLanguage()", "docBuilder.addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getNameEn())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getNameEn()))", "com.pratilipi.data.client.AuthorData.getLanguage()", "com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())", "com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getNameEn())", "com.pratilipi.data.client.AuthorData.getLanguage()", "authorData.getLanguage().getName()", "com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())", "com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getNameEn())", "authorData.getLanguage().getNameEn()", "com.pratilipi.data.client.AuthorData.getLanguage()", "authorData.getLanguage().getName()", "docBuilder.addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName()))", "authorData.getLanguage().getNameEn()", "com.pratilipi.data.client.AuthorData.getLanguage()", "authorData.getLanguage().getNameEn()", "com.pratilipi.data.client.AuthorData.getLanguage()", "authorData.getLanguage().getNameEn()", "docBuilder.addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName()))", "com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())", "com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())", "com.pratilipi.data.client.AuthorData.getLanguage()", "com.google.appengine.api.search.Document.Builder.addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName()))", "com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getNameEn())", "docBuilder.addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getNameEn()))", "com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getNameEn())", "com.pratilipi.data.client.AuthorData.getLanguage()", "docBuilder.addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName()))", "docBuilder.addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getName())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getNameEn())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getNameEn())).addField(com.google.appengine.api.search.Field.newBuilder().setName(\"language\").setText(authorData.getLanguage().getNameEn()))", "authorData.getLanguage().getName()"], "Fixed commit": "9a3176f7568c2bdce86e081d75d987004e34a019", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-03-14T12:15:01Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((targetUnit.getArmour()) < (weapon.getPower())) { targetUnit.setStructure((((targetUnit.getStructure()) + (targetUnit.getArmour())) - (weapon.getPower()))); if ((targetUnit.getStructure()) < 0) { targetUnit.setStructure(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8104/buggy-version/src.pl.przemek.Model.Model.java", "BodyUseAPI": ["pl.przemek.Model.Units.AbstractUnit.getStructure()", "pl.przemek.Model.Units.AbstractUnit.setStructure(int)", "pl.przemek.Model.Units.AbstractUnit.getStructure()", "pl.przemek.Model.Weapons.AbstractWeapon.getPower()", "pl.przemek.Model.Units.AbstractUnit.setStructure((((targetUnit.getStructure()) + (targetUnit.getArmour())) - (weapon.getPower())))", "pl.przemek.Model.Units.AbstractUnit.getArmour()"], "Fixed commit": "f67d6a7a7cc960e68c921402191c2c1656d08811", "Url": "https://api.github.com/repos/Przemekkielczewski/AnimatedGame", "Date": "2015-10-05T17:13:30Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((other == null) || (!(other instanceof org.apache.crunch.impl.dist.collect.BaseInputTable))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/260/buggy-version/crunch-core.src.main.java.org.apache.crunch.impl.dist.collect.BaseInputTable.java", "BodyUseAPI": [], "Fixed commit": "3a1d474b0514f02a5ce46f6db1fbe2e8abcb03be", "Url": "https://api.github.com/repos/apache/crunch", "Date": "2015-07-28T01:45:23Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["services.TaskService.getTask(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (t != null) { return ok(play.libs.Json.toJson(t)); }else { return badRequest(((\"No shopping item with id \" + id) + \" found\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8812/buggy-version/app.controllers.TaskManager.java", "BodyUseAPI": ["controllers.TaskManager.ok(play.libs.Json.toJson(t))", "play.libs.Json.toJson(models.Task)"], "Fixed commit": "3d225df32e0663a9b1ffbca46a302cecfe0cc40c", "Url": "https://api.github.com/repos/agunderson01/SocialFinance-PlayGroc", "Date": "2017-05-12T20:08:38Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.EntityManager.find(java.lang.Class,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (t != null) { services.impl.TaskServiceImpl.logger.info((((\"Found task with id \" + id) + \" and contents \") + (t.getTitle()))); }else { services.impl.TaskServiceImpl.logger.info(\"No task found with id {}\", id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8812/buggy-version/app.services.impl.TaskServiceImpl.java", "BodyUseAPI": ["org.slf4j.Logger.info((((\"Found task with id \" + id) + \" and contents \") + (t.getTitle())))", "models.Task.getTitle()"], "Fixed commit": "3d225df32e0663a9b1ffbca46a302cecfe0cc40c", "Url": "https://api.github.com/repos/agunderson01/SocialFinance-PlayGroc", "Date": "2017-05-12T20:08:38Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEmpty())) { return ballDepot.removeFirst(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/241/buggy-version/src.de.hpi.javaide.breakout.elements.BallDepot.java", "BodyUseAPI": [], "Fixed commit": "d5246f9ab232419adaf558348eba530656bd7d65", "Url": "https://api.github.com/repos/JanBrandt/openHPImooc", "Date": "2017-05-21T11:53:30Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gate.getGateBlockLocations().isEmpty()) { needsGateManagerUpdate = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1070/buggy-version/src.de.craftinc.gates.commands.CommandOpen.java", "BodyUseAPI": [], "Fixed commit": "d24f0b8fd112c6aa56b629f6672d696e0820a642", "Url": "https://api.github.com/repos/craftinc/craftinc-gates", "Date": "2013-06-23T16:47:17Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needsGateManagerUpdate) { de.craftinc.gates.Plugin.getPlugin().getGatesManager().handleGateLocationChange(gate, null, null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1070/buggy-version/src.de.craftinc.gates.commands.CommandOpen.java", "BodyUseAPI": [], "Fixed commit": "d24f0b8fd112c6aa56b629f6672d696e0820a642", "Url": "https://api.github.com/repos/craftinc/craftinc-gates", "Date": "2013-06-23T16:47:17Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.first) == null) { first = other.first; this.size += other.size(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3090/buggy-version/List.java", "BodyUseAPI": [], "Fixed commit": "c800a42497364b9c86c63f4664f1e95c69c46c59", "Url": "https://api.github.com/repos/vedadsar/Samostalni-rad-7.1.2015", "Date": "2015-01-07T16:41:46Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (serverEtag == null) serverEtag = headers.get(\"Etag\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7194/buggy-version/video_common.src.com.android.volley.toolbox.HttpHeaderParser.java", "BodyUseAPI": [], "Fixed commit": "5579f48bf56b67f3d9c93a6311826d850681693e", "Url": "https://api.github.com/repos/AiAndroid/mobilevideo", "Date": "2015-02-28T11:04:18Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(outputFile.exists())) { outputFile.mkdirs(); outputFile.createNewFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5517/buggy-version/de.tudarmstadt.ukp.dkpro.tc.weka.src.main.java.org.cleartk.classifier.weka.util.WekaUtils.java", "BodyUseAPI": ["java.io.File.createNewFile()", "java.io.File.mkdirs()"], "Fixed commit": "4072178ecdd927715d0280ffbdba7ac35bc163bb", "Url": "https://api.github.com/repos/dkpro/dkpro-tc", "Date": "2013-05-20T15:09:57Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.Hudson.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (hudson.isTeamManagementEnabled()) { hudson.getTeamManager().removeNode(getNodeName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7054/buggy-version/hudson-core.src.main.java.hudson.slaves.AbstractCloudSlave.java", "BodyUseAPI": ["hudson.getTeamManager().removeNode(getNodeName())", "hudson.model.Hudson.getTeamManager()"], "Fixed commit": "3dd7e5695eee197d9e5e4d91104ad690c6e56666", "Url": "https://api.github.com/repos/eclipse/hudson.core", "Date": "2015-05-13T19:10:16Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.Hudson.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (hudson.isTeamManagementEnabled()) { try { hudson.getTeamManager().addNode(null, node.getNodeName()); } catch (java.lang.Exception e) { hudson.slaves.NodeProvisioner.LOGGER.log(java.util.logging.Level.SEVERE, \"Node cannot be added to public team\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7054/buggy-version/hudson-core.src.main.java.hudson.slaves.NodeProvisioner.java", "BodyUseAPI": ["hudson.model.Hudson.getTeamManager()", "hudson.getTeamManager().addNode(<nulltype>,node.getNodeName())"], "Fixed commit": "3dd7e5695eee197d9e5e4d91104ad690c6e56666", "Url": "https://api.github.com/repos/eclipse/hudson.core", "Date": "2015-05-13T19:10:16Z"},
{"Line": "=>1625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(\"null\".equalsIgnoreCase(java.lang.String.valueOf(invoiceDetaill.get(i).getDescription())))) && ((invoiceDetaill.get(i).getDescription()) != null)) { description = invoiceDetaill.get(i).getDescription(); }else { description = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8685/buggy-version/src.java.com.smi.travel.datalayer.bean.master.AJAXBean.java", "BodyUseAPI": ["invoiceDetaill.get(i).getDescription()", "java.util.List<com.smi.travel.datalayer.entity.InvoiceDetail>.get(int)"], "Fixed commit": "6adaee4465498608f195bf57f6621edf8bcc0573", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2016-01-19T04:58:14Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerOne == false) { playerOne = true; }else { playerOne = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7280/buggy-version/Games.src.TicTacToeHelper.java", "BodyUseAPI": [], "Fixed commit": "385e7213c7eec71366089aea5fe6efaf51505dc7", "Url": "https://api.github.com/repos/nutpoasa/Games", "Date": "2013-05-17T23:32:55Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doDrops && ((worldObj.getTileEntity(xi(), yi(), zi())) == (this))) { com.builtbroken.mc.prefab.inventory.InventoryUtility.dropItemStack(toLocation(), drop); if ((getMissileItem()) != null) { com.builtbroken.mc.prefab.inventory.InventoryUtility.dropItemStack(toLocation(), getMissileItem()); setInventorySlotContents(0, null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3814/buggy-version/src.main.java.com.builtbroken.icbm.content.launcher.silo.TileSmallSilo.java", "BodyUseAPI": [], "Fixed commit": "02b110e126ebc7ab51ffdeb65938c970e1146f91", "Url": "https://api.github.com/repos/BuiltBrokenModding/ICBM", "Date": "2016-02-17T13:57:27Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useTypedId) { id = userProfile.getTypedId(); }else { id = userProfile.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2491/buggy-version/cas-server-support-pac4j.src.main.java.org.jasig.cas.support.pac4j.authentication.handler.support.ClientAuthenticationHandler.java", "BodyUseAPI": [], "Fixed commit": "94b70734c76f9ab24178e22a7c7bd30cbd44dc83", "Url": "https://api.github.com/repos/Unicon/cas", "Date": "2014-09-01T11:08:46Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mManager.hasVisiblePieces())) showNewPiece();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1006/buggy-version/app.src.main.java.com.alex_aladdin.geografica.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "57fc09a61f7b2235768ee46ba2a5319a0a132725", "Url": "https://api.github.com/repos/alexal1/Geografica", "Date": "2016-12-12T21:31:28Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_copies) == null) { localCopyImpl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5088/buggy-version/projects.OG-Engine.src.main.java.com.opengamma.engine.value.properties.AdditivePropertiesBuilder.java", "BodyUseAPI": [], "Fixed commit": "a0b52d13dd1a490da5d4ccd8032f126cb42982a6", "Url": "https://api.github.com/repos/OpenGamma/OG-Platform", "Date": "2013-11-26T09:42:14Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(urldisplay.startsWith(\"http\"))) urldisplay = \"http://api.onsalelocal.com/ws/resource/download?path=\" + urldisplay;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8690/buggy-version/app.src.main.java.com.nextshopper.view.ProductGridAdapter.java", "BodyUseAPI": [], "Fixed commit": "31afd8c264f9526138ba3ddd936d55fcffbf94eb", "Url": "https://api.github.com/repos/zhangyongjiang/ishopping-android", "Date": "2015-07-05T05:58:48Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (end < 0) end = text.indexOf(\"Prerequisites:\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7379/buggy-version/src.net.kevxu.purdueassist.course.CatalogDetail.java", "BodyUseAPI": [], "Fixed commit": "def65d2d1333a00ab8392d3fddaa43e43d4e28e3", "Url": "https://api.github.com/repos/kevinxucs/purdue-course-parser", "Date": "2013-02-16T06:10:59Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iRecord == null) iRecord = new com.orientechnologies.orient.core.record.impl.ODocument();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5869/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerJSON.java", "BodyUseAPI": [], "Fixed commit": "53ad994b96b6a4b6eb8878753cbd58381b0f240c", "Url": "https://api.github.com/repos/w3aponx/orientdb", "Date": "2014-02-18T13:49:53Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (commentData.hasContent()) notificationType = NotificationType.COMMENT_ADD.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/849/buggy-version/src.com.claymus.pagecontent.comments.CommentsContentHelper.java", "BodyUseAPI": [], "Fixed commit": "f3272dfbca1201ab94100c239473b5507d7e1d16", "Url": "https://api.github.com/repos/Claymus/claymus", "Date": "2015-06-10T12:29:20Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (CustomOreGen.Client.ClientState.clearDisplayLists) { CustomOreGen.Client.ClientState.clearDebuggingDisplayLists(); CustomOreGen.Client.ClientState.clearDisplayLists = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5800/buggy-version/src.main.java.CustomOreGen.Client.ClientState.java", "BodyUseAPI": [], "Fixed commit": "306b0acd61a66d7287be0df0f5cd9bd92055cd66", "Url": "https://api.github.com/repos/lawremi/CustomOreGen", "Date": "2016-10-14T11:46:06Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fields) == null) { this.fields = new fhv.eclipse2013.wwe.contract.IField[this.getHeight()][]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/367/buggy-version/WWE.src.fhv.eclipse2013.wwe.impl.scope.AbstractScope.java", "BodyUseAPI": [], "Fixed commit": "573436dfe4197b19057027dc3ce1d8684b932b77", "Url": "https://api.github.com/repos/sla89/WWE", "Date": "2013-06-14T08:41:08Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == o) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3150/buggy-version/modules.org.restlet.src.org.restlet.util.WrapperList.java", "BodyUseAPI": [], "Fixed commit": "6c056c3409d24c5ac6920d2010f8a14e6e87fc91", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2016-12-10T15:02:36Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.openminted.workflow.api.ExecutionStatus.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (Status.FINISHED.equals(status)) { msg.setResultingCorpusID(executionStatus.getCorpusID()); }else if (Status.FAILED.equals(status)) { msg.setError(executionStatus.getFailureCause().getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7210/buggy-version/src.main.java.eu.openminted.workflow.service.WorkflowServiceImpl.java", "BodyUseAPI": ["Status.FAILED.equals(eu.openminted.workflow.api.ExecutionStatus.Status)"], "Fixed commit": "08daa5ce590bb68b8055adcaf0468d8e487d19d9", "Url": "https://api.github.com/repos/openminted/omtd-workflow-service", "Date": "2017-12-07T14:29:50Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<android.widget.ImageView>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((imageView.getParent()) == null) ((android.support.v4.view.ViewPager) (container)).addView(imageView, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6852/buggy-version/Android.NHProject.NewsHub.src.main.java.org.gnuton.newshub.adapters.ImageAdapter.java", "BodyUseAPI": ["android.view.ViewGroup.addView(android.widget.ImageView,int)"], "Fixed commit": "104f12b5d8b4e406ba3e7c8dde0eb3609a4923e2", "Url": "https://api.github.com/repos/gnuton/Playground", "Date": "2013-11-19T19:21:39Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.groovy.eclipse.codeassist.processors.StatementAndExpressionCompletionProcessor.getContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((context.location) == (org.codehaus.groovy.eclipse.codeassist.requestor.ContentAssistLocation.STATEMENT)) { org.codehaus.groovy.ast.ClassNode closureThis = requestor.currentScope.getThis(); if ((closureThis != null) && (!(closureThis.equals(completionType)))) { isStatic1 = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8088/buggy-version/ide.org.codehaus.groovy.eclipse.codeassist.completion.src.org.codehaus.groovy.eclipse.codeassist.processors.StatementAndExpressionCompletionProcessor.java", "BodyUseAPI": [], "Fixed commit": "ce302a3b75457462f58e013de038e21df00e22e9", "Url": "https://api.github.com/repos/groovy/groovy-eclipse", "Date": "2017-11-03T20:43:29Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getConfigs().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (acceptableUrls != null) { for (java.lang.String acceptableUrl : acceptableUrls) { if (href.startsWith(acceptableUrl)) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4832/buggy-version/crawler4j.src.main.java.edu.uci.ics.crawler4j.example.config.MyCrawler.java", "BodyUseAPI": [], "Fixed commit": "82eb6617e729655bc10e455bb86dfc47604e6e40", "Url": "https://api.github.com/repos/coffeechris/crawler4j", "Date": "2011-12-20T20:40:50Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trConfig) == null) trConfig = new org.jtrfp.trcl.core.TRConfiguration();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2119/buggy-version/src.main.java.org.jtrfp.trcl.core.TR.java", "BodyUseAPI": [], "Fixed commit": "a499a6bd6b27c408d69a4d1e51163814b4c0b3f5", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-01-08T22:47:03Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (displayName != null) { this.displayName = displayName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8109/buggy-version/src.edu.gatech.cs2340.evergreen.Account.java", "BodyUseAPI": [], "Fixed commit": "3f11b753d13edcdf73718bdf9031762aee7d46b4", "Url": "https://api.github.com/repos/iamadamcooke/EverGreen", "Date": "2014-04-01T01:27:40Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m_value.param_index) == (-1)) { com.dronegcs.mavlink.is.drone.parameters.Parameter currentParam = getParameter(param.name); if (currentParam == null) { LOGGER.error(\"Unfamiliar Parameter {}\", param); return; } currentParam.value = param.value; }else { parameters.put(((int) (m_value.param_index)), param); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8121/buggy-version/MavlinkProtocol.src.main.java.com.dronegcs.mavlink.is.drone.profiles.Parameters.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, com.dronegcs.mavlink.is.drone.parameters.Parameter>.put(((int) (m_value.param_index)),com.dronegcs.mavlink.is.drone.parameters.Parameter)"], "Fixed commit": "8b7faa41dbbefd8af7676ff30062ddb99b5c6028", "Url": "https://api.github.com/repos/taljmars/Mavlink", "Date": "2017-08-13T03:13:00Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((proof) != null) { execute(proof, starting_state, event, internal_proof_event_queue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/233/buggy-version/src.engine.GraphSimulator.java", "BodyUseAPI": [], "Fixed commit": "65a7f70671871fc088c17ad87af25da5e342521a", "Url": "https://api.github.com/repos/Gueust/StateMachineModelization", "Date": "2014-06-02T09:06:08Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((proof) != null) { executeProof(starting_state, transfert_list); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/233/buggy-version/src.engine.GraphSimulator.java", "BodyUseAPI": [], "Fixed commit": "65a7f70671871fc088c17ad87af25da5e342521a", "Url": "https://api.github.com/repos/Gueust/StateMachineModelization", "Date": "2014-06-02T09:06:08Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (methodEnv.getName().equals(\"getNextMission\")) { return nodeName.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7733/buggy-version/hijactools.trunk.src.java.hijac.tools.tightrope.visitors.MethodBodyVisitor.java", "BodyUseAPI": [], "Fixed commit": "ead10e3e9ba4fe5627784c08a992bbb59723d1f0", "Url": "https://api.github.com/repos/scjl2/circusTranslation", "Date": "2017-02-28T21:23:57Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cache) == null) { cache = java.io.File.createTempFile(\"_text_cache_\", \".tmp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7105/buggy-version/src.main.java.pw.phylame.commons.io.TextCache.java", "BodyUseAPI": [], "Fixed commit": "8dea7aa9ad91254412e60b242d6b9aa5b6ce3a7e", "Url": "https://api.github.com/repos/phylame/ycl", "Date": "2017-02-14T06:07:09Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<?, ?>.getValue()", "java.util.Map<?, ?>.get(tempEntry.getKey())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!((tempActualValue instanceof java.util.Map) && (tempReferenceValue instanceof java.util.Map))) { try { tempConvertedReferenceValue = (tempActualValue != null) ? valueConverter.convertValue(tempActualValue.getClass(), tempReferenceValue, UnresolvableVariableHandling.RESOLVE_TO_NULL_VALUE) : tempReferenceValue; } catch (de.gebit.integrity.utils.ParameterUtil.UnresolvableVariableException exc) { exc.printStackTrace(); } catch (de.gebit.integrity.operations.UnexecutableException exc) { exc.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8988/buggy-version/de.gebit.integrity.runner.src.de.gebit.integrity.runner.comparator.DefaultResultComparator.java", "BodyUseAPI": ["java.lang.Object.getClass()", "de.gebit.integrity.parameter.conversion.ValueConverter.convertValue(java.lang.Class<? extends java.lang.Object>,java.lang.Object,UnresolvableVariableHandling.RESOLVE_TO_NULL_VALUE)"], "Fixed commit": "3b2731fa6cfd3f06c5fe30d459909ab2bb8d22b5", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2013-08-09T11:37:31Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.trackmate.spatial.SpatioTemporalIndex<V>.getSpatialIndex(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (index == null) return null; else return new net.trackmate.revised.bdv.overlay.wrap.SpatialIndexWrapper<V, E>(graphWrapper, index);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6360/buggy-version/src.main.java.net.trackmate.revised.bdv.overlay.wrap.SpatioTemporalIndexWrapper.java", "BodyUseAPI": [], "Fixed commit": "83b6ca79f9dc8b466912413d5a55f43fda4ab733", "Url": "https://api.github.com/repos/fiji/TrackMate3", "Date": "2015-10-29T18:08:03Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p_col > 2) { gui.ThreadPanel.setTabIndex((p_col - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1679/buggy-version/src.main.java.gui.ThreadThreadPanel.java", "BodyUseAPI": ["gui.ThreadPanel.setTabIndex(int)"], "Fixed commit": "f777c09d5b787c3d1c91dafbbd0d25f1b7d330f3", "Url": "https://api.github.com/repos/talmeym/threads", "Date": "2016-06-15T11:32:08Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.getThreadItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((x_threadItem instanceof java.lang.Thread) && (p_col > 2)) { gui.ThreadPanel.setTabIndex((p_col - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1679/buggy-version/src.main.java.gui.ThreadContentsPanel.java", "BodyUseAPI": ["gui.ThreadPanel.setTabIndex(int)"], "Fixed commit": "f777c09d5b787c3d1c91dafbbd0d25f1b7d330f3", "Url": "https://api.github.com/repos/talmeym/threads", "Date": "2016-06-15T11:32:08Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSnackbar) != null) mSnackbar.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3265/buggy-version/app.src.main.java.evsapp.sid.com.evsapp.LocationBased.java", "BodyUseAPI": [], "Fixed commit": "8094bbaee74499bd7299eda39fc96765f773d065", "Url": "https://api.github.com/repos/sid0893/evsapp", "Date": "2015-05-16T17:48:01Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(validPoint(pushPosX, pushPosY))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6989/buggy-version/app.src.main.java.spencerspenst.psychopath.Play.java", "BodyUseAPI": [], "Fixed commit": "a8d72a6396a627bc5e40ce3c0a10b3081ed8687d", "Url": "https://api.github.com/repos/sspenst/psychopath", "Date": "2016-12-30T01:19:15Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rc.length) > 0) { if ((rc[((rc.length) - 1)]) == '/') { java.lang.String newResult = \"\"; for (int i = 0; i < ((rc.length) - 1); i++) { newResult += rc[i]; } return newResult; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4619/buggy-version/src.main.java.project.emulator.framework.api.config.symbol.SymbolTable.java", "BodyUseAPI": [], "Fixed commit": "77ed4eed2139014f58c884256ac8ab73353e0377", "Url": "https://api.github.com/repos/DongyuZhao/csirac", "Date": "2016-01-25T01:48:56Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (upgradeLevel >= upgradeCap) { nextUpgradeCostText = ((contagionJVM.Helper.ColorToken.Red()) + \"MAX\") + (contagionJVM.Helper.ColorToken.End()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3445/buggy-version/src.contagionJVM.Dialog.Conversation_AllocateSkillPoints.java", "BodyUseAPI": [], "Fixed commit": "235c9f91f2e7983df1414ec0e25f5f35f7e3622c", "Url": "https://api.github.com/repos/zunath/Contagion_JVM", "Date": "2015-03-29T19:25:57Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jObj.get(\"entityAddress\").toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fileName.charAt(0)) == '/') { fileName = fileName.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/162/buggy-version/src.edu.oregonstate.edu.Replay.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "3e03a6c4fbf48a89990ebe9b686e60f9d3f34c8f", "Url": "https://api.github.com/repos/MichaelHilton/CommandLineReplayProject", "Date": "2014-06-17T21:56:55Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.geneix.bottle.WordReader.LOG.isInfoEnabled()) { com.geneix.bottle.WordReader.LOG.info(\"EOF Reached\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6747/buggy-version/wordcount.src.main.java.com.geneix.bottle.WordReader.java", "BodyUseAPI": ["org.apache.commons.logging.Log.info(java.lang.String)"], "Fixed commit": "11c93f4bc95de9d6d16b255bfbdf1d621aa6e52f", "Url": "https://api.github.com/repos/eastlondoner/bottle", "Date": "2014-10-20T19:24:36Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == (-1)) { return bytesRead; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6747/buggy-version/wordcount.src.main.java.com.geneix.bottle.CodePointReader.java", "BodyUseAPI": [], "Fixed commit": "11c93f4bc95de9d6d16b255bfbdf1d621aa6e52f", "Url": "https://api.github.com/repos/eastlondoner/bottle", "Date": "2014-10-20T19:24:36Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.BitmapFactory.decodeFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (origBitmap == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6670/buggy-version/library.src.main.java.com.afollestad.materialcamera.internal.StillshotPreviewFragment.java", "BodyUseAPI": [], "Fixed commit": "57fdf5d08ba3aac7f429e976c0d1462ef94c29aa", "Url": "https://api.github.com/repos/popalexcristian/material-camera", "Date": "2017-11-10T15:11:08Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/630/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "c57a132c1273a2970f368a1cad7e8ab144c1c042", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-12T09:00:11Z"},
{"Line": "=>1084", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((translation) != null) minkodkod.MinSolver.logger.debug((\"before claim: \" + (((minkodkod.MinSATSolver) (translation.cnf())).printConstraints())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7056/buggy-version/src.main.java.minkodkod.MinSolver.java", "BodyUseAPI": [], "Fixed commit": "b421bb3c7a34785fd7cff3f6df7fac2da299f02e", "Url": "https://api.github.com/repos/ahmadsalim/minkodkod", "Date": "2015-11-30T15:59:47Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((args.length) == 0) || (((args.length) >= 1) && ((args[0]) == 0))) mScroll.fullScroll(ScrollView.FOCUS_DOWN); else if (((args.length) >= 1) && ((args[0]) == 1)) mScroll.fullScroll(ScrollView.FOCUS_UP);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7430/buggy-version/src.main.java.net.atomarea.flowx.ui.FxUi.java", "BodyUseAPI": [], "Fixed commit": "5a935abbc59f772a435b624792547aa4591ffa58", "Url": "https://api.github.com/repos/atomarea/FlowX", "Date": "2016-05-13T09:10:11Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileDownloadJobs.size()) > 0) { com.seveniu.fileDownloader.CountDownExecutor countDownExecutor = new com.seveniu.fileDownloader.CountDownExecutor(executor, fileDownloadJobs); countDownExecutor.execute(((urls.size()) * 10), java.util.concurrent.TimeUnit.SECONDS); logger.info(\"downloader thread active num : {}\", executor.getActiveCount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4900/buggy-version/src.main.java.com.seveniu.fileDownloader.FileDownloadManager.java", "BodyUseAPI": [], "Fixed commit": "ccb4db09fb2c5e767ef84764dd0dc88e11b4ef22", "Url": "https://api.github.com/repos/seveniu/FileDownload", "Date": "2017-08-21T16:11:35Z"},
{"Line": "=>634", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((e.getEntity()) instanceof KartoffelKanaalPlugin.plugin.TNTPrimed) || ((e.getEntity()) instanceof org.bukkit.entity.minecart.PoweredMinecart)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8749/buggy-version/plugin.Main.java", "BodyUseAPI": [], "Fixed commit": "9584cf5c8548c3fc98ebdcd35742e5e38bf07377", "Url": "https://api.github.com/repos/VincentK2000/KartoffelKanaalPlugin", "Date": "2015-01-09T16:57:10Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (level <= 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6274/buggy-version/ZONE-extractor.ZONE-plugin-OpenCalais.src.main.java.org.zoneproject.extractor.plugin.opencalais.openCalaisExtractor.java", "BodyUseAPI": [], "Fixed commit": "86da6c42501ec1715186cf72da330679a7e6b67a", "Url": "https://api.github.com/repos/descl/ZONE", "Date": "2012-12-17T15:52:27Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (threads < 1) { throw new java.lang.IllegalArgumentException(\"The number of threads must be greater than 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3375/buggy-version/src.nu.xell.util.functional.Mapping.java", "BodyUseAPI": [], "Fixed commit": "6e8cbdbbba811be3ee8ae486ef98e666ae47487e", "Url": "https://api.github.com/repos/taxell/JUtility", "Date": "2013-11-05T14:15:17Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cgeo.geocaching.utils.Log.isDebug) { throw new java.lang.RuntimeException(\"Aborting on Log.e()\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7823/buggy-version/main.src.cgeo.geocaching.utils.Log.java", "BodyUseAPI": [], "Fixed commit": "82d9c13088d52f2ca8f0ba9307416953b93842fd", "Url": "https://api.github.com/repos/UniQP/cgeo", "Date": "2016-04-03T15:56:29Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cgeo.geocaching.utils.Log.isDebug) { if (t instanceof java.lang.RuntimeException) { throw ((java.lang.RuntimeException) (t)); } throw new java.lang.RuntimeException(\"Aborting on Log.e()\", t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7823/buggy-version/main.src.cgeo.geocaching.utils.Log.java", "BodyUseAPI": [], "Fixed commit": "82d9c13088d52f2ca8f0ba9307416953b93842fd", "Url": "https://api.github.com/repos/UniQP/cgeo", "Date": "2016-04-03T15:56:29Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["info.ata4.io.DataReader.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nextOfs == 0) { nextOfs = (lump.getOffset()) + (lump.getLength()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2303/buggy-version/src.main.java.info.ata4.bsplib.BspFile.java", "BodyUseAPI": [], "Fixed commit": "d166792f125c8353dd98a3bbf01b90bf22774d22", "Url": "https://api.github.com/repos/ata4/bspsrc", "Date": "2016-11-04T12:15:59Z"},
{"Line": "=>678", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (missingValue == null) { return singleton; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2437/buggy-version/core.src.main.java.org.elasticsearch.search.MultiValueMode.java", "BodyUseAPI": [], "Fixed commit": "838d73e2b8b55417bb3d0ac2e3581855795103f9", "Url": "https://api.github.com/repos/elastic/elasticsearch", "Date": "2017-04-11T13:50:50Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value != null) { formBuilder = formBuilder.add(name, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2493/buggy-version/src.main.java.co.omise.models.Params.java", "BodyUseAPI": ["FormBody.Builder.add(java.lang.String,java.lang.String)"], "Fixed commit": "9008aee918b3d2d41b098bf4095aee1621e8a78f", "Url": "https://api.github.com/repos/omise/omise-java", "Date": "2016-05-11T06:49:03Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.DatabaseMetaData.getColumns(<nulltype>,java.lang.String,java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.next()) { rs.previous(); return rs; }else { return dmd.getColumns(null, schemaName.toUpperCase(), tableName.toUpperCase(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/951/buggy-version/src.main.java.fi.thl.pivot.datasource.JDBCSource.java", "BodyUseAPI": ["java.sql.ResultSet.previous()"], "Fixed commit": "87ffb4f905213ed558f2a243cfbed509ae4a21c6", "Url": "https://api.github.com/repos/THLfi/tiku", "Date": "2016-11-23T16:46:41Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (next != null) { next.handle(request, response); }else { response.setStatus(Status.SERVER_ERROR_INTERNAL); org.restlet.engine.CompositeHelper.getHelped().getLogger().log(java.util.logging.Level.SEVERE, ((\"The \" + (org.restlet.engine.CompositeHelper.getHelped().getClass().getName())) + \" class has no Restlet defined to process calls. Maybe it wasn't properly started.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3910/buggy-version/modules.org.restlet.src.org.restlet.engine.CompositeHelper.java", "BodyUseAPI": ["org.restlet.Restlet.handle(org.restlet.Request,org.restlet.Response)"], "Fixed commit": "b7c7bf60effae284a5ec1597f7d742b4b6f43864", "Url": "https://api.github.com/repos/bongarde/restlet-framework-java", "Date": "2014-05-01T13:56:03Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (attr.equals(StdAttr.LABEL)) { if (labler.hasNext(circuit)) { if ((comps.size()) > 1) { act.set(comp, attr, labler.GetNext(circuit, comp.getFactory())); }else { if (getAttributeSet().getValue(StdAttr.LABEL).equals(((java.lang.String) (value)))) return; else act.set(comp, attr, labler.GetCurrent(circuit, comp.getFactory())); } }else act.set(comp, attr, \"\"); }else act.set(comp, attr, value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6792/buggy-version/src.com.cburch.logisim.gui.main.AttrTableSelectionModel.java", "BodyUseAPI": ["com.cburch.logisim.tools.SetAttributeAction.set(com.cburch.logisim.comp.Component,com.cburch.logisim.data.Attribute<java.lang.Object>,java.lang.String)", "com.cburch.logisim.tools.SetAttributeAction.set(com.cburch.logisim.comp.Component,com.cburch.logisim.data.Attribute<java.lang.Object>,labler.GetCurrent(circuit, comp.getFactory()))", "com.cburch.logisim.tools.SetAttributeAction.set(com.cburch.logisim.comp.Component,com.cburch.logisim.data.Attribute<java.lang.Object>,java.lang.Object)", "com.cburch.logisim.tools.SetAttributeAction.set(com.cburch.logisim.comp.Component,com.cburch.logisim.data.Attribute<java.lang.Object>,labler.GetNext(circuit, comp.getFactory()))"], "Fixed commit": "f2a62825e618e8ccbde9f1429c10d3e99e354292", "Url": "https://api.github.com/repos/reds-heig/logisim-evolution", "Date": "2016-02-11T12:05:41Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(worldObj.isRemote)) transmitPower();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4412/buggy-version/src.main.java.zmaster587.libVulpes.tile.TileEntityForgeProducer.java", "BodyUseAPI": [], "Fixed commit": "d55cb0f24c64271becc127bd1e832090267f9c7f", "Url": "https://api.github.com/repos/zmaster587/libVulpes", "Date": "2017-01-18T19:44:48Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(worldObj.isRemote)) { for (net.minecraftforge.common.util.ForgeDirection dir : net.minecraftforge.common.util.ForgeDirection.VALID_DIRECTIONS) { net.minecraft.tileentity.TileEntity tile = worldObj.getTileEntity(((xCoord) + (dir.offsetX)), ((yCoord) + (dir.offsetY)), ((zCoord) + (dir.offsetZ))); if (tile instanceof cofh.api.energy.IEnergyReceiver) { cofh.api.energy.IEnergyReceiver handle = ((cofh.api.energy.IEnergyReceiver) (tile)); storage.getEnergyStored(); storage.extractEnergy(handle.receiveEnergy(dir.getOpposite(), storage.getEnergyStored(), false), false); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4412/buggy-version/src.main.java.zmaster587.libVulpes.tile.energy.TilePlugOutputRF.java", "BodyUseAPI": [], "Fixed commit": "d55cb0f24c64271becc127bd1e832090267f9c7f", "Url": "https://api.github.com/repos/zmaster587/libVulpes", "Date": "2017-01-18T19:44:48Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.antcontrib.design.Design.retreivePack(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (p == null) throw new org.apache.tools.ant.BuildException(net.sf.antcontrib.design.Design.getNoDefinitionError(className), location);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7958/buggy-version/trunk.ant-contrib.src.java.net.sf.antcontrib.design.Design.java", "BodyUseAPI": [], "Fixed commit": "5fc3da4c48a83334eba0216f65ab93818e4da5b0", "Url": "https://api.github.com/repos/crazy-max/ant-contrib", "Date": "2006-10-16T16:50:25Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((PROXY_URL) != null) && ((PROXY_PORT) != null)) { org.apache.http.HttpHost proxy = new org.apache.http.HttpHost(PROXY_URL, java.lang.Integer.parseInt(PROXY_PORT)); client.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2576/buggy-version/integration.adapter-core.src.main.java.org.keycloak.adapters.HttpClientBuilder.java", "BodyUseAPI": [], "Fixed commit": "8b46c0b1dea7615210147a2aac39519ecb01deb1", "Url": "https://api.github.com/repos/alizarion/keycloak", "Date": "2015-11-11T22:36:47Z"},
{"Line": "=>2806", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((picocli.CommandLine.Help.Ansi.isWindows) && (picocli.CommandLine.Help.Ansi.isXterm)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3759/buggy-version/src.main.java.picocli.CommandLine.java", "BodyUseAPI": [], "Fixed commit": "070632a0e98df56b4c4eae70a28e84e0cb9ed52a", "Url": "https://api.github.com/repos/remkop/picocli", "Date": "2017-04-19T17:23:20Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (vms.remove(e.getVM())) { vms.add(e.getNewVM()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5634/buggy-version/api.src.main.java.btrplace.model.constraint.checker.AllowAllConstraintChecker.java", "BodyUseAPI": ["java.util.Set<btrplace.model.VM>.add(e.getNewVM())", "btrplace.model.constraint.checker.SubstitutedVMEvent.getNewVM()"], "Fixed commit": "f084e1a4bed293fbb8158e4af5ab95f0ba4b988f", "Url": "https://api.github.com/repos/fhermeni/btrplace-solver", "Date": "2013-06-04T11:55:56Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getSalePrice()) != null) { price = price.add(item.getSalePrice()); }else { price = price.add(item.getRetailPrice()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/9088/buggy-version/core.broadleaf-framework.src.main.java.org.broadleafcommerce.core.catalog.domain.ProductBundleImpl.java", "BodyUseAPI": ["org.broadleafcommerce.core.catalog.domain.SkuBundleItem.getRetailPrice()", "org.broadleafcommerce.common.money.Money.add(item.getSalePrice())", "org.broadleafcommerce.core.catalog.domain.SkuBundleItem.getSalePrice()", "org.broadleafcommerce.common.money.Money.add(item.getRetailPrice())"], "Fixed commit": "0c9244ca6b738014c3dd1dfe2269461883df47cc", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2012-09-24T02:53:20Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.media.RingtoneManager.getRingtone(getActivity(),android.net.Uri.parse(audioLinkPath))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(ringtone.isPlaying())) { ringtone.play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7334/buggy-version/MyMemories.src.com.ariesmcrae.mymemories.ui.story.StoryViewFragment.java", "BodyUseAPI": ["android.media.Ringtone.play()"], "Fixed commit": "2f6bcbd75f569c9647d84c1022ec932755af0eb8", "Url": "https://api.github.com/repos/ariesmcrae/MyMemories", "Date": "2014-03-26T23:13:04Z"},
{"Line": "=>1206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opentripplanner.util.DateUtils.toDate(java.lang.String,java.lang.String,java.util.TimeZone)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (date == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2126/buggy-version/otp-core.src.main.java.org.opentripplanner.api.ws.TransitIndex.java", "BodyUseAPI": [], "Fixed commit": "79f14a5cff3c2c1a0df5515bfaed6eec28f7e41e", "Url": "https://api.github.com/repos/goabout/OpenTripPlanner", "Date": "2013-12-05T11:36:25Z"},
{"Line": "=>1022", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opentripplanner.api.ws.TransitIndex.makeCalendar(java.util.TimeZone,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (calendar == null) { return new org.opentripplanner.api.model.error.TransitError(\"Date format can't be parsed.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2126/buggy-version/otp-core.src.main.java.org.opentripplanner.api.ws.TransitIndex.java", "BodyUseAPI": [], "Fixed commit": "79f14a5cff3c2c1a0df5515bfaed6eec28f7e41e", "Url": "https://api.github.com/repos/goabout/OpenTripPlanner", "Date": "2013-12-05T11:36:25Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(char,char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((newString.length()) <= 8) { if (newString.matches(\"\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\")) { newString = ((((newString.substring(0, 4)) + '.') + (newString.substring(4, 6))) + '.') + (newString.substring(6, 8)); }else if (!(newString.matches(\".*20\\\\d\\\\d.*\"))) { dl = SMALL_DF_LIST; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2126/buggy-version/otp-core.src.main.java.org.opentripplanner.util.DateUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.matches(java.lang.String)"], "Fixed commit": "79f14a5cff3c2c1a0df5515bfaed6eec28f7e41e", "Url": "https://api.github.com/repos/goabout/OpenTripPlanner", "Date": "2013-12-05T11:36:25Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(newString.matches(\".*20\\\\d\\\\d.*\"))) { dl = SMALL_DF_LIST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2126/buggy-version/otp-core.src.main.java.org.opentripplanner.util.DateUtils.java", "BodyUseAPI": [], "Fixed commit": "79f14a5cff3c2c1a0df5515bfaed6eec28f7e41e", "Url": "https://api.github.com/repos/goabout/OpenTripPlanner", "Date": "2013-12-05T11:36:25Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game_state) == 0) { android.util.Log.i(com.sener.zjuzqj.babytoy.GameActivity.TAG, (\"[DRAWABLE LOOP COUNT]: \" + (mDrawable4.getLoopCount()))); if ((mDrawable2.getLoopCount()) >= 5) updateAnimation(mDrawable4); updateProgressView(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8085/buggy-version/app.src.main.java.com.sener.zjuzqj.babytoy.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "fb57411053db3dd95f45542be408fcb41c942d16", "Url": "https://api.github.com/repos/GeorgyZhou/Babytoy", "Date": "2017-05-11T08:26:23Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mDrawable2.getLoopCount()) >= 5) updateAnimation(mDrawable2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8085/buggy-version/app.src.main.java.com.sener.zjuzqj.babytoy.GameActivity.java", "BodyUseAPI": ["com.sener.zjuzqj.babytoy.GameActivity.1.updateAnimation(pl.droidsonroids.gif.GifDrawable)"], "Fixed commit": "fb57411053db3dd95f45542be408fcb41c942d16", "Url": "https://api.github.com/repos/GeorgyZhou/Babytoy", "Date": "2017-05-11T08:26:23Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opennms.netmgt.poller.monitors.VmwareMonitor.getKeyedBoolean(java.util.Map<java.lang.String, java.lang.Object>,java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ignoreStandBy && (\"standBy\".equals(powerState))) { serviceStatus = org.opennms.netmgt.poller.PollStatus.up(); }else { serviceStatus = org.opennms.netmgt.poller.PollStatus.unavailable(((\"The system's state is '\" + powerState) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6545/buggy-version/integrations.opennms-vmware.src.main.java.org.opennms.netmgt.poller.monitors.VmwareMonitor.java", "BodyUseAPI": ["org.opennms.netmgt.poller.PollStatus.unavailable(java.lang.String)"], "Fixed commit": "b3025fce13da5ee9d0264b240db319c3de2f1c20", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2015-03-17T14:27:30Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opennms.netmgt.poller.monitors.VmwareCimMonitor.getKeyedBoolean(java.util.Map<java.lang.String, java.lang.Object>,java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ignoreStandBy && (\"standBy\".equals(powerState))) { serviceStatus = org.opennms.netmgt.poller.PollStatus.up(); }else { serviceStatus = org.opennms.netmgt.poller.PollStatus.unresponsive(((\"Host system's power state is '\" + powerState) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6545/buggy-version/integrations.opennms-vmware.src.main.java.org.opennms.netmgt.poller.monitors.VmwareCimMonitor.java", "BodyUseAPI": ["org.opennms.netmgt.poller.PollStatus.unresponsive(java.lang.String)"], "Fixed commit": "b3025fce13da5ee9d0264b240db319c3de2f1c20", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2015-03-17T14:27:30Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (newLocale != null) javax.faces.context.FacesContext.getCurrentInstance().getViewRoot().setLocale(new java.util.Locale(newLocale));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4655/buggy-version/src.main.java.ch.frickler.jass.UserBean.java", "BodyUseAPI": ["javax.faces.context.FacesContext.getCurrentInstance().getViewRoot().setLocale(java.util.Locale)"], "Fixed commit": "1282d5c7ca1ffd701de4f88d9cc48596d778ede6", "Url": "https://api.github.com/repos/webairOld/ch.bfh.advancedWeb.jass", "Date": "2011-11-27T16:21:45Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.bExceptionList.size()) > 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3130/buggy-version/bparser.src.main.java.de.be4.classicalb.core.parser.rules.project.RulesProject.java", "BodyUseAPI": [], "Fixed commit": "72bea076ed72d5aee963545635a19c5aa4161011", "Url": "https://api.github.com/repos/bendisposto/probparsers", "Date": "2017-02-10T12:01:46Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (zipFile.exists()) { zipFile.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3075/buggy-version/elab4-backend.src.main.java.elaborate.editor.publish.WarMaker.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "6c4bbcafb78f8c14e3de81b9170b7c4c8ea34545", "Url": "https://api.github.com/repos/HuygensING/elaborate4-backend", "Date": "2016-02-29T13:21:25Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.activityList.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/874/buggy-version/app.src.main.java.com.wheel.legend.singleholder.SlideHelper.java", "BodyUseAPI": [], "Fixed commit": "3995064d6630a5b26e8e6e0c0d93009e1b028614", "Url": "https://api.github.com/repos/Android-wheel-by-legend/SingleHolder", "Date": "2017-12-30T14:22:52Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o1 == null) { if (o2 == null) { return 0; }else { return -1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2564/buggy-version/src.org.apache.pig.data.DataType.java", "BodyUseAPI": [], "Fixed commit": "e303adc8764067f03a7e84954e056f399e0c1f54", "Url": "https://api.github.com/repos/haitaoyao/pig", "Date": "2012-07-19T10:07:21Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((indicatorPath) != null) { indicatorPath.reset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6631/buggy-version/app.src.main.java.com.speedgauge.muhammadhany.appproject.MyView.java", "BodyUseAPI": [], "Fixed commit": "6d88ad748bbf12b9ed302c2ca987d820385278e5", "Url": "https://api.github.com/repos/muhammad-hany/AppProject", "Date": "2015-05-26T19:18:00Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (notes != null) for (int i = 0; i < (notes.length); i++) keyList.add(notes[i]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5455/buggy-version/src.LabeledSuggestion.java", "BodyUseAPI": [], "Fixed commit": "ad4efb70dbb00657aad6954d01df68c360567425", "Url": "https://api.github.com/repos/Tsukinara/KeyboardPunch", "Date": "2014-04-06T05:36:51Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.drill.exec.planner.sql.SchemaUtilites.findSchema(org.apache.calcite.schema.SchemaPlus,java.util.List<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (schema == null) { org.apache.drill.exec.planner.sql.SchemaUtilites.throwSchemaNotFoundException(defaultSchema, SchemaUtilites.SCHEMA_PATH_JOINER.join(schemaPathGivenInCmd)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3495/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.planner.sql.handlers.DescribeTableHandler.java", "BodyUseAPI": [], "Fixed commit": "eaf7c8d77058af58795862a0e0fd510b130f457c", "Url": "https://api.github.com/repos/rchallapalli/drill", "Date": "2015-05-29T15:57:40Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.drill.exec.planner.sql.SchemaUtilites.findSchema(org.apache.calcite.schema.SchemaPlus,java.util.List<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.drill.exec.planner.sql.SchemaUtilites.isRootSchema(schema)) { throw org.apache.drill.common.exceptions.UserException.validationError().message(\"No schema selected.\").build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3495/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.planner.sql.handlers.DescribeTableHandler.java", "BodyUseAPI": [], "Fixed commit": "eaf7c8d77058af58795862a0e0fd510b130f457c", "Url": "https://api.github.com/repos/rchallapalli/drill", "Date": "2015-05-29T15:57:40Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["appsgate.lig.tts.yakitome.impl.TTSServiceImpl.getTTSItemMatchingText(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (book_id > 0) { appsgate.lig.tts.yakitome.impl.TTSServiceImpl.logger.trace((\"waitForTTSGeneration(...), found book_id: \" + book_id)); if (!(ttsItemsRunning.containsKey(book_id))) { appsgate.lig.tts.yakitome.impl.TTSServiceImpl.logger.trace((\"waitForTTSGeneration(...), Text to speech already generated : \" + book_id)); return book_id; }else { appsgate.lig.tts.yakitome.impl.TTSServiceImpl.logger.trace(\"waitForTTSGeneration(...), Text to speech NOT generated\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7882/buggy-version/sources.appsgate-project.integrated-technologies.web-services.YakitomeTTS.src.main.java.appsgate.lig.tts.yakitome.impl.TTSServiceImpl.java", "BodyUseAPI": ["org.slf4j.Logger.trace(java.lang.String)", "java.util.Map<java.lang.Integer, java.lang.String>.containsKey(int)", "org.slf4j.Logger.trace(java.lang.String)"], "Fixed commit": "22b2dc3e2f93f05dd2c7f67f45975fa7b7de5927", "Url": "https://api.github.com/repos/appsgate2015/appsgate", "Date": "2015-02-04T12:46:26Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.textFieldWord.getText().trim().isEmpty())) { query.setWord(this.textFieldWord.getText().trim()); query.setWordType(((hrider.data.ObjectType) (this.comboBoxWordType.getSelectedItem()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3096/buggy-version/src.main.java.hrider.ui.forms.ScanDialog.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "hrider.hbase.Query.setWord(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "0dc6bb3a80df8d22345dd3cdef7d60032d6b77a6", "Url": "https://api.github.com/repos/NiceSystems/hrider", "Date": "2013-02-05T12:15:16Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((applicationGroup.getPackageMetadata()) == null) { applicationGroup.setPackageMetadata(new org.jboss.windup.web.services.model.PackageMetadata()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2298/buggy-version/services.src.main.java.org.jboss.windup.web.services.rest.ApplicationGroupEndpointImpl.java", "BodyUseAPI": ["org.jboss.windup.web.services.model.ApplicationGroup.setPackageMetadata(org.jboss.windup.web.services.model.PackageMetadata)"], "Fixed commit": "64c1a0d7e9126094c103b01c2b5d4c0beef0601c", "Url": "https://api.github.com/repos/jsight/windup-web", "Date": "2016-10-11T11:40:47Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["phoneJSON.getJSONObject(j).getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type.equals(\"landline\")) { java.lang.String number = phoneJSON.getJSONObject(j).getString(\"number\"); phone.add(number); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6746/buggy-version/app.src.main.java.com.epicodus.dentistfinder.services.BetterDoctorService.java", "BodyUseAPI": [], "Fixed commit": "755c2db51c5f40dbd0fc78b1915ac00798e4dd2b", "Url": "https://api.github.com/repos/malethr/DentistFinder", "Date": "2017-10-29T23:29:36Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (str == null) { str = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3324/buggy-version/PreviewPlugin.src.org.gephi.preview.plugin.builders.NodeLabelBuilder.java", "BodyUseAPI": [], "Fixed commit": "6561d56730c86e04b660c676f681eb1253e8b4f8", "Url": "https://api.github.com/repos/mbastian/gephi", "Date": "2011-12-17T01:57:32Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (str == null) { str = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3324/buggy-version/PreviewPlugin.src.org.gephi.preview.plugin.builders.EdgeLabelBuilder.java", "BodyUseAPI": [], "Fixed commit": "6561d56730c86e04b660c676f681eb1253e8b4f8", "Url": "https://api.github.com/repos/mbastian/gephi", "Date": "2011-12-17T01:57:32Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<ecnu.cs14.garagelocation.data.Ap, java.lang.String>.get(ecnu.cs14.garagelocation.data.Ap)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (filename == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8011/buggy-version/app.src.main.java.ecnu.cs14.garagelocation.info.MapSetSelector.java", "BodyUseAPI": [], "Fixed commit": "5ef749f0a832173a796c19c2ec92aa0c6d1d54cd", "Url": "https://api.github.com/repos/halfdb/Garage_LBS", "Date": "2017-02-08T09:01:27Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.slg.leoapp.utility.Utils.getController().getStundenplanDatabase().gewaehlteFaecherAnTag(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((faecher.length) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8382/buggy-version/LeoApp.app.src.main.java.de.slg.leoapp.service.NotificationService.java", "BodyUseAPI": [], "Fixed commit": "eab1e5720a24585442311384c62fb6f031e5c2a2", "Url": "https://api.github.com/repos/Leo-App/android", "Date": "2017-11-24T16:33:33Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.sixbynine.infosessions.BuildConfig.CRUNCHBASE_BROKEN) { callback.onFailure(new java.lang.UnsupportedOperationException()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/9012/buggy-version/infosessions.src.main.java.com.sixbynine.infosessions.data.InfoSessionManager.java", "BodyUseAPI": [], "Fixed commit": "f24d2a4116d64ad092fe82f344c8637ae2a5407e", "Url": "https://api.github.com/repos/cckroets/InfoSessions", "Date": "2015-11-29T23:50:35Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (index >= (data.length())) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6780/buggy-version/litlbro.src.main.java.labrom.litlbro.gossip.GossipSuggestion.java", "BodyUseAPI": [], "Fixed commit": "e2cd459add0121845ac15bff67fab2b33a881870", "Url": "https://api.github.com/repos/labrom/litlbro", "Date": "2014-07-12T02:15:48Z"},
{"Line": "=>614", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang.math.Range.getMaximumLong()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (end < fileLength) { end += 1; }else { end = fileLength; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7305/buggy-version/matte-web.src.magoffin.matt.ma2.support.AbstractMediaHandler.java", "BodyUseAPI": [], "Fixed commit": "adc813b0d12d2b1b19e52c43db9a4c8ba6b7df6a", "Url": "https://api.github.com/repos/msqr/matte", "Date": "2015-02-13T22:57:41Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (call.callJava()) { methodVisitor.visitMethodInsn(loop.INVOKESTATIC, \"loop/runtime/Caller\", \"callStatic\", \"(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\"); }else { methodVisitor.visitMethodInsn(loop.INVOKESTATIC, \"loop/runtime/Caller\", \"callStatic\", \"(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7779/buggy-version/src.loop.AsmCodeEmitter.java", "BodyUseAPI": [], "Fixed commit": "f9b77fd8e05d249e1dfc801a0bcf52411964e53a", "Url": "https://api.github.com/repos/yohanbeschi/loop", "Date": "2012-08-18T07:21:19Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cxf.service.model.FaultInfo.getProperty(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (exClass == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/841/buggy-version/api.src.main.java.org.apache.cxf.interceptor.ClientFaultConverter.java", "BodyUseAPI": [], "Fixed commit": "bcf868cf12af48b158e564ce3a0dc06e2e71d58f", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2014-07-11T16:43:21Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["columnReference.getMetadataObject().getNameInSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.teiid.core.util.StringUtil.endsWithIgnoreCase(name, \"id\")) { this.parentName = name.substring(0, ((name.length()) - 2)); }else if (name.endsWith(\"__c\")) { this.parentName = (name.substring(0, ((name.length()) - 1))) + \"r\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1848/buggy-version/connectors.translator-salesforce.src.main.java.org.teiid.translator.salesforce.execution.visitors.JoinQueryVisitor.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.length()"], "Fixed commit": "eb07666f2b521fc98c79eda2cacbf1bfd86b492a", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2017-06-08T18:45:22Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((crossings == null) || ((crossings.size()) == 0)) { fullWidth = (height) / ((maxXVal) - (minXVal)); }else if ((crossings.size()) == 1) { fullWidth = ((getPos()) - (crossings.get(0))) * 2; }else { fullWidth = (crossings.get(1).doubleValue()) - (crossings.get(0).doubleValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8870/buggy-version/uk.ac.diamond.scisoft.analysis.src.uk.ac.diamond.scisoft.analysis.fitting.functions.IdentifiedPeak.java", "BodyUseAPI": ["java.lang.Double.doubleValue()", "java.util.List<java.lang.Double>.get(int)", "java.util.List<java.lang.Double>.get(int)", "java.util.List<java.lang.Double>.size()", "java.lang.Double.doubleValue()", "java.util.List<java.lang.Double>.get(int)"], "Fixed commit": "fbbfef318882ce30b71d0a66715a9d16af0db679", "Url": "https://api.github.com/repos/DawnScience/scisoft-core", "Date": "2015-01-19T11:42:02Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (skip(in)) return read(in);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1607/buggy-version/src.main.java.com.selonj.gson.enclosed.EnclosingTypeAdapterFactory.java", "BodyUseAPI": ["com.selonj.gson.enclosed.EnclosingTypeAdapterFactory.EnclosingTypeAdapter<T>.read(com.google.gson.stream.JsonReader)"], "Fixed commit": "35a8401c6adaaba19fc68cf0961f88c2cac47917", "Url": "https://api.github.com/repos/selonj/gson-enclosing-plugin", "Date": "2016-04-20T03:39:29Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.contains(uploadFileName, \"/\")) { uploadFileName = org.apache.commons.lang3.StringUtils.substringAfterLast(uploadFileName, \"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8077/buggy-version/src.main.java.com.sketchy.server.ImageUploadServlet.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)"], "Fixed commit": "6fe63e0475e46e520cc55e4d5c42c54969cf6d18", "Url": "https://api.github.com/repos/MHAVLOVICK/Sketchy", "Date": "2015-06-23T04:55:41Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((json.get(field)) instanceof java.lang.Boolean) { return json.get(field); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6146/buggy-version/src.main.java.org.bigml.binding.utils.Utils.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Fixed commit": "72fbca0ed99026da32f4c00f22d2c031d1036b49", "Url": "https://api.github.com/repos/javinp/bigml-java", "Date": "2014-01-25T12:00:35Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(closed)) { net.openhft.chronicle.network.AcceptorEventHandler.LOG.error(\"\", e); closeSocket(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8361/buggy-version/src.main.java.net.openhft.chronicle.network.AcceptorEventHandler.java", "BodyUseAPI": [], "Fixed commit": "c17979a458aaa01fcf2885c90e88205b00a28485", "Url": "https://api.github.com/repos/OpenHFT/Chronicle-Network", "Date": "2015-07-10T11:53:50Z"},
{"Line": "=>2262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(de.cismet.tools.StaticDebuggingTools.checkHomeForFile(\"cismetVerdisTimeMachineRecovery\"))) { btnTimeRecovery.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1463/buggy-version/src.main.java.de.cismet.verdis.gui.Main.java", "BodyUseAPI": [], "Fixed commit": "7ae401d1ec6db81ee8feb235686c058c5f472cc5", "Url": "https://api.github.com/repos/cismet/verdis", "Date": "2015-05-11T16:52:52Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != formData) { formData.remove(java.lang.Integer.valueOf(35)); formData.remove(java.lang.Integer.valueOf(8)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3902/buggy-version/emulator.src.main.java.com.luxoft.stockexchange.emulator.actions.ActionTemplate.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.Object>.remove(java.lang.Integer)", "java.util.Map<java.lang.Integer, java.lang.Object>.remove(java.lang.Integer)"], "Fixed commit": "4477c2581ed7f0dc9244d8968742e1478374ba68", "Url": "https://api.github.com/repos/vicwrc/Stock-Exchange", "Date": "2015-05-09T10:15:56Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == formData) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3902/buggy-version/emulator.src.main.java.com.luxoft.stockexchange.emulator.actions.template.FixActivityRow.java", "BodyUseAPI": [], "Fixed commit": "4477c2581ed7f0dc9244d8968742e1478374ba68", "Url": "https://api.github.com/repos/vicwrc/Stock-Exchange", "Date": "2015-05-09T10:15:56Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((property.getTaxExemptedReason()) == null) return ((((((\"redirect:/notice/propertyTaxNotice-generateNotice.action?basicPropId=\" + (property.getBasicProperty().getId())) + \"&noticeType=\") + (org.egov.ptis.constants.PropertyTaxConstants.NOTICE_TYPE_SPECIAL_NOTICE)) + \"&noticeMode=\") + (org.egov.ptis.constants.PropertyTaxConstants.APPLICATION_TYPE_TAX_EXEMTION)) + \"&actionType=\") + workFlowAction; else return ((((((\"redirect:/notice/propertyTaxNotice-generateExemptionNotice.action?basicPropId=\" + (property.getBasicProperty().getId())) + \"&noticeType=\") + (NOTICE_TYPE_EXEMPTION)) + \"&noticeMode=\") + (NOTICE_TYPE_EXEMPTION)) + \"&actionType=\") + workFlowAction;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8397/buggy-version/egov.egov-ptisweb.src.main.java.org.egov.ptis.web.controller.transactions.exemption.UpdateTaxExemptionController.java", "BodyUseAPI": ["org.egov.ptis.domain.entity.property.Property.getBasicProperty()", "property.getBasicProperty().getId()", "property.getBasicProperty().getId()", "org.egov.ptis.domain.entity.property.Property.getBasicProperty()"], "Fixed commit": "25283f694042d0e8df41839e239f34407168706a", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2017-01-16T13:32:19Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(config.hasFeature(org.cybercat.automation.addons.jira.JiraReportManager.JIRA_BUGS))) return listeners;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4049/buggy-version/CyberCat.src.main.java.org.cybercat.automation.addons.jira.JiraReportManager.java", "BodyUseAPI": [], "Fixed commit": "fa45934e95e61aaa6c68f7cc90a02bb930bcb5ce", "Url": "https://api.github.com/repos/ubegun/Cybercat", "Date": "2015-10-26T04:00:56Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.Activity.getmChatroomSlidingMenu()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (chatroomsMenu.isMenuShowing()) { chatroomsMenu.hideMenu(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2659/buggy-version/app.src.main.java.com.huetoyou.chatexchange.ui.misc.TutorialStuff.java", "BodyUseAPI": ["com.jeremyfeinstein.slidingmenu.lib.SlidingMenu.hideMenu(boolean)"], "Fixed commit": "329a4ce6fcbfefca002435ba548dee84fc8e585e", "Url": "https://api.github.com/repos/HueToYou/ChatExchange-old", "Date": "2017-07-05T15:29:47Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.google.api.client.repackaged.com.google.common.base.Strings.isNullOrEmpty(simple.getId())) { complex.setId(idCodec.decode(simple.getId()).longValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/544/buggy-version/src.main.java.org.atlasapi.input.ChannelGroupTransformer.java", "BodyUseAPI": ["org.atlasapi.media.channel.ChannelGroup.getId()", "idCodec.decode(simple.getId()).longValue()", "org.atlasapi.media.channel.Platform.setId(idCodec.decode(simple.getId()).longValue())", "com.metabroadcast.common.ids.SubstitutionTableNumberCodec.decode(simple.getId())"], "Fixed commit": "3efbe9c6dcfc7ffb93d71a0bd9362cc0d378b4d3", "Url": "https://api.github.com/repos/atlasapi/atlas", "Date": "2017-04-03T10:09:46Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (importCfg.containsKey(\"file\")) { java.lang.String filename = ((java.lang.String) (importCfg.get(\"file\"))); if (org.apache.commons.lang3.StringUtils.isNotBlank(filename)) { this.loadFromFile(filename); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5371/buggy-version/src.main.java.org.pinae.pumbaa.ServiceManager.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "488cac4a3b923ee5e6b1d13ea30ce170a0b94f8f", "Url": "https://api.github.com/repos/PinaeOS/pumbaa", "Date": "2016-12-17T17:13:38Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((cacheManager) == null) || ((cacheManager.getCachedPersonIdsToPrayFor()) == null)) { return org.theotech.ceaselessandroid.util.Constants.NUM_AUXILIARY_CARDS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8432/buggy-version/app.src.main.java.org.theotech.ceaselessandroid.fragment.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "907b42b0ef459a21fbfd1fd2d192accedc7fe61d", "Url": "https://api.github.com/repos/ceaseless-prayer/CeaselessAndroid", "Date": "2016-10-30T02:20:51Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.System.getProperty(\"os.name\").toLowerCase().startsWith(\"windows\")) { startCommandValues.put(\"java\", \"%JAVA_HOME%/bin/java\"); }else { startCommandValues.put(\"java\", \"$JAVA_HOME/bin/java\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7455/buggy-version/flink-runtime.src.main.java.org.apache.flink.runtime.clusterframework.BootstrapTools.java", "BodyUseAPI": [], "Fixed commit": "ca11bb6db260e345ceb9465bd39f487142b92234", "Url": "https://api.github.com/repos/zhuganghuaonnet/flink", "Date": "2017-09-15T08:06:26Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((k\u00e9z.get(x).get\u00c9rt\u00e9k()) == 14) k\u00e9z.remove(k\u00e9z.get(x));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/74/buggy-version/src.main.java.hu.unideb.inf.rummy_mvn.rummy.MestInt.java", "BodyUseAPI": ["java.util.List<hu.unideb.inf.rummy_mvn.rummy.Kartya>.get(int)", "java.util.List<hu.unideb.inf.rummy_mvn.rummy.Kartya>.remove(k\u00e9z.get(x))"], "Fixed commit": "01bc5ffb1b5dca73c0b39810ab747783be18785d", "Url": "https://api.github.com/repos/matthewkoncz/rummy_yceb5o", "Date": "2015-06-01T08:53:09Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return com.treasure_data.td_import.model.ColumnType.NIL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5273/buggy-version/src.main.java.com.treasure_data.td_import.reader.VariableLengthColumnsRecordReader.java", "BodyUseAPI": [], "Fixed commit": "83cab0e13f4bdb27211253d34edfe78f2799444d", "Url": "https://api.github.com/repos/treasure-data/td-import-java", "Date": "2014-01-28T00:38:00Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reader) != null) { reader.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3491/buggy-version/src.main.java.edu.stthomas.gps.NeuronGraphMapper.java", "BodyUseAPI": [], "Fixed commit": "db224f7d51cd6e2e3edf956666be2187d3098df2", "Url": "https://api.github.com/repos/imsure/neuron_graph_mapreduce", "Date": "2013-12-01T00:26:36Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, com.pratilipi.data.type.Page>.get(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (pratilipiPage != null) pratilipiUrlList.add(((pratilipiPage.getUriAlias()) == null ? pratilipiPage.getUri() : pratilipiPage.getUriAlias()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8373/buggy-version/src.main.java.com.pratilipi.data.util.EventDataUtil.java", "BodyUseAPI": ["com.pratilipi.data.type.Page.getUri()", "com.pratilipi.data.type.Page.getUriAlias()", "java.util.List<java.lang.String>.add(((pratilipiPage.getUriAlias()) == null ? pratilipiPage.getUri() : pratilipiPage.getUriAlias()))", "com.pratilipi.data.type.Page.getUriAlias()"], "Fixed commit": "5e8dc8b08f75ae874035fea252c00ad1437774fb", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-08-13T08:42:05Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.moquette.parser.netty.Utils.decodeString(io.netty.buffer.ByteBuf)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (topics.contains(topic)) { return; }else { topics.add(topic); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8499/buggy-version/netty_parser.src.main.java.org.eclipse.moquette.parser.netty.SubscribeDecoder.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "a87911e4925d511ecb5815411dfb23f68ea03782", "Url": "https://api.github.com/repos/thinkjoyorg/moquette", "Date": "2015-06-26T06:33:18Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.help.internal.UAElement.getElementName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"iframe\".equalsIgnoreCase(elementName)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6420/buggy-version/org.eclipse.help.base.src.org.eclipse.help.internal.xhtml.XHTMLCharsetHandler.java", "BodyUseAPI": [], "Fixed commit": "c7abf3522c6ada51c6af89979d0fb49f4fd8c501", "Url": "https://api.github.com/repos/easirois/eclipse.platform.ua", "Date": "2012-10-26T18:08:14Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.help.internal.UAElement.getElementName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"title\".equalsIgnoreCase(elementName)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6420/buggy-version/org.eclipse.help.base.src.org.eclipse.help.internal.xhtml.XHTMLCharsetHandler.java", "BodyUseAPI": [], "Fixed commit": "c7abf3522c6ada51c6af89979d0fb49f4fd8c501", "Url": "https://api.github.com/repos/easirois/eclipse.platform.ua", "Date": "2012-10-26T18:08:14Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (pageSize < 1) { throw new java.lang.RuntimeException(\"Page size must greater then zero\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/878/buggy-version/neo4j-ogm.src.main.java.org.neo4j.ogm.cypher.query.Pagination.java", "BodyUseAPI": [], "Fixed commit": "65b7b0d257554017da51b7c956fb00713337bbea", "Url": "https://api.github.com/repos/spring-projects/spring-data-neo4j", "Date": "2015-05-22T10:33:58Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (pageNumber < 0) { throw new java.lang.RuntimeException(\"Page number must not be negative\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/878/buggy-version/neo4j-ogm.src.main.java.org.neo4j.ogm.cypher.query.Pagination.java", "BodyUseAPI": [], "Fixed commit": "65b7b0d257554017da51b7c956fb00713337bbea", "Url": "https://api.github.com/repos/spring-projects/spring-data-neo4j", "Date": "2015-05-22T10:33:58Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t2.isDynamic()) { return scala.Option.empty(); }else { return scala.Option.apply(t1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5195/buggy-version/GradualConstraints.InstrumentationSupport.src.main.java.de.unifreiburg.cs.proglang.jgs.constraints.TypeDomain.java", "BodyUseAPI": [], "Fixed commit": "16a4103787c6e366d7504c1c6cf18973cbdd42ed", "Url": "https://api.github.com/repos/mueller91/gradual-java", "Date": "2017-03-09T12:43:04Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.alibaba.druid.util.StringUtils.isEmpty(aliGoodsRequestModel.getQ()))) { isSpecialDomain = org.maxwe.tao.server.controller.meta.MetaController.isSpecialLink(aliGoodsRequestModel.getQ()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4468/buggy-version/src.main.java.org.maxwe.tao.server.service.tao.alimama.goods.GoodsServices.java", "BodyUseAPI": ["org.maxwe.tao.server.service.tao.alimama.goods.AliGoodsRequestModel.getQ()", "org.maxwe.tao.server.controller.meta.MetaController.isSpecialLink(aliGoodsRequestModel.getQ())"], "Fixed commit": "d981057124eb75756671e515e6d55ca8e8f2f0aa", "Url": "https://api.github.com/repos/QQ1350995917/MaxweTaoServer", "Date": "2017-05-07T10:11:57Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(m.isGLsetup())) { m.setupGL(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8782/buggy-version/src.renderer.Renderer.java", "BodyUseAPI": ["renderer.model.Model.setupGL()"], "Fixed commit": "48e182f2309b1b19af8e4e7816b7074ba84df760", "Url": "https://api.github.com/repos/jtmzheng/3dss", "Date": "2014-01-09T04:05:50Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((split.length()) >= 2) { split = ((java.lang.String) (split.subSequence(0, ((split.length()) - 2)))); return (variables.get(java.lang.Integer.parseInt(split))) + \"[]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/770/buggy-version/org.jacoco.core.src.org.jacoco.core.internal.analysis.dua.DuaMethodAnalyzer.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.subSequence(int,int)"], "Fixed commit": "25833d3b902204cc73d142694f852c47a0fe69b5", "Url": "https://api.github.com/repos/luizbaptistao/JacocoPlusBaDua", "Date": "2014-09-10T19:00:15Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (variable.substring(1, 2).equals(\"@\")) { java.lang.String split = variable.substring(2); try { java.lang.Integer.parseInt(split); return variables.get(java.lang.Integer.parseInt(split)); } catch (java.lang.NumberFormatException e) { java.lang.System.out.println(split); if ((split.length()) >= 2) { split = ((java.lang.String) (split.subSequence(0, ((split.length()) - 2)))); return (variables.get(java.lang.Integer.parseInt(split))) + \"[]\"; } } }else { return variable; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/770/buggy-version/org.jacoco.core.src.org.jacoco.core.internal.analysis.dua.DuaMethodAnalyzer.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "25833d3b902204cc73d142694f852c47a0fe69b5", "Url": "https://api.github.com/repos/luizbaptistao/JacocoPlusBaDua", "Date": "2014-09-10T19:00:15Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFull()) { moreSpace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2127/buggy-version/ArrayList.java", "BodyUseAPI": [], "Fixed commit": "61da0fde51b5cc15f76a07c3714db5bfd2fb9ff8", "Url": "https://api.github.com/repos/BBK-PiJ-2014-92/cw3", "Date": "2014-11-18T14:18:03Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array.getError()) == (ErrorMessage.NO_ERROR)) { array = new ReturnObjectImpl(objectArray[index]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2127/buggy-version/ArrayList.java", "BodyUseAPI": [], "Fixed commit": "61da0fde51b5cc15f76a07c3714db5bfd2fb9ff8", "Url": "https://api.github.com/repos/BBK-PiJ-2014-92/cw3", "Date": "2014-11-18T14:18:03Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clinesToDelete2.contains(g)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/9169/buggy-version/src.org.nschmidt.ldparteditor.data.VM15Flipper.java", "BodyUseAPI": [], "Fixed commit": "2dc1d82e575c07a5fdb703d13a604958f6e92914", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-07-01T10:18:16Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.zib.gndms.infra.action.SlicedTaskFlowAction<K>.getSliceSpecifier()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == sliceSpecifier) throw new de.zib.gndms.model.common.NoSuchResourceException(\"Could not get slice Id.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8015/buggy-version/infra.src.de.zib.gndms.infra.action.SlicedTaskFlowAction.java", "BodyUseAPI": [], "Fixed commit": "bdf8348d1c7125e5950122e3866b1653d5b010a0", "Url": "https://api.github.com/repos/zibhub/GNDMS", "Date": "2012-08-21T11:13:16Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currWaypt) < (waypoints.size())) { java.awt.geom.Point2D.Double wayPoint = waypoints.get(currWaypt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4722/buggy-version/lab6.src.GlobalNavigation.GlobalNavigation.java", "BodyUseAPI": ["java.util.List<java.awt.geom.Point2D.Double>.get(int)"], "Fixed commit": "73513ed771ae8f21607704bf81bf3f06ff33a9c2", "Url": "https://api.github.com/repos/vkee/rss_team2", "Date": "2015-03-13T20:14:51Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gameNumber == (ns.publicRoom)) { ns.publicRoom = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4504/buggy-version/NetworkServer.java", "BodyUseAPI": [], "Fixed commit": "3dc74d22bfd80a29bb4b55d98b7a61f328d5d723", "Url": "https://api.github.com/repos/andrewmchen/NetworkOnline", "Date": "2014-04-06T05:45:02Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Stack<slp.SymbolEntry>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (scopeStack.peek().isArg()) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1946/buggy-version/slp.src.slp.SymbolTable.java", "BodyUseAPI": [], "Fixed commit": "7abfdb4863da7cce7b13798589800fab55cda8f4", "Url": "https://api.github.com/repos/oriwa/TAU---Compilation", "Date": "2015-12-13T10:27:10Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endLevel) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/382/buggy-version/src.edu.ucsb.cs56.projects.games.simon_says.SimonProFlash.java", "BodyUseAPI": [], "Fixed commit": "b038b4f9178c6c4b76793787ab758c445629bfc3", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-games-simon-says", "Date": "2017-11-28T03:20:32Z"},
{"Line": "=>733", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, Variable.DataType>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dataType == null) { throw new com.nlbhub.nlb.exception.NLBConsistencyException(((\"Datatype of the variable \" + constraintVar) + \" cannot be determined. Please verify that this variable is defined.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7121/buggy-version/NLBL.src.main.java.com.nlbhub.nlb.domain.export.ExportManager.java", "BodyUseAPI": [], "Fixed commit": "2b09ad41daa666f3ddb3999f7a1d1bf41e1fa408", "Url": "https://api.github.com/repos/Antokolos/NLB", "Date": "2014-08-03T11:35:07Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.siteGuardian.SharedObjectManager.getInstance().getDb(resultTextView.getContext()).query(SiteGuardSQLHelper.STATUS_TABLE_NAME,<nulltype>,java.lang.String,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((cursor.getCount()) > 0) { cursor.moveToFirst(); resultStatus = ((\"Status: \" + (cursor.getString(cursor.getColumnIndex(SiteGuardSQLHelper.RESULT_STATUS_COLUMN)))) + \" Time: \") + (new java.util.Date(java.lang.Long.valueOf(cursor.getString(cursor.getColumnIndex(SiteGuardSQLHelper.TIMESTAMP_COLUMN))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8946/buggy-version/siteGuardian.src.com.example.siteGuardian.MainActivity.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndex(SiteGuardSQLHelper.TIMESTAMP_COLUMN)", "android.database.Cursor.getString(cursor.getColumnIndex(SiteGuardSQLHelper.RESULT_STATUS_COLUMN))", "android.database.Cursor.moveToFirst()", "android.database.Cursor.getColumnIndex(SiteGuardSQLHelper.RESULT_STATUS_COLUMN)", "android.database.Cursor.getString(cursor.getColumnIndex(SiteGuardSQLHelper.TIMESTAMP_COLUMN))", "java.lang.Long.valueOf(cursor.getString(cursor.getColumnIndex(SiteGuardSQLHelper.TIMESTAMP_COLUMN)))"], "Fixed commit": "70ab031d95d2e4573e7a76c1793e005db3c98c5f", "Url": "https://api.github.com/repos/aspodarenko/calculator", "Date": "2013-02-18T11:21:59Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8946/buggy-version/siteGuardian.src.com.example.siteGuardian.CheckSiteService.java", "BodyUseAPI": [], "Fixed commit": "70ab031d95d2e4573e7a76c1793e005db3c98c5f", "Url": "https://api.github.com/repos/aspodarenko/calculator", "Date": "2013-02-18T11:21:59Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ni.getDisplayName()) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7742/buggy-version/src.de.dakror.spamwars.util.Assistant.java", "BodyUseAPI": [], "Fixed commit": "6d41183a2234ee42d37f2cac85cd7b635a90ec88", "Url": "https://api.github.com/repos/Dakror/Spam-Wars", "Date": "2013-12-03T20:20:43Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tries >= 0) { org.corfudb.util.CoopScheduler.sched(); cond.set(0); return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4051/buggy-version/runtime.src.main.java.org.corfudb.util.CoopUtil.java", "BodyUseAPI": [], "Fixed commit": "76ddffb74db105be15f2e8db108bb9c6756c396c", "Url": "https://api.github.com/repos/slfritchie/CorfuDB", "Date": "2017-07-17T14:40:22Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (enumValue == null) { return toAppendTo.append(\"\"); }else { nth.introspect.provider.language.LanguageProvider languageProvider = nth.introspect.Introspect.getLanguageProvider(); java.lang.String key = languageProvider.getKey(enumValue); java.lang.String defaultValue = languageProvider.getDefaultValue(key); java.lang.String value = languageProvider.getText(key, defaultValue); return toAppendTo.append(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5552/buggy-version/Introspect.src.nth.introspect.provider.domain.format.EnumFormat.java", "BodyUseAPI": ["nth.introspect.provider.language.LanguageProvider.getKey(java.lang.Object)"], "Fixed commit": "829233c3c4bd4c44e3c7d4409bcf8e432c16ea7a", "Url": "https://api.github.com/repos/ntenhoeve/Introspect-Framework", "Date": "2014-03-05T06:49:16Z"},
{"Line": "=>696", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mParts.containsKey(org.dmfs.rfc5545.recur.RecurrenceRule.Part.BYSETPOS)) { int cnt = 2; if ((mParts.containsKey(org.dmfs.rfc5545.recur.RecurrenceRule.Part.UNTIL)) || (mParts.containsKey(org.dmfs.rfc5545.recur.RecurrenceRule.Part.COUNT))) { cnt++; } if (((mParts.size()) - cnt) <= 0) { if (((mode) == (org.dmfs.rfc5545.recur.RecurrenceRule.RfcMode.RFC2445_STRICT)) || ((mode) == (org.dmfs.rfc5545.recur.RecurrenceRule.RfcMode.RFC5545_STRICT))) { throw new org.dmfs.rfc5545.recur.InvalidRecurrenceRuleException(\"BYSETPOS must only be used in conjunction with another BYxxx rule.\"); }else { mParts.remove(org.dmfs.rfc5545.recur.RecurrenceRule.Part.BYSETPOS); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4687/buggy-version/src.org.dmfs.rfc5545.recur.RecurrenceRule.java", "BodyUseAPI": ["java.util.EnumMap<org.dmfs.rfc5545.recur.RecurrenceRule.Part, java.lang.Object>.remove(org.dmfs.rfc5545.recur.RecurrenceRule.Part)", "java.util.EnumMap<org.dmfs.rfc5545.recur.RecurrenceRule.Part, java.lang.Object>.containsKey(org.dmfs.rfc5545.recur.RecurrenceRule.Part)", "java.util.EnumMap<org.dmfs.rfc5545.recur.RecurrenceRule.Part, java.lang.Object>.size()", "java.util.EnumMap<org.dmfs.rfc5545.recur.RecurrenceRule.Part, java.lang.Object>.containsKey(org.dmfs.rfc5545.recur.RecurrenceRule.Part)"], "Fixed commit": "8133f6a93343736d69057c0a773466ab4124a811", "Url": "https://api.github.com/repos/dmfs/lib-recur", "Date": "2013-07-04T15:28:12Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((locale) != null) return locale; else return java.util.Locale.getDefault();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2400/buggy-version/src.main.java.org.liveSense.core.wrapper.RequestWrapper.java", "BodyUseAPI": [], "Fixed commit": "8873e0cd0e3378dac5138215b9b19230ecd1c351", "Url": "https://api.github.com/repos/liveSense/org.liveSense.core", "Date": "2012-03-20T17:32:35Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (unknownFields.remove(objectFieldPair)) { mayAliasedFieldStore.add(fieldLocalMap); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8556/buggy-version/src.com.hang.ld.CollectionFieldsAnalysis.java", "BodyUseAPI": [], "Fixed commit": "c854b5491e048bca5e66c53f6c72c4ea51fa5c46", "Url": "https://api.github.com/repos/zfang/collection_fields_analysis", "Date": "2013-06-30T09:12:17Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index.getAnalysis().getResult()) != null) { if ((args.getColumn()) != null) renderer.setCol(args.getColumn()); else renderer.setCol(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2016/buggy-version/src.main.java.org.reactome.server.tools.fireworks.exporter.raster.FireworksExporter.java", "BodyUseAPI": [], "Fixed commit": "9bc915029f8d5cc50bd9ea9dba003eba5cc9bd73", "Url": "https://api.github.com/repos/pasculorente/fireworks-exporter", "Date": "2017-11-30T14:51:27Z"},
{"Line": "=>1178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNetworkAgent) != null) { mNetworkAgent.sendLinkProperties(mLinkProperties); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6450/buggy-version/src.java.com.android.internal.telephony.dataconnection.DataConnection.java", "BodyUseAPI": [], "Fixed commit": "a500d67ca13bb096bf7a8f3666c137b1f71b2eb9", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-opt-telephony", "Date": "2016-04-06T22:50:54Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((event.getEntityPlayer().getHeldItem(event.getHand())) != null) && ((event.getEntityPlayer().getHeldItem(event.getHand()).getItem()) instanceof net.minecraft.item.ItemBucket)) { event.setResult(Result.ALLOW); event.setCanceled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7192/buggy-version/src.main.java.ValkyrienWarfareBase.EventsCommon.java", "BodyUseAPI": ["PlayerInteractEvent.RightClickBlock.setCanceled(boolean)", "PlayerInteractEvent.RightClickBlock.setResult(Result.ALLOW)"], "Fixed commit": "c998840bf5108ea84bc2f09739f2cf17ca475c5f", "Url": "https://api.github.com/repos/ValkyrienWarfare/Valkyrien-Warfare-Revamped", "Date": "2017-03-16T07:05:04Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((playerEntity.getHeldItem(packetIn.getHand())) != null) && ((playerEntity.getHeldItem(packetIn.getHand()).getItem()) instanceof net.minecraft.item.ItemBucket)) { playerEntity.interactionManager.setBlockReachDistance(lastGoodBlockReachDist); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7192/buggy-version/src.main.java.ValkyrienWarfareBase.Interaction.CustomNetHandlerPlayServer.java", "BodyUseAPI": [], "Fixed commit": "c998840bf5108ea84bc2f09739f2cf17ca475c5f", "Url": "https://api.github.com/repos/ValkyrienWarfare/Valkyrien-Warfare-Revamped", "Date": "2017-03-16T07:05:04Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((criteria.getType()) == null) { criteria.setType(EventData.Type.OTHER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1924/buggy-version/paas.self-adaptation-manager.src.main.java.eu.ascetic.paas.self.adaptation.manager.rules.datatypes.FiringCriteria.java", "BodyUseAPI": ["eu.ascetic.paas.self.adaptation.manager.rules.datatypes.FiringCriteria.setType(EventData.Type.OTHER)"], "Fixed commit": "881c855442a51d7310416b7fab11c53d24021b23", "Url": "https://api.github.com/repos/ascetictoolbox/ascetictoolbox", "Date": "2016-11-09T12:32:07Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((criteria.getAgreementTerm()) == null) || ((criteria.getOperator()) == null)) || ((criteria.getResponseType()) == null)) { java.util.logging.Logger.getLogger(eu.ascetic.paas.self.adaptation.manager.rules.datatypes.FiringCriteria.class.getName()).log(java.util.logging.Level.WARNING, \"A rule from the OVF was not constructed correctly!\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1924/buggy-version/paas.self-adaptation-manager.src.main.java.eu.ascetic.paas.self.adaptation.manager.rules.datatypes.FiringCriteria.java", "BodyUseAPI": [], "Fixed commit": "881c855442a51d7310416b7fab11c53d24021b23", "Url": "https://api.github.com/repos/ascetictoolbox/ascetictoolbox", "Date": "2016-11-09T12:32:07Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, eu.ascetic.paas.self.adaptation.manager.rules.datatypes.Response.AdaptationType>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (answer == null) { if (responseType.contains(\"SCALE_TO_\")) { return eu.ascetic.paas.self.adaptation.manager.rules.datatypes.Response.AdaptationType.SCALE_TO_N_VMS; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1924/buggy-version/paas.self-adaptation-manager.src.main.java.eu.ascetic.paas.self.adaptation.manager.rules.datatypes.Response.java", "BodyUseAPI": [], "Fixed commit": "881c855442a51d7310416b7fab11c53d24021b23", "Url": "https://api.github.com/repos/ascetictoolbox/ascetictoolbox", "Date": "2016-11-09T12:32:07Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.dewianjanimedia.rda.MainActivity) (getActivity())).isHasBeenPaused()) { onStreamingStopped(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7680/buggy-version/app.src.main.java.com.dewianjanimedia.rda.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "63f505b215bb4d918de7556c4afd26b5ae07acdd", "Url": "https://api.github.com/repos/takin/rda", "Date": "2015-07-26T00:11:49Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view.getVisibility()) != (android.view.View.VISIBLE)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4437/buggy-version/library.src.main.java.com.chad.library.adapter.base.listener.SimpleClickListener.java", "BodyUseAPI": [], "Fixed commit": "5ffb20b9343b62d070a2bf0d19684c95edc6098b", "Url": "https://api.github.com/repos/sweet2o09/BaseRecyclerViewAdapterHelper", "Date": "2016-09-06T02:40:32Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.snpeff.snpEffect.VariantEffect.getTranscript()", "org.snpeff.snpEffect.VariantEffect.getTranscript()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((trThis == null) || (trOther == null)) return (trThis == null ? 0 : 1) - (trOther == null ? 0 : 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2786/buggy-version/src.main.java.org.snpeff.snpEffect.VariantEffect.java", "BodyUseAPI": [], "Fixed commit": "b85e9fd18ae47dc0f479a0cb124ceefe8ab5954f", "Url": "https://api.github.com/repos/pcingola/SnpEff", "Date": "2016-06-14T14:27:05Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c != null) { mCatalog = c; mCatalogId = mCatalog.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2850/buggy-version/etasdk.src.com.eTilbudsavis.etasdk.pageflip.PageflipFragment.java", "BodyUseAPI": [], "Fixed commit": "9dacbc8473fca04bc71f36583acc214fe6d6cf18", "Url": "https://api.github.com/repos/eTilbudsavis/native-android-sdk", "Date": "2014-11-10T10:07:17Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.allen.muhanmaisi_query.TableShow.curChapter) == 0) { com.example.allen.muhanmaisi_query.TableShow.curChapter = 33; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7785/buggy-version/app.src.main.java.com.example.allen.muhanmaisi_query.TableShow.java", "BodyUseAPI": [], "Fixed commit": "8be1b890ab9a2debf359ed581e5ed3f0ef6f1cb9", "Url": "https://api.github.com/repos/boyPATHolong/MuHanMaiSi-Query", "Date": "2015-10-27T16:05:11Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (qs == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3535/buggy-version/src.com.ymcmp.IDiction.Screen.java", "BodyUseAPI": [], "Fixed commit": "908394e91f828fb00b57b4ba1aa6d1905c4b9b5a", "Url": "https://api.github.com/repos/PerenDarksbane/Larjernok-de-Pjarg", "Date": "2015-11-04T21:18:23Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jenkins == null) { throw new java.lang.RuntimeException(\"Jenkins is not started yet.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4637/buggy-version/src.main.java.org.jenkinsci.plugins.BitbucketSecurityRealm.java", "BodyUseAPI": [], "Fixed commit": "15c2f998c19ee79f72785ad59f231a409ced7915", "Url": "https://api.github.com/repos/mallowlabs/bitbucket-oauth-plugin", "Date": "2016-06-04T15:00:20Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.User.current()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (u != null) { u.setFullName(auth.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4637/buggy-version/src.main.java.org.jenkinsci.plugins.BitbucketSecurityRealm.java", "BodyUseAPI": ["hudson.model.User.setFullName(auth.getName())"], "Fixed commit": "15c2f998c19ee79f72785ad59f231a409ced7915", "Url": "https://api.github.com/repos/mallowlabs/bitbucket-oauth-plugin", "Date": "2016-06-04T15:00:20Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<io.netty.channel.Channel, com.alibaba.rocketmq.broker.client.ClientChannelInfo>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(result.contains(clientChannelInfo.getClientId()))) { result.add(clientChannelInfo.getClientId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3123/buggy-version/rocketmq-broker.src.main.java.com.alibaba.rocketmq.broker.client.ConsumerGroupInfo.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(clientChannelInfo.getClientId())", "com.alibaba.rocketmq.broker.client.ClientChannelInfo.getClientId()"], "Fixed commit": "71955ac44c91c1b304fbf69107314560a7c5c5ad", "Url": "https://api.github.com/repos/lizhanhui/Alibaba_RocketMQ", "Date": "2015-08-28T04:09:17Z"},
{"Line": "=>981", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cz.fidentis.gui.comparison_two_faces.PairComparisonResults.getContext().getComparisonMethod()) == (cz.fidentis.comparison.ComparisonMethod.PROCRUSTES)) header = new java.lang.String[]{ \"\", cz.fidentis.gui.comparison_two_faces.PairComparisonResults.getContext().getModel2().getName() }; else header = new java.lang.String[]{ (((\"Lower: \" + ((cz.fidentis.gui.comparison_two_faces.PairComparisonResults.getContext().getLowerHDTreshold()) * 100)) + \"% Upper: \") + ((cz.fidentis.gui.comparison_two_faces.PairComparisonResults.getContext().getUpperHDTreshold()) * 100)) + \"% threshold\", cz.fidentis.gui.comparison_two_faces.PairComparisonResults.getContext().getModel2().getName() };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5987/buggy-version/GUI.src.cz.fidentis.gui.comparison_two_faces.PairComparisonResults.java", "BodyUseAPI": [], "Fixed commit": "614d9a09f00880ddc081650ad88c3489c9c5d9ee", "Url": "https://api.github.com/repos/Fidentis/Analyst", "Date": "2017-11-17T00:21:48Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((socket) != null) { try { in.close(); socket.close(); } catch (java.io.IOException e) { e.printStackTrace(); } catch (java.lang.RuntimeException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2819/buggy-version/src.se.z_app.stb.api.zenterio.EventListener.java", "BodyUseAPI": [], "Fixed commit": "53e0ddf4182cd097910a0e5f6a7638ef87d83e16", "Url": "https://api.github.com/repos/Z-app/zmote", "Date": "2012-11-19T11:51:54Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((socket) == null) { return null; }else if (socket.isConnected()) { try { int len = in.read(buffer); currentEvent = stringToSTBEvent(new java.lang.String(buffer, 0, len)); } catch (java.io.IOException e) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2819/buggy-version/src.se.z_app.stb.api.zenterio.EventListener.java", "BodyUseAPI": [], "Fixed commit": "53e0ddf4182cd097910a0e5f6a7638ef87d83e16", "Url": "https://api.github.com/repos/Z-app/zmote", "Date": "2012-11-19T11:51:54Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((req.getHeader(\"Authorization\")) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2662/buggy-version/discoursedb-api-rest.src.main.java.edu.cmu.cs.lti.discoursedb.api.browsing.controller.SecurityUtils.java", "BodyUseAPI": [], "Fixed commit": "9f7d1453164788477a95a83284181fee046942c2", "Url": "https://api.github.com/repos/DiscourseDB/discoursedb-core", "Date": "2017-08-29T16:12:32Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((down_Arrow.getVisibility()) == (android.view.View.VISIBLE)) up_Arrow.setVisibility(View.INVISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6082/buggy-version/Crowded.app.src.main.java.team11.crowded.CustomAdapter.java", "BodyUseAPI": [], "Fixed commit": "91cfbba14b8b31281f5c10bcc26a9e2ee53fd4a3", "Url": "https://api.github.com/repos/ucsdCSE110wi16/CSE110M260T11", "Date": "2016-03-07T10:32:16Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((up_Arrow.getVisibility()) == (android.view.View.VISIBLE)) down_Arrow.setVisibility(View.INVISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6082/buggy-version/Crowded.app.src.main.java.team11.crowded.CustomAdapter.java", "BodyUseAPI": [], "Fixed commit": "91cfbba14b8b31281f5c10bcc26a9e2ee53fd4a3", "Url": "https://api.github.com/repos/ucsdCSE110wi16/CSE110M260T11", "Date": "2016-03-07T10:32:16Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(purchaseType.equals(Constants.PRODUCT_TYPE_SUBSCRIPTION))) { purchasePayload += \":\" + (java.util.UUID.randomUUID().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1788/buggy-version/library.src.main.java.com.anjlab.android.iab.v3.BillingProcessor.java", "BodyUseAPI": [], "Fixed commit": "7067a625550001c0f47a2d5eee5b87c81f60add2", "Url": "https://api.github.com/repos/anjlab/android-inapp-billing-v3", "Date": "2015-12-11T15:29:44Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (newArea == null) { if (pointLeft.isAreaStart()) { if ((pointLeft.getY()) < (pointRight.getY())) { newArea = new pi.pathfinder.Area(((pi.pathfinder.GraphConverter.id)++), area.getX(), pointLeft.getY(), 0); newArea.setWidth(area.getWidth()); ++leftCount; }else { ++rightCount; } }else { if ((pointRight.getY()) < (pointLeft.getY())) { newArea = new pi.pathfinder.Area(((pi.pathfinder.GraphConverter.id)++), area.getX(), pointRight.getY(), 0); newArea.setWidth(area.getWidth()); ++rightCount; }else { ++leftCount; } } }else { if (pointLeft.isAreaStart()) { newArea.setHeight(((pointRight.getY()) - (newArea.getY()))); ++rightCount; }else { newArea.setHeight(((pointLeft.getY()) - (newArea.getY()))); ++leftCount; } if ((newArea.getHeight()) >= robotSize) { pi.pathfinder.GraphConverter.addNeighbours(newArea, area.getNeighbours()); toAdd.add(newArea); } newArea = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4042/buggy-version/Bachelor.main.pi.pathfinder.GraphConverter.java", "BodyUseAPI": ["pi.pathfinder.GraphConverter.addNeighbours(pi.pathfinder.Area,area.getNeighbours())", "pi.pathfinder.Area.getY()", "java.util.List<pi.pathfinder.Area>.add(pi.pathfinder.Area)", "pi.pathfinder.Area.getY()", "pi.pathfinder.Area.getHeight()", "pi.pathfinder.Area.setHeight(((pointRight.getY()) - (newArea.getY())))", "pi.pathfinder.Area.setHeight(((pointLeft.getY()) - (newArea.getY())))"], "Fixed commit": "79cd141a3adbee76b7cf0ee1ddf81edf34eaecf4", "Url": "https://api.github.com/repos/Mupfy/robby", "Date": "2017-08-06T11:21:03Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<pi.pathfinder.NeighbourEdgePoint>.get(int)", "java.util.List<pi.pathfinder.NeighbourEdgePoint>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((pointRight.getY()) < (pointLeft.getY())) { newArea = new pi.pathfinder.Area(((pi.pathfinder.GraphConverter.id)++), area.getX(), pointRight.getY(), 0); newArea.setWidth(area.getWidth()); ++rightCount; }else { ++leftCount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4042/buggy-version/Bachelor.main.pi.pathfinder.GraphConverter.java", "BodyUseAPI": ["pi.pathfinder.NeighbourEdgePoint.getY()"], "Fixed commit": "79cd141a3adbee76b7cf0ee1ddf81edf34eaecf4", "Url": "https://api.github.com/repos/Mupfy/robby", "Date": "2017-08-06T11:21:03Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOutOfFrame()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4905/buggy-version/app.src.main.java.com.myGame.thunder.Pixel.java", "BodyUseAPI": [], "Fixed commit": "2822cb6ed7592e2448e5ea744f652f1d34837d5d", "Url": "https://api.github.com/repos/dklaputa/PlaneWarGame", "Date": "2017-04-30T14:38:19Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<Common.TreeNode>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((n.right) != null) { stack.push(n.right); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1668/buggy-version/src.MiscQuestions.Subtree.java", "BodyUseAPI": ["java.util.Stack<Common.TreeNode>.push(n.right)"], "Fixed commit": "0fc2123bf983b5005012d4464a04e0b9a706acc4", "Url": "https://api.github.com/repos/pdkk2004/CodingExercise", "Date": "2015-11-16T19:38:25Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<Common.TreeNode>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((n.left) != null) { stack.push(n.left); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1668/buggy-version/src.MiscQuestions.Subtree.java", "BodyUseAPI": ["java.util.Stack<Common.TreeNode>.push(n.left)"], "Fixed commit": "0fc2123bf983b5005012d4464a04e0b9a706acc4", "Url": "https://api.github.com/repos/pdkk2004/CodingExercise", "Date": "2015-11-16T19:38:25Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5267/buggy-version/src.cluedo.Game.java", "BodyUseAPI": [], "Fixed commit": "47058df26d7c971722c0d756e715730f49c4ea34", "Url": "https://api.github.com/repos/imaginaryCorn/cludo", "Date": "2016-08-17T10:11:15Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (file != null) { java.lang.String[] lines = processing.core.PApplet.loadStrings(file); content = processing.core.PApplet.join(lines, \"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2267/buggy-version/app.src.processing.app.ui.WebFrame.java", "BodyUseAPI": [], "Fixed commit": "f9c248f0e06a53ffd35b5f5f9484cc7072cd2526", "Url": "https://api.github.com/repos/Luxapodular/processing", "Date": "2015-07-17T13:47:23Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (htmlFile.exists()) { return htmlFile; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2267/buggy-version/app.src.processing.app.ui.Welcome.java", "BodyUseAPI": [], "Fixed commit": "f9c248f0e06a53ffd35b5f5f9484cc7072cd2526", "Url": "https://api.github.com/repos/Luxapodular/processing", "Date": "2015-07-17T13:47:23Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((atts.getValue(\"class\")) != null) { this.chapter.unread(((atts.getValue(\"class\").length()) == 17)); this.stage = 31; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/379/buggy-version/src.main.java.at.yawk.fimfiction.html.FullSearchParser.java", "BodyUseAPI": ["java.lang.String.length()", "org.xml.sax.Attributes.getValue(java.lang.String)", "at.yawk.fimfiction.Chapter.ChapterBuilder.unread(boolean)"], "Fixed commit": "82ee4aa1f1a25c25b09c2c57b429e5b667c85a4b", "Url": "https://api.github.com/repos/yawkat/FimFiction-Java", "Date": "2013-12-17T18:14:04Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.Object>>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cnt != 0) { for (int i = 0; i < cnt; i++) { m_listInfo.get(i).put(com.jonma.lrhealth.DeviceListActivity.ObjectStatus, getResources().getString(com.jonma.lrhealth.DeviceListActivity.lvConnectStaNot)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2407/buggy-version/LRHealth.src.com.jonma.lrhealth.DeviceListActivity.java", "BodyUseAPI": [], "Fixed commit": "e50db60b1dc2050e605bc03540afd8393f626a69", "Url": "https://api.github.com/repos/merlin60/android", "Date": "2014-12-24T09:17:10Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((a.size()) == 0) && ((b.size()) == 0)) return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/405/buggy-version/gotrack.src.main.java.ubc.pavlab.gotrack.utilities.Jaccard.java", "BodyUseAPI": [], "Fixed commit": "82bdb967ff628ce780fc5d98596259bdf834749c", "Url": "https://api.github.com/repos/PavlidisLab/gotrack", "Date": "2015-05-21T01:27:58Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((a.size()) == 0) && ((b.size()) == 0)) return 1.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/405/buggy-version/gotrack.src.main.java.ubc.pavlab.gotrack.utilities.Jaccard.java", "BodyUseAPI": [], "Fixed commit": "82bdb967ff628ce780fc5d98596259bdf834749c", "Url": "https://api.github.com/repos/PavlidisLab/gotrack", "Date": "2015-05-21T01:27:58Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((a.length) == 0) && ((b.length) == 0)) return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/405/buggy-version/gotrack.src.main.java.ubc.pavlab.gotrack.utilities.Jaccard.java", "BodyUseAPI": [], "Fixed commit": "82bdb967ff628ce780fc5d98596259bdf834749c", "Url": "https://api.github.com/repos/PavlidisLab/gotrack", "Date": "2015-05-21T01:27:58Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((a.length) == 0) && ((b.length) == 0)) return 1.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/405/buggy-version/gotrack.src.main.java.ubc.pavlab.gotrack.utilities.Jaccard.java", "BodyUseAPI": [], "Fixed commit": "82bdb967ff628ce780fc5d98596259bdf834749c", "Url": "https://api.github.com/repos/PavlidisLab/gotrack", "Date": "2015-05-21T01:27:58Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((number) != null) p.setCreditCard(new com.realdolmen.redoair.controller.CreditCard(number));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2281/buggy-version/src.main.java.com.realdolmen.redoair.controller.BookingCreationWizard.java", "BodyUseAPI": [], "Fixed commit": "013381666f6f3be4fc947d87db3ebb74544ae7fa", "Url": "https://api.github.com/repos/HerrSubset/redo-air", "Date": "2016-09-08T11:56:09Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (sequenceNumber == 0) { startsAtZero.add(queue); pointer.setHead(sequenceNumber); }else if (((startsAtZero.contains(queue)) == false) && (((pointer.getHead()) > sequenceNumber) || ((pointer.getHead()) == 0))) { pointer.setHead(sequenceNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/734/buggy-version/src.main.java.org.mule.modules.fifoqueue.FifoQueueConnector.java", "BodyUseAPI": ["org.mule.modules.fifoqueue.QueuePointer.setHead(java.lang.Long)", "org.mule.modules.fifoqueue.QueuePointer.setHead(java.lang.Long)"], "Fixed commit": "9d84706022e8f2b8b5fd868f8249500650af08af", "Url": "https://api.github.com/repos/Ricston/mule-fifo-queue-connector", "Date": "2015-05-02T13:05:02Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((name.indexOf(',')) > 0) { name = name.split(\",\")[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3293/buggy-version/src.main.java.de.saly.elasticsearch.importer.imap.ldap.LdapLoginSource.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "9ae0fc4507780a5cde4e0165bc7e0999f4447bc1", "Url": "https://api.github.com/repos/salyh/elasticsearch-imap", "Date": "2015-11-11T16:24:10Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentMarker) == null) { currentMarker = map.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(latLng).title(\"Current Location\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7775/buggy-version/android.app.src.main.java.com.coachksrun.maps.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "85d248076b2db7dd65a8cddb2bd28a7b4ddc1721", "Url": "https://api.github.com/repos/phillipchengh/Coach_K", "Date": "2014-11-18T05:59:39Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.graphics.drawable.BitmapDrawable) (imageView.getDrawable())).getBitmap()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((bitmap != null) && (!(bitmap.isRecycled()))) { imageView.setImageBitmap(io.sharif.prj.st91106224.st91105693.st91106235.sandoogh.pages.home.MainActivity.getCircleBitmap(bitmap)); bitmap = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1727/buggy-version/app.src.main.java.io.sharif.prj.st91106224.st91105693.st91106235.sandoogh.pages.home.MainActivity.java", "BodyUseAPI": ["io.sharif.prj.st91106224.st91105693.st91106235.sandoogh.pages.home.MainActivity.getCircleBitmap(android.graphics.Bitmap)", "android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "3c2938432eedc56cd2324775b32c2fedc6e6906a", "Url": "https://api.github.com/repos/zknazanin/Sandoogh", "Date": "2016-07-30T14:51:14Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((subfolder) != null) && ((subfolder) != \"\")) { url = ((subfolder) + \"/\") + url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5223/buggy-version/qBittorrentClient.src.com.lgallardo.qbittorrentclientpro.JSONParser.java", "BodyUseAPI": [], "Fixed commit": "cc2a43c74132552484897583384a62b9855cd21c", "Url": "https://api.github.com/repos/lgallard/qBittorrent-Client", "Date": "2014-09-27T13:35:30Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((subfolder) != null) && ((subfolder) != \"\")) { url = ((subfolder) + \"/\") + url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5223/buggy-version/qBittorrentClient.src.com.lgallardo.qbittorrentclientpro.JSONParser.java", "BodyUseAPI": [], "Fixed commit": "cc2a43c74132552484897583384a62b9855cd21c", "Url": "https://api.github.com/repos/lgallard/qBittorrent-Client", "Date": "2014-09-27T13:35:30Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((subfolder) != null) && ((subfolder) != \"\")) { url = ((subfolder) + \"/\") + url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5223/buggy-version/qBittorrentClient.src.com.lgallardo.qbittorrentclientpro.JSONParser.java", "BodyUseAPI": [], "Fixed commit": "cc2a43c74132552484897583384a62b9855cd21c", "Url": "https://api.github.com/repos/lgallard/qBittorrent-Client", "Date": "2014-09-27T13:35:30Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((userData.length) >= 4) { model.UserProfile profile = new model.UserProfile(userData[1], userData[4], userData[5], userData[6]); newUser = new model.User(tempUser, profile); }else { newUser = new model.User(tempUser, new model.UserProfile(userData[1])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2634/buggy-version/src.model.UserDatabase.java", "BodyUseAPI": [], "Fixed commit": "452694343cf68e9bf37612ed6df72377783f0a30", "Url": "https://api.github.com/repos/sseunKang/Genos", "Date": "2016-10-19T04:28:43Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((permissions.length()) > 0) { arrPers = new java.lang.String[]{ permissions }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2701/buggy-version/core.webui-administration.src.main.java.org.exoplatform.ecm.webui.component.admin.views.UIViewList.java", "BodyUseAPI": [], "Fixed commit": "fdc50fe8dc2dcb33b0c2d47b7fc89b1cd1c6eab2", "Url": "https://api.github.com/repos/exodev/ecms", "Date": "2013-02-26T08:32:53Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exoplatform.ecm.webui.component.admin.views.UIViewPermissionList.removePermission(java.lang.String,uiViewForm.getPermission())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((permissions.length()) == 0) { org.exoplatform.webui.core.UIApplication uiApp = uiPermissionList.getAncestorOfType(org.exoplatform.webui.core.UIApplication.class); uiApp.addMessage(new org.exoplatform.web.application.ApplicationMessage(\"UIViewPermissionList.msg.permission-cannot-empty\", null, org.exoplatform.web.application.ApplicationMessage.WARNING)); uiTabPane.setSelectedTab(uiTabPane.getSelectedTabId()); event.getRequestContext().addUIComponentToUpdateByAjax(uiTabPane); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2701/buggy-version/core.webui-administration.src.main.java.org.exoplatform.ecm.webui.component.admin.views.UIViewPermissionList.java", "BodyUseAPI": [], "Fixed commit": "fdc50fe8dc2dcb33b0c2d47b7fc89b1cd1c6eab2", "Url": "https://api.github.com/repos/exodev/ecms", "Date": "2013-02-26T08:32:53Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((permissions.length()) > 0) { arrPers = new java.lang.String[]{ permissions }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2701/buggy-version/core.webui-administration.src.main.java.org.exoplatform.ecm.webui.component.admin.views.UIViewPermissionList.java", "BodyUseAPI": [], "Fixed commit": "fdc50fe8dc2dcb33b0c2d47b7fc89b1cd1c6eab2", "Url": "https://api.github.com/repos/exodev/ecms", "Date": "2013-02-26T08:32:53Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (compound.hasKey(\"Type\")) { type = com.m4thg33k.lit.api.chest.ChestTypes.getTypeByName(compound.getString(\"Type\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6323/buggy-version/src.main.java.com.m4thg33k.lit.tiles.TileImprovedChest.java", "BodyUseAPI": ["com.m4thg33k.lit.api.chest.ChestTypes.getTypeByName(compound.getString(\"Type\"))", "net.minecraft.nbt.NBTTagCompound.getString(java.lang.String)"], "Fixed commit": "56b047d0c2ffb905531682d3296e064dabb26ac0", "Url": "https://api.github.com/repos/M4thG33k/LittleInsignificantThings_1.9", "Date": "2016-03-29T23:12:10Z"},
{"Line": "=>649", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (metaIndex != null) { java.lang.System.out.println((((\"Old ID: \" + (metaIndex.getIndex())) + \" New ID: \") + (metaIndex.getNewIndex()))); java.lang.System.out.println((((\"Old Type: \" + (metaIndex.getOldType())) + \" New Type: \") + (metaIndex.getNewType()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4482/buggy-version/src.main.java.us.myles.ViaVersion.transformers.OutgoingTransformer.java", "BodyUseAPI": ["java.io.PrintStream.println((((\"Old ID: \" + (metaIndex.getIndex())) + \" New ID: \") + (metaIndex.getNewIndex())))", "us.myles.ViaVersion.metadata.MetaIndex.getIndex()", "us.myles.ViaVersion.metadata.MetaIndex.getNewType()", "us.myles.ViaVersion.metadata.MetaIndex.getNewIndex()", "us.myles.ViaVersion.metadata.MetaIndex.getOldType()", "java.io.PrintStream.println((((\"Old Type: \" + (metaIndex.getOldType())) + \" New Type: \") + (metaIndex.getNewType())))"], "Fixed commit": "785f0664da323acc6c255d648a1a5e1a4b0d0407", "Url": "https://api.github.com/repos/Mystalion/ViaVersion", "Date": "2016-03-02T19:42:14Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (metaIndex == null) { try { java.lang.System.out.println((((\"Meta Data for \" + type) + \": Not found, ID: \") + ((int) (us.myles.ViaVersion.util.ReflectionUtil.invoke(watchableObj, \"a\"))))); } catch (java.lang.NoSuchMethodException e) { e.printStackTrace(); } catch (java.lang.reflect.InvocationTargetException e) { e.printStackTrace(); } catch (java.lang.IllegalAccessException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4482/buggy-version/src.main.java.us.myles.ViaVersion.transformers.OutgoingTransformer.java", "BodyUseAPI": [], "Fixed commit": "785f0664da323acc6c255d648a1a5e1a4b0d0407", "Url": "https://api.github.com/repos/Mystalion/ViaVersion", "Date": "2016-03-02T19:42:14Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(firstName.getText().toString().isEmpty())) { controller.addContact(current); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7336/buggy-version/src.main.java.ui.contacts.ShowActivity.java", "BodyUseAPI": [], "Fixed commit": "f2b16567da74ee7b5bca8f5468838a8acc6eaf80", "Url": "https://api.github.com/repos/execat/ui-design-class", "Date": "2015-11-04T07:38:59Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(firstName.getText().toString().isEmpty())) { controller.updateContactAt(number, current); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7336/buggy-version/src.main.java.ui.contacts.ShowActivity.java", "BodyUseAPI": [], "Fixed commit": "f2b16567da74ee7b5bca8f5468838a8acc6eaf80", "Url": "https://api.github.com/repos/execat/ui-design-class", "Date": "2015-11-04T07:38:59Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((location) == null) { beginLine = \"line unknown\"; }else { beginLine = java.lang.String.valueOf(location.getBeginLine()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2889/buggy-version/kennedy-langlotz.KLQ.src.com.klq.typechecker.error.AError.java", "BodyUseAPI": [], "Fixed commit": "74c899729f912ba96adc6333e55cbc14cd8d73ec", "Url": "https://api.github.com/repos/software-engineering-amsterdam/many-ql", "Date": "2015-03-16T13:53:59Z"},
{"Line": "=>627", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.datadryad.dans.Item.getMetadata(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dcvs.length) > 1) { org.datadryad.dans.DANSTransfer.log.info(((\"Item with id \" + (java.lang.Integer.toString(item.getID()))) + \" contained more than one Edit IRI - please reduce this to exactly one\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/839/buggy-version/src.main.java.org.datadryad.dans.DANSTransfer.java", "BodyUseAPI": [], "Fixed commit": "a3df45fe33879322200103b907bb96b301fa9ddb", "Url": "https://api.github.com/repos/datadryad/dryad2dans", "Date": "2017-03-03T15:04:15Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minute < 10) { min = \"0\" + min; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7951/buggy-version/EventFly.app.src.main.java.bth740.eventfly.Create.EnterFieldsFragment.java", "BodyUseAPI": [], "Fixed commit": "a63d4c473cc61c4dd1202ab40e854be0e2673566", "Url": "https://api.github.com/repos/PolymorphicStudios/Event-Fly", "Date": "2014-12-01T22:20:07Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((expenseBuilder.getPhotoList()) != null) { for (int i = 0; i < (expenseBuilder.getPhotoList().size()); i++) { android.util.Log.d(com.expensemanager.app.service.SyncExpense.TAG, (\"Update expense, start upload photo at index: \" + i)); com.expensemanager.app.service.SyncExpense.addExpensePhoto(expense.getId(), expenseBuilder.getPhotoList().get(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1293/buggy-version/app.src.main.java.com.expensemanager.app.service.SyncExpense.java", "BodyUseAPI": ["expenseBuilder.getPhotoList().get(int)", "expenseBuilder.getPhotoList().size()", "com.expensemanager.app.service.ExpenseBuilder.getPhotoList()", "com.expensemanager.app.service.ExpenseBuilder.getPhotoList()", "com.expensemanager.app.service.SyncExpense.addExpensePhoto(expense.getId(),expenseBuilder.getPhotoList().get(i))"], "Fixed commit": "d54014b843fe8cdf19389c2a1dc0da59300b17ef", "Url": "https://api.github.com/repos/expense-manager/extr", "Date": "2016-09-04T03:42:35Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((fcd2.getFrequency()) >= (source.tuner.fcd.proplusV2.FCD2TunerController.MINIMUM_TUNABLE_FREQUENCY)) && ((fcd2.getFrequency()) <= (source.tuner.fcd.proplusV2.FCD2TunerController.MAXIMUM_TUNABLE_FREQUENCY))) { frequency = fcd2.getFrequency(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2137/buggy-version/src.source.tuner.fcd.proplusV2.FCD2TunerController.java", "BodyUseAPI": ["source.tuner.fcd.proplusV2.FCD2TunerConfiguration.getFrequency()"], "Fixed commit": "119370c46e864361549568d1484c98c0aefa6f89", "Url": "https://api.github.com/repos/grumble1965/sdrtrunk", "Date": "2017-02-25T19:57:25Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (localCommonName.equals(remoteCommonName)) throw new org.dyndns.fzoli.socket.handler.exception.MultipleCertificateException(\"The client uses the server's name\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4632/buggy-version/src.org.dyndns.fzoli.socket.handler.AbstractSecureServerHandler.java", "BodyUseAPI": [], "Fixed commit": "b158d6245e83e6fa63f3987a8808821b8b9c8def", "Url": "https://api.github.com/repos/fzoli/RemoteControlCar", "Date": "2013-01-03T01:52:30Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index > previousInt) { index--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2733/buggy-version/src.logic.Logic.java", "BodyUseAPI": [], "Fixed commit": "a38424ca41203795ae07b25ac40c1ac3848921b1", "Url": "https://api.github.com/repos/cs2103aug2015-w10-4j/main", "Date": "2015-10-14T15:26:46Z"},
{"Line": "=>689", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(processFile(file.getName()))) { return javax.ws.rs.core.Response.ok().build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/502/buggy-version/API.src.main.java.org.endeavourhealth.datasharingmanager.api.endpoints.OrganisationEndpoint.java", "BodyUseAPI": [], "Fixed commit": "4af53ada275ee3921706cea8c99b560388624793", "Url": "https://api.github.com/repos/endeavourhealth-discovery/DataSharingManager", "Date": "2017-08-14T15:20:49Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (roomDTO.getRate().equals(\"[]\")) { roomDTO.setRate(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4138/buggy-version/src.main.java.ua.softserveinc.tc.controller.AdminUpdateRoomController.java", "BodyUseAPI": ["ua.softserveinc.tc.dto.RoomDTO.setRate(<nulltype>)"], "Fixed commit": "00444e1725c633c684fbff675ffa8d2b587ae89d", "Url": "https://api.github.com/repos/koldovsky/kids-room", "Date": "2016-05-28T22:17:01Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.n52.sos.ds.GetDataAvailabilityHandler.checkForGDAv20(org.n52.shetland.ogc.sos.gda.GetDataAvailabilityRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!gdaV20) { return checkForDuplictation(context.getDataAvailabilityList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4070/buggy-version/handler.src.main.java.org.n52.sos.ds.GetDataAvailabilityHandler.java", "BodyUseAPI": [], "Fixed commit": "ada20e6ab2cf152a736e8f63d2725c24250d45dd", "Url": "https://api.github.com/repos/CarstenHollmann/SOS", "Date": "2017-02-16T11:51:01Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cookies == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2391/buggy-version/src.main.java.services.HomeService.java", "BodyUseAPI": [], "Fixed commit": "a4631d7a551cf5ce6058cd7fd3a2a703aeda654c", "Url": "https://api.github.com/repos/dream-play/Final-Todo-App", "Date": "2017-08-18T12:30:58Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bento.lang.PrimitiveValue.getStringFor(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((str == null) || ((str.length()) == 0)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5075/buggy-version/src.bento.lang.PrimitiveValue.java", "BodyUseAPI": [], "Fixed commit": "22f06573afdc115a3049dd1317dfcdc37c4b69df", "Url": "https://api.github.com/repos/bentodev/bentolang", "Date": "2017-04-23T23:46:20Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position > (getCount())) return mList.get((position % (getCount()))); else return mList.get(position);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5722/buggy-version/app.src.main.java.com.example.pc.shacus.swipecards.swipe.UserAdapter.java", "BodyUseAPI": ["java.util.ArrayList<com.example.pc.shacus.Data.Model.RecommandModel>.get(int)", "java.util.ArrayList<com.example.pc.shacus.Data.Model.RecommandModel>.get(int)"], "Fixed commit": "88fb8a8592423aaa0a72e4396fcd3fa220232b60", "Url": "https://api.github.com/repos/LeonidasCl/shacus", "Date": "2017-05-10T02:41:03Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (values == null) { entries = new java.lang.String[0]; }else { entries = values.split(\";\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/358/buggy-version/clients.richclient.src.main.java.org.openecard.richclient.gui.manage.SettingsGroup.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "b351faa9f461184e11e81df515e710c34c07eb7a", "Url": "https://api.github.com/repos/ecsec/open-ecard", "Date": "2013-08-27T08:45:04Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((valueRainFall) == null) valueRainFall = \"0\"; else android.util.Log.e(com.example.jeppe.gbgweather.MainActivity.TAG, (\"Json parsing error: \" + (e.getMessage())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8056/buggy-version/app.src.main.java.com.example.jeppe.gbgweather.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "73f80a4130f6b3357a8f310081da75b8184033a3", "Url": "https://api.github.com/repos/Jeppe91/GBG-Weather", "Date": "2017-05-14T18:43:14Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.orange.nstdemo.NetworkStatsBucket.none()) { com.orange.nstdemo.NetworkStatsBucket.init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6496/buggy-version/app.src.main.java.com.orange.nstdemo.IntentService.java", "BodyUseAPI": [], "Fixed commit": "84612530a963ba013ec0becdefd65970cad2527b", "Url": "https://api.github.com/repos/msalah104/NSTDemo", "Date": "2017-02-26T08:28:24Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (file.toLowerCase().endsWith(\".csv\")) { translators.put(\"CSV\", new org.agmip.translators.csv.CSVInput()); }else if (file.toLowerCase().endsWith(\".aceb\")) { translators.put(\"ACEB\", new org.agmip.ui.quadui.TranslateFromTask.AcebInput()); }else if (file.toLowerCase().endsWith(\".json\")) { translators.put(\"JSON\", new org.agmip.ui.quadui.TranslateFromTask.JsonInput()); }else if (((file.toLowerCase().endsWith(\".sol\")) || (file.toLowerCase().endsWith(\".wth\"))) || (file.toLowerCase().matches(\".+\\\\.\\\\d{2}[xat]\"))) { translators.put(\"DSSAT\", new org.agmip.translators.dssat.DssatControllerInput()); }else { org.agmip.ui.quadui.TranslateFromTask.LOG.error(\"Unsupported file: {}\", file); throw new java.lang.Exception(\"Unsupported file type\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/654/buggy-version/src.main.java.org.agmip.ui.quadui.TranslateFromTask.java", "BodyUseAPI": [], "Fixed commit": "f94541314568f6682d5f627b67c7c1d7733991e7", "Url": "https://api.github.com/repos/agmip/quadui", "Date": "2015-04-21T17:40:59Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (session != null) { session.setAttribute(\"userName\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7892/buggy-version/src.org.pine.servlets.users.Logout.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.setAttribute(java.lang.String,<nulltype>)"], "Fixed commit": "cfcccfbadee74a02d85f2f3398b50ca887084846", "Url": "https://api.github.com/repos/barik87/pine", "Date": "2013-03-26T20:16:55Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((phoneNumber.equals(\"\")) || (phoneNumber.equals(ch.ethz.inf.vs.android.siwehrli.antitheft.MainActivity.PHONE_NUMBER_DEFAULT))) inform = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5890/buggy-version/VS_siwehrli_AntiTheft.src.ch.ethz.inf.vs.android.siwehrli.antitheft.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b2b7d83f293482a1040f10be1906cce2b5145940", "Url": "https://api.github.com/repos/gitsimon/AndroidTraining", "Date": "2012-10-10T21:04:29Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((jcMediaPlayerListener.getScreenType()) == (JCVideoPlayer.SCREEN_WINDOW_FULLSCREEN)) || ((jcMediaPlayerListener.getScreenType()) == (JCVideoPlayer.SCREEN_WINDOW_TINY))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7250/buggy-version/jcvideoplayer-lib.src.main.java.fm.jiecao.jcvideoplayer_lib.JCVideoPlayerManager.java", "BodyUseAPI": [], "Fixed commit": "03c9676c0a654d1bac5e0f7ed1bc070135a6cea9", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2016-11-27T08:40:52Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((JCMediaManager.textureView.getParent()) != null) { ((android.view.ViewGroup) (JCMediaManager.textureView.getParent())).removeView(JCMediaManager.textureView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7250/buggy-version/jcvideoplayer-lib.src.main.java.fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "03c9676c0a654d1bac5e0f7ed1bc070135a6cea9", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2016-11-27T08:40:52Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((reborncore.shields.json.ShieldJsonLoader.shieldJsonFile) == null) || ((ShieldJsonLoader.shieldJsonFile.userList) == null)) { renderer.renderByItem(itemStackIn); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8689/buggy-version/src.main.java.reborncore.shields.client.RebornItemStackRenderer.java", "BodyUseAPI": [], "Fixed commit": "5acd0e7a0f3dce60af23a675a3717f7ff60dd41b", "Url": "https://api.github.com/repos/TechReborn/RebornCore", "Date": "2016-07-03T20:09:02Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == (org.spongepowered.api.util.Tristate.UNDEFINED)) { return me.ryanhamshire.griefprevention.GPPermissionHandler.getFlagDefault(claim, permission); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2330/buggy-version/src.me.ryanhamshire.griefprevention.GPPermissionHandler.java", "BodyUseAPI": [], "Fixed commit": "12fe995e9d693b7f7356fe5f0ef5caa34fa38c77", "Url": "https://api.github.com/repos/MinecraftPortCentral/GriefPrevention", "Date": "2016-11-26T15:59:53Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(recording.hasCompletedFile())) { java.io.File completedFile = recording.getCompletedFile(); if (completedFile == null) { completedFile = new java.io.File(((((context.getRecordingDir()) + (java.io.File.separator)) + (recording.getEpisode().getId())) + \".mp4\")); recording.setCompletedFile(completedFile); } java.io.File testFile = new java.io.File((((((context.getPluginDir()) + (java.io.File.separator)) + \"Test\") + (java.io.File.separator)) + \"TestEpisode.mp4\")); try { logger.info((((\"Copy test programme in from \" + testFile) + \" to \") + completedFile)); java.nio.file.Files.copy(testFile.toPath(), completedFile.toPath()); } catch (java.lang.Exception e) { logger.error(\"Failed to copy in substitute completed file\", e); e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4865/buggy-version/src.main.java.uk.co.mdjcox.sagetv.catchup.Recorder.java", "BodyUseAPI": ["uk.co.mdjcox.sagetv.model.Recording.getEpisode()", "uk.co.mdjcox.sagetv.model.Recording.setCompletedFile(java.io.File)", "uk.co.mdjcox.sagetv.model.Recording.getCompletedFile()", "recording.getEpisode().getId()"], "Fixed commit": "9d496fe185bf477115173ac1c30ff5deb233b382", "Url": "https://api.github.com/repos/michaeldjcox/sagetvcatchup", "Date": "2014-12-04T08:17:55Z"},
{"Line": "=>616", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((targetStates[0]) == (com.malmstein.fenster.view.FensterDualVideoView.STATE_PLAYING)) && ((targetStates[1]) == (com.malmstein.fenster.view.FensterDualVideoView.STATE_PLAYING))) { for (int i = 0; i < (com.malmstein.fenster.view.FensterDualVideoView.N); ++i) { openVideo(i); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7965/buggy-version/library.src.main.java.com.malmstein.fenster.view.FensterDualVideoView.java", "BodyUseAPI": [], "Fixed commit": "7e82e8126cee1462df59a1e7c909f11c628efbb4", "Url": "https://api.github.com/repos/skonb/fenster", "Date": "2016-11-11T06:42:39Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRepeat == false) { audioTrack.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3496/buggy-version/app.src.main.java.fruitbasket.com.audioprocessor.modulate.MessageAudioPlayer.java", "BodyUseAPI": [], "Fixed commit": "72ae2cec2767bc737fd5b92a909d4d282b224d21", "Url": "https://api.github.com/repos/SSMC-Lab/AudioProcessor", "Date": "2016-09-23T03:32:47Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5039/buggy-version/src.com.mojang.ld22.entity.Inventory.java", "BodyUseAPI": [], "Fixed commit": "e32aaa590f164337f2126dd426f21345f7f7e7fe", "Url": "https://api.github.com/repos/chrisj42/minicraft-plus-revived", "Date": "2017-04-10T02:53:22Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (identifier.startsWith(\"faction-\")) { return new org.appledash.saneeconomy.economy.economable.EconomableFaction(identifier.replace(\"faction-\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2079/buggy-version/SaneEconomyCore.src.main.java.org.appledash.saneeconomy.economy.economable.Economable.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "770536e5143e78014401e8392ec572612469d635", "Url": "https://api.github.com/repos/AppleDash/SaneEconomy", "Date": "2016-07-20T07:03:21Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.uu.ub.cora.storage.RecordStorageInMemory.extractLinkedRecordTypeValue(se.uu.ub.cora.bookkeeper.data.DataGroup)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (linksForToPart.containsKey(fromType)) { linksForToPart.get(fromType).remove(fromId); if (linksForToPart.get(fromType).isEmpty()) { linksForToPart.remove(fromType); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3801/buggy-version/src.main.java.se.uu.ub.cora.storage.RecordStorageInMemory.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<se.uu.ub.cora.bookkeeper.data.DataGroup>>>.get(java.lang.String)", "linksForToPart.get(fromType).remove(java.lang.String)", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<se.uu.ub.cora.bookkeeper.data.DataGroup>>>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<se.uu.ub.cora.bookkeeper.data.DataGroup>>>.remove(java.lang.String)", "linksForToPart.get(fromType).isEmpty()"], "Fixed commit": "f091952b26242e7b42a1a292069928e93976ade9", "Url": "https://api.github.com/repos/maddekenn/cora-basicstorage", "Date": "2016-12-09T12:17:29Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["forplay.sample.hello.core.HelloGame.touch()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (touch != null) { touch.setListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/733/buggy-version/sample.KillHudson.core.src.forplay.sample.hello.core.HelloGame.java", "BodyUseAPI": ["forplay.core.Touch.setListener(forplay.sample.hello.core.HelloGame)"], "Fixed commit": "f90fe976e9782ec10ac243523c4744c56b751c1b", "Url": "https://api.github.com/repos/pyricau/forplay-clone-pyricau", "Date": "2011-05-30T15:27:06Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["forplay.sample.hello.core.HelloGame.pointer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (pointer != null) pointer.setListener(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/733/buggy-version/sample.KillHudson.core.src.forplay.sample.hello.core.HelloGame.java", "BodyUseAPI": ["forplay.core.Pointer.setListener(forplay.sample.hello.core.HelloGame)"], "Fixed commit": "f90fe976e9782ec10ac243523c4744c56b751c1b", "Url": "https://api.github.com/repos/pyricau/forplay-clone-pyricau", "Date": "2011-05-30T15:27:06Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == textIndex) { xgen.setNextIsUnwrapped(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6509/buggy-version/src.main.java.com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.java", "BodyUseAPI": [], "Fixed commit": "b1955591ff2600530856361066b9b60e18ff1714", "Url": "https://api.github.com/repos/FasterXML/jackson-dataformat-xml", "Date": "2013-12-10T16:56:48Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((zkSplit.length) > 1) { zkPathSuffix = ((zkSplit[1]) + \"/\") + zkPathSuffix; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5040/buggy-version/pinot-broker.src.main.java.com.linkedin.pinot.broker.broker.helix.HelixBrokerStarter.java", "BodyUseAPI": [], "Fixed commit": "a35a5157e768527c44a8dd27a08dcda3aaabff83", "Url": "https://api.github.com/repos/linkedin/pinot", "Date": "2016-10-27T21:55:09Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (name != null) for (org.eclipse.bpmn2.FlowElement ee : elementsBPMNtemp) { if (!(ee.equals(e))) { java.lang.String namee = ee.getName(); if (namee == null) namee = getName(ee); if (namee != null) if (name.equals(namee)) { flags = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4263/buggy-version/lp-model-verification.verification-component-understandability-plugin.src.main.java.eu.learnpad.verification.plugin.bpmn.guideline.impl.notationusage.ConsistentUsageEndEvents.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "87a5baf320d360ebae380cb1f095fe57f1d29f20", "Url": "https://api.github.com/repos/imatesiu/learnpad", "Date": "2016-03-10T17:05:38Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (concepts == null) return new java.util.ArrayList<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2904/buggy-version/bahmnicore-api.src.main.java.org.bahmni.module.bahmnicore.service.impl.BahmniObsServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "e71a7342a9cc48394e66f23d12afb407047e951a", "Url": "https://api.github.com/repos/Bahmni/bahmni-core", "Date": "2016-12-05T05:54:04Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gm) instanceof networking.GameManagerNetwork) ((networking.GameManagerNetwork) (gm)).setYourRound(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1389/buggy-version/IlLaureato.src.core.AzioneFermaTurno.java", "BodyUseAPI": [], "Fixed commit": "7e2c3108bbaf51470749d08bcb0fac3446f38e65", "Url": "https://api.github.com/repos/ogavb/progettoIGPE", "Date": "2016-07-18T09:01:47Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isYourRound)) client.addRequest(((\"13##\" + (gestore.getNextPlayer(corrente.getNome()))) + \"##10\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1389/buggy-version/IlLaureato.src.networking.GameManagerNetwork.java", "BodyUseAPI": [], "Fixed commit": "7e2c3108bbaf51470749d08bcb0fac3446f38e65", "Url": "https://api.github.com/repos/ogavb/progettoIGPE", "Date": "2016-07-18T09:01:47Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (geometry.getEnvelopeInternal().intersects(envelope)) { com.vividsolutions.jts.geom.Geometry localGeometry1 = org.h2gis.h2spatialext.function.spatial.edit.ST_RemovePoint.deleteComponents(geometry, envelope); if (localGeometry1 != null) { return localGeometry1; } com.vividsolutions.jts.geom.Geometry localGeometry2 = org.h2gis.h2spatialext.function.spatial.edit.ST_RemovePoint.deleteVertices(geometry, envelope); if (localGeometry2 != null) { return localGeometry2; } return null; }else { return geometry; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2583/buggy-version/h2spatial-ext.src.main.java.org.h2gis.h2spatialext.function.spatial.edit.ST_RemovePoint.java", "BodyUseAPI": ["org.h2gis.h2spatialext.function.spatial.edit.ST_RemovePoint.deleteVertices(com.vividsolutions.jts.geom.Geometry,com.vividsolutions.jts.geom.Envelope)", "org.h2gis.h2spatialext.function.spatial.edit.ST_RemovePoint.deleteComponents(com.vividsolutions.jts.geom.Geometry,com.vividsolutions.jts.geom.Envelope)"], "Fixed commit": "74ddaa3c2eafeb3cd6dd7cbe931e70f60943076e", "Url": "https://api.github.com/repos/agouge/H2GIS", "Date": "2014-04-03T18:54:37Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Node.SourceToken) != null) { this.SetLineNumber(Node.SourceToken.FileLine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1553/buggy-version/src.zen.codegen.jvm.AsmMethodBuilder.java", "BodyUseAPI": ["zen.codegen.jvm.AsmMethodBuilder.SetLineNumber(Node.SourceToken.FileLine)"], "Fixed commit": "50e72c65ffc8475a86f590e7590e6b1a48850fb4", "Url": "https://api.github.com/repos/sekiguchi-nagisa/libzen", "Date": "2014-01-31T08:26:06Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.cloudscaleproject.env.analyser.editors.config.UsageComposite.getLimboAlternative(this.usage.getLoadEvolution())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (eir != null) { limboComboViewer.setSelection(new org.eclipse.jface.viewers.StructuredSelection(eir)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2599/buggy-version/plugins.eu.cloudscaleproject.env.analyser.src.eu.cloudscaleproject.env.analyser.editors.config.UsageComposite.java", "BodyUseAPI": ["org.eclipse.jface.viewers.ComboViewer.setSelection(org.eclipse.jface.viewers.StructuredSelection)"], "Fixed commit": "ce61907934dbdb85073e888a8d1bcbcc9435667d", "Url": "https://api.github.com/repos/CloudScale-Project/Environment", "Date": "2015-07-03T08:25:40Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((request == null) || (request.isEmpty())) { java.util.Enumeration<?> it = req.getParameterNames(); while (it.hasMoreElements()) { java.lang.String next = it.nextElement().toString(); if (next.equalsIgnoreCase(\"request\")) { request = req.getParameter(next); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1658/buggy-version/src.main.java.de.ifgi.mosia.wpswfs.BaseServlet.java", "BodyUseAPI": [], "Fixed commit": "27f56e9bb2c55ca9c79e66476e0a1b2d04e24f6e", "Url": "https://api.github.com/repos/matthesrieke/MOSIA-WFS-WPS-Proxy", "Date": "2014-05-19T12:55:05Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPaused) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1451/buggy-version/StudIPAndroidApp.src.main.java.de.elanev.studip.android.app.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "89fd883f3875c38afa6b8dd11d62453c2d374eef", "Url": "https://api.github.com/repos/elan-ev/StudIPAndroidApp", "Date": "2014-05-08T20:38:04Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.vanroy.springdata.jest.JestElasticsearchTemplate.execute(getMappingBuilder.build())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(result.getJsonObject().has(indexName))) { com.github.vanroy.springdata.jest.JestElasticsearchTemplate.logger.info(\"Index {} did not exist when retrieving mappings for type {}.\", indexName, type); }else { com.google.gson.JsonObject index = result.getJsonObject().get(indexName).getAsJsonObject(); if (index != null) { com.google.gson.JsonObject mappingElem = index.get(\"mappings\").getAsJsonObject(); if (!(mappingElem.has(type))) { com.github.vanroy.springdata.jest.JestElasticsearchTemplate.logger.info(\"Type {} did not exist in index {} when retrieving mappings.\", type, indexName); }else { mappings = resultsMapper.getEntityMapper().mapToObject(mappingElem.get(type).toString(), java.util.Map.class); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3062/buggy-version/spring-data-jest.src.main.java.com.github.vanroy.springdata.jest.JestElasticsearchTemplate.java", "BodyUseAPI": ["result.getJsonObject().get(java.lang.String)", "org.slf4j.Logger.info(java.lang.String,java.lang.String,java.lang.String)", "org.slf4j.Logger.info(java.lang.String,java.lang.String,java.lang.String)", "result.getJsonObject().get(indexName).getAsJsonObject()", "io.searchbox.client.JestResult.getJsonObject()"], "Fixed commit": "026b80a06cad35a7b5e805710f2b7b67cab56a62", "Url": "https://api.github.com/repos/VanRoy/spring-data-jest", "Date": "2016-07-19T18:20:43Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((region.getRegionServerServices()) != null) { tableLockManager = region.getRegionServerServices().getTableLockManager(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7799/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.HMobStore.java", "BodyUseAPI": [], "Fixed commit": "8b19fbe38a684ecc39b1083b2bdfa6af8136eb9a", "Url": "https://api.github.com/repos/JingchengDu/hbase", "Date": "2015-01-08T07:13:27Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (namedParams != null) { setPositionalParams(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2728/buggy-version/jsonrpc-ws-android.src.main.java.fi.vtt.nubomedia.jsonrpcwsandroid.JsonRpcNotification.java", "BodyUseAPI": [], "Fixed commit": "98eb5cb93cf5c749814cd3968be4a0f5f6b42a77", "Url": "https://api.github.com/repos/nubomedia-vtt/jsonrpc-ws-android", "Date": "2016-01-07T08:16:03Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (positionalParams != null) { setNamedParams(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2728/buggy-version/jsonrpc-ws-android.src.main.java.fi.vtt.nubomedia.jsonrpcwsandroid.JsonRpcNotification.java", "BodyUseAPI": [], "Fixed commit": "98eb5cb93cf5c749814cd3968be4a0f5f6b42a77", "Url": "https://api.github.com/repos/nubomedia-vtt/jsonrpc-ws-android", "Date": "2016-01-07T08:16:03Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, cuexpo.cuexpo2017.datatype.InterestItem>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (item != null) item.setInterest(true); else android.util.Log.e(\"tags not found\", tag);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7927/buggy-version/ChulaExpo.app.src.main.java.cuexpo.cuexpo2017.fragment.EditInterestFragment.java", "BodyUseAPI": ["cuexpo.cuexpo2017.datatype.InterestItem.setInterest(boolean)"], "Fixed commit": "b97977f417e4a35ec7afaee561643c883f510b28", "Url": "https://api.github.com/repos/CUTomorrow/chula-expo-2017", "Date": "2017-03-13T21:37:21Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((exportDelivery.getState()) == (ExportDelivery.State.ABORTED)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/9007/buggy-version/database.src.main.java.org.jumbodb.database.service.exporter.ExportDeliveryTask.java", "BodyUseAPI": [], "Fixed commit": "d168051737c87b546ab3aaa1c8e0379b1ef8b11e", "Url": "https://api.github.com/repos/comsysto/jumbodb", "Date": "2013-09-06T07:53:59Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getValueConverter()) != null) { outputValue = getValueConverter().toOutput(outputValue.toNumber(getSize())); if ((outputValue.getSize()) != (getSize())) { outputValue = de.newsarea.homecockpit.fsuipc.domain.ByteArray.create(outputValue.toBigInteger(), getSize()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/801/buggy-version/connectors-fsuipc.src.main.java.de.newsarea.homecockpit.connector.fsuipc.facade.eventhandler.ValueEventHandler.java", "BodyUseAPI": [], "Fixed commit": "33b46e1d3e42073ba42742ebf0a559297e07b1cb", "Url": "https://api.github.com/repos/RBernhardt/homecockpit-connectors", "Date": "2014-01-04T15:39:07Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.soundCardInput) == true) inputThread.closeAudio();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5394/buggy-version/src.org.e2k.Rivet.java", "BodyUseAPI": [], "Fixed commit": "f26628030d8677ab0c4e05184cde8a5378412a04", "Url": "https://api.github.com/repos/IanWraith/Rivet", "Date": "2012-05-22T11:16:58Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<javax.ws.rs.core.PathSegment>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (param.getPath().isEmpty()) { throw new com.g414.st9.proto.service.validator.ValidationException(\"counter parameter may not be empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8577/buggy-version/src.main.java.com.g414.st9.proto.service.CounterResource.java", "BodyUseAPI": [], "Fixed commit": "fce86801277f81f0c70672ea1f011f9b01d87d55", "Url": "https://api.github.com/repos/sunnygleason/st9-proto-service", "Date": "2011-08-08T19:19:27Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(anchorHref)) { anchorHref = anchorElement.attr(\"href\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5144/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.productlanding.ProductLandingVariation1.java", "BodyUseAPI": [], "Fixed commit": "7457dfdd1591be12091ca2d846babb58d9c961df", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2016-01-22T05:40:46Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(messages.isEmpty())) { final com.johnsoft.logcat.LogCatMessage m = messages.get(((messages.size()) - 1)); messages.add(new com.johnsoft.logcat.LogCatMessage(m.getLogLevel(), m.getPid(), m.getTid(), m.getAppName(), m.getThreadName(), m.getTag(), m.getTime(), line, false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3548/buggy-version/src.main.java.com.johnsoft.logcat.LogCatMessageParser3.java", "BodyUseAPI": ["java.util.List<com.johnsoft.logcat.LogCatMessage>.get(((messages.size()) - 1))", "java.util.List<com.johnsoft.logcat.LogCatMessage>.add(com.johnsoft.logcat.LogCatMessage)", "java.util.List<com.johnsoft.logcat.LogCatMessage>.size()"], "Fixed commit": "9ea0ba9394fb923924f9aa06bbd5db7fb7b4228a", "Url": "https://api.github.com/repos/johnlee175/LogcatFileReader", "Date": "2016-04-27T03:18:05Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hbase.client.HTable.get(org.apache.hadoop.hbase.client.Get)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(r.isEmpty())) { byte[] bs = r.getValue(\"m\".getBytes(), \"Data\".getBytes()); java.lang.String page = new java.lang.String(bs, \"UTF-8\"); java.lang.String sgbk = new java.lang.String(bs, \"GBK\"); if ((sgbk.length()) < (page.length())) page = sgbk; if ((page.length()) < (bs.length)) { org.jsoup.nodes.Document doc = org.jsoup.Jsoup.parse(page); org.jsoup.select.Elements ps = doc.getElementsByTag(\"p\"); title = doc.title(); for (org.jsoup.nodes.Element p : ps) text += (p.text()) + \"\\n\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1717/buggy-version/src.main.java.cn.uc.udac.zjj.bolts.BoltCrawler.java", "BodyUseAPI": ["org.apache.hadoop.hbase.client.Result.getValue(byte[],byte[])"], "Fixed commit": "8b62aa0be550ff74afc9a855619c783a18b98d55", "Url": "https://api.github.com/repos/zhouPATHnggen/udac", "Date": "2013-10-01T03:29:37Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (comp != EQUAL) { return comp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/941/buggy-version/src.main.java.dburyak.logmist.model.LogEntry.java", "BodyUseAPI": [], "Fixed commit": "c75b732f31374fa5056a61bf44c832e3e35ee016", "Url": "https://api.github.com/repos/dburyak/logmist", "Date": "2015-12-19T23:52:48Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mGoogleApiClient.isConnected()) { setLocationUpdates(isBackgroundUpdate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7149/buggy-version/app.src.main.java.com.nikolaychernov.samaratransport.DataController.java", "BodyUseAPI": [], "Fixed commit": "b12c5ee9757964823f2df96ea44b52cf821616a2", "Url": "https://api.github.com/repos/nikolaychernov/SamaraTransport", "Date": "2015-11-02T18:54:11Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == attributeApprover) { attributeApprover = uk.co.jemos.podam.api.DefaultClassInfoStrategy.getInstance().getClassAttributeApprover(clazz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3904/buggy-version/src.main.java.uk.co.jemos.podam.api.PodamUtils.java", "BodyUseAPI": [], "Fixed commit": "6bbd72708495ce639c701b1b8d98cf19adac283d", "Url": "https://api.github.com/repos/daivanov/joinmo", "Date": "2015-03-29T12:14:57Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == 1) { pwm.setPWM(pin, 4096, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3409/buggy-version/iot-tank.src.main.java.com.ibm.iot.motor.Motor.java", "BodyUseAPI": [], "Fixed commit": "1739fd825fbde89c2bc31fdc678ccf00a2a87a87", "Url": "https://api.github.com/repos/ldesrosi/iot-tank-client", "Date": "2016-08-28T22:53:15Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (custom_height.equals(\"\")) custom_height = \"9\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6585/buggy-version/UTBM-Minesweeper.src.fr.utbm.lp24.minesweeper.OptionsWindow.java", "BodyUseAPI": [], "Fixed commit": "b41ae2c313a1cba907ca3affd96896daf5533e63", "Url": "https://api.github.com/repos/christophe-r/UTBM-Minesweeper", "Date": "2014-05-01T20:09:33Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (textFieldstr.equals(\"\")) { textFieldstr = \"\" + min; textField.setText((\"\" + textFieldstr)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6585/buggy-version/UTBM-Minesweeper.src.fr.utbm.lp24.minesweeper.OptionsWindow.java", "BodyUseAPI": [], "Fixed commit": "b41ae2c313a1cba907ca3affd96896daf5533e63", "Url": "https://api.github.com/repos/christophe-r/UTBM-Minesweeper", "Date": "2014-05-01T20:09:33Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (custom_height.equals(\"\")) custom_width = \"9\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6585/buggy-version/UTBM-Minesweeper.src.fr.utbm.lp24.minesweeper.OptionsWindow.java", "BodyUseAPI": [], "Fixed commit": "b41ae2c313a1cba907ca3affd96896daf5533e63", "Url": "https://api.github.com/repos/christophe-r/UTBM-Minesweeper", "Date": "2014-05-01T20:09:33Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (custom_mines.equals(\"\")) custom_height = \"10\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6585/buggy-version/UTBM-Minesweeper.src.fr.utbm.lp24.minesweeper.OptionsWindow.java", "BodyUseAPI": [], "Fixed commit": "b41ae2c313a1cba907ca3affd96896daf5533e63", "Url": "https://api.github.com/repos/christophe-r/UTBM-Minesweeper", "Date": "2014-05-01T20:09:33Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maxMines > 668) maxMines = 668;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6585/buggy-version/UTBM-Minesweeper.src.fr.utbm.lp24.minesweeper.OptionsWindow.java", "BodyUseAPI": [], "Fixed commit": "b41ae2c313a1cba907ca3affd96896daf5533e63", "Url": "https://api.github.com/repos/christophe-r/UTBM-Minesweeper", "Date": "2014-05-01T20:09:33Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6639/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "60a5a01c28592dd1747402f2159ee7f5cd2d44d6", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-05T11:54:34Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState != null) { mCurrentPrimaryItem = getNextFragment(); if ((mCurrentPrimaryItem) != null) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/473/buggy-version/onemulti.src.main.java.com.ycdyng.onemulti.OneActivity.java", "BodyUseAPI": [], "Fixed commit": "948793844bf263d574bb74cca1cefa355bd428c3", "Url": "https://api.github.com/repos/EastWoodYang/OneMulti", "Date": "2017-03-24T08:27:43Z"},
{"Line": "=>884", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (commentRef == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8717/buggy-version/plugins.at.bitandart.zoubek.mervin.src.at.bitandart.zoubek.mervin.gerrit.GerritReviewRepositoryService.java", "BodyUseAPI": [], "Fixed commit": "4f284c9c3902cb847e7e07993ac1f5a3d0c20eac", "Url": "https://api.github.com/repos/theArchonius/mervin", "Date": "2016-09-27T14:44:14Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((targetIndex % 100) == 0) { java.lang.System.out.print((\"\\r\" + (java.lang.String.format(\"%.2f\", ((((float) (targetIndex)) / (targetLines.size())) * 100))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6207/buggy-version/src.excavator.CopyTargetNotation.java", "BodyUseAPI": [], "Fixed commit": "09be1e089416d882425ea61156cd241be69ee1db", "Url": "https://api.github.com/repos/ychenracing/CNV", "Date": "2015-12-18T04:49:49Z"},
{"Line": "=>720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((newFirstHeadItem.getMenu()) != null) && ((newFirstHeadItem.getMenu().getItems()) != null)) && ((newFirstHeadItem.getMenu().getItems().size()) > 0)) loadMenu(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4784/buggy-version/materialDrawer.src.main.java.de.madcyph3r.materialnavigationdrawer.MaterialNavigationDrawer.java", "BodyUseAPI": [], "Fixed commit": "01289e950f0952456ffac4bfe26af1b443dc8c81", "Url": "https://api.github.com/repos/madcyph3r/AdvancedMaterialDrawer", "Date": "2015-03-10T14:16:15Z"},
{"Line": "=>839", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((newFirstHeadItem.getMenu()) != null) && ((newFirstHeadItem.getMenu().getItems()) != null)) && ((newFirstHeadItem.getMenu().getItems().size()) > 0)) loadMenu(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4784/buggy-version/materialDrawer.src.main.java.de.madcyph3r.materialnavigationdrawer.MaterialNavigationDrawer.java", "BodyUseAPI": [], "Fixed commit": "01289e950f0952456ffac4bfe26af1b443dc8c81", "Url": "https://api.github.com/repos/madcyph3r/AdvancedMaterialDrawer", "Date": "2015-03-10T14:16:15Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<java.lang.String>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (current_dir.equals(\"\")) { actionBar.setTitle(getString(R.string.default_display_name_for_root_folder)); }else { actionBar.setTitle(current_dir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2402/buggy-version/src.com.owncloud.android.ui.activity.ReceiveExternalFilesActivity.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.setTitle(java.lang.String)"], "Fixed commit": "52d7ee66bb2ae45f81e05503a908d68e76ddd418", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2016-03-23T15:17:14Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.catalina.connector.Request.getRequestURI()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (requestUri == null) { requestUri = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5748/buggy-version/components.webapp-authenticator-framework.org.wso2.carbon.webapp.authenticator.framework.src.main.java.org.wso2.carbon.webapp.authenticator.framework.authenticator.JWTAuthenticator.java", "BodyUseAPI": [], "Fixed commit": "00a5a07373773ee1443b40bfaf1c98b0334313e1", "Url": "https://api.github.com/repos/hasuniea/carbon-device-mgt", "Date": "2017-01-05T08:58:30Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (melnorme.utilbox.core.DevelopmentCodeMarkers.DISABLED_FUNCTIONALITY) { dtool.ast.declarations.ImportContent importContent = ((dtool.ast.declarations.ImportContent) (fragment)); dtool.ast.declarations.ImportContent.resolveStaticImport(scopeRes, importContent.moduleRef); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5007/buggy-version/plugin_tooling.src.dtool.ast.declarations.ImportSelective.java", "BodyUseAPI": [], "Fixed commit": "b3b1ec1d355ac915d1844887f7c71c1a48ba4e6d", "Url": "https://api.github.com/repos/DDT-IDE/DDT", "Date": "2015-01-09T12:11:55Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fragment) instanceof dtool.ast.declarations.ImportAlias) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5007/buggy-version/plugin_tooling.src.dtool.ast.declarations.ImportSelective.java", "BodyUseAPI": [], "Fixed commit": "b3b1ec1d355ac915d1844887f7c71c1a48ba4e6d", "Url": "https://api.github.com/repos/DDT-IDE/DDT", "Date": "2015-01-09T12:11:55Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((authToken) != null) { multiPartEntity.addPart(\"g2_authToken\", new org.apache.http.entity.mime.content.StringBody(authToken, net.dahanne.gallery.g2.java.client.business.G2Client.UTF_8)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4666/buggy-version/g2-java-client.src.main.java.net.dahanne.gallery.g2.java.client.business.G2Client.java", "BodyUseAPI": [], "Fixed commit": "7126b3472948f40a64c53b91e70f43e48aaa5a76", "Url": "https://api.github.com/repos/anthonydahanne/ReGalAndroid", "Date": "2011-04-03T23:36:58Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nysenate.openleg.util.RequestUtils.getSearchString(javax.servlet.http.HttpServletRequest,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(filter.isEmpty())) { term += \" AND \" + filter; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2803/buggy-version/src.main.java.gov.nysenate.openleg.api.servlets.ApiServlet1.java", "BodyUseAPI": [], "Fixed commit": "f0d91ec64e8be60e70732ab0915822831f6d7a85", "Url": "https://api.github.com/repos/nysenate/OpenLegislation", "Date": "2014-01-23T20:56:18Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getMembers().isEmpty()) { return message; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4475/buggy-version/src.com.c45y.CutePVP.Team.java", "BodyUseAPI": [], "Fixed commit": "4c408763db38b34d41c7a2db4cb4b4ed28a4d004", "Url": "https://api.github.com/repos/stevommmm/CutePVP", "Date": "2015-05-26T07:57:07Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entityLivingBase.getRidingEntity()) != null) { if ((entityLivingBase.getRidingEntity()) instanceof net.minecraft.entity.passive.EntityHorse) { org.lwjgl.opengl.GL11.glTranslated(0.0, 0.55, 0.1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8845/buggy-version/src.main.java.mca.client.render.RenderHuman.java", "BodyUseAPI": ["mca.entity.EntityHuman.getRidingEntity()"], "Fixed commit": "3baf554bb8232c78efb11bd4ac1ed53485985a45", "Url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive", "Date": "2016-04-16T22:55:56Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fgaz > 200) fgaz = 200;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7671/buggy-version/src.com.jpii.navalbattle.game.NavalGame.java", "BodyUseAPI": [], "Fixed commit": "11f39ea6c7cb561dec59d762eb4c752941270391", "Url": "https://api.github.com/repos/JPII/NavalBattle", "Date": "2013-04-09T19:04:20Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fgax < (-(((com.jpii.navalbattle.game.PavoHelper.getGameWidth(getWorld().getWorldSize())) * 100) - 100))) fgax = -(((com.jpii.navalbattle.game.PavoHelper.getGameWidth(getWorld().getWorldSize())) * 100) - 100);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7671/buggy-version/src.com.jpii.navalbattle.game.NavalGame.java", "BodyUseAPI": [], "Fixed commit": "11f39ea6c7cb561dec59d762eb4c752941270391", "Url": "https://api.github.com/repos/JPII/NavalBattle", "Date": "2013-04-09T19:04:20Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getWorld().getScreenX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fgax > 200) fgax = 200;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7671/buggy-version/src.com.jpii.navalbattle.game.NavalGame.java", "BodyUseAPI": [], "Fixed commit": "11f39ea6c7cb561dec59d762eb4c752941270391", "Url": "https://api.github.com/repos/JPII/NavalBattle", "Date": "2013-04-09T19:04:20Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fgaz < (-(((com.jpii.navalbattle.game.PavoHelper.getGameHeight(getWorld().getWorldSize())) * 100) - 100))) fgaz = -(((com.jpii.navalbattle.game.PavoHelper.getGameHeight(getWorld().getWorldSize())) * 100) - 100);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7671/buggy-version/src.com.jpii.navalbattle.game.NavalGame.java", "BodyUseAPI": [], "Fixed commit": "11f39ea6c7cb561dec59d762eb4c752941270391", "Url": "https://api.github.com/repos/JPII/NavalBattle", "Date": "2013-04-09T19:04:20Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.setsAPI.getArmorSet(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (aSet == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/9129/buggy-version/src.com.modcrafting.diablodrops.listeners.SetListener.java", "BodyUseAPI": [], "Fixed commit": "6cea3df911194ade3e5eea750d22624e6311f124", "Url": "https://api.github.com/repos/deathmarine/DiabloDrops", "Date": "2012-12-02T02:08:16Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (relativePath.startsWith(\"/\")) { relativePath = relativePath.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1413/buggy-version/src.main.java.io.stallion.dal.file.ItemFileChangeEventHandler.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "a5ff9db6e1672bea6c26fb7cce36568177dd69f7", "Url": "https://api.github.com/repos/StallionCMS/stallion-core", "Date": "2016-05-12T01:43:19Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["common.Util.getMinMoney(java.lang.String,java.lang.Object)", "asksJA.getJSONObject(0).getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((java.lang.Integer.parseInt(min_money)) > (java.lang.Integer.parseInt(ask_price1))) { common.Decide.log.debug(\"1% \ud558\ub77d\"); price.put((currency + \"price\"), ask_price1); price.put((currency + \"cnt\"), java.lang.String.valueOf(((java.lang.Integer.parseInt(((java.lang.String) (price.get((currency + \"cnt\")))))) + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4944/buggy-version/src.common.Decide.java", "BodyUseAPI": ["java.util.HashMap.put(java.lang.String,java.lang.String)"], "Fixed commit": "03663d41a8a16cc075f3c2e83aded782ca6a65ab", "Url": "https://api.github.com/repos/chojinwoo/untitled", "Date": "2017-12-02T13:33:40Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["asksJA.getJSONObject(0).getString(java.lang.String)", "common.Util.getMinMoney(java.lang.String,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((java.lang.Integer.parseInt(min_money)) < (java.lang.Integer.parseInt(ask_price1))) { price.put((currency + \"cnt\"), java.lang.String.valueOf(((java.lang.Integer.parseInt(((java.lang.String) (price.get((currency + \"cnt\")))))) - 1))); if ((java.lang.Integer.parseInt(max_money)) < (java.lang.Integer.parseInt(ask_price1))) { if ((java.lang.Integer.parseInt(((java.lang.String) (price.get((currency + \"cnt\")))))) < 1) { common.Decide.log.debug(\"\uad6c\ub9e4 : 1%\uc0c1\uc2b9\"); common.Decide.log.debug(\"SUCCESS \uad6c\ub9e4 \ud504\ub85c\uc138\uc11c\"); int avaCnt = call.getBuyCurrencyCnt(config); java.lang.String krw = java.lang.String.valueOf(((java.lang.Integer.parseInt(myKrw)) / avaCnt)); int flag = call.makerBuy(currency, asksJA, krw); common.Decide.log.debug((\"\uad6c\ub9e4 \uacb0\uacfc\uac12 : \" + flag)); switch (flag) { case 1 : price.put((currency + \"price\"), bid_price1); price.put((currency + \"search\"), \"2\"); break; case 2 : common.Decide.log.debug(\"\uad6c\ub9e4 \uc2e4\ud328\"); break; case 3 : common.Decide.log.debug(\"\uc218\ub7c9\ubd80\uc871\"); break; } }else { common.Decide.log.debug((\"\uad6c\ub9e4 : 1% \uc0c1\uc2b9 \ud558\ub77d \uce74\uc6b4\ud2b8 \ucd08\uae30\ud654 \ud604\uc7ac \uce74\uc6b4\ud2b8 : \" + (price.get((currency + \"cnt\"))))); price.put((currency + \"cnt\"), \"0\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4944/buggy-version/src.common.Decide.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "03663d41a8a16cc075f3c2e83aded782ca6a65ab", "Url": "https://api.github.com/repos/chojinwoo/untitled", "Date": "2017-12-02T13:33:40Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list.isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1826/buggy-version/dependency-check-core.src.main.java.org.owasp.dependencycheck.analyzer.CPEAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "76c4cb788e4e1fb997b5c5fdefb8b5cf9c029aac", "Url": "https://api.github.com/repos/jeremylong/DependencyCheck", "Date": "2015-05-09T09:28:31Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.jenkinsci.plugins.shortwspath.ShortWsLocator.INITIAL_PREFIX) != null) { itemName = (org.jenkinsci.plugins.shortwspath.ShortWsLocator.INITIAL_PREFIX) + itemName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8851/buggy-version/src.main.java.org.jenkinsci.plugins.shortwspath.ShortWsLocator.java", "BodyUseAPI": [], "Fixed commit": "a265caf5f19971503ace4d406f49e2b75d136fb9", "Url": "https://api.github.com/repos/SimonElfvingElekta/short-workspace-path-plugin", "Date": "2016-10-25T12:21:35Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((org.jenkinsci.plugins.shortwspath.ShortWsLocator.STRIP_DEFAULT_TEXT) != null) && (!(org.jenkinsci.plugins.shortwspath.ShortWsLocator.STRIP_DEFAULT_TEXT.equals(\"\")))) { if (iName.contains(org.jenkinsci.plugins.shortwspath.ShortWsLocator.STRIP_DEFAULT_TEXT)) { iName = iName.replace(org.jenkinsci.plugins.shortwspath.ShortWsLocator.STRIP_DEFAULT_TEXT, \"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8851/buggy-version/src.main.java.org.jenkinsci.plugins.shortwspath.ShortWsLocator.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "a265caf5f19971503ace4d406f49e2b75d136fb9", "Url": "https://api.github.com/repos/SimonElfvingElekta/short-workspace-path-plugin", "Date": "2016-10-25T12:21:35Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.jenkinsci.plugins.shortwspath.ShortWsLocator.REMOVE_BLANKS) { iName = iName.replace(\" \", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8851/buggy-version/src.main.java.org.jenkinsci.plugins.shortwspath.ShortWsLocator.java", "BodyUseAPI": [], "Fixed commit": "a265caf5f19971503ace4d406f49e2b75d136fb9", "Url": "https://api.github.com/repos/SimonElfvingElekta/short-workspace-path-plugin", "Date": "2016-10-25T12:21:35Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((org.jenkinsci.plugins.shortwspath.ShortWsLocator.DEFAULT_TEXT_REPLACE) != null) { org.jenkinsci.plugins.shortwspath.ShortWsLocator.LOGGER.info((((\"Default text to replace : \" + itemName) + \" -> \") + (itemName.replace(\"...\", org.jenkinsci.plugins.shortwspath.ShortWsLocator.DEFAULT_TEXT_REPLACE)))); itemName = itemName.replace(\"...\", org.jenkinsci.plugins.shortwspath.ShortWsLocator.DEFAULT_TEXT_REPLACE); }else { org.jenkinsci.plugins.shortwspath.ShortWsLocator.LOGGER.info((\"Default text to replace (NOTUSED): \" + (org.jenkinsci.plugins.shortwspath.ShortWsLocator.DEFAULT_TEXT_REPLACE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8851/buggy-version/src.main.java.org.jenkinsci.plugins.shortwspath.ShortWsLocator.java", "BodyUseAPI": ["java.util.logging.Logger.info(java.lang.String)"], "Fixed commit": "a265caf5f19971503ace4d406f49e2b75d136fb9", "Url": "https://api.github.com/repos/SimonElfvingElekta/short-workspace-path-plugin", "Date": "2016-10-25T12:21:35Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c == '\\n') s = \"\\\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6845/buggy-version/text_process.Assignment05.java", "BodyUseAPI": [], "Fixed commit": "303a875dbcbf7bb577c579a45c55f04fe767e76b", "Url": "https://api.github.com/repos/ccampo133/cs2", "Date": "2012-04-08T23:02:58Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lessInfo == null) { lessInfo = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8991/buggy-version/modules.core.src.main.java.org.mycontroller.standalone.api.jaxrs.ScriptsHandler.java", "BodyUseAPI": [], "Fixed commit": "d6f165814659b34038042a434a2dac0ba75f69c5", "Url": "https://api.github.com/repos/mycontroller-org/mycontroller", "Date": "2016-04-04T06:02:31Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((heapRoot) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5440/buggy-version/code.abramov-dmitry.Model.src.main.java.ru.unn.agile.LeftistHeap.Model.LeftistHeap.java", "BodyUseAPI": [], "Fixed commit": "4b3e632aa10694459f1581fd49fea77bf9ef0cc6", "Url": "https://api.github.com/repos/alexeyzotov85m21/agile-course-practice", "Date": "2014-11-29T05:16:00Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nodeToDecreaseKey.getKey()) > key) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5440/buggy-version/code.abramov-dmitry.Model.src.main.java.ru.unn.agile.LeftistHeap.Model.LeftistHeap.java", "BodyUseAPI": [], "Fixed commit": "4b3e632aa10694459f1581fd49fea77bf9ef0cc6", "Url": "https://api.github.com/repos/alexeyzotov85m21/agile-course-practice", "Date": "2014-11-29T05:16:00Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (game.isClientsTurn()) { game.doMove(e.getID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8365/buggy-version/src.main.java.GameModule.java", "BodyUseAPI": ["Game.doMove(int)"], "Fixed commit": "abd620e41616b21229f957d1b7c73114d61565d4", "Url": "https://api.github.com/repos/tieskedh/othello", "Date": "2016-04-04T16:50:56Z"},
{"Line": "=>893", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n > 9999) n = 9999;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4269/buggy-version/opendj-core.src.main.java.org.forgerock.opendj.ldap.GeneralizedTime.java", "BodyUseAPI": [], "Fixed commit": "d5efc87450b7e92dea5b691931a33d87f9be0a2b", "Url": "https://api.github.com/repos/OpenIdentityPlatform/OpenDJ", "Date": "2017-12-04T02:01:23Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["d.getInit().get(i).accept(visitor.TypeScopeVisitor)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (test == null) test = \"string\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2525/buggy-version/Compilers.src.visitor.TypeScopeVisitor.java", "BodyUseAPI": [], "Fixed commit": "1b6dbe9eb993bf1bb682ad070565637354bcfa5a", "Url": "https://api.github.com/repos/kingaM/QCompiler", "Date": "2013-04-22T02:20:18Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cbio.causality.util.Download.downloadAsIs(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!downloadOK) { url = url.replace(\"-TP.\", \"-TB.\"); downloadOK = org.cbio.causality.util.Download.downloadAsIs(url, tempFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2049/buggy-version/src.main.java.org.cbio.causality.data.tcgafile.BroadDownloader.java", "BodyUseAPI": [], "Fixed commit": "2462b5f32df9a891175cfa6d953a24166c225392", "Url": "https://api.github.com/repos/PathwayAndDataAnalysis/causality", "Date": "2016-02-19T23:53:50Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cbio.causality.util.Download.downloadAsIs(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!downloadOK) { url = url.replace(\"-TP.\", \"-TB.\"); downloadOK = org.cbio.causality.util.Download.downloadAsIs(url, tempFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2049/buggy-version/src.main.java.org.cbio.causality.data.tcgafile.BroadDownloader.java", "BodyUseAPI": [], "Fixed commit": "2462b5f32df9a891175cfa6d953a24166c225392", "Url": "https://api.github.com/repos/PathwayAndDataAnalysis/causality", "Date": "2016-02-19T23:53:50Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scrollY != ((this.height) / 2)) { scrollY = scrollY % ((height) / 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2650/buggy-version/app.src.main.java.com.example.sovietsity.Presenter.DrawerManager.java", "BodyUseAPI": [], "Fixed commit": "14a4cae36521c204532f233fd3600d886a190f27", "Url": "https://api.github.com/repos/StormStudioAndroid/SovietSity", "Date": "2016-05-04T23:03:37Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scrollX != ((this.width) / 2)) { scrollX = scrollX % ((width) / 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2650/buggy-version/app.src.main.java.com.example.sovietsity.Presenter.DrawerManager.java", "BodyUseAPI": [], "Fixed commit": "14a4cae36521c204532f233fd3600d886a190f27", "Url": "https://api.github.com/repos/StormStudioAndroid/SovietSity", "Date": "2016-05-04T23:03:37Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(camera.isScrolling())) { camera.changePosition(scrollX, scrollY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2650/buggy-version/app.src.main.java.com.example.sovietsity.Presenter.DrawerManager.java", "BodyUseAPI": ["com.example.sovietsity.Presenter.Camera.changePosition(float,float)"], "Fixed commit": "14a4cae36521c204532f233fd3600d886a190f27", "Url": "https://api.github.com/repos/StormStudioAndroid/SovietSity", "Date": "2016-05-04T23:03:37Z"},
{"Line": "=>603", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (android.app.Activity.RESULT_OK)) { java.lang.String laiString = intent.getStringExtra(\"eu.marcofoi.android.PocketLAI.LAI\"); ((com.geoodk.collect.android.views.ODKView) (mCurrentView)).setBinaryData(laiString); saveAnswersForCurrentScreen(com.geoodk.collect.android.activities.FormEntryActivity.DO_NOT_EVALUATE_CONSTRAINTS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5658/buggy-version/app.src.main.java.com.geoodk.collect.android.activities.FormEntryActivity.java", "BodyUseAPI": [], "Fixed commit": "db28f553f40f242409e361198e5ff65c18a0c6c5", "Url": "https://api.github.com/repos/mcfoi/collect", "Date": "2015-06-01T16:36:11Z"},
{"Line": "=>664", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((obj.getDirectStudy()) != null) { directStudy = com.nagarro.gde.persistence.model.enums.DecisionEnum.getDecisionEnum(obj.getDirectStudy()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3729/buggy-version/gde-backend.src.main.java.com.nagarro.gde.dto.UserOrdinaturDetailDto.java", "BodyUseAPI": [], "Fixed commit": "4b53565fbdfa76800472bf8a47009f1f2ebc678a", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-01-28T10:26:52Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getPackageManager().resolveService(android.content.Intent,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (info == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4773/buggy-version/lib.src.main.java.com.o3dr.android.client.ServiceManager.java", "BodyUseAPI": [], "Fixed commit": "5316717b6679de78ba5037c0525c42bf630f03b3", "Url": "https://api.github.com/repos/ne0fhyk/Wear3PV", "Date": "2014-11-24T20:24:56Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentDifficulty) != null) startGame(); else android.widget.Toast.makeText(getApplicationContext(), \"No ha seleccionado la dificultad.\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8412/buggy-version/app.src.main.java.upc.edu.pe.wedraw.DifficultyActivity.java", "BodyUseAPI": [], "Fixed commit": "bf42a22eec0775d1462aa6f5785c4ebaf8432f73", "Url": "https://api.github.com/repos/dccruzt/WeDraw", "Date": "2016-06-26T01:29:02Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.restlet.engine.http.header.RecipientInfoReader.readToken()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((protocolToken == null) || (\"\".equals(protocolToken))) { throw new java.io.IOException(\"Unexpected empty protocol token for while reading recipient info header, please check the value.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6954/buggy-version/modules.org.restlet.src.org.restlet.engine.http.header.RecipientInfoReader.java", "BodyUseAPI": [], "Fixed commit": "16b3ab6e9c934212b8c764e3a2bab200c623ef19", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2012-12-21T12:25:59Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (moreTokens(tokens, index)) { nextToken = tokens[(index++)]; }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2442/buggy-version/src.main.java.com.github.mnadeem.TableNameParser.java", "BodyUseAPI": [], "Fixed commit": "46b3c753c89785bb943d93fd10c27a577a99fb89", "Url": "https://api.github.com/repos/mnadeem/sql-table-name-parser", "Date": "2016-08-27T04:10:41Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (image != null) editor.putString(money.mezu.mezu.SessionManager.KEY_IMAGE, image.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1912/buggy-version/Mezu.app.src.main.java.money.mezu.mezu.SessionManager.java", "BodyUseAPI": ["android.net.Uri.toString()", "android.content.SharedPreferences.Editor.putString(java.lang.String,image.toString())"], "Fixed commit": "e5648cd8ff6ec3a79b8b1d5c59f7a91cc3ea14a5", "Url": "https://api.github.com/repos/Assafbs/Mezu", "Date": "2017-05-09T15:37:00Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (futures.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7046/buggy-version/src.main.java.intellimate.izou.events.EventManager.java", "BodyUseAPI": [], "Fixed commit": "dc54886a02b21f65399003bfd04c653a3c1afd8a", "Url": "https://api.github.com/repos/intellimate/Izou", "Date": "2014-11-14T15:03:17Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.Keyle.MyPet.util.MyPetUtil.getDebugLogger()) != null) { de.Keyle.MyPet.util.MyPetUtil.getDebugLogger().info(((\"loaded compressed NBT file (\" + (NBTFile.getName())) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/398/buggy-version/src.Java.de.Keyle.MyPet.util.configuration.NBT_Configuration.java", "BodyUseAPI": [], "Fixed commit": "8de03ca8b7064120ebcdf87d3454774fd62963be", "Url": "https://api.github.com/repos/xXKeyleXx/MyPet", "Date": "2013-03-08T09:59:41Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.Keyle.MyPet.util.MyPetUtil.getDebugLogger()) != null) { de.Keyle.MyPet.util.MyPetUtil.getDebugLogger().info(((\"loaded uncompressed NBT file (\" + (NBTFile.getName())) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/398/buggy-version/src.Java.de.Keyle.MyPet.util.configuration.NBT_Configuration.java", "BodyUseAPI": [], "Fixed commit": "8de03ca8b7064120ebcdf87d3454774fd62963be", "Url": "https://api.github.com/repos/xXKeyleXx/MyPet", "Date": "2013-03-08T09:59:41Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(NBTFile.exists())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/398/buggy-version/src.Java.de.Keyle.MyPet.util.configuration.NBT_Configuration.java", "BodyUseAPI": [], "Fixed commit": "8de03ca8b7064120ebcdf87d3454774fd62963be", "Url": "https://api.github.com/repos/xXKeyleXx/MyPet", "Date": "2013-03-08T09:59:41Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((filteredCountries.get(i)) != null) { countryCodeViewHolder.getMainView().setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View view) { if (((filteredCountries) != null) && ((filteredCountries.size()) > i)) { codePicker.setSelectedCountry(filteredCountries.get(i)); } if ((view != null) && ((filteredCountries.get(i)) != null)) { android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (context.getSystemService(Context.INPUT_METHOD_SERVICE))); imm.hideSoftInputFromWindow(view.getWindowToken(), 0); dialog.dismiss(); } } }); }else { countryCodeViewHolder.getMainView().setOnClickListener(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7458/buggy-version/ccp.src.main.java.com.hbb20.CountryCodeAdapter.java", "BodyUseAPI": ["com.hbb20.CountryCodePicker.setSelectedCountry(filteredCountries.get(i))", "android.widget.RelativeLayout.setOnClickListener(android.view.View.OnClickListener)", "java.util.List<com.hbb20.Country>.get(int)", "java.util.List<com.hbb20.Country>.size()", "java.util.List<com.hbb20.Country>.get(int)"], "Fixed commit": "7d1cdab45cb2f4f3a8f05ef99c665d09500d8d04", "Url": "https://api.github.com/repos/hbb20/CountryCodePickerProject", "Date": "2017-10-01T17:51:40Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (query.containsKey(QueryParams.REFERENCE.key())) { createOrQuery(query.getAsStringList(QueryParams.REFERENCE.key()), \"reference\", andBsonList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6543/buggy-version/cellbase-mongodb.src.main.java.org.opencb.cellbase.mongodb.impl.VariantMongoDBAdaptor.java", "BodyUseAPI": ["org.opencb.commons.datastore.core.Query.getAsStringList(QueryParams.REFERENCE.key())", "org.opencb.cellbase.mongodb.impl.VariantMongoDBAdaptor.createOrQuery(query.getAsStringList(QueryParams.REFERENCE.key()),java.lang.String,java.util.List<org.bson.conversions.Bson>)"], "Fixed commit": "506610dd80cc152c421a3d85d880d4dd30d6afc4", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2016-07-12T10:09:15Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (query.containsKey(QueryParams.ALTERNATE.key())) { createOrQuery(query.getAsStringList(QueryParams.ALTERNATE.key()), \"alternate\", andBsonList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6543/buggy-version/cellbase-mongodb.src.main.java.org.opencb.cellbase.mongodb.impl.VariantMongoDBAdaptor.java", "BodyUseAPI": ["org.opencb.cellbase.mongodb.impl.VariantMongoDBAdaptor.createOrQuery(query.getAsStringList(QueryParams.ALTERNATE.key()),java.lang.String,java.util.List<org.bson.conversions.Bson>)", "org.opencb.commons.datastore.core.Query.getAsStringList(QueryParams.ALTERNATE.key())"], "Fixed commit": "506610dd80cc152c421a3d85d880d4dd30d6afc4", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2016-07-12T10:09:15Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (err) { callbackContext.error(\"Error in creating log file.\"); }else { callbackContext.success(\"Log file created successfully\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7359/buggy-version/src.android.WriteLog.java", "BodyUseAPI": [], "Fixed commit": "8e452bdf4718fa597897151a8498d7897bb929a4", "Url": "https://api.github.com/repos/Jazastry/cordova-plugin-write-log", "Date": "2016-10-29T12:42:32Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.toString().length()) == 0) return \"0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7984/buggy-version/algorithms.src.main.java.cn.bput.zcc.listopreation.MinNumber379.java", "BodyUseAPI": [], "Fixed commit": "d79b1f207dd4950c50c3daad2073b207c6aa93bb", "Url": "https://api.github.com/repos/sweetcczhang/Algorithms_and_Structure_in_Action", "Date": "2017-12-17T11:34:09Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((result.toString().length()) == 0) && ((nums[i]) == 0)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7984/buggy-version/algorithms.src.main.java.cn.bput.zcc.listopreation.MinNumber379.java", "BodyUseAPI": [], "Fixed commit": "d79b1f207dd4950c50c3daad2073b207c6aa93bb", "Url": "https://api.github.com/repos/sweetcczhang/Algorithms_and_Structure_in_Action", "Date": "2017-12-17T11:34:09Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<android.view.View, java.lang.Integer>.remove(android.view.View)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/9106/buggy-version/library.src.main.java.mobi.parchment.widget.adapterview.AdapterViewManager.java", "BodyUseAPI": [], "Fixed commit": "d5ee0a91570febea189d4004bfd01fc5ee242312", "Url": "https://api.github.com/repos/EmirWeb/parchment", "Date": "2014-09-12T15:25:32Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.cattle.platform.object.util.DataAccessor.fieldMap(io.cattle.platform.core.model.Instance,InstanceConstants.FIELD_LABELS)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (labels != null) { java.lang.String startOnceLabel = \"false\"; if ((labels.get(SystemLabels.LABEL_SERVICE_CONTAINER_START_ONCE)) != null) { startOnceLabel = labels.get(SystemLabels.LABEL_SERVICE_CONTAINER_START_ONCE).toString(); } if (org.apache.commons.lang3.StringUtils.equalsIgnoreCase(startOnceLabel, \"true\")) { startOnFailure = true; maximumRetryCount = io.cattle.platform.servicediscovery.deployment.DeploymentUnitInstance.UNLIMITED_RETRIES; startOnce = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5017/buggy-version/code.iaas.service-discovery.server.src.main.java.io.cattle.platform.servicediscovery.deployment.DeploymentUnitInstance.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(SystemLabels.LABEL_SERVICE_CONTAINER_START_ONCE)", "java.util.Map<java.lang.String, java.lang.Object>.get(SystemLabels.LABEL_SERVICE_CONTAINER_START_ONCE)", "java.lang.Object.toString()"], "Fixed commit": "b6c6f536551343f69b68b18560ac0a6c54192154", "Url": "https://api.github.com/repos/alena1108/cattle", "Date": "2017-02-16T05:29:27Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!startOnce) { io.cattle.platform.core.addon.RestartPolicy rp = io.cattle.platform.object.util.DataAccessor.field(instance, DockerInstanceConstants.FIELD_RESTART_POLICY, context.jsonMapper, io.cattle.platform.core.addon.RestartPolicy.class); if (!(rp.getName().equalsIgnoreCase(\"on-failure\"))) { return; } startOnFailure = true; maximumRetryCount = rp.getMaximumRetryCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5017/buggy-version/code.iaas.service-discovery.server.src.main.java.io.cattle.platform.servicediscovery.deployment.DeploymentUnitInstance.java", "BodyUseAPI": [], "Fixed commit": "b6c6f536551343f69b68b18560ac0a6c54192154", "Url": "https://api.github.com/repos/alena1108/cattle", "Date": "2017-02-16T05:29:27Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((io.cattle.platform.object.util.DataAccessor.fieldInteger(instance, InstanceConstants.FIELD_EXIT_CODE)) != null) { exitCode = io.cattle.platform.object.util.DataAccessor.fieldInteger(instance, InstanceConstants.FIELD_EXIT_CODE); }else { exitCode = context.transformer.getExitCode(instance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5017/buggy-version/code.iaas.service-discovery.server.src.main.java.io.cattle.platform.servicediscovery.deployment.DeploymentUnitInstance.java", "BodyUseAPI": ["context.transformer.getExitCode(io.cattle.platform.core.model.Instance)", "io.cattle.platform.object.util.DataAccessor.fieldInteger(io.cattle.platform.core.model.Instance,InstanceConstants.FIELD_EXIT_CODE)"], "Fixed commit": "b6c6f536551343f69b68b18560ac0a6c54192154", "Url": "https://api.github.com/repos/alena1108/cattle", "Date": "2017-02-16T05:29:27Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (version == null) { version = m.group(2); if (version == null) { version = m.group(3); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8999/buggy-version/src.main.java.org.dasein.cloud.openstack.nova.os.AbstractMethod.java", "BodyUseAPI": [], "Fixed commit": "f4d85e3ff9afafe6da6e33e25508ebfa03a25843", "Url": "https://api.github.com/repos/greese/dasein-cloud-openstack", "Date": "2013-10-04T22:13:20Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (param instanceof java.sql.Timestamp) { ps.setTimestamp((index++), ((java.sql.Timestamp) (param))); }else { com.quikj.server.framework.AceLogger.Instance().log(AceLogger.ERROR, AceLogger.SYSTEM_LOG, (\"AceSQL.AceSQLThread.run() : unsupported data type \" + (param.getClass().getName()))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1346/buggy-version/ace-framework.src.main.java.com.quikj.server.framework.AceSQL.java", "BodyUseAPI": ["com.quikj.server.framework.AceLogger.Instance().log(AceLogger.ERROR,AceLogger.SYSTEM_LOG,java.lang.String)", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Object.getClass()"], "Fixed commit": "19cbd202c7842556eb544b63d5b9b74dd5dc5e4c", "Url": "https://api.github.com/repos/aceoperator/ace", "Date": "2017-10-02T12:32:57Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentOriginalSegment) != null) { playSegment(segments.getRespeakingSegment(currentOriginalSegment), respeaking); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3522/buggy-version/BOLDApp.src.au.edu.unimelb.boldapp.audio.InterleavedPlayer.java", "BodyUseAPI": [], "Fixed commit": "517220ac1dc9b78df98a8ee880f044bcc5a7b873", "Url": "https://api.github.com/repos/langtech/aikuma", "Date": "2013-03-25T05:47:52Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["monitor.WorkerMonitor.getNumOfWorkerThreads(com.hazelcast.client.HazelcastClient)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numOfWorkers == 0) { numOfWorkers = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1747/buggy-version/CloudKon.src.actors.Client.java", "BodyUseAPI": [], "Fixed commit": "da9c5e3af4e7f5f4a4b54d5b4d5e61aa6607e7d9", "Url": "https://api.github.com/repos/rparthas/Repository", "Date": "2013-10-29T11:18:53Z"},
{"Line": "=>2131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pathComponents[(pos - 1)]) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2140/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.server.namenode.FSDirectory.java", "BodyUseAPI": [], "Fixed commit": "75e5cbb35388cc3379023ad679056906ea673e5e", "Url": "https://api.github.com/repos/rlzhang/hadoop", "Date": "2015-07-29T17:47:00Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mUnit) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3312/buggy-version/app.src.main.java.com.alex.onereport2.OneReportActivity.java", "BodyUseAPI": [], "Fixed commit": "29a538d2c1d3b4588c14a19c033b6d391cef3e36", "Url": "https://api.github.com/repos/alex-ilgayev/one-report", "Date": "2017-10-08T20:59:37Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getModifiers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.reflect.Modifier.isFinal(mod)) || (java.lang.reflect.Modifier.isStatic(mod))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5689/buggy-version/client-runtime.src.main.java.com.microsoft.rest.Validator.java", "BodyUseAPI": [], "Fixed commit": "00b45dbafbfb813542aacf1c220cfb2f9a35f3dc", "Url": "https://api.github.com/repos/Azure/autorest-clientruntime-for-java", "Date": "2016-09-21T18:56:31Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(routesDirectory.exists())) || (!(routesDirectory.isDirectory()))) { getLog().warn(((\"Directory \" + (routesDirectory.getAbsolutePath())) + \" does not exists\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1619/buggy-version/maven-plugin.src.main.java.de.leanovate.routergenerator.plugin.RouterGeneratorMojo.java", "BodyUseAPI": ["getLog().warn(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "cdf041b6e5b6162b232ade171130de1da4527978", "Url": "https://api.github.com/repos/leanovate/route-generator", "Date": "2014-09-18T07:41:17Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.ucchyocean.lc.command.LeaveCommand.getChannel(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (channel.isGlobalChannel()) { sendResourceMessage(sender, com.github.ucchyocean.lc.command.PREERR, \"errmsgCannotLeaveGlobal\", channelName); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3308/buggy-version/src.main.java.com.github.ucchyocean.lc.command.LeaveCommand.java", "BodyUseAPI": [], "Fixed commit": "5a806f9bd679252b14bfb6bd1fe039de8bc207f9", "Url": "https://api.github.com/repos/ucchyocean/LunaChat", "Date": "2013-07-27T05:09:18Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.tri.airr.hero.BluetoothConnect.connected) bleMethods.writeToHero(commandDat);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8882/buggy-version/app.src.main.java.com.tri.airr.hero.Daily.java", "BodyUseAPI": [], "Fixed commit": "24dc6ff530bece99ced74344e34b911764a37940", "Url": "https://api.github.com/repos/drossos/HERO-app", "Date": "2017-09-02T00:48:23Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.tri.airr.hero.BluetoothConnect.connected) bleMethods.writeToHero(commandDat);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8882/buggy-version/app.src.main.java.com.tri.airr.hero.Daily.java", "BodyUseAPI": [], "Fixed commit": "24dc6ff530bece99ced74344e34b911764a37940", "Url": "https://api.github.com/repos/drossos/HERO-app", "Date": "2017-09-02T00:48:23Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jbse.val.Expression.getOperator()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (op.equals(Operator.AND)) { b.append(\"+\"); }else if (op.equals(Operator.OR)) { b.append(\"*\"); }else { b.append(op.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1577/buggy-version/src.jbse.apps.StateFormatterSushiPathCondition.java", "BodyUseAPI": ["jbse.val.Operator.toString()", "java.lang.StringBuilder.append(op.toString())", "jbse.val.Operator.equals(Operator.OR)"], "Fixed commit": "ca609829ddb74f74fbe511cf2c94881e1b5ad704", "Url": "https://api.github.com/repos/pietrobraione/jbse", "Date": "2015-12-14T10:47:37Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pool) != null) pool.shutdown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1729/buggy-version/src.main.java.org.eweb4j.spiderman.spider.Spiderman.java", "BodyUseAPI": [], "Fixed commit": "afb68fe70502911ec0cc7f194b05f47eca7eff2b", "Url": "https://api.github.com/repos/laiweiwei/spiderman", "Date": "2013-01-31T11:26:30Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pool) != null) pool.shutdownNow();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1729/buggy-version/src.main.java.org.eweb4j.spiderman.spider.Spiderman.java", "BodyUseAPI": [], "Fixed commit": "afb68fe70502911ec0cc7f194b05f47eca7eff2b", "Url": "https://api.github.com/repos/laiweiwei/spiderman", "Date": "2013-01-31T11:26:30Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (peer.getIpAddress().equals(\"127.0.0.1\")) { peer.setIpAddress(tracker.getLocalAddress().getHostAddress()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3349/buggy-version/src.damulticast.Device.java", "BodyUseAPI": ["damulticast.RemoteDevice.setIpAddress(java.lang.String)"], "Fixed commit": "a7dd58235ad33462654bf7ea2686f48be29a840b", "Url": "https://api.github.com/repos/checharo/DAProject", "Date": "2014-05-23T06:03:24Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expect == (org.deuce.transaction.swisstm.field.AddressLocks.WRITE_UNLOCKED)) { expect = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1591/buggy-version/src.java.org.deuce.transaction.swisstm.field.AddressLocks.java", "BodyUseAPI": [], "Fixed commit": "6ff500a98eadaf625d8909b7d6db0577b754f2ef", "Url": "https://api.github.com/repos/Jigsaw52/DeuceSTM", "Date": "2013-10-09T16:45:33Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (data[i][0].isEmpty()) { }else { if (assembly.label.contains(data[i][0])) { java.lang.System.out.println(\"Error: Find Duplicate Label\"); java.lang.System.exit(1); }else { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/433/buggy-version/src.assembly.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.contains(java.lang.String)"], "Fixed commit": "b76833595d762e6e347eea620062c0cd90ec87f7", "Url": "https://api.github.com/repos/kwpinthong/-PROJECT-ComArch-I", "Date": "2017-11-11T16:23:07Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(field2.isEmpty())) checkLabel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/433/buggy-version/src.assembly.java", "BodyUseAPI": [], "Fixed commit": "b76833595d762e6e347eea620062c0cd90ec87f7", "Url": "https://api.github.com/repos/kwpinthong/-PROJECT-ComArch-I", "Date": "2017-11-11T16:23:07Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((r) != null) && (r.isPlaying())) { r.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7297/buggy-version/app.src.main.java.com.example.fabian.timer.MainActivity.java", "BodyUseAPI": ["android.media.Ringtone.stop()"], "Fixed commit": "481eab195084afe3f014ad79c5f6c236a2654aac", "Url": "https://api.github.com/repos/fabikw/timer", "Date": "2017-06-18T20:45:29Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MainActivity.qb_version.equals(\"3.2.x\")) { sequentialDownloadCheckBox = ((android.widget.CheckBox) (rootView.findViewById(R.id.torrentSequentialDownload))); firstLAstPiecePrioCheckBox = ((android.widget.CheckBox) (rootView.findViewById(R.id.torrentFirstLastPiecePrio))); sequentialDownloadCheckBox.setChecked(MainActivity.lines[position].getSequentialDownload()); firstLAstPiecePrioCheckBox.setChecked(MainActivity.lines[position].getisFirstLastPiecePrio()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6526/buggy-version/qBittorrentClient.src.com.lgallardo.qbittorrentclientpro.TorrentDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "1080a721e66b450c4082f5e55f1eb7b548b052bc", "Url": "https://api.github.com/repos/lgallard/qBittorrent-Controller", "Date": "2015-02-12T15:29:59Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_dinfo._responses) != 0) res[0] = ((float) (r.response[0]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/9218/buggy-version/h2o-algos.src.main.java.hex.glm.GLMScore.java", "BodyUseAPI": [], "Fixed commit": "157219bb9a0f656bcaa228c969892d989ad576ff", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2016-03-27T21:03:51Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getContentResolver().query(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,java.lang.String[],<nulltype>,<nulltype>,MediaStore.Images.Media._ID)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (imageCursor != null) { com.joker.common.utils.LogUtils.w(com.joker.main.MainActivity.TAG, \" cursor is null\"); while (imageCursor.moveToNext()) { imageList.add(imageCursor.getString(imageCursor.getColumnIndex(MediaStore.Images.Media.DATA))); } imageCursor.close(); for (java.lang.String s : imageList) { com.joker.common.utils.LogUtils.w(com.joker.main.MainActivity.TAG, s); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4915/buggy-version/app.src.main.java.com.joker.main.MainActivity.java", "BodyUseAPI": ["android.database.Cursor.moveToNext()", "android.database.Cursor.getColumnIndex(MediaStore.Images.Media.DATA)", "java.util.ArrayList<java.lang.String>.add(imageCursor.getString(imageCursor.getColumnIndex(MediaStore.Images.Media.DATA)))", "android.database.Cursor.getString(imageCursor.getColumnIndex(MediaStore.Images.Media.DATA))", "android.database.Cursor.close()"], "Fixed commit": "97f217feed2e3909a54c0827d43d98d94ded96de", "Url": "https://api.github.com/repos/Dragonwrath/AndroidModuleSet", "Date": "2017-12-01T14:18:04Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((xCount == 0) || (yCount == 0)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8300/buggy-version/src.main.java.dmatrix.DistributionalDMatrixGenerator.java", "BodyUseAPI": [], "Fixed commit": "75a8b7a81bc722894cbe8fdece4103d0a55b2ebc", "Url": "https://api.github.com/repos/zhzhang/density-matrix-generator", "Date": "2016-05-16T20:35:48Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.clemson.cs.r2jt.absyn.Exp.copy(edu.clemson.cs.r2jt.absyn.LambdaExp)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((result.body) == null) { result.body = edu.clemson.cs.r2jt.absyn.Exp.copy(body); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1845/buggy-version/src.main.java.edu.clemson.cs.r2jt.absyn.LambdaExp.java", "BodyUseAPI": [], "Fixed commit": "ef8a76bfb029f4d401127f1de3aca23417c1366d", "Url": "https://api.github.com/repos/bdurkee/RESOLVE", "Date": "2013-03-08T20:00:32Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (val.equals(\"help\")) { java.lang.System.out.println((\"- functions\\n\" + (\"- variables\\n\" + \"- misc\"))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5704/buggy-version/src.com.sim.lbox.Main.java", "BodyUseAPI": [], "Fixed commit": "135b4322b240edd4729d458a57fc07eef7a07908", "Url": "https://api.github.com/repos/Azer0s/Hummus", "Date": "2017-08-16T16:47:24Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i + 2) < (indexes.size())) { super.insertString(fb, (offset + second), text.substring(second, indexes.get((i + 2))), attributeSet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/9058/buggy-version/src.TextAreaPanel.java", "BodyUseAPI": ["javax.swing.text.DocumentFilter.insertString(javax.swing.text.DocumentFilter.FilterBypass,int,java.lang.String,javax.swing.text.AttributeSet)", "java.util.ArrayList<java.lang.Integer>.get(int)", "java.lang.String.substring(int,java.lang.Integer)"], "Fixed commit": "42a8b2d7d1990cf3c5a1fa3b29f178ada35eb1ed", "Url": "https://api.github.com/repos/zlex7/ABIDE", "Date": "2017-06-15T11:53:20Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (propertiesFile.contains(\"bonus\")) level = 9; else level = java.lang.Integer.parseInt(((propertiesFile.charAt(2)) + \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8809/buggy-version/src.com.cs408.supersweeper.GameFrame.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "021bba6253c06bad41d558642b43484aa4ba9079", "Url": "https://api.github.com/repos/chrismwendt/SuperSweeper", "Date": "2013-09-20T01:25:18Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_level) == 9) file = \"/bonus.properties\"; else file = (\"/00\" + (_level)) + \".properties\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8809/buggy-version/src.com.cs408.supersweeper.GameState.java", "BodyUseAPI": [], "Fixed commit": "021bba6253c06bad41d558642b43484aa4ba9079", "Url": "https://api.github.com/repos/chrismwendt/SuperSweeper", "Date": "2013-09-20T01:25:18Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.esa.snap.core.datamodel.Band, ImageIOFile.BandInfo>.get(org.esa.snap.core.datamodel.Band)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bandInfo == null) { for (org.esa.snap.core.datamodel.Band srcBand : bandMap.keySet()) { if (srcBand.getName().equals(destBand.getName())) { bandInfo = bandMap.get(srcBand); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5385/buggy-version/s1tbx-io.src.main.java.org.esa.s1tbx.io.XMLProductDirectory.java", "BodyUseAPI": [], "Fixed commit": "20c0867dfe6fe9245a5e507ec27926f0e264d5e4", "Url": "https://api.github.com/repos/senbox-org/s1tbx", "Date": "2016-03-11T15:08:39Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (itemEnchants != null) itemName += \"-\" + itemEnchants;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6285/buggy-version/src.com.cyprias.exchangemarket.ExchangeMarket.java", "BodyUseAPI": [], "Fixed commit": "578c6600ff449bbc60b683cb852efb9784685275", "Url": "https://api.github.com/repos/Cyprias/ExchangeMarket", "Date": "2012-11-02T22:34:22Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name == null) || (value == null)) return this;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6330/buggy-version/qwazr-crawlers.src.main.java.com.qwazr.crawler.web.service.WebCrawlDefinition.java", "BodyUseAPI": [], "Fixed commit": "69f85deb02e0fb69afd7d06cef5d6cd428ee687c", "Url": "https://api.github.com/repos/qwazr/QWAZR", "Date": "2015-07-14T20:26:55Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (teamName != null) { alias = teamName.split(\":\")[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8641/buggy-version/src.main.java.ru.ifmo.acm.mainscreen.statuses.TeamStatus.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "2294efb4dd9dbfe5ac0cd20c569e6fe32637050c", "Url": "https://api.github.com/repos/Aksenov239/icpc-live-v2", "Date": "2015-12-06T06:53:42Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(char,char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (module.endsWith(\".whiley\")) { module = module.substring(0, ((module.length()) - 7)); wybs.lang.Path.ID mid = wybs.util.Trie.fromString(module); wybs.lang.Path.Entry<wyc.lang.WhileyFile> entry = whileyDir.get(mid, WhileyFile.ContentType); if (entry != null) { sources.add(entry); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6858/buggy-version/modules.wyc.src.wyc.util.WycBuildTask.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "dfbecd8d94e0489ceb022dac2e0871c9e220f618", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-07-30T00:49:13Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (verbose) { logout.println(((\"Compiled \" + (delta.size())) + \" source file(s)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6858/buggy-version/modules.wyc.src.wyc.util.WycBuildTask.java", "BodyUseAPI": [], "Fixed commit": "dfbecd8d94e0489ceb022dac2e0871c9e220f618", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-07-30T00:49:13Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(config.hasPath(org.apache.drill.exec.ExecConstants.USER_AUTHENTICATOR_IMPL))) { throw new org.apache.drill.exec.exception.DrillbitStartupException(java.lang.String.format(\"BOOT option '%s' is missing in config.\", org.apache.drill.exec.ExecConstants.USER_AUTHENTICATOR_IMPL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5255/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.rpc.user.security.UserAuthenticatorFactory.java", "BodyUseAPI": [], "Fixed commit": "c05383811cc2e05bfd4414241f2f0c2e6c21c19b", "Url": "https://api.github.com/repos/sohami/drill", "Date": "2017-02-28T07:28:14Z"},
{"Line": "=>1850", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((path.length()) == 1) { path = path + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6289/buggy-version/src.org.ibex.nestedvm.UnixRuntime.java", "BodyUseAPI": [], "Fixed commit": "b7187411e687eb2fb3fe0a0618405cb2e94ce720", "Url": "https://api.github.com/repos/bgould/nestedvm", "Date": "2014-04-13T22:57:04Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((progressionMax[i]) <= 0) { progressBars[i] = 0; }else { progressBars[i] = java.lang.Math.max(0.12597656F, (((float) (progression[i])) / ((float) (progressionMax[i])))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/752/buggy-version/src.main.java.cyano.electricadvantage.machines.GrowthChamberTileEntity.java", "BodyUseAPI": ["java.lang.Math.max(float,float)"], "Fixed commit": "8c66b3fbaa0424add3b54c9b42ca977ce36b14c4", "Url": "https://api.github.com/repos/cyanobacterium/ElectricAdvantage", "Date": "2015-09-08T23:15:01Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((permissionsToRequest.size()) > 0) { android.support.v4.app.ActivityCompat.requestPermissions(this, permissionsToRequest.toArray(new java.lang.String[permissionsToRequest.size()]), com.sousoum.droneswear.MainActivity.REQUEST_CODE_PERMISSIONS_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/489/buggy-version/mobile.src.main.java.com.sousoum.droneswear.MainActivity.java", "BodyUseAPI": ["android.support.v4.app.ActivityCompat.requestPermissions(com.sousoum.droneswear.MainActivity,java.lang.String[],int)", "java.util.Set<java.lang.String>.toArray(java.lang.String[])", "java.util.Set<java.lang.String>.size()"], "Fixed commit": "687a21ce140fbc4b44ccd8b92260ea561a599bf3", "Url": "https://api.github.com/repos/Parrot-Developers/DronesWear", "Date": "2017-01-23T21:49:06Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.TreeSet<cp.hw3.storage.model.PageRank>.pollLast()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pr == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3274/buggy-version/src.main.java.cp.hw3.query.SearchEngine.java", "BodyUseAPI": [], "Fixed commit": "5f83ca91d827d6972d3b840aabd1c5d6b72d99de", "Url": "https://api.github.com/repos/yuzzwx/CP2015-hw3-PageRank", "Date": "2015-06-25T05:57:25Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (columns.get(c).getColumnType().equals(\"Int\")) { return formatInt(curCell); }else if ((columns.get(c).getColumnType().equals(\"DATE\")) && (!(curCell.toString().equals(\"\")))) { return new java.text.SimpleDateFormat(columns.get(c).getDateType()).format(curCell.getDateCellValue()); }else if (columns.get(c).getColumnType().equals(\"DATE\")) { log.info(((((\"this cell could not be parsed to a date: '\" + \"' in column: \") + c) + \" in file: \") + (docName))); return new java.text.SimpleDateFormat(columns.get(c).getDateType()).format(new java.util.Date()); }else { return curCell.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7883/buggy-version/src.main.java.context.healthinformatics.parser.ExcelParser.java", "BodyUseAPI": ["java.util.ArrayList<context.healthinformatics.parser.Column>.get(int)", "columns.get(c).getColumnType()", "columns.get(c).getColumnType().equals(java.lang.String)", "java.util.logging.Logger.info(java.lang.String)", "columns.get(c).getDateType()", "java.util.ArrayList<context.healthinformatics.parser.Column>.get(int)", "java.text.SimpleDateFormat.format(curCell.getDateCellValue())", "java.util.ArrayList<context.healthinformatics.parser.Column>.get(int)", "columns.get(c).getDateType()", "columns.get(c).getColumnType()", "java.text.SimpleDateFormat.format(java.util.Date)", "columns.get(c).getColumnType().equals(java.lang.String)", "java.util.ArrayList<context.healthinformatics.parser.Column>.get(int)"], "Fixed commit": "8ef2528b2ce0dd5b3f4dcb9bb94942d030f311fe", "Url": "https://api.github.com/repos/rpjproost/Context-project-Health-informatics-2", "Date": "2015-06-04T14:56:51Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rs.getObject((i + 1))) != null) { res.add(rs.getObject((i + 1)).toString()); }else { res.add(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7883/buggy-version/src.main.java.context.healthinformatics.sequentialdataanalysis.Chunk.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.sql.ResultSet.getObject(int)"], "Fixed commit": "8ef2528b2ce0dd5b3f4dcb9bb94942d030f311fe", "Url": "https://api.github.com/repos/rpjproost/Context-project-Health-informatics-2", "Date": "2015-06-04T14:56:51Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.getAbsolutePath().contains(\"/Android/data/\")) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1570/buggy-version/android.src.com.frostwire.android.LollipopFileSystem.java", "BodyUseAPI": [], "Fixed commit": "802929e534add4ae8dd63d4cdf87faade62a2520", "Url": "https://api.github.com/repos/frostwire/frostwire", "Date": "2016-01-28T22:18:24Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (scales == null) { boneTrack.setKeyframes(times, translations, rotations); }else { boneTrack.setKeyframes(times, translations, rotations, scales); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5732/buggy-version/src.main.java.maud.model.EditableCgm.java", "BodyUseAPI": ["com.jme3.animation.BoneTrack.setKeyframes(float[],com.jme3.math.Vector3f[],com.jme3.math.Quaternion[],com.jme3.math.Vector3f[])"], "Fixed commit": "5fa71f0ec490a4da3615685760142d3e0017a74c", "Url": "https://api.github.com/repos/stephengold/Maud", "Date": "2017-06-23T22:30:06Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.queuedFiles.size()) > 0) { for (java.lang.String filename : this.queuedFiles) { if (!(this.threads.containsKey(filename))) { this.threads.put(filename, new Node.DownloadThread(filename)); this.threads.get(filename).start(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/644/buggy-version/src.Node.DownloadManager.java", "BodyUseAPI": [], "Fixed commit": "8ae892c8d40952f689e918cb2cc744e3695e513e", "Url": "https://api.github.com/repos/AstridVanneste/System_Y", "Date": "2017-12-12T10:30:38Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.startsWith(PlaceDM.ID)) { return new VASL.build.module.PlaceDM(type, inner); }else if (type.startsWith(Translate.ID)) { return new VASL.build.module.ASLTranslate(type, inner); }else if (type.startsWith(ASLAreaOfEffect.ID)) { return new VASL.build.module.ASLAreaOfEffect(type, inner); }else if (type.startsWith(ASLAreaOfEffectDL.ID)) { return new VASL.build.module.ASLAreaOfEffectDL(type, inner); }else { return super.createDecorator(type, inner); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6236/buggy-version/src.VASL.build.module.ASLCommandEncoder.java", "BodyUseAPI": ["java.lang.String.startsWith(ASLAreaOfEffect.ID)", "java.lang.String.startsWith(Translate.ID)", "java.lang.String.startsWith(ASLAreaOfEffectDL.ID)", "VASSAL.build.module.BasicCommandEncoder.createDecorator(java.lang.String,VASL.build.module.GamePiece)"], "Fixed commit": "25ec5fa2e299faf031d49d62acb9a4a49f18a202", "Url": "https://api.github.com/repos/vasl-developers/vasl", "Date": "2013-11-25T22:56:57Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (healthCheck(request)) { channel.sendResponse(new org.elasticsearch.rest.BytesRestResponse(OK, \"{\\\"OK\\\":{}}\")); }else { java.lang.String addr = getAddress(request); org.elasticsearch.common.logging.Loggers.getLogger(getClass()).error(\"UNAUTHORIZED type:{}, address:{}, path:{}, request:{}, content:{}, credentials:{}\", request.method(), addr, request.path(), request.params(), request.content().toUtf8(), getDecoded(request)); org.elasticsearch.rest.BytesRestResponse response = new org.elasticsearch.rest.BytesRestResponse(UNAUTHORIZED, \"Authentication Required\"); response.addHeader(\"WWW-Authenticate\", \"Basic realm=\\\"Restricted\\\"\"); channel.sendResponse(response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5962/buggy-version/src.main.java.com.asquera.elasticsearch.plugins.http.HttpBasicServer.java", "BodyUseAPI": ["com.asquera.elasticsearch.plugins.http.HttpRequest.method()", "com.asquera.elasticsearch.plugins.http.HttpBasicServer.getDecoded(com.asquera.elasticsearch.plugins.http.HttpRequest)", "com.asquera.elasticsearch.plugins.http.HttpBasicServer.getAddress(com.asquera.elasticsearch.plugins.http.HttpRequest)", "request.content().toUtf8()", "com.asquera.elasticsearch.plugins.http.HttpRequest.params()", "com.asquera.elasticsearch.plugins.http.HttpRequest.content()", "com.asquera.elasticsearch.plugins.http.HttpRequest.path()", "org.elasticsearch.common.logging.Loggers.getLogger(getClass()).error(java.lang.String,request.method(),java.lang.String,request.path(),request.params(),request.content().toUtf8(),java.lang.String)"], "Fixed commit": "27475d941c6fa57d475a91f146f1aa818c939fdf", "Url": "https://api.github.com/repos/hmalphettes/elasticsearch-http-basic", "Date": "2014-07-31T01:09:42Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (relativeDate.contains(\"seconds\")) { relativeDate = (relativeDate.substring(0, 1)) + \"s\"; }else if (relativeDate.contains(\"minute\")) { relativeDate = (relativeDate.substring(0, 1)) + \"m\"; }else if (relativeDate.contains(\"minutes\")) { relativeDate = (relativeDate.substring(0, 1)) + \"m\"; }else if (relativeDate.contains(\"hour\")) { relativeDate = (relativeDate.substring(0, 1)) + \"h\"; }else if (relativeDate.contains(\"day\")) { relativeDate = (relativeDate.substring(0, 1)) + \"d\"; }else if (relativeDate.contains(\"days\")) { relativeDate = (relativeDate.substring(0, 1)) + \"d\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5033/buggy-version/app.src.main.java.com.codepath.apps.restclienttemplate.models.Tweet.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.contains(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "d6c487408fee9d460b2a38ba9d08c4f9369ed42e", "Url": "https://api.github.com/repos/brandonbaraban/TwitterClone", "Date": "2017-07-05T17:57:06Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (_rVisibleScope == null) { rect = null; }else { rect = _rVisibleScope.getRectangle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8969/buggy-version/PaintNotes.src.main.java.model.objects.pen.Pen.java", "BodyUseAPI": ["model.util.DRect.getRectangle()"], "Fixed commit": "f0a74519b38e00b82a16cd9b968a2564d2e7fc58", "Url": "https://api.github.com/repos/juliusHuelsmann/paint", "Date": "2015-07-08T21:40:13Z"},
{"Line": "=>5909", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tree instanceof org.jmlspecs.openjml.JmlTree.JmlExpression) { if (tree instanceof org.jmlspecs.openjml.JmlTree.JmlQuantifiedExpr) return true; if (tree instanceof org.jmlspecs.openjml.JmlTree.JmlSingleton) { org.jmlspecs.openjml.JmlTokenKind.JmlTokenKind kind = ((org.jmlspecs.openjml.JmlTree.JmlSingleton) (tree)).token; if (kind == (org.jmlspecs.openjml.JmlTokenKind.JmlTokenKind.INFORMAL_COMMENT)) return true; if (kind == (org.jmlspecs.openjml.JmlTokenKind.JmlTokenKind.BSRESULT)) { com.sun.tools.javac.tree.JCTree.JCMethodDecl md = enclosingMethodEnv.enclMethod; com.sun.tools.javac.tree.JCTree res = md.getReturnType(); com.sun.tools.javac.code.TypeTag t = res.type.getTag(); if ((((((t == (com.sun.tools.javac.code.TypeTag.BOOLEAN)) || (t == (com.sun.tools.javac.code.TypeTag.INT))) || (t == (com.sun.tools.javac.code.TypeTag.LONG))) || (t == (com.sun.tools.javac.code.TypeTag.SHORT))) || (t == (com.sun.tools.javac.code.TypeTag.CHAR))) || (t == (com.sun.tools.javac.code.TypeTag.BYTE))) return true; return false; } } jmlerror(tree, \"jml.internal\", (\"Unimplemented option in JmlAttr:isBooleanOrNumeric -- \" + (tree.getClass()))); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4287/buggy-version/OpenJML.src.com.sun.tools.javac.comp.JmlAttr.java", "BodyUseAPI": ["com.sun.tools.javac.tree.JCTree.JCExpression.getClass()", "com.sun.tools.javac.comp.JmlAttr.jmlerror(com.sun.tools.javac.tree.JCTree.JCExpression,java.lang.String,java.lang.String)"], "Fixed commit": "b45e55edf8b965f0a03cf978d736df0634da8b71", "Url": "https://api.github.com/repos/OpenJML/OpenJML", "Date": "2016-11-03T16:48:17Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(waiters.isEmpty())) { net.freehaven.tor.control.TorControlConnection.Waiter w; w = waiters.removeFirst(); w.setResponse(lst); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3876/buggy-version/net.freehaven.tor.control.TorControlConnection.java", "BodyUseAPI": ["java.util.LinkedList<net.freehaven.tor.control.TorControlConnection.Waiter>.removeFirst()"], "Fixed commit": "3539cbd134f48c2c8875c440a4cbe8e15ebca280", "Url": "https://api.github.com/repos/guardianproject/jtorctl", "Date": "2014-01-10T02:11:41Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTransaction()) != null) { commit(); }else { pt.ist.fenixframework.backend.jvstmojb.JvstmOJBTransactionManager.logger.trace(\"Aborting read-only transaction due to an exception!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5493/buggy-version/backend-jvstm-ojb.src.main.java.pt.ist.fenixframework.backend.jvstmojb.JvstmOJBTransactionManager.java", "BodyUseAPI": [], "Fixed commit": "e20f8ff5ceeaaf1b883380a882456ffd8eed0988", "Url": "https://api.github.com/repos/fenix-framework/fenix-framework", "Date": "2013-02-11T17:16:28Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (bugInstanceTypeSourceLine != null) { sourceLineDescriptor.setClassname(bugInstanceTypeSourceLine.getClassname()); sourceLineDescriptor.setStart(bugInstanceTypeSourceLine.getStart()); sourceLineDescriptor.setEnd(bugInstanceTypeSourceLine.getEnd()); sourceLineDescriptor.setSourcefile(bugInstanceTypeSourceLine.getSourcefile()); sourceLineDescriptor.setSourcepath(bugInstanceTypeSourceLine.getSourcepath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8200/buggy-version/findbugs.src.main.java.de.kontext_e.jqassistant.plugin.findbugs.scanner.FindBugsScannerPlugin.java", "BodyUseAPI": ["de.kontext_e.jqassistant.plugin.findbugs.jaxb.SourceLineType.getSourcefile()", "de.kontext_e.jqassistant.plugin.findbugs.store.descriptor.SourceLineDescriptor.setSourcepath(bugInstanceTypeSourceLine.getSourcepath())", "de.kontext_e.jqassistant.plugin.findbugs.jaxb.SourceLineType.getStart()", "de.kontext_e.jqassistant.plugin.findbugs.store.descriptor.SourceLineDescriptor.setEnd(bugInstanceTypeSourceLine.getEnd())", "de.kontext_e.jqassistant.plugin.findbugs.jaxb.SourceLineType.getClassname()", "de.kontext_e.jqassistant.plugin.findbugs.jaxb.SourceLineType.getEnd()", "de.kontext_e.jqassistant.plugin.findbugs.store.descriptor.SourceLineDescriptor.setClassname(bugInstanceTypeSourceLine.getClassname())", "de.kontext_e.jqassistant.plugin.findbugs.store.descriptor.SourceLineDescriptor.setStart(bugInstanceTypeSourceLine.getStart())", "de.kontext_e.jqassistant.plugin.findbugs.store.descriptor.SourceLineDescriptor.setSourcefile(bugInstanceTypeSourceLine.getSourcefile())", "de.kontext_e.jqassistant.plugin.findbugs.jaxb.SourceLineType.getSourcepath()"], "Fixed commit": "415155b3a7699fdfdd92b45bf7adb7e64a255e99", "Url": "https://api.github.com/repos/kontext-e/jqassistant-plugins", "Date": "2015-07-31T09:08:19Z"},
{"Line": "=>806", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) { value = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6215/buggy-version/tools.wadlto.jaxrs.src.main.java.org.apache.cxf.tools.wadlto.jaxrs.SourceGenerator.java", "BodyUseAPI": [], "Fixed commit": "c811308dfe36bdb08236c33694aaa9a379c485b6", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2016-01-29T10:13:46Z"},
{"Line": "=>810", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value > 1) { genMethodName = genMethodName + (value.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6215/buggy-version/tools.wadlto.jaxrs.src.main.java.org.apache.cxf.tools.wadlto.jaxrs.SourceGenerator.java", "BodyUseAPI": ["java.lang.Integer.toString()"], "Fixed commit": "c811308dfe36bdb08236c33694aaa9a379c485b6", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2016-01-29T10:13:46Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 16) { note.bigContentView.setImageViewResource(R.id.backgroundPlayPause, R.drawable.ic_play_circle_filled_white_24dp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2965/buggy-version/app.src.main.java.org.schabi.newpipe.BackgroundPlayer.java", "BodyUseAPI": [], "Fixed commit": "437f63f7f0588e691ebc14c53052b6d39e41e1fd", "Url": "https://api.github.com/repos/algoprog/NewPipe", "Date": "2016-02-04T18:27:39Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 16) { note.bigContentView.setImageViewResource(R.id.backgroundPlayPause, R.drawable.ic_pause_white_24dp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2965/buggy-version/app.src.main.java.org.schabi.newpipe.BackgroundPlayer.java", "BodyUseAPI": [], "Fixed commit": "437f63f7f0588e691ebc14c53052b6d39e41e1fd", "Url": "https://api.github.com/repos/algoprog/NewPipe", "Date": "2016-02-04T18:27:39Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((broker) != null) { try { broker.stop(); } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4457/buggy-version/goss-core-server.src.main.java.pnnl.goss.core.server.internal.GridOpticsServer.java", "BodyUseAPI": [], "Fixed commit": "3b71f52053fbbc21167953d6b2c5ceb63dd4b2c2", "Url": "https://api.github.com/repos/GridOPTICS/GOSS", "Date": "2015-01-21T22:46:04Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inputs.size()) == 0) return flattened;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3160/buggy-version/src.com.pennapps.smartschedule.scheduler.SchedulingCalendar.java", "BodyUseAPI": [], "Fixed commit": "7d450b5f522155fff8501efb9d3f0e42fc71f7db", "Url": "https://api.github.com/repos/blacksmithgu/SmartSchedule", "Date": "2014-09-14T10:38:02Z"},
{"Line": "=>550", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPlayer.dead) == true) { setGameOverScreen(gameWon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1305/buggy-version/core.src.com.werbenjagermanjensenstudios.charitychamps.World.java", "BodyUseAPI": [], "Fixed commit": "4663986027910f7e48da7090689c188b9e463a96", "Url": "https://api.github.com/repos/spence95/capstone-proof-of-concept", "Date": "2015-11-13T03:10:43Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path == null) { throw new java.lang.RuntimeException(\"Path is null, you wanted to check that\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3028/buggy-version/src.tendiwa.core.PathTable.java", "BodyUseAPI": [], "Fixed commit": "c07ab06f1c4b7b679232b1b19fad4d7ee913bf97", "Url": "https://api.github.com/repos/Suseika/tendiwa-backend", "Date": "2013-11-29T23:14:22Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bouncycastle.openpgp.PGPSecretKeyRingCollection.getSecretKey(encryptedData.getKeyID())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (pgpSecKey != null) { privateKey = pgpSecKey.extractPrivateKey(passphrase.toCharArray(), \"BC\"); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8903/buggy-version/components.camel-crypto.src.main.java.org.apache.camel.converter.crypto.PGPDataFormatUtil.java", "BodyUseAPI": ["org.bouncycastle.openpgp.PGPSecretKey.extractPrivateKey(char[],java.lang.String)"], "Fixed commit": "041b4591f41bef5bed9c3ff32f09973230aee5a3", "Url": "https://api.github.com/repos/steveardis/camel", "Date": "2013-08-19T19:19:09Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(directory.exists())) directory.mkdirs(); else throw new java.io.IOException(((\"resource \" + directory) + \" is not a directory\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7841/buggy-version/railo-java.railo-core.src.railo.commons.lang.PhysicalClassLoader.java", "BodyUseAPI": [], "Fixed commit": "f666884c9a7fe5e91331f9c0e6e1636fbf0dad67", "Url": "https://api.github.com/repos/dajester2013/railo", "Date": "2013-10-18T19:35:29Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(source)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1474/buggy-version/structr-core.src.main.java.org.structr.core.property.DoubleProperty.java", "BodyUseAPI": [], "Fixed commit": "8f3cfc5ce3bb725e3a98722fcb4e9687472c6188", "Url": "https://api.github.com/repos/structr/structr", "Date": "2014-07-17T20:52:22Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isInfinite(source)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1474/buggy-version/structr-core.src.main.java.org.structr.core.property.DoubleProperty.java", "BodyUseAPI": [], "Fixed commit": "8f3cfc5ce3bb725e3a98722fcb4e9687472c6188", "Url": "https://api.github.com/repos/structr/structr", "Date": "2014-07-17T20:52:22Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((last) != null) handleChangedEnchantment(enchantments, last);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1708/buggy-version/src.main.java.net.epoxide.eplus.client.gui.GuiModEnchantmentTable.java", "BodyUseAPI": [], "Fixed commit": "47ad223479de12a31326224d3e61b247c0a0add7", "Url": "https://api.github.com/repos/Epoxide-Software/Enchanting-Plus", "Date": "2015-11-21T01:51:10Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (label != (last)) handleChangedEnchantment(enchantments, label);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1708/buggy-version/src.main.java.net.epoxide.eplus.client.gui.GuiModEnchantmentTable.java", "BodyUseAPI": ["net.epoxide.eplus.client.gui.GuiModEnchantmentTable.handleChangedEnchantment(java.util.Map<java.lang.Integer, java.lang.Integer>,net.epoxide.eplus.client.gui.GuiEnchantmentLabel)"], "Fixed commit": "47ad223479de12a31326224d3e61b247c0a0add7", "Url": "https://api.github.com/repos/Epoxide-Software/Enchanting-Plus", "Date": "2015-11-21T01:51:10Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((plugin.getCommandMap().get(command)) != null) plugin.getServer().dispatchCommand(plugin.getServer().getConsoleSender(), plugin.getCommandMap().get(command)); else if ((plugin.getCommandMap().get((command + \"[op]\"))) != null) plugin.getServer().dispatchCommand(plugin.getServer().getConsoleSender(), plugin.getCommandMap().get((command + \"[op]\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8290/buggy-version/src.littlegruz.autoruncommands.listeners.CommandServerListener.java", "BodyUseAPI": ["littlegruz.autoruncommands.CommandMain.getCommandMap()", "littlegruz.autoruncommands.CommandMain.getServer()", "plugin.getServer().getConsoleSender()", "littlegruz.autoruncommands.CommandMain.getServer()", "plugin.getCommandMap().get(java.lang.String)", "plugin.getServer().dispatchCommand(plugin.getServer().getConsoleSender(),plugin.getCommandMap().get(command))", "plugin.getServer().dispatchCommand(plugin.getServer().getConsoleSender(),plugin.getCommandMap().get((command + \"[op]\")))", "plugin.getCommandMap().get(java.lang.String)", "littlegruz.autoruncommands.CommandMain.getServer()", "littlegruz.autoruncommands.CommandMain.getCommandMap()", "littlegruz.autoruncommands.CommandMain.getCommandMap()", "plugin.getServer().getConsoleSender()", "littlegruz.autoruncommands.CommandMain.getServer()", "plugin.getCommandMap().get(java.lang.String)"], "Fixed commit": "ef87b0411cc5fd59f7af0126285b1285835843c6", "Url": "https://api.github.com/repos/LittleGruz/Autorun-Commands", "Date": "2013-05-05T04:30:42Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fi.solita.utils.meta.Workaround.sourceTypeBinding) == null) { return type.getEnclosedElements(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3912/buggy-version/src.main.java.fi.solita.utils.meta.Workaround.java", "BodyUseAPI": [], "Fixed commit": "72d6a02d9e76866baebf3f840b0fea603887d707", "Url": "https://api.github.com/repos/solita/meta-utils", "Date": "2016-08-03T05:51:09Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((turnPhase) != null) && (!(game.getPhase().getType().equals(turnPhase)))) || (((phaseStep) != null) && (!(game.getTurn().getStepType().equals(phaseStep))))) || (((condition) != null) && (!(condition.apply(game, source))))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4641/buggy-version/Mage.src.main.java.mage.abilities.effects.common.ruleModifying.CastOnlyDuringPhaseStepSourceEffect.java", "BodyUseAPI": [], "Fixed commit": "43460c1256cb4bf84d2bf2f8050627e1a5b9f203", "Url": "https://api.github.com/repos/menocar/mage", "Date": "2016-02-02T14:01:03Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((keyList) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5708/buggy-version/src.main.java.org.gabrielebaldassarre.tcomponent.bridge.TalendFlowImpl.java", "BodyUseAPI": [], "Fixed commit": "512aced7276bb472630a86147663cd0066c9a8b1", "Url": "https://api.github.com/repos/theclue/talend-bridge-api", "Date": "2013-01-12T12:59:23Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((table.getKeyColumns()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5708/buggy-version/src.main.java.org.gabrielebaldassarre.tcomponent.bridge.TalendColumnImpl.java", "BodyUseAPI": [], "Fixed commit": "512aced7276bb472630a86147663cd0066c9a8b1", "Url": "https://api.github.com/repos/theclue/talend-bridge-api", "Date": "2013-01-12T12:59:23Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getProperty().getValue()) != null) { com.entity.Course course = ((com.entity.Course) (event.getProperty().getValue())); IdCourse = course.getId(); absoluteLayout.removeComponent(tabSheetLayout); tabSheetLayout = buildTabSheetLayout(IdTeacher, IdCourse); absoluteLayout.addComponent(tabSheetLayout, \"top:56.0px;right:-6.0px;bottom:-65.0px;left:1.0px;\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5154/buggy-version/src.com.UI.TeacherUIcomposit.java", "BodyUseAPI": ["com.vaadin.data.Property.ValueChangeEvent.getProperty()", "event.getProperty().getValue()"], "Fixed commit": "f05df9fd7207ce0f2ac76460cbb7c766e1636d84", "Url": "https://api.github.com/repos/Daocheng/DMS_isep", "Date": "2013-12-19T14:57:06Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (command.equals(\"load\")) { game.createEvent(new events.LoadEvent(\"default\")); }else if (command.equals(\"save\")) { game.createEvent(new events.Event(Event.Type.SAVE)); }else if (command.equals(\"exit\")) { game.createEvent(new events.Event(Event.Type.EXIT)); }else { java.lang.System.out.print(((\"Unknown command \" + command) + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1608/buggy-version/src.systems.InputSystem.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.io.PrintStream.print(java.lang.String)"], "Fixed commit": "252bfbebe869d2b6d0e80648fe6527aed3dbb602", "Url": "https://api.github.com/repos/erikgoe/Cubeland", "Date": "2017-09-16T17:27:04Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (partName.equals(\"q\")) { result = reference.getQuery(); }else if (partName.equals(\"r\")) { result = reference.getRemainingPart(); }else if (partName.isEmpty()) { result = reference.toString(false, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4918/buggy-version/modules.org.restlet.src.org.restlet.engine.util.CallResolver.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.isEmpty()"], "Fixed commit": "b0298debafc31f32e962a5643b4d7826dd124459", "Url": "https://api.github.com/repos/Landmark-LGC/restlet-framework-java", "Date": "2014-08-08T08:10:54Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newI.getId()) == (oldI.getId())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/648/buggy-version/src.se.chalmers.lidkopingsh.server.ServerHelper.java", "BodyUseAPI": [], "Fixed commit": "c95b86794a20fc29cff91f01865b5a7c898ab5df", "Url": "https://api.github.com/repos/Farenheight/Lidkoping-SH", "Date": "2013-10-26T12:29:15Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < (players.size())) { g.drawImage(cars.getSubImage(((players.get(i).getxSel()) * (ICONSIZE)), ((players.get(i).getySel()) * (ICONSIZE)), ICONSIZE, ICONSIZE), ((float) (((Application.screenSize.width) / 3.8) + (i * 160))), ((Application.screenSize.height) / 4)); }else { g.drawImage(icons.getSubImage(256, 0, 128, 128), ((float) (((Application.screenSize.width) / 3.8) + (i * 160))), ((Application.screenSize.height) / 4)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2992/buggy-version/game.src.main.java.com.github.fredrikzkl.furyracers.Menu.java", "BodyUseAPI": ["players.get(i).getySel()", "org.newdawn.slick.Graphics.drawImage(cars.getSubImage(((players.get(i).getxSel()) * (ICONSIZE)), ((players.get(i).getySel()) * (ICONSIZE)), ICONSIZE, ICONSIZE),((float) (((Application.screenSize.width) / 3.8) + (i * 160))),((Application.screenSize.height) / 4))", "players.get(i).getxSel()", "java.util.List<com.github.fredrikzkl.furyracers.game.Player>.get(int)", "java.util.List<com.github.fredrikzkl.furyracers.game.Player>.get(int)", "org.newdawn.slick.Graphics.drawImage(icons.getSubImage(256, 0, 128, 128),((float) (((Application.screenSize.width) / 3.8) + (i * 160))),((Application.screenSize.height) / 4))", "org.newdawn.slick.Image.getSubImage(((players.get(i).getxSel()) * (ICONSIZE)),((players.get(i).getySel()) * (ICONSIZE)),int,int)"], "Fixed commit": "da6e84eefc562f6b28a4ad4d93d212ff20da1662", "Url": "https://api.github.com/repos/fredrikzkl/FuryRacers", "Date": "2016-02-23T18:26:47Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (prev != null) { current.setBearing(prev.bearingTo(current)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3151/buggy-version/OsmAnd.src.net.osmand.plus.routing.RouteAnimation.java", "BodyUseAPI": ["android.location.Location.setBearing(prev.bearingTo(current))", "android.location.Location.bearingTo(android.location.Location)"], "Fixed commit": "ba3a22b85ff508916cc63b4683beb3e3f0bc6638", "Url": "https://api.github.com/repos/goedson/Osmand", "Date": "2011-10-10T19:21:08Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (symbol instanceof fr.loganbraga.hogwash.Language.Imports.Type) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/682/buggy-version/src.main.java.fr.loganbraga.hogwash.Language.Imports.ModuleImporter.java", "BodyUseAPI": [], "Fixed commit": "12a9d4cd98df204a7e42c670728e43d91139ea7e", "Url": "https://api.github.com/repos/loganbraga/hogwash", "Date": "2016-03-27T10:39:10Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ourHelper.getBidsLeft()) == 1) { negotiator.group7.Log.newLine(\"\\n\\n ACCEPT! @ Last bid.... just accept man... just accept :( \\n\\n\"); return negotiator.boaframework.Actions.Accept; }else if ((((kalaiUtility - range) <= hisLast) && (hisLast <= (kalaiUtility + range))) && (ourHelper.isOpponentModelReliable())) { negotiator.group7.Log.newLine(\"\\n\\n ACCEPT! @ hisLast == Kalai!!! :D \\n\\n\"); return negotiator.boaframework.Actions.Accept; }else if ((((nashUtility - range) <= hisLast) && (hisLast <= (nashUtility + range))) && (ourHelper.isOpponentModelReliable())) { negotiator.group7.Log.newLine(\"\\n\\n ACCEPT! @ hisLast == Nash!!! :9 \\n\\n\"); return negotiator.boaframework.Actions.Accept; }else if (hisLast > ourWorstCapped) { negotiator.group7.Log.newLine(((((\"\\n\\n ACCEPT! @ hisLast > ourWorstFixed: \" + hisLast) + \"; \") + ourWorstCapped) + \"\\n\\n\")); return negotiator.boaframework.Actions.Accept; }else if (hisLast > ourNext) { negotiator.group7.Log.newLine(((((\"\\n\\n ACCEPT! @ hisLast > ourNext: \" + hisLast) + \"; \") + ourNext) + \"\\n\\n\")); return negotiator.boaframework.Actions.Accept; }else { return negotiator.boaframework.Actions.Reject; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8632/buggy-version/NegotiationAgent.src.negotiator.group7.Group7_AS.java", "BodyUseAPI": ["negotiator.group7.Helper.isOpponentModelReliable()", "negotiator.group7.Helper.isOpponentModelReliable()"], "Fixed commit": "068d651670c20745f98bac89050c354a6b679abc", "Url": "https://api.github.com/repos/tomrunia/negotiation-project", "Date": "2014-02-03T15:51:26Z"},
{"Line": "=>1257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mShadowedText) == null) { mShadowedText = new com.ds.avare.utils.ShadowedText(getApplicationContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8308/buggy-version/app.src.main.java.com.ds.avare.StorageService.java", "BodyUseAPI": [], "Fixed commit": "5cef3209cb8364041818268cae42f83a6a120b99", "Url": "https://api.github.com/repos/pasniak/avare", "Date": "2017-04-29T23:48:54Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((src.getType()) == (com.cv4j.core.datamodel.ImageData.CV4J_IMAGE_TYPE_RGB)) { src.convert2Gray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3306/buggy-version/cv4j.src.main.java.com.cv4j.core.filters.FloSteDitheringFilter.java", "BodyUseAPI": ["com.cv4j.core.datamodel.ImageData.convert2Gray()"], "Fixed commit": "2032800a716271058c2fdd71b4f08c794276043d", "Url": "https://api.github.com/repos/imageprocessor/cv4j", "Date": "2017-03-07T02:55:59Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((src.getType()) == (com.cv4j.core.datamodel.ImageData.CV4J_IMAGE_TYPE_RGB)) { src.convert2Gray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3306/buggy-version/cv4j.src.main.java.com.cv4j.core.filters.MeansBinaryFilter.java", "BodyUseAPI": ["com.cv4j.core.datamodel.ImageData.convert2Gray()"], "Fixed commit": "2032800a716271058c2fdd71b4f08c794276043d", "Url": "https://api.github.com/repos/imageprocessor/cv4j", "Date": "2017-03-07T02:55:59Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((itemBiddingOn.getThumbnail()) != null) { image.setImageBitmap(itemBiddingOn.getThumbnail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3561/buggy-version/WarOnDemand.app.src.main.java.com.hello.hegberg.warondemand.BiddingActivity.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(itemBiddingOn.getThumbnail())", "com.hello.hegberg.warondemand.WarItem.getThumbnail()"], "Fixed commit": "e29cb0d7a1269ddaba1d0e3e28649b87769e4fb0", "Url": "https://api.github.com/repos/Hegberg/Agile_Android_Abstracts", "Date": "2016-04-04T04:57:40Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getParameter(\"reloadCaddie\")) != null) { request.setAttribute(\"Caddie\", currentSession.getAttribute(\"Caddie\")); request.setAttribute(\"login\", currentSession.getAttribute(\"login\")); request.setAttribute(\"password\", currentSession.getAttribute(\"password\")); this.getServletContext().getRequestDispatcher(\"/JSPCaddie.jsp\").forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5725/buggy-version/BD_AIRPORT.Applic_Billets.src.java.ServletUtils.ServletConnection.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,currentSession.getAttribute(\"login\"))", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,currentSession.getAttribute(\"Caddie\"))", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,currentSession.getAttribute(\"password\"))", "this.getServletContext().getRequestDispatcher(\"/JSPCaddie.jsp\").forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"], "Fixed commit": "b3cd05ce117404312a09b9c5e8b8f67762090274", "Url": "https://api.github.com/repos/Nenoxx/JavaBac3", "Date": "2017-11-19T13:50:18Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(amara.engine.settings.Settings.getBoolean(\"hardware_skinning\"))) { loadTexture(material, \"NormalMap\", currentMaterialElement.getAttributeValue(\"normalMap\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5673/buggy-version/Amara.src.amara.engine.applications.ingame.client.models.ModelSkin.java", "BodyUseAPI": [], "Fixed commit": "fd12ac57b56467cb583bbf25b6abca55c5e8d409", "Url": "https://api.github.com/repos/destroflyer/amara", "Date": "2015-12-02T18:02:05Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["amara.game.entitysystem.systems.units.EntityWorld.getComponent(int,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (healthComponent != null) { entityWorld.setComponent(sourceEntity, new amara.game.entitysystem.systems.units.HealthComponent(((healthComponent.getValue()) + healedAmount))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5673/buggy-version/Amara.src.amara.game.entitysystem.systems.units.LifestealSystem.java", "BodyUseAPI": ["amara.game.entitysystem.systems.units.HealthComponent.getValue()", "amara.game.entitysystem.systems.units.EntityWorld.setComponent(int,amara.game.entitysystem.systems.units.HealthComponent)"], "Fixed commit": "fd12ac57b56467cb583bbf25b6abca55c5e8d409", "Url": "https://api.github.com/repos/destroflyer/amara", "Date": "2015-12-02T18:02:05Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xelit3.gymstatus.model.dao.RoutineDAOImpl.modifyRoutine(com.xelit3.gymstatus.model.dto.Routine)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tmpFlag) { tmpAction = new com.xelit3.gymstatus.control.events.EventAction(com.xelit3.gymstatus.control.events.EventAction.Action.MODIFY, aRoutine); notifyObservers(tmpAction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2122/buggy-version/src.main.java.com.xelit3.gymstatus.control.Controller.java", "BodyUseAPI": [], "Fixed commit": "0ea9d016ea3e91294b085652fa3a305039e2fd81", "Url": "https://api.github.com/repos/Xelit3/GymStatus", "Date": "2015-11-06T23:56:28Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tmpEA.getAction()) == (com.xelit3.gymstatus.control.events.EventAction.Action.MODIFY)) { tableRoutines.getFrameModal().setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2122/buggy-version/src.main.java.com.xelit3.gymstatus.view.routines.TableRoutinesPanel.java", "BodyUseAPI": [], "Fixed commit": "0ea9d016ea3e91294b085652fa3a305039e2fd81", "Url": "https://api.github.com/repos/Xelit3/GymStatus", "Date": "2015-11-06T23:56:28Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7990/buggy-version/src-pos.uk.chromis.pos.json.adapters.BaseAdapter.java", "BodyUseAPI": [], "Fixed commit": "9b6ef6420a34535281565453c3c8c8b825cbe339", "Url": "https://api.github.com/repos/wetteifer/ChromisPOS", "Date": "2017-03-22T20:56:03Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7990/buggy-version/src-pos.uk.chromis.pos.json.adapters.BaseAdapter.java", "BodyUseAPI": [], "Fixed commit": "9b6ef6420a34535281565453c3c8c8b825cbe339", "Url": "https://api.github.com/repos/wetteifer/ChromisPOS", "Date": "2017-03-22T20:56:03Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i > 0) { p = new edu.stanford.nlp.util.Pair(arguments.get((i - 1)), arguments.get(i)); sententialInstances.add(p); p = new edu.stanford.nlp.util.Pair(arguments.get(i), arguments.get((i - 1))); sententialInstances.add(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3425/buggy-version/src.main.java.iitb.neo.argumentidentification.AdjacentSententialInstanceGeneration.java", "BodyUseAPI": ["java.util.List<edu.washington.multirframework.data.Argument>.get(int)", "java.util.List<edu.washington.multirframework.data.Argument>.get(int)", "java.util.List<edu.washington.multirframework.data.Argument>.get(int)", "java.util.List<edu.washington.multirframework.data.Argument>.get(int)"], "Fixed commit": "924913b37d3f12f5b4ca2f22cf38960e9be237bb", "Url": "https://api.github.com/repos/NEO-IE/numbertron", "Date": "2015-05-23T08:57:42Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<edu.washington.multirframework.data.Argument>.size()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (i < (numArgs - 1)) { p = new edu.stanford.nlp.util.Pair(arguments.get((i + 1)), arguments.get(i)); sententialInstances.add(p); p = new edu.stanford.nlp.util.Pair(arguments.get(i), arguments.get((i + 1))); sententialInstances.add(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3425/buggy-version/src.main.java.iitb.neo.argumentidentification.AdjacentSententialInstanceGeneration.java", "BodyUseAPI": ["java.util.List<edu.washington.multirframework.data.Argument>.get(int)", "java.util.List<edu.washington.multirframework.data.Argument>.get(int)", "java.util.List<edu.washington.multirframework.data.Argument>.get(int)", "java.util.List<edu.washington.multirframework.data.Argument>.get(int)"], "Fixed commit": "924913b37d3f12f5b4ca2f22cf38960e9be237bb", "Url": "https://api.github.com/repos/NEO-IE/numbertron", "Date": "2015-05-23T08:57:42Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dialog.getDiscountCardNumberTextField().getText().trim().isEmpty())) { discountCardNumberTextEntered(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7604/buggy-version/finance.swing.src.main.java.com.lavida.swing.handler.SellDialogHandler.java", "BodyUseAPI": [], "Fixed commit": "522499193149645788b6851bb388f4acb44d891c", "Url": "https://api.github.com/repos/pavel-slyvka/lavida", "Date": "2013-09-11T11:26:27Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(connectionManager.isNetworkAvailable())) { dismiss(); callback.displayMessage(getActivity().getString(R.string.error_no_internet_connection)); }else if (!(connectionManager.getAccount().isEmailValid(email))) { dismiss(); callback.showZeeguuLoginDialog(getActivity().getString(R.string.error_email), null); }else if (password.equals(\"\")) { dismiss(); callback.showZeeguuLoginDialog(getActivity().getString(R.string.login_zeeguu_error_password), email); }else connectionManager.getSessionId(email, password);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/9055/buggy-version/src.main.java.ch.unibe.zeeguulibrary.Dialogs.ZeeguuLoginDialog.java", "BodyUseAPI": ["ch.unibe.zeeguulibrary.Core.ZeeguuConnectionManager.getAccount()", "connectionManager.getAccount().isEmailValid(java.lang.String)", "ch.unibe.zeeguulibrary.Core.ZeeguuConnectionManager.getSessionId(java.lang.String,java.lang.String)"], "Fixed commit": "a60ec75ecdbd74cffaa9ab5053fd2785d59d76c3", "Url": "https://api.github.com/repos/linusschwab/zeeguu-android-library", "Date": "2015-05-21T12:42:38Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (superName != null) { this.newClass.setExtends(superName.replace('/', '.')); }else { this.newClass.setExtends(superName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3945/buggy-version/src.asm.ClassDeclarationVisitor.java", "BodyUseAPI": ["this.newClass.setExtends(java.lang.String)", "this.newClass.setExtends(java.lang.String)", "java.lang.String.replace(char,char)"], "Fixed commit": "8abb8d1fe71e7c07114034d9dae780f4420b44e8", "Url": "https://api.github.com/repos/mpersing/CSSE374-Final-Project", "Date": "2016-01-07T14:36:13Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ce.type) == (kalang.core.Types.NULL_TYPE)) { return \"null\"; }else { return v.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/9115/buggy-version/src.main.java.kalang.compiler.Ast2Java.java", "BodyUseAPI": [], "Fixed commit": "b2a6f64132a69a967f044402d8a1106306f79226", "Url": "https://api.github.com/repos/kasonyang/kalang", "Date": "2016-02-19T05:23:13Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.starfishrespect.myconsumption.android.SingleInstance.getDatabaseHelper().getValueForKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (keyData == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/9067/buggy-version/app.src.main.java.org.starfishrespect.myconsumption.android.controllers.UserController.java", "BodyUseAPI": [], "Fixed commit": "253bd8a3ae94b142d9843ff08d69ef59d67f7ff5", "Url": "https://api.github.com/repos/S23Y/myconsumption-android", "Date": "2015-05-27T22:37:37Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getPiece().getPosition()) == 3) { player.getPiece().setPosition(40); }else { player.getPiece().setPosition(((player.getPiece().getPosition()) - 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2003/buggy-version/src.entity.Chance.java", "BodyUseAPI": ["player.getPiece().setPosition(((player.getPiece().getPosition()) - 3))", "player.getPiece().getPosition()", "entity.Player.getPiece()", "player.getPiece().setPosition(int)", "entity.Player.getPiece()", "entity.Player.getPiece()"], "Fixed commit": "1a470777a515b7a02862c8a87b36ccb0b8959bfc", "Url": "https://api.github.com/repos/freyahelstrup/17_final", "Date": "2017-01-13T13:53:43Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getAccount().getBalance()) < rent) { owner.getAccount().setBalance(((owner.getAccount().getBalance()) + (player.getAccount().getBalance()))); }else { owner.getAccount().setBalance(((owner.getAccount().getBalance()) + rent)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2003/buggy-version/src.entity.Ownable.java", "BodyUseAPI": ["entity.Player.getAccount()", "player.getAccount().getBalance()", "owner.getAccount().setBalance(((owner.getAccount().getBalance()) + (player.getAccount().getBalance())))", "owner.getAccount().setBalance(((owner.getAccount().getBalance()) + rent))"], "Fixed commit": "1a470777a515b7a02862c8a87b36ccb0b8959bfc", "Url": "https://api.github.com/repos/freyahelstrup/17_final", "Date": "2017-01-13T13:53:43Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.io.FilenameUtils.separatorsToUnix(virtualFile.getPath())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isFlooIgnored(virtualFile, path)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6334/buggy-version/src.floobits.common.Ignore.java", "BodyUseAPI": [], "Fixed commit": "1952d1a8f56e1204b45fa3f3f6221747ecfbf5af", "Url": "https://api.github.com/repos/Floobits/floobits-intellij", "Date": "2014-02-07T21:51:32Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getList().isEmpty()) { txt = ((android.widget.TextView) (view.findViewById(R.id.empty))); txt.setVisibility(View.VISIBLE); txt.setText(\"No Contact Info Saved! Start Scanning!\"); }else { objects.ContactAdapter ca = new objects.ContactAdapter(getList()); recList.setAdapter(ca); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/693/buggy-version/app.src.main.java.com.kingkrooks.followup.Contacts.java", "BodyUseAPI": [], "Fixed commit": "590de373287d387d9ae014dbe7c3eb035d68208f", "Url": "https://api.github.com/repos/ArjunBansil/FollowUp", "Date": "2015-08-15T04:01:30Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.isCancelable()) { event.setCanceled(true); }else { event.setResultSound(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7373/buggy-version/src.main.java.vazkii.ambience.Ambience.java", "BodyUseAPI": ["net.minecraftforge.client.event.sound.PlaySoundEvent.setCanceled(boolean)", "net.minecraftforge.client.event.sound.PlaySoundEvent.setResultSound(<nulltype>)"], "Fixed commit": "78d8008cfcc090c2e0d5baec604489e73cd4ec9c", "Url": "https://api.github.com/repos/Vazkii/Ambience", "Date": "2017-01-12T14:13:54Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (json.has(\"share\")) { return json.getJSONObject(\"share\").getInt(\"share_count\"); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7076/buggy-version/src.main.java.org.shredzone.shariff.target.Facebook.java", "BodyUseAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)", "json.getJSONObject(\"share\").getInt(java.lang.String)"], "Fixed commit": "0ce7bfe6da15d0eb5d449db50c4f674c899fd522", "Url": "https://api.github.com/repos/shred/shariff-backend-java", "Date": "2016-09-06T18:37:55Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.teiid.query.function.FunctionTree.getFunctionsInCategory(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fMethods.isEmpty()) { fMethods = new java.util.HashSet<org.teiid.metadata.FunctionMethod>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6316/buggy-version/plugins.teiid.org.teiid.runtime.client.engine.org.teiid.query.function.FunctionLibrary.java", "BodyUseAPI": [], "Fixed commit": "8300bbeb7c1d51036565e221501943b2042d643d", "Url": "https://api.github.com/repos/Teiid-Designer/teiid-designer", "Date": "2017-03-15T18:21:17Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.scene.canvas.Canvas.getWidth()", "javafx.scene.canvas.Canvas.getHeight()", "berlin.iconn.rbm.imageviewer.drawables.FlowGroup.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((hCanvas < 10) || (wCanvas < 10)) || (nThumbs < 10)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/741/buggy-version/src.main.java.berlin.iconn.rbm.imageviewer.drawables.FlowGroup.java", "BodyUseAPI": [], "Fixed commit": "0f683d068940a495a3c6c28fe8c35e7d9d9e375f", "Url": "https://api.github.com/repos/Gnork/rbmtools", "Date": "2014-04-16T16:04:33Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(openingActivity)) { com.picturebooks.mobilepicturebooks.ActiveUser.clearActiveUser(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8060/buggy-version/src.com.picturebooks.mobilepicturebooks.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "ef00c2fcde615831f86d4edf6f8cfa48b5bb3e10", "Url": "https://api.github.com/repos/TsugumiWinters/funimals", "Date": "2013-11-25T13:24:49Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(this.isTouchGoalLeft(f))) && (!(this.isTouchGoalRight(f)))) { this.setVx((-(vX))); }else { this.goal(f, p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5009/buggy-version/AwesomeBall.src.geo.Ball.java", "BodyUseAPI": ["geo.Ball.goal(geo.FieldController,geo.PlayerController)"], "Fixed commit": "c667bd85af5561814272a13b3e0630364fe7fe85", "Url": "https://api.github.com/repos/yrmt/AwesomeBall", "Date": "2014-12-13T21:07:23Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(listeners.contains(listener))) { listeners.add(listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4797/buggy-version/GSPAndroid.gsp-android.src.main.java.com.gdevelop.gwt.syncrpc.android.auth.AuthenticatorManager.java", "BodyUseAPI": ["java.util.ArrayList<com.gdevelop.gwt.syncrpc.auth.ServiceAuthenticationListener>.add(com.gdevelop.gwt.syncrpc.auth.ServiceAuthenticationListener)"], "Fixed commit": "e2d87d8ac65d6c73c9478f1e9b9fe0dea4bc13ae", "Url": "https://api.github.com/repos/jcricket/gwt-syncproxy", "Date": "2015-10-19T03:56:17Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNeedCamera) { actualPosition = position - 1; }else { actualPosition = position; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7592/buggy-version/photogallery.src.main.java.com.wq.photo.adapter.PhotoAdapter.java", "BodyUseAPI": [], "Fixed commit": "2b6c9d3e39459aff7aaf8107b2c7bd646e4a5f2f", "Url": "https://api.github.com/repos/Froyo91/wqgallery", "Date": "2015-12-29T03:31:32Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.ist.fenixframework.FenixFramework.getDomainObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(writtenEvaluation.isInEnrolmentPeriod())) { throw new org.fenixedu.academic.service.services.exceptions.FenixServiceException(\"Enrolment period is not opened\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7037/buggy-version/src.main.java.org.fenixedu.academic.service.services.student.EnrolStudentInWrittenEvaluation.java", "BodyUseAPI": [], "Fixed commit": "e775896551b82697240fe15bf7768ec94b76080f", "Url": "https://api.github.com/repos/FenixEdu/fenixedu-academic", "Date": "2015-01-19T13:48:48Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.zggk.zggkandroid.MainApplication.mCurAccounInfo) == null) { com.zggk.zggkandroid.MainApplication.mCurAccounInfo = new com.zggk.zggkandroid.entity.AccountListEntity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4063/buggy-version/app.src.main.java.com.zggk.zggkandroid.MainApplication.java", "BodyUseAPI": [], "Fixed commit": "7ff9e769484f826a23b536c68e92bc69fcad687d", "Url": "https://api.github.com/repos/wujie0919/ZGGKAndroid", "Date": "2016-03-28T13:13:15Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((start == 0) && (!(sequences.isEmpty()))) && ((sequences.get(0).start) == 0)) { be.iminds.iot.dianne.rl.experience.AbstractExperiencePool.SequenceLocation removed = sequences.remove(0); noSamples -= removed.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5375/buggy-version/be.iminds.iot.dianne.rl.experience.src.be.iminds.iot.dianne.rl.experience.AbstractExperiencePool.java", "BodyUseAPI": ["java.util.List<be.iminds.iot.dianne.rl.experience.AbstractExperiencePool.SequenceLocation>.remove(int)"], "Fixed commit": "f25bf815f2f740ce2e4701355b8f8ea6956eea4c", "Url": "https://api.github.com/repos/ibcn-cloudlet/dianne", "Date": "2017-05-23T19:07:29Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 11) { if ((notification.tickerView) != null) { com.limpoxe.fairy.util.RefInvoker.setFieldObject(notification.tickerView, android.widget.RemoteViews.class, \"mPackage\", com.limpoxe.fairy.core.PluginLoader.getApplication().getPackageName()); } if ((notification.contentView) != null) { com.limpoxe.fairy.util.RefInvoker.setFieldObject(notification.contentView, android.widget.RemoteViews.class, \"mPackage\", com.limpoxe.fairy.core.PluginLoader.getApplication().getPackageName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4179/buggy-version/FairyPlugin.src.main.java.com.limpoxe.fairy.core.proxy.systemservice.AndroidAppINotificationManager.java", "BodyUseAPI": [], "Fixed commit": "69ccd5aa0b780faf2cf1f07ce63e6feeb236c3dd", "Url": "https://api.github.com/repos/limpoxe/Android-Plugin-Framework", "Date": "2016-10-28T01:26:25Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fortune.pojo.PGroup.getUserList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(isUserInUserList(user, userList))) { java.util.List<fortune.pojo.PGroup> pgroupList = existedUser.getpGroupList(); pgroupList.add(pGroup); userDao.updateUser(existedUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5225/buggy-version/gamble-core.src.main.java.fortune.service.PGroupService.java", "BodyUseAPI": [], "Fixed commit": "825179f0c7953e3f91e6535228337bc34432fbc7", "Url": "https://api.github.com/repos/darlingtld/fortune", "Date": "2015-11-23T16:17:56Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(resultSet.isBeforeFirst())) { java.lang.System.out.println(\"No data\"); str = \"0\"; }else { str = resultSet.getString(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6938/buggy-version/src.model.DatabaseConnecter.java", "BodyUseAPI": ["java.sql.ResultSet.getString(int)"], "Fixed commit": "ea398b3ce18656659951f73b28c9e0d210b70c45", "Url": "https://api.github.com/repos/snowvybond/SA", "Date": "2017-11-21T17:25:51Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ret = true) { counter = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4907/buggy-version/app.src.com.nebel_tv.ui.fragment.base.BaseWebViewFragment.java", "BodyUseAPI": [], "Fixed commit": "762633b2aa709794670ec5145d554ad93ecc674e", "Url": "https://api.github.com/repos/NebelTVOrg/nebel.tv-teaser", "Date": "2013-11-20T15:56:16Z"},
{"Line": "=>1100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.uhn.fhir.context.RuntimeResourceDefinition.getSearchParam(theSort.getParamName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((param.getParamType()) == (ca.uhn.fhir.rest.method.RestSearchParameterTypeEnum.REFERENCE)) { thePredicates.add(stringJoin.get(\"mySourcePath\").as(java.lang.String.class).in(param.getPathsSplit())); }else { thePredicates.add(theBuilder.equal(stringJoin.get(\"myParamName\"), theSort.getParamName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5934/buggy-version/hapi-fhir-jpaserver-base.src.main.java.ca.uhn.fhir.jpa.dao.BaseHapiFhirResourceDao.java", "BodyUseAPI": ["java.util.List<javax.persistence.criteria.Predicate>.add(stringJoin.get(\"mySourcePath\").as(java.lang.String.class).in(param.getPathsSplit()))", "ca.uhn.fhir.context.RuntimeSearchParam.getPathsSplit()", "stringJoin.get(\"mySourcePath\").as(java.lang.String.class).in(param.getPathsSplit())"], "Fixed commit": "5a450227b240de0dd8e4559f995999cac99beded", "Url": "https://api.github.com/repos/lcamilo15/hapi-fhir", "Date": "2015-07-18T21:05:10Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (targetDirectory.exists()) { if (override) { targetDirectory.delete(); targetDirectory.mkdirs(); }else { throw new de.ismll.storage.StorageException(((\"Storage directory \" + (targetDirectory)) + \" already exists and it should not be overridden automatically. You may want to use \\\"-Dde.ismll.storage.FileStorageTarget.override=true\\\" to automatically override existing storage targets.\")); } }else { targetDirectory.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6525/buggy-version/src.java.de.ismll.storage.FileStorageTarget.java", "BodyUseAPI": ["java.io.File.mkdirs()", "java.io.File.delete()", "java.io.File.mkdirs()"], "Fixed commit": "b0c5dca4c1279f3a8a23d4938acec3e8047c9e58", "Url": "https://api.github.com/repos/busche/Matrix", "Date": "2013-10-30T15:23:49Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((classNodes) != null) { for (edu.sdsc.ontoquest.rest.ClassNode classNode : classNodes.values()) { org.w3c.dom.Element classNodeElem = classNode.toXml(d); classesElem.appendChild(classNodeElem); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8494/buggy-version/src.edu.sdsc.ontoquest.rest.ClassNodeResource.java", "BodyUseAPI": [], "Fixed commit": "372a0c2aa99693b24deeff462964d0cc8edd99d7", "Url": "https://api.github.com/repos/SciCrunch/ontoquest", "Date": "2014-02-11T23:01:04Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.santiago.canchaapp.app.adapter.HorariosAdapter.indiceDeAlquiler(com.santiago.canchaapp.dominio.Alquiler)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (i == null) { alquileres.add(alquilerActualizado); }else { if ((alquilerActualizado.getEstado()) == (CANCELADA)) { alquileres.remove(((int) (i))); }else { alquileres.set(i, alquilerActualizado); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7014/buggy-version/app.src.main.java.com.santiago.canchaapp.app.adapter.HorariosAdapter.java", "BodyUseAPI": ["java.util.List<com.santiago.canchaapp.dominio.Alquiler>.set(java.lang.Integer,com.santiago.canchaapp.dominio.Alquiler)"], "Fixed commit": "80fc443013d50719c2fc6b9fc11fc3253dadea4c", "Url": "https://api.github.com/repos/UTN-FRBA-Mobile/CanchApp", "Date": "2017-10-21T17:32:20Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["princetronics.assignment2.ChatActivity.ChatAdapter.getCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (messageCount > 0) { getListView().setSelection(((chatAdapter.getCount()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8023/buggy-version/Assignment2.app.src.main.java.princetronics.assignment2.ChatActivity.java", "BodyUseAPI": [], "Fixed commit": "1eecc7e2ae6db9d75c977aab1983f3b81553f4dc", "Url": "https://api.github.com/repos/PrinceBalabis/DA401A", "Date": "2015-09-01T01:44:01Z"},
{"Line": "=>1520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.castToLong(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (longB == 0) { if (longA > 0) { return java.lang.Double.POSITIVE_INFINITY; }else if (longA < 0) { return java.lang.Double.NEGATIVE_INFINITY; }else { return java.lang.Double.NaN; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3231/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.java", "BodyUseAPI": [], "Fixed commit": "f8d29879310705ca0c9dd8da02c83c09a8792420", "Url": "https://api.github.com/repos/yakolee/druid", "Date": "2014-06-06T10:43:49Z"},
{"Line": "=>1422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a == (com.alibaba.druid.sql.visitor.SQLEvalVisitor.EVAL_VALUE_NULL)) || (b == (com.alibaba.druid.sql.visitor.SQLEvalVisitor.EVAL_VALUE_NULL))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3231/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.java", "BodyUseAPI": [], "Fixed commit": "f8d29879310705ca0c9dd8da02c83c09a8792420", "Url": "https://api.github.com/repos/yakolee/druid", "Date": "2014-06-06T10:43:49Z"},
{"Line": "=>1426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (a instanceof java.lang.String) { a = com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.castToNumber(((java.lang.String) (a))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3231/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.java", "BodyUseAPI": [], "Fixed commit": "f8d29879310705ca0c9dd8da02c83c09a8792420", "Url": "https://api.github.com/repos/yakolee/druid", "Date": "2014-06-06T10:43:49Z"},
{"Line": "=>1430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b instanceof java.lang.String) { b = com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.castToNumber(((java.lang.String) (b))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3231/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.java", "BodyUseAPI": [], "Fixed commit": "f8d29879310705ca0c9dd8da02c83c09a8792420", "Url": "https://api.github.com/repos/yakolee/druid", "Date": "2014-06-06T10:43:49Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (table.isEditing()) table.getCellEditor().stopCellEditing();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1227/buggy-version/com.genericworkflownodes.knime.base_plugin.src.com.genericworkflownodes.knime.generic_node.dialogs.param_dialog.list_editor.ListEditorDialog.java", "BodyUseAPI": ["javax.swing.JTable.getCellEditor()", "javax.swing.table.TableCellEditor.stopCellEditing()"], "Fixed commit": "b571ddab790789e1b7778e8f90ba523b903833a8", "Url": "https://api.github.com/repos/genericworkflownodes/GenericKnimeNodes", "Date": "2012-11-22T19:26:14Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sum >= 0) sum /= 2; else sum = (sum / 2) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4160/buggy-version/src.arf.SimpleArf.java", "BodyUseAPI": [], "Fixed commit": "6d3fa982dd0b2d352b25e983cef92a27cce0c9af", "Url": "https://api.github.com/repos/kborozdin/experimenting-with-arf", "Date": "2016-01-05T20:45:27Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emal.android.transport.spb.activity.LocationManager.getBestProvider(com.emal.android.transport.spb.activity.Criteria,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (bestProvider != null) { locationManager.requestLocationUpdates(bestProvider, 3000, 3, mylocationOverlay); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3832/buggy-version/src.main.java.com.emal.android.transport.spb.activity.MainActivity.java", "BodyUseAPI": ["com.emal.android.transport.spb.activity.LocationManager.requestLocationUpdates(java.lang.String,int,int,com.emal.android.transport.spb.activity.MyLocationOverlay)"], "Fixed commit": "ec88895fb2133bff22af64fb0c0c3ec0b646ad66", "Url": "https://api.github.com/repos/ofelbaum/spb-transport-app", "Date": "2013-05-12T21:10:05Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.musicroom.database.MainDBHandler.selectWithParameters(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (avg_rating.getJSONObject(0).has(\"avg_rating\")) { studio.put(\"avg_rating\", avg_rating.getJSONObject(0).getDouble(\"avg_rating\")); }else { studio.put(\"avg_rating\", \"no reviews\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1165/buggy-version/MusicRoom.src.com.musicroom.resources.StudiosResource.java", "BodyUseAPI": ["org.json.JSONArray.getJSONObject(int)", "org.json.JSONObject.put(java.lang.String,avg_rating.getJSONObject(0).getDouble(\"avg_rating\"))", "avg_rating.getJSONObject(0).getDouble(java.lang.String)"], "Fixed commit": "59c8ce22236fb8276de004e4cb5baf155b482554", "Url": "https://api.github.com/repos/eyaldar/WebDevelopment", "Date": "2014-12-24T20:10:27Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mPlaybackCompleted) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5503/buggy-version/src.com.wb.nextgenlibrary.fragment.ECCastPlayerFragment.java", "BodyUseAPI": [], "Fixed commit": "4d26ef2dd4760244265b09087023f982a26b822f", "Url": "https://api.github.com/repos/warnerbros/cpe-manifest-android-experience", "Date": "2017-02-13T22:21:45Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.restlet.engine.header.RecipientInfoReader.readToken()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((protocolToken == null) || (\"\".equals(protocolToken))) { throw new java.io.IOException(\"Unexpected empty protocol token for while reading recipient info header, please check the value.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1917/buggy-version/modules.org.restlet.src.org.restlet.engine.header.RecipientInfoReader.java", "BodyUseAPI": [], "Fixed commit": "a645adbb2a658edfa9b60f6ad5f2503a897e0d5c", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2012-12-21T12:27:03Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (additionalPackagingTypes == null) { this.additionalPackagingTypes = java.util.Collections.emptyMap(); }else { this.additionalPackagingTypes = additionalPackagingTypes; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6308/buggy-version/modules.xcode-maven-plugin.src.main.java.com.sap.prd.mobile.ios.mios.XCodePrepareBuildManager.java", "BodyUseAPI": [], "Fixed commit": "7e577139b8c7bfdfdc738f13f7d7498c4695c1ed", "Url": "https://api.github.com/repos/marcusholl/xcode-maven-plugin", "Date": "2013-05-06T08:35:19Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mShouldHandleLinks) { mTextView.setAutoLinkMask(Linkify.WEB_URLS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3470/buggy-version/hashtag-helper.src.main.java.com.volokh.danylo.hashtaghelper.HashTagHelper.java", "BodyUseAPI": [], "Fixed commit": "9568cd213968f37f8d1ab1cc78e006f5f7a9e5c9", "Url": "https://api.github.com/repos/KatherineDrozhak/HashTagHelper", "Date": "2017-06-26T12:11:46Z"},
{"Line": "=>691", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.next) != null) ^ ((v.next) != null)) { return false; }else if ((this.next) != null) { if (!(this.next.equals(v))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6618/buggy-version/core.src.com.retroMachines.util.lambda.Vertex.java", "BodyUseAPI": ["com.retroMachines.util.lambda.Vertex.equals(com.retroMachines.util.lambda.Vertex)"], "Fixed commit": "cd3dfb0c5428fa8aea405fbff745bddc4c0c48ae", "Url": "https://api.github.com/repos/Die-anonymen-PSEler/game", "Date": "2015-03-03T18:29:05Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (period == (org.jboss.logmanager.handlers.PeriodicRotatingFileHandler.Period.WEEK)) { calendar.set(java.util.Calendar.DAY_OF_WEEK, calendar.getFirstDayOfWeek()); }else { calendar.clear(java.util.Calendar.DAY_OF_WEEK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6370/buggy-version/src.main.java.org.jboss.logmanager.handlers.PeriodicRotatingFileHandler.java", "BodyUseAPI": [], "Fixed commit": "bbb22177d502816b1764fee9fbf4e5210b1c4fea", "Url": "https://api.github.com/repos/baranowb/jboss-logmanager", "Date": "2013-07-08T20:55:07Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parser.getCurrentToken()) == null) { parser.nextToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2199/buggy-version/slug-json.src.main.java.io.coronet.slug.json.JsonSlugModule.java", "BodyUseAPI": ["com.fasterxml.jackson.core.JsonParser.nextToken()"], "Fixed commit": "27cff429993669bb18d074f85adfd6cd9facfb5d", "Url": "https://api.github.com/repos/fernomac/slug", "Date": "2015-07-18T22:21:02Z"},
{"Line": "=>1598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mPersistenceManager.getStorageManager().getFile(trip.getDirectory(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(file.exists())) { if (co.smartreceipts.android.BuildConfig.DEBUG) { android.util.Log.e(co.smartreceipts.android.persistence.DatabaseHelper.TAG, (((\"Changing image name from: \" + (img.getName())) + \" to: \") + newName)); } img = mPersistenceManager.getStorageManager().rename(img, newName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6512/buggy-version/SmartReceiptsLibrary.src.co.smartreceipts.android.persistence.DatabaseHelper.java", "BodyUseAPI": [], "Fixed commit": "0c1ca9caa39966f8093e5b233daf7f3c1a264dbb", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2014-06-05T01:26:54Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(op.isNoOp())) { parts.add(op.toString().replaceAll(edu.illinois.library.cantaloupe.cache.FilesystemCache.FILENAME_CHARACTERS, \"_\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8172/buggy-version/src.main.java.edu.illinois.library.cantaloupe.cache.FilesystemCache.java", "BodyUseAPI": ["edu.illinois.library.cantaloupe.image.Operation.toString()", "op.toString().replaceAll(java.lang.String,java.lang.String)", "java.util.List<java.lang.String>.add(op.toString().replaceAll(edu.illinois.library.cantaloupe.cache.FilesystemCache.FILENAME_CHARACTERS, \"_\"))"], "Fixed commit": "c8da7bece95bd2dc0e964a9ff6f182d4a17e59e8", "Url": "https://api.github.com/repos/medusa-project/cantaloupe", "Date": "2015-12-04T14:40:38Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (rotation != null) { if (rotation.trim().equalsIgnoreCase(\"0\")) { }else if (rotation.trim().equalsIgnoreCase(\"90\")) { template.rotate90Deg(); }else if (rotation.trim().equalsIgnoreCase(\"180\")) { template.rotate90Deg(); template.rotate90Deg(); }else if (rotation.trim().equalsIgnoreCase(\"270\")) { template.rotate90Deg(); template.rotate90Deg(); template.rotate90Deg(); }else { return (\"Can't rotate on \" + rotation) + \" degrees, must be 90, 180 or 270\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8939/buggy-version/src.main.java.org.terasology.diversebuildings.DiverseBuildingsSystem.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.trim()", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.trim()", "java.lang.String.trim()", "java.lang.String.trim()", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "c5ba5c2246fe8de069f1c01a6e6a1f17c76c9a8b", "Url": "https://api.github.com/repos/sergey4y/DiverseBuildings", "Date": "2014-04-25T12:49:13Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Cooler.saveCooler()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (succesful) { this.setVisible(false); javax.swing.JOptionPane.showMessageDialog(null, \"Component Created\", \"Added\", javax.swing.JOptionPane.INFORMATION_MESSAGE); new AdminMenu().setVisible(true); }else { javax.swing.JOptionPane.showMessageDialog(null, \"Error, please try again\", \"Error\", javax.swing.JOptionPane.INFORMATION_MESSAGE); new AdminMenu().setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1716/buggy-version/src.AddCooler.java", "BodyUseAPI": [], "Fixed commit": "1a8512016bdeb191f1a40f1cee3141fab733ded1", "Url": "https://api.github.com/repos/lilliekhogg/ComPChecker", "Date": "2017-04-10T20:18:30Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.server.issue.index.IssueDoc.getNullableField(IssueNormalizer.IssueField.ATTRIBUTES.field())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (data == null) { return java.util.Collections.emptyMap(); }else { return org.sonar.api.utils.KeyValueFormat.parse(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3629/buggy-version/server.sonar-server.src.main.java.org.sonar.server.issue.index.IssueDoc.java", "BodyUseAPI": ["org.sonar.api.utils.KeyValueFormat.parse(java.lang.String)"], "Fixed commit": "9f2a2354c1c59a4381053b59680e28733c44cf14", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-10-14T09:24:49Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((scoreList.size()) >= 10) { scoreList.set(11, addedScore); java.util.Collections.sort(scoreList); scoreList.remove(11); updateFile(); printScores(); updateJlabels(); }else { scoreList.add(addedScore); java.util.Collections.sort(scoreList); updateFile(); printScores(); updateJlabels(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/9117/buggy-version/src.View.HighScoreView.java", "BodyUseAPI": ["java.util.ArrayList<Model.OverallHighScoreModel>.add(Model.OverallHighScoreModel)", "java.util.Collections.sort(java.util.ArrayList<Model.OverallHighScoreModel>)", "java.util.ArrayList<Model.OverallHighScoreModel>.remove(int)", "java.util.Collections.sort(java.util.ArrayList<Model.OverallHighScoreModel>)", "java.util.ArrayList<Model.OverallHighScoreModel>.set(int,Model.OverallHighScoreModel)"], "Fixed commit": "d70ca97b592ddc0f51824ed48cfb65002a84aea3", "Url": "https://api.github.com/repos/quietgiant/sum-fun", "Date": "2017-04-16T16:55:20Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((selectedRecored.isEmpty()) || (selectedRecored == null)) { resultList = com.axelor.db.JPA.em().createQuery((((query + \") FROM \") + object) + \" m\")).getResultList(); }else { resultList = com.axelor.db.JPA.em().createQuery((((((query + \") FROM \") + object) + \" m where m.id in(\") + selectedRecored) + \")\")).getResultList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5591/buggy-version/axelor-base.src.main.java.com.axelor.apps.base.web.AppBaseController.java", "BodyUseAPI": ["com.axelor.db.JPA.em().createQuery((((((query + \") FROM \") + object) + \" m where m.id in(\") + selectedRecored) + \")\")).getResultList()", "com.axelor.db.JPA.em().createQuery(java.lang.String)"], "Fixed commit": "c13aa0a7ade79be888c3dbec5c4d96515204f82e", "Url": "https://api.github.com/repos/adp-axelor/axelor-business-suite", "Date": "2017-11-13T05:39:49Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"undefined\".equalsIgnoreCase(tag.getValue())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6203/buggy-version/src.main.java.io.jawg.osmcontributor.rest.mappers.PoiTagMapper.java", "BodyUseAPI": [], "Fixed commit": "64cb334af29a2619fe1dd37d4d4da38430caa804", "Url": "https://api.github.com/repos/Capaldijo/osm-contributor", "Date": "2017-07-18T16:57:35Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((imp.getBitDepth()) == 16) && (imp.getCalibration().isSigned16Bit())) { mn -= 32768.0; mx -= 32768.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5515/buggy-version/core.legacy.src.main.java.imagej.legacy.translate.ColorTableHarmonizer.java", "BodyUseAPI": [], "Fixed commit": "649109dcfb51a0b8688eb3908a1fcdd6e34c74c9", "Url": "https://api.github.com/repos/imagej/imagej", "Date": "2012-06-21T17:13:30Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentRentingStatus) { if (((fragment_room_edit_et_deposit) != null) && (core.util.Utils.isEmpty(fragment_room_edit_et_deposit.getText().toString()))) { showAlertDialog(getActiveActivity(), (-1), (-1), (-1), getString(R.string.application_alert_dialog_title), getString(R.string.room_insert_deposit_error), getString(R.string.common_ok), null, null); return false; } int data_deposit = java.lang.Integer.parseInt(fragment_room_edit_et_deposit.getText().toString().trim()); try { int min_deposit = 0; if (data_deposit < (min_deposit = setting.getDeposit())) { java.lang.String deposit_text = java.lang.String.format(getString(R.string.room_insert_deposit_under_warning), com.example.houserental.function.HouseRentalUtils.toThousandVND(min_deposit)); android.widget.Toast.makeText(getActiveActivity(), deposit_text, Toast.LENGTH_LONG).show(); } } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/9047/buggy-version/app.src.main.java.com.example.houserental.function.room.RoomEditScreen.java", "BodyUseAPI": [], "Fixed commit": "35e3b37f223b72213a6fcb9679f52ada6dd8cf42", "Url": "https://api.github.com/repos/leductuangh/houserental", "Date": "2016-05-27T15:49:33Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTutorial)) { ui.setStatus(((((airplane.name) + \" and \") + (other.name)) + \" are too close!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6654/buggy-version/core.src.com.icarus.project.PlayScreen.java", "BodyUseAPI": [], "Fixed commit": "c9307473d00f917ffbd380926c15fa6ee0b27527", "Url": "https://api.github.com/repos/project-icarus/icarus-atc", "Date": "2017-06-15T00:58:56Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.etech.benchmark.util.StringUtil.isEmpty(id)) { params.put(\"id\", com.etech.benchmark.util.StringUtil.createUUID()); reportService.insert(params, tableName); result = new com.etech.benchmark.model.ResultEntityHashMapImpl(com.etech.benchmark.model.ResultEntity.KW_STATUS_SUCCESS, \"\u65b0\u589e\u6210\u529f\"); }else { reportService.updateExcelData(params, tableName); result = new com.etech.benchmark.model.ResultEntityHashMapImpl(com.etech.benchmark.model.ResultEntity.KW_STATUS_SUCCESS, \"\u66f4\u65b0\u6210\u529f\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6690/buggy-version/benchmark.src.main.java.com.etech.benchmark.backadmin.info.InfoController.java", "BodyUseAPI": [], "Fixed commit": "9e35e34bbbebf2dfeb7c70f8df60df394ac78b75", "Url": "https://api.github.com/repos/PATHonan778/etechauto", "Date": "2016-04-12T09:39:31Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ListIterator<gr.uom.java.ast.ClassObject>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(classObject.isInterface())) { gr.uom.java.ast.util.ProjectUtils.loadInheritanceDetails(classObject); gr.uom.java.ast.util.ProjectUtils.extractPackageLevelDetails(classObject); (gr.uom.java.ast.util.ProjectUtils.totNumberOfClasses)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5081/buggy-version/src.gr.uom.java.ast.util.ProjectUtils.java", "BodyUseAPI": ["gr.uom.java.ast.util.ProjectUtils.loadInheritanceDetails(gr.uom.java.ast.ClassObject)", "gr.uom.java.ast.util.ProjectUtils.extractPackageLevelDetails(gr.uom.java.ast.ClassObject)"], "Fixed commit": "33e4ba28b38e9c0f46f911088c2853c57f47665a", "Url": "https://api.github.com/repos/kaushiksivaprasad/SOEN6611", "Date": "2015-06-05T02:52:13Z"},
{"Line": "=>1071", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alarmDialog.isShowing()) { cancelAlarm(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2793/buggy-version/app.src.main.java.com.queensu.apsc_100_mod_3_group_h.proximityband.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "327ead842de9672f697dd998d35cfdbc268109de", "Url": "https://api.github.com/repos/vacer25/ProximityBand-Android", "Date": "2017-03-30T22:21:21Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((iso.length()) >= 22) { iso = ((iso.substring(0, 22)) + \"GMT\") + (iso.substring(22)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5423/buggy-version/modeshape-schematic.src.main.java.org.infinispan.schematic.internal.document.DefaultDocumentValueFactory.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "b69cb2ba5c679a51b503f99efcb377605e76191b", "Url": "https://api.github.com/repos/ModeShape/modeshape", "Date": "2014-07-14T12:51:22Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (myval.equals(enumerable.toString())) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5428/buggy-version/jax-rs-bean-validation.src.main.java.org.coffeeshop.VerifyValueValidator.java", "BodyUseAPI": [], "Fixed commit": "6ec693f8733fc69f63b17495aecbeadd1dd283f2", "Url": "https://api.github.com/repos/bhakti-mehta/samples", "Date": "2013-10-31T05:20:45Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((maxDistance.getText().length()) == 0) || (maxDistance.getText().equals(\"\")))) { getFields(); getDialog().dismiss(); }else { android.widget.Toast.makeText(getActivity(), \"Please input a value for Max Distance\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7606/buggy-version/app.src.main.java.com.example.andrew.neighborlabour.UI.jobListings.FiltersDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "e22f604de79ce0e7564ed399cd99b38236e35182", "Url": "https://api.github.com/repos/NeighborLabor/android", "Date": "2017-03-17T12:58:37Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((preProcessor) != null) { preProcessor.preProcess(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7133/buggy-version/deeplearning4j-core.src.main.java.org.deeplearning4j.datasets.iterator.BaseDatasetIterator.java", "BodyUseAPI": [], "Fixed commit": "1f6094a75bea33d994371bbccb0b4c31400ada32", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2015-11-12T22:37:56Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (typeMethodPos >= 0) { field = field.substring(0, typeMethodPos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5379/buggy-version/admin.broadleaf-open-admin-platform.src.main.java.org.broadleafcommerce.openadmin.web.rulebuilder.statement.PhraseTranslator.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "ef17fb6452ef2b008ef4143c32f431f96125e831", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2014-01-10T21:50:02Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (column == 5) { switch (t) { case DECK : return deck.getMap().get(mc); case SIDE : return deck.getMapSideBoard().get(mc); default : return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/9157/buggy-version/src.org.magic.gui.models.DeckModel.java", "BodyUseAPI": [], "Fixed commit": "a9baee543f47b499f56f56dae76f131eaa7dfcaf", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2015-12-23T11:21:08Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doc.select(\"ol[class=\\\"item-section\\\"]\").first()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((list.children().size()) == 1) { throw new org.schabi.newpipe.extractor.services.youtube.NothingFoundException((\"Did you mean: \" + (el.select(\"a\").first().text()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1344/buggy-version/app.src.main.java.org.schabi.newpipe.extractor.services.youtube.YoutubeSearchEngine.java", "BodyUseAPI": [], "Fixed commit": "f90a1ede70928c4c9b8ad418eea137a27deee606", "Url": "https://api.github.com/repos/TeamNewPipe/NewPipe", "Date": "2016-02-29T20:06:00Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (appInfo != null) { java.lang.Object useStagingObject = appInfo.metaData.get(propertyName); if (useStagingObject instanceof java.lang.Boolean) { return ((java.lang.Boolean) (useStagingObject)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/869/buggy-version/connect.src.com.telenor.connect.ConnectSdk.java", "BodyUseAPI": ["appInfo.metaData.get(java.lang.String)"], "Fixed commit": "667fa5e2150e112714e85cfc1f5f057b78e65822", "Url": "https://api.github.com/repos/atanasdb/connect-android-sdk", "Date": "2017-05-02T07:33:11Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((score) == 0) { score += 75; }else { score += 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8613/buggy-version/src.cmsc325.finalProject.NinjaHunter.java", "BodyUseAPI": [], "Fixed commit": "bb54f52943aa6f0b9e4fa157639fb58f4bc06071", "Url": "https://api.github.com/repos/kimlercorey/ninjahunter", "Date": "2013-12-11T00:29:42Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((score) < 0) { score = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8613/buggy-version/src.cmsc325.finalProject.NinjaHunter.java", "BodyUseAPI": [], "Fixed commit": "bb54f52943aa6f0b9e4fa157639fb58f4bc06071", "Url": "https://api.github.com/repos/kimlercorey/ninjahunter", "Date": "2013-12-11T00:29:42Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((launchId == null) || (launchId.isEmpty())) { java.lang.System.out.println(\"LaunchID is invalid\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7405/buggy-version/gt-fhir-webapp.src.main.java.edu.gatech.i3l.fhir.smart.servlet.SmartServices.java", "BodyUseAPI": [], "Fixed commit": "c7851049919760d95cb74f4b63b384c9658eda5a", "Url": "https://api.github.com/repos/gt-health/GT-FHIR", "Date": "2016-08-29T05:46:15Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((endTime) != null) && (!(endTime.isEmpty()))) { timeString = endTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7405/buggy-version/gt-fhir-entities.src.main.java.edu.gatech.i3l.fhir.dstu2.entities.VisitOccurrence.java", "BodyUseAPI": [], "Fixed commit": "c7851049919760d95cb74f4b63b384c9658eda5a", "Url": "https://api.github.com/repos/gt-health/GT-FHIR", "Date": "2016-08-29T05:46:15Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((startTime) != null) && (!(startTime.isEmpty()))) { timeString = startTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7405/buggy-version/gt-fhir-entities.src.main.java.edu.gatech.i3l.fhir.dstu2.entities.VisitOccurrence.java", "BodyUseAPI": [], "Fixed commit": "c7851049919760d95cb74f4b63b384c9658eda5a", "Url": "https://api.github.com/repos/gt-health/GT-FHIR", "Date": "2016-08-29T05:46:15Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (o instanceof java.util.List) { l = ((java.util.List) (o)); if ((l.get(0)) instanceof org.apache.solr.client.solrj.io.Tuple) { tupleIterator = l.iterator(); }else { throw new java.io.IOException((\"Get was not passed a list of tuples:\" + (o.getClass()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3513/buggy-version/solr.solrj.src.java.org.apache.solr.client.solrj.io.stream.GetStream.java", "BodyUseAPI": ["java.lang.Object.getClass()"], "Fixed commit": "e4d4e582a0049de34990fcff3df5fb220f14ee4b", "Url": "https://api.github.com/repos/dweiss/lucene-solr", "Date": "2017-04-27T20:40:24Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5728/buggy-version/MuseumGuide.app.src.main.java.com.dcpdr.museumguide.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "a7a3a400774692de82d05b6fc8b0390c6db19d4d", "Url": "https://api.github.com/repos/cstdvd/MuseumGuide", "Date": "2015-06-22T15:52:01Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.vimarsha.mediator.Mediator.convertRawFileToArff()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (res == 100) { this.showInfoDialog(\"File Conversion Successful!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7282/buggy-version/src.main.java.org.vimarsha.mediator.UIHandler.java", "BodyUseAPI": [], "Fixed commit": "ebaa6953cf20324c10ef89fdf7a98fb2e35fd4b3", "Url": "https://api.github.com/repos/sunimalr/vimarsha", "Date": "2013-11-28T16:43:35Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((manager.getRightOnCmi()) != null) { commissionController.setSelectedCommissions(new java.util.ArrayList<org.esupportail.opi.domain.beans.references.commission.Commission>(manager.getRightOnCmi())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8418/buggy-version/esup-opi-web-jsf-servlet.src.main.java.org.esupportail.opi.web.controllers.user.GestionnaireController.java", "BodyUseAPI": ["org.esupportail.opi.domain.beans.user.Gestionnaire.getRightOnCmi()", "org.esupportail.opi.web.controllers.references.CommissionController.setSelectedCommissions(java.util.ArrayList<org.esupportail.opi.domain.beans.references.commission.Commission>)"], "Fixed commit": "4e4752d9d8ba560f9218c1edd2f0614c455e3ceb", "Url": "https://api.github.com/repos/EsupPortail/esup-opi", "Date": "2013-01-22T12:37:22Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (cfg != null) { final java.util.List<java.lang.String> serverList = cfg.field(\"servers\"); if ((serverList != null) && (!(serverList.isEmpty()))) { master = serverList.get(0); if ((com.orientechnologies.orient.server.distributed.ODistributedConfiguration.NEW_NODE_TAG.equals(master)) && ((serverList.size()) > 1)) master = serverList.get(1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1154/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.ODistributedConfiguration.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String)"], "Fixed commit": "1768a380746cc5dc047d82e7be855ef228a2264a", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-02-08T12:14:15Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (clusters == null) throw new com.orientechnologies.orient.core.exception.OConfigurationException(\"Cannot find 'clusters' in distributed database configuration\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1154/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.ODistributedConfiguration.java", "BodyUseAPI": [], "Fixed commit": "1768a380746cc5dc047d82e7be855ef228a2264a", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-02-08T12:14:15Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (keepcalm.mods.bukkit.BukkitContainer.DEBUG) { java.lang.System.out.println(((((((\"Creating a new BukkitChunk - forge chunk is in dimension \" + (getHandle().worldObj.getWorldInfo().getDimension())) + \" at x,z \") + (getHandle().xPosition)) + \",\") + (getHandle().zPosition)) + \".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2624/buggy-version/src.keepcalm.mods.bukkit.bukkitAPI.BukkitChunk.java", "BodyUseAPI": [], "Fixed commit": "e479562c27d722773da225d76b39b07226c19663", "Url": "https://api.github.com/repos/keepcalm/BukkitForge", "Date": "2013-01-07T04:55:23Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((uuids.length()) > 2) { final java.lang.String query = (\"UPDATE cp_players SET playtime =playtime+1 WHERE uuid IN (\" + (uuids.delete(((uuids.length()) - 2), uuids.length()).toString())) + \");\"; this.module.getPlugin().getScheduler().registerQuery(query); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1161/buggy-version/src.craftoplugin.modules.playtime.PlaytimeTask.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.lang.StringBuilder.length()", "java.lang.StringBuilder.length()", "java.lang.StringBuilder.delete(int,int)"], "Fixed commit": "6d0cbf09e177ece9f749c0eba3dd6de319864cc1", "Url": "https://api.github.com/repos/Craftolution/CraftoPlugin", "Date": "2015-03-21T16:23:56Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isGameOver()) { mAnswersCountListener.gameIsOver(); }else { update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1941/buggy-version/app.src.main.java.com.dark.webprog26.worktastengine.engine.Quiz.java", "BodyUseAPI": [], "Fixed commit": "89bd0f620dc928378061e45ff6a621b2d9401db9", "Url": "https://api.github.com/repos/webprog26/QuizEngine", "Date": "2017-03-10T13:47:06Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((iqSource) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3464/buggy-version/src.gui.FFTPanel.java", "BodyUseAPI": [], "Fixed commit": "d54d6a78362da65648bc044200bae49b002d63d6", "Url": "https://api.github.com/repos/ac2cz/FoxTelem", "Date": "2016-05-15T18:56:15Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((lastTag0 != null) && (currentTag0 != null)) testClosingTag(buffer, currentTag0, lastTag0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8626/buggy-version/grobid-core.src.main.java.org.grobid.core.engines.CitationParser.java", "BodyUseAPI": ["org.grobid.core.engines.CitationParser.testClosingTag(java.lang.StringBuilder,java.lang.String,java.lang.String)"], "Fixed commit": "417d1a64443b7911963e9639eabea8939bc32e3f", "Url": "https://api.github.com/repos/kermitt2/grobid", "Date": "2013-09-05T00:55:15Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(<nulltype>,java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (a1 == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8270/buggy-version/src.util.HighScoreUtility.java", "BodyUseAPI": [], "Fixed commit": "bf1f440789d241143f6b96fe57f8954c819302f5", "Url": "https://api.github.com/repos/samoooop/ProgMeth-project", "Date": "2015-12-14T20:17:38Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (level == (com.github.anba.es6draft.runtime.types.IntegrityLevel.NonExtensible)) { booleanTrapResult = !booleanTrapResult; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/66/buggy-version/src.main.java.com.github.anba.es6draft.runtime.types.builtins.ExoticProxy.java", "BodyUseAPI": [], "Fixed commit": "c5401d295e909a220b75805b6fc2088e763ced4c", "Url": "https://api.github.com/repos/anba/es6draft", "Date": "2013-05-27T18:08:40Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.anba.es6draft.runtime.types.builtins.ExoticProxy.__getOwnProperty(com.github.anba.es6draft.runtime.ExecutionContext,com.github.anba.es6draft.runtime.types.ScriptObject,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (targetDesc != null) { targetDesc = targetDesc.clone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/66/buggy-version/src.main.java.com.github.anba.es6draft.runtime.types.builtins.ExoticProxy.java", "BodyUseAPI": ["com.github.anba.es6draft.runtime.types.Property.clone()"], "Fixed commit": "c5401d295e909a220b75805b6fc2088e763ced4c", "Url": "https://api.github.com/repos/anba/es6draft", "Date": "2013-05-27T18:08:40Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.anba.es6draft.runtime.types.builtins.ExoticProxy.__getOwnProperty(com.github.anba.es6draft.runtime.ExecutionContext,com.github.anba.es6draft.runtime.types.ScriptObject,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (targetDesc != null) { targetDesc = targetDesc.clone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/66/buggy-version/src.main.java.com.github.anba.es6draft.runtime.types.builtins.ExoticProxy.java", "BodyUseAPI": ["com.github.anba.es6draft.runtime.types.Property.clone()"], "Fixed commit": "c5401d295e909a220b75805b6fc2088e763ced4c", "Url": "https://api.github.com/repos/anba/es6draft", "Date": "2013-05-27T18:08:40Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(robotGame.model.Model.solver.validatePosition(removed))) { this.solver.setPosition(null); this.ib.setHeroPoint(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7945/buggy-version/model.Model.java", "BodyUseAPI": [], "Fixed commit": "2bd17e4511aff6d01dbcc9676432f86e6848797c", "Url": "https://api.github.com/repos/HJBGH/robotGame", "Date": "2017-11-18T10:00:00Z"},
{"Line": "=>588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (info != null) { flags = info.getFlags(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4417/buggy-version/com.ibm.wala.dalvik.src.com.ibm.wala.dalvik.ipa.callgraph.androidModel.AndroidModel.java", "BodyUseAPI": ["IntentStarters.StartInfo.getFlags()"], "Fixed commit": "fd2d4aefbfc0a7a602db285c29344b92903736fd", "Url": "https://api.github.com/repos/wala/WALA", "Date": "2016-02-20T15:22:33Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (method == null) return com.ibm.wala.dalvik.util.AndroidComponent.UNKNOWN;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4417/buggy-version/com.ibm.wala.dalvik.src.com.ibm.wala.dalvik.util.AndroidComponent.java", "BodyUseAPI": [], "Fixed commit": "fd2d4aefbfc0a7a602db285c29344b92903736fd", "Url": "https://api.github.com/repos/wala/WALA", "Date": "2016-02-20T15:22:33Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ibm.wala.classLoader.IClass.getMethod(ifMethod.getSelector())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (method != null) { if (this.flags.contains(com.ibm.wala.dalvik.util.AndroidEntryPointLocator.LocatorFlags.WITH_SUPER)) { final com.ibm.wala.dalvik.ipa.callgraph.impl.AndroidEntryPoint ep = makeEntryPointForHeuristic(method, cha); if ((eps.contains(ep)) && (!(method.isStatic()))) { for (final com.ibm.wala.dalvik.ipa.callgraph.impl.AndroidEntryPoint eps_ep : eps) { if (eps_ep.equals(ep)) { final com.ibm.wala.types.TypeReference[] oldTypes = eps_ep.getParameterTypes(0); final com.ibm.wala.types.TypeReference[] newTypes = new com.ibm.wala.types.TypeReference[(oldTypes.length) + 1]; java.lang.System.arraycopy(oldTypes, 0, newTypes, 0, oldTypes.length); newTypes[oldTypes.length] = appClass.getReference(); eps_ep.setParameterTypes(0, newTypes); com.ibm.wala.dalvik.util.AndroidEntryPointLocator.logger.debug(\"New This-Types for {} are {}\", method.getSelector(), java.util.Arrays.toString(newTypes)); } } }else { if (!(method.isStatic())) { ep.setParameterTypes(0, new com.ibm.wala.types.TypeReference[]{ appClass.getReference() }); } eps.add(ep); com.ibm.wala.dalvik.util.AndroidEntryPointLocator.logger.debug(\"Heuristic 2b: selecting from super {}\", method); } }else { com.ibm.wala.dalvik.util.AndroidEntryPointLocator.logger.debug(\"Heuristic 2b: Skipping {}\", method); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4417/buggy-version/com.ibm.wala.dalvik.src.com.ibm.wala.dalvik.util.AndroidEntryPointLocator.java", "BodyUseAPI": ["com.ibm.wala.dalvik.util.AndroidEntryPointLocator.makeEntryPointForHeuristic(com.ibm.wala.classLoader.IMethod,com.ibm.wala.ipa.cha.IClassHierarchy)", "com.ibm.wala.classLoader.IMethod.getSelector()", "com.ibm.wala.classLoader.IMethod.isStatic()", "org.slf4j.Logger.debug(java.lang.String,method.getSelector(),java.lang.String)", "com.ibm.wala.classLoader.IMethod.isStatic()", "org.slf4j.Logger.debug(java.lang.String,com.ibm.wala.classLoader.IMethod)", "org.slf4j.Logger.debug(java.lang.String,com.ibm.wala.classLoader.IMethod)"], "Fixed commit": "fd2d4aefbfc0a7a602db285c29344b92903736fd", "Url": "https://api.github.com/repos/wala/WALA", "Date": "2016-02-20T15:22:33Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.parser.JSONParser.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (json.containsKey(\"comment_id\")) { return ((((\"Recommended #\" + postid) + \"/\") + (json.get(\"comment_id\"))) + \" . http://point.im/\") + postid; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8032/buggy-version/src.main.java.ru.bit1.pointim.bot.api.PointApi.java", "BodyUseAPI": ["java.util.Map.get(java.lang.String)"], "Fixed commit": "f1b59bb5ee649e2b7a9b931da810604604b5bf8d", "Url": "https://api.github.com/repos/deemess/pointim_bot", "Date": "2015-11-23T10:57:02Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (value == null) { value = java.lang.Long.valueOf((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7976/buggy-version/framework2.src.framework.cache.Redis.java", "BodyUseAPI": [], "Fixed commit": "97c211f4a9d39466c1c68a06c28540a986181fb8", "Url": "https://api.github.com/repos/joonolee/framework2", "Date": "2014-02-01T18:23:23Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (value == null) { value = java.lang.Long.valueOf((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7976/buggy-version/framework2.src.framework.cache.Redis.java", "BodyUseAPI": [], "Fixed commit": "97c211f4a9d39466c1c68a06c28540a986181fb8", "Url": "https://api.github.com/repos/joonolee/framework2", "Date": "2014-02-01T18:23:23Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.watabou.utils.Random.Float()) > (java.lang.Math.pow(0.7, bonus))) { if (enemy.isAlive()) com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff.affect(enemy, com.shatteredpixel.shatteredpixeldungeon.actors.buffs.PinCushion.class).stick(this); else Dungeon.level.drop(this, enemy.pos).sprite.drop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5303/buggy-version/src.com.shatteredpixel.shatteredpixeldungeon.items.weapon.missiles.MissileWeapon.java", "BodyUseAPI": [], "Fixed commit": "bc463a0a7c17014e8c72173706bea07fb054d990", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2016-03-07T05:02:54Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(eth0.equals(\"\"))) { result = eth0; }else { result = wlan0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6414/buggy-version/lod4wfs.src.main.java.de.ifgi.lod4wfs.core.Utils.java", "BodyUseAPI": [], "Fixed commit": "697048d465a6f74273cae5532748491998a218d0", "Url": "https://api.github.com/repos/jimjonesbr/lod4wfs", "Date": "2015-01-07T15:50:48Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (xml != null) { filter.setPriceMax(xml.getPriceMax()); filter.setPriceMin(xml.getPriceMin()); if ((xml.getKeywords()) != null) { filter.setKeywords(new java.util.ArrayList<java.lang.String>(java.util.Arrays.asList(xml.getKeywords().split(\" \")))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8703/buggy-version/eSock-WS.src.main.java.ro.eSock.ws.util.ConverterUtils.java", "BodyUseAPI": ["ro.esock.model.filter.SearchProductFilter.setPriceMax(xml.getPriceMax())", "ro.esock.ws.soap.product.SearchProductFilterXml.getPriceMin()", "java.util.Arrays.asList(xml.getKeywords().split(\" \"))", "ro.esock.ws.soap.product.SearchProductFilterXml.getPriceMax()", "ro.esock.model.filter.SearchProductFilter.setKeywords(java.util.ArrayList<java.lang.String>)", "ro.esock.ws.soap.product.SearchProductFilterXml.getKeywords()", "ro.esock.ws.soap.product.SearchProductFilterXml.getKeywords()", "xml.getKeywords().split(java.lang.String)", "ro.esock.model.filter.SearchProductFilter.setPriceMin(xml.getPriceMin())"], "Fixed commit": "8e7ff0c2679cb49296d784d797dcfb27ef34703e", "Url": "https://api.github.com/repos/IonutMarius/eSock", "Date": "2016-01-12T14:00:47Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((ingredients[0]) != null) { java.lang.System.out.println(((((((java.lang.Thread.currentThread().getName()) + \" - Used ingredients: \") + (ingredients[0])) + \" and \") + (ingredients[1])) + \"to make a sandwich and eat it.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4093/buggy-version/Assignment_02.src.sandwich.Chef.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "beeb174d8e5978966a7e36f1a9d1e844d197b975", "Url": "https://api.github.com/repos/sprinklej/SYSC3303", "Date": "2016-02-02T18:36:55Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (menu.getItem(index).hasSubMenu()) { com.cube.storm.language.lib.helper.LocalisationHelper.localise(((android.view.Menu) (menu.getItem(index).getSubMenu())), mappings); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8810/buggy-version/library.src.main.java.com.cube.storm.language.lib.helper.LocalisationHelper.java", "BodyUseAPI": ["com.cube.storm.language.lib.helper.LocalisationHelper.localise(((android.view.Menu) (menu.getItem(index).getSubMenu())),com.cube.storm.language.lib.processor.Mapping[])", "menu.getItem(index).getSubMenu()", "android.view.Menu.getItem(int)"], "Fixed commit": "965e231925a73239acb8150c1833d58b7fd6bf14", "Url": "https://api.github.com/repos/3sidedcube/Android-LightningLanguage", "Date": "2016-09-02T15:08:00Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentLog) != null) { this.currentLog.sync(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8440/buggy-version/src.main.java.com.github.zk1931.jzab.RollingLog.java", "BodyUseAPI": [], "Fixed commit": "10e65f36eaa4347e9ee2d6d6100bffde11ba2220", "Url": "https://api.github.com/repos/EasonLiao/jzab", "Date": "2014-11-15T22:49:50Z"},
{"Line": "=>1587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (min < 1) { throw new org.dasein.cloud.CloudException(org.dasein.cloud.CloudErrorType.CAPACITY, 413, \"Over Limit\", (ob.has(\"message\") ? ob.getString(\"message\") : \"Over Limit\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4123/buggy-version/src.main.java.org.dasein.cloud.openstack.nova.os.AbstractMethod.java", "BodyUseAPI": [], "Fixed commit": "1472f5f6990601125c4f84dfbe19c1cce2836a08", "Url": "https://api.github.com/repos/daniellemayne/dasein-cloud-openstack", "Date": "2013-11-12T19:09:48Z"},
{"Line": "=>1802", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (min < 1) { throw new org.dasein.cloud.CloudException(org.dasein.cloud.CloudErrorType.CAPACITY, 413, \"Over Limit\", (ob.has(\"message\") ? ob.getString(\"message\") : \"Over Limit\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4123/buggy-version/src.main.java.org.dasein.cloud.openstack.nova.os.AbstractMethod.java", "BodyUseAPI": [], "Fixed commit": "1472f5f6990601125c4f84dfbe19c1cce2836a08", "Url": "https://api.github.com/repos/daniellemayne/dasein-cloud-openstack", "Date": "2013-11-12T19:09:48Z"},
{"Line": "=>5525", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(APIConstants.API_TENANT_CONF_DEFAULT_ROLES)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value != null) { defaultRolesConfigJSON = ((org.json.simple.JSONObject) (value)); }else { if (org.wso2.carbon.apimgt.impl.utils.APIUtil.log.isDebugEnabled()) { org.wso2.carbon.apimgt.impl.utils.APIUtil.log.debug((((org.wso2.carbon.apimgt.impl.APIConstants.API_TENANT_CONF_DEFAULT_ROLES) + \" config does not exist for tenant \") + tenantDomain)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/798/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.utils.APIUtil.java", "BodyUseAPI": [], "Fixed commit": "1499fe737cb4897fc55fa6717a6c96efba9eeb75", "Url": "https://api.github.com/repos/malinthaprasan/carbon-apimgt", "Date": "2016-12-19T09:58:15Z"},
{"Line": "=>3134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.apimgt.impl.utils.APIUtil.getTenantDefaultRoles(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (defaultRoles != null) { org.json.simple.JSONObject subscriberRoleConfig = ((org.json.simple.JSONObject) (defaultRoles.get(APIConstants.API_TENANT_CONF_DEFAULT_ROLES_SUBSCRIBER_ROLE))); isSubscriberRoleCreationEnabled = org.wso2.carbon.apimgt.impl.utils.APIUtil.isRoleCreationEnabled(subscriberRoleConfig); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/798/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.utils.APIUtil.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(APIConstants.API_TENANT_CONF_DEFAULT_ROLES_SUBSCRIBER_ROLE)"], "Fixed commit": "1499fe737cb4897fc55fa6717a6c96efba9eeb75", "Url": "https://api.github.com/repos/malinthaprasan/carbon-apimgt", "Date": "2016-12-19T09:58:15Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fixedItems) == null) return java.util.Collections.EMPTY_LIST;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4847/buggy-version/src.main.java.org.lisoft.lsml.model.chassi.Component.java", "BodyUseAPI": [], "Fixed commit": "bf2fcb37a311b64e8e57cef06d76630d93c06943", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2016-04-10T16:00:33Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allowedLocations) == null) return java.util.Collections.EMPTY_LIST;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4847/buggy-version/src.main.java.org.lisoft.lsml.model.item.Item.java", "BodyUseAPI": [], "Fixed commit": "bf2fcb37a311b64e8e57cef06d76630d93c06943", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2016-04-10T16:00:33Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.netty.buffer.ByteBuf.readShortLE()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((input.readableBytes()) < (length - 2)) { input.readerIndex(((input.readerIndex()) - 2)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4086/buggy-version/src.main.java.net.fireimp.server.network.handlers.PacketDecoder.java", "BodyUseAPI": ["io.netty.buffer.ByteBuf.readerIndex(((input.readerIndex()) - 2))", "io.netty.buffer.ByteBuf.readerIndex()"], "Fixed commit": "18abdaf7f2ade19bc78fb8a682cfcab29779655f", "Url": "https://api.github.com/repos/FireIMP-Terraria/FireIMP", "Date": "2016-03-18T13:20:30Z"},
{"Line": "=>1785", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (text.contains(((\"void basic_cond\" + i) + \"(\"))) idx = text.indexOf(((\"void basic_cond\" + i) + \"(\")); else idx = text.indexOf(((\"void cond\" + i) + \"(\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7623/buggy-version/src.NaturalSynthesis.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "a2f5f930bd9c098475039274dcfd9ecad03f0f3a", "Url": "https://api.github.com/repos/xkqiu/ImpSynt", "Date": "2017-04-06T01:32:00Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (notiCntDTO != null) { notiCntDTO.setUserDTO(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3073/buggy-version/backend.src.main.java.io.codechobostudy.notifications.service.NotiService.java", "BodyUseAPI": ["io.codechobostudy.notifications.dto.NotiCntDTO.setUserDTO(<nulltype>)"], "Fixed commit": "76b4715ea53e83fd896fb11585d803d79a19f2d9", "Url": "https://api.github.com/repos/codechobostudy/code-chobo-study", "Date": "2015-05-25T06:49:23Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.JsonParser.parse(com.google.gson.stream.JsonReader)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (jsonElement.isJsonNull()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6711/buggy-version/mule-extensions-api-persistence.src.main.java.org.mule.runtime.extension.internal.persistence.metadata.MetadataKeyTypeAdapter.java", "BodyUseAPI": [], "Fixed commit": "86289ea5f62d1e55a535dd0016f0ce794e075760", "Url": "https://api.github.com/repos/mulesoft/mule-extensions-api", "Date": "2017-03-09T20:03:07Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getHand()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3407/buggy-version/src.main.java.tw.mics.spigot.plugin.cupboard.listener.CupboardBlockProtectListener.java", "BodyUseAPI": [], "Fixed commit": "1ec8167206f8229cd5273c314b9d1ff31192a213", "Url": "https://api.github.com/repos/MkIIServer/cupboard", "Date": "2017-01-14T07:53:41Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (versionString.startsWith(\"1.\")) { versionString = versionString.substring(2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2764/buggy-version/core.src.main.java.io.undertow.server.DirectByteBufferDeallocator.java", "BodyUseAPI": [], "Fixed commit": "c19a6c4137741c852fe65fc6b60dfb774d850c2c", "Url": "https://api.github.com/repos/frapex/undertow", "Date": "2017-10-12T14:31:29Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.ca.emsa.pulse.broker.dao.QueryDAO.getQueryLocationById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((locationMap.getStatus()) != null) && ((locationMap.getStatus()) == (gov.ca.emsa.pulse.common.domain.QueryLocationStatus.Closed))) { return query; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7771/buggy-version/pulse.broker.src.main.java.gov.ca.emsa.pulse.broker.manager.impl.QueryManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "e73586105bfb843c97631dfaa2951d642ca25c1d", "Url": "https://api.github.com/repos/pulse-admin/api", "Date": "2017-02-13T22:58:40Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectionRequest) == null) selectionRequest = urlManager.getSearchRequest(UrlManager.SearchTemplate.urlSearch, null, null, false, null, null, null, null, null, null, null, robotsTxtStatus, fetchStatus, null, parserStatus, indexStatus, null, null, null, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2419/buggy-version/src.main.java.com.jaeksoft.searchlib.scheduler.task.TaskUrlManagerAction.java", "BodyUseAPI": [], "Fixed commit": "2dc7a61ffec6fe77bcf2ca0fdfb9042a8bc455ef", "Url": "https://api.github.com/repos/jaeksoft/opensearchserver", "Date": "2013-12-03T15:18:23Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(Error.curline.isEmpty())) { java.lang.System.out.println(Error.curline); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6923/buggy-version/src.Error.java", "BodyUseAPI": [], "Fixed commit": "efb8ced3aa72ff748d32fa9b90aaab3cbb6ec60b", "Url": "https://api.github.com/repos/DavidBittner/Translator", "Date": "2017-05-16T17:50:08Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.getError()) != null) { android.widget.Toast.makeText(activity, response.getError().getErrorMessage(), Toast.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(activity, activity.getString(R.string.shared), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2580/buggy-version/app.src.main.java.com.paypal.psix.fragments.ShareDialogFragment.java", "BodyUseAPI": ["android.widget.Toast.makeText(activity, response.getError().getErrorMessage(), Toast.LENGTH_LONG).show()", "com.facebook.Response.getError()", "android.widget.Toast.makeText(android.app.Activity,response.getError().getErrorMessage(),Toast.LENGTH_LONG)", "response.getError().getErrorMessage()"], "Fixed commit": "f11cadb9a649cd16be246759f025d1f0e26027e4", "Url": "https://api.github.com/repos/rot-13/PSix", "Date": "2015-03-16T13:59:00Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (number == 1) { number = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3835/buggy-version/src.TrafficGenerator.java", "BodyUseAPI": [], "Fixed commit": "e9cb8fbf373bcbfd35d93878453e738d75db737e", "Url": "https://api.github.com/repos/Seymourr/ElevatorSimulation", "Date": "2015-04-07T09:53:58Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (contextList.isEmpty()) contextList.add(((org.societies.api.internal.context.model.CtxAttributeTypes.LOCATION_SYMBOLIC) + \"=n/a\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4136/buggy-version/personalisation.CAUIDiscovery.src.main.java.org.societies.personalisation.CAUIDiscovery.impl.CAUIDiscovery.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(((org.societies.api.internal.context.model.CtxAttributeTypes.LOCATION_SYMBOLIC) + \"=n/a\"))"], "Fixed commit": "034893543f369791cc3627c29ed47f83d27a521c", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2013-11-12T14:58:14Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (contextList.isEmpty()) contextList.add(((org.societies.api.internal.context.model.CtxAttributeTypes.HOUR_OF_DAY) + \"=n/a\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4136/buggy-version/personalisation.CAUIDiscovery.src.main.java.org.societies.personalisation.CAUIDiscovery.impl.CAUIDiscovery.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(((org.societies.api.internal.context.model.CtxAttributeTypes.HOUR_OF_DAY) + \"=n/a\"))"], "Fixed commit": "034893543f369791cc3627c29ed47f83d27a521c", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2013-11-12T14:58:14Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (contextList.isEmpty()) contextList.add(((org.societies.api.internal.context.model.CtxAttributeTypes.DAY_OF_WEEK) + \"=n/a\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4136/buggy-version/personalisation.CAUIDiscovery.src.main.java.org.societies.personalisation.CAUIDiscovery.impl.CAUIDiscovery.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(((org.societies.api.internal.context.model.CtxAttributeTypes.DAY_OF_WEEK) + \"=n/a\"))"], "Fixed commit": "034893543f369791cc3627c29ed47f83d27a521c", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2013-11-12T14:58:14Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.avoscloud.leanchatlib.adapter.MultipleItemAdapter.getFirstMessage()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (null == message) { refreshLayout.setRefreshing(false); }else { imConversation.queryMessages(message.getMessageId(), message.getTimestamp(), 20, new com.avos.avoscloud.im.v2.callback.AVIMMessagesQueryCallback() { @java.lang.Override public void done(java.util.List<com.avos.avoscloud.im.v2.AVIMMessage> list, com.avos.avoscloud.im.v2.AVIMException e) { refreshLayout.setRefreshing(false); if (filterException(e)) { if ((null != list) && ((list.size()) > 0)) { itemAdapter.addMessageList(list); itemAdapter.notifyDataSetChanged(); layoutManager.scrollToPositionWithOffset(((list.size()) - 1), 0); } } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4300/buggy-version/leanchatlib.src.main.java.com.avoscloud.leanchatlib.activity.ChatFragment.java", "BodyUseAPI": ["com.avos.avoscloud.im.v2.AVIMConversation.queryMessages(message.getMessageId(),message.getTimestamp(),int,com.avos.avoscloud.im.v2.callback.AVIMMessagesQueryCallback)", "com.avos.avoscloud.im.v2.AVIMMessage.getTimestamp()", "com.avos.avoscloud.im.v2.AVIMMessage.getMessageId()"], "Fixed commit": "af4591db3bd5ba2f547c015495a4627c15fc3ab4", "Url": "https://api.github.com/repos/daweibayu/leanchat-android", "Date": "2015-10-08T08:51:55Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((workFlowInvoke.outputVariable) != null) { xmlSerializer.attribute(\"\", \"outputVariable\", workFlowInvoke.outputVariable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5142/buggy-version/app.src.main.java.ee.ut.cs.thesisworkflow.workflow.WorkFlowGenerate.java", "BodyUseAPI": ["org.xmlpull.v1.XmlSerializer.attribute(java.lang.String,java.lang.String,workFlowInvoke.outputVariable)"], "Fixed commit": "0401fb1c522c0ded1245a3cb607910042e53a8c9", "Url": "https://api.github.com/repos/davidinsuomi/thesisWorkFlow", "Date": "2015-04-06T06:57:20Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((workFlowInvoke.inputVariable) != null) { xmlSerializer.attribute(\"\", \"inputVariable\", workFlowInvoke.inputVariable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5142/buggy-version/app.src.main.java.ee.ut.cs.thesisworkflow.workflow.WorkFlowGenerate.java", "BodyUseAPI": ["org.xmlpull.v1.XmlSerializer.attribute(java.lang.String,java.lang.String,workFlowInvoke.inputVariable)"], "Fixed commit": "0401fb1c522c0ded1245a3cb607910042e53a8c9", "Url": "https://api.github.com/repos/davidinsuomi/thesisWorkFlow", "Date": "2015-04-06T06:57:20Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((workFlowInvoke.operation) != null) { xmlSerializer.attribute(\"\", \"operation\", workFlowInvoke.operation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5142/buggy-version/app.src.main.java.ee.ut.cs.thesisworkflow.workflow.WorkFlowGenerate.java", "BodyUseAPI": ["org.xmlpull.v1.XmlSerializer.attribute(java.lang.String,java.lang.String,workFlowInvoke.operation)"], "Fixed commit": "0401fb1c522c0ded1245a3cb607910042e53a8c9", "Url": "https://api.github.com/repos/davidinsuomi/thesisWorkFlow", "Date": "2015-04-06T06:57:20Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((workFlowInvoke.partnerLink) != null) { xmlSerializer.attribute(\"\", \"partnerLink\", workFlowInvoke.partnerLink); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5142/buggy-version/app.src.main.java.ee.ut.cs.thesisworkflow.workflow.WorkFlowGenerate.java", "BodyUseAPI": ["org.xmlpull.v1.XmlSerializer.attribute(java.lang.String,java.lang.String,workFlowInvoke.partnerLink)"], "Fixed commit": "0401fb1c522c0ded1245a3cb607910042e53a8c9", "Url": "https://api.github.com/repos/davidinsuomi/thesisWorkFlow", "Date": "2015-04-06T06:57:20Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tokenType) == 3) { printer.println(); }else { printer.print(content); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/83/buggy-version/javaparser-core.src.main.java.com.github.javaparser.printer.concretesyntaxmodel.CsmToken.java", "BodyUseAPI": [], "Fixed commit": "980371854d0ba558739c09eee30fef9d9b96c26e", "Url": "https://api.github.com/repos/ftomassetti/javaparser", "Date": "2017-01-21T10:41:59Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.api.services.calendar.model.Event.getId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (eventId != null) { main.googlecalendar.GoogleCalendar.googleCalendarClient.events().patch(main.googlecalendar.GoogleCalendar.googleId, eventId, event).execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6246/buggy-version/src.main.googlecalendar.GoogleCalendar.java", "BodyUseAPI": ["main.googlecalendar.GoogleCalendar.googleCalendarClient.events().patch(java.lang.String,java.lang.String,com.google.api.services.calendar.model.Event)", "main.googlecalendar.GoogleCalendar.googleCalendarClient.events().patch(main.googlecalendar.GoogleCalendar.googleId, eventId, event).execute()"], "Fixed commit": "1ee35472c2c9eaf9bb3a631cb04f09e3d53aec5c", "Url": "https://api.github.com/repos/cs2103aug2014-T13-2J/main", "Date": "2014-11-06T02:29:46Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (view != null) { if ((failReason != null) && ((failReason.getCause()) != null)) { view.setTag(failReason.getCause().getMessage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7338/buggy-version/app.src.de.ur.mi.android.ting.utilities.ViewSwitchingImageLoadingListener.java", "BodyUseAPI": ["android.view.View.setTag(failReason.getCause().getMessage())"], "Fixed commit": "a3d4bc90625986ebb4b6c3c24e01866007eda525", "Url": "https://api.github.com/repos/WoelliA/Ting_Android_SoSo2014", "Date": "2014-09-10T17:33:51Z"},
{"Line": "=>1744", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInRecovery())) { _unacknowledgedMessageTags.add(id); ackWaitTimeOutTrackingMap.put(id, java.lang.System.currentTimeMillis()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4032/buggy-version/modules.andes-core.client.src.main.java.org.wso2.andes.client.AMQSession.java", "BodyUseAPI": [], "Fixed commit": "ea10a3386e67a3124eb4a4342fad0590090498e7", "Url": "https://api.github.com/repos/sdkottegoda/andes", "Date": "2017-03-24T10:50:22Z"},
{"Line": "=>1769", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInRecovery())) { _queue.add(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4032/buggy-version/modules.andes-core.client.src.main.java.org.wso2.andes.client.AMQSession.java", "BodyUseAPI": [], "Fixed commit": "ea10a3386e67a3124eb4a4342fad0590090498e7", "Url": "https://api.github.com/repos/sdkottegoda/andes", "Date": "2017-03-24T10:50:22Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (disable) { mFeedback.setEnabled(false); mFeedback.getCompoundDrawables()[1].setAlpha(50); }else { mFeedback.setEnabled(true); mFeedback.getCompoundDrawables()[1].setAlpha(256); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2718/buggy-version/Check.src.com.bg.check.ui.CheckerActivity.java", "BodyUseAPI": [], "Fixed commit": "378c17e19fdedbb4257bc2e03ad08899354c28db", "Url": "https://api.github.com/repos/dev-kit/001", "Date": "2012-08-11T17:06:03Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tasks.get(position).getValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tags.contains(\"next\")) { rowView.setBackgroundColor(-278483); descriptionTextView.setTextColor(-16777216); urgencyTextView.setTextColor(-6710887); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3016/buggy-version/app.src.main.java.com.doctorandonuts.taskchampion.task.CustomArrayAdapter.java", "BodyUseAPI": [], "Fixed commit": "e43bdd2432df7a9aaaafa60f95909ad05c6e2cfb", "Url": "https://api.github.com/repos/Doctor-Andonuts/TaskChampion", "Date": "2015-09-02T16:43:06Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Hashtable<java.lang.Long, java.lang.ref.WeakReference<android.support.v4.app.Fragment>>.get(getItemId(position))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ref == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4522/buggy-version/android.src.main.java.com.thebluealliance.androidclient.adapters.BindableFragmentPagerAdapter.java", "BodyUseAPI": [], "Fixed commit": "46cd5fe1f110e3d23efe86e1130444036e6bf377", "Url": "https://api.github.com/repos/phil-lopreiato/the-blue-alliance-android", "Date": "2015-12-02T21:36:30Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exited) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3056/buggy-version/simple.src.task2b.VirtualTrackball.java", "BodyUseAPI": [], "Fixed commit": "3d43b29ac4665dcb804f817b4d71eb1763bb2a74", "Url": "https://api.github.com/repos/panmari/cgUnibe", "Date": "2012-10-08T19:20:24Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.baard.Friends.FindFriendsFragment.MyFriendsListAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((user.getFriends().get(friend.getUsername())) == (java.lang.Boolean.FALSE)) && ((friend.getReceivedRequests().get(username)) == (java.lang.Boolean.FALSE))) { mainViewHolder.button.setText(\"FOLLOW\"); pendingFriendsList.remove(j); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8800/buggy-version/app.src.main.java.com.example.baard.Friends.FindFriendsFragment.java", "BodyUseAPI": [], "Fixed commit": "7b4caa421b0bb5bf36fd5f9557607ce7fe563319", "Url": "https://api.github.com/repos/CMPUT301F17T02/BAARD", "Date": "2017-12-05T06:45:05Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((session.getCurrentCommand()) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1518/buggy-version/src.main.java.net.rubyeye.xmemcached.codec.MemcachedDecoder.java", "BodyUseAPI": [], "Fixed commit": "c3bfba07fe756750f2b397d9275b5184a680c50e", "Url": "https://api.github.com/repos/killme2008/xmemcached", "Date": "2011-09-05T13:05:35Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (scopes != null) { builder.scopes(scopes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/467/buggy-version/android.src.main.java.io.fullstack.oauth.OAuthManagerProviders.java", "BodyUseAPI": ["com.github.scribejava.core.builder.ServiceBuilder.scopes(java.lang.String)"], "Fixed commit": "17b47ac7240e08eaabff25715b8f0f8134ef210e", "Url": "https://api.github.com/repos/fullstackreact/react-native-oauth", "Date": "2017-01-04T03:39:44Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sql.trim().startsWith(\"insert\")) { call = base.prepareStatement(sql, java.sql.Statement.RETURN_GENERATED_KEYS); }else { call = base.prepareStatement(sql); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6444/buggy-version/src.main.java.me.zzp.ar.DB.java", "BodyUseAPI": ["java.sql.Connection.prepareStatement(java.lang.String)", "java.sql.Connection.prepareStatement(java.lang.String,int)"], "Fixed commit": "37c922fdfa27e234b70c9ba7481fcd516f20c134", "Url": "https://api.github.com/repos/redraiment/jactiverecord", "Date": "2014-04-02T08:50:55Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(item.isValid())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6470/buggy-version/app.src.main.java.com.example.nnv.vkphototask.view.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e2b314f5424dbd8e22395afb05a948aed1109f5e", "Url": "https://api.github.com/repos/nxn777/VKPhototask", "Date": "2017-06-19T04:41:49Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((split[4].equals(\"AM\")) && (hour == 12)) { hour -= 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6921/buggy-version/src.autoresponse.util.MyService.java", "BodyUseAPI": [], "Fixed commit": "dcab617a3844d60061de763c78206204610b444a", "Url": "https://api.github.com/repos/Jkettler/autoresponse", "Date": "2012-12-03T19:07:16Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((totalRss.indexOf(org.ramonaza.officialramonapp.events.backend.EventRSSHandler.ITEM_SPLITTER)) == (-1)) strippedRss = \"\"; else strippedRss = totalRss.substring(((totalRss.indexOf(org.ramonaza.officialramonapp.events.backend.EventRSSHandler.ITEM_SPLITTER)) + (org.ramonaza.officialramonapp.events.backend.EventRSSHandler.ITEM_SPLITTER.length())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1195/buggy-version/app.src.main.java.org.ramonaza.officialramonapp.events.backend.EventRSSHandler.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "5524180ec714510194d99ebbf93e922db640ef1d", "Url": "https://api.github.com/repos/ischeinkman/OfficialRamonApp", "Date": "2017-02-07T23:43:57Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rawRSS.length()) == 0) return new org.ramonaza.officialramonapp.events.backend.EventInfoWrapper[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1195/buggy-version/app.src.main.java.org.ramonaza.officialramonapp.events.backend.EventRSSHandler.java", "BodyUseAPI": [], "Fixed commit": "5524180ec714510194d99ebbf93e922db640ef1d", "Url": "https://api.github.com/repos/ischeinkman/OfficialRamonApp", "Date": "2017-02-07T23:43:57Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(de.timolia.custom.cmds.protnpc.active.contains(p.getName()))) de.timolia.custom.cmds.protnpc.active.add(p.getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4329/buggy-version/src.de.timolia.custom.cmds.protnpc.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(p.getName())", "org.bukkit.entity.Player.getName()"], "Fixed commit": "8abf2c6f0b2df67387f4995ffcfef9ae2b90a98a", "Url": "https://api.github.com/repos/EX0/TimoliaCustom", "Date": "2013-03-28T23:54:03Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { this.appendMissing(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2685/buggy-version/platform.src.main.java.org.hillview.table.columns.BaseListColumn.java", "BodyUseAPI": [], "Fixed commit": "b74d5af7d32c9382ffdafce1cdac8028bc8bc54b", "Url": "https://api.github.com/repos/uwieder/Hillview", "Date": "2017-12-01T00:27:47Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getHP()) == (characterA.getHP())) { safeFactor = 0.2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5535/buggy-version/Duel.src.duel.CharacterB.java", "BodyUseAPI": [], "Fixed commit": "57021b715cb75e2749a33f92fe455c1fe2c865fc", "Url": "https://api.github.com/repos/bdardia/Duel", "Date": "2017-09-25T19:12:31Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["realm.where(church.lifejourney.bestillknow.db.Devotional.class).findAllSorted(java.lang.String,Sort.DESCENDING)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((devotionals.size()) >= number) { for (int i = 0; i < number; i++) { devotionals.first().removeFromRealm(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6911/buggy-version/app.src.main.java.church.lifejourney.bestillknow.db.DevotionalDb.java", "BodyUseAPI": ["devotionals.first().removeFromRealm()", "io.realm.RealmResults<church.lifejourney.bestillknow.db.Devotional>.first()"], "Fixed commit": "ea85555f4f4b69040afebbbc7e11cd0a2d9de3e2", "Url": "https://api.github.com/repos/turbohappy/ljcbestill", "Date": "2016-02-29T05:37:37Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (slider.getMousePosition())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6202/buggy-version/src.org.midica.ui.SliderHelper.java", "BodyUseAPI": [], "Fixed commit": "44e611135aa82b03a5a36433f821728fdfe96a02", "Url": "https://api.github.com/repos/truj/midica", "Date": "2016-01-03T21:58:38Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (config.isResetMaxHealthOnDeath()) { player.setMaxHealth(20); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2430/buggy-version/src.main.java.com.github.ucchyocean.ct.ColorTeamingManager.java", "BodyUseAPI": [], "Fixed commit": "cd0cef500da5076e60d0b2bca5c5d39c46771abb", "Url": "https://api.github.com/repos/ucchyocean/ColorTeaming", "Date": "2014-03-10T15:20:11Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(donotcheckin.exists())) { donotcheckin.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5964/buggy-version/xcode-maven-plugin.src.main.java.com.photon.phresco.plugins.xcode.Instrumentation.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "3b8efd9b1e0411cc7db62053ba7efab47848f1f5", "Url": "https://api.github.com/repos/photon-infotech/plugins", "Date": "2014-07-02T07:35:21Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.photon.phresco.util.Utility.getPomProcessor(rootModulePath, \"\").getPropertyValue(Constants.POM_PROP_KEY_FUNCTEST_RPT_DIR)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (functionalTestReportDir.contains(com.photon.phresco.plugins.xcode.PROJECT_BASEDIR)) { functionalTestReportDir = functionalTestReportDir.replace(com.photon.phresco.plugins.xcode.PROJECT_BASEDIR, testFolderLocation.getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5964/buggy-version/xcode-maven-plugin.src.main.java.com.photon.phresco.plugins.xcode.Instrumentation.java", "BodyUseAPI": ["java.lang.String.replace(com.photon.phresco.plugins.xcode.PROJECT_BASEDIR,java.lang.String)"], "Fixed commit": "3b8efd9b1e0411cc7db62053ba7efab47848f1f5", "Url": "https://api.github.com/repos/photon-infotech/plugins", "Date": "2014-07-02T07:35:21Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(startOnce)) && (instance.getState().equalsIgnoreCase(InstanceConstants.STATE_STOPPED))) { instance = context.resourceMonitor.waitForNotTransitioning(instance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2804/buggy-version/code.iaas.service-discovery.server.src.main.java.io.cattle.platform.servicediscovery.deployment.DeploymentUnitInstance.java", "BodyUseAPI": ["context.resourceMonitor.waitForNotTransitioning(io.cattle.platform.core.model.Instance)"], "Fixed commit": "c181b9cfc0b26aeb55e280c523c8473730c1c9ae", "Url": "https://api.github.com/repos/alena1108/cattle", "Date": "2017-02-01T23:11:56Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (bm == null) bm = bl.getBiome();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4277/buggy-version/mort.mineralvein.VeinPopulator.java", "BodyUseAPI": [], "Fixed commit": "73d21a4df0c5fd47effd6613316c4ef5368d60e3", "Url": "https://api.github.com/repos/M0rt1mer/Mineral-Vein", "Date": "2011-12-03T22:53:43Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) { listener.updateAvailable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4188/buggy-version/Dobby.app.src.main.java.com.inceptai.dobby.ui.GraphData.java", "BodyUseAPI": [], "Fixed commit": "7272fd3d031e9b188888273f66ab2b2d38dbeeb0", "Url": "https://api.github.com/repos/InceptAi/dobby-android", "Date": "2017-04-08T21:18:51Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new com.google.gson.JsonParser().parse(reader).getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(root.get(\"name\").isJsonNull())) deck.setName(root.get(\"name\").getAsString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1953/buggy-version/src.org.magic.api.exports.impl.JsonExport.java", "BodyUseAPI": ["org.magic.api.beans.MagicDeck.setName(root.get(\"name\").getAsString())", "com.google.gson.JsonObject.get(java.lang.String)", "root.get(\"name\").getAsString()"], "Fixed commit": "07c3b7a5d64223cdd5b7df38602f16452d0570b1", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2016-09-02T21:11:44Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new com.google.gson.JsonParser().parse(reader).getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(root.get(\"description\").isJsonNull())) deck.setDescription(root.get(\"description\").getAsString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1953/buggy-version/src.org.magic.api.exports.impl.JsonExport.java", "BodyUseAPI": ["root.get(\"description\").getAsString()", "org.magic.api.beans.MagicDeck.setDescription(root.get(\"description\").getAsString())", "com.google.gson.JsonObject.get(java.lang.String)"], "Fixed commit": "07c3b7a5d64223cdd5b7df38602f16452d0570b1", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2016-09-02T21:11:44Z"},
{"Line": "=>947", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) >= 0) { fileName = idFileNameMap.get(entry.getValue()); }else { fileName = entry.getKey(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8634/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.cache.local.OWOWCache.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.String>.get(java.lang.Integer)", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getValue()"], "Fixed commit": "9dbee955b9e2958e3d34a960779e162d13350fe3", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-05-18T17:58:14Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isGroupFiles())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1334/buggy-version/components.formats-bsd.src.loci.formats.in.MicromanagerReader.java", "BodyUseAPI": [], "Fixed commit": "c8f107952190dd3d35bed3e79fbfc1d897ff4b1a", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-03-27T03:46:03Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loci.formats.FormatReader.isThisType(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (valid && (!(isGroupFiles()))) { try { return isSingleFile(metaFile); } catch (java.lang.Exception e) { loci.formats.in.LOGGER.debug(\"\", e); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1334/buggy-version/components.formats-bsd.src.loci.formats.in.OMETiffReader.java", "BodyUseAPI": [], "Fixed commit": "c8f107952190dd3d35bed3e79fbfc1d897ff4b1a", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-03-27T03:46:03Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((check.compareTo(\"customerId\")) == 0) { java.util.regex.Pattern p = java.util.regex.Pattern.compile(\"[0-9]{1,}\"); java.util.regex.Pattern p1 = java.util.regex.Pattern.compile(\"#[0-9]{1,}\"); java.util.regex.Pattern p2 = java.util.regex.Pattern.compile(\"[a-zA-Z]{1,}\"); java.util.regex.Matcher m2 = p2.matcher(val.get(0)); java.util.regex.Matcher m1 = p1.matcher(val.get(0)); java.util.regex.Matcher m = p.matcher(val.get(0)); if (m2.matches()) { sqlQuery += (((\" LOWER( c.customerId.firstName ) REGEXP LOWER ('\" + (val.get(0))) + \"') OR LOWER( c.customerId.lastName ) REGEXP LOWER ('\") + (val.get(0))) + \"') AND\"; } if (m.matches()) { sqlQuery += (\" LOWER ( c.customerId.customerId ) REGEXP LOWER ('\" + (val.get(0))) + \"') AND\"; } if (m1.matches()) { sqlQuery += (\" LOWER ( c.customerId.customerId ) REGEXP LOWER ('\" + (val.get(0).substring(1))) + \"') AND\"; } }else { if ((check.compareTo(\"employeeId\")) == 0) { java.util.regex.Pattern p = java.util.regex.Pattern.compile(\"[0-9]{1,}\"); java.util.regex.Pattern p1 = java.util.regex.Pattern.compile(\"#[0-9]{1,}\"); java.util.regex.Pattern p2 = java.util.regex.Pattern.compile(\"[a-zA-Z]{1,}\"); java.util.regex.Matcher m2 = p2.matcher(val.get(0)); java.util.regex.Matcher m1 = p1.matcher(val.get(0)); java.util.regex.Matcher m = p.matcher(val.get(0)); if (m2.matches()) { sqlQuery += (((\" LOWER( c.employeeId.firstName ) REGEXP LOWER ('\" + (val.get(0))) + \"') OR LOWER( c.employeeId.lastName ) REGEXP LOWER ('\") + (val.get(0))) + \"') AND\"; } if (m.matches()) { sqlQuery += (\" LOWER ( c.employeeId.employeeId ) REGEXP LOWER ('\" + (val.get(0))) + \"') AND\"; } if (m1.matches()) { sqlQuery += (\" LOWER ( c.employeeId.employeeId ) REGEXP LOWER ('\" + (val.get(0).substring(1))) + \"') AND\"; } }else { sqlQuery += (((\" LOWER( c.\" + paramProperty) + \" ) REGEXP LOWER('\") + (val.get(0))) + \"') AND\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1006/buggy-version/CRM4telecom.CRM4telecom-ejb.src.java.com.crm4telecom.ejb.OrderManager.java", "BodyUseAPI": ["java.lang.String.compareTo(java.lang.String)"], "Fixed commit": "0c575b79036f22f880e511c47ebde9d2e4f431ba", "Url": "https://api.github.com/repos/illusionww/CRM4telecom", "Date": "2014-04-10T12:31:02Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((check.compareTo(\"customerId\")) == 0) { java.util.regex.Pattern p = java.util.regex.Pattern.compile(\"[0-9]{1,}\"); java.util.regex.Pattern p1 = java.util.regex.Pattern.compile(\"#[0-9]{1,}\"); java.util.regex.Matcher m1 = p1.matcher(val.get(0)); java.util.regex.Matcher m = p.matcher(val.get(0)); java.util.regex.Pattern p2 = java.util.regex.Pattern.compile(\"[a-zA-Z]{1,}\"); java.util.regex.Matcher m2 = p2.matcher(val.get(0)); if (m2.matches()) { sqlQuery += (((\" LOWER( c.customerId.firstName ) REGEXP LOWER ('\" + (val.get(0))) + \"') OR LOWER( c.customerId.lastName ) REGEXP LOWER ('\") + (val.get(0))) + \"') AND\"; } if (m.matches()) { sqlQuery += (\" LOWER ( c.customerId.customerId ) REGEXP LOWER ('\" + (val.get(0))) + \"') AND\"; } if (m1.matches()) { sqlQuery += (\" LOWER ( c.customerId.customerId ) REGEXP LOWER ('\" + (val.get(0).substring(1))) + \"') AND\"; } }else { if ((check.compareTo(\"employeeId\")) == 0) { java.util.regex.Pattern p = java.util.regex.Pattern.compile(\"[0-9]{1,}\"); java.util.regex.Pattern p1 = java.util.regex.Pattern.compile(\"#[0-9]{1,}\"); java.util.regex.Pattern p2 = java.util.regex.Pattern.compile(\"[a-zA-Z]{1,}\"); java.util.regex.Matcher m2 = p2.matcher(val.get(0)); java.util.regex.Matcher m1 = p1.matcher(val.get(0)); java.util.regex.Matcher m = p.matcher(val.get(0)); if (m2.matches()) { sqlQuery += (((\" LOWER( c.employeeId.firstName ) REGEXP LOWER ('\" + (val.get(0))) + \"') OR LOWER( c.employeeId.lastName ) REGEXP LOWER ('\") + (val.get(0))) + \"') AND\"; } if (m.matches()) { sqlQuery += (\" LOWER ( c.employeeId.employeeId ) REGEXP LOWER ('\" + (val.get(0))) + \"') AND\"; } if (m1.matches()) { sqlQuery += (\" LOWER ( c.employeeId.employeeId ) REGEXP LOWER ('\" + (val.get(0).substring(1))) + \"') AND\"; } }else { sqlQuery += (((\" LOWER( c.\" + paramProperty) + \" ) REGEXP LOWER('\") + (val.get(0))) + \"') AND\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1006/buggy-version/CRM4telecom.CRM4telecom-ejb.src.java.com.crm4telecom.ejb.OrderManager.java", "BodyUseAPI": ["java.lang.String.compareTo(java.lang.String)"], "Fixed commit": "0c575b79036f22f880e511c47ebde9d2e4f431ba", "Url": "https://api.github.com/repos/illusionww/CRM4telecom", "Date": "2014-04-10T12:31:02Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((path.getAvgTicksFromLastPrediction()) <= 0) { ltick = 0L; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1198/buggy-version/src.main.java.mtp.robots.milkshake.analytics.location.engines.Trail.java", "BodyUseAPI": [], "Fixed commit": "5b481236e80d0752f67e3f5c49d04455ac9f9b56", "Url": "https://api.github.com/repos/matthewphilyaw/robots", "Date": "2014-05-16T15:01:53Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path == null) { ltick = 0L; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1198/buggy-version/src.main.java.mtp.robots.milkshake.analytics.location.engines.Trail.java", "BodyUseAPI": [], "Fixed commit": "5b481236e80d0752f67e3f5c49d04455ac9f9b56", "Url": "https://api.github.com/repos/matthewphilyaw/robots", "Date": "2014-05-16T15:01:53Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (session.isNew()) { buyPriceItems = new java.util.HashMap<java.lang.String, edu.ucla.cs.cs144.PaymentInfo>(); }else { buyPriceItems = ((java.util.HashMap<java.lang.String, edu.ucla.cs.cs144.PaymentInfo>) (session.getAttribute(\"buyPriceItems\"))); if (buyPriceItems == null) buyPriceItems = new java.util.HashMap<java.lang.String, edu.ucla.cs.cs144.PaymentInfo>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7661/buggy-version/Part5.src.edu.ucla.cs.cs144.ItemServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Fixed commit": "3980eefe31da65bf727559ea9ee70ed2fdb0dc11", "Url": "https://api.github.com/repos/akshaybhat214/CS_144", "Date": "2016-03-07T18:47:51Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ice.getRawSlot()) >= sizeCategories) { ice.setCancelled(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1436/buggy-version/src.io.github.yannici.bedwars.Shop.NewItemShop.java", "BodyUseAPI": ["org.bukkit.event.inventory.InventoryClickEvent.setCancelled(boolean)"], "Fixed commit": "f50acd44871f517003eefc907047c9913d6f70a4", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-04-26T22:55:02Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFooterView) != null) { android.view.ViewGroup.LayoutParams lp = holder.itemView.getLayoutParams(); if (((lp != null) && (lp instanceof android.support.v7.widget.StaggeredGridLayoutManager.LayoutParams)) && ((holder.getLayoutPosition()) == ((getItemCount()) - 1))) { android.support.v7.widget.StaggeredGridLayoutManager.LayoutParams p = ((android.support.v7.widget.StaggeredGridLayoutManager.LayoutParams) (lp)); p.setFullSpan(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7985/buggy-version/pandaqlib.src.main.java.com.pandaq.pandaqlib.magicrecyclerView.BaseRecyclerAdapter.java", "BodyUseAPI": [], "Fixed commit": "290898de7bc3503ed40aa707d79fb15465901cc9", "Url": "https://api.github.com/repos/PandaQAQ/PandaEye", "Date": "2017-02-22T12:05:20Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (editText.isShown()) { body = editText.getText().toString(); if (body.trim().isEmpty()) { android.widget.Toast.makeText(this, this.getString(R.string.invalid_post_desc_empty), Toast.LENGTH_SHORT).show(); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8045/buggy-version/android-studio.BabyBox.app.src.main.java.com.babybox.activity.ReportActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "editText.getText().toString()"], "Fixed commit": "67a9eb9ce2f7b311efdd907cacb1cf1f920bf21f", "Url": "https://api.github.com/repos/mybabybox/BB-Android", "Date": "2016-01-17T09:59:49Z"},
{"Line": "=>971", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (relativePath.endsWith(\".class\")) { try (final java.io.InputStream inputStream = new java.io.FileInputStream(file)) { readClassInfoFromClassfileHeader(inputStream); } if ((classNameToClassfileHash) != null) { try (final java.io.InputStream inputStream = new java.io.FileInputStream(file)) { hashInputStream(relativePath.substring(0, ((relativePath.length()) - 6)).replace('/', '.'), inputStream); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7476/buggy-version/src.main.java.io.github.lukehutch.fastclasspathscanner.FastClasspathScanner.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "io.github.lukehutch.fastclasspathscanner.FastClasspathScanner.hashInputStream(java.lang.String,java.io.InputStream)", "java.lang.String.replace(char,char)"], "Fixed commit": "f80d942a2831207f04308b6a97e19dbc87300573", "Url": "https://api.github.com/repos/classgraph/classgraph", "Date": "2015-07-28T20:53:18Z"},
{"Line": "=>1096", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.zip.ZipEntry.getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (path.endsWith(\".class\")) { try (final java.io.InputStream inputStream = zipFile.getInputStream(entry)) { readClassInfoFromClassfileHeader(inputStream); } if ((classNameToClassfileHash) != null) { try (final java.io.InputStream inputStream = zipFile.getInputStream(entry)) { hashInputStream(path.substring(0, ((path.length()) - 6)).replace('/', '.'), inputStream); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7476/buggy-version/src.main.java.io.github.lukehutch.fastclasspathscanner.FastClasspathScanner.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.replace(char,char)", "java.lang.String.length()", "io.github.lukehutch.fastclasspathscanner.FastClasspathScanner.hashInputStream(java.lang.String,java.io.InputStream)"], "Fixed commit": "f80d942a2831207f04308b6a97e19dbc87300573", "Url": "https://api.github.com/repos/classgraph/classgraph", "Date": "2015-07-28T20:53:18Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentFragment) instanceof fragments.ViewPagerFragment) viewPager = ((fragments.ViewPagerFragment) (currentFragment)).getViewPager();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/583/buggy-version/MuhlenbergDiningX.src.com.example.muhlenbergdiningx.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "206b16b49ad6e27d076557cc298ba89f1b78397f", "Url": "https://api.github.com/repos/Muhlenberg/Berg-Dining-Android", "Date": "2014-12-06T20:34:20Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8690/buggy-version/src.org.team3128.util.RobotMath.java", "BodyUseAPI": [], "Fixed commit": "874094f074b596982b0754e509797504586dd2a1", "Url": "https://api.github.com/repos/Team3128/frc-java-3128", "Date": "2015-04-26T20:43:19Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((imgFragments[row][col].rows()) > 1) && ((imgFragments[row][col].cols()) > 1)) { org.javatuples.Triplet<double[], java.lang.Integer, double[][]> storage = highestCircleDensity(imgFragments[row][col], (row * (imgFragWidth)), (col * (imgFragHeight))); if (((storage.getValue1()) / (((storage.getValue0()[0]) - (storage.getValue0()[2])) * ((storage.getValue0()[1]) - (storage.getValue0()[3])))) > minDensity) { highCircleDensities.add(storage.getValue0()); } for (double[] circle : storage.getValue2()) { circles.add(circle); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3066/buggy-version/src.faceByCircles.java", "BodyUseAPI": ["faceByCircles.highestCircleDensity(imgFragments[row][col],int,int)"], "Fixed commit": "c845d0c8fcc968ed31d6e760b56d86aa66482b7c", "Url": "https://api.github.com/repos/metal-crow/Sentry-Gun-Computer-Vision", "Date": "2014-09-20T20:39:03Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (message != null) dataOutputStream.writeUTF(message);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2902/buggy-version/src.main.java.com.db.javaschool2016.client.ConsoleListener.java", "BodyUseAPI": ["java.io.DataOutputStream.writeUTF(java.lang.String)"], "Fixed commit": "97dd03f59e2ddf89c7deccf161881ed3ffdd5b68", "Url": "https://api.github.com/repos/lucky-007/group2", "Date": "2016-09-02T13:27:20Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((num.length()) > 0) { value += java.lang.Integer.parseInt(num); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/319/buggy-version/src.main.StringCalculator.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "1e04ef196284c37dd13aa97fab76f75497fa3a56", "Url": "https://api.github.com/repos/gummistori/String-Calculator", "Date": "2016-10-14T20:35:56Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key.equals(\"warmupPerWorld\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/445/buggy-version/core.src.main.java.com.andune.minecraft.hsp.config.ConfigWarmup.java", "BodyUseAPI": [], "Fixed commit": "5a9a4d8e6c4797075ff8d3c20f4f83700187388f", "Url": "https://api.github.com/repos/andune/HomeSpawnPlus", "Date": "2013-02-18T21:50:44Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCards) != null) { this.onCardAdded(mCards); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3946/buggy-version/app.src.main.java.com.example.guest.pomodoro.ui.CreateDeckActivity.java", "BodyUseAPI": [], "Fixed commit": "dd4fe0b1827111838ae739aaac5184fa7b70c80c", "Url": "https://api.github.com/repos/Rosanio/Pomodoro", "Date": "2016-05-14T23:38:33Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCards) == null) { mCards = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3946/buggy-version/app.src.main.java.com.example.guest.pomodoro.ui.CreateDeckInputFragment.java", "BodyUseAPI": [], "Fixed commit": "dd4fe0b1827111838ae739aaac5184fa7b70c80c", "Url": "https://api.github.com/repos/Rosanio/Pomodoro", "Date": "2016-05-14T23:38:33Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCards) != null) { mCards.clear(); mCards.addAll(cards); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3946/buggy-version/app.src.main.java.com.example.guest.pomodoro.ui.CreateDeckDisplayFragment.java", "BodyUseAPI": [], "Fixed commit": "dd4fe0b1827111838ae739aaac5184fa7b70c80c", "Url": "https://api.github.com/repos/Rosanio/Pomodoro", "Date": "2016-05-14T23:38:33Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contentStructure.getParts().isEmpty()) { return dcs; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4636/buggy-version/cermine-impl.src.main.java.pl.edu.icm.cermine.content.transformers.BxContentStructToDocContentStructConverter.java", "BodyUseAPI": [], "Fixed commit": "9994b6ceb7fab99e4800a3d27fb38fe2f2752510", "Url": "https://api.github.com/repos/CeON/CERMINE", "Date": "2015-11-29T12:59:07Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof projectmp.common.entity.EntityPlayer) { if (((projectmp.common.entity.EntityPlayer) (e)).username.equals(Main.username)) continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4227/buggy-version/core.src.projectmp.client.WorldRenderer.java", "BodyUseAPI": [], "Fixed commit": "7494678da9d213e1fd7121b1307c2680c346e91e", "Url": "https://api.github.com/repos/chrislo27/ProjectMP", "Date": "2015-03-31T02:40:49Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hTex) > 0) { com.serenegiant.glutils.GLDrawer2D.deleteTex(hTex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2014/buggy-version/app.src.main.java.com.serenegiant.audiovideosample.CameraGLView.java", "BodyUseAPI": [], "Fixed commit": "7be18cb8d20b115d8145e90815c085ac5fce55d6", "Url": "https://api.github.com/repos/hexmonad/AudioVideoRecordingSample", "Date": "2016-03-14T13:17:52Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pending) { pendingImage.isComplete = isComplete; }else { currentImageUpdated = true; paintedImage.isComplete = isComplete; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4743/buggy-version/java.src.main.java.bdv.HeadlessRenderTarget.java", "BodyUseAPI": [], "Fixed commit": "0efe3665fb064ed5eb156a4fc1768afa4efc71a9", "Url": "https://api.github.com/repos/tpietzsch/bigdataviewer-jni", "Date": "2016-08-03T18:41:14Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((calDay.get(java.util.Calendar.DAY_OF_WEEK)) != (java.util.Calendar.SUNDAY)) && ((calDay.get(java.util.Calendar.DAY_OF_WEEK)) != (java.util.Calendar.SATURDAY))) (daysCounter)++; else out.write(\"!!!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3745/buggy-version/Timecon.java", "BodyUseAPI": [], "Fixed commit": "0b490eb9cd7427e7a4f638ff49fbce486a2eb7c4", "Url": "https://api.github.com/repos/Akvel/Timecon", "Date": "2013-07-23T13:14:33Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transformBean.getLocation()) == null) { final java.lang.String text = getString(R.string.noLocationFound); android.widget.Toast.makeText(getApplicationContext(), text, Toast.LENGTH_SHORT).show(); }else { final int rotation = ((android.view.WindowManager) (getSystemService(Context.WINDOW_SERVICE))).getDefaultDisplay().getRotation(); final io.github.data4all.model.data.AbstractDataElement osmElement = touchView.create(rotation); intent.putExtra(io.github.data4all.activity.ShowPictureActivity.OSM_ELEMENT, osmElement); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5989/buggy-version/src.main.java.io.github.data4all.activity.ShowPictureActivity.java", "BodyUseAPI": [], "Fixed commit": "ea7a18610be2f336b1cd15c13e3142d127f3720f", "Url": "https://api.github.com/repos/Data4All/Data4All", "Date": "2015-02-26T13:02:53Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (changeIndex > (range / 2)) { changeIndex = ((int) (java.lang.Math.round((range / 2)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2236/buggy-version/src.main.java.cz.muni.fi.EventStreamGenerator.java", "BodyUseAPI": ["java.lang.Math.round(double)"], "Fixed commit": "20f87e7be3afad72cc297ef373bcd64da204a409", "Url": "https://api.github.com/repos/Vaculik/esper-stock", "Date": "2015-10-31T09:07:50Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rawType.getTypeParameters().length) == 0) { return new com.fasterxml.classmate.ResolvedObjectType(rawType, null, _resolveSuperClass(context, rawType, typeBindings), _resolveSuperInterfaces(context, rawType, typeBindings)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1958/buggy-version/src.main.java.com.fasterxml.classmate.TypeResolver.java", "BodyUseAPI": ["com.fasterxml.classmate.TypeResolver._resolveSuperInterfaces(com.fasterxml.classmate.util.ClassStack,java.lang.Class<?>,com.fasterxml.classmate.TypeBindings)", "com.fasterxml.classmate.TypeResolver._resolveSuperClass(com.fasterxml.classmate.util.ClassStack,java.lang.Class<?>,com.fasterxml.classmate.TypeBindings)"], "Fixed commit": "ca608ebfe99a154707d32c3a847e8a1c3fd75793", "Url": "https://api.github.com/repos/FasterXML/java-classmate", "Date": "2016-09-27T22:56:38Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nk == 0) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4318/buggy-version/src.VectorSpaceModel.java", "BodyUseAPI": [], "Fixed commit": "7a1bb0d91a24d274a29a890b87b1fbc3b1d76559", "Url": "https://api.github.com/repos/Recelis/MicroSearch", "Date": "2017-02-24T04:33:52Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.swt.custom.StyledText.getCaretOffset()", "org.eclipse.jface.text.ITextViewer.getTextWidget()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((oldIndex > 1) && (textWidget.getTextRange((oldIndex - 1), 2).equals(\"\\r\\n\"))) { oldIndex++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5393/buggy-version/net.sourceforge.vrapper.eclipse.src.net.sourceforge.vrapper.eclipse.platform.EclipseTextContent.java", "BodyUseAPI": [], "Fixed commit": "035fb7c0be8a72d5c89f8c3fe5cd0cff7765f2a0", "Url": "https://api.github.com/repos/vrapper/vrapper", "Date": "2013-12-14T18:52:50Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4588/buggy-version/GitProject.src.com.gmail.rozman.tihamer.Demo.java", "BodyUseAPI": [], "Fixed commit": "671f4a6147f09f0b48dbb970b3edffdc21c946e9", "Url": "https://api.github.com/repos/tihi002/FirstRepo", "Date": "2015-09-08T14:30:33Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chapters == null) || ((chapters.size()) < 1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8647/buggy-version/muuUIDemo.src.com.muu.ui.DetailsPageActivity.java", "BodyUseAPI": [], "Fixed commit": "c2fd7a3972b11f3d2f2391b3b2c445f5e4f9442d", "Url": "https://api.github.com/repos/dianhui/muu", "Date": "2014-08-15T05:35:40Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tipPanel) == null) tipPanel = new com.samebug.clients.idea.ui.component.tab.CollapsibleTipPanel(actions);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5616/buggy-version/src.main.java.com.samebug.clients.idea.ui.component.tab.SearchTabView.java", "BodyUseAPI": [], "Fixed commit": "3732c6866aba1a78262994f7659dbc0be14224ca", "Url": "https://api.github.com/repos/samebug/samebug-idea-plugin", "Date": "2016-07-06T12:20:03Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((event.entityLiving) instanceof net.minecraft.entity.player.EntityPlayer) == false) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3854/buggy-version/src.main.java.com.lothrazar.samscontent.item.ItemFoodGhost.java", "BodyUseAPI": [], "Fixed commit": "7fe98c5e9b3d1c4a59fa8b90c5d1a03c293b9029", "Url": "https://api.github.com/repos/PrinceOfAmber/SamsPowerups", "Date": "2015-04-29T19:07:47Z"},
{"Line": "=>836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["node.getParent().getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (svrType == null) { svrType = node.getCategory().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6729/buggy-version/src.main.java.jp.co.tabocom.teratermstation.ui.EnvTabItem.java", "BodyUseAPI": [], "Fixed commit": "b92b1da0225b50ed3091dce0c291be3d97b61d21", "Url": "https://api.github.com/repos/turbou/TeratermStation", "Date": "2015-11-26T08:30:26Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((req.isIncremental()) && (dst.exists())) { if ((dst.length()) == (src.getLength())) return; else dst.renameTo(dstTmp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4643/buggy-version/araqne-logstorage.src.main.java.org.araqne.logstorage.backup.FileStorageBackupMedia.java", "BodyUseAPI": ["java.io.File.renameTo(java.io.File)", "java.io.File.length()"], "Fixed commit": "fc71e244a95446c77b958794e2383d31c5309df0", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-06-09T06:30:36Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.batfish.nxtnet.PredicateInfo.getPredicateValueTypes(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (columnValueTypes == null) { throw new org.batfish.common.BatfishException(((\"Missing schema for predicate: \\\"\" + (_name)) + \"\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8644/buggy-version/projects.batfish.src.org.batfish.nxtnet.Relation.java", "BodyUseAPI": [], "Fixed commit": "43cf301f77acc5647be028a972d984f85181b4b1", "Url": "https://api.github.com/repos/batfish/batfish", "Date": "2015-12-31T20:22:00Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(net.kaleidos.dcchat.ChatActivity.PUBLIC_CHAT.equals(sid))) { this.setTitle(getNick(sid)); }else { this.setTitle(net.kaleidos.dcchat.ChatActivity.PUBLIC_CHAT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7154/buggy-version/DcChat.src.net.kaleidos.dcchat.ChatActivity.java", "BodyUseAPI": ["net.kaleidos.dcchat.ChatActivity.setTitle(java.lang.String)", "net.kaleidos.dcchat.ChatActivity.getNick(java.lang.String)", "net.kaleidos.dcchat.ChatActivity.setTitle(java.lang.String)"], "Fixed commit": "162f9c74ec44a24580cfb8d9f0ae6dcb911e5776", "Url": "https://api.github.com/repos/superalex/dcchat", "Date": "2014-07-25T19:39:04Z"},
{"Line": "=>749", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (FileMode.GITLINK.equals(diff.getNewMode())) { objectId = diff.getNewId().name(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5796/buggy-version/src.com.gitblit.utils.JGitUtils.java", "BodyUseAPI": ["diff.getNewId().name()", "org.eclipse.jgit.diff.DiffEntry.getNewId()"], "Fixed commit": "d3dfcda35c2232ff2e377778a3d23640e7f6a093", "Url": "https://api.github.com/repos/Mrbytes/gitblit", "Date": "2012-09-14T18:22:36Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.valxp.app.infiniteflightwatcher.Webservices.fetchJson(APIConstants.APICalls,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (stream == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/9069/buggy-version/app.src.main.java.com.valxp.app.infiniteflightwatcher.Webservices.java", "BodyUseAPI": [], "Fixed commit": "89d8f38582a25fdb12e13cd4223abee2aab0756f", "Url": "https://api.github.com/repos/ValXp/IFWatcher", "Date": "2014-06-28T22:41:28Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (array == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/9069/buggy-version/app.src.main.java.com.valxp.app.infiniteflightwatcher.model.Users.java", "BodyUseAPI": [], "Fixed commit": "89d8f38582a25fdb12e13cd4223abee2aab0756f", "Url": "https://api.github.com/repos/ValXp/IFWatcher", "Date": "2014-06-28T22:41:28Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.valxp.app.infiniteflightwatcher.Webservices.getJSON(APIConstants.APICalls.FLIGHT_DETAILS,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (array == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/9069/buggy-version/app.src.main.java.com.valxp.app.infiniteflightwatcher.model.Flight.java", "BodyUseAPI": [], "Fixed commit": "89d8f38582a25fdb12e13cd4223abee2aab0756f", "Url": "https://api.github.com/repos/ValXp/IFWatcher", "Date": "2014-06-28T22:41:28Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOrderState) == (com.noahark.noaharkplayer.service.MusicService.ORDER_BY_ORDER)) { if ((mRepeatState) != (com.noahark.noaharkplayer.service.MusicService.REPEAT_SINGLE)) { (mCurrPosition)++; if (((mCurrPosition) >= (mList.size())) && ((mRepeatState) == (com.noahark.noaharkplayer.service.MusicService.REPEAT_LOOP_ALL))) { mCurrPosition = 0; } } }else { if ((mRepeatState) != (com.noahark.noaharkplayer.service.MusicService.REPEAT_SINGLE)) { mCurrPosition = getRandomIndex(mList.size()); while ((mCurrPosition) == curPosition) { mCurrPosition = getRandomIndex(mList.size()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6960/buggy-version/app.src.main.java.com.noahark.noaharkplayer.service.MusicService.java", "BodyUseAPI": [], "Fixed commit": "d1ee8c951e79b9424258b2451162fedbf3cb9c6e", "Url": "https://api.github.com/repos/samlovespider/NoahArkPlayer", "Date": "2017-10-21T10:03:24Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((customerProduct.size()) > 0) { fieldPanel.add(text1); controls.add(SUBMIT); }else label1.setText(\"You cannot add a comments as you have bought no items\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8915/buggy-version/iteration7.src.UserInterfaceLayer.AddNewCommentUI.java", "BodyUseAPI": [], "Fixed commit": "0d09a724267b645984351b73e69779838c08eda0", "Url": "https://api.github.com/repos/System-Analysis-Team-9-Project-2016/DCM-Computing", "Date": "2016-04-25T13:28:20Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uniqname) != null) { prefs.edit().putString(kappathetapi.ktp.activities.HomePageActivity.HOME_PAGE_UNIQNAME, uniqname).apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4110/buggy-version/app.src.main.java.kappathetapi.ktp.activities.HomePageActivity.java", "BodyUseAPI": [], "Fixed commit": "463991b732b1a2be3c2ce5167604e8b472dd8b17", "Url": "https://api.github.com/repos/ktp-dev/KTPAndroid", "Date": "2015-03-31T00:53:38Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastClickedMember) != null) { prefs.edit().putString(kappathetapi.ktp.activities.HomePageActivity.HOME_PAGE_LAST_CLICKED_MEMBER, lastClickedMember.toJSON().toString()).apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4110/buggy-version/app.src.main.java.kappathetapi.ktp.activities.HomePageActivity.java", "BodyUseAPI": [], "Fixed commit": "463991b732b1a2be3c2ce5167604e8b472dd8b17", "Url": "https://api.github.com/repos/ktp-dev/KTPAndroid", "Date": "2015-03-31T00:53:38Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((collectedMediaItemsPerNetwork.get(net)) != null) for (eu.socialsensor.framework.common.domain.MediaItem mi : collectedMediaItemsPerNetwork.get(net)) { mediaItems.add(mi); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6214/buggy-version/src.main.java.eu.socialsensor.framework.client.dao.impl.DyscoDAOImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<eu.socialsensor.framework.common.domain.MediaItem>>.get(java.lang.String)"], "Fixed commit": "e50cb44782f84b78f7544654efabb511a3f73cac", "Url": "https://api.github.com/repos/socialsensor/socialsensor-framework-client", "Date": "2013-12-23T11:30:32Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.druid.support.http.ResourceServlet.getFilePath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (filePath.endsWith(\".html\")) { response.setContentType(\"text/html; charset=utf-8\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2493/buggy-version/src.main.java.com.alibaba.druid.support.http.ResourceServlet.java", "BodyUseAPI": [], "Fixed commit": "d0cf3614e38dabc0938b6dac31694508a7cb2e2a", "Url": "https://api.github.com/repos/yj1018/druid", "Date": "2016-02-28T13:51:29Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lv.k2611a.domain.Unit.getCurrentGoal()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentGoal != null) { if (currentGoal instanceof lv.k2611a.domain.unitgoals.Move) { if ((ticksSpentOnCurrentGoal) > 0) { lv.k2611a.domain.unitgoals.Move move = new lv.k2611a.domain.unitgoals.Move(viewDirection.apply(new lv.k2611a.util.Point(x, y))); goals.add(move); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/695/buggy-version/dune-server.src.main.java.lv.k2611a.domain.Unit.java", "BodyUseAPI": [], "Fixed commit": "c581b49bed209ab5f1f3bd02a8846402f0e44c62", "Url": "https://api.github.com/repos/imfz/d2d", "Date": "2013-01-19T21:38:22Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.round((((twister.nextGaussian()) * 2) + (be.kuleuven.cs.gametheory.experimentation.GameConfiguratorEx.STEPS)))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (steps <= 0) { steps = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2581/buggy-version/src.main.java.be.kuleuven.cs.gametheory.experimentation.GameConfiguratorEx.java", "BodyUseAPI": [], "Fixed commit": "534dbb20447e9900a31a8987bf3dd397f0aac60b", "Url": "https://api.github.com/repos/KrisC369/GridFlex-Simulator", "Date": "2015-01-03T22:16:00Z"},
{"Line": "=>1717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s != \"\") s = (s + (ASEmitterTokens.MEMBER_ACCESS.getToken())) + (name.getBaseName()); else s = name.getBaseName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7814/buggy-version/compiler-jx.src.main.java.org.apache.flex.compiler.internal.codegen.mxml.flexjs.MXMLFlexJSEmitter.java", "BodyUseAPI": [], "Fixed commit": "cf9d0f20c1873db2d23f59095d1d08db63774084", "Url": "https://api.github.com/repos/greg-dove/flex-falcon", "Date": "2016-08-17T23:00:06Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(added.containsKey(cueName))) { cuesPresent.add(csMap.get(cueName)); added.put(cueName, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3278/buggy-version/src.Helpers.PhaseParser.java", "BodyUseAPI": ["java.util.Map<java.lang.Character, java.lang.Boolean>.put(char,boolean)", "java.util.Map<java.lang.Character, Models.ConditionalStimulus>.get(char)", "java.util.List<Models.ConditionalStimulus>.add(csMap.get(cueName))"], "Fixed commit": "3c8337adae2dca5c9f8ce14509f42b4d92745ddf", "Url": "https://api.github.com/repos/cal-r/Pearce-Hall1980", "Date": "2015-11-15T12:41:23Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { indeterminate.getIndeterminateDrawable().setColorFilter(Color.WHITE, PorterDuff.Mode.SRC_IN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2047/buggy-version/titlebar.src.main.java.com.quant.titlebar.TitleBar.java", "BodyUseAPI": [], "Fixed commit": "e226ede726e1aca13d9f8766d388181a71a564b3", "Url": "https://api.github.com/repos/momodae/TitleBar", "Date": "2016-09-27T09:03:18Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getWidgetCreator().getSubTypeWriter(java.lang.String,<nulltype>,java.lang.String[],<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (subTypeWriter != null) { subTypeWriter.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6959/buggy-version/crux-dev.src.main.java.org.cruxframework.crux.core.rebind.screen.widget.creator.HasDataProviderFactory.java", "BodyUseAPI": ["org.cruxframework.crux.core.rebind.AbstractProxyCreator.SourcePrinter.commit()"], "Fixed commit": "9753dac453b866d09eac81af6accaf5f399a5ca6", "Url": "https://api.github.com/repos/thiagobustamante/crux", "Date": "2015-05-07T12:26:11Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["graph.UnidirectedGraph.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (deletedVertex != null) { for (java.lang.Integer key : vertices.keySet()) { vertices.get(key).deleteAdjEdge(vertexIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/442/buggy-version/GraphBase.src.graph.UnidirectedGraph.java", "BodyUseAPI": [], "Fixed commit": "9084a769f7539477a04eca8804c0be656fe17a1b", "Url": "https://api.github.com/repos/longbinlai/GraphBase", "Date": "2017-09-26T03:44:37Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((matrix[j][j]) > maximum) { maximum = matrix[j][j]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/251/buggy-version/src.MaximumSubarray.java", "BodyUseAPI": [], "Fixed commit": "b5ad72219adb92928e3d4623f4bd8f8ce13226bb", "Url": "https://api.github.com/repos/jeonghunyoon/data-structure", "Date": "2017-09-25T11:09:11Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(s.getName().equals(servletInfo.getName()))) { existing.addAll(s.getMappings()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2390/buggy-version/servlet.src.main.java.io.undertow.servlet.spec.ServletRegistrationImpl.java", "BodyUseAPI": ["io.undertow.servlet.api.ServletInfo.getMappings()", "java.util.Set<java.lang.String>.addAll(s.getMappings())"], "Fixed commit": "eb8c9925e0a60c203c81f80cf801989a81d16358", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2012-09-27T06:04:04Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.find()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (b) { return new org.springframework.http.ResponseEntity(new th.in.nagi.fecs.message.Message(\"Password connot use special character\"), org.springframework.http.HttpStatus.BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7900/buggy-version/src.main.java.th.in.nagi.fecs.controller.UsersController.java", "BodyUseAPI": [], "Fixed commit": "d6eb3dce8e9cc49037f99c53c78a13b1d71fadea", "Url": "https://api.github.com/repos/SixthFloor/FECS-API", "Date": "2015-12-13T07:43:09Z"},
{"Line": "=>657", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.mirrorlabs.filebrowser.FilebrowserULTRAActivity.currentdir) == null) { com.mirrorlabs.filebrowser.FilebrowserULTRAActivity.currentdir = new java.lang.String(\"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7325/buggy-version/app.src.main.java.com.mirrorlabs.filebrowser.FilebrowserULTRAActivity.java", "BodyUseAPI": [], "Fixed commit": "49eccfbb7b75c6bb8baad5b8f04086bef5c17e72", "Url": "https://api.github.com/repos/VarolOkan/UltraBrowser", "Date": "2016-12-10T10:41:11Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((angle > 10) && (angle < 80)) { positions.add(org.apache.commons.lang3.tuple.Pair.of(gagX, gagZ)); positions.add(org.apache.commons.lang3.tuple.Pair.of((gagX + 1), (gagZ - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2987/buggy-version/src.main.java.cam72cam.immersiverailroading.track.BuilderTurn.java", "BodyUseAPI": [], "Fixed commit": "84f614cf7f7a62018e78bf5de207fa6e658aa6eb", "Url": "https://api.github.com/repos/cam72cam/ImmersiveRailroading", "Date": "2017-07-16T22:45:28Z"},
{"Line": "=>671", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((partialResultsCellSizes) == 0) { clearPartialResults(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4056/buggy-version/hbase-client.src.main.java.org.apache.hadoop.hbase.client.ClientScanner.java", "BodyUseAPI": [], "Fixed commit": "f45d26190274c1f91418bb2ab440a3f8546096de", "Url": "https://api.github.com/repos/apache/hbase", "Date": "2017-03-07T14:27:06Z"},
{"Line": "=>620", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, models.Person>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((victim.father) != null) { java.lang.String fatherName = victim.father.name; models.Person father = people.get(fatherName); if (((father.father) != null) || ((father.mother) != null)) { if ((father.father) != null) { java.lang.String grandFatherName = father.father.name; models.Person grandfather = people.get(grandFatherName); java.util.List<models.Person> uncleAndAunts = grandfather.children; for (models.Person unclaunt : uncleAndAunts) { if (((unclaunt.gender) == 'F') && (!(unclaunt.name.equals(victim.father.name)))) java.lang.System.out.println((((((unclaunt.name) + \" paternal aunty of \") + v) + \". Born on \") + (unclaunt.DOB))); } }else if ((father.mother) != null) { java.lang.String grandMotherName = father.mother.name; models.Person grandmother = people.get(grandMotherName); java.util.List<models.Person> uncleAndAunts = grandmother.children; for (models.Person unclaunt : uncleAndAunts) { if (((unclaunt.gender) == 'F') && (!(unclaunt.name.equals(victim.father.name)))) java.lang.System.out.println((((((unclaunt.name) + \" paternal aunty of \") + v) + \". Born on \") + (unclaunt.DOB))); } } }else { java.lang.System.out.println(\"No paternal aunties. Kingdom is yours\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7619/buggy-version/happy-family-tree.src.controllers.FamilyDriver.java", "BodyUseAPI": ["unclaunt.name.equals(victim.father.name)", "unclaunt.name.equals(victim.father.name)"], "Fixed commit": "d8206a886c7c4dc4e4c387a48eba47885adcb861", "Url": "https://api.github.com/repos/mathana96/data-structures-java", "Date": "2017-04-24T19:38:41Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, models.Person>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((victim.father) != null) { java.lang.String fatherName = victim.father.name; models.Person father = people.get(fatherName); if (((father.father) != null) || ((father.mother) != null)) { if ((father.father) != null) { java.lang.String grandFatherName = father.father.name; models.Person grandfather = people.get(grandFatherName); java.util.List<models.Person> uncleAndAunts = grandfather.children; for (models.Person unclaunt : uncleAndAunts) { if (((unclaunt.gender) == 'M') && (!(unclaunt.name.equals(victim.father.name)))) java.lang.System.out.println((((((unclaunt.name) + \" paternal uncle of \") + v) + \". Born on \") + (unclaunt.DOB))); } }else if ((father.mother) != null) { java.lang.String grandMotherName = father.mother.name; models.Person grandmother = people.get(grandMotherName); java.util.List<models.Person> uncleAndAunts = grandmother.children; for (models.Person unclaunt : uncleAndAunts) { if (((unclaunt.gender) == 'M') && (!(unclaunt.name.equals(victim.father.name)))) java.lang.System.out.println((((((unclaunt.name) + \" paternal uncle of \") + v) + \". Born on \") + (unclaunt.DOB))); } } }else { java.lang.System.out.println(\"No paternal uncles. Kingdom is yours\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7619/buggy-version/happy-family-tree.src.controllers.FamilyDriver.java", "BodyUseAPI": ["unclaunt.name.equals(victim.father.name)", "unclaunt.name.equals(victim.father.name)"], "Fixed commit": "d8206a886c7c4dc4e4c387a48eba47885adcb861", "Url": "https://api.github.com/repos/mathana96/data-structures-java", "Date": "2017-04-24T19:38:41Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((album.settings.columnSortingMode) == null) { album.setDefaultSortingMode(MediaStore.Images.ImageColumns.DATE_TAKEN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5802/buggy-version/app.src.main.java.com.leafpic.app.MainActivity.java", "BodyUseAPI": ["com.leafpic.app.Base.Album.setDefaultSortingMode(MediaStore.Images.ImageColumns.DATE_TAKEN)"], "Fixed commit": "a5b829f3c146bd43653780573697f4bf31498bb8", "Url": "https://api.github.com/repos/gilbertndr/LeafPic", "Date": "2016-04-19T09:49:33Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(shareMoreInfoDocument))) { java.lang.String learnMore = org.researchstack.backbone.ResourcePathManager.getResourceAsString(context, ((\"html/\" + shareMoreInfoDocument) + \".html\")); consentSharingStep.setText(learnMore); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/345/buggy-version/c3-pro-android-framework.src.main.java.ch.usz.c3pro.c3_pro_android_framework.pyromaniac.logic.consent.ContractAsTask.java", "BodyUseAPI": ["org.researchstack.backbone.ResourcePathManager.getResourceAsString(android.content.Context,java.lang.String)"], "Fixed commit": "207abe4b2d27aaf9cbe67e8127a959debef6ddeb", "Url": "https://api.github.com/repos/C3-PRO/c3-pro-android-framework", "Date": "2017-03-26T02:31:15Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((user.getId()) > 0) { editor.putInt(\"id\", user.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5384/buggy-version/app.src.main.java.com.rflpazini.sdf.activities.UserNameActivity.java", "BodyUseAPI": ["com.rflpazini.sdf.model.User.getId()", "SharedPreferences.Editor.putInt(java.lang.String,user.getId())"], "Fixed commit": "32adfe9a2bc1650b62d9e6acee3aab1ef3c2144e", "Url": "https://api.github.com/repos/rflpazini/sdf-chat", "Date": "2016-11-24T17:51:36Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tp.param) instanceof io.netty.channel.ChannelHandlerContext) NettyTransport.HttpKdbServerHandler.reply(tp.param, msg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1835/buggy-version/src.main.java.kdb.Ring.java", "BodyUseAPI": ["NettyTransport.HttpKdbServerHandler.reply(tp.param,kdb.proto.XMessage.Message)"], "Fixed commit": "de011e1d55bee440e16f944b7b3d2fe0f44d9b6b", "Url": "https://api.github.com/repos/sand-stone/kdb", "Date": "2016-11-14T09:33:35Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.constellio.app.modules.rm.ui.components.document.newFile.NewFileWindow.getExtension()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(extension)) { if (((filename) == null) || (filename.equals(\"\"))) { window.showErrorMessage(\"NewFileWindow.blankFileName\"); }else { window.showErrorMessage(\"NewFileWindow.invalidFileName\", filename); } }else { window.showErrorMessage(\"NewFileWindow.fileTypeIsBlank\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/449/buggy-version/app.src.com.constellio.app.modules.rm.ui.components.document.newFile.NewFilePresenter.java", "BodyUseAPI": [], "Fixed commit": "5c6df48d6ed37a6a040d635df639a7ade1cf2597", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-10-06T20:41:41Z"},
{"Line": "=>1014", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ecocean.servlet.importer.Shepherd.getOccurrence(enc.getOccurrenceID())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((occ.getMillis()) != null) { millis = occ.getMillis(); }else if ((occ.getMillisRobust()) != null) { millis = occ.getMillisRobust(); }else { occ.setMillisFromEncounterAvg(); millis = occ.getMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7709/buggy-version/src.main.java.org.ecocean.servlet.importer.AccessImport.java", "BodyUseAPI": ["org.ecocean.servlet.importer.Occurrence.getMillis()", "org.ecocean.servlet.importer.Occurrence.setMillisFromEncounterAvg()", "org.ecocean.servlet.importer.Occurrence.getMillisRobust()", "org.ecocean.servlet.importer.Occurrence.getMillis()", "org.ecocean.servlet.importer.Occurrence.getMillisRobust()"], "Fixed commit": "c4c40790e85c347b48f502040e2ca2495999c1ab", "Url": "https://api.github.com/repos/WildbookOrg/Wildbook", "Date": "2017-10-16T20:46:56Z"},
{"Line": "=>1037", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date != (-999)) { pl = new org.ecocean.servlet.importer.PointLocation(lat, lon, date); }else { pl = new org.ecocean.servlet.importer.PointLocation(lat, lon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7709/buggy-version/src.main.java.org.ecocean.servlet.importer.AccessImport.java", "BodyUseAPI": [], "Fixed commit": "c4c40790e85c347b48f502040e2ca2495999c1ab", "Url": "https://api.github.com/repos/WildbookOrg/Wildbook", "Date": "2017-10-16T20:46:56Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edgeBehavior) == (REFLECT_MODE)) { if ((((newX < 0) || (newY < 0)) || (newX > (1.0F / radius))) || (newY > (1.0F / radius))) { continue; } }else { if (newX < 0) { newX = newX + 1; } if (newY < 0) { newY = newY + 1; } if (newX > (1.0F / radius)) { newX = PApplet.parseInt((newX - (1.0F / radius))); } if (newY > (1.0F / radius)) { newY = PApplet.parseInt((newY - (1.0F / radius))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2906/buggy-version/murali_varma_hw2.build-tmp.source.murali_varma_hw2.java", "BodyUseAPI": [], "Fixed commit": "95de09f8d0f3cb60cae8a675627c321f5d5fca7f", "Url": "https://api.github.com/repos/muraliavarma/Flocking", "Date": "2013-02-09T00:40:03Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.redhat.ceylon.common.tools.ModuleWildcardsHelper.isModuleName(filedir)) { msg = java.lang.String.format(\"ceylonc-js: Could not find source files for module: %s%n\", filedir); }else { msg = java.lang.String.format(\"ceylonc-js: file not found: %s%n\", filedir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5879/buggy-version/src.main.java.com.redhat.ceylon.compiler.js.CeylonCompileJsTool.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String)"], "Fixed commit": "4e34fa31ef15fc1f470825c8d61b266199db7a8a", "Url": "https://api.github.com/repos/ceylon/ceylon-js", "Date": "2014-04-25T12:23:36Z"},
{"Line": "=>670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.expressui.core.view.form.EntityForm.find(com.expressui.core.view.form.EntityForm.getType(),genericDao.getId(entity))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (foundEntity == null) { throw new javax.persistence.EntityNotFoundException(entity.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6391/buggy-version/expressui-core.src.main.java.com.expressui.core.view.form.EntityForm.java", "BodyUseAPI": [], "Fixed commit": "0bc2529adf8d77b4669bd3b7ee9314769ec100f2", "Url": "https://api.github.com/repos/juanosuna/expressui-framework", "Date": "2012-07-22T23:24:20Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((crouton.getActivity()) != null) && ((crouton.getView()) != null)) && ((crouton.getView().getParent()) != null)) { ((android.view.ViewGroup) (crouton.getView().getParent())).removeView(crouton.getView()); removeAllMessagesForCrouton(crouton); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6445/buggy-version/library.src.de.keyboardsurfer.android.widget.crouton.Manager.java", "BodyUseAPI": ["de.keyboardsurfer.android.widget.crouton.Manager.removeAllMessagesForCrouton(de.keyboardsurfer.android.widget.crouton.Crouton)", "((android.view.ViewGroup) (crouton.getView().getParent())).removeView(crouton.getView())", "de.keyboardsurfer.android.widget.crouton.Crouton.getView()", "crouton.getView().getParent()", "de.keyboardsurfer.android.widget.crouton.Crouton.getView()"], "Fixed commit": "744f1baec174e3401ea1538ac11d4d091148694e", "Url": "https://api.github.com/repos/keyboardsurfer/Crouton", "Date": "2012-12-15T16:29:45Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stalemate) return TieType.STALEMATE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2683/buggy-version/src.core.ChessGame.java", "BodyUseAPI": [], "Fixed commit": "2fb5bfd7c39ca832212238d775d4c5d24542731a", "Url": "https://api.github.com/repos/JRyuzaki/Chess", "Date": "2016-10-08T15:19:06Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (unit.colonizeConditionsAreMet()) { unit.establishColony(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1138/buggy-version/Project.core.src.main.java.dhbw.karlsruhe.it.solar.core.commands.ColonizeCommand.java", "BodyUseAPI": ["dhbw.karlsruhe.it.solar.core.usercontrols.SpaceUnit.establishColony()"], "Fixed commit": "fd40ffb1b32f5dd312561a1004ad68346d2b9f69", "Url": "https://api.github.com/repos/davidgiga1993/SOLAR", "Date": "2015-04-04T18:18:58Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sourceNode != targetNode) { newNode(targetNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6976/buggy-version/eu.mondo.map.modeladapter.src.eu.mondo.map.modeladapters.ModelIndexer.java", "BodyUseAPI": ["eu.mondo.map.modeladapters.ModelIndexer<N, T>.newNode(N)"], "Fixed commit": "9a35b7b1575fbfc5ccfb1186a48b1f7d9312f41e", "Url": "https://api.github.com/repos/FTSRG/graph-analyzer", "Date": "2016-07-31T10:10:41Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(option.isOther())) { mAdapter.toggle(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6631/buggy-version/app.src.main.java.com.fang.chinaindex.questionnaire.ui.fragment.MultiChoiceFragment.java", "BodyUseAPI": [], "Fixed commit": "1cd4c0a99d2f2271d7e9f498de2ac42174c9763e", "Url": "https://api.github.com/repos/Aspsine/Questionnire", "Date": "2015-06-18T06:16:52Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cache.isEmpty()) { com.google.common.collect.Iterables.addAll(cache, com.google.common.collect.Iterables.transform(getParent().getAllElements(), de.cooperateproject.modeling.textual.usecase.scoping.UseCaseAliasedScope::createAliasedDescription)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4816/buggy-version/bundles.de.cooperateproject.modeling.textual.usecase.src.de.cooperateproject.modeling.textual.usecase.scoping.UseCaseAliasedScope.java", "BodyUseAPI": ["com.google.common.collect.Iterables.addAll(java.util.Set<org.eclipse.xtext.resource.IEObjectDescription>,com.google.common.collect.Iterables.transform(getParent().getAllElements(), de.cooperateproject.modeling.textual.usecase.scoping.UseCaseAliasedScope::createAliasedDescription))"], "Fixed commit": "31e9f8dde3351dfb94487cf5df6fe4dcde0fad57", "Url": "https://api.github.com/repos/Cooperate-Project/CooperateModelingEnvironment", "Date": "2017-02-20T16:52:03Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.unh.cs.tact.Injector.guardName(edu.unh.cs.tact.Field)", "edu.unh.cs.tact.Injector.fieldFor(edu.unh.cs.tact.JavaClass,edu.unh.cs.tact.FieldInstruction)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((f.isFinal()) && (guard == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2113/buggy-version/src.edu.unh.cs.tact.Injector.java", "BodyUseAPI": [], "Fixed commit": "0068bbf6e8863fa0fcab0088ce6dca2a266a289a", "Url": "https://api.github.com/repos/mccoyst/tact", "Date": "2012-05-30T04:30:12Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(baseResource.getResourcePath().startsWith(\"blocks\"))) { baseResource = new net.minecraft.util.ResourceLocation(baseResource.getResourceDomain(), (\"blocks/\" + (baseResource.getResourcePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/116/buggy-version/src.main.java.com.teamacronymcoders.base.client.models.wrapped.WrappedBlockEntry.java", "BodyUseAPI": [], "Fixed commit": "2061d7ae8f1292732ab91cefc42a3ae4b2290048", "Url": "https://api.github.com/repos/The-Acronym-Coders/BASE", "Date": "2017-05-13T03:21:57Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (readingFromFile) { java.lang.Thread.sleep(5000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7431/buggy-version/BSMA.src.bsma.BSMA.java", "BodyUseAPI": [], "Fixed commit": "8b294a2f047d173d6ed950cd6d7052603fb01156", "Url": "https://api.github.com/repos/ritchi75/BSMA", "Date": "2015-04-24T23:23:12Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (m == null) { m = net.tsz.afinal.reflect.FieldUtils.getFieldGetMethod(clazz, fn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4041/buggy-version/src.net.tsz.afinal.reflect.FieldUtils.java", "BodyUseAPI": [], "Fixed commit": "a22ab2bd2187cdbb408348600904608a35837726", "Url": "https://api.github.com/repos/yangfuhai/afinal", "Date": "2012-12-13T14:08:09Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jme3.gde.scenecomposer.tools.shortcuts.ShortcutManager.getActivableShortcut(com.jme3.input.event.KeyInputEvent)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (newShortcut != null) { currentShortcut = newShortcut; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6172/buggy-version/sdk.jme3-scenecomposer.src.com.jme3.gde.scenecomposer.tools.shortcuts.ShortcutManager.java", "BodyUseAPI": [], "Fixed commit": "e27b8a5739cc5e6fe7e77875f705be60ca828d8f", "Url": "https://api.github.com/repos/tiatin/jmonkeyengine", "Date": "2015-05-14T17:02:35Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (ps == null) ps = pc.toPageSource(res, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1766/buggy-version/railo-java.railo-core.src.railo.runtime.orm.hibernate.HibernateSessionFactory.java", "BodyUseAPI": [], "Fixed commit": "a723e0fcd39d7182dd8368a7122e848985add412", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-07-21T16:57:26Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["railo.commons.io.res.util.ResourceUtil.getPathToChild(railo.commons.io.res.Resource,railo.commons.io.res.Resource)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(railo.commons.lang.StringUtil.isEmpty(path, true))) { ps = cfclocation.getPageSource(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1766/buggy-version/railo-java.railo-core.src.railo.runtime.orm.hibernate.HibernateSessionFactory.java", "BodyUseAPI": ["railo.runtime.Mapping.getPageSource(java.lang.String)"], "Fixed commit": "a723e0fcd39d7182dd8368a7122e848985add412", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-07-21T16:57:26Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getItem(position)) == (this.getItem(2))) medalImage.setImageDrawable(v.getResources().getDrawable(R.drawable.medal3));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2176/buggy-version/app.src.main.java.com.gachon.app.helper.GroupRankAdapter.java", "BodyUseAPI": [], "Fixed commit": "8fcb511e6140e756997aca050fda3545f62061bc", "Url": "https://api.github.com/repos/garyGitgit/CodingStarter", "Date": "2017-06-06T17:00:24Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getItem(position)) == (this.getItem(1))) medalImage.setImageDrawable(v.getResources().getDrawable(R.drawable.medal2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2176/buggy-version/app.src.main.java.com.gachon.app.helper.GroupRankAdapter.java", "BodyUseAPI": [], "Fixed commit": "8fcb511e6140e756997aca050fda3545f62061bc", "Url": "https://api.github.com/repos/garyGitgit/CodingStarter", "Date": "2017-06-06T17:00:24Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getItem(position)) == (this.getItem(0))) medalImage.setImageDrawable(v.getResources().getDrawable(R.drawable.medal1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2176/buggy-version/app.src.main.java.com.gachon.app.helper.GroupRankAdapter.java", "BodyUseAPI": [], "Fixed commit": "8fcb511e6140e756997aca050fda3545f62061bc", "Url": "https://api.github.com/repos/garyGitgit/CodingStarter", "Date": "2017-06-06T17:00:24Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (java.lang.Character.isISOControl(chr)) { sb.append(\"#x\"); sb.append(java.lang.Integer.toHexString(chr)); sb.append(';'); }else { sb.append(chr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8011/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.XMLLogger.java", "BodyUseAPI": ["java.lang.Integer.toHexString(char)", "java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "60239d5823db58259ce5cd511dc66a821e5443e8", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2017-09-29T14:32:46Z"},
{"Line": "=>1027", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vp_menu_ad.getCurrentItem()) == 0) { tv_title.setText(this.getResources().getString(R.string.company_name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/306/buggy-version/Telephonelingxi.Telephone.src.com.example.telphone.activity.Container.java", "BodyUseAPI": [], "Fixed commit": "f6e639c77279ba1dffd7bc5391b7e288aea75d94", "Url": "https://api.github.com/repos/ysh512/Telephone", "Date": "2016-10-17T11:17:47Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (it.jaschke.alexandria.Utility.hasNetWorkConnectivity(context)) { new it.jaschke.alexandria.services.DownloadImage(viewHolder.bookCover).execute(imgUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1741/buggy-version/app.src.main.java.it.jaschke.alexandria.api.BookListAdapter.java", "BodyUseAPI": [], "Fixed commit": "3d3832b4e285c4732496fec94fd6ea57ca92fc65", "Url": "https://api.github.com/repos/jerrykuru/alexandria", "Date": "2016-02-10T19:10:25Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (it.jaschke.alexandria.Utility.hasNetWorkConnectivity(getActivity())) { android.content.Intent bookIntent = new android.content.Intent(getActivity(), it.jaschke.alexandria.services.BookService.class); bookIntent.putExtra(BookService.EAN, ean); bookIntent.setAction(BookService.FETCH_BOOK); getActivity().startService(bookIntent); this.restartLoader(); }else { java.lang.CharSequence text = \"No Network Connection, this function will not work without network connectivity\"; int duration = android.widget.Toast.LENGTH_SHORT; android.widget.Toast toast = android.widget.Toast.makeText(getActivity(), text, duration); toast.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1741/buggy-version/app.src.main.java.it.jaschke.alexandria.AddBook.java", "BodyUseAPI": [], "Fixed commit": "3d3832b4e285c4732496fec94fd6ea57ca92fc65", "Url": "https://api.github.com/repos/jerrykuru/alexandria", "Date": "2016-02-10T19:10:25Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (site.isStop) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2924/buggy-version/src.main.java.org.eweb4j.spiderman.spider.Spiderman.java", "BodyUseAPI": [], "Fixed commit": "3daa9c6968d8ff7074fd0ca91ad14ca0420f74ef", "Url": "https://api.github.com/repos/laiweiwei/spiderman", "Date": "2013-02-22T12:01:57Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (site.isStop) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2924/buggy-version/src.main.java.org.eweb4j.spiderman.spider.Spiderman.java", "BodyUseAPI": [], "Fixed commit": "3daa9c6968d8ff7074fd0ca91ad14ca0420f74ef", "Url": "https://api.github.com/repos/laiweiwei/spiderman", "Date": "2013-02-22T12:01:57Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (site.isStop) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2924/buggy-version/src.main.java.org.eweb4j.spiderman.spider.Spiderman.java", "BodyUseAPI": [], "Fixed commit": "3daa9c6968d8ff7074fd0ca91ad14ca0420f74ef", "Url": "https://api.github.com/repos/laiweiwei/spiderman", "Date": "2013-02-22T12:01:57Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (data != null) { id.co.veritrans.sdk.coreflow.models.TransactionResponse response = ((id.co.veritrans.sdk.coreflow.models.TransactionResponse) (data.getSerializableExtra(getString(R.string.transaction_response)))); id.co.veritrans.sdk.coreflow.core.Logger.d(id.co.veritrans.sdk.uiflow.activities.PaymentMethodsActivity.TAG, (\"sending result transaction canceled \" + requestCode)); if (response != null) { id.co.veritrans.sdk.coreflow.eventbus.bus.VeritransBusProvider.getInstance().post(new id.co.veritrans.sdk.coreflow.eventbus.events.TransactionFinishedEvent(response)); }else { id.co.veritrans.sdk.coreflow.eventbus.bus.VeritransBusProvider.getInstance().post(new id.co.veritrans.sdk.coreflow.eventbus.events.TransactionFinishedEvent(true)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4572/buggy-version/uiflow.src.main.java.id.co.veritrans.sdk.uiflow.activities.PaymentMethodsActivity.java", "BodyUseAPI": ["android.content.Intent.getSerializableExtra(getString(R.string.transaction_response))"], "Fixed commit": "42f7865140c6665c5940e1873333feb3c0d09161", "Url": "https://api.github.com/repos/veritrans/veritrans-android", "Date": "2016-12-02T03:15:02Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((teacher.birthday) != null) jTextField_birthday.setText(teacher.birthday.toString()); else jTextField_birthday.setText(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7912/buggy-version/src.infoadminsys.ui.TeacherUI.java", "BodyUseAPI": ["teacher.birthday.toString()", "javax.swing.JTextField.setText(teacher.birthday.toString())"], "Fixed commit": "89b58643471ca1f2251be722e471c915393d81d3", "Url": "https://api.github.com/repos/SHiftLin/InfoAdminSys", "Date": "2017-05-03T06:34:06Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(updatedPatientPersonalHistory.getIncomeSource())) { org.openmrs.module.patientdashboardapp.patienthistory.PatientPersonalHistorySaveHandler.patientPersonalHistory.setIncomeSource(updatedPatientPersonalHistory.getIncomeSource()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7249/buggy-version/omod.src.main.java.org.openmrs.module.patientdashboardapp.patienthistory.PatientPersonalHistorySaveHandler.java", "BodyUseAPI": ["org.openmrs.module.hospitalcore.model.PatientPersonalHistory.setIncomeSource(updatedPatientPersonalHistory.getIncomeSource())", "org.openmrs.module.hospitalcore.model.PatientPersonalHistory.getIncomeSource()"], "Fixed commit": "51c0edf0be174dc03c74d118c4b269759794d297", "Url": "https://api.github.com/repos/bespokeinteractive/patientdashboardapp", "Date": "2016-04-06T14:38:29Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(updatedPatientPersonalHistory.getOtherHelp())) { org.openmrs.module.patientdashboardapp.patienthistory.PatientPersonalHistorySaveHandler.patientPersonalHistory.setOtherHelp(updatedPatientPersonalHistory.getOtherHelp()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7249/buggy-version/omod.src.main.java.org.openmrs.module.patientdashboardapp.patienthistory.PatientPersonalHistorySaveHandler.java", "BodyUseAPI": ["org.openmrs.module.hospitalcore.model.PatientPersonalHistory.setOtherHelp(updatedPatientPersonalHistory.getOtherHelp())", "org.openmrs.module.hospitalcore.model.PatientPersonalHistory.getOtherHelp()"], "Fixed commit": "51c0edf0be174dc03c74d118c4b269759794d297", "Url": "https://api.github.com/repos/bespokeinteractive/patientdashboardapp", "Date": "2016-04-06T14:38:29Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(updatedPatientPersonalHistory.getFamilyHelp())) { org.openmrs.module.patientdashboardapp.patienthistory.PatientPersonalHistorySaveHandler.patientPersonalHistory.setFamilyHelp(updatedPatientPersonalHistory.getFamilyHelp()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7249/buggy-version/omod.src.main.java.org.openmrs.module.patientdashboardapp.patienthistory.PatientPersonalHistorySaveHandler.java", "BodyUseAPI": ["org.openmrs.module.hospitalcore.model.PatientPersonalHistory.getFamilyHelp()", "org.openmrs.module.hospitalcore.model.PatientPersonalHistory.setFamilyHelp(updatedPatientPersonalHistory.getFamilyHelp())"], "Fixed commit": "51c0edf0be174dc03c74d118c4b269759794d297", "Url": "https://api.github.com/repos/bespokeinteractive/patientdashboardapp", "Date": "2016-04-06T14:38:29Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((RouletteManager.CHANNELS_ROULETTE.putIfAbsent(context.getChannel().getLongID(), rouletteManager)) == null) { rouletteManager.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/9012/buggy-version/src.me.shadorc.discordbot.command.game.roulette.RouletteCmd.java", "BodyUseAPI": ["me.shadorc.discordbot.command.game.roulette.RouletteManager.start()"], "Fixed commit": "05f3d1acf200594e8cdc53243b589d7943613d17", "Url": "https://api.github.com/repos/Shadorc/Shadbot", "Date": "2017-12-17T13:59:30Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.SystemClock.elapsedRealtime()", "com.technoxist.utils.PrefUtils.getLong(PrefUtils.LAST_SCHEDULED_REFRESH,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (elapsedRealTime < lastRefresh) { lastRefresh = 0; com.technoxist.utils.PrefUtils.putLong(PrefUtils.LAST_SCHEDULED_REFRESH, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8989/buggy-version/src.com.technoxist.service.RefreshService.java", "BodyUseAPI": [], "Fixed commit": "7a7eb35ed6cadea33a602ee7ca704aeb11701105", "Url": "https://api.github.com/repos/suyash1629/technoXist", "Date": "2014-10-24T00:15:16Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.SystemClock.elapsedRealtime()", "com.technoxist.utils.PrefUtils.getLong(PrefUtils.LAST_SCHEDULED_REFRESH,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (elapsedRealTime < lastRefresh) { lastRefresh = 0; com.technoxist.utils.PrefUtils.putLong(PrefUtils.LAST_SCHEDULED_REFRESH, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8989/buggy-version/src.com.technoxist.receiver.ConnectionChangeReceiver.java", "BodyUseAPI": [], "Fixed commit": "7a7eb35ed6cadea33a602ee7ca704aeb11701105", "Url": "https://api.github.com/repos/suyash1629/technoXist", "Date": "2014-10-24T00:15:16Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (typeToCheck == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6927/buggy-version/src.main.java.com.adobe.epubcheck.util.SearchDictionary.java", "BodyUseAPI": [], "Fixed commit": "19eb232d2d903275b68be9dacf5c4fe7de6890d3", "Url": "https://api.github.com/repos/IDPF/epubcheck", "Date": "2014-05-27T18:00:01Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCurrentToken(TokenType.OPERATOR, \"=\")) { readNT(); procE(); buildNAryASTNode(ASTNodeType.EQUAL, 2); }else { int treesToPop = 0; while ((isCurrentTokenType(TokenType.IDENTIFIER)) || (isCurrentTokenType(TokenType.L_PAREN))) { procVB(); treesToPop++; } if (treesToPop == 0) throw new com.neeraj2608.rpalinterpreter.parser.ParseException(\"E: at least one 'Vb' expected\"); if (!(isCurrentToken(TokenType.OPERATOR, \"=\"))) throw new com.neeraj2608.rpalinterpreter.parser.ParseException(\"DB: = expected.\"); readNT(); procE(); buildNAryASTNode(ASTNodeType.FCNFORM, (treesToPop + 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5203/buggy-version/src.com.neeraj2608.rpalinterpreter.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "b10c5272acace1137cf4f5a6b3219076496fc346", "Url": "https://api.github.com/repos/neeraj2608/RPAL-Interpreter", "Date": "2014-03-22T19:05:28Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getDatatype().equals(XSD.dateTime.getURI())) { int ms = ((int) (java.lang.Math.round((1000.0 * ((xdt.getSeconds()) - (xdt.getFullSeconds())))))); org.joda.time.DateTime jdt = new org.joda.time.DateTime(xdt.getYears(), xdt.getMonths(), xdt.getDays(), xdt.getHours(), xdt.getMinutes(), xdt.getFullSeconds(), ms, org.joda.time.DateTimeZone.UTC); return jdt; }else if (getDatatype().equals(XSD.date.getURI())) { return new org.joda.time.DateTime(xdt.getYears(), xdt.getMonths(), xdt.getDays(), 0, 0); }else if (getDatatype().equals(XSD.gYearMonth.getURI())) { return new org.joda.time.DateTime(xdt.getYears(), xdt.getMonths(), 0, 0, 0); }else if (getDatatype().equals(XSD.gYear.getURI())) { return new org.joda.time.DateTime(xdt.getYears(), 1, 0, 0, 0); }else { throw new com.epimorphics.util.EpiException((\"Unsupport date time format: \" + (getDatatype()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8483/buggy-version/src.main.java.com.epimorphics.dclib.values.ValueDate.java", "BodyUseAPI": [], "Fixed commit": "2e8994ddbe3e80ccf38c7168256e0fb0f474d051", "Url": "https://api.github.com/repos/epimorphics/dclib", "Date": "2014-10-03T17:40:03Z"},
{"Line": "=>842", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((ret != null) && (ret != \"\")) { this.nodeStatus += this.getConsoleStatusLine(\"ok\", \"node is online\"); }else { this.nodeStatus += this.getConsoleStatusLine(\"error\", \"node is offline\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4278/buggy-version/extensions.ui.org.eclipse.smarthome.ui.nodemgmt.src.main.java.org.eclipse.smarthome.ui.nodemgmt.internal.NodeController.java", "BodyUseAPI": [], "Fixed commit": "7076668641013b6da0f3c63bc344d4321ae00ea3", "Url": "https://api.github.com/repos/neverend92/smarthome", "Date": "2017-03-15T19:34:25Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.extensions) != null) { return this.extensions; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4278/buggy-version/extensions.ui.org.eclipse.smarthome.ui.nodemgmt.src.main.java.org.eclipse.smarthome.ui.nodemgmt.internal.NodeImpl.java", "BodyUseAPI": [], "Fixed commit": "7076668641013b6da0f3c63bc344d4321ae00ea3", "Url": "https://api.github.com/repos/neverend92/smarthome", "Date": "2017-03-15T19:34:25Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (msg != null) if ((ioio.examples.hello.GameActivity.ga.iPopWindow) != null) ioio.examples.hello.GameActivity.ga.iPopWindow.showPopWindow(msg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3191/buggy-version/src.ioio.examples.hello.GameActivity.java", "BodyUseAPI": ["game.interaction.InteractivePopupWindowHandler.showPopWindow(java.lang.String)"], "Fixed commit": "f2259938004570ca36e9346e4577f0dc45b1c093", "Url": "https://api.github.com/repos/aclin/AlcoholIOIO", "Date": "2013-01-07T10:11:09Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((popupWindow.isShowing()) == false) { java.lang.String cn = ga.getInteractiveGameHandler().getCodeNameByPID(pid); popText.setText((cn + \"\\n\\u70ba\\u60a8\\u52a0\\u6cb9\")); popupWindow.setOutsideTouchable(false); bg.post(showThread); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3191/buggy-version/src.game.interaction.InteractivePopupWindowHandler.java", "BodyUseAPI": ["android.widget.PopupWindow.setOutsideTouchable(boolean)"], "Fixed commit": "f2259938004570ca36e9346e4577f0dc45b1c093", "Url": "https://api.github.com/repos/aclin/AlcoholIOIO", "Date": "2013-01-07T10:11:09Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newSuperClasses.contains(cls)) { throw new com.orientechnologies.orient.core.exception.OSchemaException(((\"Duplicated superclass '\" + (cls.getName())) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/533/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.schema.OClassImpl.java", "BodyUseAPI": ["com.orientechnologies.orient.core.metadata.schema.OClassImpl.getName()"], "Fixed commit": "80e2b291f186dd1e98b1ee4352c37db1a0d86f02", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-01-12T12:12:41Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (leader != null) { leaders.add(leader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1157/buggy-version/lams_tool_doku.src.java.org.lamsfoundation.lams.tool.dokumaran.service.DokumaranService.java", "BodyUseAPI": ["java.util.List<org.lamsfoundation.lams.tool.dokumaran.model.DokumaranUser>.add(org.lamsfoundation.lams.tool.dokumaran.model.DokumaranUser)"], "Fixed commit": "07606911dd9455c7f26e822470fc007343174763", "Url": "https://api.github.com/repos/lamsfoundation/lams", "Date": "2017-03-07T09:41:25Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (id != null) { esQuery = (((((((((\"{\\n\" + (((\" \\\"query\\\": {\\n\" + \" \\\"bool\\\":{\\n\") + \" \\\"should\\\": [\\n\") + \" {\\\"term\\\": {\\\"identifiers\\\": {\\\"value\\\":\\\"\")) + identifier) + \"\\\" }}},\\n\") + \" {\\\"term\\\": {\\\"id\\\": {\\\"value\\\":\\\"\") + (id.toString())) + \"\\\" }}}\\n\") + \" ]\\n\") + \" }\\n\") + \" }\\n\") + \"}\"; }else { esQuery = ((((((\"{\\n\" + (((\" \\\"query\\\": {\\n\" + \" \\\"bool\\\":{\\n\") + \" \\\"should\\\": [\\n\") + \" {\\\"term\\\": {\\\"identifiers\\\": {\\\"value\\\":\\\"\")) + identifier) + \"\\\" }}},\\n\") + \" ]\\n\") + \" }\\n\") + \" }\\n\") + \"}\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5435/buggy-version/src.main.java.eu.openminted.content.connector.core.util.ElasticsearchConverter.java", "BodyUseAPI": ["java.lang.Integer.toString()"], "Fixed commit": "c3d636db61a8e5cb2d52489a8a6680d5ae1dcc64", "Url": "https://api.github.com/repos/openminted/content-connector-core", "Date": "2017-07-21T12:23:28Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (unfinished <= 0) { edu.teco.dnd.util.JoinedFutureNotifier.setSuccess(new java.util.ArrayList<T>()); }else { for (edu.teco.dnd.util.FutureNotifier<? extends T> future : this.futures) { future.addListener(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6399/buggy-version/DND.src.edu.teco.dnd.util.JoinedFutureNotifier.java", "BodyUseAPI": [], "Fixed commit": "9133619b4a7dbb36c787845f46162b9007a4038d", "Url": "https://api.github.com/repos/DesignAndDeploy/dnd", "Date": "2013-08-06T16:39:13Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((event.getAction()) != (org.bukkit.event.block.Action.RIGHT_CLICK_BLOCK)) && ((event.getAction()) != (org.bukkit.event.block.Action.PHYSICAL))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8361/buggy-version/src.com.massivecraft.factions.listeners.FactionsPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "2f80787edd3fe392736f0d91612fa5a1a619ca1f", "Url": "https://api.github.com/repos/Tahkeh/Factions", "Date": "2012-11-06T21:01:37Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chessgame.GameFrame.Tiles[i][j].getPiece()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(ThisPiece instanceof chessgame.King)) { if (ThisPiece.canKill(chessgame.GameFrame.Tiles[i][j], ThreatTile)) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6949/buggy-version/src.chessgame.GameFrame.java", "BodyUseAPI": ["chessgame.Piece.canKill(chessgame.GameFrame.Tiles[i][j],chessgame.Tile)"], "Fixed commit": "97c091e7e92c20bb4df1c47021c21cafc46a291d", "Url": "https://api.github.com/repos/AlyMohamedAly/ChessGame", "Date": "2017-10-30T17:43:41Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chessgame.GameFrame.getOtherKing(chessgame.Piece)", "chessgame.King.getColor()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (CheckStaleMate(currentKing, MyColor)) { if (!(CanKingMove(currentKing))) { javax.swing.JOptionPane.showMessageDialog(null, \"Draw!\", \"Game Over\", javax.swing.JOptionPane.PLAIN_MESSAGE); java.lang.System.exit(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6949/buggy-version/src.chessgame.GameFrame.java", "BodyUseAPI": ["chessgame.GameFrame.CanKingMove(chessgame.King)"], "Fixed commit": "97c091e7e92c20bb4df1c47021c21cafc46a291d", "Url": "https://api.github.com/repos/AlyMohamedAly/ChessGame", "Date": "2017-10-30T17:43:41Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ch == ')') { bracesBlock--; }else if (ch == '[') { bracesBlock++; }else if (ch == ']') { bracesBlock--; }else if (((ch == (de.neuland.jade4j.util.ArgumentSplitter.argumentDelimiter)) && (!insideQuotas)) && (bracesBlock == 0)) { pushArg(sb); sb = new java.lang.StringBuilder(argLength); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6647/buggy-version/src.main.java.de.neuland.jade4j.util.ArgumentSplitter.java", "BodyUseAPI": [], "Fixed commit": "4d34c07f1f04b76e6e180e3a9487279c57d4bf2e", "Url": "https://api.github.com/repos/FlakyTestDetection/jade4j", "Date": "2017-09-28T14:57:38Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ilarkesto.gwt.client.CodemirrorEditorWidget.editorGetCode(com.google.gwt.core.client.JavaScriptObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ilarkesto.core.base.Str.isBlank(text)) text = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7256/buggy-version/src.main.java.ilarkesto.gwt.client.CodemirrorEditorWidget.java", "BodyUseAPI": [], "Fixed commit": "9fa2fee3e4a3a7282e7c9866405e887f998f578a", "Url": "https://api.github.com/repos/Kunagi/ilarkesto", "Date": "2011-07-07T13:26:22Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.user.client.ui.TextBox.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ilarkesto.core.base.Str.isBlank(text)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7256/buggy-version/src.main.java.ilarkesto.gwt.client.editor.TextEditorWidget.java", "BodyUseAPI": [], "Fixed commit": "9fa2fee3e4a3a7282e7c9866405e887f998f578a", "Url": "https://api.github.com/repos/Kunagi/ilarkesto", "Date": "2011-07-07T13:26:22Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ilarkesto.gwt.client.CodemirrorEditorWidget.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ilarkesto.core.base.Str.isBlank(text)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7256/buggy-version/src.main.java.ilarkesto.gwt.client.editor.RichtextEditorWidget.java", "BodyUseAPI": [], "Fixed commit": "9fa2fee3e4a3a7282e7c9866405e887f998f578a", "Url": "https://api.github.com/repos/Kunagi/ilarkesto", "Date": "2011-07-07T13:26:22Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lastElement > (-1)) key = this.ausgaben.get(lastElement).getKey(); else key = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3058/buggy-version/Bilancio.src.model.BudgetPlanModel.java", "BodyUseAPI": ["java.util.List<model.Posten>.get(int)", "this.ausgaben.get(lastElement).getKey()"], "Fixed commit": "f5be8a294b07937346e8147b21bc2c6f4905ea57", "Url": "https://api.github.com/repos/SoftechUniKL/BILANCIO", "Date": "2015-07-30T09:20:29Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (bookTitle.isEmpty()) { bookTitle = bookName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7377/buggy-version/app.src.main.java.com.door43.translationstudio.core.ExportUsfm.java", "BodyUseAPI": [], "Fixed commit": "5f20f9812efe174020f7ca2c538255c29534e667", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2017-02-16T18:44:44Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.door43.translationstudio.core.ProjectTranslation.getTitle()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (title.isEmpty()) { org.unfoldingword.resourcecontainer.Project project = com.door43.translationstudio.App.getLibrary().index.getProject(targetTranslation.getTargetLanguageId(), targetTranslation.getProjectId(), true); if ((project != null) && ((project.name) != null)) { title = project.name; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7377/buggy-version/app.src.main.java.com.door43.translationstudio.core.PdfPrinter.java", "BodyUseAPI": [], "Fixed commit": "5f20f9812efe174020f7ca2c538255c29534e667", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2017-02-16T18:44:44Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(user.getSavedUniversities().contains(u))) { boolean temp = user.addUniversities(u); if (temp) controllers.DBController.saveSchool(user.getUsername(), u.getName()); return temp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8398/buggy-version/src.controllers.UserFuncController.java", "BodyUseAPI": ["baseclasses.User.addUniversities(baseclasses.University)", "baseclasses.User.getUsername()", "controllers.DBController.saveSchool(user.getUsername(),u.getName())", "baseclasses.University.getName()"], "Fixed commit": "b788079fb985a1beb40796658e3286df4b109657", "Url": "https://api.github.com/repos/nullpm/cmcprojectv2", "Date": "2017-03-26T20:20:01Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.getData()) != null) { if ((result.getData().getName().matches(\"(http|ftp|https).*\")) && (result.getData().getName().contains(\"/\"))) { java.lang.String folder = result.getData().getName().substring(0, result.getData().getName().lastIndexOf(\"/\")); if (!(addedLinks.contains(folder))) { java.lang.StringBuilder sb = new java.lang.StringBuilder(); sb.append(\"link(\").append(folder).append(\"->\"); sb.append(result.getData().getType().getName()).append(\")\"); addedLinks.add(folder); assayTypeToInfo.get(type).addAccession(sb.toString()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2840/buggy-version/model.src.main.java.uk.ac.ebi.bioinvindex.search.hibernatesearch.bridge.AssayBridge.java", "BodyUseAPI": ["result.getData().getName().matches(java.lang.String)", "uk.ac.ebi.bioinvindex.model.AssayResult.getData()", "uk.ac.ebi.bioinvindex.model.AssayResult.getData()", "result.getData().getName().contains(java.lang.String)", "uk.ac.ebi.bioinvindex.model.AssayResult.getData()", "result.getData().getName()", "result.getData().getName().lastIndexOf(java.lang.String)", "result.getData().getName()", "result.getData().getName()", "result.getData().getType().getName()", "java.lang.StringBuilder.append(java.lang.String)", "result.getData().getType()", "java.lang.StringBuilder.append(result.getData().getType().getName())", "result.getData().getName().substring(int,result.getData().getName().lastIndexOf(\"/\"))", "uk.ac.ebi.bioinvindex.model.AssayResult.getData()", "uk.ac.ebi.bioinvindex.model.AssayResult.getData()", "result.getData().getName()"], "Fixed commit": "a0f167e26f5d4abb1efa802ad34f82186a035d8f", "Url": "https://api.github.com/repos/EBI-Metabolights/BioInvIndex", "Date": "2012-02-20T09:38:21Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ikkerens.skyblock.model.SkyBlockWorld.getSegment(com.mbserver.api.game.Player)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (segment == null) { segment = world.grant(player); if (setspawn) player.setSpawn(segment.getSpawn()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4604/buggy-version/src.com.ikkerens.skyblock.events.SkyBlockEntryListener.java", "BodyUseAPI": [], "Fixed commit": "ff3e71e603fe3926306a4c88c94b9d213eaff619", "Url": "https://api.github.com/repos/Ikkerens/MBSkyBlock", "Date": "2014-11-19T13:08:44Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.isVisible()) && ((this.getActivity()) != null)) { android.widget.Toast.makeText(this.getActivity(), result.getError().getLocalizedMessage(), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2232/buggy-version/app.src.main.java.net.furtherreach.celerateinstallationhelper.fragments.NetworkAssociationFragment.java", "BodyUseAPI": [], "Fixed commit": "5b564d04a0d110c17b62e38ac2030f39fe834644", "Url": "https://api.github.com/repos/denovogroup/Celerate-installation-helper", "Date": "2017-11-22T09:24:15Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getView().findViewById(R.id.connectionProgress)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (connectionProgress != null) { connectionProgress.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2232/buggy-version/app.src.main.java.net.furtherreach.celerateinstallationhelper.fragments.ConnectionFragment.java", "BodyUseAPI": ["android.view.View.setVisibility(View.GONE)"], "Fixed commit": "5b564d04a0d110c17b62e38ac2030f39fe834644", "Url": "https://api.github.com/repos/denovogroup/Celerate-installation-helper", "Date": "2017-11-22T09:24:15Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.name) != null) && (!(this.name.equals(name)))) { this.name.getRegistrations().remove(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2282/buggy-version/cdmlib-model.src.main.java.eu.etaxonomy.cdm.model.name.Registration.java", "BodyUseAPI": ["eu.etaxonomy.cdm.model.name.TaxonName.getRegistrations()", "this.name.getRegistrations().remove(eu.etaxonomy.cdm.model.name.Registration)"], "Fixed commit": "fd0b01e5e540f11c7880e236c3d41308499b3eac", "Url": "https://api.github.com/repos/cybertaxonomy/cdmlib", "Date": "2017-09-14T09:08:32Z"},
{"Line": "=>744", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_eventThread) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5371/buggy-version/src.main.java.com.github.zkclient.ZkClient.java", "BodyUseAPI": [], "Fixed commit": "510afdbfbeaca904e233919f9a582b0a20dfe357", "Url": "https://api.github.com/repos/adyliu/zkclient", "Date": "2013-12-16T04:57:10Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.faces.context.FacesContext.getCurrentInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((instance != null) && ((instance.getViewRoot()) != null)) { instance.getViewRoot().setLocale(locale); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6908/buggy-version/web.src.main.java.br.uff.ic.oceano.controller.SessaoDoUsuario.java", "BodyUseAPI": ["javax.faces.context.FacesContext.getViewRoot()", "instance.getViewRoot().setLocale(java.util.Locale)"], "Fixed commit": "ee19a73feca3bab21e3049da0e7a2715f2ac938b", "Url": "https://api.github.com/repos/gems-uff/oceano", "Date": "2013-10-21T23:54:26Z"},
{"Line": "=>841", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((opts.getLogDir()) != null) && ((testPath) != null)) { java.lang.String logDir = ((opts.getLogDir()) + \"/\") + (testPath); addMissingInfo(logDir, test.getResult()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/22/buggy-version/teamengine-core.src.main.java.com.occamlab.te.TECore.java", "BodyUseAPI": ["com.occamlab.te.RuntimeOptions.getLogDir()"], "Fixed commit": "e45f5cdd00111edd6b76fd8298218dc52ca7ca5e", "Url": "https://api.github.com/repos/opengeospatial/teamengine", "Date": "2016-08-03T04:10:25Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filled) { if (checkSudoku()) { new android.app.AlertDialog.Builder(this).setMessage(\"Congratulations, you won\").setTitle(\"Congrats\").show(); } }else { new android.app.AlertDialog.Builder(this).setTitle(\"Save Game?\").setMessage(\"Would you like to save and exit game?\").setPositiveButton(\"YES\", null).setNegativeButton(\"NO\", null).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6737/buggy-version/app.src.main.java.edu.uwi.sta.educationalgamesuite.PlaySudokuActivity.java", "BodyUseAPI": [], "Fixed commit": "871ef55e35fd8f72ee8b758a052153203daa3199", "Url": "https://api.github.com/repos/Danelle-Modeste/EducationalGameSuite", "Date": "2016-04-22T02:50:08Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.ualberta.cs.cmput301f14t14.questionapp.data.DataManager.load()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(qlist.contains(dm.getQuestion(q)))) { qlist.add(dm.getQuestion(q)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6090/buggy-version/QuestionApp.src.ca.ualberta.cs.cmput301f14t14.questionapp.MainActivity.java", "BodyUseAPI": ["java.util.List<ca.ualberta.cs.cmput301f14t14.questionapp.model.Question>.add(dm.getQuestion(q))", "ca.ualberta.cs.cmput301f14t14.questionapp.data.DataManager.getQuestion(java.util.UUID)"], "Fixed commit": "586e4afc1fcf65c5cb2f4394cd44f19aed106d27", "Url": "https://api.github.com/repos/RyanKusters/Project", "Date": "2014-11-18T01:16:30Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cvc4) { pw.println(\"OPTION \\\"produce-models\\\";\"); if (Config.instance.printFormulaAndSolutions) { java.lang.System.out.println(\"OPTION \\\"produce-models\\\";\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7717/buggy-version/src.janala.solvers.CVC3Solver.java", "BodyUseAPI": [], "Fixed commit": "5e45905006a46b65ab988f8e66bc182948a67203", "Url": "https://api.github.com/repos/ksen007/janala2", "Date": "2014-05-26T17:39:34Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.progressDialog) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/268/buggy-version/android.src.main.java.com.dialogprogress.DialogProgressModule.java", "BodyUseAPI": [], "Fixed commit": "ed3fa813382d52da78d6ff394301c50247447655", "Url": "https://api.github.com/repos/cleandersonlobo/react-native-dialog-progress", "Date": "2017-09-20T03:15:12Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["joptsimple.OptionSet.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (printChartFeatures) { parser.printFeatures(outFeatures, parser.sentence); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/74/buggy-version/src.ParserBeam.java", "BodyUseAPI": [], "Fixed commit": "04ecfe87bf8b62ec798a913ccef92575b3e65c58", "Url": "https://api.github.com/repos/darrenfoong/candc", "Date": "2016-05-02T15:40:18Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hwDir.exists()) == false) return new java.util.ArrayList<java.io.File>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7630/buggy-version/modules.hw.src.main.java.org.myftp.gattserver.grass3.hw.facade.HWFacade.java", "BodyUseAPI": [], "Fixed commit": "deb439eb38aaf3e7ee3a7f9b42ccf747756b669a", "Url": "https://api.github.com/repos/gattaka/grass3-vaadin-osgi", "Date": "2013-06-21T16:29:01Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((request.getTag()) instanceof java.lang.String) && (tag instanceof java.lang.String)) { final java.lang.String tempRequestTag = ((java.lang.String) (request.getTag())); final java.lang.String tempTag = ((java.lang.String) (tag)); return tempRequestTag.equals(tempTag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6383/buggy-version/android-networking.src.main.java.com.androidnetworking.internal.ANRequestQueue.java", "BodyUseAPI": ["com.androidnetworking.common.ANRequest.getTag()"], "Fixed commit": "9f0d0d253ac302e582e0fa426a7306a4bda423fa", "Url": "https://api.github.com/repos/amitshekhariitbhu/Fast-Android-Networking", "Date": "2016-09-14T19:13:28Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (edit != null) M.add(edit);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/35/buggy-version/src.main.java.zhangshasha.TreeDiffer.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "675df3a075b25c15a9c0c5d10375645e9a0eca64", "Url": "https://api.github.com/repos/glennhanawalt95/Conflerge", "Date": "2017-03-09T20:33:23Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((instances.size()) == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4558/buggy-version/part2.src.main.DecisionTreeClassifier.java", "BodyUseAPI": [], "Fixed commit": "99580e1e21f4f71422f44423c2bed3ca995cd144", "Url": "https://api.github.com/repos/thelollies/307A1", "Date": "2014-04-01T00:56:53Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"Number\".equals(child.getName())) vars.add(child.getValue().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2125/buggy-version/src.main.java.org.netkernelroc.esi.expression.domain.VarWithArg.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(child.getValue().toString())", "org.netkernel.layer0.representation.IHDSNode.getValue()", "child.getValue().toString()"], "Fixed commit": "da47b8e261472ea59877fe1aff1522fdcea6be48", "Url": "https://api.github.com/repos/nflearl/esi-engine", "Date": "2014-11-22T01:49:27Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["args.getArgs()[0].toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (endIdx > (source.length())) endIdx = source.length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2125/buggy-version/src.main.java.org.netkernelroc.esi.expression.domain.FunctionExpression.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "da47b8e261472ea59877fe1aff1522fdcea6be48", "Url": "https://api.github.com/repos/nflearl/esi-engine", "Date": "2014-11-22T01:49:27Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["args.getArgs()[0].toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (beginIdx >= (source.length())) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2125/buggy-version/src.main.java.org.netkernelroc.esi.expression.domain.FunctionExpression.java", "BodyUseAPI": [], "Fixed commit": "da47b8e261472ea59877fe1aff1522fdcea6be48", "Url": "https://api.github.com/repos/nflearl/esi-engine", "Date": "2014-11-22T01:49:27Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (swebAttrDefs == null) { eu.trentorise.opendata.disiclient.model.entity.EntityType.logger.warn(((\"Found Complex type with id \" + (cType.getId())) + \" with attrdefs null, setting empty attr defs.\")); }else { for (it.unitn.disi.sweb.webapi.model.kb.types.AttributeDefinition swebAttrDef : swebAttrDefs) { attrs.add(new eu.trentorise.opendata.disiclient.model.entity.AttributeDef(swebAttrDef)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/726/buggy-version/src.main.java.eu.trentorise.opendata.disiclient.model.entity.EntityType.java", "BodyUseAPI": [], "Fixed commit": "dbd9a07c32153198e4dbd9935436f49c6128f522", "Url": "https://api.github.com/repos/opendatatrentino/disi-open-data-client", "Date": "2016-01-27T16:51:23Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (current_field != null) { de.lebk.madn.model.Figur current_figure = current_field.getOccupier(); if ((current_figure != null) && (current_figure.equals(figure))) { return current_field; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7312/buggy-version/de.lebk.madn.gui.Board.java", "BodyUseAPI": ["de.lebk.madn.gui.BoardElement.getOccupier()"], "Fixed commit": "d4adaac59b4111f4c789f94af482ecc29581f351", "Url": "https://api.github.com/repos/MariusTimmer/MenschAergereDichNicht", "Date": "2016-06-22T18:23:53Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["application.getAcsURL().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (acsUrl != null) { if ((acsUrl.length()) > 0) { ssoProvider.setAssertionConsumerURL(acsUrl); }else { ssoProvider.setAssertionConsumerURL(org.wso2.carbon.appmgt.impl.idp.sso.SSOConfiguratorUtil.getGatewayUrl(application)); } }else { ssoProvider.setAssertionConsumerURL(org.wso2.carbon.appmgt.impl.idp.sso.SSOConfiguratorUtil.getGatewayUrl(application)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3600/buggy-version/components.org.wso2.carbon.appmgt.impl.src.main.java.org.wso2.carbon.appmgt.impl.idp.sso.configurator.IS500SAMLSSOConfigurator.java", "BodyUseAPI": ["java.lang.String.length()", "org.wso2.carbon.appmgt.api.model.SSOProvider.setAssertionConsumerURL(java.lang.String)"], "Fixed commit": "c25732816ddb1c6b8503e01d119a62b28d1ddec7", "Url": "https://api.github.com/repos/lakshani/carbon-appmgt", "Date": "2015-09-14T12:37:14Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["webApp.getAcsURL().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (acsUrl != null) { if ((acsUrl.length()) > 0) { ssoProvider.setAssertionConsumerURL(acsUrl); }else { ssoProvider.setAssertionConsumerURL(org.wso2.carbon.appmgt.impl.idp.sso.SSOConfiguratorUtil.getGatewayUrl(webApp)); } }else { ssoProvider.setAssertionConsumerURL(org.wso2.carbon.appmgt.impl.idp.sso.SSOConfiguratorUtil.getGatewayUrl(webApp)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3600/buggy-version/components.org.wso2.carbon.appmgt.impl.src.main.java.org.wso2.carbon.appmgt.impl.idp.sso.configurator.IS500SAMLSSOConfigurator.java", "BodyUseAPI": ["java.lang.String.length()", "org.wso2.carbon.appmgt.api.model.SSOProvider.setAssertionConsumerURL(java.lang.String)"], "Fixed commit": "c25732816ddb1c6b8503e01d119a62b28d1ddec7", "Url": "https://api.github.com/repos/lakshani/carbon-appmgt", "Date": "2015-09-14T12:37:14Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.gatech.pickleratsapp.cs2340.udirtyrat.Model.get_instance()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((model.numReports()) == 0) { loadRatData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3238/buggy-version/UDirtyRat.app.src.main.java.edu.gatech.pickleratsapp.cs2340.udirtyrat.controllers.HomeScreen.java", "BodyUseAPI": [], "Fixed commit": "fccb2c7f7ce8a39eb0657c52258e22ddfda79314", "Url": "https://api.github.com/repos/rk1998/pickleratsapp", "Date": "2017-10-10T19:07:45Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((burlap.domain.singleagent.minecraft.MinecraftDomain.MAP[nx][ny][nz]) == 0) && ((nz - 1) >= 0)) && ((burlap.domain.singleagent.minecraft.MinecraftDomain.MAP[nx][ny][(nz - 1)]) == 0)) { if ((burlap.domain.singleagent.minecraft.MinecraftDomain.MAP[nx][ny][(nz - 2)]) == 1) { nz = nz - 1; }else if ((((nz - 3) >= 0) && ((burlap.domain.singleagent.minecraft.MinecraftDomain.MAP[nx][ny][(nz - 3)]) == 1)) && ((burlap.domain.singleagent.minecraft.MinecraftDomain.MAP[nx][ny][(nz - 2)]) == 0)) { nz = nz - 2; }else if (((nz - 3) >= 0) && ((burlap.domain.singleagent.minecraft.MinecraftDomain.MAP[nx][ny][(nz - 3)]) == 0)) { nx = ax; ny = ay; nz = az; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5469/buggy-version/MinecraftDomain.java", "BodyUseAPI": [], "Fixed commit": "1a8358d694bd8d96379999ce451878c95c295fa4", "Url": "https://api.github.com/repos/h2r/affordances", "Date": "2013-11-04T19:41:25Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerAdded == false) { throw new java.lang.RuntimeException(\"Max amount of players reached\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2488/buggy-version/src.Backend.Poker.java", "BodyUseAPI": [], "Fixed commit": "6017419a24708f92e9fad972ae5874e08a2641d0", "Url": "https://api.github.com/repos/derderdunichbist/poker", "Date": "2016-02-04T10:41:08Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wildfly.client.config.ConfigurationXMLStreamReader.getNamespaceURI()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (namespaceURI.equals(org.jboss.ejb.client.ConfigurationBasedEJBClientContextSelector.NS_INCORRECT)) { throw new org.wildfly.client.config.ConfigXMLParseException(((((\"The namespace \\\"\" + (org.jboss.ejb.client.ConfigurationBasedEJBClientContextSelector.NS_INCORRECT)) + \"\\\" was incorrect; replace with \\\"\") + (org.jboss.ejb.client.ConfigurationBasedEJBClientContextSelector.NS_EJB_CLIENT_3_0)) + \"\\\"\"), streamReader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2194/buggy-version/src.main.java.org.jboss.ejb.client.ConfigurationBasedEJBClientContextSelector.java", "BodyUseAPI": [], "Fixed commit": "8814f65e58cacd925a406b39d3541474a02614e8", "Url": "https://api.github.com/repos/wildfly/jboss-ejb-client", "Date": "2017-03-22T15:25:54Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i != 3) adsrPoints[i][1] = (adsrY > 0) ? adsrY < 1 ? adsrY : 1 : 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2880/buggy-version/src.com.kh.beatbot.view.SampleWaveformView.java", "BodyUseAPI": [], "Fixed commit": "2621f3bf35ff86ec36f8676cb797212043e6157d", "Url": "https://api.github.com/repos/khiner/BeatBot", "Date": "2012-07-07T18:01:30Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wordCount) > 0) { this.sentenceType = mapSentenceType(words[((wordCount) - 1)]); if (((sentenceType) == null) && ((wordCount) > 1)) { this.sentenceType = mapSentenceType(words[((wordCount) - 2)]); if ((sentenceType) == null) this.sentenceType = com.audiophile.t2m.text.Sentence.SentenceType.Statement; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4434/buggy-version/src.com.audiophile.t2m.text.Sentence.java", "BodyUseAPI": ["com.audiophile.t2m.text.Sentence.mapSentenceType(java.lang.String)", "com.audiophile.t2m.text.Sentence.mapSentenceType(java.lang.String)"], "Fixed commit": "5f9175bde50f160bd6a6632427860bddbc1e0095", "Url": "https://api.github.com/repos/AudiophileDev/T2M", "Date": "2017-09-06T11:35:25Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chromosome == null) || (chromosome.isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/382/buggy-version/opencga-storage.opencga-storage-mongodb.src.main.java.org.opencb.opencga.storage.mongodb.variant.load.MongoDBVariantStageReader.java", "BodyUseAPI": [], "Fixed commit": "f11554b788d1cbe6d392eb1311516061cadff035", "Url": "https://api.github.com/repos/opencb/opencga", "Date": "2016-06-15T13:30:40Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (loadingDialog.isShowing()) { loadingDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3690/buggy-version/PartyWolf.app.src.main.java.com.aolalabs.partywolf.PostTableA.java", "BodyUseAPI": ["android.app.Dialog.dismiss()"], "Fixed commit": "13082321ec9225be69dbb7b1e737689d71ff9ef0", "Url": "https://api.github.com/repos/reecej662/PartyWolfAndroid", "Date": "2015-09-08T22:34:56Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userLocation) != null) { userCity = getCity(userLocation); }else { try { userCity = currentUser.getString(\"currentCity\"); } catch (java.lang.Exception e) { e.printStackTrace(); userCity = \"Unable to find city\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3690/buggy-version/PartyWolf.app.src.main.java.com.aolalabs.partywolf.Settings.java", "BodyUseAPI": [], "Fixed commit": "13082321ec9225be69dbb7b1e737689d71ff9ef0", "Url": "https://api.github.com/repos/reecej662/PartyWolfAndroid", "Date": "2015-09-08T22:34:56Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sharkfw.knowledgeBase.sync.manager.SyncMergePropertyList.get(net.sharkfw.knowledgeBase.PeerSemanticTag,net.sharkfw.knowledgeBase.SemanticTag)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (property != null) { peerLastSeen = property.getDate(); property.updateDate(); }else { property = new net.sharkfw.knowledgeBase.sync.manager.SyncMergeProperty(peer, next, java.lang.System.currentTimeMillis()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3367/buggy-version/src.main.java.net.sharkfw.knowledgeBase.sync.manager.SyncOfferKP.java", "BodyUseAPI": ["net.sharkfw.knowledgeBase.sync.manager.SyncMergeProperty.updateDate()", "net.sharkfw.knowledgeBase.sync.manager.SyncMergeProperty.getDate()"], "Fixed commit": "da4703682b9f204960141373515d935f8efe0abf", "Url": "https://api.github.com/repos/SharedKnowledge/SharkFW", "Date": "2016-09-30T12:38:52Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cause.getTransfer()) != 0) { list.transfer = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5378/buggy-version/hts.src.main.java.org.fraunhofer.plugins.hts.rest.HazardCauseResponseList.java", "BodyUseAPI": [], "Fixed commit": "26ee054b916ff040a21f6306bd2413f5e21b71f3", "Url": "https://api.github.com/repos/FraunhoferCESE/HazardTrackingSystem", "Date": "2014-10-08T19:34:20Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fraunhofer.plugins.hts.db.Hazard_Causes.getRiskLikelihood()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (likelihood != null) { list.riskLikelihood = likelihood.getValue(); }else { list.riskLikelihood = \"Not specified\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5378/buggy-version/hts.src.main.java.org.fraunhofer.plugins.hts.rest.HazardCauseResponseList.java", "BodyUseAPI": ["org.fraunhofer.plugins.hts.db.Risk_Likelihoods.getValue()"], "Fixed commit": "26ee054b916ff040a21f6306bd2413f5e21b71f3", "Url": "https://api.github.com/repos/FraunhoferCESE/HazardTrackingSystem", "Date": "2014-10-08T19:34:20Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6007/buggy-version/common.src.main.java.spring.desai.common.utils.I18N.java", "BodyUseAPI": [], "Fixed commit": "93961b1d41a2b31d3bc31ff60eeb8ae591bf7d0c", "Url": "https://api.github.com/repos/setu9760/my-app", "Date": "2017-02-21T17:47:56Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasResumed) { startComputerUpdates(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7141/buggy-version/app.src.main.java.com.limelight.PcView.java", "BodyUseAPI": [], "Fixed commit": "4b92b8f7141dfaae8892767c81dfe83f6fe20133", "Url": "https://api.github.com/repos/moonlight-stream/moonlight-android", "Date": "2015-10-15T07:55:05Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.cyborgducks.biblexrefmanager.exporters.BibExporter.ChooseFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (path == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6093/buggy-version/BibLexRefManager.src.main.java.fi.cyborgducks.biblexrefmanager.exporters.BibExporter.java", "BodyUseAPI": [], "Fixed commit": "56cea089c79632f78c065fa0d4f3daeb387d0140", "Url": "https://api.github.com/repos/Ooppa/ohtu-miniproj-cyborg-ducks-", "Date": "2015-04-11T21:38:02Z"},
{"Line": "=>611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(buttons.get(lastPosition).isChecked())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1521/buggy-version/library.src.main.java.co.ceryle.radiorealbutton.library.RadioRealButtonGroup.java", "BodyUseAPI": [], "Fixed commit": "b0079604c116ddb000154d0eb5ebc4a9a804611e", "Url": "https://api.github.com/repos/ceryle/RadioRealButton", "Date": "2017-04-28T14:58:50Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getName().equals(e.getName())) && (event.getDate().equals(e.getDate()))) { found = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4439/buggy-version/PubSchedule.src.com.stonesoup.model.EventsAgenda.java", "BodyUseAPI": [], "Fixed commit": "786c92adad8758952ece938c1505eb7b87b920b1", "Url": "https://api.github.com/repos/GiagkiozisL/PubSchedule", "Date": "2014-02-08T08:53:39Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ai.paas.cpaas.be.srv.service.MHService.addOrUpdateAcl(appAccess.getDns(),appAccess.getContainer(),appAccess.getAccessCode(),appAccess.getAccessCodeOld(),appAccess.getResCenterId(),appAccess.getProtocol())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == result) return com.ai.paas.cpaas.be.srv.manage.impl.AppAccessManager.errorJson(\"AppAccessManager.modify is faild\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2772/buggy-version/src.main.java.com.ai.paas.cpaas.be.srv.manage.impl.AppAccessManager.java", "BodyUseAPI": [], "Fixed commit": "8885c32e3e1c87eb21957e17b848f179bd50687d", "Url": "https://api.github.com/repos/AIPaaS/platform-application-mgmt-service", "Date": "2016-03-19T07:24:36Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ai.paas.cpaas.be.srv.service.MHService.addOrUpdateAcl(appAccess.getDns(),appAccess.getContainer(),appAccess.getAccessCode(),appAccess.getAccessCodeOld(),appAccess.getResCenterId(),appAccess.getProtocol())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == result) return com.ai.paas.cpaas.be.srv.manage.impl.AppAccessManager.errorJson(\"AppAccessManager.add is faild\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2772/buggy-version/src.main.java.com.ai.paas.cpaas.be.srv.manage.impl.AppAccessManager.java", "BodyUseAPI": [], "Fixed commit": "8885c32e3e1c87eb21957e17b848f179bd50687d", "Url": "https://api.github.com/repos/AIPaaS/platform-application-mgmt-service", "Date": "2016-03-19T07:24:36Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ai.paas.cpaas.be.srv.service.MHService.delAcl(appAccess.getAccessCodeOld(),appAccess.getResCenterId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == result) return com.ai.paas.cpaas.be.srv.manage.impl.AppAccessManager.errorJson(\"AppAccessManager.delete is faild\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2772/buggy-version/src.main.java.com.ai.paas.cpaas.be.srv.manage.impl.AppAccessManager.java", "BodyUseAPI": [], "Fixed commit": "8885c32e3e1c87eb21957e17b848f179bd50687d", "Url": "https://api.github.com/repos/AIPaaS/platform-application-mgmt-service", "Date": "2016-03-19T07:24:36Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getWhitespaceFollowedNode(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((whitespaceFollowedAst.getNextSibling()) == null) || ((whitespaceFollowedAst.getNextSibling().getType()) != (com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATIONS))) { final int whitespaceColumnNo = com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(whitespaceFollowedAst); final int whitespaceLineNo = whitespaceFollowedAst.getLineNo(); if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) { log(whitespaceLineNo, whitespaceColumnNo, com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.MSG_KEY, whitespaceFollowedAst.getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4654/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.log(int,int,java.lang.String,whitespaceFollowedAst.getText())", "com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()", "com.puppycrawl.tools.checkstyle.api.DetailAST.getText()", "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Fixed commit": "d331e49baef096fbb46f8297e6406def1a8a0653", "Url": "https://api.github.com/repos/sergileon/checkstyle", "Date": "2017-09-05T11:43:02Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((intent.getExtras()) != null) { startIntent.putExtras(intent.getExtras()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/832/buggy-version/xcc.src.main.java.com.pm360.xcc.receiver.XccReceiver.java", "BodyUseAPI": ["android.content.Intent.putExtras(intent.getExtras())", "android.content.Intent.getExtras()"], "Fixed commit": "21677a0bb3e87ef271f3774f6cea5120a36538bb", "Url": "https://api.github.com/repos/ylyuanlu/ProjectCC", "Date": "2017-09-04T07:54:20Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((intent.getExtras()) != null) { startIntent.putExtras(intent.getExtras()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/832/buggy-version/attendance.src.main.java.com.pm360.attence.main.receiver.AttenceDanceReceiver.java", "BodyUseAPI": ["android.content.Intent.putExtras(intent.getExtras())", "android.content.Intent.getExtras()"], "Fixed commit": "21677a0bb3e87ef271f3774f6cea5120a36538bb", "Url": "https://api.github.com/repos/ylyuanlu/ProjectCC", "Date": "2017-09-04T07:54:20Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getFieldName()) != null) { java.lang.reflect.Field declaredField = aClass.getDeclaredField(getFieldName()); declaredField.set(mainObject, instantiate(declaredField.getType())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4762/buggy-version/src.main.java.com.github.agiledon.sisyphus.asn.AsnSubClass.java", "BodyUseAPI": [], "Fixed commit": "eb753a8b73e5b30f2bbcc3246cbd0e9bae4c7fa0", "Url": "https://api.github.com/repos/agiledon/sisyphus", "Date": "2013-10-23T14:19:50Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) == null) contentValues.putNull(entry.getKey()); else if ((entry.getValue()) instanceof java.lang.String) contentValues.put(entry.getKey(), ((java.lang.String) (entry.getValue()))); else if ((entry.getValue()) instanceof java.lang.Short) contentValues.put(entry.getKey(), ((java.lang.Short) (entry.getValue()))); else if ((entry.getValue()) instanceof java.lang.Integer) contentValues.put(entry.getKey(), ((java.lang.Integer) (entry.getValue()))); else if ((entry.getValue()) instanceof java.lang.Long) contentValues.put(entry.getKey(), ((java.lang.Long) (entry.getValue()))); else if ((entry.getValue()) instanceof java.lang.Float) contentValues.put(entry.getKey(), ((java.lang.Float) (entry.getValue()))); else if ((entry.getValue()) instanceof java.lang.Boolean) contentValues.put(entry.getKey(), ((java.lang.Boolean) (entry.getValue()))); else if ((entry.getValue()) instanceof java.lang.Byte) contentValues.put(entry.getKey(), ((java.lang.Byte) (entry.getValue()))); else if ((entry.getValue()) instanceof byte[]) contentValues.put(entry.getKey(), ((byte[]) (entry.getValue()))); else throw new java.lang.IllegalStateException((\"Unknown entry type: \" + (entry.getValue().getClass())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7510/buggy-version/library.src.main.java.com.afollestad.inquiry.RowValues.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "android.content.ContentValues.put(java.lang.String,java.lang.Object)", "android.content.ContentValues.put(java.lang.String,java.lang.Object)", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "android.content.ContentValues.put(java.lang.String,java.lang.Object)", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "android.content.ContentValues.put(java.lang.String,java.lang.Object)", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.lang.Object.getClass()", "android.content.ContentValues.putNull(java.lang.String)", "android.content.ContentValues.put(java.lang.String,java.lang.Object)", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "android.content.ContentValues.put(java.lang.String,java.lang.Object)", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "android.content.ContentValues.put(java.lang.String,java.lang.Object)", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "android.content.ContentValues.put(java.lang.String,java.lang.Object)"], "Fixed commit": "26c6da8e68d69cb1a8f00cb60f62c3a9d49a6ccc", "Url": "https://api.github.com/repos/afollestad/inquiry-deprecated", "Date": "2017-01-28T01:25:28Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(itemName.getText().toString().matches(\"\"))) { dispatchTakePictureIntent(); }else { android.widget.Toast.makeText(getActivity(), \"please choose a name before uploading a picture\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5583/buggy-version/app.src.main.java.com.sefy.finalproject.Item.ItemAddFragment.java", "BodyUseAPI": [], "Fixed commit": "d36f945fe392c2422e378b076dc815e4034019b5", "Url": "https://api.github.com/repos/sefiKraus/Finalproject", "Date": "2017-09-01T19:02:50Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(brandName.getText().toString().matches(\"\"))) { dispatchTakePictureIntent(); }else { android.widget.Toast.makeText(getActivity(), \"please choose a name before uploading a picture\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5583/buggy-version/app.src.main.java.com.sefy.finalproject.Brand.BrandAddFragment.java", "BodyUseAPI": [], "Fixed commit": "d36f945fe392c2422e378b076dc815e4034019b5", "Url": "https://api.github.com/repos/sefiKraus/Finalproject", "Date": "2017-09-01T19:02:50Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(name.matches(\"^[a-zA-Z0-9\\\\-_]{1,20}$\"))) { sender.sendMessage(((((com.github.ucchyocean.ct.command.CClassCommand.PREERR) + \"\u6307\u5b9a\u3055\u308c\u305f\u30af\u30e9\u30b9\u540d \") + name) + \" \u306f\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/657/buggy-version/src.main.java.com.github.ucchyocean.ct.command.CClassCommand.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(java.lang.String)"], "Fixed commit": "088940cc1ead7b1522715bf6da061fc9422adc26", "Url": "https://api.github.com/repos/ucchyocean/ColorTeaming", "Date": "2014-03-11T04:29:00Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == K) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7136/buggy-version/RandomizedQueuesAndDeques.Subset.java", "BodyUseAPI": [], "Fixed commit": "31a8ceaa23c5454d995fb564fd62f5d8c2dc9a2c", "Url": "https://api.github.com/repos/Altynai/CourseraAlgorithms", "Date": "2013-09-20T06:55:31Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((in.read(byteArray)) != (-1)) { fromByteArray(byteArray); }else { throw new java.io.EOFException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5987/buggy-version/src.main.java.codeshooter.model.ShooterState.java", "BodyUseAPI": ["codeshooter.model.ShooterState.fromByteArray(byte[])"], "Fixed commit": "62773719654ff370fa7401b67c05f2517d555d6e", "Url": "https://api.github.com/repos/darrenfoong/codeshooter", "Date": "2017-09-02T09:27:42Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obfuscate) { code.append(((((getObfuscatedName(eName)) + \" = \") + eName) + \";\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8907/buggy-version/src.ru.yandex.strictweb.scriptjava.compiler.Parser.java", "BodyUseAPI": [], "Fixed commit": "c0cc6adb2ed65b77e86a1c83d43127463a455e4c", "Url": "https://api.github.com/repos/hoota/strictweb", "Date": "2011-03-03T14:58:43Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.context.CarbonContext.getThreadLocalCarbonContext().getTenantDomain()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tennentDomain.equalsIgnoreCase(\"carbon.super\")) { tennentDomain = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3930/buggy-version/modules.apps.jax-rs.mdm-admin.src.main.java.org.wso2.carbon.mdm.api.User.java", "BodyUseAPI": [], "Fixed commit": "1e664f29601e7937690b1ee76ceb005bac31a34c", "Url": "https://api.github.com/repos/Kamidu/product-mdm", "Date": "2015-11-26T10:23:15Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.length()) > 0) populateParams(input.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8352/buggy-version/src.main.java.HTTPServer.RequestParser.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "HTTPServer.RequestParser.populateParams(java.lang.String)"], "Fixed commit": "e2d6b0cf81e1f0ebbdac86c8338d17af73b46825", "Url": "https://api.github.com/repos/7hoenix/javaServer", "Date": "2016-08-23T13:55:17Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["HTTPServer.RequestParser.getParams()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (parsedRequest.isEmpty()) { return \"HTTP/1.1 400 BAD REQUEST\\r\\n\\r\\n\".getBytes(); }else { return routeOnAction(parsedRequest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8352/buggy-version/src.main.java.HTTPServer.HTTPRequestHandler.java", "BodyUseAPI": ["HTTPServer.HTTPRequestHandler.routeOnAction(java.util.Map)"], "Fixed commit": "e2d6b0cf81e1f0ebbdac86c8338d17af73b46825", "Url": "https://api.github.com/repos/7hoenix/javaServer", "Date": "2016-08-23T13:55:17Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.malikov.shopsystem.service.impl.OrderServiceImpl.get(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isWithdrawalStatus(order.getStatus())) { updateProductQuantityInDbForAllOrderItems(order, com.malikov.shopsystem.DbOperation.INCREASE_IN_STOCK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8776/buggy-version/src.main.java.com.malikov.shopsystem.service.impl.OrderServiceImpl.java", "BodyUseAPI": ["com.malikov.shopsystem.service.impl.OrderServiceImpl.updateProductQuantityInDbForAllOrderItems(com.malikov.shopsystem.service.impl.Order,com.malikov.shopsystem.DbOperation.INCREASE_IN_STOCK)"], "Fixed commit": "98d353c8526fe24e52a9c90966807281e97d6aa6", "Url": "https://api.github.com/repos/malikov-yurii/osms", "Date": "2017-07-30T20:14:12Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(socket.isClosed())) printWriter.println(msg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1910/buggy-version/DistributedCAHServer.src.server.MessageSocket.java", "BodyUseAPI": [], "Fixed commit": "fa3ea9b42edcf08dad3a188f1d80d3c99d9e40d5", "Url": "https://api.github.com/repos/SilasBerger/distributed-cards-against-humanity", "Date": "2015-06-10T21:25:58Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Number.class.isAssignableFrom(pClass)) && (\"\".equals(value))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6227/buggy-version/rt.frontend.jaxrs.src.main.java.org.apache.cxf.jaxrs.utils.InjectionUtils.java", "BodyUseAPI": [], "Fixed commit": "0dc7db7aa48f36235f33ff1e7281bec525222903", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2017-03-31T09:56:57Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!((java.lang.Character.TYPE.equals(type)) || (java.lang.Character.class.equals(type)))) && (value != null)) && (value.equals(\"\"))) { value = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6227/buggy-version/core.src.main.java.org.apache.cxf.common.util.PrimitiveUtils.java", "BodyUseAPI": [], "Fixed commit": "0dc7db7aa48f36235f33ff1e7281bec525222903", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2017-03-31T09:56:57Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (classDescriptor == null) { return new java.lang.String[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8671/buggy-version/core.src.main.java.org.eobjects.analyzer.util.ChangeAwareObjectInputStream.java", "BodyUseAPI": [], "Fixed commit": "8f8d0274cfcff066c92b1bfd930310af1ce64eb5", "Url": "https://api.github.com/repos/anandswarupv/AnalyzerBeans", "Date": "2014-09-14T07:26:08Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (originalClassDescriptor == null) { org.eobjects.analyzer.util.ChangeAwareObjectInputStream.logger.warn(\"Original ClassDescriptor resolved to null for '{}'\", className); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8671/buggy-version/core.src.main.java.org.eobjects.analyzer.util.ChangeAwareObjectInputStream.java", "BodyUseAPI": [], "Fixed commit": "8f8d0274cfcff066c92b1bfd930310af1ce64eb5", "Url": "https://api.github.com/repos/anandswarupv/AnalyzerBeans", "Date": "2014-09-14T07:26:08Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.ObjectStreamClass.lookupAny(java.lang.Class<?>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (newClassDescriptor == null) { org.eobjects.analyzer.util.ChangeAwareObjectInputStream.logger.warn(\"New ClassDescriptor resolved to null for {}\", newClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8671/buggy-version/core.src.main.java.org.eobjects.analyzer.util.ChangeAwareObjectInputStream.java", "BodyUseAPI": [], "Fixed commit": "8f8d0274cfcff066c92b1bfd930310af1ce64eb5", "Url": "https://api.github.com/repos/anandswarupv/AnalyzerBeans", "Date": "2014-09-14T07:26:08Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((importFound.length()) == 0) { throw new org.python.pydev.core.docutils.ImportNotRecognizedException(\"Could not recognize empty string as import\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/462/buggy-version/plugins.org.python.pydev.core.src.org.python.pydev.core.docutils.ImportHandle.java", "BodyUseAPI": [], "Fixed commit": "0628aac82a4ba6b119585ad4b6c0b0e9e00277e5", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2012-05-04T16:15:54Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getCurrentItem()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1815/buggy-version/src.main.java.eu.matejkormuth.rpgdavid.starving.items.ItemManager.java", "BodyUseAPI": [], "Fixed commit": "28ff2332fe7e6d3d28b04226752efd81fc6341ef", "Url": "https://api.github.com/repos/dobrakmato/mcRPG", "Date": "2015-02-22T10:50:07Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((readData.length()) < 8) { setStatusMessage((\"Read failed: \" + (e.getMessage())), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5398/buggy-version/src.org.commcare.commlab.FlowDK.FlowDeviceActivity.java", "BodyUseAPI": [], "Fixed commit": "3735119848deaa9e3ec700837d0f8daf1d787361", "Url": "https://api.github.com/repos/wpride/CommLab", "Date": "2014-11-25T21:08:32Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (savedSearch.isPublic()) { savedSearch.setUser(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7973/buggy-version/app.src.com.constellio.app.ui.pages.search.savedSearch.SavedSearchPresenter.java", "BodyUseAPI": ["com.constellio.model.entities.records.wrappers.SavedSearch.setUser(<nulltype>)"], "Fixed commit": "d46928dc5f46d3a6c4a71176652a21d1c9653f35", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-10-11T20:50:11Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((assignment3.Main.graph.get(start)) != null) { if (assignment3.Main.graph.get(start).contains(end)) { assignment3.Main.stack.push(end); return true; } for (java.lang.String s : assignment3.Main.graph.get(start)) { if (!(assignment3.Main.visitedDFS.contains(s))) { boolean found = assignment3.Main.find(s, end); if (found) { return true; } } } assignment3.Main.stack.pop(); return false; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6776/buggy-version/src.assignment3.Main.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.HashSet<java.lang.String>>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.HashSet<java.lang.String>>.get(java.lang.String)", "java.util.HashSet<java.lang.String>.contains(java.lang.String)"], "Fixed commit": "00fd9d74e1818c044415f4caa1ec7da7a9ceff95", "Url": "https://api.github.com/repos/grantguglielmo/Project-3", "Date": "2016-09-28T01:16:19Z"},
{"Line": "=>1139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Binder.getCallingUid()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (((callingUid == (android.os.Process.PHONE_UID)) && (sentIntent != null)) && ((sentIntent.getCreatorPackage()) != null)) { packageNames = new java.lang.String[]{ sentIntent.getCreatorPackage() }; }else { packageNames = pm.getPackagesForUid(callingUid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/734/buggy-version/src.java.com.android.internal.telephony.SMSDispatcher.java", "BodyUseAPI": ["android.content.pm.PackageManager.getPackagesForUid(int)", "android.app.PendingIntent.getCreatorPackage()"], "Fixed commit": "908ae991439b506e4cdf65fb86dd33dc2dd59b72", "Url": "https://api.github.com/repos/scotthartbti/android_frameworks_opt_telephony", "Date": "2013-11-30T23:32:35Z"},
{"Line": "=>724", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Binder.getCallingUid()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (((callingUid == (android.os.Process.PHONE_UID)) && (sentIntent != null)) && ((sentIntent.getCreatorPackage()) != null)) { packageNames = new java.lang.String[]{ sentIntent.getCreatorPackage() }; }else { packageNames = pm.getPackagesForUid(callingUid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/734/buggy-version/src.java.com.android.internal.telephony.SMSDispatcher.java", "BodyUseAPI": ["android.app.PendingIntent.getCreatorPackage()", "android.content.pm.PackageManager.getPackagesForUid(int)"], "Fixed commit": "908ae991439b506e4cdf65fb86dd33dc2dd59b72", "Url": "https://api.github.com/repos/scotthartbti/android_frameworks_opt_telephony", "Date": "2013-11-30T23:32:35Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["methodDeclaration.binding.typeVariables()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (typeVariables == null) typeVariables = Binding.NO_TYPE_VARIABLES;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6313/buggy-version/org.eclipse.jdt.core.compiler.org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.java", "BodyUseAPI": [], "Fixed commit": "264e20b3b391e1bf2368fe3b934918be326e6ec2", "Url": "https://api.github.com/repos/amelentev/eclipse.jdt-oo", "Date": "2012-05-16T13:16:53Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.binding.declaringClass.superclass()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (((superclass != null) && (superclass.isMemberType())) && (!(superclass.isStatic()))) { currentScope.resetDeclaringClassMethodStaticFlag(superclass.enclosingType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6313/buggy-version/org.eclipse.jdt.core.compiler.org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.lookup.BlockScope.resetDeclaringClassMethodStaticFlag(superclass.enclosingType())", "org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.enclosingType()"], "Fixed commit": "264e20b3b391e1bf2368fe3b934918be326e6ec2", "Url": "https://api.github.com/repos/amelentev/eclipse.jdt-oo", "Date": "2012-05-16T13:16:53Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["msi.gama.gui.swt.controls.Shell.getChildren()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((index + 1) < (labels.length)) { msi.gama.gui.swt.controls.Label label = ((msi.gama.gui.swt.controls.Label) (labels[(index++)])); label.setText(entry.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4761/buggy-version/msi.gama.application.src.msi.gama.gui.swt.controls.Popup.java", "BodyUseAPI": [], "Fixed commit": "8011602b67d8eb64ee1faa2b42cf7955ba00b4d5", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2016-04-05T16:56:30Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.jtransforms.utils.ConcurrencyUtils.THREAD_POOL.isShutdown()) || (org.jtransforms.utils.ConcurrencyUtils.THREAD_POOL.isTerminated())) { org.jtransforms.utils.ConcurrencyUtils.THREAD_POOL = java.util.concurrent.Executors.newCachedThreadPool(new org.jtransforms.utils.ConcurrencyUtils.CustomThreadFactory(new org.jtransforms.utils.ConcurrencyUtils.CustomExceptionHandler())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/9201/buggy-version/src.main.java.org.jtransforms.utils.ConcurrencyUtils.java", "BodyUseAPI": [], "Fixed commit": "ede249c9824262bd9b5f571e56f7a0fa596f6f20", "Url": "https://api.github.com/repos/wendykierp/JTransforms", "Date": "2014-09-22T06:33:15Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.type_of_links.equals(\"gilded\")) { for (java.lang.String gildedLink : gildedLinks) { if (urlString.equals(gildedLink)) { isContinue = true; break; } } gildedLinks.add(urlString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/731/buggy-version/src.main.java.com.redditprog.webcrawler.Extractor.java", "BodyUseAPI": [], "Fixed commit": "c86cc64a433a97715f8bc6eb18e9e491c79ca6cf", "Url": "https://api.github.com/repos/Daytron/WebCrawler", "Date": "2014-10-05T18:59:20Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isContinue) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/731/buggy-version/src.main.java.com.redditprog.webcrawler.Extractor.java", "BodyUseAPI": [], "Fixed commit": "c86cc64a433a97715f8bc6eb18e9e491c79ca6cf", "Url": "https://api.github.com/repos/Daytron/WebCrawler", "Date": "2014-10-05T18:59:20Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.channelHandler) != null) this.channelHandler.onException(e.getCause());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5694/buggy-version/java.src.main.java.com.taobao.top.link.websocket.WebSocketClientHandler.java", "BodyUseAPI": [], "Fixed commit": "5a9cb5365b3df1efa9c5871e459b164d57ba2fc5", "Url": "https://api.github.com/repos/wsky/top-link", "Date": "2013-02-27T03:13:26Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.handler) != null) this.handler.onException(e.getCause());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5694/buggy-version/java.src.main.java.com.taobao.top.link.websocket.WebSocketServerChannel.java", "BodyUseAPI": [], "Fixed commit": "5a9cb5365b3df1efa9c5871e459b164d57ba2fc5", "Url": "https://api.github.com/repos/wsky/top-link", "Date": "2013-02-27T03:13:26Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((edgeExists(edgesList[i])) == false) addEdge(edgesList[i]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2022/buggy-version/src.UndirectedGraph.java", "BodyUseAPI": [], "Fixed commit": "6978601afb78f8055e82d17e062ff533f8baa528", "Url": "https://api.github.com/repos/nofarm3/UndirectedGraph", "Date": "2017-04-26T03:56:44Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (writeIfNull) { builder.nextControlFlow(\"else\"); if (isObjectProperty) { builder.addStatement(\"$L.writeFieldName($S)\", com.bluelinelabs.logansquare.processor.ObjectMapperInjector.JSON_GENERATOR_VARIABLE_NAME, fieldName); } builder.addStatement(\"$L.writeNull()\", com.bluelinelabs.logansquare.processor.ObjectMapperInjector.JSON_GENERATOR_VARIABLE_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/638/buggy-version/processor.src.main.java.com.bluelinelabs.logansquare.processor.type.collection.MapCollectionType.java", "BodyUseAPI": [], "Fixed commit": "3a7c0e8d2f8454fe1fa3e3ac1d69693637591145", "Url": "https://api.github.com/repos/ZuZuK/LoganSquare", "Date": "2017-02-21T21:49:26Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (writeIfNull) { builder.nextControlFlow(\"else\"); if (isObjectProperty) { builder.addStatement(\"$L.writeFieldName($S)\", com.bluelinelabs.logansquare.processor.ObjectMapperInjector.JSON_GENERATOR_VARIABLE_NAME, fieldName); } builder.addStatement(\"$L.writeNull()\", com.bluelinelabs.logansquare.processor.ObjectMapperInjector.JSON_GENERATOR_VARIABLE_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/638/buggy-version/processor.src.main.java.com.bluelinelabs.logansquare.processor.type.collection.SingleParameterCollectionType.java", "BodyUseAPI": [], "Fixed commit": "3a7c0e8d2f8454fe1fa3e3ac1d69693637591145", "Url": "https://api.github.com/repos/ZuZuK/LoganSquare", "Date": "2017-02-21T21:49:26Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (writeIfNull) { builder.nextControlFlow(\"else\"); if (isObjectProperty) { builder.addStatement(\"$L.writeFieldName($S)\", com.bluelinelabs.logansquare.processor.ObjectMapperInjector.JSON_GENERATOR_VARIABLE_NAME, fieldName); } builder.addStatement(\"$L.writeNull()\", com.bluelinelabs.logansquare.processor.ObjectMapperInjector.JSON_GENERATOR_VARIABLE_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/638/buggy-version/processor.src.main.java.com.bluelinelabs.logansquare.processor.type.collection.ArrayCollectionType.java", "BodyUseAPI": [], "Fixed commit": "3a7c0e8d2f8454fe1fa3e3ac1d69693637591145", "Url": "https://api.github.com/repos/ZuZuK/LoganSquare", "Date": "2017-02-21T21:49:26Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getParameter(\"collectionInterval\")) != null) { try { java.lang.Integer.parseInt(request.getParameter(\"collectionInterval\")); } catch (java.lang.Exception e) { addCustomActionErrorMessages(getText(\"errors.range\", new java.lang.String[]{ \"Collection Interva\", \"1\", \"9999\" })); return \"failure\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3872/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.action.resource.common.monitor.config.ConfigMetricsActionNG.java", "BodyUseAPI": ["java.lang.Integer.parseInt(request.getParameter(\"collectionInterval\"))", "org.hyperic.hq.ui.action.resource.common.monitor.config.ConfigMetricsActionNG.getParameter(java.lang.String)"], "Fixed commit": "67471d16020c4a59d1bb3d4071633ae665b41c73", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-10-22T15:19:12Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["list1.get(0).get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (m.isMeasure()) { arity--; }else if (!(m.isAll())) { firstTuple.add(m); }else { mondrian.olap.fun.Member firstChild = evaluator.getSchemaReader().getMemberChildren(m).get(0); firstTuple.add(firstChild); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8585/buggy-version/src.main.java.mondrian.olap.fun.NonEmptyCrossJoinXLFunDef.java", "BodyUseAPI": ["java.util.List<mondrian.olap.fun.Member>.add(mondrian.olap.fun.Member)", "evaluator.getSchemaReader().getMemberChildren(mondrian.olap.fun.Member)", "evaluator.getSchemaReader().getMemberChildren(m).get(int)", "mondrian.olap.fun.Member.isAll()"], "Fixed commit": "dde77e470ec8e419bd2ed3f1e42381eb99286cf5", "Url": "https://api.github.com/repos/ZoliN/mondrian", "Date": "2017-08-14T09:51:37Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["list2.get(0).get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (m.isMeasure()) { arity--; }else if (!(m.isAll())) { firstTuple.add(m); }else { mondrian.olap.fun.Member firstChild = evaluator.getSchemaReader().getMemberChildren(m).get(0); firstTuple.add(firstChild); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8585/buggy-version/src.main.java.mondrian.olap.fun.NonEmptyCrossJoinXLFunDef.java", "BodyUseAPI": ["evaluator.getSchemaReader().getMemberChildren(mondrian.olap.fun.Member)", "java.util.List<mondrian.olap.fun.Member>.add(mondrian.olap.fun.Member)", "evaluator.getSchemaReader().getMemberChildren(m).get(int)", "mondrian.olap.fun.Member.isAll()"], "Fixed commit": "dde77e470ec8e419bd2ed3f1e42381eb99286cf5", "Url": "https://api.github.com/repos/ZoliN/mondrian", "Date": "2017-08-14T09:51:37Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, com.GameEngine.logic.action.command.ActionCommand>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (actionCommand != null) { com.GameEngine.logic.action.command.gObject.ReceiverGObject.LOGGER.debug((((\"getActionCommand slot = \" + slot) + \" return \") + (actionCommand.toString()))); }else { com.GameEngine.logic.action.command.gObject.ReceiverGObject.LOGGER.debug(((\"getActionCommand slot = \" + slot) + \" return null\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6557/buggy-version/src.main.java.com.GameEngine.logic.action.command.gObject.ReceiverGObject.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug((((\"getActionCommand slot = \" + slot) + \" return \") + (actionCommand.toString())))", "com.GameEngine.logic.action.command.ActionCommand.toString()"], "Fixed commit": "394361627a18fcf5e0258128e803fb19629eb614", "Url": "https://api.github.com/repos/Kamys/GameEngine", "Date": "2016-05-23T19:04:14Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["be.pir.am.api.dto.CategoryDto.getMaximumAge()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (maximumAge == 0) maximumAge = 99;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1011/buggy-version/am-bus-impl.src.main.java.be.pir.am.service.AthleteServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "7c6a8b1ff8bd2f7002d0f53098c7295a0663899d", "Url": "https://api.github.com/repos/lepirlouit/AMJavaWebApp", "Date": "2015-04-15T13:36:23Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((record.length()) - (record.replace(\"*\", \"\").length())) < 3) throw new java.lang.IllegalArgumentException(\"Error: the record contain only two *\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2504/buggy-version/dcs317.Eclipse.ReservationSys.src.group5.hotel.data.HotelFileLoader.java", "BodyUseAPI": [], "Fixed commit": "243223c8c34b5c6c82dd5fd1e20356ece0e3975c", "Url": "https://api.github.com/repos/JavaProject01D/HotelFactory", "Date": "2016-10-28T19:12:28Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getOptions().getBlock1()", "ch.ethz.inf.vs.californium.network.layer.Blockwise14Layer.findRequestBlockStatus(ch.ethz.inf.vs.californium.network.Exchange)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((block1.getNum()) == 0) && ((status.getCurrentNum()) > 0)) { ch.ethz.inf.vs.californium.network.layer.Blockwise14Layer.LOGGER.fine(\"Block1 num is 0, the client has restarted the blockwise transfer. Reset status.\"); status = new ch.ethz.inf.vs.californium.network.layer.BlockwiseStatus(); exchange.setRequestBlockStatus(status); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5293/buggy-version/californium.src.main.java.ch.ethz.inf.vs.californium.network.layer.Blockwise14Layer.java", "BodyUseAPI": [], "Fixed commit": "aae0dee289c1c551cb18aa37f83c9ffabf310b1b", "Url": "https://api.github.com/repos/mkovatsc/Californium", "Date": "2013-11-20T03:54:24Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getBoolean(getString(R.string.pref_user_autoupdate_key),boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!toReschedule) stopSelf();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/705/buggy-version/src.com.cis6930.geotaskit.service.LocationNotificationService.java", "BodyUseAPI": [], "Fixed commit": "389e48adc3103d64b7aace3df16e8d193f4cc5fe", "Url": "https://api.github.com/repos/marcjmcdougall/geotaskit", "Date": "2013-04-24T01:35:16Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newIndex < 0) || (newIndex >= (pictograms.size()))) throw new java.lang.IllegalArgumentException(\"newIndex out of range\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6956/buggy-version/source.src.dk.aau.cs.giraf.zebra.Sequence.java", "BodyUseAPI": [], "Fixed commit": "3437fe7db73609499a3d8e0e56441b5a8bbca3a7", "Url": "https://api.github.com/repos/christianlykke9/Zebra", "Date": "2013-04-04T10:13:41Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((oldIndex < 0) || (oldIndex >= (pictograms.size()))) throw new java.lang.IllegalArgumentException(\"oldIndex out of range\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6956/buggy-version/source.src.dk.aau.cs.giraf.zebra.Sequence.java", "BodyUseAPI": [], "Fixed commit": "3437fe7db73609499a3d8e0e56441b5a8bbca3a7", "Url": "https://api.github.com/repos/christianlykke9/Zebra", "Date": "2013-04-04T10:13:41Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (req.contains(\"BI\")) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1469/buggy-version/emulator.src.now.org.ancestra.evolutive.common.ConditionParser.java", "BodyUseAPI": [], "Fixed commit": "81fafa615c8bef992d9204ff8594d18eef9c9a3e", "Url": "https://api.github.com/repos/F-Locos/Ancestra-Evolutive", "Date": "2014-06-30T15:27:07Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.blanche.projetfinal.DatabaseManager.getPreferencesManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pm.getNetworkConnectivity()) == null) { pm.updateNetworkConnectivity(\"any\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4138/buggy-version/TP3.ProjetFinal.app.src.main.java.com.example.blanche.projetfinal.NetworkManager.java", "BodyUseAPI": ["com.example.blanche.projetfinal.PreferencesManager.updateNetworkConnectivity(java.lang.String)"], "Fixed commit": "66bb640d8746613b00fd68309ca11c2cb19d939b", "Url": "https://api.github.com/repos/BlancheP/INF8405", "Date": "2017-04-30T13:28:43Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((socket) instanceof javax.net.ssl.SSLSocket)) socket.shutdownInput();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5545/buggy-version/src.main.java.org.drizzle.jdbc.internal.mysql.MySQLProtocol.java", "BodyUseAPI": [], "Fixed commit": "da68e32d9a748435e789b911ca2416c978689769", "Url": "https://api.github.com/repos/StephG38/DrizzleJDBC", "Date": "2012-09-14T11:13:18Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((socket) instanceof javax.net.ssl.SSLSocket)) socket.shutdownOutput();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5545/buggy-version/src.main.java.org.drizzle.jdbc.internal.mysql.MySQLProtocol.java", "BodyUseAPI": [], "Fixed commit": "da68e32d9a748435e789b911ca2416c978689769", "Url": "https://api.github.com/repos/StephG38/DrizzleJDBC", "Date": "2012-09-14T11:13:18Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmicroscopy.shoola.env.data.model.DownloadActivityParam.getFolder()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(f.isDirectory())) f = f.getParentFile();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6081/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.env.ui.UserNotifierImpl.java", "BodyUseAPI": ["java.io.File.getParentFile()"], "Fixed commit": "24a054085c396d20726121585d872a893aed6e3d", "Url": "https://api.github.com/repos/openmicroscopy/openmicroscopy", "Date": "2012-12-19T14:39:17Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(m_pipelines.isEmpty())) && (m_pipelines.getFirst().canDelete())) { m_pipelines.removeFirst(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2391/buggy-version/Core.src.ca.uqac.lif.cep.concurrency.PullPipeline.java", "BodyUseAPI": ["java.util.LinkedList<ca.uqac.lif.cep.concurrency.PipelineRunnable>.removeFirst()"], "Fixed commit": "dccdd9dc6fae6703a0a37dcf82418aa1da23ef09", "Url": "https://api.github.com/repos/liflab/beepbeep-3", "Date": "2017-04-08T13:21:04Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((map.getLayerCount()) > (com.gravity.map.TileWorld.SPIKES_LAYER_ID)) { layerId = com.gravity.map.TileWorld.SPIKES_LAYER_ID; for (int i = 0; i < (map.getWidth()); i++) { for (int j = 0; j < (map.getHeight()); j++) { int tileId = map.getTileId(i, j, layerId); if (tileId != 0) { org.newdawn.slick.geom.Rectangle r = new org.newdawn.slick.geom.Rectangle((i * (tileWidth)), (j * (tileHeight)), tileWidth, tileHeight); com.gravity.physics.Entity e = new com.gravity.physics.SpikeEntity(controller, r); touchingBoxes.put(r, e); entities.add(e); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3417/buggy-version/Platformer.src.com.gravity.map.TileWorld.java", "BodyUseAPI": [], "Fixed commit": "9b53391e26fa44df816f810e16321bdf6ea43620", "Url": "https://api.github.com/repos/helloplz/Gravity", "Date": "2012-10-12T02:34:36Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message.getChannel().getOps().contains(message.getUser())) { if (messageArray[1].equals(\"off\")) { quotesActive = false; }else if (messageArray[1].equals(\"on\")) { quotesActive = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3083/buggy-version/src.chatbot.Quote.java", "BodyUseAPI": [], "Fixed commit": "8233b11063108d158c56c741185e7522ee94793a", "Url": "https://api.github.com/repos/GeneralPeaches/dojoBot", "Date": "2015-07-07T21:35:33Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fuzzerLineOutput) != null) { response = org.owasp.jbrofuzz.fuzz.io.FuzzFileUtils.getResponse(fuzzerLineOutput); request = org.owasp.jbrofuzz.fuzz.io.FuzzFileUtils.getRequest(fuzzerLineOutput); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4449/buggy-version/src.org.owasp.jbrofuzz.fuzz.ui.OutputPanel.java", "BodyUseAPI": [], "Fixed commit": "60010b5e7dab4bb33c32542043f720e3fdac4bd5", "Url": "https://api.github.com/repos/twilsonb/jbrofuzz", "Date": "2014-08-16T06:11:34Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selFile.exists()) { fuzzerLineOutput = org.owasp.jbrofuzz.io.FileHandler.readFile(selFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4449/buggy-version/src.org.owasp.jbrofuzz.fuzz.ui.OutputPanel.java", "BodyUseAPI": ["org.owasp.jbrofuzz.io.FileHandler.readFile(java.io.File)"], "Fixed commit": "60010b5e7dab4bb33c32542043f720e3fdac4bd5", "Url": "https://api.github.com/repos/twilsonb/jbrofuzz", "Date": "2014-08-16T06:11:34Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((previousRangeEnd != 0) && (ranges.isEmpty())) { ranges.add(new com.intellij.openapi.util.Pair<java.lang.String, com.intellij.execution.ui.ConsoleViewContentType>(\"\", consoleViewContentType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/654/buggy-version/src.krasa.grepconsole.ansi.AnsiConsoleStyleFilter.java", "BodyUseAPI": ["java.util.List<com.intellij.openapi.util.Pair<java.lang.String, com.intellij.execution.ui.ConsoleViewContentType>>.add(com.intellij.openapi.util.Pair<java.lang.String, com.intellij.execution.ui.ConsoleViewContentType>)"], "Fixed commit": "2ed1132553bf4f4cfb2b912760faf298991ff546", "Url": "https://api.github.com/repos/krasa/GrepConsole", "Date": "2013-04-05T00:47:25Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expr instanceof com.jetbrains.jetpad.vclang.typechecking.ConCallExpression) { com.jetbrains.jetpad.vclang.typechecking.Constructor constructor = ((com.jetbrains.jetpad.vclang.typechecking.ConCallExpression) (expr)).getDefinition(); com.jetbrains.jetpad.vclang.typechecking.Expression type = constructor.getBaseType(); if (!(constructor.getDataType().getParameters().isEmpty())) { type = Pi(constructor.getDataType().getParameters(), type); } type = (((constructor.getThisClass()) != null) && (type != null)) ? Pi(\"\\\\this\", ClassCall(constructor.getThisClass()), type) : type; return new com.jetbrains.jetpad.vclang.term.expr.visitor.CheckTypeVisitor.OKResult(ConCall(constructor), type, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2867/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.typechecking.TypeCheckingDefCall.java", "BodyUseAPI": [], "Fixed commit": "a378754a8b386a3a627a68a55bb9e925783e8619", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2015-11-10T13:51:55Z"},
{"Line": "=>994", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 21) { com.jeremyfeinstein.slidingmenu.lib.Resources resources = getContent().getResources(); int resourceId = resources.getIdentifier(\"navigation_bar_height\", \"dimen\", \"android\"); if (resourceId > 0) { bottomPadding += resources.getDimensionPixelSize(resourceId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4181/buggy-version/library.src.com.jeremyfeinstein.slidingmenu.lib.SlidingMenu.java", "BodyUseAPI": [], "Fixed commit": "ae70f597f428b40d9419e92afe955b38afdd3a59", "Url": "https://api.github.com/repos/zulkis/SlidingMenu", "Date": "2015-08-06T14:09:59Z"},
{"Line": "=>938", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((textOptionStage) != null) { textOptionStage.hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8286/buggy-version/annotationtool.annotation.AnnotationToolApplication.java", "BodyUseAPI": [], "Fixed commit": "0af85932f2597ec062729cc4a1587d230c28badc", "Url": "https://api.github.com/repos/seedor87/scratchpad_project", "Date": "2017-07-07T20:16:32Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((finalMatch) == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3067/buggy-version/src.main.java.de.fred4jupiter.fredbet.web.bet.ExtraBetCommand.java", "BodyUseAPI": [], "Fixed commit": "797b5d0dd31c124b26229f20526de7ed32fd9c42", "Url": "https://api.github.com/repos/fred4jupiter/fredbet", "Date": "2016-10-31T09:33:35Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (config.contentProvided) { content = readSecretContent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1367/buggy-version/cli.src.main.java.keywhiz.cli.commands.UpdateAction.java", "BodyUseAPI": [], "Fixed commit": "8097b653425c1cf0f94f928299aeece5d0b671b9", "Url": "https://api.github.com/repos/square/keywhiz", "Date": "2016-12-05T18:17:07Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (getMissingLocaleVersionMap().containsKey(localeId)) { return getMissingLocaleVersionMap().get(localeId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2763/buggy-version/zanata-war.src.main.java.org.zanata.action.VersionGroupHomeAction.java", "BodyUseAPI": ["java.util.Map<org.zanata.common.LocaleId, java.util.List<org.zanata.model.HProjectIteration>>.get(org.zanata.common.LocaleId)"], "Fixed commit": "ef40e0c5e6e5ddfb0d3481844fa8dccde0502b99", "Url": "https://api.github.com/repos/zanata/zanata-server", "Date": "2013-11-22T05:13:38Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (gsb != null) return gsb;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/9262/buggy-version/src.fi.mikuz.boarder.util.editor.Pagination.java", "BodyUseAPI": [], "Fixed commit": "ab4f41da6ae5333278c82eaa6ca6c4d7264a3678", "Url": "https://api.github.com/repos/Mikuz/Boarder", "Date": "2013-01-26T14:28:04Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.world.villageCollectionObj) != null) { net.minecraft.village.Village v = event.world.villageCollectionObj.findNearestVillage(net.minecraft.util.MathHelper.floor_double(e.posX), net.minecraft.util.MathHelper.floor_double(e.posY), net.minecraft.util.MathHelper.floor_double(e.posZ), 20); if (v != null) { int r = v.getVillageRadius(); net.minecraft.util.AxisAlignedBB box = net.minecraft.util.AxisAlignedBB.getBoundingBox(((v.getCenter().posX) - r), 0, ((v.getCenter().posZ) - r), ((v.getCenter().posX) + r), event.world.getActualHeight(), ((v.getCenter().posZ) + r)); net.minecraft.util.ChunkCoordinates cc = v.getCenter(); e.setHomeArea(cc.posX, cc.posY, cc.posZ, r); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4727/buggy-version/src.main.java.de.teamlapen.vampirism.entity.VampireEntityEventHandler.java", "BodyUseAPI": ["event.world.villageCollectionObj.findNearestVillage(net.minecraft.util.MathHelper.floor_double(e.posX),net.minecraft.util.MathHelper.floor_double(e.posY),net.minecraft.util.MathHelper.floor_double(e.posZ),int)", "event.world.getActualHeight()", "net.minecraft.util.AxisAlignedBB.getBoundingBox(((v.getCenter().posX) - r),int,((v.getCenter().posZ) - r),((v.getCenter().posX) + r),event.world.getActualHeight(),((v.getCenter().posZ) + r))"], "Fixed commit": "24616328d09e79a7e7a849353e8f99af25b3324c", "Url": "https://api.github.com/repos/TeamLapen/Vampirism", "Date": "2015-05-01T10:29:35Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!noswt) { return org.dyndns.fzoli.ui.systemtray.SystemTrayIcon.init(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1247/buggy-version/src.org.dyndns.fzoli.ui.systemtray.SystemTrayIcon.java", "BodyUseAPI": [], "Fixed commit": "41d1a197aa4081f1bcc50cdf52c014ffcce5158e", "Url": "https://api.github.com/repos/fzoli/RemoteControlCar", "Date": "2013-01-12T01:09:37Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (env.getGenerateDdl().equals(\"true\")) { vendorAdapter.setGenerateDdl(true); }else { vendorAdapter.setGenerateDdl(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3128/buggy-version/micro-data.src.main.java.com.aol.micro.server.spring.datasource.hibernate.SpringDataConfig.java", "BodyUseAPI": [], "Fixed commit": "8a89b86216d697bd552606ee875dd5982cbabd53", "Url": "https://api.github.com/repos/wwfifi/micro-server", "Date": "2015-11-06T17:29:54Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 24) { uri = android.support.v4.content.FileProvider.getUriForFile(mContext, ((mContext.getPackageName()) + \".fileprovider\"), photoFile); }else { uri = android.net.Uri.fromFile(photoFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7960/buggy-version/photopicker.src.main.java.com.lidong.photopicker.ImageCaptureManager.java", "BodyUseAPI": [], "Fixed commit": "116fa655508e8928926fbb9ea77d2a8fe6680023", "Url": "https://api.github.com/repos/bearLei/5AMaster", "Date": "2017-11-27T14:29:06Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(columnLabel.equals(\"language\"))) { printError((\"Konnte Core-Datenbankeintrag nicht holen, falsche Parameter? : \" + ex)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1935/buggy-version/TicTacToeServer.src.core.database.CoreDatabase.java", "BodyUseAPI": [], "Fixed commit": "48572bee92860f88f5a7067a333751a1b679ed61", "Url": "https://api.github.com/repos/Sharknoon/TicTacToe", "Date": "2016-04-30T21:32:33Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getDatabase().getTransaction().isActive()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!txAlreadyBegun) graph.commit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7057/buggy-version/graphdb.src.main.java.com.orientechnologies.orient.graph.sql.OCommandExecutorSQLMoveVertex.java", "BodyUseAPI": [], "Fixed commit": "705f68f5d56531d43cf644c9a6b69631b90a238c", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-10-01T07:16:23Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentlySelectedRow) != null) { currentlySelectedRow.setBackgroundResource(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4405/buggy-version/workr.app.src.main.java.com.izzygomez.workr.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3d20a747ce53c0c6b84a0369664f4c8fb1ed38d0", "Url": "https://api.github.com/repos/izzygomez/workr", "Date": "2015-04-28T23:11:25Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["FlowerManager.flowerRegistry.getAcceptableFlowers(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((acceptableFlowers == null) || ((acceptableFlowers.size()) == 0)) { Proxies.log.severe(((\"Flower type '\" + flowerType) + \"' has no valid flowers set in apiculture.cfg. Add valid flowers or delete the config to set it to default.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6693/buggy-version/src.main.java.forestry.plugins.PluginApiculture.java", "BodyUseAPI": [], "Fixed commit": "7d998d2bb8f726c17fc1d5249e5605b571af2f66", "Url": "https://api.github.com/repos/ForestryMC/ForestryMC", "Date": "2015-06-28T20:56:54Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((project.getCases()) != null) { this.cases = new edu.cmu.square.server.dao.model.AsquareCase(project.getCases()); }else { this.cases = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2633/buggy-version/src.edu.cmu.square.server.dao.model.Project.java", "BodyUseAPI": [], "Fixed commit": "a857a708a8da9cf8695a1abc5e62d9ad9f0b9322", "Url": "https://api.github.com/repos/deekay0/asquare", "Date": "2011-06-06T23:00:45Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vmName == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2565/buggy-version/src.main.java.com.alibaba.fastjson.util.ASMUtils.java", "BodyUseAPI": [], "Fixed commit": "e6a5a1298405ee2dc1118410bf26953d2175ad7c", "Url": "https://api.github.com/repos/rabbitgyk/fastjson", "Date": "2014-10-03T04:59:04Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGoogleMap) != null) addSightingsToMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1365/buggy-version/app.src.main.java.uk.co.tezk.trainspotter.view.TrainDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "bc9e6941a908ff40138591fc9c5c349f5fda7a55", "Url": "https://api.github.com/repos/terrykayae/trainspotter", "Date": "2017-05-18T20:37:15Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(outputType.equals(org.openpixi.pixi.diagnostics.methods.OccupationNumbersInTime.OUTPUT_NONE))) { this.writeHeader(outputFileName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2904/buggy-version/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.OccupationNumbersInTime.java", "BodyUseAPI": [], "Fixed commit": "68d5cffc67229abca72891c5e8c3d1cd441d8ce6", "Url": "https://api.github.com/repos/d-mueller/openpixi", "Date": "2015-07-16T14:45:35Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(properties.containsKey(com.sixsq.slipstream.cookie.CookieUtils.COOKIE_EXPIRY_DATE))) { form.add(com.sixsq.slipstream.cookie.CookieUtils.COOKIE_EXPIRY_DATE, expiryDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/895/buggy-version/jar-connector.src.main.java.com.sixsq.slipstream.cookie.CookieUtils.java", "BodyUseAPI": ["org.restlet.data.Form.add(java.lang.String,java.lang.String)"], "Fixed commit": "5a888bf176085c3fa88532409894fd610935fa04", "Url": "https://api.github.com/repos/slipstream/SlipStreamServer", "Date": "2014-08-26T15:46:44Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (source.hasTop()) { key = source.getTopKey(); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6277/buggy-version/extensions.datastores.accumulo.src.main.java.mil.nga.giat.geowave.datastore.accumulo.query.QueryFilterIterator.java", "BodyUseAPI": ["org.apache.accumulo.core.iterators.SortedKeyValueIterator<org.apache.accumulo.core.data.Key, org.apache.accumulo.core.data.Value>.getTopKey()"], "Fixed commit": "21bf7cfba75e5aac2eef4da1019f0d427e0e61fc", "Url": "https://api.github.com/repos/locationtech/geowave", "Date": "2016-07-09T02:35:30Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["index.getIndexStrategy().getOrderedDimensionDefinitions()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dimensions[d]) instanceof mil.nga.giat.geowave.core.index.sfc.SFCDimensionDefinition) { baseDefinitionCls = ((mil.nga.giat.geowave.core.index.sfc.SFCDimensionDefinition) (dimensions[d])).getDimensionDefinition().getClass(); }else { baseDefinitionCls = dimensions[d].getClass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6277/buggy-version/core.store.src.main.java.mil.nga.giat.geowave.core.store.data.CommonIndexedPersistenceEncoding.java", "BodyUseAPI": ["((mil.nga.giat.geowave.core.index.sfc.SFCDimensionDefinition) (dimensions[d])).getDimensionDefinition().getClass()", "((mil.nga.giat.geowave.core.index.sfc.SFCDimensionDefinition) (dimensions[d])).getDimensionDefinition()", "dimensions[d].getClass()"], "Fixed commit": "21bf7cfba75e5aac2eef4da1019f0d427e0e61fc", "Url": "https://api.github.com/repos/locationtech/geowave", "Date": "2016-07-09T02:35:30Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["flashablezipcreator.Operations.TreeOperations.getFileNode(java.lang.String,java.util.ArrayList<java.lang.String>,java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (file == null) { file = flashablezipcreator.Protocols.Import.to.addFileToTree(fileName, subGroupName, subGroupType, groupName, groupType, folderList, projectName, projectType); file.fileSourcePath = file.path; flashablezipcreator.Protocols.Import.rz.writeFileFromZip(in, file.fileSourcePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1658/buggy-version/src.flashablezipcreator.Protocols.Import.java", "BodyUseAPI": [], "Fixed commit": "0f6729bf66a063d8cf9d59d833e90a9894641e83", "Url": "https://api.github.com/repos/nikhilmenghani/AFZC", "Date": "2017-01-08T01:40:14Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDataService) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1172/buggy-version/app.src.main.java.edu.hm.cs.fs.app.service.BlackboardNotificationService.java", "BodyUseAPI": [], "Fixed commit": "e64ba81c04e65e4b4d460033f50f400ab51ead5d", "Url": "https://api.github.com/repos/Fachschaft07/fs-android-app", "Date": "2016-03-12T16:00:51Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (kv.isDeleteFamily()) { data.get(row).get(kv.getFamily()).clear(); }else { data.get(row).get(kv.getFamily()).remove(kv.getQualifier()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/53/buggy-version/common.src.main.java.org.apache.kylin.common.util.MockHTable.java", "BodyUseAPI": ["java.util.NavigableMap<byte[], java.util.NavigableMap<java.lang.Long, byte[]>>.remove(kv.getQualifier())", "java.util.NavigableMap<byte[], java.util.NavigableMap<java.lang.Long, byte[]>>.clear()", "java.util.NavigableMap<byte[], java.util.NavigableMap<byte[], java.util.NavigableMap<java.lang.Long, byte[]>>>.get(kv.getFamily())", "org.apache.hadoop.hbase.KeyValue.getFamily()", "org.apache.hadoop.hbase.KeyValue.getFamily()", "java.util.NavigableMap<byte[], java.util.NavigableMap<byte[], java.util.NavigableMap<java.lang.Long, byte[]>>>.get(kv.getFamily())", "org.apache.hadoop.hbase.KeyValue.getQualifier()"], "Fixed commit": "407f9c79f31cc2a7439bb64e796039b9623dc8be", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2015-05-25T02:32:03Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scheduler) != null) { scheduler.shutdownNow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5465/buggy-version/src.main.java.com.alibaba.druid.pool.ha.MultiDataSource.java", "BodyUseAPI": [], "Fixed commit": "7eb6fedb631009cb9c697f8124eff7ceeb29e482", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2012-08-30T02:58:07Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(Constants.PREF_COVER_PATH,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(filePath.isEmpty())) { coverImage = getBitmapFromPath(filePath); }else { mView.showToast(R.string.cover_image_empty); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2533/buggy-version/app.src.main.java.alexparunov.cryptomessenger.activities.encrypt.EncryptPresenterImpl.java", "BodyUseAPI": ["alexparunov.cryptomessenger.activities.encrypt.EncryptPresenterImpl.getBitmapFromPath(java.lang.String)"], "Fixed commit": "eef9e3b79be562b89c1fecd524a9f0ad32425031", "Url": "https://api.github.com/repos/alexparunov/steganographer", "Date": "2017-04-27T08:32:55Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(Constants.PREF_COVER_PATH,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(filePath.isEmpty())) { coverImage = getBitmapFromPath(filePath); }else { mView.showToast(R.string.cover_image_empty); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2533/buggy-version/app.src.main.java.alexparunov.cryptomessenger.activities.encrypt.EncryptPresenterImpl.java", "BodyUseAPI": ["alexparunov.cryptomessenger.activities.encrypt.EncryptPresenterImpl.getBitmapFromPath(java.lang.String)"], "Fixed commit": "eef9e3b79be562b89c1fecd524a9f0ad32425031", "Url": "https://api.github.com/repos/alexparunov/steganographer", "Date": "2017-04-27T08:32:55Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (s != null) { em.getTransaction().begin(); em.remove(s); em.getTransaction().commit(); refreshJTable(); if (lastRowIndex == (jTable1.getRowCount())) { lastRowIndex--; } if ((jTable1.getRowCount()) > 0) { jTable1.setRowSelectionInterval(lastRowIndex, lastRowIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2545/buggy-version/src.view.MainView.java", "BodyUseAPI": ["javax.persistence.EntityManager.remove(entities.Stockoperation)"], "Fixed commit": "2669a2dc8e442208e633a2fa1e4fae4871cdb8e0", "Url": "https://api.github.com/repos/sp1d3rino/stockmanager", "Date": "2016-08-19T20:53:03Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.elasticsearch.painless.node.ALink>.get(((links.size()) - 1))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (last instanceof org.elasticsearch.painless.node.ADefLink) { final org.elasticsearch.painless.node.ADefLink lastDef = ((org.elasticsearch.painless.node.ADefLink) (last)); lastDef.storeValueType = last.after; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8943/buggy-version/modules.lang-painless.src.main.java.org.elasticsearch.painless.node.EChain.java", "BodyUseAPI": [], "Fixed commit": "65aca4f71c9b88a41e2c5d6bd7fc9cceb7c0d99d", "Url": "https://api.github.com/repos/abeyad/elasticsearch", "Date": "2016-05-15T20:58:11Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openbravo.dal.service.OBDal.getInstance().createCriteria(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tmcDocumentUpdateLineLatestDate.list().size()) > 0) { newTmcDocumentUpdateLine.setMaintenanceDateFrom(tmcDocumentUpdateLineLatestDate.list().get(0).getMaintenanceDateFrom()); newTmcDocumentUpdateLine.setMaintenanceDateTo(tmcDocumentUpdateLineLatestDate.list().get(0).getMaintenanceDateTo()); }else { newTmcDocumentUpdateLine.setMaintenanceDateFrom(null); newTmcDocumentUpdateLine.setMaintenanceDateTo(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7485/buggy-version/src.com.tripad.cootrack.utility.ResponseResultToDB.java", "BodyUseAPI": ["tmcDocumentUpdateLineLatestDate.list().get(0).getMaintenanceDateFrom()", "tmcDocumentUpdateLineLatestDate.list().get(0).getMaintenanceDateTo()", "com.tripad.cootrack.data.TmcDocumentUpdateLine.setMaintenanceDateTo(tmcDocumentUpdateLineLatestDate.list().get(0).getMaintenanceDateTo())", "org.openbravo.dal.service.OBCriteria<com.tripad.cootrack.data.TmcDocumentUpdateLine>.list()", "com.tripad.cootrack.data.TmcDocumentUpdateLine.setMaintenanceDateFrom(tmcDocumentUpdateLineLatestDate.list().get(0).getMaintenanceDateFrom())", "tmcDocumentUpdateLineLatestDate.list().get(int)", "org.openbravo.dal.service.OBCriteria<com.tripad.cootrack.data.TmcDocumentUpdateLine>.list()", "tmcDocumentUpdateLineLatestDate.list().get(int)"], "Fixed commit": "065c58db84710b3480d2b9bb80c2ed563648072e", "Url": "https://api.github.com/repos/mfachmirizal/cootrack-repo", "Date": "2016-03-07T01:46:37Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myDb.rowCount()) > 0) { small = ((android.widget.TextView) (findViewById(R.id.textView4))); small.setTextColor(getResources().getColor(android.R.color.transparent)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2953/buggy-version/app.src.main.java.eu.qm.fiszki.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8f5fd008cf70b76d3e749008b13240ecedbe116f", "Url": "https://api.github.com/repos/rstnewbies/Fiszki", "Date": "2015-10-25T11:08:32Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a == null) || (b == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/89/buggy-version/src.main.java.com.bina.varsim.types.variant.alt.Alt.java", "BodyUseAPI": [], "Fixed commit": "a50284417dc4a39c0435dfe7d860bd4b301ca7b6", "Url": "https://api.github.com/repos/bioinform/varsim", "Date": "2017-01-20T19:29:42Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((reactor.worldObj) == world) { reactor.updateMultiblockEntity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2266/buggy-version/erogenousbeef.core.multiblock.MultiblockRegistry.java", "BodyUseAPI": ["erogenousbeef.core.multiblock.MultiblockControllerBase.updateMultiblockEntity()"], "Fixed commit": "5719d79b95d50d69d273963b5235f8b20f760a16", "Url": "https://api.github.com/repos/erogenousbeef/BeefCore", "Date": "2013-06-19T22:24:29Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.bootsfaces.render.Responsive.getResponsiveStyleClass(net.bootsfaces.component.buttonGroup.ButtonGroup,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((responsive.trim().length()) > 0) { styleClasses += responsive; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7597/buggy-version/src.main.java.net.bootsfaces.component.buttonGroup.ButtonGroupRenderer.java", "BodyUseAPI": [], "Fixed commit": "65b4ced1e4d72c6bd50ea0713a557fe26202c166", "Url": "https://api.github.com/repos/TheCoder4eu/BootsFaces-OSP", "Date": "2016-06-21T10:19:58Z"},
{"Line": "=>759", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (metadata != null) { org.apache.flume.channel.kafka.ChannelCallback.log.debug((((((((((\"Acked message_no \" + (index)) + \": \") + (metadata.topic())) + \"-\") + (metadata.partition())) + \"-\") + (metadata.offset())) + \"-\") + batchElapsedTime)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/337/buggy-version/flume-ng-channels.flume-kafka-channel.src.main.java.org.apache.flume.channel.kafka.KafkaChannel.java", "BodyUseAPI": ["org.apache.kafka.clients.producer.RecordMetadata.topic()", "org.apache.kafka.clients.producer.RecordMetadata.partition()", "org.apache.kafka.clients.producer.RecordMetadata.offset()", "org.slf4j.Logger.debug((((((((((\"Acked message_no \" + (index)) + \": \") + (metadata.topic())) + \"-\") + (metadata.partition())) + \"-\") + (metadata.offset())) + \"-\") + batchElapsedTime))"], "Fixed commit": "66c9f768c1d1b3569cd6610e52136e383c9227c5", "Url": "https://api.github.com/repos/loleek/flume", "Date": "2017-03-29T11:58:43Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (child == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/773/buggy-version/mhrecycleradapter.src.main.java.mh.sanwix.com.GenericAdapter.MHTouchItemClick.java", "BodyUseAPI": [], "Fixed commit": "a0e17f0f3a7727b2addefe8c422af646c7352aee", "Url": "https://api.github.com/repos/MH480/MHGenericAdapter", "Date": "2017-10-07T13:45:44Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7977/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "b6189fffa8914b78f85c19e687ba4f58a7f68028", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInEditMode())) { setupAccountAutocomplete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4173/buggy-version/library.src.main.java.com.tasomaniac.widget.EmailAutoCompleteLayout.java", "BodyUseAPI": [], "Fixed commit": "9fa07077b03007ff3da5f8286a3133846a997678", "Url": "https://api.github.com/repos/tasomaniac/EmailAutoCompleteTextView", "Date": "2015-11-17T15:56:19Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).get()", "io.cattle.platform.iaas.api.auth.dao.AuthDao.hasAccessToAnyProject(java.util.Set<io.cattle.platform.api.auth.Identity>,boolean,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((!hasAccessToAProject) && (hasLoggedIn != null)) && (!((java.lang.Boolean) (hasLoggedIn)))) { projectResourceManager.createProjectForUser(account); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7854/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": [], "Fixed commit": "e397f0f8f8623e45ff7f20853c51dcb521fe7c5c", "Url": "https://api.github.com/repos/wlan0/cattle", "Date": "2015-09-03T18:02:11Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (account != null) { io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).set(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7854/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": ["io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).set(boolean)", "io.cattle.platform.object.util.DataAccessor.fields(io.cattle.platform.core.model.Account)", "io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN)"], "Fixed commit": "e397f0f8f8623e45ff7f20853c51dcb521fe7c5c", "Url": "https://api.github.com/repos/wlan0/cattle", "Date": "2015-09-03T18:02:11Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((urlString) == null) { throw new com.bettercloud.vault.rest.RestException(\"No URL is set\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/188/buggy-version/src.main.java.com.bettercloud.vault.rest.Rest.java", "BodyUseAPI": [], "Fixed commit": "dd09300777e963d1c7d9562de682641a7f59250f", "Url": "https://api.github.com/repos/BetterCloud/vault-java-driver", "Date": "2016-05-02T16:03:52Z"},
{"Line": "=>1065", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mUnMuteOnFocusLoss) { if (audioManager != null) { android.util.Log.d(com.caf.fmradio.FMRadioService.LOGTAG, \"Mute\"); com.caf.fmradio.FMRadioService.mMuted = true; audioManager.setStreamMute(AudioManager.STREAM_MUSIC, true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/9272/buggy-version/fmapp2.src.com.caf.fmradio.FMRadioService.java", "BodyUseAPI": [], "Fixed commit": "55e2fbfa99151ef2bebe7dcefd2ce1ed8ebda3b3", "Url": "https://api.github.com/repos/TeamHorizon/android_hardware_qcom_fm", "Date": "2014-11-27T02:30:31Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (adapterClass == (java.util.Comparator.class)) { java.lang.StringBuilder sb = new java.lang.StringBuilder(); sb.append(\"term\"); if ((mTerm) != null) sb.append(mTerm); sb.append(\"tag\"); if ((mTag) != null) sb.append(mTag); return sb.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5942/buggy-version/UniversalPhotoStudio.src.com.gmail.charleszq.picorner.ui.command.px500.TermTagSearchCommand.java", "BodyUseAPI": [], "Fixed commit": "915cf3a38da33b8f779beab291bbedd9e1df8f4a", "Url": "https://api.github.com/repos/yuyang226/UniversalPhotoStudio", "Date": "2013-03-06T09:24:20Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((page.getContent()) != null) { org.verapdf.model.impl.pd.util.PDResourcesHandler resourcesHandler = org.verapdf.model.impl.pd.util.PDResourcesHandler.getInstance(page.getResources(), page.isInheritedResources()); org.verapdf.model.impl.pd.GFPDContentStream contentStream = new org.verapdf.model.impl.pd.GFPDContentStream(page.getContent(), resourcesHandler); this.containsTransparency |= contentStream.isContainsTransparency(); contentStreams.add(contentStream); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/80/buggy-version/validation-model.src.main.java.org.verapdf.model.impl.pd.GFPDPage.java", "BodyUseAPI": ["org.verapdf.pd.PDPage.isInheritedResources()", "org.verapdf.pd.PDPage.getContent()", "org.verapdf.pd.PDPage.getResources()", "org.verapdf.model.impl.pd.util.PDResourcesHandler.getInstance(page.getResources(),page.isInheritedResources())"], "Fixed commit": "a82f89b9c4e7d3fdf8901a664d690b66687ca9ae", "Url": "https://api.github.com/repos/timurkamalov/veraPDF-validation", "Date": "2016-09-14T09:12:38Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(aborted)) { aborted = true; tv.rocketbeans.rbcgj.assets.AssetManager.getMusic(Assets.Musics.STORY_SCREEN).stop(); setScreen(new tv.rocketbeans.rbcgj.screens.IngameScreen(game)); tv.rocketbeans.rbcgj.assets.AssetManager.getSound(Assets.Sounds.START_GAME).play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1025/buggy-version/core.src.tv.rocketbeans.rbcgj.screens.StoryScreen.java", "BodyUseAPI": [], "Fixed commit": "c0bddd72262b3494ba39778a2b9b28c58a380ef4", "Url": "https://api.github.com/repos/bitbrain/rbcgj-2016", "Date": "2016-04-24T11:30:01Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > 23) { intent.setDataAndType(android.support.v4.content.FileProvider.getUriForFile(context, ((context.getApplicationContext().getPackageName()) + (work.wanghao.autoupdate.BuildConfig.PROVIDER_AUTH_END_STUFF)), apkPath), BuildConfig.ARCHIVE_MIME_TYPE_APK); intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION); }else { intent.setDataAndType(android.net.Uri.parse(((work.wanghao.autoupdate.BuildConfig.FILE_START_STUFF) + (apkPath.getAbsolutePath()))), BuildConfig.ARCHIVE_MIME_TYPE_APK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3613/buggy-version/autoupdate.src.main.java.work.wanghao.autoupdate.utils.PackageUtils.java", "BodyUseAPI": [], "Fixed commit": "92b9581f806e2c88200280a8b85f9bed962625af", "Url": "https://api.github.com/repos/Doublemine/AutoUpdate", "Date": "2016-09-19T07:57:14Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getArguments().getString(SearchManager.QUERY,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (query != null) { setQuery(query); }else { setEmpty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3409/buggy-version/app.src.main.java.com.alorma.github.ui.fragment.search.SearchReposFragment.java", "BodyUseAPI": ["com.alorma.github.ui.fragment.search.SearchReposFragment.setQuery(java.lang.String)"], "Fixed commit": "7767630511af0a51c83f8f44bbc425268bff9844", "Url": "https://api.github.com/repos/gitskarios/Gitskarios", "Date": "2015-01-18T12:18:41Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (query != null) { args.putString(SearchManager.QUERY, query); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3409/buggy-version/app.src.main.java.com.alorma.github.ui.fragment.search.SearchReposFragment.java", "BodyUseAPI": ["android.os.Bundle.putString(SearchManager.QUERY,java.lang.String)"], "Fixed commit": "7767630511af0a51c83f8f44bbc425268bff9844", "Url": "https://api.github.com/repos/gitskarios/Gitskarios", "Date": "2015-01-18T12:18:41Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.cloud.amazon.ec2.VirtualMachine.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (filesToBeDeleted != null) it.cloud.amazon.ec2.VirtualMachine.deleteFiles(ip, vm, filesToBeDeleted.split(\";\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5862/buggy-version/src.it.cloud.amazon.ec2.VirtualMachine.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "it.cloud.amazon.ec2.VirtualMachine.deleteFiles(java.lang.String,it.cloud.amazon.ec2.VirtualMachine,java.lang.String[])"], "Fixed commit": "ca9ef55022d5e4066b682255d0b929892b17a944", "Url": "https://api.github.com/repos/rickdesantis/cloud-runner", "Date": "2015-08-14T15:58:53Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.cloud.amazon.ec2.VirtualMachine.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (filesToBeGet != null) it.cloud.amazon.ec2.VirtualMachine.retrieveFiles(ip, vm, count, filesToBeGet.split(\";\"), localPath, remotePath);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5862/buggy-version/src.it.cloud.amazon.ec2.VirtualMachine.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "it.cloud.amazon.ec2.VirtualMachine.retrieveFiles(java.lang.String,it.cloud.amazon.ec2.VirtualMachine,int,java.lang.String[],java.lang.String,java.lang.String)"], "Fixed commit": "ca9ef55022d5e4066b682255d0b929892b17a944", "Url": "https://api.github.com/repos/rickdesantis/cloud-runner", "Date": "2015-08-14T15:58:53Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.cloud.amazon.ec2.VirtualMachine.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (filesToBeGet != null) retrieveFiles(filesToBeGet.split(\";\"), localPath, remotePath);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5862/buggy-version/src.it.cloud.amazon.ec2.VirtualMachine.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "it.cloud.amazon.ec2.VirtualMachine.retrieveFiles(java.lang.String[],java.lang.String,java.lang.String)"], "Fixed commit": "ca9ef55022d5e4066b682255d0b929892b17a944", "Url": "https://api.github.com/repos/rickdesantis/cloud-runner", "Date": "2015-08-14T15:58:53Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.cloud.amazon.ec2.VirtualMachine.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (filesToBeDeleted != null) deleteFiles(filesToBeDeleted.split(\";\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5862/buggy-version/src.it.cloud.amazon.ec2.VirtualMachine.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "it.cloud.amazon.ec2.VirtualMachine.deleteFiles(java.lang.String[])"], "Fixed commit": "ca9ef55022d5e4066b682255d0b929892b17a944", "Url": "https://api.github.com/repos/rickdesantis/cloud-runner", "Date": "2015-08-14T15:58:53Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((b.r.b.HomeScreenActivity.pDb) != null) { b.r.b.HomeScreenActivity.pDb.Cleanup(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2667/buggy-version/src.b.r.b.HomeScreenActivity.java", "BodyUseAPI": [], "Fixed commit": "fcf23a2f64f6f8f3082503f0883f15a286ed5f7a", "Url": "https://api.github.com/repos/dostrander/BRB", "Date": "2012-05-07T03:48:25Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isWifiEnable) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7843/buggy-version/app.src.main.java.cn.ysu.edu.realtimeshare.service.InitService.java", "BodyUseAPI": [], "Fixed commit": "caef93c84cb88b309c01347021114955ba47ee30", "Url": "https://api.github.com/repos/BasinPei/RealtimeShare", "Date": "2017-05-20T08:13:31Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (group != null) { connectedDevices.addAll(group.getClientList()); }else { connectedDevices.addAll(new java.util.ArrayList<android.net.wifi.p2p.WifiP2pDevice>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7843/buggy-version/app.src.main.java.cn.ysu.edu.realtimeshare.activity.MainActivity.java", "BodyUseAPI": ["android.net.wifi.p2p.WifiP2pGroup.getClientList()", "java.util.ArrayList<android.net.wifi.p2p.WifiP2pDevice>.addAll(group.getClientList())"], "Fixed commit": "caef93c84cb88b309c01347021114955ba47ee30", "Url": "https://api.github.com/repos/BasinPei/RealtimeShare", "Date": "2017-05-20T08:13:31Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasAckers) { executor.getExecutorTransfer().tryTransfer(adrTuple, executor.getOverflow()); }else { executor.getExecutorTransfer().transfer(adrTuple); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4959/buggy-version/storm-client.src.jvm.org.apache.storm.executor.spout.SpoutOutputCollectorImpl.java", "BodyUseAPI": [], "Fixed commit": "ece4ce2d8c829da53cfb48448d4f988110e237aa", "Url": "https://api.github.com/repos/roshannaik/storm", "Date": "2017-09-01T21:10:34Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msgCategory.equals(\"Encouragement\")) { intent.putExtra(\"homeEncouragement\", msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2402/buggy-version/app.src.main.java.com.wordpress.zackleaman.materialtablayout.AlertReceiver.java", "BodyUseAPI": [], "Fixed commit": "1b5a5cd22952e3ac126b13799bc61296db24b3fc", "Url": "https://api.github.com/repos/ZackLeaman/Encouragement_Android_App", "Date": "2016-09-24T03:36:34Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (negative && ((sb.toString().charAt(0)) != '-')) return \"-\" + (sb.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1681/buggy-version/src.cs301.project.pkg2.Cs301Project2.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()"], "Fixed commit": "b879468efb3c59cdd8eedd458547599427dff532", "Url": "https://api.github.com/repos/joshuacamacho/cs301-project-2", "Date": "2017-03-14T05:14:55Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (threshold >= 90) { nl.tudelft.ti2806.pl1.zoomlevels.ComplexCollapser.collapseComplexMutation(mut, graph); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6378/buggy-version/src.main.java.nl.tudelft.ti2806.pl1.zoomlevels.ComplexCollapser.java", "BodyUseAPI": [], "Fixed commit": "e248210315be232988b504602e1ea12ced9b6558", "Url": "https://api.github.com/repos/ProgrammingLife2015/dnapp", "Date": "2015-06-19T09:04:02Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.co.alt236.bluetoothlelib.util.ByteUtils.getIntFromByte(byte)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (intFromByte <= 15) { sb.append('0'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3055/buggy-version/library.src.main.java.uk.co.alt236.bluetoothlelib.util.IBeaconUtils.java", "BodyUseAPI": [], "Fixed commit": "31f191b69528e37d2d4c84116c3c298176243565", "Url": "https://api.github.com/repos/alt236/Bluetooth-LE-Library---Android", "Date": "2015-07-03T17:16:21Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(axioms.contains(axiom))) { axioms.add(axiom); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6145/buggy-version/components-ext.src.main.java.org.dllearner.unife.algorithms.probabilistic.structure.leap.AbstractLEAP.java", "BodyUseAPI": ["java.util.List<T>.add(T)"], "Fixed commit": "59d941143dc79114aef3b1f1d19f5e8abd2ff6ff", "Url": "https://api.github.com/repos/SmartDataAnalytics/DL-Learner", "Date": "2017-02-06T15:44:26Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jruncoffeescript.Coffee.compile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!succeeded) && (!(optWatch))) { java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6754/buggy-version/jruncoffeescript.Coffee.java", "BodyUseAPI": [], "Fixed commit": "0b98aaf8eeaa59fba38d40b639a683e6ad83320d", "Url": "https://api.github.com/repos/kzmi/jruncoffeescript", "Date": "2015-06-05T04:01:49Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2297/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "c99397dc187b9398484b2bf9c5139b7d14bdda42", "Url": "https://api.github.com/repos/clebertsuconic/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jprogrammers.service.CustomerService.getCustomerByNationalCode(getNationalCode())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (customer != null) { addMessage(FacesMessage.SEVERITY_ERROR, com.jprogrammers.language.LanguageUtil.get(\"there_is_customer_with_this_national_code\")); return false; }else if (isCustomerFieldsValid()) { com.jprogrammers.service.CustomerService.addCustomer(getFirstName(), getLastName(), getNationalCode(), getNationalId(), getTell(), getMobile(), getWorkTell(), getJobTitle(), getHomeAddress(), getWorkAddress(), getFatherName(), getCompany(), getProvince(), getBirthday(), getZipCode(), user.getUserId()); addMessage(FacesMessage.SEVERITY_INFO, com.jprogrammers.language.LanguageUtil.get(\"customer_added_successfully\")); emptyFields(); init(); return true; }else { addMessage(FacesMessage.SEVERITY_ERROR, com.jprogrammers.language.LanguageUtil.get(\"please_insert_valid_parameter\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6922/buggy-version/src.com.jprogrammers.bean.CustomerBean.java", "BodyUseAPI": [], "Fixed commit": "04ec2cf6af22dea59f7da5fa3b917e4c8d60adf0", "Url": "https://api.github.com/repos/jprogrammers/car-manager", "Date": "2014-10-16T12:41:03Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jprogrammers.bean.CartexService.getCartexByBodyNumber(getBodyNumber())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cartex != null) { javax.faces.context.FacesContext.getCurrentInstance().addMessage(null, new javax.faces.application.FacesMessage(javax.faces.application.FacesMessage.SEVERITY_ERROR, com.jprogrammers.language.LanguageUtil.get(\"there_is_cartex_with_this_body_number\"), \"\")); }else if (((((com.jprogrammers.util.Validator.isNullOrEmpty(getColor())) || (com.jprogrammers.util.Validator.isNullOrEmpty(getEngineNumber()))) || (com.jprogrammers.util.Validator.isNullOrEmpty(getBodyNumber()))) || (com.jprogrammers.util.Validator.isNullOrEmpty(getModel()))) || ((getBodyNumber().length()) != 17)) { javax.faces.context.FacesContext.getCurrentInstance().addMessage(null, new javax.faces.application.FacesMessage(javax.faces.application.FacesMessage.SEVERITY_ERROR, com.jprogrammers.language.LanguageUtil.get(\"please_insert_valid_parameter\"), \"\")); }else { com.jprogrammers.bean.CartexService.addCartex(user.getUserId(), getCustomerId(), getLicenceId(), getColor(), getEngineNumber(), getBodyNumber(), getVINNumber(), getModel(), getBoughtDate(), getPlateNumber()); javax.faces.context.FacesContext.getCurrentInstance().addMessage(null, new javax.faces.application.FacesMessage(javax.faces.application.FacesMessage.SEVERITY_INFO, com.jprogrammers.language.LanguageUtil.get(\"cartex_added_successfully\"), \"\")); emptyFields(); init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6922/buggy-version/src.com.jprogrammers.bean.CartexBean.java", "BodyUseAPI": [], "Fixed commit": "04ec2cf6af22dea59f7da5fa3b917e4c8d60adf0", "Url": "https://api.github.com/repos/jprogrammers/car-manager", "Date": "2014-10-16T12:41:03Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.ibericart.fuelanalyzer.activity.MainActivity.checkLocationPermissions(this)) { locationProvider = locationManager.getProvider(LocationManager.GPS_PROVIDER); if ((locationProvider) != null) { locationManager.addGpsStatusListener(this); if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) { gpsStatusTextView.setText(getString(R.string.status_gps_ready)); return true; } } }else { showPermissionDialog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4836/buggy-version/app.src.main.java.com.ibericart.fuelanalyzer.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "88968ecf095613d3f528b8cf5525322eea29c051", "Url": "https://api.github.com/repos/LorenaChindris/fuel-analyzer", "Date": "2016-06-10T21:09:54Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (responseBody != null) { if (!(containerClz.equals(clazz))) { responseBodyName = (((containerClz.getSimpleName()) + \"[\") + (clazz.getSimpleName())) + \"]\"; }else { responseBodyName = clazz.getSimpleName(); } addToModels(clazz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1283/buggy-version/src.main.java.com.github.kongchen.swagger.docgen.spring.SpringMvcApiReader.java", "BodyUseAPI": [], "Fixed commit": "0d72914c745565f1131903bcfbf6944934460603", "Url": "https://api.github.com/repos/kongchen/swagger-maven-plugin", "Date": "2015-02-09T17:24:31Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.node.ObjectNode.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (typeNode == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7999/buggy-version/core.src.main.java.org.limeprotocol.serialization.JacksonEnvelopeSerializer.java", "BodyUseAPI": [], "Fixed commit": "d8e9d6d06ede12314a862f66860cdfbf70484f82", "Url": "https://api.github.com/repos/takenet/lime-java", "Date": "2015-02-06T14:19:27Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/934/buggy-version/src.main.java.org.mcsg.survivalgames.util.MessageUtil.java", "BodyUseAPI": [], "Fixed commit": "04d06c92f0e57ac9c2b4deb476424facf12f1d90", "Url": "https://api.github.com/repos/khobbits/Survival-Games", "Date": "2013-06-28T05:44:37Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newState.equals(ch.alv.sysinfos.web.rest.system.CLOSED)) || (newState.equals(ch.alv.sysinfos.web.rest.system.CANCELLED))) { systemMessage.setSeverity(SystemState.OPERATIONAL); }else { systemMessage.setSeverity(systemMessageRequestBody.getSeverity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6498/buggy-version/src.main.java.ch.alv.sysinfos.web.rest.system.SystemMessageResource.java", "BodyUseAPI": [], "Fixed commit": "004f41ad0848cd03c417a909ef54fad5eced9f8a", "Url": "https://api.github.com/repos/alv-ch/alv-ch-sysinfos.api", "Date": "2017-07-17T15:51:13Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (line.equals(\"\")) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4115/buggy-version/nio-simple-http-proxy.src.main.java.org.zlambda.projects.ClientSocketChannelHandler.java", "BodyUseAPI": [], "Fixed commit": "c7f5980e6d62c7a8484e327346b0b1ff1308e2b4", "Url": "https://api.github.com/repos/alanzplus/HTTP-Proxy", "Date": "2016-05-25T09:41:41Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.equals(\"\\n\")) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5882/buggy-version/src.hr.fer.ppj.lab1.helper.InputProcessor.java", "BodyUseAPI": [], "Fixed commit": "e352a15bfd3e5bd7cbce02110affe00afe107f88", "Url": "https://api.github.com/repos/plt-laboratory/plt", "Date": "2017-10-22T10:42:58Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loginMode) { teamawesome.cs180frontend.API.RetrofitSingleton.getInstance().getUserService().login(loginRegisterBundle).enqueue(new teamawesome.cs180frontend.API.Services.Callbacks.LoginRegisterCallback()); }else { teamawesome.cs180frontend.API.RetrofitSingleton.getInstance().getUserService().register(loginRegisterBundle).enqueue(new teamawesome.cs180frontend.API.Services.Callbacks.LoginRegisterCallback()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4168/buggy-version/app.src.main.java.teamawesome.cs180frontend.Activities.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "db58e5cf61023bfde5a21676a3326a1329ac493c", "Url": "https://api.github.com/repos/kkong006/De-Classify", "Date": "2016-11-05T00:41:27Z"},
{"Line": "=>1427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Settings.acidDamage) > 0.0) { lavaListener = new com.wasteofplastic.acidisland.LavaCheck(this); manager.registerEvents(lavaListener, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1278/buggy-version/acidIsland.src.com.wasteofplastic.acidisland.AcidIsland.java", "BodyUseAPI": [], "Fixed commit": "b67d3813d1dba6d7fa53893bc1ccccfac436bae3", "Url": "https://api.github.com/repos/tastybento/acidisland", "Date": "2014-10-18T17:20:10Z"},
{"Line": "=>1434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Settings.acidDamage) > 0.0) { manager.registerEvents(new com.wasteofplastic.acidisland.SafeBoat(this), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1278/buggy-version/acidIsland.src.com.wasteofplastic.acidisland.AcidIsland.java", "BodyUseAPI": [], "Fixed commit": "b67d3813d1dba6d7fa53893bc1ccccfac436bae3", "Url": "https://api.github.com/repos/tastybento/acidisland", "Date": "2014-10-18T17:20:10Z"},
{"Line": "=>578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getPlayers().getTeamLeader(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (teamLeader != null) { teamMembers = plugin.getPlayers().getMembers(teamLeader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1278/buggy-version/acidIsland.src.com.wasteofplastic.acidisland.IslandCmd.java", "BodyUseAPI": ["plugin.getPlayers().getMembers(java.util.UUID)"], "Fixed commit": "b67d3813d1dba6d7fa53893bc1ccccfac436bae3", "Url": "https://api.github.com/repos/tastybento/acidisland", "Date": "2014-10-18T17:20:10Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.kadirderer.btc.service.AutoTradeService.findUserOrderById(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((uo.getOrderType()) == (OrderType.BUY.getCode())) { boolean amountCalculated = false; if ((uo.getParentId()) != null) { net.kadirderer.btc.db.model.UserOrder parent = autoTradeService.findUserOrderById(uo.getParentId()); if (parent != null) { double balance = (parent.getPrice()) * (parent.getAmount()); amount = balance / price; amountCalculated = true; } } if (!amountCalculated) { amount = ((uo.getPrice()) * amount) / price; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6845/buggy-version/btc-trade-job.src.main.java.net.kadirderer.btc.handler.OrderEvoluateHandler.java", "BodyUseAPI": ["net.kadirderer.btc.db.model.UserOrder.getParentId()", "net.kadirderer.btc.db.model.UserOrder.getPrice()", "net.kadirderer.btc.db.model.UserOrder.getParentId()", "net.kadirderer.btc.service.AutoTradeService.findUserOrderById(uo.getParentId())"], "Fixed commit": "389a45e8e1801b1b334c8a30e359ad21d08af66e", "Url": "https://api.github.com/repos/kderer/btc", "Date": "2017-01-19T02:55:02Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.salesmanager.core.business.catalog.category.service.CategoryService.getById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (parent != null) parent.getAuditSection().setModifiedBy(request.getRemoteUser());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6874/buggy-version/sm-shop.src.main.java.com.salesmanager.web.admin.controller.categories.CategoryController.java", "BodyUseAPI": ["com.salesmanager.core.business.catalog.category.model.Category.getAuditSection()", "parent.getAuditSection().setModifiedBy(request.getRemoteUser())"], "Fixed commit": "5e0c6142bea6e16a2b8794d05a2b5d6bb659a738", "Url": "https://api.github.com/repos/asaad1982/laVetrina", "Date": "2016-04-11T21:14:25Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.owncloud.android.MainApp.getSyncedFolderObserverService()) != null) { com.owncloud.android.MainApp.getSyncedFolderObserverService().syncToDisk(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6217/buggy-version/src.com.owncloud.android.MainApp.java", "BodyUseAPI": [], "Fixed commit": "36efc1f92851f8e163f53284cddfe5b67c20affc", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-02-07T09:59:04Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((--(o.monitor.count)) == 0) { o.monitor.owner = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4510/buggy-version/classlib.src.main.java.org.teavm.classlib.java.lang.TObject.java", "BodyUseAPI": [], "Fixed commit": "a96ee8a647af78979c7fb1db5a5016b936d8d1ae", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2015-10-19T14:42:35Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lookahead.tag) == (Tag.NUM)) match(new parser.Token(Tag.NUM)); else match(new parser.Token(Tag.REAL));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7196/buggy-version/compiler.src.parser.RecursiveDescentParser.java", "BodyUseAPI": [], "Fixed commit": "684c8e3738368ea1d877287cbb605888cbf4cc2b", "Url": "https://api.github.com/repos/guruce/compiler", "Date": "2013-12-22T06:20:29Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.gebit.integrity.remoting.entities.setlist.SetList.determineEntryResultState(de.gebit.integrity.remoting.entities.setlist.SetListEntry)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (tempResultState != null) { resultBearingEntryResultMap.put(tempEntry, tempResultState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1802/buggy-version/de.gebit.integrity.remoting.src.de.gebit.integrity.remoting.entities.setlist.SetList.java", "BodyUseAPI": ["java.util.HashMap<de.gebit.integrity.remoting.entities.setlist.SetListEntry, de.gebit.integrity.remoting.entities.setlist.SetListEntryResultStates>.put(de.gebit.integrity.remoting.entities.setlist.SetListEntry,de.gebit.integrity.remoting.entities.setlist.SetListEntryResultStates)"], "Fixed commit": "77466ae60c92bae1a6630dba53576f5ccb17dfc7", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2016-05-03T10:46:05Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (column > 0) { destination.write(com.fearnoeval.yenc.YencEncoder.crlf); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4335/buggy-version/src.main.java.com.fearnoeval.yenc.YencEncoder.java", "BodyUseAPI": [], "Fixed commit": "fe53e2ffbd3160cca416922b4a7886e94bf1a13b", "Url": "https://api.github.com/repos/fearnoeval/yenc-encoder", "Date": "2017-05-25T10:26:06Z"},
{"Line": "=>784", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((note.slot) == slot) mRightHoldNotes.add(note);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5041/buggy-version/core.src.com.splitbeat.game.SongEditScreen.java", "BodyUseAPI": ["java.util.ArrayList<com.splitbeat.game.HoldNote>.add(com.splitbeat.game.HoldNote)"], "Fixed commit": "b14f10a6b1a76305a4705d925fc8e7bb7e988ff0", "Url": "https://api.github.com/repos/TylerSandman/split-beat", "Date": "2014-08-17T22:30:10Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((acl) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6851/buggy-version/core.src.main.java.com.fujitsu.dc.core.model.impl.fs.DavCmpFsImpl.java", "BodyUseAPI": [], "Fixed commit": "7e221db784dcee411a5fac52d5378c0e8207b155", "Url": "https://api.github.com/repos/fujitsu-pio/io", "Date": "2016-06-14T08:44:48Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mailboxFactory.isClosing()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6999/buggy-version/src.main.java.org.agilewiki.pamailbox.MailboxImpl.java", "BodyUseAPI": [], "Fixed commit": "a6479d441ddc35319e044cf2d00d7885d2b642f1", "Url": "https://api.github.com/repos/laforge49/PAMailbox", "Date": "2013-04-20T02:06:09Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.calcite.util.Util.last(names).startsWith(\"*\")) { return org.apache.calcite.sql.validate.SqlMonotonicity.NOT_MONOTONIC; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5900/buggy-version/core.src.main.java.org.apache.calcite.sql.SqlIdentifier.java", "BodyUseAPI": [], "Fixed commit": "2691656e55480f97bcb458a2d85756e20ca1e13b", "Url": "https://api.github.com/repos/jinfengni/optiq", "Date": "2015-03-20T17:29:28Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.componentPositions) != null) { builder.addAll(this.componentPositions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5900/buggy-version/core.src.main.java.org.apache.calcite.sql.SqlIdentifier.java", "BodyUseAPI": [], "Fixed commit": "2691656e55480f97bcb458a2d85756e20ca1e13b", "Url": "https://api.github.com/repos/jinfengni/optiq", "Date": "2015-03-20T17:29:28Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (row > 0) getParameters().add(0, row);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8648/buggy-version/datasource-csv.src.main.java.org.obiba.magma.datasource.csv.support.CsvDatasourceParsingException.java", "BodyUseAPI": [], "Fixed commit": "7b76a992dc8458471f46c49205ee73426aeaefcd", "Url": "https://api.github.com/repos/obiba/magma", "Date": "2013-02-21T16:36:42Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (row > 0) getParameters().add(0, row);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8648/buggy-version/datasource-csv.src.main.java.org.obiba.magma.datasource.csv.support.CsvDatasourceParsingException.java", "BodyUseAPI": [], "Fixed commit": "7b76a992dc8458471f46c49205ee73426aeaefcd", "Url": "https://api.github.com/repos/obiba/magma", "Date": "2013-02-21T16:36:42Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Date.class.isAssignableFrom(type)) return new de.thm.mni.mote.mode.config.xml.ISODateTransform();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6301/buggy-version/src.main.java.de.thm.mni.mote.mode.config.xml.MyMatcher.java", "BodyUseAPI": [], "Fixed commit": "54ef1877823a8ef23b29ea508dac23a84acea57a", "Url": "https://api.github.com/repos/THM-MoTE/MoDE", "Date": "2017-02-02T13:30:48Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.nio.file.Path.class.isAssignableFrom(type)) return new de.thm.mni.mote.mode.config.xml.PathTransform();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6301/buggy-version/src.main.java.de.thm.mni.mote.mode.config.xml.MyMatcher.java", "BodyUseAPI": [], "Fixed commit": "54ef1877823a8ef23b29ea508dac23a84acea57a", "Url": "https://api.github.com/repos/THM-MoTE/MoDE", "Date": "2017-02-02T13:30:48Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isConnected()) { new java.lang.Thread(this, (\"BridgeClient-\" + (this.localPort))).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5301/buggy-version/src.main.java.lmo.tcp.bridge.client.BridgeClient.java", "BodyUseAPI": [], "Fixed commit": "053810fd692000d89edc1ce81b9e6f547ef68ea5", "Url": "https://api.github.com/repos/lmo0731/tcp-bridge", "Date": "2016-05-20T18:06:08Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((java.lang.Boolean) (trans.get(j).get(\"debe\")))) sum = sum + ((java.lang.Long) (trans.get(j).get(\"amount\"))); else sum = sum - ((java.lang.Long) (trans.get(j).get(\"amount\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/9021/buggy-version/src.Application.General.java", "BodyUseAPI": ["trans.get(j).get(java.lang.String)", "java.util.LinkedList<com.mongodb.BasicDBObject>.get(int)", "java.util.LinkedList<com.mongodb.BasicDBObject>.get(int)", "trans.get(j).get(java.lang.String)"], "Fixed commit": "dcfeb1d742f42d9ed620a66dbaad9547117a7ecf", "Url": "https://api.github.com/repos/caal-15/Contables", "Date": "2012-07-12T01:39:55Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((java.lang.Boolean) (trans.get(j).get(\"debe\")))) sum = sum - ((java.lang.Long) (trans.get(j).get(\"amount\"))); else sum = sum + ((java.lang.Long) (trans.get(j).get(\"amount\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/9021/buggy-version/src.Application.General.java", "BodyUseAPI": ["java.util.LinkedList<com.mongodb.BasicDBObject>.get(int)", "trans.get(j).get(java.lang.String)", "trans.get(j).get(java.lang.String)", "java.util.LinkedList<com.mongodb.BasicDBObject>.get(int)"], "Fixed commit": "dcfeb1d742f42d9ed620a66dbaad9547117a7ecf", "Url": "https://api.github.com/repos/caal-15/Contables", "Date": "2012-07-12T01:39:55Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((java.lang.Boolean) (trans.get(j).get(\"debe\")))) sum = sum - ((java.lang.Long) (trans.get(j).get(\"amount\"))); else sum = sum + ((java.lang.Long) (trans.get(j).get(\"amount\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/9021/buggy-version/src.Application.General.java", "BodyUseAPI": ["java.util.LinkedList<com.mongodb.BasicDBObject>.get(int)", "java.util.LinkedList<com.mongodb.BasicDBObject>.get(int)", "trans.get(j).get(java.lang.String)", "trans.get(j).get(java.lang.String)"], "Fixed commit": "dcfeb1d742f42d9ed620a66dbaad9547117a7ecf", "Url": "https://api.github.com/repos/caal-15/Contables", "Date": "2012-07-12T01:39:55Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, Individual>.get(int)", "java.util.HashMap<java.lang.Integer, Individual>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((father.getDeath().equals(\"N/A\")) && (mother.getDeath().equals(\"N/A\"))) { return true; }else if ((!(father.getDeath().equals(\"N/A\"))) && (DateComparison.beforeDate(child.getBirthday(), father.getDeath()))) { return true; }else if ((!(mother.getDeath().equals(\"N/A\"))) && (DateComparison.beforeDate(child.getBirthday(), mother.getDeath()))) { return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8413/buggy-version/Week3.ReportingTool.java", "BodyUseAPI": ["father.getDeath().equals(java.lang.String)", "Individual.getDeath()", "DateComparison.beforeDate(child.getBirthday(),mother.getDeath())", "DateComparison.beforeDate(child.getBirthday(),father.getDeath())", "Individual.getDeath()", "Individual.getDeath()", "Individual.getDeath()", "mother.getDeath().equals(java.lang.String)"], "Fixed commit": "35135ada7db8163ba4653f6aa36092c93c3cb93d", "Url": "https://api.github.com/repos/MindsculptorX/CS555_Project", "Date": "2017-10-25T21:35:05Z"},
{"Line": "=>1210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.kmelia.control.ejb.KmeliaBmEJB.getProfile(pubDetail.getUpdaterId(),com.stratelia.webactiv.util.node.model.NodePK)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (SilverpeasRole.writer.isInRole(profile)) { newStatus = com.stratelia.webactiv.util.publication.model.PublicationDetail.TO_VALIDATE; }else if ((pubDetail.isRefused()) && ((SilverpeasRole.admin.isInRole(profile)) || (SilverpeasRole.publisher.isInRole(profile)))) { newStatus = com.stratelia.webactiv.util.publication.model.PublicationDetail.VALID; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7429/buggy-version/kmelia.kmelia-ejb.src.main.java.com.stratelia.webactiv.kmelia.control.ejb.KmeliaBmEJB.java", "BodyUseAPI": ["SilverpeasRole.admin.isInRole(java.lang.String)", "SilverpeasRole.publisher.isInRole(java.lang.String)"], "Fixed commit": "a2384b67a731469eb02bb92634a8163a3b2b964b", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2017-02-21T15:56:10Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1269/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "5c86eea521244abfb71c25a7a70c69842b07506d", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-05T22:49:33Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.magic.services.MTGControler.getInstance().getEnabledCache().getPic(mc, ed)) != null) return org.magic.services.MTGControler.getInstance().getEnabledCache().getPic(mc, ed);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1086/buggy-version/src.org.magic.api.pictures.impl.MagicCardInfoPicturesProvider.java", "BodyUseAPI": ["org.magic.services.MTGControler.getInstance().getEnabledCache().getPic(org.magic.api.beans.MagicCard,org.magic.api.beans.MagicEdition)"], "Fixed commit": "4edfeb58675ff6101a8e602ba6f521d7e219e73e", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-09-20T17:38:25Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (separatorPosition < 0) { separatorPosition = fileName.lastIndexOf(\"\\\\\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8535/buggy-version/odt2html.odt2html1.ZipProcessor.java", "BodyUseAPI": [], "Fixed commit": "a6f29c743312ab858f3835c3af89961d8478ca81", "Url": "https://api.github.com/repos/skreutzer/automated_digital_publishing", "Date": "2014-04-22T18:31:47Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (end < 0) { end = fileName.indexOf(\"\\\\\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8535/buggy-version/odt2html.odt2html1.ZipProcessor.java", "BodyUseAPI": [], "Fixed commit": "a6f29c743312ab858f3835c3af89961d8478ca81", "Url": "https://api.github.com/repos/skreutzer/automated_digital_publishing", "Date": "2014-04-22T18:31:47Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((f) != null) { f.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7442/buggy-version/src.org.warp.picalculator.screens.EquationScreen.java", "BodyUseAPI": [], "Fixed commit": "09387176bb367f8f34e3de12350aac71c695ff84", "Url": "https://api.github.com/repos/Cavallium/WarpPI", "Date": "2016-12-03T15:37:22Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == corpusFilters) corpusFilters = new java.util.ArrayList<edu.usc.cssl.tacit.common.queryprocess.Filter>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8389/buggy-version/edu.usc.cssl.tacit.common.ui.src.edu.usc.cssl.tacit.common.queryprocess.QueryProcesser.java", "BodyUseAPI": [], "Fixed commit": "bbf39ef77ffa3a12f08b4dc16f9c0a45bf534751", "Url": "https://api.github.com/repos/USC-CSSL/TACIT", "Date": "2015-12-08T20:59:27Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format == (de.uni_goettingen.sub.commons.ocr.api.OcrFormat.METADATA)) { if (resultXmlNotThere()) { addResultXmlOutput(); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8682/buggy-version/model-abbyy-server.src.main.java.de.uni_goettingen.sub.commons.ocr.abbyy.server.AbbyyProcess.java", "BodyUseAPI": [], "Fixed commit": "3dbfb6dc82eb1925fd8811d60bdfeffb1d529d76", "Url": "https://api.github.com/repos/subugoe/ocr-tools", "Date": "2015-01-15T14:28:17Z"},
{"Line": "=>775", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ctx.increment) != null) && ((ctx.increment.info) != null)) ctx.info.increment = ctx.increment.info.expr;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/9236/buggy-version/src.main.java.org.apache.sysml.parser.dml.DmlSyntacticValidator.java", "BodyUseAPI": [], "Fixed commit": "fa49ae507af76c4055ce20aa2237220eaf1e4cf8", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2016-09-28T22:19:47Z"},
{"Line": "=>1373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ctx.increment) != null) && ((ctx.increment.info) != null)) ctx.info.increment = ctx.increment.info.expr;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/9236/buggy-version/src.main.java.org.apache.sysml.parser.pydml.PydmlSyntacticValidator.java", "BodyUseAPI": [], "Fixed commit": "fa49ae507af76c4055ce20aa2237220eaf1e4cf8", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2016-09-28T22:19:47Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.IType.getAnnotation(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((annotation == null) || (!(annotation.exists()))) annotation = testClass.getAnnotation(org.junit.runner.RunWith.class.getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2310/buggy-version/org.eclipse.jdt.junit.runners.src.org.eclipse.jdt.junit.runners.TypeUtil.java", "BodyUseAPI": [], "Fixed commit": "2a1ea4bdb8b8d2d955ff939d35eea449ab395a17", "Url": "https://api.github.com/repos/meysholdt/eclipse_jdt_junit_runners", "Date": "2013-08-22T11:02:24Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSoundPool) != null) { mSoundPool.release(); mSoundPool = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6801/buggy-version/java.com.alexkaz.game2048.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "5569c865922f7ff39fbe88e6bc483906ab7408ea", "Url": "https://api.github.com/repos/AlexKazmirchuk/Game2048", "Date": "2016-06-24T07:09:51Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (canvas != null) { drawField(canvas); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6801/buggy-version/java.com.alexkaz.game2048.gamelogic.DrawThreat.java", "BodyUseAPI": ["com.alexkaz.game2048.gamelogic.DrawThreat.drawField(android.graphics.Canvas)"], "Fixed commit": "5569c865922f7ff39fbe88e6bc483906ab7408ea", "Url": "https://api.github.com/repos/AlexKazmirchuk/Game2048", "Date": "2016-06-24T07:09:51Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d != (java.lang.Math.rint(d))) { return ((int) (d)); }else { java.math.BigDecimal lower = java.math.BigDecimal.valueOf(n).multiply(scaleAsBD()); return (lower.compareTo(net.openhft.koloboke.collect.impl.Scaler.INT_MAX_VALUE)) < 0 ? lower.intValue() : java.lang.Integer.MAX_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7066/buggy-version/lib.impl.src.main.java.net.openhft.koloboke.collect.impl.Scaler.java", "BodyUseAPI": [], "Fixed commit": "639b405b122df50b32b4e9cbc8263eee20078e4b", "Url": "https://api.github.com/repos/OpenHFT/Koloboke", "Date": "2014-11-01T20:11:18Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.AuthorEntry.AUTHOR))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (authors != null) { java.lang.String[] authorsArr = authors.split(\",\"); ((android.widget.TextView) (mRootView.findViewById(R.id.authors))).setLines(authorsArr.length); ((android.widget.TextView) (mRootView.findViewById(R.id.authors))).setText(authors.replace(\",\", \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7784/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.AddBookFragment.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "((android.widget.TextView) (mRootView.findViewById(R.id.authors))).setText(java.lang.String)"], "Fixed commit": "055e26e9eece0ec26f9f0c3001b444a082fbe0e5", "Url": "https://api.github.com/repos/guziks/android-nd-super-duo", "Date": "2015-10-26T10:16:46Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resource.hasProperty(\"valet\")) { java.lang.String type = resource.getProperties().valueOf(\"valet\"); if (\"war-xml\".equals(type)) return new org.cloudml.connectors.util.WarXmlConfigValet(relation, resource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8999/buggy-version/connectors.src.main.java.org.cloudml.connectors.util.ConfigValet.java", "BodyUseAPI": ["resource.getProperties().valueOf(java.lang.String)", "org.cloudml.core.Resource.getProperties()"], "Fixed commit": "f4392064edb3d7f13410ccc6ec62b9e265a43846", "Url": "https://api.github.com/repos/SINTEF-9012/cloudml", "Date": "2014-08-28T07:45:37Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clientTxId) < 0) { if (((requestType) != (OChannelBinaryProtocol.REQUEST_CONNECT)) && ((requestType) != (OChannelBinaryProtocol.REQUEST_DB_OPEN))) throw new com.orientechnologies.orient.server.network.protocol.binary.OSecurityException(\"Missing session for\"); connection = server.getClientConnectionManager().connect(this); connection.getData().sessionId = clientTxId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3015/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary.java", "BodyUseAPI": [], "Fixed commit": "2107b02eb545febf568daca90b926f6437ffd7a8", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-07-05T18:03:29Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((classIndex) == null) classIndex = new edu.stanford.nlp.util.HashIndex();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8813/buggy-version/src.edu.stanford.nlp.ie.PresetSequenceClassifier.java", "BodyUseAPI": [], "Fixed commit": "93c11c4966f749ca6873b24473de25077dcb5a0b", "Url": "https://api.github.com/repos/stanfordnlp/CoreNLP", "Date": "2017-07-28T03:58:51Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((issues.get(country).get(publication)) == null) { issues.get(country).put(publication, new java.util.ArrayList<net.ducksmanager.whattheduck.Issue>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7641/buggy-version/app.src.main.java.net.ducksmanager.whattheduck.Collection.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.HashMap<java.lang.String, java.util.ArrayList<net.ducksmanager.whattheduck.Issue>>>.get(java.lang.String)", "issues.get(country).put(java.lang.String,java.util.ArrayList<net.ducksmanager.whattheduck.Issue>)"], "Fixed commit": "c388280b68c1a5c6f707dbc84cc16bf02ca5fd8b", "Url": "https://api.github.com/repos/bperel/WhatTheDuck", "Date": "2017-08-14T17:01:38Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)", "java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(fullName.equals(\"Dummy\"))) && (!(WhatTheDuck.coaCollection.hasCountry(shortName)))) { WhatTheDuck.coaCollection.addCountry(shortName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7641/buggy-version/app.src.main.java.net.ducksmanager.inducks.coa.CountryListing.java", "BodyUseAPI": ["WhatTheDuck.coaCollection.addCountry(java.lang.String)"], "Fixed commit": "c388280b68c1a5c6f707dbc84cc16bf02ca5fd8b", "Url": "https://api.github.com/repos/bperel/WhatTheDuck", "Date": "2017-08-14T17:01:38Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.aware.plugin.io_panero.Aware.getSetting(getApplicationContext(), Settings.SAMPLES_LOCATION_METER).length()) == 0) { com.aware.plugin.io_panero.Aware.setSetting(getApplicationContext(), Settings.SAMPLES_LOCATION_METER, 5); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/759/buggy-version/app.src.main.java.com.aware.plugin.io_panero.Plugin.java", "BodyUseAPI": [], "Fixed commit": "4371141dfbec71830c439cc2461207f90c5026d9", "Url": "https://api.github.com/repos/ppanero/com.aware.plugin.io", "Date": "2015-03-22T09:31:14Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (existingValue != null) { return existingValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8125/buggy-version/core.src.main.java.org.ehcache.Ehcache.java", "BodyUseAPI": [], "Fixed commit": "45927c2c017953e6a0af67ae4b300a1d0d1b0c6c", "Url": "https://api.github.com/repos/timeck/ehcache3", "Date": "2014-11-11T13:47:32Z"},
{"Line": "=>585", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)", "java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (((httpURL == null) || (httpURL.equals(\"\"))) && (url != null)) { props.setProperty(\"httpURL\", url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8639/buggy-version/source.java.client.CTPClient.java", "BodyUseAPI": ["java.util.Properties.setProperty(java.lang.String,java.lang.String)"], "Fixed commit": "e4af6157cf49712def8d07c928bc8527bfa3f879", "Url": "https://api.github.com/repos/ltarbox/CTPClient", "Date": "2014-08-28T12:02:28Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fixtures.size()) > 0) { logger.debug(\"Got an existing fixture withoug a date\"); fixture = fixtures.get(0); java.util.Calendar existingFixtureDate = fixture.getFixtureDate(); logger.debug((\"fixtureDate = \" + existingFixtureDate)); if (existingFixtureDate != null) { logger.debug((\"Shouldn't have one, but fixture date: \" + (new java.text.SimpleDateFormat(\"yyyy-MM-dd\").format(existingFixtureDate.getTime())))); } }else { logger.debug(\"No fixture found for these teams in this division for the season, so adding one...\"); fixture = domainObjectFactory.createFixture(season, homeTeam, awayTeam); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1024/buggy-version/src.main.java.uk.co.mindbadger.footballresultsanalyser.dao.FootballResultsAnalyserHibernateDAO.java", "BodyUseAPI": ["java.util.List<uk.co.mindbadger.footballresultsanalyser.domain.Fixture>.get(int)"], "Fixed commit": "b48c81f7905d6394c9561dc3d1c6ff214d1ed87a", "Url": "https://api.github.com/repos/mindbadger/FootballResultsHibernateDAO", "Date": "2014-02-10T20:17:36Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(getPaintManager().renderUsingBuffer(((java.awt.Graphics2D) (g)), g.getClipBounds(), getGraphicalRepresentation(), getScale()))) { getGraphicalRepresentation().paint(g, getController()); super.paint(g); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2188/buggy-version/flexodesktop.GUI.flexographicalengine.src.main.java.org.openflexo.fge.view.ConnectorView.java", "BodyUseAPI": ["javax.swing.JPanel.paint(java.awt.Graphics)", "org.openflexo.fge.ConnectorGraphicalRepresentation<O>.paint(java.awt.Graphics,org.openflexo.fge.controller.DrawingController<?>)"], "Fixed commit": "0ec34f11aaeabf23c11430e1a97716293037e3a4", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-04-19T09:48:48Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((monitoringAPI) != null) { monitoringAPI.removeService(dependencyGraph.getCloudService()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/9131/buggy-version/rSYBL-control-service-pom.rSYBL-analysis-engine.src.main.java.at.ac.tuwien.dsg.rSybl.analysisEngine.main.ControlService.java", "BodyUseAPI": [], "Fixed commit": "d666278037cdc205d155bb34dd4024b6ed247889", "Url": "https://api.github.com/repos/tuwiendsg/rSYBL", "Date": "2015-04-07T08:56:02Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((controls.get(cloudServiceId)) != null) { controls.get(cloudServiceId).stop(); controls.remove(cloudServiceId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/9131/buggy-version/rSYBL-control-service-pom.rSYBL-analysis-engine.src.main.java.at.ac.tuwien.dsg.rSybl.analysisEngine.main.ControlCoordination.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, at.ac.tuwien.dsg.rSybl.analysisEngine.main.ControlService>.get(java.lang.String)", "controls.get(cloudServiceId).stop()", "java.util.HashMap<java.lang.String, at.ac.tuwien.dsg.rSybl.analysisEngine.main.ControlService>.remove(java.lang.String)"], "Fixed commit": "d666278037cdc205d155bb34dd4024b6ed247889", "Url": "https://api.github.com/repos/tuwiendsg/rSYBL", "Date": "2015-04-07T08:56:02Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contador) == 0) OrginalElement = element;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/9181/buggy-version/src.org.esfinge.metadata.locate.LevelLocator.java", "BodyUseAPI": [], "Fixed commit": "6be325d1d9cd114edb4da54c0c50d6ab200ef728", "Url": "https://api.github.com/repos/EsfingeFramework/metadata", "Date": "2015-10-08T19:49:55Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((root.getRaw(field.key)) instanceof java.util.Map) { map.putAll(((java.util.Map<? extends java.lang.String, ? extends java.lang.Object>) (root.getRaw(field.key)))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8435/buggy-version/src.main.java.net.citizensnpcs.api.persistence.PersistenceLoader.java", "BodyUseAPI": ["net.citizensnpcs.api.util.DataKey.getRaw(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.putAll(((java.util.Map<? extends java.lang.String, ? extends java.lang.Object>) (root.getRaw(field.key))))"], "Fixed commit": "7b6205fb644556f646aa51dff47efd01d631363b", "Url": "https://api.github.com/repos/CitizensDev/CitizensAPI", "Date": "2013-01-30T13:18:24Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.aboutsip.yajpcap.packet.impl.sip.SipInitialLine.parse(com.aboutsip.buffer.Buffer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (initialLine.isRequestLine()) { return new com.aboutsip.yajpcap.packet.impl.sip.SipRequestImpl(((com.aboutsip.yajpcap.packet.impl.sip.SipRequestLine) (initialLine)), this.headers, getPayload()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7767/buggy-version/modules.yajpcap.src.main.java.com.aboutsip.yajpcap.frame.SipFrame.java", "BodyUseAPI": [], "Fixed commit": "ddec934a7f212a1a13ef2759e93b0c76e586829e", "Url": "https://api.github.com/repos/jonasborjesson/aboutsip", "Date": "2012-07-23T05:37:20Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.caltoopia.frontend.cal.AstEntity) (obj)).getActor().getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (name != null) { tmp = tmp.append(name); return tmp; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7902/buggy-version/org.caltoopia.frontend.src.org.caltoopia.frontend.CalQualifiedNameProvider.java", "BodyUseAPI": ["org.eclipse.xtext.naming.QualifiedName.append(java.lang.String)"], "Fixed commit": "e7557a31a09a7a661ad7be6f3c6c45af6f64ea8a", "Url": "https://api.github.com/repos/Caltoopia/caltoopia", "Date": "2013-07-01T11:48:27Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.jacorb.idl.parser.strict_names) { if (originalName != null) { org.jacorb.idl.NameTable.checkScopingRules(originalName, kind); }else { org.jacorb.idl.NameTable.checkScopingRules(name, kind); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4124/buggy-version/idl-compiler.src.main.java.org.jacorb.idl.NameTable.java", "BodyUseAPI": [], "Fixed commit": "188d23b3625d52a0768d1079bef011f7772dfaf1", "Url": "https://api.github.com/repos/rnc/JacORB", "Date": "2015-10-23T10:44:25Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.getOptions().getBlock1()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((block1.getSize()) < currentSize) { newSize = block1.getSize(); newSzx = block1.getSzx(); }else { newSize = currentSize; newSzx = status.getCurrentSzx(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3349/buggy-version/californium-core.src.main.java.org.eclipse.californium.core.network.stack.BlockwiseLayer.java", "BodyUseAPI": ["org.eclipse.californium.core.coap.BlockOption.getSize()", "org.eclipse.californium.core.coap.BlockOption.getSzx()"], "Fixed commit": "d7177d65ebd6b49a5511abbb85ad52c23ce3a602", "Url": "https://api.github.com/repos/eclipse/californium", "Date": "2016-10-03T09:42:01Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalPlayed != 0) { double winnLossPer = 0; winnLossPer = ((double) (numberofWins)) / totalPlayed; winnLossPer = winnLossPer * 100; summ.setWinLossPer(java.lang.Double.parseDouble(df.format(winnLossPer))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1699/buggy-version/ipl.src.main.java.com.ipl.web.controller.PlayResultController.java", "BodyUseAPI": [], "Fixed commit": "b1b5739ecbd5ce9a17ad44550cc48dce53296ec4", "Url": "https://api.github.com/repos/LearningOrga/LearnJava", "Date": "2017-04-01T12:48:59Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gephi.io.processor.spi.ProcessorUI.isValid(org.gephi.io.importer.api.Container[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isValid) { radioButton.setSelected(first); first = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8126/buggy-version/modules.DesktopImport.src.main.java.org.gephi.desktop.importer.ReportPanel.java", "BodyUseAPI": [], "Fixed commit": "b9a02cef38c3cd57415bd5766e556612e70357f4", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2015-10-27T14:17:09Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Sentries.debug) org.jabelpeeps.sentries.Sentries.debugLog(formatted);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/582/buggy-version/src.org.jabelpeeps.sentries.SentryListener.java", "BodyUseAPI": [], "Fixed commit": "1bd5429fb7c9900ccac796adf1d3919ed03a79ce", "Url": "https://api.github.com/repos/Jabelpeeps/Sentries", "Date": "2016-05-29T20:25:00Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(query.startsWith(\"WHO\"))) { id = java.lang.Integer.parseInt(query.substring(((query.lastIndexOf(\" \")) + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7949/buggy-version/hw5.Community.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "5336366bc6d14e3fba9334edc7b2f283c963f0e1", "Url": "https://api.github.com/repos/luisa-hernandez/Homework", "Date": "2017-05-09T23:26:06Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((trans.size()) == 0) { android.widget.Toast.makeText(getApplicationContext(), \"Please select item\", Toast.LENGTH_LONG).show(); }else { android.content.Intent checkout = new android.content.Intent(getApplicationContext(), teammemes.tritonbudget.Checkout.class); checkout.putStringArrayListExtra(\"Transactions\", trans); checkout.putStringArrayListExtra(\"number\", numofpur); startActivity(checkout); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/815/buggy-version/app.src.main.java.teammemes.tritonbudget.PurchaseMenu.java", "BodyUseAPI": ["android.content.Intent.putStringArrayListExtra(java.lang.String,java.util.ArrayList<java.lang.String>)"], "Fixed commit": "ec0dffe318b19d02c02c463dd9b7ec6fee9df270", "Url": "https://api.github.com/repos/knlim95/TritonBudget", "Date": "2017-03-11T02:27:50Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isSwagger) dispatch(method, parts, rsr, service);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6111/buggy-version/javasource.restservices.publish.RestServiceHandler.java", "BodyUseAPI": [], "Fixed commit": "33c88b5c6354aa27f7f3af3c76ba5edca0679528", "Url": "https://api.github.com/repos/reinouts/RestServices", "Date": "2014-06-27T13:04:55Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (failure == null) { delegate.accept(new io.crate.data.ListenableBatchIterator(iterator, completionFuture), null); }else { delegate.accept(null, failure); completionFuture.completeExceptionally(failure); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7223/buggy-version/dex.src.main.java.io.crate.data.ListenableBatchConsumer.java", "BodyUseAPI": ["io.crate.data.BatchConsumer.accept(<nulltype>,java.lang.Throwable)", "java.util.concurrent.CompletableFuture<java.lang.Void>.completeExceptionally(java.lang.Throwable)"], "Fixed commit": "84db454bd2ba79579028f5b1fe793b2e89456e9d", "Url": "https://api.github.com/repos/crate/crate", "Date": "2017-03-15T12:24:12Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((name) != null) && ((version) != null)) { double browserVersion = java.lang.Double.parseDouble(version); if (((\"Mozilla\".equals(name)) && (browserVersion < 10)) || ((\"IE\".equals(name)) && (browserVersion < 10))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7793/buggy-version/central.plugins.org.jboss.tools.central.src.org.jboss.tools.central.internal.browser.VersionedBrowser.java", "BodyUseAPI": [], "Fixed commit": "92d68a0a6191e31a90e6f43e9000513e128a8270", "Url": "https://api.github.com/repos/ibuziuk/jbosstools-central", "Date": "2016-07-26T11:01:06Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (conn == (this.conn.get())) { this.conn.set(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2656/buggy-version/core.src.main.java.org.casinocoin.store.MySQLFullPrunedBlockStore.java", "BodyUseAPI": ["java.lang.ThreadLocal<java.sql.Connection>.set(<nulltype>)"], "Fixed commit": "fe47ae11ac908c99c14c4fca9c7ed42e8f64e59c", "Url": "https://api.github.com/repos/ajochems/casinocoinj", "Date": "2014-08-13T09:46:02Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (conn == (this.conn.get())) { this.conn.set(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2656/buggy-version/core.src.main.java.org.casinocoin.store.PostgresFullPrunedBlockStore.java", "BodyUseAPI": ["java.lang.ThreadLocal<java.sql.Connection>.set(<nulltype>)"], "Fixed commit": "fe47ae11ac908c99c14c4fca9c7ed42e8f64e59c", "Url": "https://api.github.com/repos/ajochems/casinocoinj", "Date": "2014-08-13T09:46:02Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((orientation) != 0) { java.lang.System.out.println(orientation); originalImage = originalImage.getFlippedCopy(true, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/9265/buggy-version/src.main.java.nl.github.martijn9612.fishy.models.Entity.java", "BodyUseAPI": [], "Fixed commit": "fdd6bf1ad3f57cc1f67ceba7c28c8b9be0f651c3", "Url": "https://api.github.com/repos/martijnjanssen/fishy", "Date": "2015-10-13T09:23:50Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mRootOptionsView.getVisibility()) == (android.view.View.VISIBLE)) { discardTask(findViewById(R.id.discard_task_button)); }else { showView(mRootOptionsView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/977/buggy-version/app.src.main.java.ie.headway.app.htdi__companion.gui.TaskCreatorActivity2.java", "BodyUseAPI": ["ie.headway.app.htdi__companion.gui.TaskCreatorActivity2.showView(android.view.ViewGroup)"], "Fixed commit": "94959eb7b2127ac13c348c89f70c181750138976", "Url": "https://api.github.com/repos/HeadwayApp/HTDI-Companion", "Date": "2016-06-09T19:16:33Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.red5.net.websocket.SecureWebSocketConfiguration.getSslContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (context == null) { throw new java.io.NotActiveException(\"SSLContext is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7099/buggy-version/src.main.java.org.red5.net.websocket.SecureWebSocketConfiguration.java", "BodyUseAPI": [], "Fixed commit": "90b425a52ca51c802ccccd317fc43debedd36bcf", "Url": "https://api.github.com/repos/Red5/red5-websocket", "Date": "2016-12-02T21:14:08Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selected) && (isEditable)) { imgLabel.setIcon(new javax.swing.ImageIcon(cardSelectedImg)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/840/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.model.Card.java", "BodyUseAPI": [], "Fixed commit": "15a284646071657a5942e7e55d4fa1f4e5fed66a", "Url": "https://api.github.com/repos/alexbragdon/wpi-suite", "Date": "2014-04-28T22:09:10Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(selected)) && (!(isEditable))) { imgLabel.setIcon(new javax.swing.ImageIcon(cardDisabledImg)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/840/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.model.Card.java", "BodyUseAPI": [], "Fixed commit": "15a284646071657a5942e7e55d4fa1f4e5fed66a", "Url": "https://api.github.com/repos/alexbragdon/wpi-suite", "Date": "2014-04-28T22:09:10Z"},
{"Line": "=>842", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (advertisedDesc != null) { if (!(advertisedDesc.isEmpty())) { org.opendaylight.controller.sal.core.Property desc = new org.opendaylight.controller.sal.core.Description(advertisedDesc); propMap.put(Description.propertyName, desc); } }else { propMap.remove(prop); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2553/buggy-version/opendaylight.switchmanager.implementation.src.main.java.org.opendaylight.controller.switchmanager.internal.SwitchManager.java", "BodyUseAPI": ["java.lang.String.isEmpty()"], "Fixed commit": "f207c0c13689d0744c2ed2eb0395076fee82ffe6", "Url": "https://api.github.com/repos/opendaylight/controller", "Date": "2014-01-29T05:54:17Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dialogShowed)) { dialogShowed = true; showSyncDialog(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6143/buggy-version/xabber.src.main.java.com.xabber.android.ui.fragment.XabberAccountInfoFragment.java", "BodyUseAPI": [], "Fixed commit": "41bebdb24df2b2c9b070997114f298d0725e8bce", "Url": "https://api.github.com/repos/redsolution/xabber-android", "Date": "2017-09-12T06:19:06Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dialogShowed)) { dialogShowed = true; showLogoutDialog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6143/buggy-version/xabber.src.main.java.com.xabber.android.ui.fragment.XabberAccountInfoFragment.java", "BodyUseAPI": [], "Fixed commit": "41bebdb24df2b2c9b070997114f298d0725e8bce", "Url": "https://api.github.com/repos/redsolution/xabber-android", "Date": "2017-09-12T06:19:06Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(updatingFromEditor)) { editor.setElementSelection(structureElement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4765/buggy-version/plugin_ide.ui.src-lang.melnorme.lang.ide.ui.editor.structure.LangOutlinePage.java", "BodyUseAPI": [], "Fixed commit": "69be52503bb16f3bb8b783e15ee4f423af22a411", "Url": "https://api.github.com/repos/GoClipse/goclipse", "Date": "2015-05-28T12:10:35Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ch) == '|') { unscan(); token = Token.QUES; }else { token = Token.QUESBAR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8210/buggy-version/src.main.java.com.alibaba.druid.sql.parser.Lexer.java", "BodyUseAPI": [], "Fixed commit": "ce4b4287eee591d94131a30d37610419d5e434a5", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2017-06-25T12:30:03Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (comments != null) { stmt.addBeforeComment(comments); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8210/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.java", "BodyUseAPI": ["com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlCreateTableStatement.addBeforeComment(java.util.List<java.lang.String>)"], "Fixed commit": "ce4b4287eee591d94131a30d37610419d5e434a5", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2017-06-25T12:30:03Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lexer.isKeepComments()) && (lexer.hasComment())) { comments = lexer.readAndResetComments(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8210/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.java", "BodyUseAPI": ["com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.readAndResetComments()"], "Fixed commit": "ce4b4287eee591d94131a30d37610419d5e434a5", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2017-06-25T12:30:03Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((alarmName.length()) > 80) { alarmName = alarmName.substring(0, 80); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1526/buggy-version/server.vc.src.main.java.com.vmware.aurora.vc.VcUtil.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "7bb46ae084500b6938d77f7b9ac2d5fea5b562da", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-11-25T06:35:43Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (param.containsKey(ParamEnum.DUE_DATE)) { assert logic.TaskModifier.hasSingleDueDate(param); if (!(param.get(ParamEnum.DUE_DATE).get(0).isEmpty())) { logic.TaskModifier.setDueDateFromCommand(param, task); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3179/buggy-version/src.logic.TaskModifier.java", "BodyUseAPI": ["java.util.Hashtable<command.ParamEnum, java.util.ArrayList<java.lang.String>>.get(ParamEnum.DUE_DATE)", "logic.TaskModifier.setDueDateFromCommand(java.util.Hashtable<command.ParamEnum, java.util.ArrayList<java.lang.String>>,models.Task)", "param.get(ParamEnum.DUE_DATE).get(int)", "logic.TaskModifier.hasSingleDueDate(java.util.Hashtable<command.ParamEnum, java.util.ArrayList<java.lang.String>>)", "param.get(ParamEnum.DUE_DATE).get(0).isEmpty()"], "Fixed commit": "a2b13388e9006ab9df038b8a6fb49331f8f1e9a0", "Url": "https://api.github.com/repos/cs2103aug2014-w13-4j/main", "Date": "2014-10-22T02:14:48Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (param.containsKey(ParamEnum.START_DATE)) { assert logic.TaskModifier.hasSingleStartDate(param); if (!(param.get(ParamEnum.START_DATE).get(0).isEmpty())) { logic.TaskModifier.setStartDateFromCommand(param, task); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3179/buggy-version/src.logic.TaskModifier.java", "BodyUseAPI": ["param.get(ParamEnum.START_DATE).get(0).isEmpty()", "java.util.Hashtable<command.ParamEnum, java.util.ArrayList<java.lang.String>>.get(ParamEnum.START_DATE)", "logic.TaskModifier.hasSingleStartDate(java.util.Hashtable<command.ParamEnum, java.util.ArrayList<java.lang.String>>)", "logic.TaskModifier.setStartDateFromCommand(java.util.Hashtable<command.ParamEnum, java.util.ArrayList<java.lang.String>>,models.Task)", "param.get(ParamEnum.START_DATE).get(int)"], "Fixed commit": "a2b13388e9006ab9df038b8a6fb49331f8f1e9a0", "Url": "https://api.github.com/repos/cs2103aug2014-w13-4j/main", "Date": "2014-10-22T02:14:48Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mouseY) < ((height) / 2)) { typing = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2103/buggy-version/eclipse.AndroidTiles.src.com.example.androidtiles.AndroidTiles.java", "BodyUseAPI": [], "Fixed commit": "c0a5960d91dce0d00381faed1fcd5fe7f1c4e59f", "Url": "https://api.github.com/repos/hex705/tiles", "Date": "2013-09-06T23:12:41Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.weather) != null) this.setDefaultWeatherData();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4707/buggy-version/HotSpotHealthCode.app.src.main.java.com.hotspothealthcode.hotspothealthcode.Components.Steps.MeteorologyStepView.java", "BodyUseAPI": [], "Fixed commit": "fbeaeb382f32d6b14f42a05017e7127ed9ce3804", "Url": "https://api.github.com/repos/bob123/hotspotHealthCode", "Date": "2016-05-14T09:24:07Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.weather) != null) this.setDefaultWeatherData();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4707/buggy-version/HotSpotHealthCode.app.src.main.java.com.hotspothealthcode.hotspothealthcode.Components.Steps.GeneralPlumeStepView.java", "BodyUseAPI": [], "Fixed commit": "fbeaeb382f32d6b14f42a05017e7127ed9ce3804", "Url": "https://api.github.com/repos/bob123/hotspotHealthCode", "Date": "2016-05-14T09:24:07Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.weather) != null) this.setDefaultWeatherData();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4707/buggy-version/HotSpotHealthCode.app.src.main.java.com.hotspothealthcode.hotspothealthcode.Components.Steps.GeneralFireStepView.java", "BodyUseAPI": [], "Fixed commit": "fbeaeb382f32d6b14f42a05017e7127ed9ce3804", "Url": "https://api.github.com/repos/bob123/hotspotHealthCode", "Date": "2016-05-14T09:24:07Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((resultMap.size()) > 0) { java.util.Map.Entry<java.lang.String, java.lang.Double[]> entry = resultMap.entrySet().iterator().next(); avgsAndSDs.addAll(java.util.Arrays.asList(entry.getValue()).subList(4, 10)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5295/buggy-version/src.main.java.org.powertac.tourney.actions.ActionTournament.java", "BodyUseAPI": ["java.util.Set<java.util.Map.Entry<java.lang.String, java.lang.Double[]>>.iterator()", "java.util.Iterator<java.util.Map.Entry<java.lang.String, java.lang.Double[]>>.next()", "java.util.Map<java.lang.String, java.lang.Double[]>.entrySet()"], "Fixed commit": "6e5ee600cdf6a85e8d8ee2bd2168f66e2d57d34b", "Url": "https://api.github.com/repos/powertac/powertac-tournament-scheduler", "Date": "2012-09-20T09:26:48Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.inv) != null) && (inv.equals(this.inv))) { destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2463/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Inventory.BInventory.java", "BodyUseAPI": [], "Fixed commit": "50c78fec6ef011486ed492c682c7b06039315300", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2016-11-04T19:39:16Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index == 0) { _head = _head.next; }else { remove(_head, index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6719/buggy-version/DataStructures.LinkedList.LinkedList.java", "BodyUseAPI": ["LinkedList<T>.remove(LinkedList<T>.Node<T>,int)"], "Fixed commit": "91416d0f839b891bfe819ce0ed6d11ca304c5405", "Url": "https://api.github.com/repos/kadirsekha/Java", "Date": "2016-02-22T19:40:47Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exist.xquery.modules.range.LocationStep.getAxis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((((((axis == (Constants.CHILD_AXIS)) || (axis == (Constants.DESCENDANT_AXIS))) || (axis == (Constants.DESCENDANT_SELF_AXIS))) || (axis == (Constants.ATTRIBUTE_AXIS))) || (axis == (Constants.DESCENDANT_ATTRIBUTE_AXIS))) || (axis == (Constants.SELF_AXIS)))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/322/buggy-version/extensions.indexes.range.src.org.exist.xquery.modules.range.RangeQueryRewriter.java", "BodyUseAPI": [], "Fixed commit": "00fba0e2de39ae845ea21a5c2e68df7623eb36e9", "Url": "https://api.github.com/repos/olvidalo/exist", "Date": "2017-01-30T10:42:47Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Main.corpusToken.get(ii).equals(\"\\n\"))) bw.write(\"\\n\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1123/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "b1a38fcc4532de956d913380c191e3314977f349", "Url": "https://api.github.com/repos/dnkamila/nlp-ner", "Date": "2016-05-20T06:57:45Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jdom2.Element.getTextNormalize()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isBoolean(e.getName(), sval)) { w.print(sval); }else if (isNumeric(e.getName(), sval)) { final boolean isInvalidNumber = sval.trim().startsWith(\"0\"); if (isInvalidNumber) { w.print(ca.nrc.cadc.xml.JsonOutputter.QUOTE); } w.print(sval); if (isInvalidNumber) { w.print(ca.nrc.cadc.xml.JsonOutputter.QUOTE); } }else { w.print(ca.nrc.cadc.xml.JsonOutputter.QUOTE); w.print(sval); w.print(ca.nrc.cadc.xml.JsonOutputter.QUOTE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/851/buggy-version/cadc-util.src.main.java.ca.nrc.cadc.xml.JsonOutputter.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.io.PrintWriter.print(java.lang.String)", "java.lang.String.trim()", "org.jdom2.Element.getName()", "java.io.PrintWriter.print(java.lang.String)", "java.io.PrintWriter.print(java.lang.String)", "ca.nrc.cadc.xml.JsonOutputter.isNumeric(e.getName(),java.lang.String)"], "Fixed commit": "228b06aa70f529ae44242d9bd9e858da042e8bcf", "Url": "https://api.github.com/repos/pdowler/core", "Date": "2017-04-20T19:32:13Z"},
{"Line": "=>1163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((installments.size()) > 1) { org.mifosplatform.portfolio.loanaccount.domain.LoanRepaymentScheduleInstallment lastInstallment = installments.get(((installments.size()) - 1)); lastInstallment.updatePrincipal(lastInstallment.getPrincipal(unprocessed.getCurrency()).plus(unprocessed).getAmount()); lastInstallment.payPrincipalComponent(detail.getTransactionDate(), unprocessed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5592/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.loanaccount.loanschedule.domain.AbstractLoanScheduleGenerator.java", "BodyUseAPI": ["java.util.List<org.mifosplatform.portfolio.loanaccount.domain.LoanRepaymentScheduleInstallment>.get(((installments.size()) - 1))", "java.util.List<org.mifosplatform.portfolio.loanaccount.domain.LoanRepaymentScheduleInstallment>.size()"], "Fixed commit": "94838cb666d16fe0c058a6eaa196439368e5fd7c", "Url": "https://api.github.com/repos/shahrahul1985/mifosx", "Date": "2016-01-14T08:20:31Z"},
{"Line": "=>1014", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.actualFixedEmiAmount) != null) { this.fixedPrincipalAmount = this.actualFixedEmiAmount; }else this.fixedPrincipalAmount = principal.getAmount();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5592/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.loanaccount.loanschedule.domain.LoanApplicationTerms.java", "BodyUseAPI": [], "Fixed commit": "94838cb666d16fe0c058a6eaa196439368e5fd7c", "Url": "https://api.github.com/repos/shahrahul1985/mifosx", "Date": "2016-01-14T08:20:31Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (error == null) { setResult(Activity.RESULT_OK, result); }else { setResult(Activity.RESULT_CANCELED, result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3876/buggy-version/samplegiftcardprocessor.src.main.java.co.poynt.samplegiftcardprocessor.PaymentActivity.java", "BodyUseAPI": [], "Fixed commit": "a249721c4fb910a52fc317526293026891430f40", "Url": "https://api.github.com/repos/dsnatochy/PoyntSamples", "Date": "2017-12-14T04:04:09Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["image.fullPath.getAbsolutePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (_app.settings.toggleHiddenMeme(filePath)) { _imageDataList.remove(image); notifyItemRemoved(position); }else { _imageDataList.remove(image); notifyItemRemoved(position); ((io.github.gsantner.memetastic.activity.MainActivity) (_activity)).recreateFragmentsAfterUnhiding(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1036/buggy-version/app.src.main.java.io.github.gsantner.memetastic.ui.MemeItemAdapter.java", "BodyUseAPI": [], "Fixed commit": "b58735698cf7b96f57cf0965e16834175563482e", "Url": "https://api.github.com/repos/gsantner/memetastic", "Date": "2017-10-24T08:13:35Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!hasAlerts) && (!hasTripUpdates)) && (!hasVehiclePositions)) { mLogger.info(\"Nothing to record\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1965/buggy-version/src.com.transitfeeds.gtfsrealtimetosql.GtfsRealTimeSqlRecorder.java", "BodyUseAPI": [], "Fixed commit": "4043a548e5e12af4e6ef03873652b4961134604b", "Url": "https://api.github.com/repos/TransitFeeds/GtfsRealTimeToSql", "Date": "2015-07-21T07:19:55Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasVehiclePositions) { vpCopyIn = cm.copyIn(com.transitfeeds.gtfsrealtimetosql.GtfsRealTimeSqlRecorder.COPY_VEHICLE_POSITIONS); (mOpenQueries)++; vpCopier = new com.transitfeeds.gtfsrealtimetosql.DataCopier(vpCopyIn, com.transitfeeds.gtfsrealtimetosql.GtfsRealTimeSqlRecorder.COPY_SEPARATOR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1965/buggy-version/src.com.transitfeeds.gtfsrealtimetosql.GtfsRealTimeSqlRecorder.java", "BodyUseAPI": [], "Fixed commit": "4043a548e5e12af4e6ef03873652b4961134604b", "Url": "https://api.github.com/repos/TransitFeeds/GtfsRealTimeToSql", "Date": "2015-07-21T07:19:55Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(parts[2].equals(\"jar\"))) { java.lang.System.out.println(((((((((((\"<dependency>\\n\" + \" <groupId>\") + (parts[0])) + \"</groupId>\\n\") + \" <artifactId>\") + (parts[1])) + \"</artifactId>\\n\") + \" <version>\") + (parts[2])) + \"</version>\\n\") + \" </dependency>\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8079/buggy-version/stream-apps-downloader.src.main.java.org.mvnsearch.App.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "8b72ecfee33e1565a61a67bc11d78faef578e0e6", "Url": "https://api.github.com/repos/linux-china/dataflow-samples", "Date": "2017-05-16T02:05:41Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (TreeItem.getValue().isDirectory()) IsRemoteSftpChannel.cd(toLS);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7916/buggy-version/src.pse_gui.MainView.java", "BodyUseAPI": [], "Fixed commit": "8f3df826dd0a6b7fe41e5c358e9419c44583bdfc", "Url": "https://api.github.com/repos/tristandostaler/EmpireGUI", "Date": "2016-10-17T02:29:12Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.rails.algorithms.NetworkIterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((iterator.getSeenData().get(seenVertex)) != (NetworkIterator.greedyState.greedy)) { vertexes.add(seenVertex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6945/buggy-version/src.main.java.net.sf.rails.algorithms.NetworkGraph.java", "BodyUseAPI": ["java.util.Set<net.sf.rails.algorithms.NetworkVertex>.add(net.sf.rails.algorithms.NetworkVertex)"], "Fixed commit": "e485235efece0e94c1c3642222ad166251454eec", "Url": "https://api.github.com/repos/blentz/Rails", "Date": "2015-11-01T11:37:40Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (is != null) { try { is.close(); } catch (java.lang.Throwable e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6916/buggy-version/src.libbluray.bdj.java.com.aacsla.bluray.online.ContentAttribute.java", "BodyUseAPI": ["java.io.FileInputStream.close()"], "Fixed commit": "07e4b853ef7542c22dbf48768a0f3a36ed3a0d88", "Url": "https://api.github.com/repos/tourettes/libbluray", "Date": "2014-08-27T09:14:45Z"},
{"Line": "=>597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needQuote) { print('('); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8383/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.java", "BodyUseAPI": [], "Fixed commit": "95b6133d5a8e14b97bf3fc462d8caca1646f1130", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2014-11-15T15:33:38Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.druid.sql.ast.expr.SQLNotExpr.getExpr()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (expr instanceof com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr) { com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr binaryOpExpr = ((com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr) (expr)); switch (binaryOpExpr.getOperator()) { case BooleanAnd : case BooleanOr : case BooleanXor : needQuote = true; break; default : break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8383/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.java", "BodyUseAPI": [], "Fixed commit": "95b6133d5a8e14b97bf3fc462d8caca1646f1130", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2014-11-15T15:33:38Z"},
{"Line": "=>602", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needQuote) { print(')'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8383/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.java", "BodyUseAPI": [], "Fixed commit": "95b6133d5a8e14b97bf3fc462d8caca1646f1130", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2014-11-15T15:33:38Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((out == null) || (logInst == null)) { throw new java.lang.NullPointerException(\"here\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4031/buggy-version/src.edu.ucla.pls.wiretap.recorders.BinaryLogger.java", "BodyUseAPI": [], "Fixed commit": "5b5e20aa70c8755b419f36a4b5228b07a84d73a6", "Url": "https://api.github.com/repos/ucla-pls/wiretap", "Date": "2017-02-04T00:20:20Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["arguments.get(2).getType(java.util.Map<sfl.structure.code.expression.Identifier, sfl.structure.type.Type>,sfl.translator.ProcessedProgram)", "java.util.List<sfl.structure.code.expression.Expression>.get(int)", "arguments.get(1).getType(java.util.Map<sfl.structure.code.expression.Identifier, sfl.structure.type.Type>,sfl.translator.ProcessedProgram)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((op.equals(Special.Or)) || (op.equals(Special.And))) && (t1.equals(java.lang.Boolean))) && (t2.equals(java.lang.Boolean))) { return Boolean; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8050/buggy-version/src.sfl.structure.code.expression.Application.java", "BodyUseAPI": [], "Fixed commit": "ce43bd6bcb8a93aa332fb116d4485d992f9ee259", "Url": "https://api.github.com/repos/V1489Cygni/sfl", "Date": "2015-05-10T09:46:47Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["arguments.get(1).getType(java.util.Map<sfl.structure.code.expression.Identifier, sfl.structure.type.Type>,sfl.translator.ProcessedProgram)", "arguments.get(2).getType(java.util.Map<sfl.structure.code.expression.Identifier, sfl.structure.type.Type>,sfl.translator.ProcessedProgram)", "java.util.List<sfl.structure.code.expression.Expression>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((op.equals(Special.Or)) && (t1.equals(java.lang.Boolean))) && (t2.equals(java.lang.Boolean))) { return (((\"((boolean) (\" + (arguments.get(1).generate(codes, context, program))) + \")) || ((boolean) \") + (arguments.get(2).generate(codes, context, program))) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8050/buggy-version/src.sfl.structure.code.expression.Application.java", "BodyUseAPI": [], "Fixed commit": "ce43bd6bcb8a93aa332fb116d4485d992f9ee259", "Url": "https://api.github.com/repos/V1489Cygni/sfl", "Date": "2015-05-10T09:46:47Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<sfl.structure.code.expression.Expression>.get(int)", "arguments.get(1).getType(java.util.Map<sfl.structure.code.expression.Identifier, sfl.structure.type.Type>,sfl.translator.ProcessedProgram)", "arguments.get(2).getType(java.util.Map<sfl.structure.code.expression.Identifier, sfl.structure.type.Type>,sfl.translator.ProcessedProgram)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((op.equals(Special.And)) && (t1.equals(java.lang.Boolean))) && (t2.equals(java.lang.Boolean))) { return (((\"((boolean) (\" + (arguments.get(1).generate(codes, context, program))) + \")) && ((boolean) \") + (arguments.get(2).generate(codes, context, program))) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8050/buggy-version/src.sfl.structure.code.expression.Application.java", "BodyUseAPI": [], "Fixed commit": "ce43bd6bcb8a93aa332fb116d4485d992f9ee259", "Url": "https://api.github.com/repos/V1489Cygni/sfl", "Date": "2015-05-10T09:46:47Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bot.Utility.checkCoordinate(entity.job.Novice,utility.Pair)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (res == 8) res = -2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6415/buggy-version/src.bot.Bot.java", "BodyUseAPI": [], "Fixed commit": "0a29aacc4ee36e381b77b71e36c4a80696371a62", "Url": "https://api.github.com/repos/Zymphony77/DefenseOfTheBullets", "Date": "2017-12-06T06:39:01Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tmp.getHp()) < (0.2 * (tmp.getMaxHp()))) { attackTower(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6415/buggy-version/src.bot.Bot.java", "BodyUseAPI": [], "Fixed commit": "0a29aacc4ee36e381b77b71e36c4a80696371a62", "Url": "https://api.github.com/repos/Zymphony77/DefenseOfTheBullets", "Date": "2017-12-06T06:39:01Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (what == (tv.danmaku.ijk.media.player.IMediaPlayer.MEDIA_INFO_VIDEO_ROTATION_CHANGED)) { tcking.github.com.giraffeplayer2.ScalableTextureView currentDisplay = getCurrentDisplay(); if (currentDisplay != null) { currentDisplay.setRotation(extra); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3042/buggy-version/giraffeplayer2.src.main.java.tcking.github.com.giraffeplayer2.GiraffePlayer.java", "BodyUseAPI": [], "Fixed commit": "1ded24b4f5cc8c298d16928d3d80b97e162b32d6", "Url": "https://api.github.com/repos/tcking/GiraffePlayer2", "Date": "2017-12-14T07:19:01Z"},
{"Line": "=>1512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((builder.length()) > 0) { builder.append('.'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1593/buggy-version/processor.src.main.java.com.gh.bmd.jrt.processor.RoutineProcessor.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)"], "Fixed commit": "c5421d7b33a753df805f8e843ffde07bf514e34a", "Url": "https://api.github.com/repos/davide-maestroni/jroutine", "Date": "2015-07-02T15:58:06Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tempMap.size()) == (root.childen.size())) { map.putAll(tempMap); return map; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8997/buggy-version/src.Graph.java", "BodyUseAPI": ["java.util.Map.putAll(java.util.Map)"], "Fixed commit": "83322a9e9b34ccaf03f5a231785ceeb8601a4fc1", "Url": "https://api.github.com/repos/ijkilchenko/GraphIsomorphism", "Date": "2013-11-23T02:08:01Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cmap.size()) >= 1) { tempMap.putAll(cmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8997/buggy-version/src.Graph.java", "BodyUseAPI": ["java.util.Map.putAll(java.util.Map<Node, Node>)"], "Fixed commit": "83322a9e9b34ccaf03f5a231785ceeb8601a4fc1", "Url": "https://api.github.com/repos/ijkilchenko/GraphIsomorphism", "Date": "2013-11-23T02:08:01Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (defaultParams != null) { this.params = defaultParams.copy().mergeIn(this.params); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2470/buggy-version/knotx-knot.knotx-knot-service.src.main.java.io.knotx.knot.service.service.ServiceEntry.java", "BodyUseAPI": ["io.vertx.core.json.JsonObject.copy()", "defaultParams.copy().mergeIn(io.vertx.core.json.JsonObject)"], "Fixed commit": "3ba2d5a27afcdc02aa86d8b2ba75a5a39b0c66ac", "Url": "https://api.github.com/repos/Cognifide/knotx", "Date": "2017-03-17T14:58:28Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["IndexProperties.ES_TYPE.valueOf(settings.getString(IndexProperties.TYPE))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (type == null) { type = IndexProperties.ES_TYPE.DATA; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6957/buggy-version/sonar-server.src.main.java.org.sonar.server.search.ESNode.java", "BodyUseAPI": [], "Fixed commit": "32cc26b5ab0ea69280adfc7623e7a1d78ab73a28", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-05-27T16:33:47Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((centroid) != null) { centroid.scale((1 / ((float) (this.examples.size())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4570/buggy-version/src.main.java.it.uniroma2.sag.kelp.learningalgorithm.clustering.kmeans.LinearKMeansCluster.java", "BodyUseAPI": [], "Fixed commit": "9bd4a3d763863daf0300aaa63a22c29c1ad599be", "Url": "https://api.github.com/repos/SAG-KeLP-Legacy/kernel-clustering", "Date": "2015-09-01T11:20:59Z"},
{"Line": "=>619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.ehcache.Element.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (className.isAssignableFrom(crisObject.getClass())) { if (!(isExpiredCache(className, element, crisObject.getId(), crisObject))) { return crisObject; }else if (crisObject != null) { return get(className, crisObject.getId(), false); } }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2251/buggy-version/dspace-cris.api.src.main.java.org.dspace.app.cris.service.ApplicationService.java", "BodyUseAPI": ["T.getId()", "org.dspace.app.cris.service.ApplicationService.isExpiredCache(java.lang.Class<T>,net.sf.ehcache.Element,crisObject.getId(),T)", "org.dspace.app.cris.service.ApplicationService.get(java.lang.Class<T>,crisObject.getId(),boolean)", "T.getId()"], "Fixed commit": "f0500180a20ae876f3f93d057278a0d4605d8126", "Url": "https://api.github.com/repos/Cineca/DSpace", "Date": "2016-02-26T14:50:13Z"},
{"Line": "=>665", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.ehcache.Element.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (className.isAssignableFrom(crisObject.getClass())) { if (!(isExpiredCache(className, element, crisObject.getId(), crisObject))) { return crisObject; }else if (crisObject != null) { return get(className, crisObject.getId(), false); } }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2251/buggy-version/dspace-cris.api.src.main.java.org.dspace.app.cris.service.ApplicationService.java", "BodyUseAPI": ["T.getId()", "org.dspace.app.cris.service.ApplicationService.get(java.lang.Class<T>,crisObject.getId(),boolean)", "T.getId()", "org.dspace.app.cris.service.ApplicationService.isExpiredCache(java.lang.Class<T>,net.sf.ehcache.Element,crisObject.getId(),T)"], "Fixed commit": "f0500180a20ae876f3f93d057278a0d4605d8126", "Url": "https://api.github.com/repos/Cineca/DSpace", "Date": "2016-02-26T14:50:13Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kuyun.eam.rpc.api.EamApiService.selectEamSensorData(com.kuyun.eam.vo.EamSensorVO)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result == null) { result = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/810/buggy-version/kuyun-eam.kuyun-eam-admin.src.main.java.com.kuyun.eam.admin.controller.manager.EamSensorDataController.java", "BodyUseAPI": [], "Fixed commit": "336789ae5a18671a7499864cb96a7fb989c506cf", "Url": "https://api.github.com/repos/bobshi2005/kuyun", "Date": "2017-12-30T02:45:37Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (model.hasTag(\"fan\")) player.actMan.setActivity(player.ACTIVITY_HOVERING);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3812/buggy-version/src.grandtheftroster.player.Climbing.java", "BodyUseAPI": [], "Fixed commit": "411c0015226758dbad5c360e771383dd4116bf6b", "Url": "https://api.github.com/repos/LaTech-CSC122/csctrails", "Date": "2015-10-23T15:50:24Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state.id) == (grandtheftroster.handlers.GameStateManager.LEVEL_THREE.id)) return new grandtheftroster.handlers.Lvl3State(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3812/buggy-version/src.grandtheftroster.handlers.GameStateManager.java", "BodyUseAPI": [], "Fixed commit": "411c0015226758dbad5c360e771383dd4116bf6b", "Url": "https://api.github.com/repos/LaTech-CSC122/csctrails", "Date": "2015-10-23T15:50:24Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((issue.getDueDate()) != null) { dueDate += issue.getDueDate().toString(); }else { dueDate += \"Not set\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4781/buggy-version/src.main.java.com.teriyakiegg.lbs.IssueFormatter.java", "BodyUseAPI": ["issue.getDueDate().toString()", "com.nulabinc.backlog4j.Issue.getDueDate()"], "Fixed commit": "672267bf8fff5240cd07be6031867e71177182ee", "Url": "https://api.github.com/repos/teriyakiegg/lambda-backlog-slack", "Date": "2017-03-19T02:10:48Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(runPrototext.exists())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4892/buggy-version/src.main.java.org.wsdmcup17.dataserver.RequestHandler.java", "BodyUseAPI": [], "Fixed commit": "874fcfa6e96f95f97d2f6cc5f87dff73ff2042d0", "Url": "https://api.github.com/repos/wsdm-cup-2017/wsdmcup17-data-server", "Date": "2016-11-10T23:27:55Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 0) { displayNumber = 1; }else { if (position < 12) { displayNumber = ((position + 1) + (position + 1)) - 1; }else { displayNumber = (24 - ((24 - position) + 1)) - ((24 - position) + 1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3661/buggy-version/app.src.main.java.com.scentair.scentwave.ReworkBayArrayAdapter.java", "BodyUseAPI": [], "Fixed commit": "a1a3a36f766f07373d1a733fbe4207e578812ae9", "Url": "https://api.github.com/repos/tokyojeffro/ScentWave", "Date": "2015-05-19T21:21:27Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((date.getHourOfDay()) != hoursOfDay) { date = date.plusHours((hoursOfDay - (date.getHourOfDay()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3322/buggy-version/src.main.java.com.cronutils.model.time.ExecutionTime.java", "BodyUseAPI": ["org.joda.time.DateTime.plusHours((hoursOfDay - (date.getHourOfDay())))", "org.joda.time.DateTime.getHourOfDay()"], "Fixed commit": "299ea29dd2dfb829f6ca37cccdef35689909dc72", "Url": "https://api.github.com/repos/kallem/cron-utils", "Date": "2016-04-12T02:34:48Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((date.getMonthOfYear()) != monthsOfYear) { date = date.plusMonths((monthsOfYear - (date.getMonthOfYear()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3322/buggy-version/src.main.java.com.cronutils.model.time.ExecutionTime.java", "BodyUseAPI": ["org.joda.time.DateTime.plusMonths((monthsOfYear - (date.getMonthOfYear())))", "org.joda.time.DateTime.getMonthOfYear()"], "Fixed commit": "299ea29dd2dfb829f6ca37cccdef35689909dc72", "Url": "https://api.github.com/repos/kallem/cron-utils", "Date": "2016-04-12T02:34:48Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((date.getMinuteOfHour()) != minutesOfHour) { date = date.plusMinutes((minutesOfHour - (date.getMinuteOfHour()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3322/buggy-version/src.main.java.com.cronutils.model.time.ExecutionTime.java", "BodyUseAPI": ["org.joda.time.DateTime.getMinuteOfHour()", "org.joda.time.DateTime.plusMinutes((minutesOfHour - (date.getMinuteOfHour())))"], "Fixed commit": "299ea29dd2dfb829f6ca37cccdef35689909dc72", "Url": "https://api.github.com/repos/kallem/cron-utils", "Date": "2016-04-12T02:34:48Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((date.getDayOfMonth()) != dayOfMonth) { date = date.plusDays((dayOfMonth - (date.getDayOfMonth()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3322/buggy-version/src.main.java.com.cronutils.model.time.ExecutionTime.java", "BodyUseAPI": ["org.joda.time.DateTime.plusDays((dayOfMonth - (date.getDayOfMonth())))", "org.joda.time.DateTime.getDayOfMonth()"], "Fixed commit": "299ea29dd2dfb829f6ca37cccdef35689909dc72", "Url": "https://api.github.com/repos/kallem/cron-utils", "Date": "2016-04-12T02:34:48Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new org.joda.time.DateTime(0, 1, 1, 0, 0, 0, timeZone).plusYears(years).plusMonths((monthsOfYear - 1)).plusDays((dayOfMonth - 1)).plusHours(hoursOfDay).plusMinutes(minutesOfHour).plusSeconds(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((date.getSecondOfMinute()) != secondsOfMinute) { date = date.plusSeconds((secondsOfMinute - (date.getSecondOfMinute()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3322/buggy-version/src.main.java.com.cronutils.model.time.ExecutionTime.java", "BodyUseAPI": ["org.joda.time.DateTime.getSecondOfMinute()", "org.joda.time.DateTime.plusSeconds((secondsOfMinute - (date.getSecondOfMinute())))"], "Fixed commit": "299ea29dd2dfb829f6ca37cccdef35689909dc72", "Url": "https://api.github.com/repos/kallem/cron-utils", "Date": "2016-04-12T02:34:48Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((date.getYear()) != years) { date = date.plusYears((years - (date.getYear()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3322/buggy-version/src.main.java.com.cronutils.model.time.ExecutionTime.java", "BodyUseAPI": ["org.joda.time.DateTime.plusYears((years - (date.getYear())))", "org.joda.time.DateTime.getYear()"], "Fixed commit": "299ea29dd2dfb829f6ca37cccdef35689909dc72", "Url": "https://api.github.com/repos/kallem/cron-utils", "Date": "2016-04-12T02:34:48Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((modifier.getParameterList().length) >= 1) { int given_limit = java.lang.Integer.parseInt(modifier.getParameterList()[0]); if ((given_limit >= 1) && (given_limit <= 99)) { limit = given_limit; }else { sendMessage(\"Please use the user-limit-modifier (-l) with a parameter to specify the user-limit. (f.e. !c -l 5)\", channel, false); } }else { sendMessage(\"Please use the user-limit-modifier (-l) with a parameter to specify the user-limit. (f.e. !c -l 5)\", channel, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4962/buggy-version/MemeGallery.src.de.maxkroner.implementation.privateBot.PrivateBot.java", "BodyUseAPI": ["java.lang.Integer.parseInt(modifier.getParameterList()[0])", "de.maxkroner.implementation.privateBot.Modifier.getParameterList()"], "Fixed commit": "7f6cace060b7d005a58e437e903f4e320eb953c4", "Url": "https://api.github.com/repos/iTubeGamer/DiscordBots", "Date": "2017-12-26T02:40:09Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fragmentList.size()) > position) { android.support.v4.app.Fragment f = fragmentList.get(position); if (f != null) { return f; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5725/buggy-version/library.src.main.java.com.github.paolorotolo.appintro.MyPagerAdapter.java", "BodyUseAPI": ["java.util.ArrayList<com.github.paolorotolo.appintro.MyViewPager.MyFragment>.get(int)"], "Fixed commit": "c337306fedcf43cea7cb5acefdfe949c1ae9c041", "Url": "https://api.github.com/repos/Sumeet21/AppIntro", "Date": "2016-02-02T12:49:44Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fTransaction) == null) { fTransaction = fManager.beginTransaction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5725/buggy-version/library.src.main.java.com.github.paolorotolo.appintro.MyPagerAdapter.java", "BodyUseAPI": [], "Fixed commit": "c337306fedcf43cea7cb5acefdfe949c1ae9c041", "Url": "https://api.github.com/repos/Sumeet21/AppIntro", "Date": "2016-02-02T12:49:44Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.quantity) != null) { temp = java.lang.Integer.parseInt(this.quantity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8821/buggy-version/app.src.main.java.com.example.blake.greenbeans.Meal.java", "BodyUseAPI": [], "Fixed commit": "85b1a1025eba00ef66f92d0b01a756e1b64d9280", "Url": "https://api.github.com/repos/balassit/CSC454-GreenBeans", "Date": "2016-12-02T19:32:56Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((root.color) == (cpp.edu.cs480.project06.RedBlackTree.RED)) { root.color = cpp.edu.cs480.project06.RedBlackTree.BLACK; info.add(new cpp.edu.cs480.project06.Instruction(\"recolor\", target.getData(), false, false, null, null, null, null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8919/buggy-version/src.cpp.edu.cs480.project06.RedBlackTree.java", "BodyUseAPI": [], "Fixed commit": "6900ec98ac8d5b6893ae8e5a7c83f2b3c9a3ecc0", "Url": "https://api.github.com/repos/jrviray/CS_480_Project_06", "Date": "2017-04-14T03:16:15Z"},
{"Line": "=>2147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isContainsInTypeAnnotation(methodDeclaration.returnType.resolvedType, a)) { a.traverse(this, methodDeclaration.scope); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1220/buggy-version/src.main.java.spoon.support.compiler.jdt.JDTTreeBuilder.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(spoon.support.compiler.jdt.JDTTreeBuilder,methodDeclaration.scope)"], "Fixed commit": "880403e987868bd36326e56ed3288854b3bc1cfd", "Url": "https://api.github.com/repos/GerardPaligot/spoon", "Date": "2015-02-17T14:42:39Z"},
{"Line": "=>1547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isContainsInTypeAnnotation(argument.type.resolvedType, a)) { a.traverse(this, scope); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1220/buggy-version/src.main.java.spoon.support.compiler.jdt.JDTTreeBuilder.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(spoon.support.compiler.jdt.JDTTreeBuilder,org.eclipse.jdt.internal.compiler.lookup.BlockScope)"], "Fixed commit": "880403e987868bd36326e56ed3288854b3bc1cfd", "Url": "https://api.github.com/repos/GerardPaligot/spoon", "Date": "2015-02-17T14:42:39Z"},
{"Line": "=>2023", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isContainsInTypeAnnotation(localDeclaration.type.resolvedType, a)) { a.traverse(this, scope); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1220/buggy-version/src.main.java.spoon.support.compiler.jdt.JDTTreeBuilder.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(spoon.support.compiler.jdt.JDTTreeBuilder,org.eclipse.jdt.internal.compiler.lookup.BlockScope)"], "Fixed commit": "880403e987868bd36326e56ed3288854b3bc1cfd", "Url": "https://api.github.com/repos/GerardPaligot/spoon", "Date": "2015-02-17T14:42:39Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openbase.jul.storage.registry.ProtoBufFileSynchronizedRegistry<java.lang.String, rst.domotic.unit.UnitConfigType.UnitConfig, UnitConfig.Builder, UnitRegistryDataType.UnitRegistryData.Builder>.getMessage(dalUnitConfig.getUnitHostId())", "entry.getMessage().toBuilder()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(dalUnitConfig.getLabel().equals(deviceUnitConfig.getLabel()))) { dalUnitConfig.setLabel(deviceUnitConfig.getLabel()); modification = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/931/buggy-version/unit-registry.core.src.main.java.org.openbase.bco.registry.unit.core.consistency.dalunitconfig.UnitBoundToHostConsistencyHandler.java", "BodyUseAPI": ["UnitConfig.Builder.setLabel(deviceUnitConfig.getLabel())", "rst.domotic.unit.UnitConfigType.UnitConfig.getLabel()"], "Fixed commit": "45611a9bb55998a6a0b5dc34396202b5645877bb", "Url": "https://api.github.com/repos/openbase/bco.registry", "Date": "2016-12-09T16:22:18Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.right.get(i).getReceiver()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(previousNodes.contains(wI))) { wI1.sendMessage(new de.upb.mf.simulator.utilities.ListMessage(new de.upb.mf.simulator.utilities.Pair<de.upb.mf.simulator.sortedListExtended.ExtendedListNode, de.upb.mf.simulator.sortedListExtended.ExtendedListNode>(wI, this), de.upb.mf.simulator.utilities.MessageType.INTRODUCE)); previousNodes.add(wI); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6569/buggy-version/simulator.de.upb.mf.simulator.sortedListExtended.ExtendedListNode.java", "BodyUseAPI": ["java.util.List<de.upb.mf.simulator.sortedListExtended.ExtendedListNode>.add(de.upb.mf.simulator.sortedListExtended.ExtendedListNode)", "de.upb.mf.simulator.abstracts.Channel.sendMessage(de.upb.mf.simulator.utilities.ListMessage)"], "Fixed commit": "13bddcb8fd6e201d2fc4c8514b419c48c1531c5c", "Url": "https://api.github.com/repos/Krakomat/Simulator", "Date": "2015-07-13T13:18:56Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.left.get(i).getReceiver()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(previousNodes.contains(rec))) { vI1.sendMessage(new de.upb.mf.simulator.utilities.ListMessage(new de.upb.mf.simulator.utilities.Pair<de.upb.mf.simulator.sortedListExtended.ExtendedListNode, de.upb.mf.simulator.sortedListExtended.ExtendedListNode>(rec, this), de.upb.mf.simulator.utilities.MessageType.INTRODUCE)); previousNodes.add(rec); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6569/buggy-version/simulator.de.upb.mf.simulator.sortedListExtended.ExtendedListNode.java", "BodyUseAPI": ["java.util.List<de.upb.mf.simulator.sortedListExtended.ExtendedListNode>.add(de.upb.mf.simulator.sortedListExtended.ExtendedListNode)", "de.upb.mf.simulator.abstracts.Channel.sendMessage(de.upb.mf.simulator.utilities.ListMessage)"], "Fixed commit": "13bddcb8fd6e201d2fc4c8514b419c48c1531c5c", "Url": "https://api.github.com/repos/Krakomat/Simulator", "Date": "2015-07-13T13:18:56Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getDataAccess().getModuleFiles(service.getServiceId(),module.getModuleId(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((moduleFiles != null) && (!(moduleFiles.isEmpty()))) { for (com.northernwall.hadrian.domain.ModuleFile moduleFile : moduleFiles) { getDataAccess().deleteModuleFile(service.getServiceId(), module.getModuleId(), env, moduleFile.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6105/buggy-version/src.main.java.com.northernwall.hadrian.handlers.module.ModuleDeleteHandler.java", "BodyUseAPI": [], "Fixed commit": "06cc945c7bc238d3f57f02296a282cc940caf3b0", "Url": "https://api.github.com/repos/Jukkorsis/Hadrian", "Date": "2017-05-05T02:52:58Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mw.server.gamelogic.state.Tile.getUnit()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (startUnit == null) return rCombinable;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6432/buggy-version/src.mw.server.gamelogic.logic.GameLogic.java", "BodyUseAPI": [], "Fixed commit": "bd5b8dda11f0c403ea843377a7a5237f349d0899", "Url": "https://api.github.com/repos/EmilyRSager/MedeivalWarfare", "Date": "2015-04-10T00:48:00Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (currentPlayer == null) { currentPlayer = playerList.getCurrent(game); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7005/buggy-version/Mage.src.mage.game.match.MatchImpl.java", "BodyUseAPI": [], "Fixed commit": "3ffa69f3a13af8be1232ac4668a32c592ee64ea0", "Url": "https://api.github.com/repos/jlin14/mage", "Date": "2014-10-08T22:50:35Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((game.getStartingPlayerId()) != null) { playerList.setCurrent(game.getStartingPlayerId()); currentPlayer = game.getPlayer(game.getStartingPlayerId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7005/buggy-version/Mage.src.mage.game.match.MatchImpl.java", "BodyUseAPI": ["mage.game.Game.getStartingPlayerId()", "mage.game.Game.getPlayer(game.getStartingPlayerId())", "mage.players.PlayerList.setCurrent(game.getStartingPlayerId())", "mage.game.Game.getStartingPlayerId()"], "Fixed commit": "3ffa69f3a13af8be1232ac4668a32c592ee64ea0", "Url": "https://api.github.com/repos/jlin14/mage", "Date": "2014-10-08T22:50:35Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isVisible()) { canvas.setMatrix(mMatrix); mMovie.setTime(((int) ((java.lang.System.currentTimeMillis()) % (mMovie.duration())))); mMovie.draw(canvas, 0, 0); invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3108/buggy-version/wear.src.main.java.com.shaibarack.rickrollwatchface.WatchFaceService.java", "BodyUseAPI": [], "Fixed commit": "e2dd1a84ebdb978810b34c8fe1952e0a96212f72", "Url": "https://api.github.com/repos/shaybarak/RickrollWatchFace", "Date": "2015-01-21T04:30:55Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getColumnName(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((NetMonColumns.DEVICE_LATITUDE.equals(columnName)) || (NetMonColumns.DEVICE_LONGITUDE.equals(columnName))) { double value = c.getDouble(columnIndex); result = java.lang.String.valueOf(value); if (\"0.0\".equals(result)) result = \"\"; }else { result = c.getString(columnIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6609/buggy-version/networkmonitor.src.main.java.ca.rmen.android.networkmonitor.app.dbops.backend.export.FormatterFactory.java", "BodyUseAPI": [], "Fixed commit": "1add7300e62c2d97b710f639dc2d9ba4ebe4adc0", "Url": "https://api.github.com/repos/caarmen/network-monitor", "Date": "2016-03-12T17:37:37Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (response != null) { response.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5886/buggy-version/fortify-util.rest-util.src.main.java.com.fortify.util.rest.RestConnection.java", "BodyUseAPI": ["com.sun.jersey.api.client.ClientResponse.close()"], "Fixed commit": "b0239524cd4602ca2c5ec2fa9867434c216d9792", "Url": "https://api.github.com/repos/fod-dev/FoDBugTrackerUtility", "Date": "2017-02-03T10:52:55Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getNotificationListFragment()) != null) { getNotificationListFragment().onActivityResult(requestCode, resultCode, data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8113/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.main.WPMainActivity.java", "BodyUseAPI": [], "Fixed commit": "955f00060f1dc665cf651522f52f56aa242ba03b", "Url": "https://api.github.com/repos/fadils/WordPress-Android", "Date": "2015-04-28T08:42:27Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (defaultValue.isEmpty()) { if (placeholder.contains(\".\")) { modifier = placeholder.substring(((placeholder.indexOf(\".\")) + 1), ((placeholder.length()) - 1)); sysProp = placeholder.substring(2, placeholder.indexOf(\".\")); }else { sysProp = placeholder.substring(2, ((placeholder.length()) - 1)); } }else { sysProp = placeholder.substring(2, placeholder.indexOf(\":-\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7349/buggy-version/src.main.java.com.stratio.qa.aspects.ReplacementAspect.java", "BodyUseAPI": [], "Fixed commit": "1a8f1eb0eae5f70da039188a45c39d82279fa659", "Url": "https://api.github.com/repos/aalfonso-stratio/bdt", "Date": "2017-10-02T09:53:30Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index < (data.size())) data.set(index, link); else data.add(link);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1021/buggy-version/olca-app.src.org.openlca.app.editors.graphical.search.MutableProcessLinkSearchMap.java", "BodyUseAPI": ["org.openlca.app.editors.graphical.search.MutableProcessLinkSearchMap.set(int,org.openlca.core.model.ProcessLink)", "org.openlca.app.editors.graphical.search.MutableProcessLinkSearchMap.add(org.openlca.core.model.ProcessLink)"], "Fixed commit": "e1c3af472f952bf509c30ae8f7835310c9672e6d", "Url": "https://api.github.com/repos/GreenDelta/olca-app", "Date": "2014-05-20T12:51:34Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (angleOffset < (-180)) { angleOffset += 360; }else if (angleOffset > 180) { angleOffset -= 360; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2498/buggy-version/src.org.usfirst.frc.team997.robot.commands.DriveToDistance.java", "BodyUseAPI": [], "Fixed commit": "d5cfd539e1da70038ae9b036d7b7821fedd956f6", "Url": "https://api.github.com/repos/Team997Coders/2017SteamBot2", "Date": "2017-03-24T18:36:49Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sub.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7763/buggy-version/src.edu.ucla.cs.utils.SAT.java", "BodyUseAPI": [], "Fixed commit": "3f4965acf53539c86052af7c1be62218af3adcfe", "Url": "https://api.github.com/repos/husttroy/Maple", "Date": "2017-03-16T22:13:32Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.entando.entando.plugins.jprestapi.aps.core.RequestBuilder.checkResponse(org.apache.http.HttpResponse)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (null != ris) { responseBody = org.apache.commons.io.IOUtils.toString(ris, \"UTF-8\"); if (_debug) { org.entando.entando.plugins.jprestapi.aps.core.RequestBuilder.logger.info(\"returned body:\\n{}\", responseBody); } }else if (_debug) { org.entando.entando.plugins.jprestapi.aps.core.RequestBuilder.logger.info(\"no payload returned by the server\"); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4778/buggy-version/plugins.entando-plugin-jprestapi.src.main.java.org.entando.entando.plugins.jprestapi.aps.core.RequestBuilder.java", "BodyUseAPI": ["org.apache.commons.io.IOUtils.toString(java.io.InputStream,java.lang.String)"], "Fixed commit": "c3ae1a0ca4f69b4cc90ba66c5987e52f196eddb5", "Url": "https://api.github.com/repos/entando/entando-components", "Date": "2017-11-02T13:50:50Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (firstRec != null) { result.add(firstRec); org.jooq.Record secondRec = query(1, numberOfPictures, firstRec.getValue(Location.LOCATION.ID)); if (secondRec == null) { secondRec = query(0, numberOfPictures, firstRec.getValue(Location.LOCATION.ID)); } if (secondRec != null) { result.add(secondRec); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8456/buggy-version/src.main.java.de.oglimmer.lunchy.database.dao.UpdatesDao.java", "BodyUseAPI": ["de.oglimmer.lunchy.database.dao.UpdatesDao.RetrievePictureLogic.query(int,int,firstRec.getValue(Location.LOCATION.ID))", "org.jooq.Record.getValue(Location.LOCATION.ID)", "org.jooq.Record.getValue(Location.LOCATION.ID)", "de.oglimmer.lunchy.database.dao.UpdatesDao.RetrievePictureLogic.query(int,int,firstRec.getValue(Location.LOCATION.ID))", "java.util.List<org.jooq.Record>.add(org.jooq.Record)"], "Fixed commit": "9618f143f77635ecfed4fd844ebeae514dbb4dbc", "Url": "https://api.github.com/repos/oglimmer/lunchy", "Date": "2014-09-04T21:15:45Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rrs.rd.address.utils.StringUtil.substring(java.lang.String,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.rrs.rd.address.interpret.AddressInterpreter.invalidateTownFollowings.contains(s1)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2921/buggy-version/src.main.java.com.rrs.rd.address.interpret.AddressInterpreter.java", "BodyUseAPI": [], "Fixed commit": "5358fa91125e44cb71a97a1cafd4edefe9a6dbfc", "Url": "https://api.github.com/repos/liuzhibin-cn/address-semantic-search", "Date": "2016-10-24T10:47:07Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.rrs.rd.address.interpret.AddressInterpreter.invalidateTownFollowings.contains(s1)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2921/buggy-version/src.main.java.com.rrs.rd.address.interpret.AddressInterpreter.java", "BodyUseAPI": [], "Fixed commit": "5358fa91125e44cb71a97a1cafd4edefe9a6dbfc", "Url": "https://api.github.com/repos/liuzhibin-cn/address-semantic-search", "Date": "2016-10-24T10:47:07Z"},
{"Line": "=>3055", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isVideo) { com.codename1.impl.ios.IOSImplementation.nativeInstance.releasePeer(moviePlayerPeer); moviePlayerPeer = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5876/buggy-version/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java", "BodyUseAPI": [], "Fixed commit": "c38a8bb3c0157b9d2045e15e0bb2645303d0f545", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-04-28T23:20:23Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sendUrl) { if ((numActiveGrammars) == 0) { if (org.jvoicexml.implementation.mrcpv2.Mrcpv2SpokenInput.LOGGER.isDebugEnabled()) { org.jvoicexml.implementation.mrcpv2.Mrcpv2SpokenInput.LOGGER.warn(\"No active grammars\"); } throw new org.jvoicexml.event.error.NoresourceError(\"No Active Grammars\"); } }else { if (((activatedGrammar) == null) || ((numActiveGrammars) == 0)) { if (org.jvoicexml.implementation.mrcpv2.Mrcpv2SpokenInput.LOGGER.isDebugEnabled()) { org.jvoicexml.implementation.mrcpv2.Mrcpv2SpokenInput.LOGGER.warn(\"No active grammars\"); } throw new org.jvoicexml.event.error.NoresourceError(\"No Active Grammars\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3689/buggy-version/JVXML_HOME.org.jvoicexml.implementation.mrcpv2.src.org.jvoicexml.implementation.mrcpv2.Mrcpv2SpokenInput.java", "BodyUseAPI": [], "Fixed commit": "fa40ef2b8ccbe6650739bee14b4638c0d2ee0686", "Url": "https://api.github.com/repos/Malatawy15/JvoiceXML-Halef", "Date": "2014-06-02T00:12:08Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (elem instanceof org.talend.designer.core.ui.editor.subjobcontainer.SubjobContainer) { label = org.talend.designer.core.i18n.Messages.getString(\"ComponentSettingsView.subjob\"); image = org.talend.commons.ui.runtime.image.ImageProvider.getImage(EImage.PASTE_ICON); }else if (elem instanceof org.talend.designer.core.ui.editor.connections.ConnectionLabel) { label = ((org.talend.designer.core.ui.editor.connections.ConnectionLabel) (elem)).getConnection().getElementName(); image = org.talend.commons.ui.runtime.image.ImageProvider.getImage(EImage.RIGHT_ICON); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2135/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.views.properties.ComponentSettingsView.java", "BodyUseAPI": [], "Fixed commit": "3013c9e0b37cf626b3d3bf1c7e07be3a4787f9cb", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2014-08-06T06:06:41Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sessionID == null) || (sessionID.equals(\"\"))) com.adarwin.csc435.Authentication.logbook.log(Logbook.WARNING, \"Invalid session id\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3527/buggy-version/WebService.src.Authentication.java", "BodyUseAPI": [], "Fixed commit": "82fe4304d05a8057328019059a7c9881e2f2efd8", "Url": "https://api.github.com/repos/adarwin/TaskCommander", "Date": "2013-03-04T03:56:18Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toBackStack) { fragmentTransaction.addToBackStack(com.nestedworld.nestedworld.fragment.launch.LaunchFragment.FRAGMENT_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3724/buggy-version/app.src.main.java.com.nestedworld.nestedworld.fragment.launch.LaunchFragment.java", "BodyUseAPI": [], "Fixed commit": "17ff6af8155dd8056064286e46ea24269bd22b4d", "Url": "https://api.github.com/repos/kassisdion/NestedWorld-Android", "Date": "2015-09-21T09:20:32Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (coinSet.contains(i)) { minNum[i] = 1; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5977/buggy-version/src.dynamicprogramming.CoinChange.java", "BodyUseAPI": [], "Fixed commit": "dabaaed033afbcb78710ebd954405d95cdd218c0", "Url": "https://api.github.com/repos/FreemanZhang/leetcode", "Date": "2016-09-28T02:59:53Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((evt.getKeyCode()) == (java.awt.event.KeyEvent.VK_ENTER)) { login(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3231/buggy-version/src.imgui.LoginFrame.java", "BodyUseAPI": [], "Fixed commit": "847ceda0db6f8dc4ea9e6f61374abab9ecec45d3", "Url": "https://api.github.com/repos/joelsabol/IMClientServer", "Date": "2016-04-19T02:31:10Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAdded())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2054/buggy-version/app.src.main.java.com.itachi1706.cheesecakeutilities.Fragments.UtilityFragment.java", "BodyUseAPI": [], "Fixed commit": "c494b4a4e5c06dde02f287a53592149826e8ff22", "Url": "https://api.github.com/repos/itachi1706/CheesecakeUtilities", "Date": "2017-09-08T14:18:02Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (buf.hasBaseTimeStamp()) { org.openfeed.util.datetime.DateTimeValue dtv = org.openfeed.util.datetime.ProtoDateUtil.fromDecimalDateTime(buf.getBaseTimeStamp()); dt = new org.joda.time.DateTime(dtv.getYear(), dtv.getMonth(), dtv.getDay(), dtv.getHour(), dtv.getMinute(), dtv.getSecond(), dtv.getMillis(), zone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/303/buggy-version/series.src.main.java.com.barchart.feed.series.codec.HistoricalCodec.java", "BodyUseAPI": ["org.openfeed.MarketHistoricalSnapshot.getBaseTimeStamp()", "org.openfeed.util.datetime.ProtoDateUtil.fromDecimalDateTime(buf.getBaseTimeStamp())"], "Fixed commit": "67fd0f986cebb7a3347fc950a3ff0ec7f56528c4", "Url": "https://api.github.com/repos/barchart/barchart-feed", "Date": "2014-12-04T20:31:19Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pce.getNodeB().getControl(edu.chl.LifeOfAGoblin.jME3.controller.ModelControl.class).getModel()) instanceof edu.chl.LifeOfAGoblin.model.abstractClass.AbstractNPC) { if (!(((edu.chl.LifeOfAGoblin.model.Player) (pce.getNodeA().getControl(edu.chl.LifeOfAGoblin.jME3.controller.ModelControl.class).getModel())).getIsDamaged())) { ((edu.chl.LifeOfAGoblin.model.Player) (pce.getNodeA().getControl(edu.chl.LifeOfAGoblin.jME3.controller.ModelControl.class).getModel())).collide(((edu.chl.LifeOfAGoblin.model.abstractClass.AbstractNPC) (pce.getNodeB().getControl(edu.chl.LifeOfAGoblin.jME3.controller.ModelControl.class).getModel()))); } }else if ((pce.getNodeA().getControl(edu.chl.LifeOfAGoblin.jME3.controller.ModelControl.class).getModel()) instanceof edu.chl.LifeOfAGoblin.model.abstractClass.AbstractNPC) { if (!(((edu.chl.LifeOfAGoblin.model.Player) (pce.getNodeB().getControl(edu.chl.LifeOfAGoblin.jME3.controller.ModelControl.class).getModel())).getIsDamaged())) { ((edu.chl.LifeOfAGoblin.model.Player) (pce.getNodeB().getControl(edu.chl.LifeOfAGoblin.jME3.controller.ModelControl.class).getModel())).collide(((edu.chl.LifeOfAGoblin.model.abstractClass.AbstractNPC) (pce.getNodeA().getControl(edu.chl.LifeOfAGoblin.jME3.controller.ModelControl.class).getModel()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2925/buggy-version/src.main.java.edu.chl.LifeOfAGoblin.jME3.controller.CollisionObjectListener.java", "BodyUseAPI": ["pce.getNodeA().getControl(edu.chl.LifeOfAGoblin.jME3.controller.ModelControl.class).getModel()", "pce.getNodeB().getControl(java.lang.Class)", "((edu.chl.LifeOfAGoblin.model.Player) (pce.getNodeB().getControl(edu.chl.LifeOfAGoblin.jME3.controller.ModelControl.class).getModel())).getIsDamaged()", "pce.getNodeB().getControl(edu.chl.LifeOfAGoblin.jME3.controller.ModelControl.class).getModel()", "pce.getNodeA().getControl(java.lang.Class)", "pce.getNodeB().getControl(java.lang.Class)", "pce.getNodeA().getControl(java.lang.Class)", "((edu.chl.LifeOfAGoblin.model.Player) (pce.getNodeA().getControl(edu.chl.LifeOfAGoblin.jME3.controller.ModelControl.class).getModel())).getIsDamaged()", "com.jme3.bullet.collision.PhysicsCollisionEvent.getNodeA()", "pce.getNodeA().getControl(edu.chl.LifeOfAGoblin.jME3.controller.ModelControl.class).getModel()", "com.jme3.bullet.collision.PhysicsCollisionEvent.getNodeB()", "pce.getNodeB().getControl(java.lang.Class)", "pce.getNodeB().getControl(edu.chl.LifeOfAGoblin.jME3.controller.ModelControl.class).getModel()", "((edu.chl.LifeOfAGoblin.model.Player) (pce.getNodeA().getControl(edu.chl.LifeOfAGoblin.jME3.controller.ModelControl.class).getModel())).collide(((edu.chl.LifeOfAGoblin.model.abstractClass.AbstractNPC) (pce.getNodeB().getControl(edu.chl.LifeOfAGoblin.jME3.controller.ModelControl.class).getModel())))", "com.jme3.bullet.collision.PhysicsCollisionEvent.getNodeA()", "pce.getNodeA().getControl(java.lang.Class)", "com.jme3.bullet.collision.PhysicsCollisionEvent.getNodeB()", "pce.getNodeB().getControl(edu.chl.LifeOfAGoblin.jME3.controller.ModelControl.class).getModel()", "com.jme3.bullet.collision.PhysicsCollisionEvent.getNodeA()", "com.jme3.bullet.collision.PhysicsCollisionEvent.getNodeB()", "pce.getNodeA().getControl(edu.chl.LifeOfAGoblin.jME3.controller.ModelControl.class).getModel()", "((edu.chl.LifeOfAGoblin.model.Player) (pce.getNodeB().getControl(edu.chl.LifeOfAGoblin.jME3.controller.ModelControl.class).getModel())).collide(((edu.chl.LifeOfAGoblin.model.abstractClass.AbstractNPC) (pce.getNodeA().getControl(edu.chl.LifeOfAGoblin.jME3.controller.ModelControl.class).getModel())))", "pce.getNodeA().getControl(java.lang.Class)", "com.jme3.bullet.collision.PhysicsCollisionEvent.getNodeA()", "pce.getNodeA().getControl(edu.chl.LifeOfAGoblin.jME3.controller.ModelControl.class).getModel()"], "Fixed commit": "2dd516aa65e93eb2e836a082b35291295ebea64d", "Url": "https://api.github.com/repos/Mrmiffo/LifeOfAGoblin", "Date": "2015-05-21T09:42:21Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((orProject.getAliasDescriptors()) != null) { orProject.getAliasDescriptors().remove(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3007/buggy-version/dbws.org.eclipse.persistence.dbws.src.org.eclipse.persistence.internal.xr.XRServiceFactory.java", "BodyUseAPI": ["org.eclipse.persistence.sessions.Project.getAliasDescriptors()", "orProject.getAliasDescriptors().remove(java.lang.String)"], "Fixed commit": "c50652cca1de5f8afe8833a417f9869b00674ba8", "Url": "https://api.github.com/repos/RallySoftware/eclipselink.runtime", "Date": "2014-01-20T15:16:12Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arg.databaseType) == (PLSQLBoolean)) { dbType = org.eclipse.persistence.tools.dbws.PLSQLBoolean.name(); }else { if (!((org.eclipse.persistence.tools.dbws.Util.getJDBCTypeFromTypeName(dbType)) == (java.sql.Types.OTHER))) { dbType = dbType.concat(org.eclipse.persistence.tools.dbws.Util._TYPE_STR); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3007/buggy-version/utils.org.eclipse.persistence.dbws.builder.src.org.eclipse.persistence.tools.dbws.XmlEntityMappingsGenerator.java", "BodyUseAPI": [], "Fixed commit": "c50652cca1de5f8afe8833a417f9869b00674ba8", "Url": "https://api.github.com/repos/RallySoftware/eclipselink.runtime", "Date": "2014-01-20T15:16:12Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (view == null) { view = \"index\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7997/buggy-version/app.src.main.java.LocaleController.java", "BodyUseAPI": [], "Fixed commit": "46f2586f1450b2692463afa9528446f600cdf0b8", "Url": "https://api.github.com/repos/gyuz/spring", "Date": "2016-11-11T12:29:42Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.noeasy.money.repository.IDormitoryRepository.queryDormitory(com.noeasy.money.model.DormitorySearchBean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dormitory.getId()) > 0) { java.util.List<java.lang.String> picPath = dormitoryRepository.queryImagePathByDormitoryId(dormitory.getId()); dormitory.setPicPath(picPath); java.util.List<java.lang.String> videoPath = dormitoryRepository.queryVideoPathByDormitoryId(dormitory.getId()); dormitory.setVideoPath(videoPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2151/buggy-version/src.main.java.com.noeasy.money.service.impl.DormitoryService.java", "BodyUseAPI": ["com.noeasy.money.model.DormitoryBean.getId()", "com.noeasy.money.repository.IDormitoryRepository.queryVideoPathByDormitoryId(dormitory.getId())", "com.noeasy.money.repository.IDormitoryRepository.queryImagePathByDormitoryId(dormitory.getId())", "com.noeasy.money.model.DormitoryBean.setVideoPath(java.util.List<java.lang.String>)", "com.noeasy.money.model.DormitoryBean.getId()", "com.noeasy.money.model.DormitoryBean.setPicPath(java.util.List<java.lang.String>)"], "Fixed commit": "83317252b6ff4860237ce171ad566acada3a9b99", "Url": "https://api.github.com/repos/DormitoryTeam/Dormitory", "Date": "2014-02-25T14:28:28Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.auth.api.credentials.CredentialRequestResult.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((status.getStatusCode()) == (com.google.android.gms.common.api.CommonStatusCodes.RESOLUTION_REQUIRED)) { mHelper.startIntentSenderForResult(status.getResolution().getIntentSender(), com.firebase.ui.auth.util.smartlock.SignInDelegate.RC_CREDENTIALS_READ); return; }else if (!onlySupportsEmail) { mHelper.startIntentSenderForResult(status.getResolution().getIntentSender(), com.firebase.ui.auth.util.smartlock.SignInDelegate.RC_CREDENTIALS_READ); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7498/buggy-version/auth.src.main.java.com.firebase.ui.auth.util.smartlock.SignInDelegate.java", "BodyUseAPI": ["com.google.android.gms.common.api.Status.getResolution()", "com.firebase.ui.auth.util.smartlock.SignInDelegate.startIntentSenderForResult(status.getResolution().getIntentSender(),int)", "com.google.android.gms.common.api.Status.getResolution()", "com.firebase.ui.auth.util.smartlock.SignInDelegate.startIntentSenderForResult(status.getResolution().getIntentSender(),int)", "status.getResolution().getIntentSender()", "status.getResolution().getIntentSender()"], "Fixed commit": "3210e7e569459703797b363db845a47acf4132e8", "Url": "https://api.github.com/repos/SUPERCILEX/FirebaseUI-Android", "Date": "2016-11-22T06:43:49Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (denom != 0) { for (int j = 0; j < (A.getColumnDimension()); j++) { A.set(i, j, ((java.lang.Math.pow(A.get(i, j), r)) / denom)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/147/buggy-version/src.main.java.modules.matrix.MclModule.java", "BodyUseAPI": ["Jama.Matrix.set(int,int,((java.lang.Math.pow(A.get(i, j), r)) / denom))"], "Fixed commit": "c438e74b53e51b2c3d25b46458d07ed4ac5e2c7b", "Url": "https://api.github.com/repos/spinfo/stringsnstructures", "Date": "2016-06-20T10:10:56Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["marytts.util.dom.MaryDomUtils.tokenText(org.w3c.dom.Element)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((text.length()) <= 9) { marytts.language.de.preprocess.AbbrevEP.logger.debug(((\"Expanding as integer: `\" + text) + \"'\")); exp.addAll(makeNewTokens(token.getOwnerDocument(), number.expandInteger(text))); }else { marytts.language.de.preprocess.AbbrevEP.logger.debug(((\"Expanding as digits: `\" + text) + \"'\")); exp.addAll(makeNewTokens(token.getOwnerDocument(), number.expandDigits(text))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/263/buggy-version/marytts-languages.marytts-lang-de.src.main.java.marytts.language.de.preprocess.AbbrevEP.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)", "java.util.ArrayList<org.w3c.dom.Element>.addAll(makeNewTokens(token.getOwnerDocument(), number.expandDigits(text)))", "java.util.ArrayList<org.w3c.dom.Element>.addAll(makeNewTokens(token.getOwnerDocument(), number.expandInteger(text)))", "marytts.language.de.preprocess.AbbrevEP.expandInteger(java.lang.String)", "org.apache.log4j.Logger.debug(java.lang.String)", "marytts.language.de.preprocess.AbbrevEP.makeNewTokens(org.w3c.dom.Document,number.expandDigits(text))", "marytts.language.de.preprocess.AbbrevEP.makeNewTokens(org.w3c.dom.Document,number.expandInteger(text))", "marytts.language.de.preprocess.AbbrevEP.expandDigits(java.lang.String)"], "Fixed commit": "0a5b46d48f88de4ab0ac36180a455a604d88aae2", "Url": "https://api.github.com/repos/Rootex/marytts", "Date": "2016-02-17T14:47:41Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((train.getActor()) != null) { train.getActor().canMove = false; updateRouteText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7986/buggy-version/core.src.com.TeamHEC.LocomotionCommotion.Train.Route.java", "BodyUseAPI": ["com.TeamHEC.LocomotionCommotion.Train.Train.getActor()"], "Fixed commit": "e73698e3766fe9d28dccc8bdb8d83df3ea6b680f", "Url": "https://api.github.com/repos/CallumHewitt/LocomotionCommotion", "Date": "2015-01-20T01:22:33Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!doIt) { java.lang.String serverBase = extractClaimServerBase(profileClaim); doIt = (serverBase != null) && (serverBase.equalsIgnoreCase(session.getServerBase())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/904/buggy-version/src.main.java.org.hspconsortium.client.session.FluentSessionContextWrapper.java", "BodyUseAPI": [], "Fixed commit": "a5a7c404e7073f668ffc5fce5401267ec2f1ee28", "Url": "https://api.github.com/repos/smart-on-fhir-reference-implementation/java-client", "Date": "2016-06-02T21:29:24Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rightDone && leftDone) startRumble(org.raiderrobotics.ArmControl.LEFT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4970/buggy-version/src.org.raiderrobotics.ArmControl.java", "BodyUseAPI": [], "Fixed commit": "177237fb8bd88646ea46805a9fa65755de9bd6dc", "Url": "https://api.github.com/repos/RaiderRobotics/Herbert-2015", "Date": "2015-03-26T19:22:47Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mIndicatorShown)) { mHandler.post(mRecordingTimeUpdater); mTxtRecTime.setVisibility(View.VISIBLE); mIndicatorShown = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1524/buggy-version/src.com.apical.dvr.CameraActivity.java", "BodyUseAPI": [], "Fixed commit": "10a9b07fde97c2fcaf4ea6b28fcb5a98f5713c87", "Url": "https://api.github.com/repos/rockcarry/CameraDVR", "Date": "2016-08-11T01:42:47Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (initialLightSensorRate == (-1)) { initialLightSensorRate = lightSensorRate; }else if (initialLightSensorRate > lightSensorRate) { android.util.Slog.w(com.android.server.display.DisplayPowerController.TAG, (((((\"Expected config_autoBrightnessInitialLightSensorRate (\" + initialLightSensorRate) + \") to be less than or equal to \") + \"config_autoBrightnessLightSensorRate (\") + lightSensorRate) + \").\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7286/buggy-version/services.core.java.com.android.server.display.DisplayPowerController.java", "BodyUseAPI": [], "Fixed commit": "5d50c947392f67f22be9313c7346718415131439", "Url": "https://api.github.com/repos/ReaperRoms/frameworks_base", "Date": "2017-08-08T23:23:43Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.vulcan.dto.ProjectStatusDto.getChangeLog()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (changeLog != null) { java.util.List<net.sourceforge.vulcan.dto.ChangeSetDto> changeSets = changeLog.getChangeSets(); java.util.Map<java.lang.String, java.lang.String> map = getChangeAuthorEmailMap(); java.lang.String[] profileAddresses = profile.getEmailAddresses(); for (net.sourceforge.vulcan.dto.ChangeSetDto changeSet : changeSets) { java.lang.String author = changeSet.getAuthor().trim(); if ((map.containsKey(author)) && (org.apache.commons.lang.ArrayUtils.contains(profileAddresses, map.get(author)))) { addresses.add(map.get(author)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8415/buggy-version/plugins.vulcan-mailer.source.main.java.net.sourceforge.vulcan.mailer.EmailPlugin.java", "BodyUseAPI": ["net.sourceforge.vulcan.dto.ChangeLogDto.getChangeSets()"], "Fixed commit": "c29427204fa4594029e97d1ca5695dfd172b4f8f", "Url": "https://api.github.com/repos/chriseldredge/vulcan", "Date": "2007-10-23T11:32:23Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (c != null) view.onDraw(c);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4672/buggy-version/HyperChess.app.src.main.java.hyperchessab.hyperchess.GameLoop.java", "BodyUseAPI": ["hyperchessab.hyperchess.GameView.onDraw(android.graphics.Canvas)"], "Fixed commit": "7e6316b82471effdd1b1b1d2d2351155d974475e", "Url": "https://api.github.com/repos/MrCuddle/HyperChess", "Date": "2014-12-30T11:39:47Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Collection<ly.kite.catalogue.SingleCurrencyAmounts>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (iterator.hasNext()) return iterator.next();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/555/buggy-version/KitePrintSDK.src.main.java.ly.kite.catalogue.MultipleCurrencyAmounts.java", "BodyUseAPI": ["java.util.Iterator<ly.kite.catalogue.SingleCurrencyAmounts>.next()"], "Fixed commit": "ec43a602f9497c48319613ecc23b21fb5e01dde2", "Url": "https://api.github.com/repos/OceanLabs/Android-Print-SDK", "Date": "2016-10-12T13:57:12Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.robonobo.core.service.DbService.getPlaylistConfig(p.getPlaylistId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (shouldITunesSync(pc)) syncITunes(p);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5649/buggy-version/core.src.java.com.robonobo.core.service.PlaylistService.java", "BodyUseAPI": [], "Fixed commit": "18e13fb6e447f508c1ea2ba5f85d2daec701af9d", "Url": "https://api.github.com/repos/macavity23/robonobo", "Date": "2011-11-01T20:48:55Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((temp.length()) > 0) { java.lang.Character c = temp.charAt(0); if (!(java.lang.Character.isDigit(c))) { temp = temp.substring(1); coralProfile.setPrice(java.lang.Double.parseDouble(temp)); }else { coralProfile.setPrice(java.lang.Double.parseDouble(temp)); } }else { coralProfile.setPrice(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/9228/buggy-version/app.src.main.java.kdc.reef.john.reefcaluclators.CoralSelected.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.substring(int)"], "Fixed commit": "58a5c51a52cc0f3b79361f49ee564c7fc574f0f7", "Url": "https://api.github.com/repos/jekrause/reef", "Date": "2017-05-29T22:04:22Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(<nulltype>,java.lang.String,java.lang.String,int,<nulltype>,java.lang.String[],java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (type != null) return org.ESLM.View.teacher.NewExerciseWindow.createExampleInstruction(type); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5505/buggy-version/src.org.ESLM.View.teacher.NewExerciseWindow.java", "BodyUseAPI": ["org.ESLM.View.teacher.NewExerciseWindow.createExampleInstruction(java.lang.String)"], "Fixed commit": "2e70fc2e2900ebd8633c0105519b8b36f7f94c12", "Url": "https://api.github.com/repos/RemiEven/ESLM", "Date": "2015-03-29T17:12:36Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ESLM.View.teacher.NewExerciseWindow.showInputDialog()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (newInstruction != null) this.protoLesson.addExercise(newInstruction);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5505/buggy-version/src.org.ESLM.View.teacher.LessonMenu.java", "BodyUseAPI": ["org.ESLM.Model.ProtoLesson.addExercise(org.ESLM.Model.Instruction)"], "Fixed commit": "2e70fc2e2900ebd8633c0105519b8b36f7f94c12", "Url": "https://api.github.com/repos/RemiEven/ESLM", "Date": "2015-03-29T17:12:36Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((session.getMismatch()) != null) return new org.dt.easywechat.session.SessionProcessor.SessionProcessResult(session.getMismatch().getResult(), null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2235/buggy-version/src.main.java.org.dt.easywechat.session.SessionProcessor.java", "BodyUseAPI": ["session.getMismatch().getResult()", "org.dt.easywechat.session.SessionModel.getMismatch()"], "Fixed commit": "47cdeed95bb258aa40b7c0f31772187c2417f59f", "Url": "https://api.github.com/repos/lvPATHng/EasyWechat", "Date": "2014-12-07T05:05:06Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vIndex != 6) && (vIndex != 3)) switchPosition(vIndex, (vIndex - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4396/buggy-version/src.arranger.arrengerPkg.ArrengeNumber.java", "BodyUseAPI": ["arranger.arrengerPkg.ArrengeNumber.switchPosition(java.lang.Integer,int)"], "Fixed commit": "aae0495e12b0b5aed0faaab8a5c096eff2135cd6", "Url": "https://api.github.com/repos/pantuza/Arrange-Numbers", "Date": "2011-10-05T04:11:35Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vIndex != 2) && (vIndex != 5)) switchPosition(vIndex, (vIndex + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4396/buggy-version/src.arranger.arrengerPkg.ArrengeNumber.java", "BodyUseAPI": ["arranger.arrengerPkg.ArrengeNumber.switchPosition(java.lang.Integer,int)"], "Fixed commit": "aae0495e12b0b5aed0faaab8a5c096eff2135cd6", "Url": "https://api.github.com/repos/pantuza/Arrange-Numbers", "Date": "2011-10-05T04:11:35Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((elements.get((vIndex + 1)).getId()) == 9) && (vIndex != 5)) switchPosition(vIndex, (vIndex + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4396/buggy-version/src.arranger.arrengerPkg.ArrengeNumber.java", "BodyUseAPI": ["arranger.arrengerPkg.ArrengeNumber.switchPosition(java.lang.Integer,int)"], "Fixed commit": "aae0495e12b0b5aed0faaab8a5c096eff2135cd6", "Url": "https://api.github.com/repos/pantuza/Arrange-Numbers", "Date": "2011-10-05T04:11:35Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((elements.get((vIndex - 1)).getId()) == 9) && (vIndex != 3)) switchPosition(vIndex, (vIndex - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4396/buggy-version/src.arranger.arrengerPkg.ArrengeNumber.java", "BodyUseAPI": ["arranger.arrengerPkg.ArrengeNumber.switchPosition(java.lang.Integer,int)"], "Fixed commit": "aae0495e12b0b5aed0faaab8a5c096eff2135cd6", "Url": "https://api.github.com/repos/pantuza/Arrange-Numbers", "Date": "2011-10-05T04:11:35Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((foundGroup == 13) && (!(\"*:\".equals(postMissingPart)))) { appendMissingPart(expressionValue, query, preMissingPart); appendMissingPart(expressionValue, expressionValue, postMissingPart); appendIfNotNull(expressionValue, criteriaValue); }else { appendMissingPart(expressionValue, query, preMissingPart); appendMissingPart(expressionValue, expressionValue, postMissingPart); appendIfNotNull(expressionValue, (overridedPreModifier.isEmpty() ? preModifier : overridedPreModifier)); appendIfNotNull(expressionValue, criteriaValue); appendIfNotNull(expressionValue, (overridedPostModifier.isEmpty() ? postModifier : overridedPostModifier)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/275/buggy-version/vertigo-dynamo-impl.src.main.java.io.vertigo.dynamox.search.DefaultListFilterBuilder.java", "BodyUseAPI": ["io.vertigo.dynamox.search.DefaultListFilterBuilder<C>.appendMissingPart(java.lang.StringBuilder,java.lang.StringBuilder,java.lang.String)", "io.vertigo.dynamox.search.DefaultListFilterBuilder<C>.appendMissingPart(java.lang.StringBuilder,java.lang.StringBuilder,java.lang.String)"], "Fixed commit": "290506a5ff43ca7a02a4aa9aecf8b3f0cb8d2dcf", "Url": "https://api.github.com/repos/KleeGroup/vertigo", "Date": "2015-06-22T17:31:45Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((txt.length()) <= 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6171/buggy-version/src.gui.CardRenderer.java", "BodyUseAPI": [], "Fixed commit": "38c21b5703e4832330454c943888d93b428ecc53", "Url": "https://api.github.com/repos/Daguerreo/Linguaggi", "Date": "2015-01-12T19:20:52Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.getFixedIPs()) == null) { input.setFixedIPs(new java.util.ArrayList<org.opendaylight.controller.networkconfig.neutron.Neutron_IPs>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8683/buggy-version/opendaylight.networkconfiguration.neutron.implementation.src.main.java.org.opendaylight.controller.networkconfig.neutron.implementation.NeutronPortInterface.java", "BodyUseAPI": ["org.opendaylight.controller.networkconfig.neutron.NeutronPort.setFixedIPs(java.util.ArrayList<org.opendaylight.controller.networkconfig.neutron.Neutron_IPs>)"], "Fixed commit": "758ba805042ab8103f1d2454227a32882454bfdc", "Url": "https://api.github.com/repos/mandeepdhami/controller", "Date": "2014-09-23T02:35:06Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((indexes.size()) == 0) { throw new com.baz.oops.service.exceptions.PollVotingException(\"Cannot vote: no options selected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1438/buggy-version/src.main.java.com.baz.oops.service.PollServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "d80be751a5cdb7b1842aedb44977c73b6023fdd0", "Url": "https://api.github.com/repos/kalaharis/oops-api", "Date": "2017-07-26T15:33:27Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit2.Response<com.earlier.yma.data.model.SearchResultObject>.body()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((resultObject != null) && ((resultObject.getResult()) != null)) { if (!(resultObject.getResult().getSchoolList().isEmpty())) { resultObject.setPath(path); resultObject.setPathName(pathName); resultObjects.add(resultObject); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2007/buggy-version/app.src.main.java.com.earlier.yma.ui.SchoolSearchActivity.java", "BodyUseAPI": ["resultObject.getResult().getSchoolList()", "com.earlier.yma.data.model.SearchResultObject.getResult()", "resultObject.getResult().getSchoolList().isEmpty()", "com.earlier.yma.data.model.SearchResultObject.setPath(java.lang.String)", "com.earlier.yma.data.model.SearchResultObject.setPathName(java.lang.String)", "java.util.List<com.earlier.yma.data.model.SearchResultObject>.add(com.earlier.yma.data.model.SearchResultObject)"], "Fixed commit": "9024c71869afc443ad7f096bd83c57c4dc61109d", "Url": "https://api.github.com/repos/namhyun-gu/MealViewer", "Date": "2016-06-04T12:06:48Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Boolean.parseBoolean(settings.value(LocalSettings.USE_PROXY))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (useProxy) { org.apache.http.HttpHost proxy = new org.apache.http.HttpHost(\"localhost\", 4545); params.setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1548/buggy-version/twitter-java.src.com.maximgalushka.classifier.twitter.TwitterClient.java", "BodyUseAPI": [], "Fixed commit": "21eda4a7afc3da7efd01852bf274cdcfb11ebf86", "Url": "https://api.github.com/repos/mgalushka/opinions-classifier", "Date": "2014-08-30T17:09:57Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (cls.isAnnotationPresent(com.slug.ioc.annotation.Inject.class)) { instance = cls.getAnnotation(com.slug.ioc.annotation.Inject.class).value().newInstance(); }else { instance = cls.newInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3620/buggy-version/slug-web.src.main.java.com.slug.ioc.BeanAdaptor.java", "BodyUseAPI": [], "Fixed commit": "5bc918485e6f9a6a251fc65bfb8d0cf357872d26", "Url": "https://api.github.com/repos/sluggarddd/slug", "Date": "2015-10-18T14:22:46Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["stub.storage().localToRemote().get(org.harper.driveclient.common.DriveUtils.relativePath(local.getParentFile()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(org.harper.driveclient.common.StringUtils.isEmpty(remoteParent))) && (!(stub.storage().localToRemote().containsKey(record.getLocalFile())))) { stub.transmit().upload(remoteParent, local); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7401/buggy-version/src.org.harper.driveclient.synchronize.DefaultSynchronizeService.java", "BodyUseAPI": ["org.harper.driveclient.synchronize.DefaultSynchronizeService.transmit()", "stub.transmit().upload(java.lang.String,java.io.File)"], "Fixed commit": "68d23d4fe04d45c0893cadf453ab60f067412fee", "Url": "https://api.github.com/repos/harperjiang/GoogleDriveLinux", "Date": "2014-01-24T03:12:33Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.vidstige.jadb.SyncTransport.readString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"FAIL\".equals(id)) { throw new se.vidstige.jadb.JadbException(readString(n)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8678/buggy-version/src.se.vidstige.jadb.SyncTransport.java", "BodyUseAPI": [], "Fixed commit": "c051da8e7f10e0a4b4918a09358c3d590debe608", "Url": "https://api.github.com/repos/vidstige/jadb", "Date": "2014-03-20T20:31:25Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(this.refreshToken)) { loadFriends(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1872/buggy-version/src.main.java.org.lantern.state.DefaultFriendsHandler.java", "BodyUseAPI": [], "Fixed commit": "0a3194a522fbbeaecc9b907b16689bc2b8165fee", "Url": "https://api.github.com/repos/getlantern/lantern", "Date": "2013-10-17T19:50:19Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResources().getInteger(R.integer.is_tablet)) == 0) { mCollapsingToolbarLayout.setStatusBarScrimColor(darkMutedColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1023/buggy-version/XYZReader.src.main.java.com.example.xyzreader.ui.ArticleDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "b9b095a691c18ce2e2968676672c00ab9a0a7123", "Url": "https://api.github.com/repos/semani2/Project5-AndroidNanodegree", "Date": "2017-01-18T01:50:41Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["k4unl.minecraft.Hydraulicraft.tileEntities.storage.FluidTank.drain(resource.amount,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((doDrain && (drained != null)) && ((drained.amount) > 0)) { getHandler().updateFluidOnNextTick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6739/buggy-version/java.k4unl.minecraft.Hydraulicraft.tileEntities.storage.TileHydraulicPressureReservoir.java", "BodyUseAPI": [], "Fixed commit": "3cbcd494addfecc0ff0a05d1c8507dab0925148d", "Url": "https://api.github.com/repos/K-4U/Hydraulicraft", "Date": "2016-02-12T20:52:36Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (right instanceof groovy.lang.GString) { return left.toString().compareTo(right.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6511/buggy-version/src.main.org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.java", "BodyUseAPI": ["java.lang.String.compareTo(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "8b11b22f135618231f7ee3e9de6605f91d3ab1ae", "Url": "https://api.github.com/repos/apache/groovy", "Date": "2015-10-19T15:19:33Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (right instanceof java.lang.String) { return left.toString().compareTo(((java.lang.String) (right))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6511/buggy-version/src.main.org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation.java", "BodyUseAPI": [], "Fixed commit": "8b11b22f135618231f7ee3e9de6605f91d3ab1ae", "Url": "https://api.github.com/repos/apache/groovy", "Date": "2015-10-19T15:19:33Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.restlet.ext.ssl.internal.SslConnection.getLogger().isLoggable(java.util.logging.Level.FINER)) { org.restlet.ext.ssl.internal.SslConnection.getLogger().log(java.util.logging.Level.FINER, (\"Handling SSL handshake: \" + hs)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8207/buggy-version/modules.org.restlet.ext.ssl.src.org.restlet.ext.ssl.internal.SslConnection.java", "BodyUseAPI": ["org.restlet.ext.ssl.internal.SslConnection.getLogger().log(java.util.logging.Level,java.lang.String)"], "Fixed commit": "9cbf3e289bfad5b7aa2d235b6e696ccee56f299b", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2012-12-31T16:17:02Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.restlet.ext.ssl.internal.SslConnection.getLogger().isLoggable(java.util.logging.Level.FINER)) { org.restlet.ext.ssl.internal.SslConnection.getLogger().log(java.util.logging.Level.FINER, (\"Handling SSL result: \" + (getSslEngineStatus()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8207/buggy-version/modules.org.restlet.ext.ssl.src.org.restlet.ext.ssl.internal.SslConnection.java", "BodyUseAPI": ["org.restlet.ext.ssl.internal.SslConnection.getLogger().log(java.util.logging.Level,java.lang.String)"], "Fixed commit": "9cbf3e289bfad5b7aa2d235b6e696ccee56f299b", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2012-12-31T16:17:02Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.roastlechon.games.sudoku.view.Field.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(value.equals(\" \"))) { square.setValue(java.lang.Integer.valueOf(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7368/buggy-version/src.com.roastlechon.games.sudoku.view.Board.java", "BodyUseAPI": ["com.roastlechon.games.sudoku.model.Square.setValue(java.lang.Integer)", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "ad86e94f3882d44515dac3f068cd14bcce047d8b", "Url": "https://api.github.com/repos/brian618/sudoku", "Date": "2015-11-29T03:31:55Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { highscoreList.setAdapter(new android.widget.ArrayAdapter<java.lang.String>(getActivity(), R.layout.custom_list, highscores)); highscoreList.setVisibility(View.VISIBLE); loading.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6023/buggy-version/app.src.main.java.com.example.jonas.galgelegaflevering.HighscoreFragment.java", "BodyUseAPI": [], "Fixed commit": "0e097f613b47ce3f83abae76a48b18589be2d9e8", "Url": "https://api.github.com/repos/Quayed/galgeleg", "Date": "2016-01-20T10:47:56Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recording.isFailed()) || (recording.isComplete())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3767/buggy-version/src.main.java.uk.co.mdjcox.sagetv.catchup.server.pages.RecordingsPage.java", "BodyUseAPI": [], "Fixed commit": "0963a38b96866da19e854ed182e20087e603cf26", "Url": "https://api.github.com/repos/michaeldjcox/sagetvcatchup", "Date": "2014-12-04T17:18:00Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recording.isFailed()) || (recording.isComplete())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3767/buggy-version/src.main.java.uk.co.mdjcox.sagetv.catchup.server.podcasts.RecordingsPodcast.java", "BodyUseAPI": [], "Fixed commit": "0963a38b96866da19e854ed182e20087e603cf26", "Url": "https://api.github.com/repos/michaeldjcox/sagetvcatchup", "Date": "2014-12-04T17:18:00Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, java.lang.Integer>.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (jumps == null) { net.nikr.eve.jeveasset.data.SolarSystem from = systemCache.get(systemID); net.nikr.eve.jeveasset.data.SolarSystem to = systemCache.get(jumpSystemID); if ((from != null) && (to != null)) { jumps = graph.distanceBetween(from, to); }else { jumps = -1; } distances.put(systemID, jumps); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6080/buggy-version/src.main.java.net.nikr.eve.jeveasset.data.ProfileData.java", "BodyUseAPI": [], "Fixed commit": "1899e4750bc7f94f2b90e4aeac08da3375b096d2", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2016-07-31T16:35:13Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getParameter(net.sf.mzmine.modules.rawdatamethods.peakpicking.massdetection.PeakInvestigator.PeakInvestigatorParameters.versions).getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (version.contains(\"(\")) { int index = version.indexOf(\"(\"); return version.substring(0, (index - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/134/buggy-version/src.main.java.net.sf.mzmine.modules.rawdatamethods.peakpicking.massdetection.PeakInvestigator.PeakInvestigatorParameters.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "931489c6f6ac84c7f5a8f1f0839bf61d4b166800", "Url": "https://api.github.com/repos/Veritomyx/mzmine2", "Date": "2016-02-10T12:45:28Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["admission.getPatient().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (relationNameattr != null) { relationNameattrStr = relationNameattr.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6536/buggy-version/omod.src.main.java.org.openmrs.module.ipdapp.page.controller.AdmissionFormPageController.java", "BodyUseAPI": ["org.openmrs.module.ipdapp.page.controller.PersonAttribute.getValue()"], "Fixed commit": "1e6d55d947de4cf69163957756c7ea8e3e6dc382", "Url": "https://api.github.com/repos/bespokeinteractive/ipdapp", "Date": "2016-07-21T07:14:02Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (it == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1842/buggy-version/src.parallel.SS_OPT.java", "BodyUseAPI": [], "Fixed commit": "347fca6223887f7a462c0e89a3b9feaad01236aa", "Url": "https://api.github.com/repos/whuxcy/SpaceSaving", "Date": "2017-08-29T08:04:18Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mt.output.equals(\"\")) { mt.output = \"No output received\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/79/buggy-version/app.src.main.java.com.example.gizmo.gpsmetrics.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "928a73f1aedb438a53050d77a19aca2e1c69d445", "Url": "https://api.github.com/repos/ipetrushin/GPSMetrics", "Date": "2017-08-14T16:08:33Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (material.equals(\"GOLD\")) return com.vanhal.progressiveautomation.ref.ToolHelper.LEVEL_GOLD; else if (material.equals(\"EMERALD\")) return com.vanhal.progressiveautomation.ref.ToolHelper.LEVEL_DIAMOND; else if (material.equals(\"DIAMOND\")) return com.vanhal.progressiveautomation.ref.ToolHelper.LEVEL_DIAMOND;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/9054/buggy-version/src.main.java.com.vanhal.progressiveautomation.ref.ToolHelper.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "23bc1aa007a6dd596922011f0c4d6ad20dbced9c", "Url": "https://api.github.com/repos/ToadsworthLP/ProgressiveAutomation", "Date": "2017-03-30T14:33:13Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((max - min) < 1) { sender.sendMessage(((main.colors.getError()) + (main.msgs.get(\"general.cmd.full\")))); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2222/buggy-version/uCarsRace.src.net.stormdev.ucars.race.URaceCommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "3ac3588524a2c51599fd446f3d3f4d7ea1902a85", "Url": "https://api.github.com/repos/storm345dev/uCarsRace", "Date": "2013-10-28T09:41:46Z"},
{"Line": "=>1348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (integerDivision) { n.getTarget().accept(this, context); printer.print(\" = \"); printer.print(\"stjs.trunc(\"); n.getTarget().accept(this, context); printer.print(BinaryExpr.Operator.divide); printer.print(\"(\"); n.getValue().accept(this, context); printer.print(\"))\"); }else { n.getTarget().accept(this, context); printer.print(\" \"); printer.print(n.getOperator()); printer.print(\" \"); n.getValue().accept(this, context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6910/buggy-version/generator.src.main.java.org.stjs.generator.writer.JavascriptWriterVisitor.java", "BodyUseAPI": [], "Fixed commit": "308a5d492290921275c4dfcc0d133b63ef25538f", "Url": "https://api.github.com/repos/st-js/st-js", "Date": "2013-12-26T10:08:39Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(jObj.isNull(\"wallTime\"))) { org.json.JSONArray wallTimeArray = jObj.getJSONArray(\"wallTime\"); if ((wallTimeArray != null) && ((wallTimeArray.length()) > 0)) { wallTime = new java.lang.String[wallTimeArray.length()]; for (int index = 0; index < (wallTimeArray.length()); index++) { java.lang.Object obj = wallTimeArray.get(index); wallTime[index] = obj.toString(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4165/buggy-version/src.main.java.edu.pitt.dbmi.ccd.rest.client.util.JsonUtils.java", "BodyUseAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Fixed commit": "27c06e7996a028d1e64ab247efa8fa0b55884535", "Url": "https://api.github.com/repos/bd2kccd/causal-tetrad-rest-client", "Date": "2017-03-17T15:53:52Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (v.isDouble().equalTo(SetlBoolean.TRUE)) { return v.jDoubleValue(); }else { return v.jIntValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6140/buggy-version/interpreter.plot_addon.src.main.java.org.randoom.setlx.utilities.ConvertSetlTypes.java", "BodyUseAPI": ["org.randoom.setlx.types.Value.jDoubleValue()", "org.randoom.setlx.types.Value.jIntValue()"], "Fixed commit": "8c98774dde0ab2602066f3583345d1e5815ed5bd", "Url": "https://api.github.com/repos/topfdrummer/setlX", "Date": "2015-07-08T18:32:23Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ticket.getClosedAt()) > 0) { ldt = java.time.LocalDateTime.ofEpochSecond(ticket.getClosedAt(), 0, zone); fw.write(((ldt.getMonthValue()) + \",\")); fw.write(((ldt.getDayOfMonth()) + \",\")); fw.write(((ldt.getYear()) + \",\")); fw.write(((ldt.getHour()) + \",\")); fw.write(((ldt.getMinute()) + \",\")); }else { fw.write(\",,,,,\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6642/buggy-version/src.main.java.ankurmgoyal.omnivoreCsvBuilder.Builder.java", "BodyUseAPI": ["java.time.LocalDateTime.ofEpochSecond(ticket.getClosedAt(),int,java.time.ZoneOffset)", "ankurmgoyal.api.Ticket.getClosedAt()"], "Fixed commit": "bf5ee65e13aefc1d5a9c1239b208b243d76572e2", "Url": "https://api.github.com/repos/ankurmgoyal/omnivoreCsvBuilder", "Date": "2017-06-02T17:59:08Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.endTime) == 0) { org.javafling.pokerenlighter.simulation.SimulationEvent event = new org.javafling.pokerenlighter.simulation.SimulationEvent(SimulationEvent.EVENT_SIM_DONE, this.overallProgress); this.notifiable.onSimulationCancel(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/698/buggy-version/src.org.javafling.pokerenlighter.simulation.Simulator.java", "BodyUseAPI": [], "Fixed commit": "99e383e23fe841660662d757d053b3af96098cf1", "Url": "https://api.github.com/repos/SoboLAN/pokerenlighter-simulator", "Date": "2014-09-14T11:41:55Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.getCharBefore()) == '$') { context.addTokenAndResetText(); context.switchTo(de.jcup.basheditor.script.parser.CODE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3246/buggy-version/basheditor-plugin.src.main.java.de.jcup.basheditor.script.parser.TokenParser.java", "BodyUseAPI": ["de.jcup.basheditor.script.parser.ParseContext.switchTo(de.jcup.basheditor.script.parser.CODE)", "de.jcup.basheditor.script.parser.ParseContext.addTokenAndResetText()"], "Fixed commit": "1013f602ccf3374c47fb595f5770cb79c4d0214b", "Url": "https://api.github.com/repos/de-jcup/eclipse-bash-editor", "Date": "2017-09-16T22:17:19Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (layer != null) { if (layer instanceof mapviewer.tiled.TileLayer) this.layers.add(((mapviewer.tiled.TileLayer) (layer))); else if (layer instanceof mapviewer.tiled.ObjectLayer) { }else java.lang.System.out.println(\"Deze layer is aids\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6447/buggy-version/src.mapviewer.tiled.TileMap.java", "BodyUseAPI": [], "Fixed commit": "8ea5acd39d54a3b94a56476e4d0314c574ce6738", "Url": "https://api.github.com/repos/jipjan/ProjectFestival", "Date": "2017-03-20T12:59:07Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (bitmap == null) { this.failPicture(\"Error decoding image.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4967/buggy-version/src.android.NativeCameraLauncher.java", "BodyUseAPI": [], "Fixed commit": "74da7377cedd146b2b2d409597954535759a4c68", "Url": "https://api.github.com/repos/shaithana/cordova-plugin-wezka-nativecamera", "Date": "2014-07-12T19:21:38Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) == (Build.VERSION_CODES.LOLLIPOP)) { priority = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3541/buggy-version/src.com.dvd.android.updatechecker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "33cfba678ee372240f24c932685be4a7607901a7", "Url": "https://api.github.com/repos/DVDAndroid/UpdateChecker", "Date": "2014-10-29T15:23:48Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((manager) == null) { manager = new com.google.gwt.event.shared.HandlerManager(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8026/buggy-version/src.main.java.org.markdown4j.client.MarkdownProcessor.java", "BodyUseAPI": [], "Fixed commit": "dd23ef40ae0b299460a624f75900a54d8599bf9f", "Url": "https://api.github.com/repos/billy1380/markdown4j-gwt", "Date": "2015-01-11T15:48:08Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((error.getCause()) != null) { cause = error.getCause().getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7535/buggy-version/SimpleWeather.src.com.dpanayotov.simpleweather.api.base.BaseForecastErrorListener.java", "BodyUseAPI": ["com.android.volley.VolleyError.getCause()", "error.getCause().getMessage()"], "Fixed commit": "2389f067347770cf645706fa8b256caf7dad5dea", "Url": "https://api.github.com/repos/deanpanayotov/simple_weather", "Date": "2014-09-07T20:43:18Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(number.equals(\"\"))) { xml += (((\"<dataValue dataElement=\\\"\" + id) + \"\\\" value=\\\"\") + number) + \"\\\" />\\r\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/99/buggy-version/dhis-sms-in.src.main.java.org.hisp.dhis.smsin.beans.SMSServiceBean.java", "BodyUseAPI": [], "Fixed commit": "93ff9fb88d37fa2026b320aca3d31e396f4171f9", "Url": "https://api.github.com/repos/mobilars/JavaProjects", "Date": "2012-03-21T13:06:25Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.fivetrue.workout.timer.LL.D) android.util.Log.d(com.fivetrue.workout.timer.firebase.user.FirebaseUser.TAG, \"try to find user\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8241/buggy-version/app.src.main.java.com.fivetrue.workout.timer.firebase.user.FirebaseUser.java", "BodyUseAPI": [], "Fixed commit": "bdb97fc77340578fb95cf78651f129e11635bf54", "Url": "https://api.github.com/repos/fivetrue/RTimer", "Date": "2017-03-23T00:51:38Z"},
{"Line": "=>607", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nodesSelected && (layoutType == (LayoutType.ISOM_LAYOUT))) { if ((javax.swing.JOptionPane.showConfirmDialog(this, (((layoutType + \" cannot be applied on a subset of nodes. Apply \") + layoutType) + \" on all nodes?\"), \"Confirm\", javax.swing.JOptionPane.YES_NO_OPTION)) == (javax.swing.JOptionPane.YES_OPTION)) { nodesSelected = false; }else { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1754/buggy-version/de.bund.bfr.knime.gis.views.canvas.src.de.bund.bfr.knime.gis.views.canvas.GraphCanvas.java", "BodyUseAPI": ["javax.swing.JOptionPane.showConfirmDialog(de.bund.bfr.knime.gis.views.canvas.GraphCanvas,(((layoutType + \" cannot be applied on a subset of nodes. Apply \") + layoutType) + \" on all nodes?\"),java.lang.String,int)"], "Fixed commit": "9413ecc36636f1d0d6d7864f04d4b2057078a674", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2014-05-23T09:32:07Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (profile instanceof com.intellij.profile.ProfileEx) { ((com.intellij.profile.ProfileEx) (profile)).profileChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6099/buggy-version/platform.analysis-impl.src.com.intellij.profile.codeInspection.InspectionProfileManager.java", "BodyUseAPI": [], "Fixed commit": "addc30422bbd6fd47e3f8c6e790a9c10fd398bf3", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2013-09-17T02:59:06Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.vehicle.VehicleDamageEvent.getAttacker()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (damageSource == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8493/buggy-version/src.me.ryanhamshire.GriefPrevention.EntityEventHandler.java", "BodyUseAPI": [], "Fixed commit": "b227ebc5ea78096c1ef7e1fee5affdf6cbb1784c", "Url": "https://api.github.com/repos/10becja/GriefPreventionPVP", "Date": "2014-11-27T01:24:05Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.jimple.IfStmt.getCondition()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (condition instanceof soot.jimple.EqExpr) { if (op1 instanceof soot.jimple.NullConstant) return isNullValue(gv2); else if (op2 instanceof soot.jimple.NullConstant) return isNullValue(gv1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6572/buggy-version/src.main.java.hisdroid.IDEAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "0b09b8e38d6bc58429b296b1d3afd2f4c534725f", "Url": "https://api.github.com/repos/pass518224/libericc", "Date": "2016-05-13T08:13:14Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.jimple.IfStmt.getCondition()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (condition instanceof soot.jimple.NeExpr) { if (op1 instanceof soot.jimple.NullConstant) return isNullValue(gv2).not(); else if (op2 instanceof soot.jimple.NullConstant) return isNullValue(gv1).not(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6572/buggy-version/src.main.java.hisdroid.IDEAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "0b09b8e38d6bc58429b296b1d3afd2f4c534725f", "Url": "https://api.github.com/repos/pass518224/libericc", "Date": "2016-05-13T08:13:14Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.basicGenerator.isBurning()) { i1 = this.basicGenerator.getBurnTimeRemainingScaled(12); this.drawTexturedModalRect((k + 56), (((l + 36) + 12) - i1), 176, (12 - i1), 14, (i1 + 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3895/buggy-version/src.lycheisuemon.multiengineering.gui.GuiBasicGenerator.java", "BodyUseAPI": ["lycheisuemon.multiengineering.tileentity.TileEntityBasicGenerator.getBurnTimeRemainingScaled(int)"], "Fixed commit": "899302f626eb42ead465633b89c5c4dcca3a48c7", "Url": "https://api.github.com/repos/limonadeht/Multi-Block-Engineering", "Date": "2015-09-11T10:19:38Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (frame.hasPayload()) { buffer.put(frame.getPayloadData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7467/buggy-version/jetty-websocket.websocket-core.src.main.java.org.eclipse.jetty.websocket.generator.FrameGenerator.java", "BodyUseAPI": ["java.nio.ByteBuffer.put(frame.getPayloadData())", "org.eclipse.jetty.websocket.protocol.WebSocketFrame.getPayloadData()"], "Fixed commit": "fc8198e854584c46801e5383485c7dfffe930c0f", "Url": "https://api.github.com/repos/eclipse/jetty.project", "Date": "2012-07-06T20:56:04Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((coordinate < min) || (coordinate > max)) { coordinate = middleCoordinate; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6068/buggy-version/swing.gis.src.main.java.org.sola.clients.swing.gis.imagegenerator.MapImageGeneratorForSelectedParcel.java", "BodyUseAPI": [], "Fixed commit": "4c565169e9767ef663f459007d21c719839e1918", "Url": "https://api.github.com/repos/SOLA-FAO/clients", "Date": "2014-07-18T08:39:26Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((coordinate + 10) > max) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6068/buggy-version/swing.gis.src.main.java.org.sola.clients.swing.gis.imagegenerator.MapImageGeneratorForSelectedParcel.java", "BodyUseAPI": [], "Fixed commit": "4c565169e9767ef663f459007d21c719839e1918", "Url": "https://api.github.com/repos/SOLA-FAO/clients", "Date": "2014-07-18T08:39:26Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openide.util.Lookup.lookup(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (model == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3766/buggy-version/netbeans-gradle-plugin.src.main.java.org.netbeans.gradle.project.java.model.JavaParsingUtils.java", "BodyUseAPI": [], "Fixed commit": "323e2f6ad8832a5ed409d64c6d1a9d0f44dee9b7", "Url": "https://api.github.com/repos/kelemen/netbeans-gradle-project", "Date": "2016-10-13T17:10:52Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mCallbackManager.onActivityResult(requestCode, resultCode, data)) { if (resultCode == (RESULT_OK)) { ru.potelov.sv.util.AppLogger.d(\"on activity result facebook\"); java.lang.String accessToken = com.facebook.AccessToken.getCurrentAccessToken().getToken(); mPresenter.onFacebookLoginClick(accessToken); }else { mCallbackManager.onActivityResult(requestCode, resultCode, data); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8848/buggy-version/app.src.main.java.ru.potelov.sv.ui.login.LoginActivity.java", "BodyUseAPI": ["com.facebook.CallbackManager.onActivityResult(int,int,android.content.Intent)"], "Fixed commit": "fc4e611542ab9c219c2e821daf236ee440554fd6", "Url": "https://api.github.com/repos/happocha/sv", "Date": "2017-08-29T10:43:31Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (date == (dueDay.getTime())) { selection = 1; date = 0; }else if (date == dueTime) { selection = 2; date = 0; }else if ((date + (com.todoroo.andlib.utility.DateUtilities.ONE_DAY)) == (dueDay.getTime())) { selection = 3; date = 0; }else if ((date + (com.todoroo.andlib.utility.DateUtilities.ONE_WEEK)) == (dueDay.getTime())) { selection = 4; date = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4845/buggy-version/astrid.src.com.todoroo.astrid.ui.HideUntilControlSet.java", "BodyUseAPI": ["java.util.Date.getTime()", "java.util.Date.getTime()"], "Fixed commit": "75113ece4482a959f7246d7fa8e1b08fd1da8a78", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2013-04-15T18:51:16Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attemptToParseColor()) { this.color = color; }else this.color = previous;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2207/buggy-version/src.main.java.joshie.enchiridion.gui.book.features.FeatureBox.java", "BodyUseAPI": [], "Fixed commit": "6233e5060b522f8f70668f7d251c03aa5f2f3a63", "Url": "https://api.github.com/repos/PenguinSquad/Enchiridion", "Date": "2016-03-05T21:41:14Z"},
{"Line": "=>711", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.runwaysdk.dataaccess.MdBusinessDAOIF.definesAttribute(DashboardState.GEOPRISMUSER)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (mdAttributeReference != null) { com.runwaysdk.dataaccess.metadata.MdAttributeConcreteDAO lockedBy = ((com.runwaysdk.dataaccess.metadata.MdAttributeConcreteDAO) (mdAttributeReference.getBusinessDAO())); lockedBy.setValue(MdAttributeReferenceInfo.REF_MD_ENTITY, mdSingleActor.getId()); lockedBy.apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7277/buggy-version/geoprism-server.src.main.java.net.geoprism.data.importer.GeoprismImportPlugin.java", "BodyUseAPI": ["com.runwaysdk.dataaccess.MdAttributeConcreteDAOIF.getBusinessDAO()"], "Fixed commit": "5e8f472a2d2b49d02a8826168e2ffeb81d641366", "Url": "https://api.github.com/repos/terraframe/geoprism", "Date": "2016-12-08T21:58:08Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.lang.ASTNode.getElementType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (elementType.equals(com.intellij.plugins.haxe.ide.formatter.WILDCARD)) { return addSingleSpaceIf(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/299/buggy-version/src.com.intellij.plugins.haxe.ide.formatter.HaxeSpacingProcessor.java", "BodyUseAPI": [], "Fixed commit": "738049e3628bd838249395499cc5d23b5c8a8732", "Url": "https://api.github.com/repos/JetBrains/intellij-haxe", "Date": "2014-10-08T15:47:24Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((auditLog.getAuditLogId()) == null) { auditLog = getAuditLogDao().save(auditLog); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2937/buggy-version/api.src.main.java.org.openmrs.module.auditlog.api.db.hibernate.interceptor.HibernateAuditLogInterceptor.java", "BodyUseAPI": ["org.openmrs.module.auditlog.api.db.AuditLogDAO.save(org.openmrs.module.auditlog.AuditLog)"], "Fixed commit": "31b2869d2a520dc30018bb559b425ebd29305ead", "Url": "https://api.github.com/repos/openmrs/openmrs-module-auditlog", "Date": "2013-10-04T16:49:45Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != name) { result.append(\"name=\\\"\").append(name).append(\"\\\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5918/buggy-version/src.main.java.com.ociweb.jfast.catalog.generator.TemplateGenerator.java", "BodyUseAPI": ["java.lang.Appendable.append(java.lang.String)", "java.lang.Appendable.append(java.lang.String)"], "Fixed commit": "722e4068d54cb1d08fde4881b679c40343dc7092", "Url": "https://api.github.com/repos/nathantippy/jFAST", "Date": "2014-11-11T04:55:07Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentPodcastList.remove(podcast)) ((net.alliknow.podcatcher.adapters.PodcastListAdapter) (adapter)).updateList(currentPodcastList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7222/buggy-version/src.net.alliknow.podcatcher.view.fragments.PodcastListFragment.java", "BodyUseAPI": ["net.alliknow.podcatcher.view.fragments.PodcastListFragment.updateList(java.util.List<net.alliknow.podcatcher.model.types.Podcast>)"], "Fixed commit": "352408c57c162cb9d97037342586cf76b41e7569", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2013-10-25T10:17:27Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.umd.cs.findbugs.detect.FindUselessObjects.GenLocation.frameBefore()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(before.isValid())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1037/buggy-version/findbugs.src.java.edu.umd.cs.findbugs.detect.FindUselessObjects.java", "BodyUseAPI": [], "Fixed commit": "e5969cbf86f17cc1a9b10f9a480a10b80afe55f1", "Url": "https://api.github.com/repos/arthepsy/findbugs", "Date": "2015-02-25T23:58:51Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lockFile) == null) throw new java.lang.IllegalStateException((\"Locked directory : \" + directoryPath));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2034/buggy-version/gs-kernel.src.main.java.org.genericsystem.kernel.Archiver.java", "BodyUseAPI": [], "Fixed commit": "4332cbba2466c8ffdd46bf6f1e895c08054cc87a", "Url": "https://api.github.com/repos/genericsystem/genericsystem2015", "Date": "2016-02-02T15:14:13Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (key.endsWith(com.dianping.pigeon.remoting.invoker.process.DegradationManager.KEY_DEGRADE_FAILURE)) { com.dianping.pigeon.remoting.invoker.process.DegradationManager.isFailureDegrade = java.lang.Boolean.valueOf(value); }else if (key.endsWith(com.dianping.pigeon.remoting.invoker.process.DegradationManager.KEY_DEGRADE_THRESHOLD_TOTAL)) { com.dianping.pigeon.remoting.invoker.process.DegradationManager.degradeTotalThreshold = java.lang.Integer.valueOf(value); }else if (key.endsWith(com.dianping.pigeon.remoting.invoker.process.DegradationManager.KEY_DEGRADE_THRESHOLD_INVOKE)) { com.dianping.pigeon.remoting.invoker.process.DegradationManager.degradeInvokeThreshold = java.lang.Integer.valueOf(value); }else if (key.endsWith(com.dianping.pigeon.remoting.invoker.process.DegradationManager.KEY_DEGRADE_RECOVER_PERCENT)) { com.dianping.pigeon.remoting.invoker.process.DegradationManager.degradeRecoverPercent = java.lang.Float.valueOf(value); }else if (key.endsWith(com.dianping.pigeon.remoting.invoker.process.DegradationManager.KEY_DEGRADE_RECOVER_INTERVAL)) { com.dianping.pigeon.remoting.invoker.process.DegradationManager.degradeRecoverInterval = java.lang.Integer.valueOf(value); }else if (key.endsWith(com.dianping.pigeon.remoting.invoker.process.DegradationManager.KEY_DEGRADE_PERCENT_MAX)) { com.dianping.pigeon.remoting.invoker.process.DegradationManager.degradePercentMax = java.lang.Float.valueOf(value); }else if (key.endsWith(com.dianping.pigeon.remoting.invoker.process.DegradationManager.KEY_DEGRADE_CHECK_SECONDS)) { com.dianping.pigeon.remoting.invoker.process.DegradationManager.degradeCheckSeconds = java.lang.Integer.valueOf(value); }else if (key.endsWith(com.dianping.pigeon.remoting.invoker.process.DegradationManager.KEY_DEGRADE_CHECK_INTERVAL)) { com.dianping.pigeon.remoting.invoker.process.DegradationManager.degradeCheckInterval = java.lang.Integer.valueOf(value); }else if (key.endsWith(com.dianping.pigeon.remoting.invoker.process.DegradationManager.KEY_DEGRADE_LOG_ENABLE)) { com.dianping.pigeon.remoting.invoker.process.DegradationManager.isLogDegrade = java.lang.Boolean.valueOf(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6986/buggy-version/pigeon-remoting.src.main.java.com.dianping.pigeon.remoting.invoker.process.DegradationManager.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "649daaab09d82bf8c363a620d9e9618986f831a3", "Url": "https://api.github.com/repos/dianping/pigeon", "Date": "2017-04-26T04:23:03Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["util.window.AddAnimeDialog.getMap(java.lang.String)", "util.ConnectionManager.getAnimeData(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (util.window.AddAnimeDialog.getDeletedArrayList(listName).contains(map.get(name).getImagePath(listName))) { util.window.AddAnimeDialog.getDeletedArrayList(listName).remove(map.get(name).getImagePath(listName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5073/buggy-version/src.util.window.SuggestionDialog.java", "BodyUseAPI": ["java.util.TreeMap<java.lang.String, util.AnimeData>.get(java.lang.String)", "util.window.AddAnimeDialog.getDeletedArrayList(java.lang.String)", "map.get(name).getImagePath(java.lang.String)", "util.window.AddAnimeDialog.getDeletedArrayList(listName).remove(map.get(name).getImagePath(listName))"], "Fixed commit": "9a7afece502ee7afadbd58b5e564e6fcee34ce1b", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-11-08T12:23:52Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mid_attack)) { weapon = com.jacl.capstone.world.entities.player.items.ItemFactory.spawn(item_selection, world); world.entity_handler.add(weapon); mid_attack = true; attack_time_current = 0.0F; attack_time_max = weapon.use_time; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5782/buggy-version/app.core.src.com.jacl.capstone.helpers.AttackHelper.java", "BodyUseAPI": [], "Fixed commit": "ae9b15376232be720177e105612e02c6e0dcaab2", "Url": "https://api.github.com/repos/LeePresswood/JACLCapstone", "Date": "2015-10-16T16:29:48Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getTarget().getComponent(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (loccomp != null) { aicomp.gatherTargets.add(loccomp.getWorldPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6909/buggy-version/mods.miniion.src.main.java.org.terasology.miniion.componentsystem.controllers.MinionSystem.java", "BodyUseAPI": ["aicomp.gatherTargets.add(loccomp.getWorldPosition())", "org.terasology.miniion.componentsystem.controllers.LocationComponent.getWorldPosition()"], "Fixed commit": "269f6b90fff844b376adf21bfd546219ad8212a4", "Url": "https://api.github.com/repos/overdhose/Terasology", "Date": "2013-01-28T00:03:32Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((backend.Backend.loadPuzzle(puzzle)) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4613/buggy-version/src.backend.Backend.java", "BodyUseAPI": [], "Fixed commit": "bccd077af63d04ef90ad10ef4cd59b10d2f32b72", "Url": "https://api.github.com/repos/ChrisMalnick/CROSSPic-", "Date": "2013-12-29T22:35:03Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((backend.Backend.loadUser(user)) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4613/buggy-version/src.backend.Backend.java", "BodyUseAPI": [], "Fixed commit": "bccd077af63d04ef90ad10ef4cd59b10d2f32b72", "Url": "https://api.github.com/repos/ChrisMalnick/CROSSPic-", "Date": "2013-12-29T22:35:03Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((times.size()) == 3) { recipes.setPrepTime(times.get(0).text().replace(\"Prep Time: \", \"\")); recipes.setCookTime(times.get(1).text().replace(\"Cook Time: \", \"\")); recipes.setReadyTime(times.get(2).text().replace(\"Total Time: \", \"\")); }else { android.util.Log.w(\"HtmlParse\", \"Unable to get the times\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4350/buggy-version/cookingcompanionphone.src.main.java.com.wce.wearables.cookingcompanion.HtmlParse.java", "BodyUseAPI": ["times.get(1).text().replace(java.lang.String,java.lang.String)", "org.jsoup.select.Elements.get(int)", "com.wce.wearables.cookingcompanion.Recipe.setReadyTime(times.get(2).text().replace(\"Total Time: \", \"\"))", "times.get(2).text().replace(java.lang.String,java.lang.String)", "times.get(2).text()", "times.get(1).text()", "com.wce.wearables.cookingcompanion.Recipe.setPrepTime(times.get(0).text().replace(\"Prep Time: \", \"\"))", "times.get(0).text()", "org.jsoup.select.Elements.get(int)", "org.jsoup.select.Elements.get(int)", "times.get(0).text().replace(java.lang.String,java.lang.String)", "com.wce.wearables.cookingcompanion.Recipe.setCookTime(times.get(1).text().replace(\"Cook Time: \", \"\"))"], "Fixed commit": "89dd38ab5e9166622d967734f8ab7cb465264a85", "Url": "https://api.github.com/repos/WCEWearables/CookingCompanion", "Date": "2015-12-10T02:40:52Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((times.size()) == 4) { recipes.setPrepTime(times.get(1).text().replace(\"Prep\", \"\")); recipes.setCookTime(times.get(2).text().replace(\"Cook\", \"\")); recipes.setReadyTime(times.get(3).text().replace(\"Ready In\", \"\")); }else { android.util.Log.w(\"HtmlParse\", \"Unable to get the times\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4350/buggy-version/cookingcompanionphone.src.main.java.com.wce.wearables.cookingcompanion.HtmlParse.java", "BodyUseAPI": ["org.jsoup.select.Elements.get(int)", "times.get(3).text().replace(java.lang.String,java.lang.String)", "org.jsoup.select.Elements.get(int)", "times.get(1).text()", "times.get(2).text()", "com.wce.wearables.cookingcompanion.Recipe.setCookTime(times.get(2).text().replace(\"Cook\", \"\"))", "times.get(3).text()", "org.jsoup.select.Elements.get(int)", "times.get(2).text().replace(java.lang.String,java.lang.String)", "com.wce.wearables.cookingcompanion.Recipe.setPrepTime(times.get(1).text().replace(\"Prep\", \"\"))", "times.get(1).text().replace(java.lang.String,java.lang.String)", "com.wce.wearables.cookingcompanion.Recipe.setReadyTime(times.get(3).text().replace(\"Ready In\", \"\"))"], "Fixed commit": "89dd38ab5e9166622d967734f8ab7cb465264a85", "Url": "https://api.github.com/repos/WCEWearables/CookingCompanion", "Date": "2015-12-10T02:40:52Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.substring(offset).startsWith(\"\\\"\")) { int endQuotePos = line.indexOf(\"\\\"\", (offset + 1)); pos = line.indexOf(',', endQuotePos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3466/buggy-version/araqne-syslog-parser.src.main.java.org.araqne.logparser.syslog.paloaltonetworks.PaloAltoLogParser.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String,int)", "java.lang.String.indexOf(char,int)"], "Fixed commit": "5b9a318dc9ba00717098665525962042737cda2d", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-09-07T09:05:45Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (line.startsWith(\" \")) line = line.substring(2); else line = line.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3466/buggy-version/araqne-krsyslog-parser.src.main.java.org.araqne.logparser.krsyslog.piolink.WebFrontLogParser.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int)"], "Fixed commit": "5b9a318dc9ba00717098665525962042737cda2d", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-09-07T09:05:45Z"},
{"Line": "=>1055", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value >= 0.001) return fdrColors.get(2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5038/buggy-version/src.main.java.org.reactome.cytoscape.pathway.EventTreePane.java", "BodyUseAPI": [], "Fixed commit": "c3862a82e054a9c7a6ef96c5a17be3ab4b298050", "Url": "https://api.github.com/repos/reactome-fi/CytoscapePlugIn", "Date": "2016-04-08T22:35:41Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (errs != (resolveErrManager.getNumErrors())) { defaultAnnexSubclause.setParsedAnnexSubclause(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1509/buggy-version/org.osate.xtext.aadl2.src.org.osate.xtext.aadl2.parsing.AnnexParserAgent.java", "BodyUseAPI": [], "Fixed commit": "8c78faf87164d818301e88f04149545dd7c8f33e", "Url": "https://api.github.com/repos/osate/osate2-core", "Date": "2014-03-06T19:50:38Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (errs != (resolveErrManager.getNumErrors())) { defaultAnnexLibrary.setParsedAnnexLibrary(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1509/buggy-version/org.osate.xtext.aadl2.src.org.osate.xtext.aadl2.parsing.AnnexParserAgent.java", "BodyUseAPI": [], "Fixed commit": "8c78faf87164d818301e88f04149545dd7c8f33e", "Url": "https://api.github.com/repos/osate/osate2-core", "Date": "2014-03-06T19:50:38Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((board.grid[unit.x][unit.y]) != 'G') && ((board.grid[unit.x][unit.y]) != 'K')) board.grid[unit.x][unit.y] = 'D';", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1814/buggy-version/src.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "c3d557c82128632b3c37ac451ce0940f55b557dc", "Url": "https://api.github.com/repos/NicholasBrunoro/317a2", "Date": "2017-02-27T23:19:15Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.cookie(\"auth_token\")) == null) { request.session().removeAttribute(\"username\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4813/buggy-version/src.main.java.pl.uj.edu.ii.smartdom.web.controllers.SmartDomController.java", "BodyUseAPI": ["spark.Request.session()", "request.session().removeAttribute(java.lang.String)"], "Fixed commit": "816516d3b07141ab4a07fe3cf67865d007fa98dc", "Url": "https://api.github.com/repos/aleksandra-majchrzak/smart-dom-web", "Date": "2017-09-24T21:05:22Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (num < (java.lang.Float.MAX_VALUE)) java.lang.System.out.println(result);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/452/buggy-version/src.ErrorRedondeo.java", "BodyUseAPI": [], "Fixed commit": "a8dc0b3f8e149341642fe56456f38513f80a012d", "Url": "https://api.github.com/repos/jackrode31/Proyecto-MetodosNumericos-", "Date": "2017-04-14T03:42:55Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (num < (java.lang.Float.MAX_VALUE)) java.lang.System.out.println(result);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/452/buggy-version/src.ErrorRedondeo.java", "BodyUseAPI": [], "Fixed commit": "a8dc0b3f8e149341642fe56456f38513f80a012d", "Url": "https://api.github.com/repos/jackrode31/Proyecto-MetodosNumericos-", "Date": "2017-04-14T03:42:55Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((fill.container) != null) && ((fill.amount) > 0)) { fluidHandler.drain(ForgeDirection.UNKNOWN, fill.amount, true); mods.railcraft.common.fluids.FluidHelper.storeContainer(inv, inputSlot, outputSlot, fill.container); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2801/buggy-version/src.main.java.mods.railcraft.common.fluids.FluidHelper.java", "BodyUseAPI": ["mods.railcraft.common.fluids.IFluidHandler.drain(ForgeDirection.UNKNOWN,fill.amount,boolean)", "mods.railcraft.common.fluids.FluidHelper.storeContainer(net.minecraft.inventory.IInventory,int,int,fill.container)"], "Fixed commit": "fc3369eb9e6fc6d52b873180b8ff89d583feb62e", "Url": "https://api.github.com/repos/Railcraft/Railcraft", "Date": "2015-04-24T22:54:09Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(currentFile.getName().startsWith(\".\"))) && (!(currentFile.getName().startsWith(\"_\")))) { java.util.List<java.io.File> asciidocFiles = walkDirectory(currentFile); includedAsciidocFiles.addAll(asciidocFiles); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4139/buggy-version/src.main.java.org.asciidoctor.AbstractDirectoryWalker.java", "BodyUseAPI": ["org.asciidoctor.AbstractDirectoryWalker.walkDirectory(java.io.File)"], "Fixed commit": "4aaa2a890382a207154543a45fcce5836716b38f", "Url": "https://api.github.com/repos/asciidoctor/asciidoctorj", "Date": "2013-12-01T18:29:32Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.osdsquash.xml.jaxb.CustomerType.getSubscriptions()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (existingSubscriptions != null) { for (se.osdsquash.xml.jaxb.SubscriptionType existingSubscription : existingSubscriptions.getSubscription()) { if (((existingSubscription.getWeekday().equals(subscription.getWeekday())) && ((existingSubscription.getTrackNumber()) == (subscription.getTrackNumber()))) && (existingSubscription.getStartTime().equals(subscription.getStartTime()))) { return (((((((((\"Abonnemangstiden \" + (se.osdsquash.common.SquashUtil.weekdayTypeToString(existingSubscription.getWeekday()))) + \" \") + (se.osdsquash.common.SquashUtil.getTrackTimeFromCalendar(existingSubscription.getStartTime()))) + \" p\u00e5 bana \") + (existingSubscription.getTrackNumber())) + \" \u00e4r redan upptagen av \") + (customer.getCustomerInfo().getCustomerNumber())) + \" (\") + (customer.getCustomerInfo().getFirstname())) + \")\"; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7001/buggy-version/src.se.osdsquash.gui.ValidatorHelper.java", "BodyUseAPI": ["se.osdsquash.xml.jaxb.SubscriptionsType.getSubscription()"], "Fixed commit": "fb250d16adfa3a855c98044a2958cc85b7083d3c", "Url": "https://api.github.com/repos/troylee33/SquashCustomers", "Date": "2017-07-08T11:06:23Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((computeDeadPlayerInNight()) != null) { return g.getPlayerByRole(PlayerRole.SEER); }else { resetVotes(); return g.getPlayerByRole(PlayerRole.WOLF); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6/buggy-version/src.com.raibaz.lupus.game.GameEngine.java", "BodyUseAPI": [], "Fixed commit": "c33a1c9219fe76b4b6c9f017102b79f661dfff08", "Url": "https://api.github.com/repos/Raibaz/lupus-in-tabula", "Date": "2011-12-27T11:30:51Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.Character.isLetter(word.charAt(0))) { java.lang.String firstLetter = java.lang.String.valueOf(word.charAt(0)).toUpperCase(); results.add(new MapReduce.MappedItem(firstLetter, file)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4652/buggy-version/src.MapReduce.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "java.lang.String.charAt(int)", "java.lang.String.valueOf(char)"], "Fixed commit": "c9af3f7a0028a52072eafe3521b73d93a2a66306", "Url": "https://api.github.com/repos/darraghmoran11/MapReduceAssignment", "Date": "2017-03-10T13:23:33Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.mps.openapi.model.SReference.getTargetSModelReference()", "org.jetbrains.mps.openapi.model.SNode.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(sourceModel.getReference().equals(targetModel))) { ((jetbrains.mps.smodel.SModelInternal) (sourceModel)).addModelImport(targetModel, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3330/buggy-version/plugins.mpsjava.basePlatform.source_gen.jetbrains.mps.ide.java.newparser.JavaParser.java", "BodyUseAPI": ["org.jetbrains.mps.openapi.model.SModel.addModelImport(org.jetbrains.mps.openapi.model.SModelReference,boolean)"], "Fixed commit": "37ff3a24ca1e06098b3858b59b9da3ae99716e45", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2015-04-18T15:38:52Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((supportsOnConflict) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7408/buggy-version/core.src.main.java.org.bitcoinj.store.PostgresFullPrunedBlockStore.java", "BodyUseAPI": [], "Fixed commit": "7b8077819a668ead8dc35093a958be41c7425ebe", "Url": "https://api.github.com/repos/paulminer/bitcoinj", "Date": "2016-08-16T18:28:30Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ijsberg.iglu.util.io.FileSupport.convertToUnixStylePath(file.getPath()).substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (relativePathAndName.startsWith(\"/\")) { relativePathAndName = relativePathAndName.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/222/buggy-version/src.main.java.org.ijsberg.iglu.util.io.FSFileCollection.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "c253d29a89a606629053b0c2f18c16df92f1a9b1", "Url": "https://api.github.com/repos/jmeetsma/Iglu-Util", "Date": "2015-01-14T07:56:43Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (relativePathAndName.startsWith(\"/\")) { relativePathAndName = relativePathAndName.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/222/buggy-version/src.main.java.org.ijsberg.iglu.util.io.ZippedFileCollection.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "c253d29a89a606629053b0c2f18c16df92f1a9b1", "Url": "https://api.github.com/repos/jmeetsma/Iglu-Util", "Date": "2015-01-14T07:56:43Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jStart != 1) DBAWarpingWindow.costMatrix[i][(jStart - 1)] = java.lang.Double.POSITIVE_INFINITY;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4636/buggy-version/DBAWarpingWindow.java", "BodyUseAPI": [], "Fixed commit": "a7555b3b98e15598afef838e8e60008cf2cabb4f", "Url": "https://api.github.com/repos/fpetitjean/DBA", "Date": "2016-11-13T22:24:24Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (notApply) { propertyValue = null; }else { try { propertyValue = fieldSerializer.getPropertyValueDirect(object); } catch (java.lang.reflect.InvocationTargetException ex) { if (out.isEnabled(SerializerFeature.IgnoreErrorGetter)) { propertyValue = null; }else { throw ex; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8455/buggy-version/src.main.java.com.alibaba.fastjson.serializer.JavaBeanSerializer.java", "BodyUseAPI": [], "Fixed commit": "dcdde46226ada9ff30abd685b3d6e6e0293c474f", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-12-20T17:39:11Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.serializer.JavaBeanSerializer.isWriteAsArray(com.alibaba.fastjson.serializer.JSONSerializer,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (writeAsArray) { notApply = true; }else { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8455/buggy-version/src.main.java.com.alibaba.fastjson.serializer.JavaBeanSerializer.java", "BodyUseAPI": [], "Fixed commit": "dcdde46226ada9ff30abd685b3d6e6e0293c474f", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-12-20T17:39:11Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.avuna.httpd.http.networking.ChunkedInputStream.blockAvailable(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ba < 0) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3672/buggy-version/src.org.avuna.httpd.http.networking.ThreadRawStreamWorker.java", "BodyUseAPI": [], "Fixed commit": "b185e60acf81421d8f0766f898bbf14157419495", "Url": "https://api.github.com/repos/paullaz/Avuna-HTTPD", "Date": "2015-05-23T04:54:20Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (regexSeparator.equals(\"\\\\\")) regexSeparator = \"\\\\\\\\\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1854/buggy-version/drools-shapes.drools-shapes-generator-plugin.src.main.java.org.drools.shapes.OntoModelCompiler.java", "BodyUseAPI": [], "Fixed commit": "f3932bf983e880514295326ae2a37ddd8d0db6d7", "Url": "https://api.github.com/repos/lanceleverich/drools-chance", "Date": "2015-06-23T14:29:43Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.auditorAware) != null) { this.setAuditorAware(this.auditorAware); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4743/buggy-version/src.main.java.io.aiur.oss.db.jdbc.jdbc.audit.JdbcAuditingHandler.java", "BodyUseAPI": [], "Fixed commit": "d6e02f9c3f84a10c5844737ae398132c32405b12", "Url": "https://api.github.com/repos/aiurio/spring-data-jdbc", "Date": "2016-05-27T20:11:56Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(promise.isDone())) { promise.trySuccess(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5657/buggy-version/src.main.java.com.corundumstudio.socketio.handler.EncoderHandler.java", "BodyUseAPI": ["io.netty.channel.ChannelPromise.trySuccess()"], "Fixed commit": "a9e0aae4da42c38699a746978aef5e2ba84b3f7b", "Url": "https://api.github.com/repos/jamolkhon/netty-socketio", "Date": "2017-08-09T08:15:52Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFull())) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8992/buggy-version/FinalProject.src.util.MovingWindow.java", "BodyUseAPI": [], "Fixed commit": "c7aa6510f099ef6ba4061569bdce74562d92b025", "Url": "https://api.github.com/repos/DPMFinalProject/DPM-Final-Project", "Date": "2015-02-21T16:36:06Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["numbers[i].getText().length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (x > 2) { canvas.drawBitmap(coinImg, ((numbers[i].getX()) - (((int) (paint.measureText(numbers[i].getText()))) / 7)), ((numbers[i].getY()) - (((float) (height)) / 17)), paint); paint.setTextSize((((float) (height)) / 21)); }else if (x > 1) { canvas.drawBitmap(coinImg, ((numbers[i].getX()) - (((int) (paint.measureText(numbers[i].getText()))) / 6)), ((numbers[i].getY()) - (((float) (height)) / 16)), paint); }else { canvas.drawBitmap(coinImg, ((numbers[i].getX()) - ((int) ((paint.measureText(numbers[i].getText())) * 0.7))), ((numbers[i].getY()) - (((float) (height)) / 16)), paint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1622/buggy-version/GEDAppGUI.app.src.main.java.com.gedappgui.gedappgui.BucketGameView.java", "BodyUseAPI": [], "Fixed commit": "0485e39563c492b60ef5d334aa70f7e5cd0445da", "Url": "https://api.github.com/repos/MyannaHarris/GEDMobileApp", "Date": "2017-04-08T23:23:07Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (reqLoc != (-1)) { sendToClients((\"CLEARREQ:\" + reqLoc)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1714/buggy-version/src.digiTakeNumber.InstructorServer.java", "BodyUseAPI": ["digiTakeNumber.InstructorServer.ClientThread.sendToClients(java.lang.String)"], "Fixed commit": "dd50861d39e1ac4fed4f5f59d20b15cb4aa6e1e8", "Url": "https://api.github.com/repos/Scrumpus/TakeANumber", "Date": "2015-04-09T00:04:54Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ADWWorlds.containsKey(instance.getWorlds().get(i)))) { ADWWorlds.put(instance.getWorlds().get(i), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7946/buggy-version/src.usa.mik99925.ADW.ADW.java", "BodyUseAPI": ["instance.getWorlds().get(int)", "java.util.HashMap<org.bukkit.World, java.util.ArrayList<org.bukkit.entity.Entity>>.put(instance.getWorlds().get(i),<nulltype>)", "org.bukkit.Server.getWorlds()"], "Fixed commit": "e6d678f0ebd8c3b60aada4f17cb4f5f45912c3c5", "Url": "https://api.github.com/repos/mik99925/AntiDumbWolf", "Date": "2011-04-10T18:05:31Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((baseValue) != null) setValue(baseValue);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/675/buggy-version/entirej-fx.src.org.entirej.applicationframework.fx.renderers.items.EJFXComboItemRenderer.java", "BodyUseAPI": [], "Fixed commit": "9bfbf567581b72a9672048adc46e5835bbdbf81c", "Url": "https://api.github.com/repos/entirej/javafx", "Date": "2015-02-19T06:47:55Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, java.lang.Integer>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (id == null) { id = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/152/buggy-version/Ludum-Dare-30.src.game.level.LevelMapEditor.java", "BodyUseAPI": [], "Fixed commit": "1730563b133b4249fcb5c72090f260dc48e474b6", "Url": "https://api.github.com/repos/AppleJuiceStudios/DoubleYou", "Date": "2015-04-06T21:11:46Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.url.contains(\"Minecraft.Resources\"))) { App.settings.log(((((\"Error downloading \" + (this.file.getName())) + \" from \") + (this.url)) + \". Cancelling install!\"), LogMessageType.error, false); if ((this.instanceInstaller) != null) { instanceInstaller.cancel(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8458/buggy-version/src.com.atlauncher.data.Downloadable.java", "BodyUseAPI": [], "Fixed commit": "d51ed2f10d6632d3a63f45e71b5315cecb0b07a6", "Url": "https://api.github.com/repos/RyanTheAllmighty/ATLauncher", "Date": "2013-11-16T13:39:39Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Model.Skill.getSelfAffectingStatusEffect()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((SE.getArmEff()) != 0) { armor *= SE.getArmEff(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5519/buggy-version/src.Model.Player.java", "BodyUseAPI": ["Model.StatusEffectShell.getArmEff()"], "Fixed commit": "b61bd528c49fa25c701a980f3fa04ae00d6d4a67", "Url": "https://api.github.com/repos/Maestro1337/ssha", "Date": "2013-05-25T13:31:10Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Model.Items.Item.getSelfAffectingStatusEffect()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((SE.getArmEff()) != 0) { armor /= SE.getArmEff(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5519/buggy-version/src.Model.Player.java", "BodyUseAPI": ["Model.StatusEffectShell.getArmEff()"], "Fixed commit": "b61bd528c49fa25c701a980f3fa04ae00d6d4a67", "Url": "https://api.github.com/repos/Maestro1337/ssha", "Date": "2013-05-25T13:31:10Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Model.Skill.getSelfAffectingStatusEffect()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((SE.getArmEff()) != 0) { armor /= SE.getArmEff(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5519/buggy-version/src.Model.Player.java", "BodyUseAPI": ["Model.StatusEffectShell.getArmEff()"], "Fixed commit": "b61bd528c49fa25c701a980f3fa04ae00d6d4a67", "Url": "https://api.github.com/repos/Maestro1337/ssha", "Date": "2013-05-25T13:31:10Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Model.Items.Item.getSelfAffectingStatusEffect()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((SE.getArmEff()) != 0) { armor *= SE.getArmEff(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5519/buggy-version/src.Model.Player.java", "BodyUseAPI": ["Model.StatusEffectShell.getArmEff()"], "Fixed commit": "b61bd528c49fa25c701a980f3fa04ae00d6d4a67", "Url": "https://api.github.com/repos/Maestro1337/ssha", "Date": "2013-05-25T13:31:10Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["coupGame.getTurns().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((currentTurn.getTargetedTurn()) != null) && (currentTurn.getTargetedTurn().getAction().getName().equals(CoupAction.COUP.getName()))) { coupGame.getCoins().put(currentTurn.getTargetedTurn().getUser().getId(), ((coupGame.getCoins().get(currentTurn.getTargetedTurn().getUser().getId())) - 7)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4318/buggy-version/Coup-server.src.main.java.command.CoupActionCommand.java", "BodyUseAPI": ["coupGame.getCoins().get(currentTurn.getTargetedTurn().getUser().getId())", "currentTurn.getTargetedTurn().getUser().getId()", "model.entity.CoupTurnEntity.getTargetedTurn()", "currentTurn.getTargetedTurn().getUser()", "coupGame.getCoins().put(currentTurn.getTargetedTurn().getUser().getId(),((coupGame.getCoins().get(currentTurn.getTargetedTurn().getUser().getId())) - 7))", "currentTurn.getTargetedTurn().getUser().getId()", "model.entity.CoupTurnEntity.getTargetedTurn()", "currentTurn.getTargetedTurn().getUser()"], "Fixed commit": "8a9a49f618bc6e0dfd308dc5e158b8d43dbed2d2", "Url": "https://api.github.com/repos/Zggis/Coup", "Date": "2017-03-09T19:41:14Z"},
{"Line": "=>639", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((fields != null) && ((fields.size()) > 0)) { java.lang.String idFieldName = org.liveSense.api.sql.AnnotationHelper.findFieldByAnnotationClass(entity.getClass(), javax.persistence.Id.class).getName(); fields.add(idFieldName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4550/buggy-version/src.main.java.org.liveSense.api.sql.SQLExecute.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "63a1c391382a5d3559468ecf9cff2631093d2844", "Url": "https://api.github.com/repos/liveSense/org.liveSense.service.dataSourceProvider", "Date": "2011-05-25T07:57:11Z"},
{"Line": "=>5386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nativeVideo) != null) { return nativeVideo.getCurrentPosition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/202/buggy-version/Ports.Android.src.com.codename1.impl.android.AndroidImplementation.java", "BodyUseAPI": [], "Fixed commit": "a82c7b7bd13ac036326b750d7449d8342414e758", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-09-20T15:52:36Z"},
{"Line": "=>5458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nativeVideo) != null) { return new com.codename1.ui.geom.Dimension(nativeVideo.getWidth(), nativeVideo.getHeight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/202/buggy-version/Ports.Android.src.com.codename1.impl.android.AndroidImplementation.java", "BodyUseAPI": [], "Fixed commit": "a82c7b7bd13ac036326b750d7449d8342414e758", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-09-20T15:52:36Z"},
{"Line": "=>5512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nativeVideo) != null) { return nativeVideo.isPlaying(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/202/buggy-version/Ports.Android.src.com.codename1.impl.android.AndroidImplementation.java", "BodyUseAPI": [], "Fixed commit": "a82c7b7bd13ac036326b750d7449d8342414e758", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-09-20T15:52:36Z"},
{"Line": "=>5401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nativeVideo) != null) { return nativeVideo.getDuration(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/202/buggy-version/Ports.Android.src.com.codename1.impl.android.AndroidImplementation.java", "BodyUseAPI": [], "Fixed commit": "a82c7b7bd13ac036326b750d7449d8342414e758", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-09-20T15:52:36Z"},
{"Line": "=>5394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nativeVideo) != null) { nativeVideo.seekTo(time); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/202/buggy-version/Ports.Android.src.com.codename1.impl.android.AndroidImplementation.java", "BodyUseAPI": [], "Fixed commit": "a82c7b7bd13ac036326b750d7449d8342414e758", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-09-20T15:52:36Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((startDate) == null) || ((endDate) == null)) { android.widget.Toast toast = android.widget.Toast.makeText(getContext(), getString(R.string.no_date), Toast.LENGTH_SHORT); toast.show(); }else { if ((com.sam_chordas.android.stockhawk.rest.Utils.getEpochTime(endDate)) < (com.sam_chordas.android.stockhawk.rest.Utils.getEpochTime(startDate))) { android.widget.Toast toast = android.widget.Toast.makeText(getContext(), getString(R.string.wrong_date), Toast.LENGTH_SHORT); toast.show(); }else { com.sam_chordas.android.stockhawk.ui.HistoricalAsyncTask historicalDB = new com.sam_chordas.android.stockhawk.ui.HistoricalAsyncTask(getContext(), lineChart); historicalDB.getHistoricalStocksInRange(startDate, endDate, stockSymbol, stockName); historicalDB.execute(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/769/buggy-version/app.src.main.java.com.sam_chordas.android.stockhawk.ui.StocksDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "a3d287296c1139d2dd8f5251e447cba83df3e583", "Url": "https://api.github.com/repos/oroblesr/StockHawk-master", "Date": "2016-08-09T18:25:16Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parsedLine.containsKey((\"var_\" + (multilevel.stan.AnalyzeStanOuput.node2stan(node))))) { double varSample = java.lang.Double.parseDouble(parsedLine.get((\"var_\" + (multilevel.stan.AnalyzeStanOuput.node2stan(node))))); multilevel.smc.DivideConquerMCAlgorithm.logSamples(output, varSample, node.toString(), \"varSample\", iteration); marginalVariances.get(node).add(varSample); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4619/buggy-version/src.main.java.multilevel.stan.AnalyzeStanOuput.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "marginalVariances.get(node).add(double)", "multilevel.smc.DivideConquerMCAlgorithm.logSamples(briefj.OutputManager,double,node.toString(),java.lang.String,int)", "java.util.Map<java.lang.String, java.lang.String>.get((\"var_\" + (multilevel.stan.AnalyzeStanOuput.node2stan(node))))", "multilevel.stan.AnalyzeStanOuput.node2stan(multilevel.Node)", "multilevel.Node.toString()", "java.util.Map<multilevel.Node, java.util.List<java.lang.Double>>.get(multilevel.Node)"], "Fixed commit": "87f0601d432c60f11410b95cfc34ead8a6d4759f", "Url": "https://api.github.com/repos/alexandrebouchard/divide-and-conquer-smc", "Date": "2015-02-17T19:34:17Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((decoder) instanceof decoder.FoxBPSK.FoxBPSKDecoder) { maxValue = ((int) (decoder.Decoder.MAX_VOLUME)); minValue = ((int) ((-1) * (decoder.Decoder.MAX_VOLUME))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/115/buggy-version/src.gui.EyePanel.java", "BodyUseAPI": [], "Fixed commit": "e56e9a522d291023912c9a830f8edcd6f99701f1", "Url": "https://api.github.com/repos/ac2cz/FoxTelem", "Date": "2016-12-31T20:53:52Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((todaysMeds.size()) == 1) { edu.cs65.caregiver.caregiver.CareRecipientActivity.MedEntry newEntry = new edu.cs65.caregiver.caregiver.CareRecipientActivity.MedEntry(todaysMeds.get(0).mTime.toString(), todaysMeds.get(0).mMedications, todaysMeds.get(0).mTime); sortedMeds.add(newEntry); return sortedMeds; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8438/buggy-version/app.src.main.java.edu.cs65.caregiver.caregiver.CareRecipientActivity.java", "BodyUseAPI": ["java.util.ArrayList<edu.cs65.caregiver.caregiver.model.MedicationAlert>.get(int)", "java.util.ArrayList<edu.cs65.caregiver.caregiver.model.MedicationAlert>.get(int)", "todaysMeds.get(0).mTime.toString()", "java.util.ArrayList<edu.cs65.caregiver.caregiver.model.MedicationAlert>.get(int)"], "Fixed commit": "d1dd23bcfe2475b32c62ee39628c1e944bd442e1", "Url": "https://api.github.com/repos/user-don/Caregiver", "Date": "2016-05-27T04:13:40Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Board.getCard(int,int)", "Board.getCard(int,int)", "Board.getCard(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((c1.equals(c2)) || (c2.equals(c3))) || (c3.equals(c1))) { java.lang.System.out.println(\"Nope! You can't repeat cards!\"); }else { if (Set.isSet(c1, c2, c3)) { java.lang.System.out.println(\"Booyah!\"); board.removeSet(check[0], check[1], check[2], check[3], check[4], check[5]); if ((board.resetNumCards()) < 9) board.drawAll(); board.distribute(); }else { java.lang.System.out.println(\"Nope!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1372/buggy-version/Set.java", "BodyUseAPI": ["Set.isSet(Card,Card,Card)"], "Fixed commit": "66b2e62005cc65e40b4faec1e84c55e6586eab07", "Url": "https://api.github.com/repos/syoon123/Craze_Hashing", "Date": "2016-01-18T04:58:15Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.oauth.provider.token.OAuthProviderTokenImpl.getUserAuthentication()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (userAuthentication instanceof nl.surfnet.coin.api.shib.ShibbolethAuthenticationToken) { nl.surfnet.coin.api.shib.ShibbolethAuthenticationToken shibToken = ((nl.surfnet.coin.api.shib.ShibbolethAuthenticationToken) (userAuthentication)); shibToken.setClientMetaData(extendedBaseConsumerDetails.getClientMetaData()); }else { throw new java.lang.RuntimeException(((\"The userAuthentication is of the type '\" + (userAuthentication != null ? userAuthentication.getClass() : \"null\")) + \"'. Required is a (sub)class of PreAuthenticatedAuthenticationToken or ShibbolethAuthenticationToken\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8280/buggy-version/coin-api-war.src.main.java.nl.surfnet.coin.api.oauth.OpenConextOauth1TokenServices.java", "BodyUseAPI": ["org.springframework.security.core.Authentication.getClass()"], "Fixed commit": "2cdab8e0128ca6933103069b0a93c14ee4901674", "Url": "https://api.github.com/repos/OpenConext/OpenConext-api", "Date": "2012-05-14T08:54:34Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (team == (edu.utdallas.robotchess.game.Team.ORANGE)) computerControlsOrange = computerControls; else computerControlsGreen = computerControls;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8115/buggy-version/src.edu.utdallas.robotchess.manager.RobotChessManager.java", "BodyUseAPI": [], "Fixed commit": "7caa71d811e03ca04940d3ff9733bf27e083654a", "Url": "https://api.github.com/repos/utdrobotchess/chess-game", "Date": "2015-07-24T00:08:49Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<com.thoughtworks.xstream.converters.reflection.FieldKey>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fieldKey.getFieldName().equals(\"userBricks\")) { fieldKeyOrder[8] = fieldKey; }else if (fieldKey.getFieldName().equals(\"isBackpackObject\")) { fieldKeyOrder[9] = fieldKey; }else if (fieldKey.getFieldName().equals(\"nfcTagList\")) { fieldKeyOrder[10] = fieldKey; }else if (fieldKey.getFieldName().equals(\"penDown\")) { fieldKeyOrder[11] = fieldKey; }else if (fieldKey.getFieldName().equals(\"penSize\")) { fieldKeyOrder[12] = fieldKey; }else if (fieldKey.getFieldName().equals(\"penColor\")) { fieldKeyOrder[13] = fieldKey; }else if (fieldKey.getFieldName().equals(\"previousPoint\")) { fieldKeyOrder[14] = fieldKey; }else if (fieldKey.getFieldName().equals(\"actionFactory\")) { fieldKeyOrder[15] = fieldKey; }else if (fieldKey.getFieldName().equals(\"$change\")) { fieldKeyOrder[16] = fieldKey; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2204/buggy-version/catroid.src.org.catrobat.catroid.io.CatroidFieldKeySorter.java", "BodyUseAPI": ["fieldKey.getFieldName().equals(java.lang.String)", "fieldKey.getFieldName().equals(java.lang.String)", "com.thoughtworks.xstream.converters.reflection.FieldKey.getFieldName()", "fieldKey.getFieldName().equals(java.lang.String)", "fieldKey.getFieldName().equals(java.lang.String)", "com.thoughtworks.xstream.converters.reflection.FieldKey.getFieldName()", "fieldKey.getFieldName().equals(java.lang.String)", "fieldKey.getFieldName().equals(java.lang.String)", "com.thoughtworks.xstream.converters.reflection.FieldKey.getFieldName()", "fieldKey.getFieldName().equals(java.lang.String)", "com.thoughtworks.xstream.converters.reflection.FieldKey.getFieldName()", "com.thoughtworks.xstream.converters.reflection.FieldKey.getFieldName()", "com.thoughtworks.xstream.converters.reflection.FieldKey.getFieldName()", "com.thoughtworks.xstream.converters.reflection.FieldKey.getFieldName()", "fieldKey.getFieldName().equals(java.lang.String)", "com.thoughtworks.xstream.converters.reflection.FieldKey.getFieldName()"], "Fixed commit": "7eeabbccc0289bc559516cdbab26ea102465a887", "Url": "https://api.github.com/repos/loibi93/Catroid", "Date": "2016-07-28T18:21:11Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (idNum == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6013/buggy-version/src.gradebookproject.ClassSection.java", "BodyUseAPI": [], "Fixed commit": "1cc89bb3e2d9e2e5a67f3233b8cac6e7c9a998a3", "Url": "https://api.github.com/repos/hshapir/GradebookProject", "Date": "2016-06-06T23:25:19Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.phoenixkahlo.filetransfer.InputUtils.nextNonEmptyLine(java.util.Scanner)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((path.toCharArray()[0]) == '\"') && ((path.toCharArray()[((path.length()) - 1)]) == '\"')) path = path.substring(1, ((path.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/856/buggy-version/src.com.phoenixkahlo.filetransfer.InputUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "0fbc88bc81a9b4717f5ea07560ead4dd79900a03", "Url": "https://api.github.com/repos/gretchenfrage/DirectFileTransfer", "Date": "2016-08-25T22:56:49Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.inputmethod.keyboard.KeyboardView.getKeyboard()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.android.tecla.keyboard.IMEAdapter.sKeyboard) != keyboard) { com.android.tecla.keyboard.IMEAdapter.setKeyboardView(com.android.tecla.keyboard.IMEAdapter.sKeyboardView); com.android.tecla.keyboard.IMEAdapter.IMEStates.sState = com.android.tecla.keyboard.IMEAdapter.IMEStates.SCAN_ROW; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/9013/buggy-version/package.tecla.keyboard.IMEAdapter.java", "BodyUseAPI": [], "Fixed commit": "7b29bb9b103c0fbbf0175ed46fc061e244c15656", "Url": "https://api.github.com/repos/ericwan78/tecla-framework", "Date": "2013-05-01T19:55:57Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.android.tecla.keyboard.IMEAdapter.sKeyboard) != (com.android.tecla.keyboard.IMEAdapter.sKeyboardView.getKeyboard())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/9013/buggy-version/package.tecla.keyboard.IMEAdapter.java", "BodyUseAPI": [], "Fixed commit": "7b29bb9b103c0fbbf0175ed46fc061e244c15656", "Url": "https://api.github.com/repos/ericwan78/tecla-framework", "Date": "2013-05-01T19:55:57Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.kiteq.commons.stats.KiteStats.scheduledExecutorService) != null) { org.kiteq.commons.stats.KiteStats.scheduledExecutorService.shutdownNow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5656/buggy-version/kiteq-commons.src.main.java.org.kiteq.commons.stats.KiteStats.java", "BodyUseAPI": [], "Fixed commit": "fddea817012e0a4111ef0b34783e7324da1bd0c3", "Url": "https://api.github.com/repos/blackbeans/kiteq-client-java", "Date": "2015-03-19T10:34:00Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(layer.equals(\"\"))) { files.add(new com.bitsyko.liblayers.LayerFile(this, layer, true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1010/buggy-version/app.src.main.java.com.bitsyko.liblayers.Layer.java", "BodyUseAPI": ["java.util.List<com.bitsyko.liblayers.LayerFile>.add(com.bitsyko.liblayers.LayerFile)"], "Fixed commit": "5e6e4ddd489e30ce4152767213a25bd76c1ccdcf", "Url": "https://api.github.com/repos/BitSyko/LayersManager", "Date": "2015-08-16T11:58:27Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tempFile) != null) { java.nio.file.Files.deleteIfExists(tempFile.toPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/156/buggy-version/src.main.java.de.tblsoft.solr.pipeline.StandardReader.java", "BodyUseAPI": [], "Fixed commit": "4ea614252e0ff13320dcf525314ce16c587a7ea2", "Url": "https://api.github.com/repos/tblsoft/solr-cmd-utils", "Date": "2016-12-07T12:02:49Z"},
{"Line": "=>975", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (which == 1) { targetPointsHelper.navigateToPoint(new net.osmand.data.LatLon(lat, lon), true, ((targetPointsHelper.getIntermediatePoints().size()) + 1), name); }else if (which == 2) { targetPointsHelper.navigateToPoint(new net.osmand.data.LatLon(lat, lon), true, 0, name); }else { targetPointsHelper.navigateToPoint(new net.osmand.data.LatLon(lat, lon), true, targetPointsHelper.getIntermediatePoints().size(), name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3973/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivityActions.java", "BodyUseAPI": [], "Fixed commit": "22c65c06c7bbcec15f6b5c15171a893d19c5d2a8", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2014-03-26T16:41:05Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.namespace.NamespaceContext.getNamespaceURI(typeElement.getPrefix())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (literalNamespace == null) { typeUri = typeElement.getLocalName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4110/buggy-version/src.main.java.eu.delving.x3ml.engine.ModelOutput.java", "BodyUseAPI": [], "Fixed commit": "4e1c0d2e54c26d1e35401fdf49774e1f4471f531", "Url": "https://api.github.com/repos/isl/x3ml", "Date": "2016-01-21T09:03:25Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!isnum) && (!isjul)) { int n = timeUnit.length(); regex = (\".{\" + n) + \"}\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5029/buggy-version/src.lasp.tss.iosp.AsciiIOSP.java", "BodyUseAPI": [], "Fixed commit": "515b8260b4409a8cdf2f6ce73174380dc1852edb", "Url": "https://api.github.com/repos/tsds/TSDS1", "Date": "2011-04-14T17:44:30Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (navigationDrawerLayout.isDrawerOpen(Gravity.START)) { navigationDrawerLayout.closeDrawer(Gravity.START); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/359/buggy-version/bilingual-reader.src.cz.metaverse.android.bilingualreader.ReaderActivity.java", "BodyUseAPI": ["android.support.v4.widget.DrawerLayout.closeDrawer(Gravity.START)"], "Fixed commit": "455e425be1c41544e743dadf20c7a08b4d144d0f", "Url": "https://api.github.com/repos/tomparys/bilingual-reader", "Date": "2015-05-06T19:25:34Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(double,double)", "java.lang.Math.min(double,double)", "java.lang.Math.max(double,double)", "java.lang.Math.max(double,double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((xMax - xMin) < (((b.maxX) - (b.minX)) + ((maxX) - (minX)))) && ((yMax - yMin) < (((b.maxY) - (b.minY)) + ((maxY) - (minY))))) return new goldeneagle.Vec3(0, 0, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2690/buggy-version/eclipse.src.goldeneagle.BoundingBox.java", "BodyUseAPI": [], "Fixed commit": "1f5c931c3ecb7a1b443d69d113db748e125f2ab7", "Url": "https://api.github.com/repos/bagedevimo/pxljm", "Date": "2013-08-24T07:43:18Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((movie.release_year) > 0) { mTxtYear.setText((\"\" + (movie.release_year))); }else { mTxtYear.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3045/buggy-version/SampleApp.Android-DataLib-Sample-Netflix.src.fr.eyal.datalib.sample.netflix.fragment.MovieFragment.java", "BodyUseAPI": ["android.widget.TextView.setText((\"\" + (movie.release_year)))"], "Fixed commit": "87be031900d09ae1d3011fb94a165425406cbc95", "Url": "https://api.github.com/repos/eyal-lezmy/Android-Lab-Devoxx-2013", "Date": "2013-03-15T15:24:13Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (movie == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3045/buggy-version/SampleApp.Android-DataLib-Sample-Netflix.src.fr.eyal.datalib.sample.netflix.fragment.MovieFragment.java", "BodyUseAPI": [], "Fixed commit": "87be031900d09ae1d3011fb94a165425406cbc95", "Url": "https://api.github.com/repos/eyal-lezmy/Android-Lab-Devoxx-2013", "Date": "2013-03-15T15:24:13Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((image) != null) dest.writeParcelable(image.get(), flags);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3045/buggy-version/SampleApp.Android-DataLib-Sample-Netflix.src.fr.eyal.datalib.sample.netflix.data.model.movieimage.MovieImageBase.java", "BodyUseAPI": [], "Fixed commit": "87be031900d09ae1d3011fb94a165425406cbc95", "Url": "https://api.github.com/repos/eyal-lezmy/Android-Lab-Devoxx-2013", "Date": "2013-03-15T15:24:13Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 23) { fraction = animator.getAnimatedFraction(); }else { fraction = ((animator.getDuration()) > 0) ? ((float) (animator.getCurrentPlayTime())) / (animator.getDuration()) : 0.0F; fraction = java.lang.Math.min(fraction, 1.0F); fraction = animator.getInterpolator().getInterpolation(fraction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5531/buggy-version/library-circular.src.main.java.fr.castorflex.android.circularprogressbar.Utils.java", "BodyUseAPI": [], "Fixed commit": "f99752ef9c53f67f1b2cd4626a531ec1e3c70f57", "Url": "https://api.github.com/repos/castorflex/SmoothProgressBar", "Date": "2017-06-26T19:11:45Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clay) == 1) { spawnRessource(RessourceType.CLAY); clay = 0; }else (clay)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1598/buggy-version/src.me.mani.dreamzz.ressource.RessourceManager.java", "BodyUseAPI": [], "Fixed commit": "75fe524ce4c843f8363d12183171797622acb39a", "Url": "https://api.github.com/repos/GoldenGames/Dreamzz", "Date": "2014-12-20T17:21:09Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((cpw.mods.fml.common.FMLCommonHandler.instance().getSide()) == (cpw.mods.fml.relauncher.Side.CLIENT)) { registryField = computerCraft.getDeclaredField(\"clientComputerRegistry\"); }else { registryField = computerCraft.getDeclaredField(\"serverComputerRegistry\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/666/buggy-version/src.main.java.com.theoriginalbit.moarperipherals.common.utils.PairedUtils.java", "BodyUseAPI": [], "Fixed commit": "754c3f9881ebaff991add0e0ebd3126bdbd53872", "Url": "https://api.github.com/repos/theoriginalbit/MoarPeripherals", "Date": "2015-03-14T03:36:14Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fossilsarcheology.Revival.toPedia) instanceof fossilsarcheology.server.entity.mob.EntityQuagga) { fossilsarcheology.client.gui.GuiPedia.renderDinosaur((k + 100), (l + 30), 80, 0, 0, ((net.minecraft.entity.EntityLivingBase) (Revival.toPedia))); }else { fossilsarcheology.client.gui.GuiPedia.renderDinosaur((k + 100), (l + 80), 80, 0, 0, ((net.minecraft.entity.EntityLivingBase) (Revival.toPedia))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4210/buggy-version/src.main.java.fossilsarcheology.client.gui.GuiPedia.java", "BodyUseAPI": [], "Fixed commit": "9f92feac39539b9424f8a802ebed45ad49f02d52", "Url": "https://api.github.com/repos/FossilsArcheologyRevival/FossilsArcheologyRevival", "Date": "2016-06-18T17:25:32Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entity instanceof fossilsarcheology.server.entity.mob.EntityQuagga) { java.lang.String s1 = fossilsarcheology.client.gui.StatCollector.translateToLocal(entity.getCommandSenderName()); org.lwjgl.opengl.GL11.glScalef(1.5F, 1.5F, 1.5F); printStringXY(fossilsarcheology.client.gui.StatCollector.translateToLocal(entity.getCommandSenderName()), (((-(this.fontRendererObj.getStringWidth(s1))) / 2) + 65), 60, 66, 48, 36); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4210/buggy-version/src.main.java.fossilsarcheology.client.gui.GuiPedia.java", "BodyUseAPI": ["net.minecraft.entity.Entity.getCommandSenderName()", "fossilsarcheology.client.gui.StatCollector.translateToLocal(entity.getCommandSenderName())", "fossilsarcheology.client.gui.StatCollector.translateToLocal(entity.getCommandSenderName())", "fossilsarcheology.client.gui.GuiPedia.printStringXY(fossilsarcheology.client.gui.StatCollector.translateToLocal(entity.getCommandSenderName()),(((-(this.fontRendererObj.getStringWidth(s1))) / 2) + 65),int,int,int,int)", "net.minecraft.entity.Entity.getCommandSenderName()"], "Fixed commit": "9f92feac39539b9424f8a802ebed45ad49f02d52", "Url": "https://api.github.com/repos/FossilsArcheologyRevival/FossilsArcheologyRevival", "Date": "2016-06-18T17:25:32Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(assembly.includes(chr))) { edu.unc.genomics.converters.IntervalToWig.log.info((((\"Skipping chromosome \" + chr) + \" because it is not in assembly \") + (assembly))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1490/buggy-version/src.edu.unc.genomics.converters.IntervalToWig.java", "BodyUseAPI": ["org.apache.log4j.Logger.info((((\"Skipping chromosome \" + chr) + \" because it is not in assembly \") + (assembly)))"], "Fixed commit": "680226901aebcff87b8763bd7457b5b4412a991f", "Url": "https://api.github.com/repos/timpalpant/java-genomics-toolkit", "Date": "2012-03-29T15:10:58Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (paymentDetails.hasMemo()) return paymentDetails.getMemo(); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4200/buggy-version/core.src.main.java.com.google.bitcoin.protocols.payments.PaymentSession.java", "BodyUseAPI": ["Protos.PaymentDetails.getMemo()"], "Fixed commit": "677571cae4f4510114b8871295da8d011d1b1e7a", "Url": "https://api.github.com/repos/schildbach/bitcoinj", "Date": "2014-02-13T19:21:36Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((temp.length()) <= 21) { currentLine = temp + \" \"; }else if ((temp.length()) == 22) { currentLine = temp; }else { if ((currentLine.length()) > 0) { formattedName.add(currentLine); } if ((nameTokens[i].length()) < 23) { currentLine = nameTokens[i]; }else { while ((nameTokens[i].length()) > 22) { formattedName.add(((nameTokens[i].substring(0, 21)) + \"-\")); nameTokens[i] = nameTokens[i].substring(21, ((nameTokens[i].length()) - 1)); } } currentLine = (nameTokens[i]) + \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8702/buggy-version/PinkPanther.src.common.Task.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "ccb2b17141611cdc0738431b938b4003d9f5eece", "Url": "https://api.github.com/repos/cs2103aug2015-t10-1j/PinkPanther-To-do-List", "Date": "2015-10-18T09:43:30Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!redirect) { javax.servlet.RequestDispatcher dispatcher = getServletContext().getRequestDispatcher(url); dispatcher.forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3162/buggy-version/NetBeansProject.src.java.Controllers.CandidatesController.java", "BodyUseAPI": [], "Fixed commit": "ce744b6a16a360585b2c9da035818b09ca2b656e", "Url": "https://api.github.com/repos/elaelaa/DAW-Proyecto-JAVA", "Date": "2015-10-30T22:42:38Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((queue.peekCar().getHasReserved()) && ((simulatorView.getNumberOfOpenReservedSpots()) > 0)) { Car car = queue.removeCar(); Location freeLocation = simulatorView.getFirstFreeReservedLocation(); simulatorView.setCarAt(freeLocation, car); i++; }else if ((!(queue.peekCar().getHasReserved())) && ((simulatorView.getNumberOfOpenSpots()) > 0)) { Car car = queue.removeCar(); Location freeLocation = simulatorView.getFirstFreeLocation(); simulatorView.setCarAt(freeLocation, car); i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2237/buggy-version/Simulator.java", "BodyUseAPI": ["queue.peekCar().getHasReserved()", "CarQueue.removeCar()", "SimulatorView.setCarAt(Location,Car)", "CarQueue.peekCar()", "SimulatorView.getFirstFreeLocation()", "SimulatorView.getNumberOfOpenSpots()", "SimulatorView.getFirstFreeReservedLocation()", "SimulatorView.setCarAt(Location,Car)", "CarQueue.removeCar()"], "Fixed commit": "8aefc1009aec7d1de432125f21679417f302e220", "Url": "https://api.github.com/repos/Here2peer/parkeergaragesim", "Date": "2017-02-07T14:17:36Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["info.getQueryParameters().getFirst(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (categoryStr != null) { categoryStr = categoryStr.toUpperCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/9070/buggy-version/restcomm.restcomm.http.src.main.java.org.restcomm.connect.http.UsageEndpoint.java", "BodyUseAPI": ["java.lang.String.toUpperCase()"], "Fixed commit": "b421efcc1f5a6928e6f23b5cbf6151822b235afe", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2017-10-14T16:45:16Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name == null) { com.tapleader.TLog.d(com.tapleader.Tapleader.TAG, \"name field of an event can't be null!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5734/buggy-version/Tapleader-SDK.src.main.java.com.tapleader.Tapleader.java", "BodyUseAPI": [], "Fixed commit": "64114579d7358c10266fa640223d8af32b7146d8", "Url": "https://api.github.com/repos/tapleader/tapleader-sdk-android", "Date": "2017-12-14T11:02:58Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mediaPlayer.isPlaying())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3201/buggy-version/BandlabInterview.app.src.main.java.com.example.interview.videopage.VideoPagePresenter.java", "BodyUseAPI": [], "Fixed commit": "af77cecc92e26330a977f63ca393f671f70f6292", "Url": "https://api.github.com/repos/Gelassen/android-samples", "Date": "2016-10-06T10:24:51Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.wso2.iot.agent.proxy.IdentityProxy.getInstance().getContext()) != null) { org.wso2.iot.agent.services.location.impl.OpenStreetMapService.getInstance().fetchReverseGeoCodes(org.wso2.iot.agent.services.LocationUpdateReceiver.location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8314/buggy-version/client.client.src.main.java.org.wso2.iot.agent.services.LocationUpdateReceiver.java", "BodyUseAPI": [], "Fixed commit": "2709a2a0509d0ce3087477f3db6096bf19b8c544", "Url": "https://api.github.com/repos/madhawap/cdmf-agent-android", "Date": "2017-04-23T06:45:55Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.obeonetwork.jar2uml.core.api.Utils.isInterface(clazz)) { visitInterface(clazz); }else if (org.obeonetwork.jar2uml.core.api.Utils.isClass(clazz)) { visitClass(clazz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6598/buggy-version/plugins.org.obeonetwork.jar2uml.core.src.org.obeonetwork.jar2uml.core.internal.visitor.DefaultJavaVisitor.java", "BodyUseAPI": ["org.obeonetwork.jar2uml.core.api.Utils.isClass(java.lang.Class<?>)", "org.obeonetwork.jar2uml.core.internal.visitor.DefaultJavaVisitor.visitClass(java.lang.Class<?>)", "org.obeonetwork.jar2uml.core.internal.visitor.DefaultJavaVisitor.visitInterface(java.lang.Class<?>)"], "Fixed commit": "9a39702a932a21876dbcb1972fbf346385ddd98e", "Url": "https://api.github.com/repos/hmarchadour/jar2uml", "Date": "2013-12-21T19:16:57Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((end - start) == 2) { if (((intervals[start]) <= c) && (c < (intervals[(end - 1)]))) { return start; }else if (((intervals[(end - 1)]) <= c) && (c < (intervals[end]))) { return end - 1; }else { return -1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4955/buggy-version/src.org.jgll.regex.DFA.java", "BodyUseAPI": [], "Fixed commit": "5b711bbeaa9f1cc987880197476d00994abe5543", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2014-01-01T20:50:08Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((intervals[n]) <= c) && (c < (intervals[(n + 1)]))) { return n; }else if (((intervals[(n - 1)]) <= c) && (c < (intervals[n]))) { return n - 1; }else if (c < (intervals[(n - 1)])) { return getTransitionId(c, start, (n - 1)); }else if (c >= (intervals[(n + 1)])) { return getTransitionId(c, (n + 1), end); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4955/buggy-version/src.org.jgll.regex.DFA.java", "BodyUseAPI": ["org.jgll.regex.DFA.getTransitionId(int,int,int)", "org.jgll.regex.DFA.getTransitionId(int,int,int)"], "Fixed commit": "5b711bbeaa9f1cc987880197476d00994abe5543", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2014-01-01T20:50:08Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.nicholas.adapters.PlaylistAdapter.cvMap.containsKey(lastId)) { com.nicholas.adapters.PlaylistAdapter.cvMap.get(lastId).setBackgroundColor(Color.WHITE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4406/buggy-version/app.src.main.java.com.nicholas.adapters.PlaylistAdapter.java", "BodyUseAPI": ["java.util.Map<java.lang.String, android.view.View>.get(java.lang.String)", "com.nicholas.adapters.PlaylistAdapter.cvMap.get(lastId).setBackgroundColor(Color.WHITE)"], "Fixed commit": "265bbf220001d810c2bab68c95aafee6bf85e8ed", "Url": "https://api.github.com/repos/nmeyer1089/SpotifyApp", "Date": "2017-11-20T23:09:39Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > 25) { if (!(isReadPhoneStatePermissionGranted())) { requestReadPhoneStatePermission(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4879/buggy-version/app.src.main.java.kg.kloop.android.redbutton.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "3d2a8b50200b60bc37b815b5918e31bf09e20729", "Url": "https://api.github.com/repos/AlexWalker28/REDbutton", "Date": "2017-10-22T10:01:48Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((Build.VERSION.SDK_INT) > 25) && ((android.support.v4.app.ActivityCompat.checkSelfPermission(getApplicationContext(), Manifest.permission.READ_PHONE_STATE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { addSlide(new com.heinrichreimersoftware.materialintro.slide.SimpleSlide.Builder().title(R.string.permissionsText).description(R.string.permissionDescriptionReadPhoneState).background(R.color.slide1).backgroundDark(R.color.slide2).permission(Manifest.permission.READ_PHONE_STATE).build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4879/buggy-version/app.src.main.java.kg.kloop.android.redbutton.IntroActivity.java", "BodyUseAPI": [], "Fixed commit": "3d2a8b50200b60bc37b815b5918e31bf09e20729", "Url": "https://api.github.com/repos/AlexWalker28/REDbutton", "Date": "2017-10-22T10:01:48Z"},
{"Line": "=>812", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.sldeditor.SLDEditor.underTestFlag)) { result = javax.swing.JOptionPane.showOptionDialog(com.sldeditor.SLDEditor.frame, com.sldeditor.common.localisation.Localisation.getString(com.sldeditor.SLDEditor.class, \"SLDEditor.reloadFileQuery\"), com.sldeditor.common.localisation.Localisation.getString(com.sldeditor.SLDEditor.class, \"SLDEditor.reloadFileQueryTitle\"), javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.WARNING_MESSAGE, null, options, options[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5167/buggy-version/modules.application.src.main.java.com.sldeditor.SLDEditor.java", "BodyUseAPI": [], "Fixed commit": "115a719da35560f39efdfd760e516cab91c12087", "Url": "https://api.github.com/repos/robward-scisys/sldeditor", "Date": "2016-11-22T16:50:11Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recycle) { rgbBitmap.recycle(); alphaBitmap.recycle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5162/buggy-version/src.fr.ravenfeld.livewallpaper.library.objects.Utils.java", "BodyUseAPI": [], "Fixed commit": "4c2180bd5f82e1f154f3be575ddf65859edaf7bb", "Url": "https://api.github.com/repos/ravenfeld/RajawaliLiveWallpaperExtension", "Date": "2013-11-15T09:03:54Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item == null) { throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4913/buggy-version/src.week2.Deque.java", "BodyUseAPI": [], "Fixed commit": "51cac0f5109496971516d9dd9cff9776ee7607f1", "Url": "https://api.github.com/repos/johnttan/algorithms_in_java", "Date": "2015-02-05T05:35:13Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item == null) { throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4913/buggy-version/src.week2.Deque.java", "BodyUseAPI": [], "Fixed commit": "51cac0f5109496971516d9dd9cff9776ee7607f1", "Url": "https://api.github.com/repos/johnttan/algorithms_in_java", "Date": "2015-02-05T05:35:13Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.configuration.ConfigurationSection.getConfigurationSection(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parameters == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6661/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.wand.WandUpgradePath.java", "BodyUseAPI": [], "Fixed commit": "9b8608aa35de78bd4e840bb60b2866c1538ac547", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2017-01-31T20:43:25Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(jsonIsCurrent)) { this.json = createJson(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5147/buggy-version/kaizen-openapi-parser.src.main.java.com.reprezen.kaizen.oasparser.jsonoverlay.JsonOverlay.java", "BodyUseAPI": [], "Fixed commit": "aaf29b758659060f74c950c780d33c272e8e2476", "Url": "https://api.github.com/repos/RepreZen/KaiZen-OpenApi-Parser", "Date": "2017-10-02T18:27:39Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (overlays.isEmpty()) { return com.fasterxml.jackson.databind.node.MissingNode.getInstance(); }else { return isList ? createJsonList(followRefs) : createJsonMap(followRefs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5147/buggy-version/kaizen-openapi-parser.src.main.java.com.reprezen.kaizen.oasparser.jsonoverlay.CollectionStore.java", "BodyUseAPI": [], "Fixed commit": "aaf29b758659060f74c950c780d33c272e8e2476", "Url": "https://api.github.com/repos/RepreZen/KaiZen-OpenApi-Parser", "Date": "2017-10-02T18:27:39Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((delta.getFlags()) != (org.eclipse.core.resources.IResourceDelta.MARKERS)) { notify(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1765/buggy-version/src.org.rascalmpl.eclipse.console.RascalModuleUpdateListener.java", "BodyUseAPI": [], "Fixed commit": "4198f1f19c4474fa674157ef863b0f934bb64c48", "Url": "https://api.github.com/repos/cwi-swat/rascal-eclipse", "Date": "2011-02-17T15:12:04Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.intermine.objectstore.query.ResultsRow<?>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.intermine.bio.postprocess.PostProcessUtil.isInstance(model, feature, \"Transcript\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8990/buggy-version/bio.postprocess.main.src.org.intermine.bio.postprocess.TransferSequences.java", "BodyUseAPI": [], "Fixed commit": "00f914e2f977a8765d2a50275dbd554b3aa73c2b", "Url": "https://api.github.com/repos/Arabidopsis-Information-Portal/intermine", "Date": "2016-03-04T11:45:57Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (result == null) { try { classBytes = getClassBytes(className); } catch (java.io.IOException e) { throw new java.lang.ClassNotFoundException(className, e); } if (classBytes == null) return null; result = defineClass(className, classBytes, 0, classBytes.length); if (result == null) return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7791/buggy-version/icy.plugin.classloader.JarClassLoader.java", "BodyUseAPI": [], "Fixed commit": "2b36e47b4861067d29003624a684a1151acf3d12", "Url": "https://api.github.com/repos/Icy-imaging/Icy-Kernel", "Date": "2016-07-20T12:50:49Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((material) == (org.bukkit.Material.AIR)) dropResult.setOverrideDefault(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/287/buggy-version/src.com.gmail.zariust.otherdrops.drop.ItemDrop.java", "BodyUseAPI": [], "Fixed commit": "3d2f6cc1d9eeaf524aeed63daafcb7f8969a4eb9", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2013-03-17T13:13:27Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.cnp) != null) && (!(user.cnp.isEmpty()))) existingUser.cnp = user.cnp;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/194/buggy-version/src.main.java.org.govithub.govac.consumerapi.controller.UsersController.java", "BodyUseAPI": [], "Fixed commit": "832c13d25b5af86c3da0efebe4db93d9a677d3c7", "Url": "https://api.github.com/repos/cozu/asistentul_cetateanului_api_intern", "Date": "2016-11-23T15:23:37Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.username) != null) && (!(user.username.isEmpty()))) existingUser.username = user.username;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/194/buggy-version/src.main.java.org.govithub.govac.consumerapi.controller.UsersController.java", "BodyUseAPI": [], "Fixed commit": "832c13d25b5af86c3da0efebe4db93d9a677d3c7", "Url": "https://api.github.com/repos/cozu/asistentul_cetateanului_api_intern", "Date": "2016-11-23T15:23:37Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.phone) != null) && (!(user.phone.isEmpty()))) existingUser.phone = user.phone;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/194/buggy-version/src.main.java.org.govithub.govac.consumerapi.controller.UsersController.java", "BodyUseAPI": [], "Fixed commit": "832c13d25b5af86c3da0efebe4db93d9a677d3c7", "Url": "https://api.github.com/repos/cozu/asistentul_cetateanului_api_intern", "Date": "2016-11-23T15:23:37Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.email) != null) && (!(user.email.isEmpty()))) existingUser.email = user.email;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/194/buggy-version/src.main.java.org.govithub.govac.consumerapi.controller.UsersController.java", "BodyUseAPI": [], "Fixed commit": "832c13d25b5af86c3da0efebe4db93d9a677d3c7", "Url": "https://api.github.com/repos/cozu/asistentul_cetateanului_api_intern", "Date": "2016-11-23T15:23:37Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.lastName) != null) && (!(user.lastName.isEmpty()))) existingUser.lastName = user.lastName;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/194/buggy-version/src.main.java.org.govithub.govac.consumerapi.controller.UsersController.java", "BodyUseAPI": [], "Fixed commit": "832c13d25b5af86c3da0efebe4db93d9a677d3c7", "Url": "https://api.github.com/repos/cozu/asistentul_cetateanului_api_intern", "Date": "2016-11-23T15:23:37Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.firstName) != null) && (!(user.firstName.isEmpty()))) existingUser.firstName = user.firstName;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/194/buggy-version/src.main.java.org.govithub.govac.consumerapi.controller.UsersController.java", "BodyUseAPI": [], "Fixed commit": "832c13d25b5af86c3da0efebe4db93d9a677d3c7", "Url": "https://api.github.com/repos/cozu/asistentul_cetateanului_api_intern", "Date": "2016-11-23T15:23:37Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bitcoinj.core.Sha256Hash.getBytes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.util.Arrays.equals(right, left)) throw new org.bitcoinj.core.VerificationException(\"Invalid merkle tree with duplicated left/right branches\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1423/buggy-version/core.src.main.java.org.bitcoinj.core.PartialMerkleTree.java", "BodyUseAPI": [], "Fixed commit": "6459f1ac746c9c9488a13e66e1c3ecf6ff4bab76", "Url": "https://api.github.com/repos/Groestlcoin/groestlcoinj", "Date": "2014-11-24T12:59:42Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((config.getReadTimeout()) != null) { client.setReadTimeout(config.getReadTimeout()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1741/buggy-version/src.main.java.com.github.dockerjava.client.DockerClient.java", "BodyUseAPI": [], "Fixed commit": "1436c7ed68b4556292497f7a54070b2b0377ae70", "Url": "https://api.github.com/repos/YouTechnology/docker-java", "Date": "2014-07-31T17:14:26Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(parent.isDisposed())) { createComposite(parent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/892/buggy-version/core.utility.utility-plugins.org.csstudio.logging.ui.src.org.csstudio.logging.ui.LoggingConfiguration.java", "BodyUseAPI": ["1.createComposite(org.eclipse.swt.widgets.Composite)"], "Fixed commit": "19fcfc740c9078eff5adaa3905e0e41fb1f854bf", "Url": "https://api.github.com/repos/css-iter/cs-studio", "Date": "2015-02-23T09:55:38Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8449/buggy-version/app.src.main.java.cmput301w16t15.shareo.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "fbdf266b70e5f1497119bcaa258df1d9b003c94c", "Url": "https://api.github.com/repos/CMPUT301W16T15/Shareo", "Date": "2016-03-21T21:48:05Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.obtainStyledAttributes(android.util.AttributeSet,R.styleable.TextView)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (styledAttrs.hasValue(R.styleable.TextView_preformat_text)) { java.lang.String preformatText = styledAttrs.getString(R.styleable.TextView_preformat_text); setText(preformatText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/812/buggy-version/src.com.egeniq.widget.Button.java", "BodyUseAPI": ["android.content.res.TypedArray.getString(R.styleable.TextView_preformat_text)"], "Fixed commit": "6ca8d2b17c9921b0abd265bb0bdab0d2534dc172", "Url": "https://api.github.com/repos/egeniq/egeniq-android", "Date": "2015-11-02T14:45:04Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.obtainStyledAttributes(android.util.AttributeSet,R.styleable.TextView)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (styledAttrs.hasValue(R.styleable.TextView_preformat_text)) { java.lang.String preformatText = styledAttrs.getString(R.styleable.TextView_preformat_text); setText(preformatText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/812/buggy-version/src.com.egeniq.widget.TextView.java", "BodyUseAPI": ["android.content.res.TypedArray.getString(R.styleable.TextView_preformat_text)"], "Fixed commit": "6ca8d2b17c9921b0abd265bb0bdab0d2534dc172", "Url": "https://api.github.com/repos/egeniq/egeniq-android", "Date": "2015-11-02T14:45:04Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.getGeneratedKeys()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (generatedKeys.next()) client.setId(((int) (generatedKeys.getLong(1))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6780/buggy-version/src.main.java.pl.prus.kamil.bank.repository.Database.java", "BodyUseAPI": ["java.sql.ResultSet.getLong(int)", "pl.prus.kamil.bank.model.BankClient.setId(long)"], "Fixed commit": "5145ca6ac888f94efd3a06fd010e03a973340be4", "Url": "https://api.github.com/repos/KamilPrus/banking-gui", "Date": "2017-05-17T21:46:44Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 23) try { android.net.ConnectivityManager.setProcessDefaultNetwork(i); } catch (java.lang.IllegalStateException ignored) { } else cm.bindProcessToNetwork(i);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8924/buggy-version/src.pw.thedrhax.util.AndroidHacks.java", "BodyUseAPI": [], "Fixed commit": "c4b09f1d03fc86de839a27e23de5659ce93b0896", "Url": "https://api.github.com/repos/mosmetro-android/mosmetro-android", "Date": "2016-11-13T18:12:43Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((model.getSelectedTerritory().getNbrOfUnits()) <= ((model.getNbrOfReinforcements()) * 2)) { model.getSelectedTerritory().setNbrOfUnits(1); }else { model.getSelectedTerritory().decrementUnits(((model.getNbrOfReinforcements()) * 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5929/buggy-version/Warborn.src.warborn.model.spells.PurpleRitual.java", "BodyUseAPI": ["warborn.model.Warborn.getSelectedTerritory()", "model.getSelectedTerritory().setNbrOfUnits(int)", "model.getSelectedTerritory().decrementUnits(((model.getNbrOfReinforcements()) * 2))", "warborn.model.Warborn.getNbrOfReinforcements()", "warborn.model.Warborn.getSelectedTerritory()"], "Fixed commit": "6c279d260a4ff139f7513991ad132f1ce99c941b", "Url": "https://api.github.com/repos/Mackro/CMP", "Date": "2012-05-17T10:29:20Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mLightSwitch.isChecked()) { checkOn = \"ON\"; }else { checkOn = \"OFF\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4344/buggy-version/src.flash.light.pro.FlashlightActivity.java", "BodyUseAPI": [], "Fixed commit": "76b08ceabb4371491642a6e844e003a8a02378b0", "Url": "https://api.github.com/repos/derekcsm/Android-Flashlight--Customize-able-", "Date": "2014-03-19T07:21:01Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zohaltech.app.essentialwords.data.Vocabularies.select(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((currentVocab.getLesson()) != lesson) { for (com.zohaltech.app.essentialwords.entities.Vocabulary vocabulary : vocabularies) { if (vocabulary.getLearned()) vocabIndex++; } }else vocabIndex = (com.zohaltech.app.essentialwords.classes.LearningStatus.indexOf(currentVocab, vocabularies)) + 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6924/buggy-version/app.src.main.java.com.zohaltech.app.essentialwords.classes.LearningStatus.java", "BodyUseAPI": ["com.zohaltech.app.essentialwords.classes.LearningStatus.indexOf(com.zohaltech.app.essentialwords.entities.Vocabulary,java.util.ArrayList<com.zohaltech.app.essentialwords.entities.Vocabulary>)"], "Fixed commit": "943e3ac219a2af4de56e940572affb15ad9115bd", "Url": "https://api.github.com/repos/zohaltech/Essential504Vocabulary", "Date": "2015-10-28T07:18:19Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((styleHandler.hasStyleTag(\"font-size\")) && (styleHandler.hasStyleTag(\"line-height\"))) && ((styleHandler.getFloatValue(\"font-size\")) > (styleHandler.getFloatValue(\"line-height\")))) { styleHandler.setStyleTag(\"font-size\", (((styleHandler.getFloatValue(\"line-height\")) * 0.84) + \"pt\")); styleHandler.updateNodeStyle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2248/buggy-version/java.src.pdf.PDFParser.java", "BodyUseAPI": ["pdf.dom.StyleHandler.updateNodeStyle()", "pdf.dom.StyleHandler.getFloatValue(java.lang.String)", "pdf.dom.StyleHandler.setStyleTag(java.lang.String,(((styleHandler.getFloatValue(\"line-height\")) * 0.84) + \"pt\"))"], "Fixed commit": "723d9bca68d226df6daaf9b5904be94aad06ec70", "Url": "https://api.github.com/repos/zootos/TOBOT", "Date": "2017-03-27T07:13:38Z"},
{"Line": "=>647", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.sikuli.basics.Debug.doRedirect(org.sikuli.basics.Debug.CallbackType.USER, prefix, sout, null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5254/buggy-version/API.src.main.java.org.sikuli.basics.Debug.java", "BodyUseAPI": [], "Fixed commit": "e446a1a4d0ce5761c587bfe5d0490196aa90d075", "Url": "https://api.github.com/repos/rssdev10/SikuliX-2014", "Date": "2014-08-05T14:50:29Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.sikuli.basics.Debug.doRedirect(org.sikuli.basics.Debug.CallbackType.DEBUG, prefix, sout, null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5254/buggy-version/API.src.main.java.org.sikuli.basics.Debug.java", "BodyUseAPI": [], "Fixed commit": "e446a1a4d0ce5761c587bfe5d0490196aa90d075", "Url": "https://api.github.com/repos/rssdev10/SikuliX-2014", "Date": "2014-08-05T14:50:29Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.uniroma2.sag.kelp.data.representation.tree.utils.SelectTreeRepresentationInterface.GetTreeRepresentation(it.uniroma2.sag.kelp.data.example.Example)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (tree != null) { manipulateTree(tree, datasetNodeInfo.get(exampleIndex)); exampleIndex += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7110/buggy-version/src.main.java.it.uniroma2.sag.kelp.data.manipulator.TreeAddAdditionalInfoFromArray.java", "BodyUseAPI": ["it.uniroma2.sag.kelp.data.manipulator.TreeAddAdditionalInfoFromArray.manipulateTree(it.uniroma2.sag.kelp.data.representation.tree.TreeRepresentation,java.util.List<java.lang.Double>)"], "Fixed commit": "f45a7a83ff938ed686e01c9e303c9093dbc9e26c", "Url": "https://api.github.com/repos/SAG-KeLP/kelp-additional-kernels", "Date": "2016-07-07T17:55:52Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hash) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8867/buggy-version/core.src.main.java.org.cache2k.impl.HashEntryIterator.java", "BodyUseAPI": [], "Fixed commit": "cc2be3bc3364bb5a95d453881aa47c101a6a4247", "Url": "https://api.github.com/repos/headissue/cache2k", "Date": "2014-06-02T13:05:18Z"},
{"Line": "=>1888", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ednovo.gooru.client.mvp.shelf.collection.tab.resource.add.AddWebResourceView.eventTargetsStandardPopup(com.google.gwt.user.client.Event)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!target) { if (standardsDropListValues.getStyleName().contains(\"standardsDropMenu\")) { standardsDropListValues.removeStyleName(\"standardsDropMenu\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6949/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.shelf.collection.tab.resource.add.AddWebResourceView.java", "BodyUseAPI": [], "Fixed commit": "b32f25cf8e572e026b84b85f7c80d4bb3d6d9fd0", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-08-28T09:28:22Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((n) == 1) { return sites[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2506/buggy-version/src.Percolation.java", "BodyUseAPI": [], "Fixed commit": "2a9a573872be65323168906cb88dbf0cc77a0792", "Url": "https://api.github.com/repos/gshpychka/Algorithms", "Date": "2017-11-19T21:35:01Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.sleuthkit.autopsy.ingest.IngestManager.getInstance().isRunningInteractively()) { org.sleuthkit.autopsy.corecomponentinterfaces.CoreComponentControl.openCoreWindows(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2327/buggy-version/Core.src.org.sleuthkit.autopsy.directorytree.DirectoryTreeTopComponent.java", "BodyUseAPI": [], "Fixed commit": "c0551db9263ddb8f3d39118d28c056167ea0240c", "Url": "https://api.github.com/repos/sleuthkit/autopsy", "Date": "2015-06-05T19:09:05Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CatalogManager.getTable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (table == null) throw new TableNotFoundException(tableName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6397/buggy-version/src.RecordManager.java", "BodyUseAPI": [], "Fixed commit": "8aa61786d686507d96ded6c811425d716dd405b8", "Url": "https://api.github.com/repos/gyuu/MiniSQL", "Date": "2015-11-07T05:31:48Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requiredSteps == 0) { requiredSteps = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/896/buggy-version/diana-api.src.main.java.org.openflexo.fge.graph.FGEPolarFunctionGraph.java", "BodyUseAPI": [], "Fixed commit": "3dcd560293f8e89ff432852adf48a5c1e573ee2c", "Url": "https://api.github.com/repos/openflexo-team/diana", "Date": "2017-06-27T08:33:43Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentWaypoint.getValue()) != null) { if (currentWaypoint.getValue().isNullPosition()) { if ((pathWaypoints.getValue().size()) > 0) { currentWaypoint.setValue(pathWaypoints.getValue().get(0)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7743/buggy-version/src.main.java.edu.ucsc.cross.hse.model.vehicle.navigation.WaypointConroller.java", "BodyUseAPI": ["currentWaypoint.getValue().isNullPosition()", "edu.ucsc.cross.hse.core.framework.data.Data<edu.ucsc.cross.hse.model.position.general.Position>.setValue(pathWaypoints.getValue().get(0))", "edu.ucsc.cross.hse.core.framework.data.Data<edu.ucsc.cross.hse.model.position.general.Position>.getValue()"], "Fixed commit": "d3f0192792254b48661f6b9d05a3a12dbbe617f6", "Url": "https://api.github.com/repos/be3short/HSEVehicleLibrary", "Date": "2017-08-14T12:46:41Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentWaypoint.getValue()) != null) { reached = (withinVerticalProximity(vehicle_location_state)) && (withinHorizontalProximity(vehicle_location_state)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7743/buggy-version/src.main.java.edu.ucsc.cross.hse.model.vehicle.navigation.WaypointConroller.java", "BodyUseAPI": [], "Fixed commit": "d3f0192792254b48661f6b9d05a3a12dbbe617f6", "Url": "https://api.github.com/repos/be3short/HSEVehicleLibrary", "Date": "2017-08-14T12:46:41Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { if ((_vpnService.getStatus()) != (VPNService.VPNStatus.DISCONNECTED)) { openFragment(new net.tuxed.vpnconfigimporter.fragment.ConnectionStatusFragment(), false); }else { openFragment(new net.tuxed.vpnconfigimporter.fragment.ProviderSelectionFragment(), false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1868/buggy-version/app.src.main.java.net.tuxed.vpnconfigimporter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ccdb3507cd9c618dbfbb75b9558f20aed8309c22", "Url": "https://api.github.com/repos/dzolnai/android", "Date": "2016-10-20T07:05:13Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((session.getAttribute(\"admin\")) == null) session.setAttribute(\"admin\", admin);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3924/buggy-version/src.main.java.org.group5.controller.AdminController.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.setAttribute(java.lang.String,org.group5.model.Admin)"], "Fixed commit": "9e96f1f31c9155cccdb879d3fcb3505e8a58abf1", "Url": "https://api.github.com/repos/khatri-bijay/bookplus", "Date": "2016-07-13T11:01:43Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((session.getAttribute(\"admin\")) == null) session.setAttribute(\"admin\", admin);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3924/buggy-version/src.main.java.org.group5.controller.AdminController.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.setAttribute(java.lang.String,org.group5.model.Admin)"], "Fixed commit": "9e96f1f31c9155cccdb879d3fcb3505e8a58abf1", "Url": "https://api.github.com/repos/khatri-bijay/bookplus", "Date": "2016-07-13T11:01:43Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((card.getQueue()) == (com.born2go.lazzybee.db.Card.QUEUE_REV2)) due = card.getDue(); else due = now;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/74/buggy-version/app.src.main.java.com.born2go.lazzybee.algorithms.CardSched.java", "BodyUseAPI": ["com.born2go.lazzybee.db.Card.getDue()"], "Fixed commit": "6d2c16b7b830261ea3681f23d84b2f0a83a1d6e5", "Url": "https://api.github.com/repos/hue1992/LazyBee-Android", "Date": "2015-07-24T07:24:46Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(file.isFile())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6300/buggy-version/src.com.stellaris.util.DigestStore.java", "BodyUseAPI": [], "Fixed commit": "ab73f9fd98dfead7feecd23f2c9493a1634e112a", "Url": "https://api.github.com/repos/WayOfModding/StellarisIDE", "Date": "2016-06-11T20:11:19Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentReading == 0) { currentReading = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5356/buggy-version/spooky.Programm.app.src.main.java.team1.red.zli.spookymeter.SpookyFactors.Darkness.java", "BodyUseAPI": [], "Fixed commit": "6eba9cfc664ce7b9fb7050532ce5cc6ae7d44085", "Url": "https://api.github.com/repos/Luminations/spooky", "Date": "2017-11-14T14:11:13Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shuttingDown) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5436/buggy-version/jactor2-core.src.main.java.org.agilewiki.jactor2.core.facilities.Facility.java", "BodyUseAPI": [], "Fixed commit": "bf2b215c8b40f5cdd37a5e39c78041c21e8b8114", "Url": "https://api.github.com/repos/laforge49/JActor2", "Date": "2013-11-16T07:46:52Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startClosing) && (closeables.isEmpty())) closeSReq().signal();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5436/buggy-version/jactor2-core.src.main.java.org.agilewiki.jactor2.core.facilities.Facility.java", "BodyUseAPI": [], "Fixed commit": "bf2b215c8b40f5cdd37a5e39c78041c21e8b8114", "Url": "https://api.github.com/repos/laforge49/JActor2", "Date": "2013-11-16T07:46:52Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sqlApptID.equals(\"\")) { sql = ((((((((sqlTime + \" OR \") + sqlProcedure) + \" OR \") + sqlResult) + \" OR \") + sqlPrescription) + \" OR \") + sqlComment) + \";\"; }else { sql = ((((((((((sqlApptID + \" OR \") + sqlTime) + \" OR \") + sqlProcedure) + \" OR \") + sqlResult) + \" OR \") + sqlPrescription) + \" OR \") + sqlComment) + \";\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6348/buggy-version/src.java.ece356.DoctorServlet.java", "BodyUseAPI": [], "Fixed commit": "e53ac6e26e89d402b4f507b405d8f251da58daf0", "Url": "https://api.github.com/repos/kent-ma/ece356", "Date": "2014-03-31T20:42:12Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((appts.size()) == 0) { sqlApptID = \"\"; }else { int[] apptIDs = new int[appts.size()]; for (int i = 0; i < (appts.size()); i++) { apptIDs[i] = appts.get(i).getApptId(); } for (int i = 0; i < (apptIDs.length); i++) { sqlApptID = ((sqlApptID + \"'\") + (apptIDs[i])) + \"'\"; if (i != ((apptIDs.length) - 1)) { sqlApptID = sqlApptID + \" OR ApptID = \"; }else { sqlApptID = sqlApptID + \")\"; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6348/buggy-version/src.java.ece356.DoctorServlet.java", "BodyUseAPI": ["java.util.List<ece356.Members.Appointment>.size()", "java.util.List<ece356.Members.Appointment>.get(int)", "appts.get(i).getApptId()", "java.util.List<ece356.Members.Appointment>.size()"], "Fixed commit": "e53ac6e26e89d402b4f507b405d8f251da58daf0", "Url": "https://api.github.com/repos/kent-ma/ece356", "Date": "2014-03-31T20:42:12Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numImages) < 0) numImages = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4104/buggy-version/s1tbx-io.src.main.java.org.esa.s1tbx.io.imageio.ImageIOFile.java", "BodyUseAPI": [], "Fixed commit": "ad48da7d7a7244d9e3364077e3900a0245fea7c0", "Url": "https://api.github.com/repos/senbox-org/s1tbx", "Date": "2015-10-29T13:42:55Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsonObject.get(\"previousHash\")) != null) node.previous = jsonObject.get(\"previousHash\").getAsString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1440/buggy-version/Peer.src.main.java.com.databasserne.model.Node.java", "BodyUseAPI": ["jsonObject.get(\"previousHash\").getAsString()", "com.google.gson.JsonObject.get(java.lang.String)"], "Fixed commit": "4b7fc62cb6bacd0bff1e0ebf1ee167cc262fd2ea", "Url": "https://api.github.com/repos/Databasserne/Block-Chain", "Date": "2017-12-18T22:29:37Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((globalLockStatus.get()) != null) { logger.debug(java.lang.String.format(\"Thread %d try to release the global lock...\", java.lang.Thread.currentThread().getId())); this.unlockGlobal(); logger.debug(java.lang.String.format(\"Thread %d released the global lock.\", java.lang.Thread.currentThread().getId())); globalLockStatus.remove(); logger.debug(java.lang.String.format(\"Thread %d doesn't cache its global lock any more.\", java.lang.Thread.currentThread().getId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2038/buggy-version/src.main.java.x.commons.lock.distributed.AbstractReentrantLock.java", "BodyUseAPI": ["java.lang.ThreadLocal<byte[]>.remove()"], "Fixed commit": "5b4e54de4dbee0eb55b1b81a1bcb5c5386b8b70c", "Url": "https://api.github.com/repos/quenton-sh/x-commons-lock", "Date": "2015-10-26T07:14:13Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((it.asg.hustle.MainActivity.TvShowFragment.my_series) != null) showSeries(it.asg.hustle.MainActivity.TvShowFragment.my_series, gridAdapter[0], true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3001/buggy-version/app.src.main.java.it.asg.hustle.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3405ec54131fd1412ef78345a119edf2ccb63d1b", "Url": "https://api.github.com/repos/sarapal/HaveUSeenTheLastEpisode", "Date": "2016-01-06T12:34:42Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPreviewAvailable()) { final org.datacleaner.widgets.ComboButton previewButtonPanel = new org.datacleaner.widgets.ComboButton(); previewButtonPanel.addButton(_previewButton); previewButtonPanel.add(new javax.swing.JLabel(\"|\")); previewButtonPanel.addButton(_previewAlternativesButton); bottomButtonPanel.add(previewButtonPanel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2917/buggy-version/desktop.api.src.main.java.org.datacleaner.panels.TransformerComponentBuilderPanel.java", "BodyUseAPI": [], "Fixed commit": "b3fe32b5927ac82d7d27dbd2921c29e3017b18c8", "Url": "https://api.github.com/repos/datacleaner/DataCleaner", "Date": "2015-11-19T15:01:04Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cell == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6685/buggy-version/src.main.java.org.mm.ss.SpreadSheetDataSource.java", "BodyUseAPI": [], "Fixed commit": "a357a31e468ef4b56f43e0851fd3d56cacadffeb", "Url": "https://api.github.com/repos/protegeproject/mapping-master", "Date": "2015-09-02T23:47:49Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getAllEvents().contains(state))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2880/buggy-version/fr.inria.soctrace.tools.ocelotl.visualizations.src.fr.inria.soctrace.tools.ocelotl.visualizations.spatiotemporal.mode.SpatiotemporalModeStates.java", "BodyUseAPI": [], "Fixed commit": "5ff4d764fd8c49d784ba3ab935727ca1af40ec7a", "Url": "https://api.github.com/repos/soctrace-inria/ocelotl", "Date": "2015-02-09T14:39:03Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (emptyMatrix) throw new fr.inria.soctrace.tools.ocelotl.core.exceptions.OcelotlException(fr.inria.soctrace.tools.ocelotl.core.exceptions.OcelotlException.NO_EVENTS);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2880/buggy-version/fr.inria.soctrace.tools.ocelotl.core.src.fr.inria.soctrace.tools.ocelotl.core.microdesc.MicroscopicDescription.java", "BodyUseAPI": [], "Fixed commit": "5ff4d764fd8c49d784ba3ab935727ca1af40ec7a", "Url": "https://api.github.com/repos/soctrace-inria/ocelotl", "Date": "2015-02-09T14:39:03Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getAllEvents().contains(event))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2880/buggy-version/fr.inria.soctrace.tools.ocelotl.visualizations.src.fr.inria.soctrace.tools.ocelotl.visualizations.spatiotemporal.mode.SpatiotemporalModeEvents.java", "BodyUseAPI": [], "Fixed commit": "5ff4d764fd8c49d784ba3ab935727ca1af40ec7a", "Url": "https://api.github.com/repos/soctrace-inria/ocelotl", "Date": "2015-02-09T14:39:03Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((!topLevel) && (containingElement != null)) && (ElementType.PARAGRAPH.equals(containingElement.getType()))) { org.apache.poi.xwpf.converter.xwpf.bo.ParagraphParsingElement paragraph = ((org.apache.poi.xwpf.converter.xwpf.bo.ParagraphParsingElement) (containingElement)); this.docxParagraph = paragraph.getDocxParagraph(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4434/buggy-version/src.main.java.org.apache.poi.xwpf.converter.xwpf.bo.ParagraphParsingElement.java", "BodyUseAPI": [], "Fixed commit": "18a1af988b4e70e999b2b73d31f54dfb07e2901c", "Url": "https://api.github.com/repos/DeveloperRegistry/XHTML2XWPFConverter", "Date": "2013-10-28T05:19:54Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (CalculatorUtils.INCORRECT_INPUT.equals(resultTextBox.getText())) { state.clear(); updateResult(); }else { removeSymbol(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5613/buggy-version/app.src.main.java.com.mobile.calculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2786cc923f526f2b6755d2f11375fd314afb0280", "Url": "https://api.github.com/repos/komarovn/Calculator-android", "Date": "2017-09-21T15:26:56Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((result.equals(java.lang.Double.NaN)) || (result.equals(java.lang.Double.POSITIVE_INFINITY))) || (result.equals(java.lang.Double.NEGATIVE_INFINITY))) { throw new java.lang.Exception(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5613/buggy-version/app.src.main.java.com.mobile.calculator.State.java", "BodyUseAPI": [], "Fixed commit": "2786cc923f526f2b6755d2f11375fd314afb0280", "Url": "https://api.github.com/repos/komarovn/Calculator-android", "Date": "2017-09-21T15:26:56Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.hasPermission(\"survival.send\")) { if ((args.length) == 0) { correctUse(p, \"send <player>\"); } if ((args.length) == 1) { org.bukkit.entity.Player tosend = conPlayer(p, args[0], true); if (tosend != null) { pedrxd.survival.commands.CommandSend.resquestSend(p, tosend); } } }else { noPerm(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7742/buggy-version/src.pedrxd.survival.commands.CommandSend.java", "BodyUseAPI": ["pedrxd.survival.commands.CommandSend.conPlayer(org.bukkit.entity.Player,java.lang.String,boolean)", "pedrxd.survival.commands.CommandSend.noPerm(org.bukkit.entity.Player)", "pedrxd.survival.commands.CommandSend.resquestSend(org.bukkit.entity.Player,org.bukkit.entity.Player)", "pedrxd.survival.commands.CommandSend.correctUse(org.bukkit.entity.Player,java.lang.String)"], "Fixed commit": "623f0f4111eb24b3d8f375ae044f48adc18341d8", "Url": "https://api.github.com/repos/pedrxd/Survival", "Date": "2015-11-02T22:01:14Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value.equals(\"%\")) value = \"%%\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8369/buggy-version/src.main.java.minechem.helper.StringHelper.java", "BodyUseAPI": [], "Fixed commit": "16fefbb4182f7c2b20d665f9660c338fda275308", "Url": "https://api.github.com/repos/way2muchnoise/Minechem", "Date": "2015-03-07T16:17:24Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Module.getExportedResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (deployments == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7577/buggy-version/jboss-integration.src.main.java.org.teiid.jboss.TeiidAdd.java", "BodyUseAPI": [], "Fixed commit": "e1368ef1b1c0aecd789acb52c5cb63e878d2264b", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2013-01-04T17:36:26Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Module.forClass(java.lang.Class<? extends org.teiid.jboss.TeiidAdd>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (module == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7577/buggy-version/jboss-integration.src.main.java.org.teiid.jboss.TeiidAdd.java", "BodyUseAPI": [], "Fixed commit": "e1368ef1b1c0aecd789acb52c5cb63e878d2264b", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2013-01-04T17:36:26Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pathname.getName().contains(\"_\")) && ((pathname.getName().split(\"_\").length) > 0)) { name = pathname.getName().split(\"_\")[0]; }else { name = pathname.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/93/buggy-version/app.src.com.constellio.app.services.importExport.systemStateExport.SystemStateExporter.java", "BodyUseAPI": ["java.io.File.getName()", "java.lang.String.split(java.lang.String)", "java.io.File.getName()"], "Fixed commit": "af47dc69ba524c066a51ec746b39699315d9d223", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2016-08-25T14:59:40Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isVariable(taggedWords.get(0).value())) && (!(pNoun.equals(\"\")))) { return pNoun; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7923/buggy-version/src.at.tuwien.CNL2ASP.TranslatorHelper.java", "BodyUseAPI": [], "Fixed commit": "53acb613f5128399b13a57a9ef347f75371f44d1", "Url": "https://api.github.com/repos/TobiasKain/Uhura", "Date": "2017-04-15T08:03:53Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isVariable(pNoun))) { pNoun = pNoun.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7923/buggy-version/src.at.tuwien.CNL2ASP.TranslatorHelper.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "53acb613f5128399b13a57a9ef347f75371f44d1", "Url": "https://api.github.com/repos/TobiasKain/Uhura", "Date": "2017-04-15T08:03:53Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cNoun.equals(\"\")) { if (isVariable(taggedWords.get(1).value())) { try { cNoun = getPNoun(taggedWords); } catch (at.tuwien.CNL2ASP.SentenceValidationException e) { } } if (cNoun.equals(\"\")) { throw new at.tuwien.CNL2ASP.SentenceValidationException(java.lang.String.format(\"\\\"%s\\\" is not a common noun.\", taggedWords.get(0).value())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7923/buggy-version/src.at.tuwien.CNL2ASP.TranslatorHelper.java", "BodyUseAPI": [], "Fixed commit": "53acb613f5128399b13a57a9ef347f75371f44d1", "Url": "https://api.github.com/repos/TobiasKain/Uhura", "Date": "2017-04-15T08:03:53Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((aFile.exists()) && (aFile.isDirectory())) && (!(\"\".equals(ext)))) { ext = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6461/buggy-version/util.src.main.java.nl.lxtreme.ols.util.HostUtils.java", "BodyUseAPI": [], "Fixed commit": "3c89b677580184a21bd2b38981766bf7e9a54f8c", "Url": "https://api.github.com/repos/jawi/ols", "Date": "2012-05-04T11:39:22Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.oauth2.provider.OAuth2Authentication.getDetails()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((details.getDecodedDetails()) instanceof firebase.auth.FirebaseUser)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7863/buggy-version/src.main.java.firebase.auth.SecurityAdvice.java", "BodyUseAPI": [], "Fixed commit": "f585612f0ee7bacf83dbd013688f479bd2e82e53", "Url": "https://api.github.com/repos/AgeOfMobile/spring-firebase-auth", "Date": "2016-11-21T06:42:18Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(originAuthentication instanceof org.springframework.security.oauth2.provider.OAuth2Authentication)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7863/buggy-version/src.main.java.firebase.auth.SecurityAdvice.java", "BodyUseAPI": [], "Fixed commit": "f585612f0ee7bacf83dbd013688f479bd2e82e53", "Url": "https://api.github.com/repos/AgeOfMobile/spring-firebase-auth", "Date": "2016-11-21T06:42:18Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(originAuthentication.isAuthenticated())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7863/buggy-version/src.main.java.firebase.auth.SecurityAdvice.java", "BodyUseAPI": [], "Fixed commit": "f585612f0ee7bacf83dbd013688f479bd2e82e53", "Url": "https://api.github.com/repos/AgeOfMobile/spring-firebase-auth", "Date": "2016-11-21T06:42:18Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (originAuthentication == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7863/buggy-version/src.main.java.firebase.auth.SecurityAdvice.java", "BodyUseAPI": [], "Fixed commit": "f585612f0ee7bacf83dbd013688f479bd2e82e53", "Url": "https://api.github.com/repos/AgeOfMobile/spring-firebase-auth", "Date": "2016-11-21T06:42:18Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ocpsoft.rewrite.param.Parameterized.getRequiredParameterNames()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (names != null) for (java.lang.String name : names) { org.ocpsoft.rewrite.param.Parameter<?> parameter = store.get(name, new org.ocpsoft.rewrite.param.DefaultParameter(name)); if (parameter instanceof org.ocpsoft.rewrite.param.ConfigurableParameter<?>) ((org.ocpsoft.rewrite.param.ConfigurableParameter<?>) (parameter)).bindsTo(org.ocpsoft.rewrite.bind.Evaluation.property(name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6562/buggy-version/api.src.main.java.org.ocpsoft.rewrite.config.ConfigurationLoader.java", "BodyUseAPI": [], "Fixed commit": "2bab38f1b1beacdf559e623158cd8eb0c7db44df", "Url": "https://api.github.com/repos/ocpsoft/rewrite", "Date": "2013-06-04T04:19:25Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (result != null) { data.putAll(result.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/606/buggy-version/src.main.java.com.yahoo.validatar.common.Result.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<com.yahoo.validatar.common.TypedObject>>.putAll(java.util.Map<java.lang.String, java.util.List<com.yahoo.validatar.common.TypedObject>>)"], "Fixed commit": "825808b206a8942ef5edae95598e846ddb279eca", "Url": "https://api.github.com/repos/yahoo/validatar", "Date": "2015-07-01T22:44:24Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.metaData) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2772/buggy-version/dristhi-app.src.main.java.org.ei.drishti.view.activity.SecuredActivity.java", "BodyUseAPI": [], "Fixed commit": "71eb79ec889af87eecdcea39735708842b5566c0", "Url": "https://api.github.com/repos/SEL-Columbia/dristhi-app", "Date": "2014-04-15T12:04:28Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((points.size()) < 2) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2863/buggy-version/paint.src.paint.Tablet.java", "BodyUseAPI": [], "Fixed commit": "a38a30dc72694e2fc29e6d975ebcdc0f7dc98dec", "Url": "https://api.github.com/repos/testneer/CSbasics", "Date": "2017-09-23T03:12:17Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((numThreads) > 1) { for (int i = 0; i < ((numThreads) - 1); i++) { partitionedData.add(new java.util.ArrayList<macrobase.datamodel.Datum>()); } for (int i = 0; i < (data.size()); i++) { partitionedData.get((i % ((numThreads) - 1))).add(data.get(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3932/buggy-version/src.main.java.macrobase.analysis.StreamingAnalyzer.java", "BodyUseAPI": ["partitionedData.get((i % ((numThreads) - 1))).add(data.get(i))", "java.util.List<java.util.List<macrobase.datamodel.Datum>>.get((i % ((numThreads) - 1)))"], "Fixed commit": "07bb98c65e83a5dde926e2ac7679ab90ce437399", "Url": "https://api.github.com/repos/stanford-futuredata/macrobase", "Date": "2016-02-29T22:31:06Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((specTopic.getRevision()) == null) { jiraEnvironment.append(\" [Latest]\"); }else { jiraEnvironment.append(\" [Specified]\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5510/buggy-version/src.main.java.org.jboss.pressgang.ccms.docbook.processing.JIRABugLinkStrategy.java", "BodyUseAPI": [], "Fixed commit": "21e7f0c9bdb3d8c5d144566c551ea487497b5c8b", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpec", "Date": "2013-08-20T01:08:40Z"},
{"Line": "=>795", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["right.getAttributes().get(com.alibaba.druid.sql.visitor.SQLEvalVisitor.EVAL_VALUE)", "com.alibaba.druid.sql.ast.SQLExpr.getAttribute(com.alibaba.druid.sql.visitor.SQLEvalVisitor.EVAL_VALUE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((leftValue == null) || (rightValue == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6621/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.java", "BodyUseAPI": [], "Fixed commit": "9744abaada6b106e13976738e8f721a7366872d2", "Url": "https://api.github.com/repos/cutedemons/druid", "Date": "2013-06-03T06:10:43Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (lastOpponentMove != null) { this.tray.put(java.lang.Integer.valueOf(lastOpponentMove)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5678/buggy-version/src.main.java.fr.legunda.tournoyons.game.tictactoc.TicTacToc.java", "BodyUseAPI": ["fr.legunda.tournoyons.game.tictactoc.Sequence.put(java.lang.Integer)", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "cef4a4755b2977d9f0d177cc4c0823ca83fd2ace", "Url": "https://api.github.com/repos/gegron/tournoyons", "Date": "2013-06-13T21:35:33Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.legunda.tournoyons.server.core.HttpParams.getParameters(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((java.lang.Integer.valueOf(parameters.get(fr.legunda.tournoyons.server.handler.TURN))) == 1) { url = ticTacToc.playFirst(parameters.get(fr.legunda.tournoyons.server.handler.MOVEID)); }else if (((java.lang.Integer.valueOf(parameters.get(fr.legunda.tournoyons.server.handler.TURN))) % 2) == 1) { url = ticTacToc.play(parameters.get(fr.legunda.tournoyons.server.handler.MOVEID), parameters.get(fr.legunda.tournoyons.server.handler.MOVE2)); }else { url = ticTacToc.play(parameters.get(fr.legunda.tournoyons.server.handler.MOVEID), parameters.get(fr.legunda.tournoyons.server.handler.MOVE1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5678/buggy-version/src.main.java.fr.legunda.tournoyons.server.handler.MainHandler.java", "BodyUseAPI": ["java.lang.Integer.valueOf(parameters.get(fr.legunda.tournoyons.server.handler.TURN))", "fr.legunda.tournoyons.game.tictactoc.TicTacToc.playFirst(parameters.get(fr.legunda.tournoyons.server.handler.MOVEID))", "fr.legunda.tournoyons.server.core.MapParam.get(fr.legunda.tournoyons.server.handler.MOVE2)", "fr.legunda.tournoyons.game.tictactoc.TicTacToc.play(parameters.get(fr.legunda.tournoyons.server.handler.MOVEID),parameters.get(fr.legunda.tournoyons.server.handler.MOVE1))", "fr.legunda.tournoyons.server.core.MapParam.get(fr.legunda.tournoyons.server.handler.MOVEID)", "fr.legunda.tournoyons.server.core.MapParam.get(fr.legunda.tournoyons.server.handler.TURN)", "fr.legunda.tournoyons.game.tictactoc.TicTacToc.play(parameters.get(fr.legunda.tournoyons.server.handler.MOVEID),parameters.get(fr.legunda.tournoyons.server.handler.MOVE2))", "fr.legunda.tournoyons.server.core.MapParam.get(fr.legunda.tournoyons.server.handler.MOVEID)", "fr.legunda.tournoyons.server.core.MapParam.get(fr.legunda.tournoyons.server.handler.MOVEID)", "fr.legunda.tournoyons.server.core.MapParam.get(fr.legunda.tournoyons.server.handler.MOVE1)"], "Fixed commit": "cef4a4755b2977d9f0d177cc4c0823ca83fd2ace", "Url": "https://api.github.com/repos/gegron/tournoyons", "Date": "2013-06-13T21:35:33Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((authpara) == null) { authpara = org.mcrest.ConfigHandler.getInstance().getAuthPara(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8155/buggy-version/src.main.java.org.mcrest.application.RestApplication.java", "BodyUseAPI": [], "Fixed commit": "3c18fb139a7f98eecacaaf127c8579672ac13a80", "Url": "https://api.github.com/repos/eternnoir/MCRest", "Date": "2015-03-24T05:15:40Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stack.getTagCompound().getBoolean(com.lothrazar.cyclicmagic.item.ItemRespawnEggAnimal.NBT_SHEEPSHEARED)) { sheep.setSheared(stack.getTagCompound().getBoolean(com.lothrazar.cyclicmagic.item.ItemRespawnEggAnimal.NBT_SHEEPSHEARED)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6227/buggy-version/src.main.java.com.lothrazar.cyclicmagic.item.ItemRespawnEggAnimal.java", "BodyUseAPI": ["net.minecraft.entity.passive.EntitySheep.setSheared(stack.getTagCompound().getBoolean(com.lothrazar.cyclicmagic.item.ItemRespawnEggAnimal.NBT_SHEEPSHEARED))", "net.minecraft.item.ItemStack.getTagCompound()", "stack.getTagCompound().getBoolean(java.lang.String)"], "Fixed commit": "e5de4ec10f9238f17a69c7ebdba96423727dc294", "Url": "https://api.github.com/repos/PrinceOfAmber/Cyclic", "Date": "2015-12-25T05:53:33Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.parser.DefaultJSONParser.getLexer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((lexer.token()) == (com.alibaba.fastjson.parser.JSONToken.NULL)) { lexer.nextToken(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/261/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.ThrowableDeserializer.java", "BodyUseAPI": ["com.alibaba.fastjson.parser.JSONScanner.nextToken()"], "Fixed commit": "9ff97fcce475c9fc002d9e74caee27c999ddea11", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2013-05-18T09:06:35Z"},
{"Line": "=>2117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.beam.sdk.io.gcp.bigquery.BigQueryIO.Write.Bound.getTable()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (table == null) { return table; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4802/buggy-version/sdks.java.io.google-cloud-platform.src.main.java.org.apache.beam.sdk.io.gcp.bigquery.BigQueryIO.java", "BodyUseAPI": [], "Fixed commit": "93271d34b1e3787f41d50a0757812a4232e0a7ba", "Url": "https://api.github.com/repos/sammcveety/incubator-beam", "Date": "2016-12-06T01:54:48Z"},
{"Line": "=>2125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.beam.sdk.io.gcp.bigquery.BigQueryIO.Write.Bound.getTable()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(table.get().getProjectId())) { com.google.api.services.bigquery.model.TableReference tableRef = table.get(); tableRef.setProjectId(bqOptions.getProject()); return org.apache.beam.sdk.options.ValueProvider.NestedValueProvider.of(org.apache.beam.sdk.options.ValueProvider.StaticValueProvider.of(org.apache.beam.sdk.io.gcp.bigquery.BigQueryIO.toJsonString(tableRef)), new org.apache.beam.sdk.io.gcp.bigquery.BigQueryIO.JsonTableRefToTableRef()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4802/buggy-version/sdks.java.io.google-cloud-platform.src.main.java.org.apache.beam.sdk.io.gcp.bigquery.BigQueryIO.java", "BodyUseAPI": ["org.apache.beam.sdk.options.ValueProvider<com.google.api.services.bigquery.model.TableReference>.get()"], "Fixed commit": "93271d34b1e3787f41d50a0757812a4232e0a7ba", "Url": "https://api.github.com/repos/sammcveety/incubator-beam", "Date": "2016-12-06T01:54:48Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_descripcion == null) _descripcion = \"Solicitud de Aportaci\u00f3n de Documentaci\u00f3n \" + (properties.FapProperties.get(\"application.name\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5177/buggy-version/fap.app.services.RegistroService.java", "BodyUseAPI": [], "Fixed commit": "2ef87015433be0eb2961b876c99b73cfd9ead64e", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2012-03-29T13:10:56Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((schemaName != null) && ((schemaName.trim().length()) > 0)) tableName = (schemaName + \".\") + tableName;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2265/buggy-version/karma-jdbc.src.main.java.edu.isi.karma.util.PostGISUtil.java", "BodyUseAPI": [], "Fixed commit": "9f37284e15c3d8549e677d970351689672f2f7dd", "Url": "https://api.github.com/repos/usc-isi-i2/Web-Karma", "Date": "2015-10-27T17:46:17Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((partner.getPartnerPersons()) != null) { if ((partner.getPartnerPersons().size()) > 0) { action.addFieldError(((\"project.projectPartners[\" + c) + \"].institution\"), action.getText(\"validation.required\", new java.lang.String[]{ action.getText(\"planning.projectPartners.partner.name\") })); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2410/buggy-version/impactPathways.src.main.java.org.cgiar.ccafs.ap.validation.projects.ProjectPartnersValidator.java", "BodyUseAPI": ["partner.getPartnerPersons().size()", "org.cgiar.ccafs.ap.data.model.ProjectPartner.getPartnerPersons()"], "Fixed commit": "b8da9c2dbb22418a5e77194015f83a45f53606df", "Url": "https://api.github.com/repos/CCAFS/ccafs-ap", "Date": "2016-03-03T13:37:46Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((validExercise) != null) { babystepsManager.start(originalExercise.getBabyStepsTestTime()); bus.post(new de.hhu.propra16.tddtrainer.events.ExerciseEvent(validExercise)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2955/buggy-version/src.main.java.de.hhu.propra16.tddtrainer.logic.PhaseManager.java", "BodyUseAPI": [], "Fixed commit": "93c5ca54fdabd4bd0e1ac1c8376cf8e504ce5cbc", "Url": "https://api.github.com/repos/ProPra16/programmierpraktikum-abschlussprojekt-team-2", "Date": "2016-07-08T21:44:26Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.resources.IProject.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (location != null) { for (tern.eclipse.ide.core.IIDETernRepository repository : repositories.values()) { if (location.equals(repository.getLocation())) { ((tern.eclipse.ide.internal.core.IDETernRepository) (repository)).setProject(project); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1178/buggy-version/eclipse.tern.eclipse.ide.core.src.tern.eclipse.ide.internal.core.TernRepositoryManager.java", "BodyUseAPI": ["org.eclipse.core.runtime.IPath.equals(repository.getLocation())"], "Fixed commit": "929303ffb692856afbbd73cbc768d1d127fec1f3", "Url": "https://api.github.com/repos/angelozerr/tern.java", "Date": "2016-07-02T07:28:20Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.eclipse.swt.widgets.Display.getCurrent().isDisposed())) { redraw(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/104/buggy-version/nak.nakloidGUI.gui.mainWindowViews.VocalInfoView.java", "BodyUseAPI": [], "Fixed commit": "cdecc25622d4fcb800af3b03306ca32f6b910022", "Url": "https://api.github.com/repos/acknak/NakloidGUI", "Date": "2016-02-21T03:14:56Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["client.view.jeu.EcranJeu.getUniteEnDeplacement()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((unite.getDeplacementRestant()) < 0) { unite.setDeplacementRestant(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3106/buggy-version/src.client.controller.EcranJeuListener.java", "BodyUseAPI": ["common.partie.unite.Unite.setDeplacementRestant(int)"], "Fixed commit": "0d70f9ac129067fe4a61da4d83b5245efa081a59", "Url": "https://api.github.com/repos/eddasser/UrbanJungle", "Date": "2013-05-03T17:13:30Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(org.codenarc.rule.AbstractRule)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (value != null) { return value.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3213/buggy-version/tools.sonar-codenarc-converter.src.main.java.org.sonar.plugins.groovy.codenarc.Rule.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "a33f9edca1f71a5318e8cce4c6c6b99d17e1f993", "Url": "https://api.github.com/repos/pmayweg/sonar-groovy", "Date": "2015-08-05T09:35:27Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((orig.getValue()) == null) { return orig; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5447/buggy-version/src.main.java.com.kenticocloud.delivery.RichTextElementConverter.java", "BodyUseAPI": [], "Fixed commit": "6f7ad2d734cf99360c898a9680bdc43e6f8bf5dc", "Url": "https://api.github.com/repos/Kentico/delivery-sdk-java", "Date": "2017-08-30T22:20:59Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentDay.toLowerCase().equals(\"saturday\")) || (currentDay.toLowerCase().equals(\"sunday\"))) { return Constants.ERROR_OTHER_INPUT; }else { if (currentDay.equals(messageDay)) { java.lang.String weekDay = \"/\".concat(currentDay).toLowerCase(); ru.mumu.utils.Connection.LOGGER.info((\"WeekDay is : \" + weekDay)); return ru.mumu.utils.Connection.sendRequest(weekDay); }else { return \"Days are not equals!\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2509/buggy-version/src.main.java.ru.mumu.utils.Connection.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "3cce7d8cda03f8d790f3dd8adcaba5f404325b22", "Url": "https://api.github.com/repos/schepach/TelegramMumuBot", "Date": "2016-10-05T09:16:58Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.mcgill.mcb.pcingola.snpEffect.HgvsDna.pos(int)", "ca.mcgill.mcb.pcingola.snpEffect.HgvsDna.pos(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((ps == null) || (pe == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/638/buggy-version/src.main.java.ca.mcgill.mcb.pcingola.snpEffect.HgvsDna.java", "BodyUseAPI": [], "Fixed commit": "c6f3813f35ce38a62d0a31c3534b2d67cd92dd75", "Url": "https://api.github.com/repos/pcingola/SnpEff", "Date": "2015-08-18T19:40:17Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ca.mcgill.mcb.pcingola.snpEffect.HgvsDna.debug) ca.mcgill.mcb.pcingola.util.Gpr.debug((((\"Unknown HGVS position \" + pos) + \", transcript \") + (tr)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/638/buggy-version/src.main.java.ca.mcgill.mcb.pcingola.snpEffect.HgvsDna.java", "BodyUseAPI": [], "Fixed commit": "c6f3813f35ce38a62d0a31c3534b2d67cd92dd75", "Url": "https://api.github.com/repos/pcingola/SnpEff", "Date": "2015-08-18T19:40:17Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sequence.hasFired())) { android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (getSystemService(Context.INPUT_METHOD_SERVICE))); imm.hideSoftInputFromWindow(buttonAddItem.getWindowToken(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6556/buggy-version/app.src.main.java.com.fibelatti.raffler.views.activities.GroupFormActivity.java", "BodyUseAPI": [], "Fixed commit": "6c8d36402dceceda914f63351f6218b43f5b2659", "Url": "https://api.github.com/repos/fibelatti/raffler", "Date": "2016-11-13T18:13:25Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (variable.contains(\"this.\")) { variable = variable.substring(5); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/876/buggy-version/src.sorbet.StepEventHandler.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "da6153ee22c7329f49a56f4abda92cd005e71beb", "Url": "https://api.github.com/repos/Sorbet/Sorbet", "Date": "2011-12-14T15:09:12Z"},
{"Line": "=>1435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 < fdurI) { this.maxNullFrameCountUntilEOS = (jogamp.opengl.util.av.GLMediaPlayerImpl.MAX_FRAMELESS_MS_UNTIL_EOS) / fdurI; }else { this.maxNullFrameCountUntilEOS = jogamp.opengl.util.av.GLMediaPlayerImpl.MAX_FRAMELESS_UNTIL_EOS_DEFAULT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6435/buggy-version/src.jogl.classes.jogamp.opengl.util.av.GLMediaPlayerImpl.java", "BodyUseAPI": [], "Fixed commit": "4e237f265146b4c1e00856f19a8794aabf54d12c", "Url": "https://api.github.com/repos/JogAmp/jogl", "Date": "2015-10-05T11:48:18Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listObjectInspector.getListLength(listObject)) < 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1660/buggy-version/extensions-contrib.orc-extensions.src.main.java.io.druid.data.input.orc.OrcHadoopInputRowParser.java", "BodyUseAPI": [], "Fixed commit": "992ffe326990da31194a680ca747319f48acd9d4", "Url": "https://api.github.com/repos/yuusaku-t/druid", "Date": "2017-07-23T07:34:13Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DebugLog.DEBUG) android.util.Log.d(edu.nd.darts.cimon.PhysicianInterface.TAG, \"PhysicianInterface.startPhysicianService - started\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4404/buggy-version/app.src.main.java.edu.nd.darts.cimon.PhysicianInterface.java", "BodyUseAPI": [], "Fixed commit": "d66da6cf8eaa0c2240f5fa6bd2573de4427696ce", "Url": "https://api.github.com/repos/ningPATH/NDroidAdmin", "Date": "2015-03-15T19:16:47Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((predMap.get(context)) != null) { sv.add(predMap.get(context)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3433/buggy-version/src.Jet.ML.LogisticRegressionModel.java", "BodyUseAPI": ["edu.emory.mathcs.nlp.learning.util.SparseVector.add(predMap.get(context))", "it.unimi.dsi.fastutil.objects.Object2IntMap<java.lang.String>.get(java.lang.String)"], "Fixed commit": "ec7e6ca4a5991f8887c19470f9e2cd95a45723cb", "Url": "https://api.github.com/repos/rgrishman/jet", "Date": "2016-05-18T07:08:08Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["param.getType().getClazz().getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (paramType.endsWith(\"...\")) { endOfName -= 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5036/buggy-version/src.main.java.org.sdmlib.models.classes.logic.GenMethod.java", "BodyUseAPI": [], "Fixed commit": "07d9e3228b2752908a1034fdc1612c8439e3738f", "Url": "https://api.github.com/repos/fujaba/SDMLib", "Date": "2016-02-26T12:47:17Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wrap) >= 1) { joshie.enchiridion.designer.DesignerHelper.drawSplitScaledString(getText(), left, top, wrap, colorI, size); }else joshie.enchiridion.designer.DesignerHelper.drawSplitScaledString(getText(), left, top, (((int) (((width) * 2) / (size))) + 4), colorI, size);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2695/buggy-version/src.main.java.joshie.enchiridion.designer.features.FeatureText.java", "BodyUseAPI": [], "Fixed commit": "8e20a8f91cbbcda894af721395fd985cd530aed4", "Url": "https://api.github.com/repos/PenguinSquad/Enchiridion", "Date": "2015-01-30T23:07:31Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((params.aid) != null) && ((params.aid.getAudioProperties().getNumberOfChannels()) >= 8)) && ((params.aid.isAACLC()) || (params.aid.isHEAAC()))) { transcodeOptions.add(\"-strict\"); transcodeOptions.add(\"1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5739/buggy-version/src.main.java.net.pms.encoders.FFMpegVideo.java", "BodyUseAPI": [], "Fixed commit": "bcbbb26df80b6548976866906da27864e4c2ac16", "Url": "https://api.github.com/repos/Sami32/UniversalMediaServer", "Date": "2017-11-16T03:12:46Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNotBlank(value)) { currentAudioTrack.getAudioProperties().setNumberOfChannels(net.pms.dlna.LibMediaInfoParser.MI.Get(audio, i, \"Channel(s)_Original\")); }else { currentAudioTrack.getAudioProperties().setNumberOfChannels(net.pms.dlna.LibMediaInfoParser.MI.Get(audio, i, \"Channel(s)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5739/buggy-version/src.main.java.net.pms.dlna.LibMediaInfoParser.java", "BodyUseAPI": [], "Fixed commit": "bcbbb26df80b6548976866906da27864e4c2ac16", "Url": "https://api.github.com/repos/Sami32/UniversalMediaServer", "Date": "2017-11-16T03:12:46Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5909/buggy-version/src.org.appanalysis.LogEntry.java", "BodyUseAPI": [], "Fixed commit": "69e9e0ecd0023460ce6f7d323ce1a909e899707d", "Url": "https://api.github.com/repos/TaintDroid/android_platform_packages_apps_TaintDroidNotify", "Date": "2014-02-12T21:58:21Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((posX > (tetris.glass.Glass2D.width)) || (posX < 0)) || (posY > (tetris.glass.Glass2D.height))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6696/buggy-version/src.java.tetris.glass.Glass2D.java", "BodyUseAPI": [], "Fixed commit": "15d2e05969b66ccee17f37ce4ab338ee59cd8092", "Url": "https://api.github.com/repos/vkmbox/Java-tetris", "Date": "2017-03-09T19:55:29Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((org.waarp.common.utility.WaarpShutdownHook.shutdownHook) == null) { new org.waarp.openr66.protocol.utils.R66ShutdownHook(shutdownConfiguration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2575/buggy-version/src.main.java.org.waarp.openr66.protocol.configuration.Configuration.java", "BodyUseAPI": [], "Fixed commit": "c209b74476d097f41191f5f14bfeb8762cfbeefa", "Url": "https://api.github.com/repos/bcarlin/WaarpR66", "Date": "2015-06-03T09:50:20Z"},
{"Line": "=>2159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.JSONPath.getPropertyValue(java.lang.Object,java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (itemValue instanceof java.util.Collection) { java.util.Collection collection = ((java.util.Collection) (itemValue)); fieldValues.addAll(collection); }else { fieldValues.add(itemValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8392/buggy-version/src.main.java.com.alibaba.fastjson.JSONPath.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.add(java.lang.Object)"], "Fixed commit": "be15615f2c814cfea4a581536b441c7e0d6467a9", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-03-13T07:42:55Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.game.Game.getPermanentEntering(source.getSourceId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (object == null) { object = game.getObject(source.getSourceId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1090/buggy-version/Mage.src.main.java.mage.abilities.effects.EntersBattlefieldEffect.java", "BodyUseAPI": [], "Fixed commit": "c7744d86317d3426a356f05f24489d35777fe987", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2016-10-22T22:36:36Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.util.UUID, com.forgeessentials.api.UserIdent>.get(player.getPersistentID())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (ident == null) { ident = com.forgeessentials.api.UserIdent.byUsername.get(player.getCommandSenderName().toLowerCase()); if (ident != null) { ident.uuid = player.getPersistentID(); com.forgeessentials.api.UserIdent.byUuid.put(ident.uuid, ident); }else ident = new com.forgeessentials.api.UserIdent(player); }else { java.lang.String name = player.getCommandSenderName(); if ((name != null) && (!(name.equals(ident.username)))) { com.forgeessentials.api.UserIdent.byUsername.remove(ident.username); ident.username = name; com.forgeessentials.api.UserIdent.byUsername.put(ident.username, ident); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7155/buggy-version/src.main.java.com.forgeessentials.api.UserIdent.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.forgeessentials.api.UserIdent>.put(java.lang.String,com.forgeessentials.api.UserIdent)", "java.util.Map<java.lang.String, com.forgeessentials.api.UserIdent>.remove(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "f55d15dd0e5a10c14988da1daf01e018bd471fb8", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentials", "Date": "2015-09-12T07:43:06Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["value.toString().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((uidUrlCount.length) < 3) { java.lang.System.out.println(((value.toString()) + \" len<3\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1118/buggy-version/src.main.java.com.elex.bigdata.llda.mahout.data.generatedocs.GenerateLDocMapper.java", "BodyUseAPI": [], "Fixed commit": "58923ef3e280da950c62752b819f2d55a69a60e1", "Url": "https://api.github.com/repos/elex-bigdata/lldaMahout", "Date": "2014-06-11T06:50:34Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (token[2].equals(\"UNK\")) { token[2] = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6809/buggy-version/src.week6.PresidentDAO.java", "BodyUseAPI": [], "Fixed commit": "92fdea9824edf75dda2aa2b282e1ecdf8b64aff3", "Url": "https://api.github.com/repos/eginter/Presidents", "Date": "2016-08-27T20:16:51Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (realLen <= 0) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5099/buggy-version/jnode-core.src.jnode.protocol.binkp.BinkpFrame.java", "BodyUseAPI": [], "Fixed commit": "44b1bbd598643f47158244c02bbc4a382e26d153", "Url": "https://api.github.com/repos/kreon/jnode", "Date": "2013-11-13T10:48:26Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((out) != null) out.printf(data.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3033/buggy-version/public.java.src.org.broadinstitute.sting.gatk.walkers.ClipReadsWalker.java", "BodyUseAPI": [], "Fixed commit": "f6ccac889b4c91e5a7d36762228296cd82045060", "Url": "https://api.github.com/repos/singerma/gatk", "Date": "2011-10-23T20:37:12Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (phoneSettings.redirectedReceive)) { phoneSettings.redirectedReceive = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3531/buggy-version/Codename_Puck.app.src.main.java.com.blogspot.therightoveninc.codenamepuck.viewActivity.java", "BodyUseAPI": [], "Fixed commit": "e411ea5835076062f6944eeca8c559959ed3a220", "Url": "https://api.github.com/repos/HopCoder/the-right-oven", "Date": "2015-04-16T21:37:31Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.ide.ResourceUtil.getAdapter(java.lang.Object,java.lang.Class,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (marker instanceof org.eclipse.core.resources.IMarker) { org.eclipse.core.resources.IProject project = ((org.eclipse.core.resources.IMarker) (marker)).getResource().getProject(); if (project != null) { projects.add(project); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6956/buggy-version/bundles.org.eclipse.ui.ide.src.org.eclipse.ui.internal.ide.actions.BuildUtilities.java", "BodyUseAPI": [], "Fixed commit": "bb031e75822911c38cce3e5ed1757ffee4208cf1", "Url": "https://api.github.com/repos/Gamma32/eclipse.platform.ui", "Date": "2013-08-30T14:28:06Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nccDoc.getUrl().equals(url)) { if ((url.getRef()) != null) nccDoc.setProperty(\"startingref\", url.getRef()); else nccDoc.setProperty(\"startingref\", \"\"); return nccDoc; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4938/buggy-version/src.main.java.org.luwrain.doctree.books.Daisy2.java", "BodyUseAPI": ["org.luwrain.doctree.books.Document.setProperty(java.lang.String,java.lang.String)", "org.luwrain.doctree.books.Document.setProperty(java.lang.String,java.lang.String)", "java.net.URL.getRef()", "java.net.URL.getRef()"], "Fixed commit": "1ae83287e1fb60ad6dc5febf2fc86872ee813b09", "Url": "https://api.github.com/repos/luwrain/browser", "Date": "2016-10-06T02:08:58Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inData.location) != null) context.atLocation(inData.location.toBukkitLocation());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/9091/buggy-version/src.main.java.de.kumpelblase2.remoteentities.persistence.serializers.PreparationSerializer.java", "BodyUseAPI": ["de.kumpelblase2.remoteentities.CreateEntityContext.atLocation(inData.location.toBukkitLocation())", "inData.location.toBukkitLocation()"], "Fixed commit": "2e9fc17abf51f22917102cb2523e9d026713e081", "Url": "https://api.github.com/repos/kumpelblase2/Remote-Entities", "Date": "2013-02-27T10:14:43Z"},
{"Line": "=>724", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((control.getInstructions().size()) > 1) { return instruction; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8403/buggy-version/fr.obeo.dsl.arduino.design.src.fr.obeo.dsl.arduino.design.services.ArduinoServices.java", "BodyUseAPI": [], "Fixed commit": "2a0ff7acedea8deacc1305fb2d69707c448fbac3", "Url": "https://api.github.com/repos/mbats/arduino", "Date": "2013-10-24T16:01:08Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.verivital.hyst.util.DynamicsUtil.findMultiplier(java.lang.String,com.verivital.hyst.grammar.formula.Expression)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (leftRv != null) rv = leftRv; else if (rightRv != null) { if (op == (com.verivital.hyst.grammar.formula.Operator.SUBTRACT)) rv = new com.verivital.hyst.grammar.formula.Operation(com.verivital.hyst.grammar.formula.Operator.NEGATIVE, rightRv); else rv = rightRv; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5545/buggy-version/src.java.com.verivital.hyst.util.DynamicsUtil.java", "BodyUseAPI": [], "Fixed commit": "a3bcedbc2c6f97ff1579f4560849e7f7abdee550", "Url": "https://api.github.com/repos/stanleybak/hyst", "Date": "2016-10-13T14:43:41Z"},
{"Line": "=>653", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.core.db.DatabaseFacade.createQuery(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(q.isExists())) { org.zstack.network.service.virtualrouter.lb.VirtualRouterLoadBalancerRefVO ref = new org.zstack.network.service.virtualrouter.lb.VirtualRouterLoadBalancerRefVO(); ref.setLoadBalancerUuid(struct.getLb().getUuid()); ref.setVirtualRouterVmUuid(vr.getUuid()); dbf.persist(ref); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7527/buggy-version/plugin.virtualRouterProvider.src.main.java.org.zstack.network.service.virtualrouter.lb.VirtualRouterLoadBalancerBackend.java", "BodyUseAPI": [], "Fixed commit": "9190c0e5aa7152874ee82a00c262faa1e1e8c314", "Url": "https://api.github.com/repos/HeathHose/zstack", "Date": "2017-05-05T08:46:09Z"},
{"Line": "=>594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type == (DashType.SOLID)) { this.lineStroke = new java.awt.BasicStroke(this.lineStroke.getLineWidth(), this.lineStroke.getEndCap(), this.lineStroke.getLineJoin(), this.lineStroke.getMiterLimit()); }else { this.lineStroke = new java.awt.BasicStroke(this.lineStroke.getLineWidth(), this.lineStroke.getEndCap(), this.lineStroke.getLineJoin(), this.lineStroke.getMiterLimit(), this.lineDashes.get(type), this.lineStroke.getDashPhase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3197/buggy-version/src.net.sf.jcgm.core.CGMDisplay.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, float[]>.get(int)"], "Fixed commit": "f35a5caf014144b1424a63358fe285b4665129d7", "Url": "https://api.github.com/repos/rainkinz/jcgm", "Date": "2012-12-11T20:06:34Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type == (DashType.SOLID)) { this.lineStroke = new java.awt.BasicStroke(this.lineStroke.getLineWidth(), this.lineStroke.getEndCap(), this.lineStroke.getLineJoin(), this.lineStroke.getMiterLimit()); }else { this.lineStroke = new java.awt.BasicStroke(this.lineStroke.getLineWidth(), this.lineStroke.getEndCap(), this.lineStroke.getLineJoin(), this.lineStroke.getMiterLimit(), this.lineDashes.get(type), this.lineStroke.getDashPhase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3197/buggy-version/src.net.sf.jcgm.core.CGMDisplay.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, float[]>.get(int)"], "Fixed commit": "f35a5caf014144b1424a63358fe285b4665129d7", "Url": "https://api.github.com/repos/rainkinz/jcgm", "Date": "2012-12-11T20:06:34Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.worldObj.getTileEntity(p.blockX,p.blockY,p.blockZ)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (tile != null) { sendMessage(var1, tile.getClass().getName()); for (java.lang.Class c : org.apache.commons.lang3.ClassUtils.getAllInterfaces(tile.getClass())) { sendMessage(var1, c.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7191/buggy-version/src.main.java.de.maxgb.minecraft.second_screen.commands.ListInterfacesCommand.java", "BodyUseAPI": ["tile.getClass().getName()", "net.minecraft.tileentity.TileEntity.getClass()", "de.maxgb.minecraft.second_screen.commands.ListInterfacesCommand.sendMessage(net.minecraft.command.ICommandSender,tile.getClass().getName())", "net.minecraft.tileentity.TileEntity.getClass()", "org.apache.commons.lang3.ClassUtils.getAllInterfaces(tile.getClass())"], "Fixed commit": "d97ae3cf66cab45e5caf524abb32b0bd96002f88", "Url": "https://api.github.com/repos/maxanier/MinecraftSecondScreenMod", "Date": "2014-08-01T21:07:07Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.worldObj.getBlock(p.blockX,p.blockY,p.blockZ)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (block != null) { sendMessage(var1, block.getClass().getName()); for (java.lang.Class c : org.apache.commons.lang3.ClassUtils.getAllInterfaces(block.getClass())) { sendMessage(var1, c.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7191/buggy-version/src.main.java.de.maxgb.minecraft.second_screen.commands.ListInterfacesCommand.java", "BodyUseAPI": ["block.getClass().getName()", "net.minecraft.block.Block.getClass()", "de.maxgb.minecraft.second_screen.commands.ListInterfacesCommand.sendMessage(net.minecraft.command.ICommandSender,block.getClass().getName())", "org.apache.commons.lang3.ClassUtils.getAllInterfaces(block.getClass())", "net.minecraft.block.Block.getClass()"], "Fixed commit": "d97ae3cf66cab45e5caf524abb32b0bd96002f88", "Url": "https://api.github.com/repos/maxanier/MinecraftSecondScreenMod", "Date": "2014-08-01T21:07:07Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isFirst) { sb.append('+'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8056/buggy-version/gwt.src.com.mathHelper.client.core.expressions.ExMul.java", "BodyUseAPI": [], "Fixed commit": "46e8108cf63f49624401954301c56915d9a04d0b", "Url": "https://api.github.com/repos/sevdokimov/mathhelper", "Date": "2011-04-24T14:01:22Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == \"FOREST\") { g2.setPaint(java.awt.Color.green); }else if ((type) == \"MINE\") { g2.setPaint(java.awt.Color.gray); }else if ((type) == \"FERTILELAND\") { g2.setPaint(java.awt.Color.magenta); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7998/buggy-version/src.Game.Tile.java", "BodyUseAPI": [], "Fixed commit": "18254e05e838e67a0a6dafa31a8310279f1ee711", "Url": "https://api.github.com/repos/Goblinz/cultu-sim", "Date": "2015-10-26T22:58:04Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(photosURL.get(position).equals(\"Not exists\"))) { imageView.setLayoutParams(new android.widget.GridView.LayoutParams(((size.x) / 2), ((size.y) / 3))); imageView.setScaleType(ImageView.ScaleType.CENTER_CROP); com.squareup.picasso.Picasso.with(mContext).load(photosURL.get(position)).placeholder(R.drawable.loader).fit().centerCrop().into(imageView); }else { imageView.setImageResource(R.drawable.no_image_icon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/24/buggy-version/app.src.main.java.projb.dissystems.aueb.vassilis.nycheckins.ImageAdapter.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(mContext).load(photosURL.get(position)).placeholder(R.drawable.loader)", "com.squareup.picasso.Picasso.with(mContext).load(photosURL.get(position)).placeholder(R.drawable.loader).fit().centerCrop().into(android.widget.ImageView)", "java.util.ArrayList<java.lang.String>.get(int)", "com.squareup.picasso.Picasso.with(mContext).load(java.lang.String)", "com.squareup.picasso.Picasso.with(mContext).load(photosURL.get(position)).placeholder(R.drawable.loader).fit().centerCrop()", "com.squareup.picasso.Picasso.with(mContext).load(photosURL.get(position)).placeholder(R.drawable.loader).fit()"], "Fixed commit": "a31cf5798da2919a599d3de5650718a0704d2fdd", "Url": "https://api.github.com/repos/bouzasvas/DistributedSystemsAndroid", "Date": "2016-06-20T16:57:34Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item.equals(p.getItemOnCursor())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7515/buggy-version/src.modfixng.utils.PlainNMSUtils.java", "BodyUseAPI": [], "Fixed commit": "b96733aaa0488ea43180abc834e549ff8e601055", "Url": "https://api.github.com/repos/Shevchik/ModFixNG", "Date": "2014-01-30T20:34:46Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item.equals(p.getItemOnCursor())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7515/buggy-version/src.modfixng.utils.PlainNMSUtils.java", "BodyUseAPI": [], "Fixed commit": "b96733aaa0488ea43180abc834e549ff8e601055", "Url": "https://api.github.com/repos/Shevchik/ModFixNG", "Date": "2014-01-30T20:34:46Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.createQuery(\"from Result\").getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((results.size()) > 0) { session.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8087/buggy-version/db_hackaton.src.main.java.ru.atom.dbhackaton.dao.ResultDao.java", "BodyUseAPI": [], "Fixed commit": "dc0ca842b313e8961e90f74ccb56383ccd35b1db", "Url": "https://api.github.com/repos/SaenkoDmitry/atom", "Date": "2017-04-18T22:53:52Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextResourceId.hasIdPart()) == false) { if (isNotBlank(nextEntry.getFullUrl())) { nextResourceId = new ca.uhn.fhir.model.primitive.IdDt(nextEntry.getFullUrl()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5850/buggy-version/hapi-fhir-jpaserver-base.src.main.java.ca.uhn.fhir.jpa.dao.FhirSystemDaoDstu2.java", "BodyUseAPI": [], "Fixed commit": "c666b9c1967156fb8ac8cc2ad811d11aec649b2f", "Url": "https://api.github.com/repos/petervanhoute/hapi-fhir", "Date": "2015-10-03T20:11:47Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showDefaultColumn) { configureDefaultColumn(tableViewerCreator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8097/buggy-version/main.plugins.org.talend.core.ui.src.main.java.org.talend.core.ui.metadata.editor.AbstractMetadataTableEditorView.java", "BodyUseAPI": [], "Fixed commit": "a6849c7532587f48ab74e6c2a6f81080bdff9935", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2015-01-23T10:01:25Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bytesWritten > 0) { offerWindow.accept(bytesWritten); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6540/buggy-version/src.main.java.org.reaktivity.nukleus.tcp.internal.writer.stream.Slab.java", "BodyUseAPI": ["java.util.function.IntConsumer.accept(int)"], "Fixed commit": "2a48179a89916144ec9a87cf735ca5c37b7e704b", "Url": "https://api.github.com/repos/cmebarrow/nukleus-tcp.java", "Date": "2017-02-13T18:18:48Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bytesWritten > 0) { offerWindow.accept(bytesWritten); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6540/buggy-version/src.main.java.org.reaktivity.nukleus.tcp.internal.writer.stream.Slab.java", "BodyUseAPI": ["java.util.function.IntConsumer.accept(int)"], "Fixed commit": "2a48179a89916144ec9a87cf735ca5c37b7e704b", "Url": "https://api.github.com/repos/cmebarrow/nukleus-tcp.java", "Date": "2017-02-13T18:18:48Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((listFragment != null) && (listFragment.isVisible())) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2886/buggy-version/app.src.main.java.cz.muni.fi.pv256.movio2.uco374585.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9ede6abebe0c42ee7585f5bf303e13c78c98ce1b", "Url": "https://api.github.com/repos/Skyllarr/PV256Android", "Date": "2017-01-28T22:33:18Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["newTypeInput.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((newTypeName == null) || (newTypeName.isEmpty())) { android.widget.Toast.makeText(getApplicationContext(), \"Type name is empty!\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5328/buggy-version/app.src.main.java.com.example.vladimirsostaric.walletlog.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f18ea7df2d5bc2eb12c6147a6dc97a04918a3675", "Url": "https://api.github.com/repos/vsostaric/wallet-log", "Date": "2017-10-10T12:40:54Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((noMatchScore) != null) { builder.field(org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilder.NO_MATCH_SCORE_FIELD.getPreferredName(), noMatchScore); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8674/buggy-version/core.src.main.java.org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilder.java", "BodyUseAPI": [], "Fixed commit": "e5f8ee4b4a255ecb4e435b9f0501cb7bdbc21669", "Url": "https://api.github.com/repos/brwe/elasticsearch", "Date": "2016-07-18T01:41:22Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hero.equals(\"PhantomAssassin\")) return \"phantom_assassin\"; else if (hero.equals(\"Shadow Demon\")) return \"shadow_demon\"; else if (hero.equals(\"Earthshaker\")) return \"earthshaker\"; else if (hero.equals(\"Slark\")) return \"slark\"; else if (hero.equals(\"Tiny\")) return \"tiny\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5366/buggy-version/app.src.main.java.com.heropicker.ty.counterpicker.Utilities.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "340d86279e07abff9d20aa025d9b0278d4bdb1b5", "Url": "https://api.github.com/repos/tytrusty/CounterPicker", "Date": "2016-02-09T01:53:48Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outputs.get(outputName)) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1830/buggy-version/src.org.pikater.core.agents.system.computationDescriptionParser.dependencyGraph.ComputationNode.java", "BodyUseAPI": [], "Fixed commit": "c59fd151dec4e691a8424788c7d85849fecee8dc", "Url": "https://api.github.com/repos/krajj7/pikater", "Date": "2014-07-23T23:23:55Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (speedText.isEmpty()) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5512/buggy-version/app.src.main.java.com.kingwaytek.cpami.biking.app.widget.TrackInfoLayout.java", "BodyUseAPI": [], "Fixed commit": "d5ed861675da8680a9da3b461fc81e75fc71a72a", "Url": "https://api.github.com/repos/Stillwildman/BikingGO", "Date": "2017-05-12T13:36:53Z"},
{"Line": "=>866", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.irods.jargon.core.connection.IRODSSession.discardSessionForErrors(org.irods.jargon.core.connection.IRODSAccount)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!wasClosed) { getIrodsConnection().obliterateConnectionAndDiscardErrors(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1951/buggy-version/jargon-core.src.main.java.org.irods.jargon.core.connection.AbstractIRODSMidLevelProtocol.java", "BodyUseAPI": [], "Fixed commit": "19430c1430b39996c83964fe729a8795eeb86d43", "Url": "https://api.github.com/repos/DICE-UNC/jargon", "Date": "2015-09-21T17:22:38Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (swaggerJson.has(\"definitions\")) swaggerJson.put(\"definitions\", new com.centurylink.mdw.model.JsonObject(swaggerJson.getJSONObject(\"definitions\").toString()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5465/buggy-version/mdw-hub.src.com.centurylink.mdw.hub.servlet.ServiceApiServlet.java", "BodyUseAPI": ["com.centurylink.mdw.model.JsonObject.put(java.lang.String,com.centurylink.mdw.model.JsonObject)", "swaggerJson.getJSONObject(\"definitions\").toString()", "com.centurylink.mdw.model.JsonObject.getJSONObject(java.lang.String)"], "Fixed commit": "5778fbe9a386a472530848765d9ed59d1356418e", "Url": "https://api.github.com/repos/CenturyLinkCloud/mdw", "Date": "2017-06-05T16:30:15Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (swaggerJson.has(\"paths\")) swaggerJson.put(\"paths\", new com.centurylink.mdw.model.JsonObject(swaggerJson.getJSONObject(\"paths\").toString()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5465/buggy-version/mdw-hub.src.com.centurylink.mdw.hub.servlet.ServiceApiServlet.java", "BodyUseAPI": ["com.centurylink.mdw.model.JsonObject.getJSONObject(java.lang.String)", "com.centurylink.mdw.model.JsonObject.put(java.lang.String,com.centurylink.mdw.model.JsonObject)", "swaggerJson.getJSONObject(\"paths\").toString()"], "Fixed commit": "5778fbe9a386a472530848765d9ed59d1356418e", "Url": "https://api.github.com/repos/CenturyLinkCloud/mdw", "Date": "2017-06-05T16:30:15Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cells.ClearCell.getAnt()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((a.getLastupdated()) < (this.roundNum)) { a.update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3782/buggy-version/AntGame.src.models.AntWorld.java", "BodyUseAPI": ["models.Ant.update()"], "Fixed commit": "cd76f8af5098d31b075134be55b768f7c6ccc179", "Url": "https://api.github.com/repos/FlipE/AntGame", "Date": "2013-04-14T16:13:23Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) == null) { adapter = new com.lit.wa.yuen.looklol.ui.BannedChampionAdapter(getContext(), bannedChampions); champListView.setAdapter(adapter); }else { adapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1395/buggy-version/app.src.main.java.com.lit.wa.yuen.looklol.TrendingFragment.java", "BodyUseAPI": [], "Fixed commit": "23b92663af0e6da5df580989c7332d03f03484b4", "Url": "https://api.github.com/repos/litwa-yuen/LookLOL", "Date": "2017-02-28T01:44:55Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value.length()) > 10000) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3676/buggy-version/skyeye-client.skyeye-client-log4j2.src.main.java.com.jthink.skyeye.client.log4j2.appender.KafkaAppender.java", "BodyUseAPI": [], "Fixed commit": "f9e1b1eb45fac2a0f79c75f487834bfc5f89f33d", "Url": "https://api.github.com/repos/JThink/SkyEye", "Date": "2017-09-08T01:37:24Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value.length()) > 10000) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3676/buggy-version/skyeye-client.skyeye-client-logback.src.main.java.com.jthink.skyeye.client.logback.appender.KafkaAppender.java", "BodyUseAPI": [], "Fixed commit": "f9e1b1eb45fac2a0f79c75f487834bfc5f89f33d", "Url": "https://api.github.com/repos/JThink/SkyEye", "Date": "2017-09-08T01:37:24Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value.length()) > 10000) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3676/buggy-version/skyeye-client.skyeye-client-log4j.src.main.java.com.jthink.skyeye.client.log4j.appender.KafkaAppender.java", "BodyUseAPI": [], "Fixed commit": "f9e1b1eb45fac2a0f79c75f487834bfc5f89f33d", "Url": "https://api.github.com/repos/JThink/SkyEye", "Date": "2017-09-08T01:37:24Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((appeng.core.worlddata.WorldData.instance()) == null) { appeng.core.AELog.error(\"Worlddata was null, server has not started?!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/112/buggy-version/src.main.java.appeng.decorative.solid.BlockSkyStone.java", "BodyUseAPI": [], "Fixed commit": "5913f7de0e2bec7d1b1ea35bd39168625a50f841", "Url": "https://api.github.com/repos/thiakil/Applied-Energistics-2", "Date": "2017-07-06T12:09:48Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getComponent()) instanceof javax.swing.JEditorPane) { field.setText(list.getSelectedValue().getSpell().getOrthography()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2266/buggy-version/src.snorri.overlay.InventoryOverlay.java", "BodyUseAPI": [], "Fixed commit": "7e1ea225fcd08a8642270ab4b830cc60dfd49bb2", "Url": "https://api.github.com/repos/SnorriDev/thoth", "Date": "2017-07-01T20:50:44Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cofh.tweak.asmhooks.HooksCore.nearData) == null) { cofh.tweak.asmhooks.HooksCore.nearData = new gnu.trove.map.hash.TIntByteHashMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4612/buggy-version/src.cofh.tweak.asmhooks.HooksCore.java", "BodyUseAPI": [], "Fixed commit": "ac35cf5255a63413e55e120f5ddc5ce1fb46c260", "Url": "https://api.github.com/repos/CoFH/CoFHTweaks", "Date": "2015-04-27T04:28:42Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextToFind < 0) { nextToFind += 256; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7876/buggy-version/src.node.Node.java", "BodyUseAPI": [], "Fixed commit": "dcacca24c096648d692d100523ed8be22338e2f5", "Url": "https://api.github.com/repos/Ivery/CS425MP2", "Date": "2015-04-16T00:22:15Z"},
{"Line": "=>987", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.backmeup.dal.ProfileDao.findById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (keyserverClient.isAuthInformationAvailable(p, keyRing)) keyserverClient.deleteAuthInfo(p.getProfileId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7977/buggy-version/org.backmeup.logic.impl.src.main.java.org.backmeup.logic.impl.BusinessLogicImpl.java", "BodyUseAPI": ["org.backmeup.keyserver.client.Keyserver.deleteAuthInfo(p.getProfileId())", "org.backmeup.model.Profile.getProfileId()"], "Fixed commit": "e301a23a51d00b60affcbfb4185ac8c49739776c", "Url": "https://api.github.com/repos/backmeup/backmeup-prototype", "Date": "2012-11-13T08:50:02Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((click.length()) > 2) { click.replace(((click.length()) - 2), click.length(), \"}\"); }else { click.append(\"}\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4990/buggy-version/src.main.java.com.alibaba.rocketmq.storm.bolt.CRAggregationBolt.java", "BodyUseAPI": ["java.lang.StringBuilder.replace(int,int,java.lang.String)", "java.lang.StringBuilder.length()", "java.lang.StringBuilder.length()", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "5d4412ebe8e9b7b4570e334dbedf4a62dc5a3016", "Url": "https://api.github.com/repos/lizhanhui/rocketmq-storm", "Date": "2015-05-20T10:01:22Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((conversion.length()) > 2) { conversion.replace(((conversion.length()) - 2), conversion.length(), \"}\"); }else { conversion.append(\"}\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4990/buggy-version/src.main.java.com.alibaba.rocketmq.storm.bolt.CRAggregationBolt.java", "BodyUseAPI": ["java.lang.StringBuilder.length()", "java.lang.StringBuilder.replace(int,int,java.lang.String)", "java.lang.StringBuilder.length()", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "5d4412ebe8e9b7b4570e334dbedf4a62dc5a3016", "Url": "https://api.github.com/repos/lizhanhui/rocketmq-storm", "Date": "2015-05-20T10:01:22Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filename == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2653/buggy-version/src.main.java.com.mycar.utils.impl.FileUploadUtilsImpl.java", "BodyUseAPI": [], "Fixed commit": "e9bc29a32eb1f161e96cce9e5259825181401b83", "Url": "https://api.github.com/repos/qiong-coder/mycar", "Date": "2017-11-14T15:13:55Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_firstInsertion) != null) { org.zkoss.zk.ui.HtmlShadowElement.setPrevInsertion(_firstInsertion, _previousInsertion); org.zkoss.zk.ui.HtmlShadowElement.setPrevInsertion(_nextInsertion, _lastInsertion); }else { org.zkoss.zk.ui.HtmlShadowElement.setPrevInsertion(_nextInsertion, _previousInsertion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/244/buggy-version/zk.src.org.zkoss.zk.ui.HtmlShadowElement.java", "BodyUseAPI": [], "Fixed commit": "d60dc09c0519340ce319f573e0e3a9f8c8a11fd0", "Url": "https://api.github.com/repos/zkoss/zk", "Date": "2014-12-12T06:02:26Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tzg.plugin.dependency.support.DependencySupport.getDependenciesElement(org.dom4j.Document)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (dependencies != null) { java.util.List<org.dom4j.Element> dependencyList = com.tzg.plugin.dependency.support.DependencySupport.getDependencyElement(component, dependencies); if ((dependencyList.size()) != 0) { for (org.dom4j.Element dependency : dependencyList) { dependencies.remove(dependency); } com.tzg.plugin.dependency.support.DependencySupport.pomWriter(pomPath, document); java.lang.System.out.println(\"====> Remove component dependency successfully\".replaceAll(\"component\", component)); }else { java.lang.System.out.println(\"====> Dependency component doesn't exist in pom.xml\".replaceAll(\"component\", component)); } }else { java.lang.System.out.println(\"====> No dependencies Element exist.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1025/buggy-version/src.main.java.com.tzg.plugin.dependency.goal.DependencyRemove.java", "BodyUseAPI": ["com.tzg.plugin.dependency.support.DependencySupport.getDependencyElement(java.lang.String,org.dom4j.Element)", "org.dom4j.Element.remove(org.dom4j.Element)"], "Fixed commit": "06cfe057b280ec5692f2d1f46bf3a2138b176842", "Url": "https://api.github.com/repos/1494445739/tzg-maven-plugin", "Date": "2017-05-22T11:36:20Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bitbucket.ucchy.undine.MailManager.getEditmodeMail(org.bitbucket.ucchy.undine.sender.MailSender)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mail.getToGroups().contains(SpecialGroupAllConnected.NAME)) && (!(parent.isPlayerCacheLoaded()))) { sender.sendMessage(org.bitbucket.ucchy.undine.Messages.get(\"ErrorPlayerCacheIncomplete\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1866/buggy-version/src.main.java.org.bitbucket.ucchy.undine.command.UndineSendCommand.java", "BodyUseAPI": [], "Fixed commit": "50aeef3ef14000cb1c2c675b655f2f95b7d38da8", "Url": "https://api.github.com/repos/ucchyocean/UndineMailer", "Date": "2015-09-12T07:34:43Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!saved) { nl.Steffion.BlockHunt.Managers.MessageM.sendFMessage(event.getPlayer(), ConfigC.error_noArena, true, (\"name-\" + (lines[1]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6018/buggy-version/src.nl.Steffion.BlockHunt.SignsHandler.java", "BodyUseAPI": [], "Fixed commit": "da1b8192f16998c9d215ee2be4a46a1146f7a72e", "Url": "https://api.github.com/repos/Steffion/BlockHunt", "Date": "2013-08-12T18:47:20Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Class<? extends ca.uhn.fhir.model.api.IElement>, ca.uhn.fhir.context.BaseRuntimeElementDefinition<?>>.get(java.lang.Class<? extends ca.uhn.fhir.model.api.IElement>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nextDef instanceof ca.uhn.fhir.context.IRuntimeDatatypeDefinition) { if (((ca.uhn.fhir.context.IRuntimeDatatypeDefinition) (nextDef)).isSpecialization()) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6799/buggy-version/hapi-fhir-base.src.main.java.ca.uhn.fhir.context.RuntimeChildAny.java", "BodyUseAPI": [], "Fixed commit": "479c09b17452b9751beba7f55cae86930f470a73", "Url": "https://api.github.com/repos/jamesagnew/hapi-fhir", "Date": "2014-11-10T22:33:45Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((keyDisplayMap) != null) for (java.util.Map.Entry<java.lang.String, java.lang.String> entry : keyDisplayMap.entrySet()) { listBox.addItem(entry.getValue(), entry.getKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5415/buggy-version/atom-client.src.main.java.at.ac.fhcampuswien.atom.client.gui.attributes.ListBoxView.java", "BodyUseAPI": [], "Fixed commit": "dd6591afb2f935e0dfa07b580069a0fb3572d7d5", "Url": "https://api.github.com/repos/fhcampuswien/atom", "Date": "2015-11-10T12:50:59Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(adminLogDir.exists())) { adminLogDir.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/187/buggy-version/src.main.java.org.opengis.te.stats.AdminLogCreator.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "63ad06d48d48d6a7c0ef7b837de88692e9c0d42c", "Url": "https://api.github.com/repos/opengeospatial/teamengine-statistics", "Date": "2016-03-21T19:15:55Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((playerArray.length) != 0) { for (int i = 0, n = playerArray.length; i < n; i++) { desktop_resources.GUI.removeAllCars(playerArray[i].getName()); placePlayer(playerArray[i], 12); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/54/buggy-version/40_del2.src.spil.FieldController2.java", "BodyUseAPI": ["spil.FieldController2.placePlayer(playerArray[i],int)", "playerArray[i].getName()", "desktop_resources.GUI.removeAllCars(playerArray[i].getName())"], "Fixed commit": "4626a557fc6d6359569018d4ec092d5a348537e6", "Url": "https://api.github.com/repos/Dani972e/CDIO-DEL-2", "Date": "2016-10-23T16:19:09Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sender instanceof org.bukkit.entity.Player)) { sender.sendMessage(\"This command can only be run by a player.\"); }else { send.sendTitle(string, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5129/buggy-version/G_4sYeller.src.main.java.com.GeForce.G_4sYeller.G_4sYeller.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(java.lang.String)"], "Fixed commit": "f5abfb2f0e3a8ca70562c652a45b12a63cc3720c", "Url": "https://api.github.com/repos/GeForcez/G_4sYeller", "Date": "2015-06-07T08:53:57Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sender instanceof org.bukkit.entity.Player)) { sender.sendMessage(\"This command can only be run by a player.\"); }else { send.sendTitle(\"\", string); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5129/buggy-version/G_4sYeller.src.main.java.com.GeForce.G_4sYeller.G_4sYeller.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(java.lang.String)"], "Fixed commit": "f5abfb2f0e3a8ca70562c652a45b12a63cc3720c", "Url": "https://api.github.com/repos/GeForcez/G_4sYeller", "Date": "2015-06-07T08:53:57Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sender instanceof org.bukkit.entity.Player)) { sender.sendMessage(\"This command can only be run by a player.\"); }else { java.lang.String[] strings = string.split(\",\"); send.sendTitle(strings[0], strings[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5129/buggy-version/G_4sYeller.src.main.java.com.GeForce.G_4sYeller.G_4sYeller.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(java.lang.String)"], "Fixed commit": "f5abfb2f0e3a8ca70562c652a45b12a63cc3720c", "Url": "https://api.github.com/repos/GeForcez/G_4sYeller", "Date": "2015-06-07T08:53:57Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.demo.asycnmathsolver.threads.ReaderThread.eval(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (result != null) { queue.add(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5945/buggy-version/async-math-solver.async-math-solver.src.main.java.com.demo.asycnmathsolver.threads.ReaderThread.java", "BodyUseAPI": ["java.util.Queue<java.lang.String>.add(java.lang.String)"], "Fixed commit": "a1f61f889960972aa2d8389015b70d352cdb30ea", "Url": "https://api.github.com/repos/kamoor/demo-code", "Date": "2014-12-09T16:11:02Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jsat.math.Function.f(double[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Math.abs((fa - 0))) < (2 * eps)) return a;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5261/buggy-version/JSAT.src.jsat.math.rootfinding.Zeroin.java", "BodyUseAPI": [], "Fixed commit": "c762aa3746d3dd55418faaf5d360b298f32e5178", "Url": "https://api.github.com/repos/EdwardRaff/JSAT", "Date": "2015-06-20T19:36:41Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jsat.math.Function.f(double[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Math.abs((fb - 0))) < (2 * eps)) return b;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5261/buggy-version/JSAT.src.jsat.math.rootfinding.Zeroin.java", "BodyUseAPI": [], "Fixed commit": "c762aa3746d3dd55418faaf5d360b298f32e5178", "Url": "https://api.github.com/repos/EdwardRaff/JSAT", "Date": "2015-06-20T19:36:41Z"},
{"Line": "=>808", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index < 0) index = content.indexOf(((\"<@!\" + mentionId) + \">\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5896/buggy-version/src.main.java.net.dv8tion.jda.core.entities.EntityBuilder.java", "BodyUseAPI": [], "Fixed commit": "bf31bd48a8b71e82b2429753fe735c6bda034f89", "Url": "https://api.github.com/repos/DV8FromTheWorld/JDA", "Date": "2016-11-30T16:51:33Z"},
{"Line": "=>1035", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sadlBaseModel) == null) { sadlBaseModel = com.ge.research.sadl.jena.OntModelProvider.getSadlBaseModel(); if ((sadlBaseModel) == null) { sadlBaseModel = getOntModelFromString(resource, com.ge.research.sadl.jena.JenaBasedSadlModelProcessor.getSadlBaseModel()); com.ge.research.sadl.jena.OntModelProvider.setSadlBaseModel(sadlBaseModel); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3828/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelProcessor.java", "BodyUseAPI": [], "Fixed commit": "d7c5c12f799a804711d81cc11b4db714fd975691", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2017-03-09T19:01:58Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.geecko.QuickLyric.MainActivity) (progressDialog.getContext())).isFinishing()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6012/buggy-version/QuickLyric.src.main.java.com.geecko.QuickLyric.utils.Spotify.java", "BodyUseAPI": [], "Fixed commit": "bc33b15124330e951c7767ed79e241829e53352c", "Url": "https://api.github.com/repos/QuickLyric/QuickLyric", "Date": "2016-08-03T10:24:22Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.inventory.IInventory.getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((itemstack1.getItem().getDamage(itemstack1)) == (itemstack1.getMaxDamage())) this.craftMatrix.decrStackSize(i, 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8334/buggy-version/common.mods.cc.rock.inventory.SlotCraftingCC.java", "BodyUseAPI": [], "Fixed commit": "37065bbda8ca7d17a6d161befb358e413606636b", "Url": "https://api.github.com/repos/Rock48/CookingCraft", "Date": "2013-08-30T00:33:42Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nist.javax.sip.header.Via.hasParameter(Via.RPORT)", "gov.nist.javax.sip.message.SIPMessage.getTopmostVia()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!hasRPort) && ((topMostVia.getPort()) != (peerPacketSourcePort))) { if (gov.nist.javax.sip.stack.UDPMessageChannel.logger.isLoggingEnabled(LogWriter.TRACE_DEBUG)) { gov.nist.javax.sip.stack.UDPMessageChannel.logger.logDebug(((((\"setting rport since viaPort \" + (topMostVia.getPort())) + \" different than peerPacketSourcePort \") + (peerPacketSourcePort)) + \" so that the response can be routed back\")); } hasRPort = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4666/buggy-version/src.gov.nist.javax.sip.stack.UDPMessageChannel.java", "BodyUseAPI": ["gov.nist.core.StackLogger.logDebug(((((\"setting rport since viaPort \" + (topMostVia.getPort())) + \" different than peerPacketSourcePort \") + (peerPacketSourcePort)) + \" so that the response can be routed back\"))", "gov.nist.javax.sip.header.Via.getPort()"], "Fixed commit": "76991593096c8172063c318a8dda166a963833ac", "Url": "https://api.github.com/repos/AlerantAppNGIN/jain-sip", "Date": "2016-04-04T17:24:04Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nist.javax.sip.header.Via.hasParameter(Via.RPORT)", "gov.nist.javax.sip.header.ViaList.getFirst()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!hasRPort) && ((v.getPort()) != (peerPort))) { if (gov.nist.javax.sip.stack.ConnectionOrientedMessageChannel.logger.isLoggingEnabled(LogWriter.TRACE_DEBUG)) { gov.nist.javax.sip.stack.ConnectionOrientedMessageChannel.logger.logDebug(((((\"setting rport since viaPort \" + (v.getPort())) + \" different than peerPacketSourcePort \") + (peerPort)) + \" so that the response can be routed back\")); } hasRPort = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4666/buggy-version/src.gov.nist.javax.sip.stack.ConnectionOrientedMessageChannel.java", "BodyUseAPI": ["gov.nist.javax.sip.header.Via.getPort()", "gov.nist.core.StackLogger.logDebug(((((\"setting rport since viaPort \" + (v.getPort())) + \" different than peerPacketSourcePort \") + (peerPort)) + \" so that the response can be routed back\"))"], "Fixed commit": "76991593096c8172063c318a8dda166a963833ac", "Url": "https://api.github.com/repos/AlerantAppNGIN/jain-sip", "Date": "2016-04-04T17:24:04Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.widget.RecyclerView.getChildPosition(android.view.View)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (position == (android.support.v7.widget.RecyclerView.NO_POSITION)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2026/buggy-version/library.src.main.java.com.kiguruming.recyclerview.itemdecoration.PinnedHeaderItemDecoration.java", "BodyUseAPI": [], "Fixed commit": "0bca9703ecb4bb20918ce95383d085de992c5476", "Url": "https://api.github.com/repos/takahr/pinned-section-item-decoration", "Date": "2016-01-03T21:20:20Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["exchange.getIn().getBody(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (body == null) { request.setEntity(null); }else { request.setEntity(body, mediaType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/628/buggy-version/components.camel-restlet.src.main.java.org.apache.camel.component.restlet.DefaultRestletBinding.java", "BodyUseAPI": ["org.restlet.Request.setEntity(java.lang.String,org.restlet.data.MediaType)"], "Fixed commit": "3580582d42358ec073c6d7bf7bdcf59420052b9f", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-10-08T14:16:39Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) { if (!(com.github.jamesnorris.flow.PermissionChecker.check(sender, RegulatedAction.USE_BASE_COMMAND))) { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"You don't have the permission to use that command!\")); return true; } com.github.jamesnorris.flow.command.CommandBase.BASE_MENU.showPage(sender, 1); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4485/buggy-version/src.main.java.com.github.jamesnorris.flow.command.CommandBase.java", "BodyUseAPI": [], "Fixed commit": "2f2058dd371f90173d5a183cc829ae81baef5c9f", "Url": "https://api.github.com/repos/ImranDoet/Flow", "Date": "2017-08-24T00:35:32Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (prefix == null) { try { return new java.io.FileInputStream(path); } catch (java.io.FileNotFoundException e) { throw new org.pac4j.core.exception.TechnicalException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2647/buggy-version/pac4j-core.src.main.java.org.pac4j.core.util.CommonHelper.java", "BodyUseAPI": [], "Fixed commit": "94fc5c3e3d155e1b3ec876951e4053260819eaa8", "Url": "https://api.github.com/repos/garpinc/pac4j", "Date": "2016-03-29T14:10:32Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ref == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7866/buggy-version/Spriter.src.com.brashmonkey.spriter.objects.SpriterObject.java", "BodyUseAPI": [], "Fixed commit": "8169fa53640b13163184cd884e4e35b1f6c16f07", "Url": "https://api.github.com/repos/MAW016/spriter", "Date": "2014-02-21T14:39:02Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.usergrid.rest.applications.ServiceResource.executeServiceRequest(javax.ws.rs.core.UriInfo,org.apache.usergrid.rest.ApiResponse,ServiceAction.DELETE,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(sr.getResultsType().equals(ServiceResults.Type.CONNECTION))) && (!(sr.getResultsType().equals(ServiceResults.Type.COLLECTION)))) { for (org.apache.usergrid.persistence.Entity entity : sr.getEntities()) { if ((entity.getProperty(AssetUtils.FILE_METADATA)) != null) { binaryStore.delete(services.getApplicationId(), entity); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/751/buggy-version/stack.rest.src.main.java.org.apache.usergrid.rest.applications.ServiceResource.java", "BodyUseAPI": ["org.apache.usergrid.rest.applications.ServiceResults.getEntities()"], "Fixed commit": "5000c332454b2162044f35ba350835ed5509ef11", "Url": "https://api.github.com/repos/snoopdave/usergrid", "Date": "2015-04-01T16:16:40Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mStickmanFX.mType) == (StickmanFX.TYPE.FEMALE)) mAnimationPartFX.add(new de.dfki.stickmanfx.animationlogic.AnimationContentFX(mStickmanFX.mFemaleHairFX, \"Translate\", (-2000))); else mAnimationPartFX.add(new de.dfki.stickmanfx.animationlogic.AnimationContentFX(mStickmanFX.mMaleHairFX, \"Translate\", (-2000)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7590/buggy-version/src.de.dfki.stickmanfx.animation.environmentfx.BombeExplosion.java", "BodyUseAPI": [], "Fixed commit": "fe132bcb90096b3f5ff511e520187d5f405106ed", "Url": "https://api.github.com/repos/RobbieGUO/Stickman", "Date": "2016-08-12T21:39:56Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (androidId == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4920/buggy-version/app.src.main.java.net.aliveplex.alive.on_timeonandroid.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3de125de1727a0d19c3bdabf63fd1ae3c81671bd", "Url": "https://api.github.com/repos/On-time/On-time-on-Android", "Date": "2017-02-18T14:39:55Z"},
{"Line": "=>1148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLocalCloud) { return !(org.cloudifysource.dsl.utils.ServiceUtils.isPortFree(OpenspacesConstants.DEFAULT_LOCALCLOUD_LUS_PORT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/9129/buggy-version/CLI.src.main.java.org.cloudifysource.shell.installer.LocalhostGridAgentBootstrapper.java", "BodyUseAPI": [], "Fixed commit": "0ba7caa591c8560443cf05edc9e950f47a83d320", "Url": "https://api.github.com/repos/CloudifySource/cloudify", "Date": "2013-07-18T09:32:29Z"},
{"Line": "=>880", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(com.ferg.awfulapp.util.AwfulUtils.isTablet(this))) && (!(prefs.transformer.equals(\"Disabled\")))) { mViewPager.setPageTransformer(true, com.ferg.awfulapp.util.AwfulUtils.getViewPagerTransformer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5884/buggy-version/Awful.apk.src.main.java.com.ferg.awfulapp.ForumsIndexActivity.java", "BodyUseAPI": [], "Fixed commit": "d43c8dd3ca9d94ffea95fa7bb44d8ebfab5c7217", "Url": "https://api.github.com/repos/Sereri/Awful.apk", "Date": "2015-05-20T19:10:03Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextSweepTimeMillis) > (now + (ttl / 2))) { nextSweepTimeMillis = now + (ttl / 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1803/buggy-version/src.main.java.org.jrivets.util.container.LimitedKeyValueHolder.java", "BodyUseAPI": [], "Fixed commit": "acd54f9c484ca5a777eadc33c01a0b54dbd07435", "Url": "https://api.github.com/repos/jrivets/jrivets-common", "Date": "2015-11-07T03:43:55Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { settings.setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/9077/buggy-version/applib.src.main.java.com.king.applib.base.webview.SimpleWebView.java", "BodyUseAPI": [], "Fixed commit": "a844bbecb4df058c8d8ea775c85b30ec1861e3df", "Url": "https://api.github.com/repos/hubme/WorkHelperApp", "Date": "2017-08-11T15:08:09Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ArgumentComparator.ComparatorObject.isEquivalent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!correct) return correct;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8040/buggy-version/src.ArgumentComparator.ComparatorTree.java", "BodyUseAPI": [], "Fixed commit": "68280d1e534b82841b7ff829a0b8efb97e0f69d1", "Url": "https://api.github.com/repos/mahinshaw/msproject", "Date": "2014-03-29T16:44:39Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["f.getType().toString()", "this.tdsc.getFieldType(i).toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((i >= 0) && (i < (this.tfields.length))) && (str1.equals(str2))) { this.tfields[i] = f; }else { throw new java.lang.RuntimeException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/712/buggy-version/mysimpledb.src.java.simpledb.Tuple.java", "BodyUseAPI": [], "Fixed commit": "cdbc39f09252925ec540e4593252b93263021340", "Url": "https://api.github.com/repos/awbecker/cosc460", "Date": "2014-09-10T17:44:00Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck.getLine(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(line.isEmpty())) { final int start = getLineStart(line); if (indentLevel.isGreaterThan(start)) { logChildError(lineNum, start, indentLevel); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7812/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler.getLineStart(java.lang.String)"], "Fixed commit": "88ca1c3a2bd3aff24d3d6028608407db52773c58", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2015-12-17T21:59:15Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (json != null) android.util.Log.i((\"sharepreferences get\" + key), json);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8317/buggy-version/src.com.personlife.utils.ComplexPreferences.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,java.lang.String)"], "Fixed commit": "78f0c067d93ebbd97ef76496622b42dca270df91", "Url": "https://api.github.com/repos/yaocaigen/PersonLife", "Date": "2015-08-29T04:46:41Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ListView.getAdapter()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (caa == null) { java.util.ArrayList<br.ufsm.brunodea.tcc.model.EventComment> comments = new java.util.ArrayList<br.ufsm.brunodea.tcc.model.EventComment>(); comments.add(event_comment); caa = new br.ufsm.brunodea.tcc.comment.CommentArrayAdapter(this, comments); mListViewComments.setAdapter(caa); }else { caa.add(event_comment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7003/buggy-version/src.br.ufsm.brunodea.tcc.comment.EventCommentActivity.java", "BodyUseAPI": ["br.ufsm.brunodea.tcc.comment.CommentArrayAdapter.add(br.ufsm.brunodea.tcc.model.EventComment)"], "Fixed commit": "7acbb614e61ec3b17a857af4cbf6a8b60181f007", "Url": "https://api.github.com/repos/brunodea/infocity", "Date": "2012-12-20T22:50:57Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(targetFile.getParentFile().mkdirs())) || (!(targetFile.createNewFile()))) { throw new org.apache.maven.plugin.MojoExecutionException(\"Unable to create output file\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4822/buggy-version/src.main.java.pt.davidafsilva.maven.filemerger.FileMergerMojo.java", "BodyUseAPI": [], "Fixed commit": "d386696969d3ac9caae3f24cd42a6ed6b28a2088", "Url": "https://api.github.com/repos/davidafsilva/file-merger-maven-plugin", "Date": "2015-04-29T22:57:57Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node.getChildren().size()) == 0) { _serialized.append(\"{\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/771/buggy-version/src.main.java.org.geppetto.core.model.state.visitors.SerializeTreeVisitor.java", "BodyUseAPI": [], "Fixed commit": "a5004ac7e46e61081605cba8031457105ae3d014", "Url": "https://api.github.com/repos/openworm/org.geppetto.core", "Date": "2014-09-18T16:50:56Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node.getChildren().size()) == 0) { _serialized.append(\"{\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/771/buggy-version/src.main.java.org.geppetto.core.model.state.visitors.SerializeTreeVisitor.java", "BodyUseAPI": [], "Fixed commit": "a5004ac7e46e61081605cba8031457105ae3d014", "Url": "https://api.github.com/repos/openworm/org.geppetto.core", "Date": "2014-09-18T16:50:56Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((_serialized.charAt(((_serialized.length()) - 1))) == '{') || ((_serialized.charAt(((_serialized.length()) - 1))) == ',')) { namePath = (\"\\\"\" + (node.getName())) + \"\\\":\"; }else { namePath = (\"{\\\"\" + (node.getName())) + \"\\\":\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/771/buggy-version/src.main.java.org.geppetto.core.model.state.visitors.SerializeTreeVisitor.java", "BodyUseAPI": [], "Fixed commit": "a5004ac7e46e61081605cba8031457105ae3d014", "Url": "https://api.github.com/repos/openworm/org.geppetto.core", "Date": "2014-09-18T16:50:56Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((_serialized.charAt(((_serialized.length()) - 1))) == '{') || ((_serialized.charAt(((_serialized.length()) - 1))) == ',')) { namePath = (\"\\\"\" + (node.getName())) + \"\\\":\"; }else { namePath = (\"{\\\"\" + (node.getName())) + \"\\\":\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/771/buggy-version/src.main.java.org.geppetto.core.model.state.visitors.SerializeTreeVisitor.java", "BodyUseAPI": [], "Fixed commit": "a5004ac7e46e61081605cba8031457105ae3d014", "Url": "https://api.github.com/repos/openworm/org.geppetto.core", "Date": "2014-09-18T16:50:56Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (skills != null) { criteria.createAlias(\"job.skillSet\", \"skillSet\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4523/buggy-version/src.main.java.vn.com.hiringviet.dao.impl.JobDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "19c0fee68990636559212fe361d72e53ac7b1e9d", "Url": "https://api.github.com/repos/aholake/hiringviet", "Date": "2016-08-18T01:49:15Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (skipClass(className)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4090/buggy-version/activejpa-core.src.main.java.org.activejpa.enhancer.DomainClassFileTransformer.java", "BodyUseAPI": [], "Fixed commit": "26cd0e64b484659d50d4456e26443eda20097647", "Url": "https://api.github.com/repos/ActiveJpa/activejpa", "Date": "2014-09-26T11:47:08Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (query == null) return gene;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4594/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.util.GeneUtils.java", "BodyUseAPI": [], "Fixed commit": "ae687484ba8fa62608031b889a2bd47783aba4db", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2017-04-14T23:13:59Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (firstNumber.getText().equals(\"-\")) { firstNumber.setText(\"\"); }else { switch (choice) { case \"+\" : resultValue.setText((((java.lang.Double.parseDouble(firstNumber.getText())) + (java.lang.Double.parseDouble(secondNumber.getText()))) + \"\")); break; case \"-\" : resultValue.setText((((java.lang.Double.parseDouble(firstNumber.getText())) - (java.lang.Double.parseDouble(secondNumber.getText()))) + \"\")); break; case \"*\" : resultValue.setText((((java.lang.Double.parseDouble(firstNumber.getText())) * (java.lang.Double.parseDouble(secondNumber.getText()))) + \"\")); break; case \"/\" : if ((java.lang.Double.parseDouble(secondNumber.getText())) == 0) resultValue.setText(\"Cannot divide by 0\"); else resultValue.setText((((java.lang.Double.parseDouble(firstNumber.getText())) / (java.lang.Double.parseDouble(secondNumber.getText()))) + \"\")); break; case \"%\" : resultValue.setText((((java.lang.Double.parseDouble(firstNumber.getText())) % (java.lang.Double.parseDouble(secondNumber.getText()))) + \"\")); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2952/buggy-version/CalculatorFrame.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "javax.swing.JLabel.getText()", "javax.swing.JLabel.setText(java.lang.String)", "javax.swing.JLabel.setText(java.lang.String)", "javax.swing.JLabel.setText(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "javax.swing.JLabel.getText()", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "javax.swing.JLabel.getText()", "javax.swing.JLabel.setText(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "javax.swing.JLabel.getText()", "javax.swing.JLabel.setText(java.lang.String)", "javax.swing.JLabel.setText(java.lang.String)", "javax.swing.JLabel.getText()"], "Fixed commit": "c2a08df387234b3b7b0b6b5990fd522374fd81a9", "Url": "https://api.github.com/repos/Jaufnet6/ReichenbachSornette_POO1", "Date": "2017-05-19T23:44:56Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["obj.getGlobalBounds().intersection(org.jsfml.graphics.FloatRect)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value != null) obj_player_c.Touche();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/9021/buggy-version/src.controllers.Collision_c.java", "BodyUseAPI": [], "Fixed commit": "a5eecfb26bdac33fa6bda23c74a8a17a1472e356", "Url": "https://api.github.com/repos/Karetho/Bomberman", "Date": "2016-01-23T12:58:16Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(i.getName().equals(\"null\"))) { java.lang.String UUID = \"\"; if (((i.getUuids()) != null) && ((i.getUuids().length) != 0)) { for (int ID = 0; ID < (i.getUuids().length); ID++) { UUID += (((\"UUID \" + ID) + \": \") + (i.getUuids()[ID])) + \"\\n\"; } } if ((i.getType()) == (android.bluetooth.BluetoothDevice.DEVICE_TYPE_LE)) { names.add((((((\"Alias: \" + (i.getName())) + \" (LOW ENERGY)\\nAddress: \") + (i.getAddress())) + \"\\n\") + UUID)); }else { names.add((((((\"Alias: \" + (i.getName())) + \"\\nAddress: \") + (i.getAddress())) + \"\\n\") + UUID)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/799/buggy-version/app.src.main.java.com.oliver.bathurst.individualproject.BeaconActivity.java", "BodyUseAPI": ["android.bluetooth.BluetoothDevice.getUuids()", "android.bluetooth.BluetoothDevice.getType()", "java.util.ArrayList<java.lang.String>.add((((((\"Alias: \" + (i.getName())) + \"  (LOW ENERGY)\\nAddress: \") + (i.getAddress())) + \"\\n\") + UUID))", "android.bluetooth.BluetoothDevice.getName()", "android.bluetooth.BluetoothDevice.getUuids()", "android.bluetooth.BluetoothDevice.getUuids()", "android.bluetooth.BluetoothDevice.getAddress()", "java.util.ArrayList<java.lang.String>.add((((((\"Alias: \" + (i.getName())) + \"\\nAddress: \") + (i.getAddress())) + \"\\n\") + UUID))", "android.bluetooth.BluetoothDevice.getName()", "android.bluetooth.BluetoothDevice.getUuids()", "android.bluetooth.BluetoothDevice.getAddress()"], "Fixed commit": "8622dfabf7b3d342e9e79919688ff12137df0f84", "Url": "https://api.github.com/repos/OliverBathurst/Individual-Project", "Date": "2017-10-16T18:04:42Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalHours >= 24) { return ret + \" tomorrow morning\"; }else { return ret; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4906/buggy-version/src.boston.Bus.Map.data.TimeBounds.java", "BodyUseAPI": [], "Fixed commit": "d8a7c18ae6d296bd3cf18b1df098a857d9d6e6e5", "Url": "https://api.github.com/repos/bostonbusmap/bostonbusmap", "Date": "2012-11-11T16:48:38Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((armies.size()) == 1) gameState = Engine.END_GAME; else if ((donor.troops) > 1) gameState = Engine.OCCUPY; else { gameState = Engine.ATTACK_A; donor.toggleSpecialOff(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6254/buggy-version/src.Engine.java", "BodyUseAPI": [], "Fixed commit": "f3b9f093eabb300e407bcdcde6c48f7668a57095", "Url": "https://api.github.com/repos/bayofpigs/ilnibor-risk", "Date": "2013-06-17T18:47:51Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(playerCar.getIsDestroyed())) { game.batch.draw(playerCar.getSprite(), playerCar.getSprite().getX(), playerCar.getSprite().getY(), playerCar.getSprite().getOriginX(), playerCar.getSprite().getOriginY(), playerCar.getSprite().getWidth(), playerCar.getSprite().getHeight(), 1, 1, playerCar.getSprite().getRotation()); }else { game.batch.draw(explosionCarAnimations.get(0).getCurrentFrame(), ((playerCar.getMidXPos()) - ((explosionCarAnimations.get(0).getSpriteWidth()) / 2)), ((playerCar.getMidYPos()) - ((explosionCarAnimations.get(0).getSpriteHeight()) / 2))); explosionCarAnimations.get(0).update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6644/buggy-version/core.src.schultz.personal.cor.main.Track1.java", "BodyUseAPI": ["playerCar.getSprite().getY()", "playerCar.getSprite().getHeight()", "schultz.personal.cor.helpers.Car.getMidXPos()", "playerCar.getSprite().getRotation()", "game.batch.draw(playerCar.getSprite(),playerCar.getSprite().getX(),playerCar.getSprite().getY(),playerCar.getSprite().getOriginX(),playerCar.getSprite().getOriginY(),playerCar.getSprite().getWidth(),playerCar.getSprite().getHeight(),int,int,playerCar.getSprite().getRotation())", "schultz.personal.cor.helpers.Car.getSprite()", "schultz.personal.cor.helpers.Car.getSprite()", "schultz.personal.cor.helpers.Car.getSprite()", "schultz.personal.cor.helpers.Car.getMidYPos()", "schultz.personal.cor.helpers.Car.getSprite()", "playerCar.getSprite().getOriginY()", "schultz.personal.cor.helpers.Car.getSprite()", "game.batch.draw(explosionCarAnimations.get(0).getCurrentFrame(),((playerCar.getMidXPos()) - ((explosionCarAnimations.get(0).getSpriteWidth()) / 2)),((playerCar.getMidYPos()) - ((explosionCarAnimations.get(0).getSpriteHeight()) / 2)))", "playerCar.getSprite().getWidth()", "schultz.personal.cor.helpers.Car.getSprite()", "schultz.personal.cor.helpers.Car.getSprite()", "playerCar.getSprite().getX()", "schultz.personal.cor.helpers.Car.getSprite()", "playerCar.getSprite().getOriginX()"], "Fixed commit": "3d50447af530e49bec2216cba540ec50ba1c2bad", "Url": "https://api.github.com/repos/Elaguy/COR", "Date": "2017-12-26T16:41:32Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userProfile.getUserName().equals(messageAdapter.getLastSentMessage().getName())) { mRecyclerView.smoothScrollToPosition((friendlyMessageCount - 1)); }else { toggleNewMessageButtonVisibility(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8412/buggy-version/app.src.main.java.com.alen.firebasesampleproject.messaging.MessageFragment.java", "BodyUseAPI": [], "Fixed commit": "ba580ebd25ae7fae88be7249e014ce0d2e917049", "Url": "https://api.github.com/repos/asiljan/FirebaseChat", "Date": "2016-09-09T08:10:12Z"},
{"Line": "=>1744", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mDisconnectParams) != null) && ((mDisconnectParams.mReason) != null)) { reason = mDisconnectParams.mReason; }else if ((mDcFailCause) != null) { reason = mDcFailCause.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5473/buggy-version/src.java.com.android.internal.telephony.dataconnection.DataConnection.java", "BodyUseAPI": [], "Fixed commit": "b2521a79c0ca9e5cf076cab452316e6507997558", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-opt-telephony", "Date": "2015-05-13T23:40:45Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jobLock.lock()) == false) { throw new java.lang.IllegalStateException(\"Cannot start job scheduler due to lack of job lock\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1547/buggy-version/job.src.main.java.org.apache.kylin.job.impl.threadpool.DefaultScheduler.java", "BodyUseAPI": [], "Fixed commit": "0470d0a1dc3a4c52ee6922495005ef51484dd8d2", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2015-07-04T23:30:18Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value == null) { statement.setNull(index, sqlType); }else { statement.setObject(index, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2046/buggy-version/dbfit-java.core.src.main.java.dbfit.fixture.StatementExecution.java", "BodyUseAPI": ["java.sql.PreparedStatement.setObject(int,java.lang.Object)"], "Fixed commit": "22b3d971cbb3555c68333c337be0ad9a020a0d90", "Url": "https://api.github.com/repos/dbfit/dbfit", "Date": "2014-06-13T20:19:41Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (citiReference == null) throw new java.lang.Exception((\"No se pudo determinar el c\u00f3digo de impuesto para \" + (rs.getString(com.jmm.exportaCITIRG3685.process.ExportaCITI.IX_INVOICE_DOCUMENT_NO))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3937/buggy-version/src.com.jmm.exportaCITIRG3685.process.ExportaCITI.java", "BodyUseAPI": [], "Fixed commit": "772be64606857e900991e326cf1aee6b7f7520d7", "Url": "https://api.github.com/repos/saulojg/Libertya15.03CITI", "Date": "2015-11-03T22:02:53Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fSplit instanceof org.apache.hadoop.hive.ql.io.orc.OrcSplit)) { reader = org.apache.hadoop.hive.ql.io.orc.OrcFile.createReader(fs, path); }else { org.apache.hadoop.hive.ql.io.orc.OrcSplit orcSplit = ((org.apache.hadoop.hive.ql.io.orc.OrcSplit) (fSplit)); org.apache.hadoop.hive.ql.io.orc.Reader.FileMetaInfo fMetaInfo = orcSplit.getFileMetaInfo(); reader = org.apache.hadoop.hive.ql.io.orc.OrcFile.createReader(fs, path, fMetaInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8599/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.io.orc.VectorizedOrcInputFormat.java", "BodyUseAPI": [], "Fixed commit": "efa89c210f7891c55e0c8deadf6648dcef2416be", "Url": "https://api.github.com/repos/thejasmn/hive", "Date": "2013-10-23T02:19:05Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userName == null) { throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6497/buggy-version/src.main.java.com.jomm.terroir.business.ServiceUserImpl.java", "BodyUseAPI": [], "Fixed commit": "c79a24810487c33cd621d6003cf8c53d9ee65b27", "Url": "https://api.github.com/repos/MaicMoulinot/Terroir", "Date": "2016-02-18T14:02:30Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (email == null) { throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6497/buggy-version/src.main.java.com.jomm.terroir.business.ServiceUserImpl.java", "BodyUseAPI": [], "Fixed commit": "c79a24810487c33cd621d6003cf8c53d9ee65b27", "Url": "https://api.github.com/repos/MaicMoulinot/Terroir", "Date": "2016-02-18T14:02:30Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isOnePair()) { this.rank = 1; }else { this.rank = 0; for (int i = 0; i < (this.kinds.length); i++) { this.highKinds.add(this.kinds[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6346/buggy-version/src.PokerHand.java", "BodyUseAPI": [], "Fixed commit": "ad4498c112d1a8b4f1107d8abd66ca394dbff2a6", "Url": "https://api.github.com/repos/ChrisWongAtCUHK/Ranking-Poker-Hands", "Date": "2017-01-01T14:54:45Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((factory) == null) { factory = javax.xml.parsers.DocumentBuilderFactory.newInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6521/buggy-version/Source.src.main.java.com.quailstreetsoftware.newsreader.model.Subscription.java", "BodyUseAPI": [], "Fixed commit": "4b01e62369a0b1d6c41410c180452ac04db70624", "Url": "https://api.github.com/repos/jrury/rssreader", "Date": "2015-04-18T21:45:00Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((factory) == null) { javax.xml.parsers.DocumentBuilderFactory.newInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6521/buggy-version/Source.src.main.java.com.quailstreetsoftware.newsreader.model.Subscription.java", "BodyUseAPI": [], "Fixed commit": "4b01e62369a0b1d6c41410c180452ac04db70624", "Url": "https://api.github.com/repos/jrury/rssreader", "Date": "2015-04-18T21:45:00Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"Person\".equals(string)) || (\"PERSON\".equals(string))) return \"People\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/161/buggy-version/hex_repo.src.hex.repo.utils.Inflection.java", "BodyUseAPI": [], "Fixed commit": "68ff3caafdc9293672b7bf0f604e90630f5de8d3", "Url": "https://api.github.com/repos/thejayvm/hex", "Date": "2014-11-20T07:32:30Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"person\".equals(string.toLowerCase())) return \"people\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/161/buggy-version/hex_repo.src.hex.repo.utils.Inflection.java", "BodyUseAPI": [], "Fixed commit": "68ff3caafdc9293672b7bf0f604e90630f5de8d3", "Url": "https://api.github.com/repos/thejayvm/hex", "Date": "2014-11-20T07:32:30Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.otter.shared.common.utils.meta.DdlUtils.findTable(org.springframework.jdbc.core.JdbcTemplate,java.lang.String,java.lang.String,java.lang.String,com.alibaba.otter.shared.common.utils.meta.DdlUtilsFilter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (table == null) { throw new org.apache.commons.lang.exception.NestableRuntimeException(((((\"no found table [\" + (names.get(0))) + \".\") + (names.get(1))) + \"] , pls check\")); }else { return table; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2684/buggy-version/node.etl.src.main.java.com.alibaba.otter.node.etl.common.db.dialect.AbstractDbDialect.java", "BodyUseAPI": [], "Fixed commit": "f3d289fa4b7ee58d8ad5d4b0504c495217170ec9", "Url": "https://api.github.com/repos/alibaba/otter", "Date": "2013-09-04T05:00:55Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (answer == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6267/buggy-version/src.Questions.MultipleChoice.java", "BodyUseAPI": [], "Fixed commit": "d4cf59cb723246d29777ab8e34f0b5084689ffac", "Url": "https://api.github.com/repos/Nop1ks/Immutable", "Date": "2017-06-15T12:15:35Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.format(java.lang.String,double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (formattedNumber.endsWith(\".000\")) { formattedNumber = java.lang.String.format(\"%,d\", ((int) (count))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6664/buggy-version/src.Ic2ExpReactorPlanner.MaterialsList.java", "BodyUseAPI": [], "Fixed commit": "3524c6c0353d6ad33c71e354e77e6c132ce723ab", "Url": "https://api.github.com/repos/MauveCloud/Ic2ExpReactorPlanner", "Date": "2015-08-22T01:56:39Z"},
{"Line": "=>760", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name.equals(target[0])) { match = true; }else if (\"corpse\".equals(name)) { if (target[0].startsWith(\"corpse\")) { match = true; } }else if ((target[1]) != null) { match = matchText(target[1], name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7062/buggy-version/src.org.mingy.lunjian.CommandLine.java", "BodyUseAPI": ["org.mingy.lunjian.CommandLine.matchText(java.lang.String,java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "25e529de987141c070885d62504b721785dd806b", "Url": "https://api.github.com/repos/wuzhengmao/lunjian", "Date": "2017-03-08T06:35:41Z"},
{"Line": "=>736", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name.equals(target[0])) { match = true; }else if (\"corpse\".equals(name)) { if (target[0].startsWith(\"corpse\")) { match = true; } }else if ((target[1]) != null) { match = matchText(target[1], name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7062/buggy-version/src.org.mingy.lunjian.CommandLine.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "org.mingy.lunjian.CommandLine.matchText(java.lang.String,java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "25e529de987141c070885d62504b721785dd806b", "Url": "https://api.github.com/repos/wuzhengmao/lunjian", "Date": "2017-03-08T06:35:41Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((columns.length) > 0) { selections += \" AND \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7484/buggy-version/app.src.main.java.example.michaelmuccio.com.potrero_hill_neighborhood_app.PHSQLiteHelper.java", "BodyUseAPI": [], "Fixed commit": "c4ef4fafe8d14a3c0285372943495bdbca674eae", "Url": "https://api.github.com/repos/michaelmuccio/Potrero-Hill-Neighborhood-App", "Date": "2016-03-23T22:27:38Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(java.lang.String)", "android.content.Intent.getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((title != null) && (body != null)) { publishUpdate(new com.google.android.apps.dashclock.api.ExtensionData().visible(true).icon(R.drawable.ic_extension).status(title).expandedTitle(title).expandedBody(body).clickIntent(new android.content.Intent(this, de.onyxbits.drudgery.ProxyActivity.class))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1877/buggy-version/src.de.onyxbits.drudgery.DashclockExtensionService.java", "BodyUseAPI": ["new com.google.android.apps.dashclock.api.ExtensionData().visible(true).icon(R.drawable.ic_extension).status(title).expandedTitle(title).expandedBody(java.lang.String)", "new com.google.android.apps.dashclock.api.ExtensionData().visible(true).icon(R.drawable.ic_extension).status(java.lang.String)", "new com.google.android.apps.dashclock.api.ExtensionData().visible(true).icon(R.drawable.ic_extension).status(title).expandedTitle(java.lang.String)", "de.onyxbits.drudgery.DashclockExtensionService.publishUpdate(new com.google.android.apps.dashclock.api.ExtensionData().visible(true).icon(R.drawable.ic_extension).status(title).expandedTitle(title).expandedBody(body).clickIntent(new android.content.Intent(this, de.onyxbits.drudgery.ProxyActivity.class)))", "new com.google.android.apps.dashclock.api.ExtensionData().visible(true).icon(R.drawable.ic_extension).status(title).expandedTitle(title).expandedBody(body).clickIntent(android.content.Intent)"], "Fixed commit": "0a561258cad61541a6dfa24d896cfddf21e53f2a", "Url": "https://api.github.com/repos/onyxbits/Drudgery", "Date": "2013-11-05T22:47:06Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(jb.isJobBatchAborted())) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3430/buggy-version/core.src.com.mygdx.game.ObjectNPC.java", "BodyUseAPI": [], "Fixed commit": "b57b8e8011c8c89bca635924b953429f06a3a46b", "Url": "https://api.github.com/repos/kuohsuanlo/CyberpunkSimulator", "Date": "2017-04-21T02:19:11Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getSource()) == (this.viewMain.jmi_productsReport)) this.modelMain.generate(\"src\\\\reports\\\\ProductsReport.jrxml\", this.viewMain); else if ((e.getSource()) == (this.viewMain.jmi_salesReport)) this.modelMain.generate(\"src\\\\reports\\\\SalesReport.jrxml\", this.viewMain);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1583/buggy-version/src.controls.ControlMain.java", "BodyUseAPI": ["java.awt.event.ActionEvent.getSource()", "models.ModelMain.generate(java.lang.String,views.ViewMain)", "models.ModelMain.generate(java.lang.String,views.ViewMain)"], "Fixed commit": "64d1bada7a970142a77cfb9cc065992a2b432d9b", "Url": "https://api.github.com/repos/sknRaul/Acme_shop", "Date": "2016-11-11T01:04:39Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentByTag((((\"android:switcher:\" + (R.id.pager)) + \":\") + (viewPager.getCurrentItem())))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (fragment != null) { if ((fragment.getView()) != null) { fragment.getChildFragmentManager().popBackStack(null, FragmentManager.POP_BACK_STACK_INCLUSIVE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5292/buggy-version/MachMusicPlayer.src.com.andrewkiluk.machmusicplayer.activities.PlayListBuilderActivity.java", "BodyUseAPI": ["android.support.v4.app.Fragment.getChildFragmentManager()", "android.support.v4.app.Fragment.getView()", "fragment.getChildFragmentManager().popBackStack(<nulltype>,FragmentManager.POP_BACK_STACK_INCLUSIVE)"], "Fixed commit": "8475a308a7505e6185102802caa0b9e36f5f73b6", "Url": "https://api.github.com/repos/andrewkiluk/Mach-Music-Player", "Date": "2014-09-08T21:42:28Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (test_element == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7217/buggy-version/EventVizWebApp.app.sentiment_analysis.SocialMentionSentimentComponent.java", "BodyUseAPI": [], "Fixed commit": "9642832a2284c2ddc66415221ee4ccb37180021e", "Url": "https://api.github.com/repos/clembanas/EventViz-15", "Date": "2015-06-08T11:35:23Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sentimentAnalysisResult == null) { return jsonResult; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7217/buggy-version/EventVizWebApp.app.jsonGeneration.JsonResultGenerator.java", "BodyUseAPI": [], "Fixed commit": "9642832a2284c2ddc66415221ee4ccb37180021e", "Url": "https://api.github.com/repos/clembanas/EventViz-15", "Date": "2015-06-08T11:35:23Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((((name.getText().toString()) == null) || (\"\".equals(name.getText().toString()))) || (((name.getText().toString()) == null) || (\"\".equals(name.getText().toString())))) || (((name.getText().toString()) == null) || (\"\".equals(name.getText().toString())))) || (((name.getText().toString()) == null) || (\"\".equals(name.getText().toString())))) { android.widget.Toast.makeText(this, \"Please fill in all fields\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5102/buggy-version/src.com.wilddynamos.bookapp.activity.SignupActivity.java", "BodyUseAPI": [], "Fixed commit": "9ec6167201dad2213b6863ce0f97cb3bde4a3063", "Url": "https://api.github.com/repos/JunqiWang/BookFinder", "Date": "2013-11-30T23:12:02Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i - (instance.classValue())) == 0) expectedValue = 1.0; else expectedValue = 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7205/buggy-version/src.FeedForwardNeuralNetwork.FeedForwardNeuralNetworkAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "9805c766f3f649aea1e6c975d48942c20004c2d6", "Url": "https://api.github.com/repos/azkahi/TubesAI2", "Date": "2016-11-18T18:11:47Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (teacherObj.has(com.myapp.handbook.domain.RoleProfile.IMAGE_URL)) teacherProfile.setImageUrl(teacherObj.getString(com.myapp.handbook.domain.RoleProfile.IMAGE_URL));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/744/buggy-version/mobile.Android.app.src.main.java.com.myapp.handbook.domain.RoleProfile.java", "BodyUseAPI": ["com.myapp.handbook.domain.RoleProfile.setImageUrl(teacherObj.getString(com.myapp.handbook.domain.RoleProfile.IMAGE_URL))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "214de7a3d0fbf8196e4f9c8b11bff8c6a86804bf", "Url": "https://api.github.com/repos/ashutoshpurohit/SCHPARERP", "Date": "2017-12-13T00:22:03Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (movies != null) { this.movies.addAll(movies); notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4964/buggy-version/app.src.main.java.app.we.go.movies.movielist.MovieAdapter.java", "BodyUseAPI": ["java.util.List<app.we.go.movies.remote.json.Movie>.addAll(java.util.List<app.we.go.movies.remote.json.Movie>)"], "Fixed commit": "2891bdc24c2784ab2752aba1dda15ef2ea625f86", "Url": "https://api.github.com/repos/talosdev/popular-movies-app", "Date": "2016-05-25T13:22:19Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit2.Response<app.we.go.movies.remote.json.MovieList>.body()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((movieList.getMovies()) != null) { cachedMovies.addAll(movieList.getMovies()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4964/buggy-version/app.src.main.java.app.we.go.movies.movielist.MovieListPresenter.java", "BodyUseAPI": ["java.util.List<app.we.go.movies.remote.json.Movie>.addAll(movieList.getMovies())", "app.we.go.movies.remote.json.MovieList.getMovies()"], "Fixed commit": "2891bdc24c2784ab2752aba1dda15ef2ea625f86", "Url": "https://api.github.com/repos/talosdev/popular-movies-app", "Date": "2016-05-25T13:22:19Z"},
{"Line": "=>861", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((music) != null) music.setVolume(1.0F);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8362/buggy-version/core.src.com.tint.specular.game.GameState.java", "BodyUseAPI": [], "Fixed commit": "6901d9ad88bf44f28ecd61eaf286c0d9333a7565", "Url": "https://api.github.com/repos/onoff97/Specular", "Date": "2014-08-24T17:46:49Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((music) != null) music.setVolume(0.25F);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8362/buggy-version/core.src.com.tint.specular.game.GameState.java", "BodyUseAPI": [], "Fixed commit": "6901d9ad88bf44f28ecd61eaf286c0d9333a7565", "Url": "https://api.github.com/repos/onoff97/Specular", "Date": "2014-08-24T17:46:49Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((product.getId()) == null) { product.setId(idGenerator.nextId(\"Product\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8786/buggy-version/src.main.java.com.irondish.mvc.SimpleProductCatalog.java", "BodyUseAPI": ["com.irondish.mvc.Product.setId(idGenerator.nextId(\"Product\"))"], "Fixed commit": "f0457f7949633fb57abf7e8466840716d6434e5a", "Url": "https://api.github.com/repos/lalyos-trainings/dishMvc", "Date": "2013-01-17T14:34:22Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["handlers.DBHandler.getGroup(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(group.getOwner().equalsIgnoreCase(ownerEmail))) throw new exceptions.CustomException(\"Group\", \"Unauthorized, you should be admin\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/27/buggy-version/src.handlers.GroupHandler.java", "BodyUseAPI": [], "Fixed commit": "89ba8a8fcbec0845e0182bbb81419e60b87bb375", "Url": "https://api.github.com/repos/samancro/EFIA-PROJ2", "Date": "2013-10-26T07:04:09Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (rawData != null) { response = validateTimeOrigin(response, rawData.timestamp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8713/buggy-version/src.com.google.android.vending.licensing.MyketServerManagedPolicy.java", "BodyUseAPI": ["com.google.android.vending.licensing.MyketServerManagedPolicy.validateTimeOrigin(int,rawData.timestamp)"], "Fixed commit": "f7ad2b7fe0700684855a252d2e90b6188496c6ae", "Url": "https://api.github.com/repos/komeilkamal/2048-Licensing-Sample", "Date": "2016-04-09T11:12:29Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (filter instanceof org.apache.kylin.metadata.filter.ConstantTupleFilter) { if (!(filter.evaluate(null, null))) { return new it.uniroma3.mat.extendedset.intset.ConciseSet(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2434/buggy-version/storage.src.main.java.org.apache.kylin.storage.filter.BitMapFilterEvaluator.java", "BodyUseAPI": ["org.apache.kylin.metadata.filter.TupleFilter.evaluate(<nulltype>,<nulltype>)"], "Fixed commit": "cf84933aee70902d43954cc93964021f2713e126", "Url": "https://api.github.com/repos/KylinOLAP/Kylin", "Date": "2015-03-24T02:54:36Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inStream.markSupported()) { inStream.reset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7252/buggy-version/OpenPGP-Keychain.src.org.sufficientlysecure.keychain.ui.DecryptActivity.java", "BodyUseAPI": ["java.io.InputStream.reset()"], "Fixed commit": "4fc4f09e84718efdfda41cbd7d8822a393e65a60", "Url": "https://api.github.com/repos/dschuermann/openpgp-keychain", "Date": "2013-03-15T23:24:06Z"},
{"Line": "=>663", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inStream.markSupported()) { inStream.mark(200); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7252/buggy-version/OpenPGP-Keychain.src.org.sufficientlysecure.keychain.ui.DecryptActivity.java", "BodyUseAPI": ["java.io.InputStream.mark(int)"], "Fixed commit": "4fc4f09e84718efdfda41cbd7d8822a393e65a60", "Url": "https://api.github.com/repos/dschuermann/openpgp-keychain", "Date": "2013-03-15T23:24:06Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URLConnection.getContentLength()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (contentLength == (-1)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7388/buggy-version/src.org.zub.dnb101ru.Downloader.java", "BodyUseAPI": [], "Fixed commit": "0cfaca93f2fa219137e6323345cd412fa7fd46a0", "Url": "https://api.github.com/repos/skalozubov/android-on-line-radio", "Date": "2013-02-20T21:59:46Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zub.dnb101ru.Downloader.DownloadFile(rt.getLatestTrackURL(),java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (downloadResult) { mBuilder.setContentText(\"Download complete\").setProgress(0, 0, false); mNotifyManager.notify(11112222, mBuilder.build()); }else { mBuilder.setContentText(\"Error is occurred\").setProgress(0, 0, false); mNotifyManager.notify(11112222, mBuilder.build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7388/buggy-version/src.org.zub.dnb101ru.PlayerActivity.java", "BodyUseAPI": [], "Fixed commit": "0cfaca93f2fa219137e6323345cd412fa7fd46a0", "Url": "https://api.github.com/repos/skalozubov/android-on-line-radio", "Date": "2013-02-20T21:59:46Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.Class, org.codefamily.libva.spi.PluginManager.Service>.putIfAbsent(java.lang.Class<T>,org.codefamily.libva.spi.PluginManager.Service<T>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (aService != null) { service = aService; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3193/buggy-version/libva-support.src.main.java.org.codefamily.libva.spi.PluginManager.java", "BodyUseAPI": [], "Fixed commit": "c4c04a878a1ea69f5275c45a43ae39a2eb2a9e04", "Url": "https://api.github.com/repos/zhuchunlai/libva", "Date": "2015-07-12T08:26:00Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["client.target(((ge.edu.freeuni.sdp.xo.rooms.service.RoomsService.LOGIN_SERVICE) + token)).request().get(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((response.getStatus()) != (Status.OK.getStatusCode())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2968/buggy-version/src.main.java.ge.edu.freeuni.sdp.xo.rooms.service.RoomsService.java", "BodyUseAPI": [], "Fixed commit": "39871ec9f4e63e707dc0b9b1c5936e9647fa9e51", "Url": "https://api.github.com/repos/freeuni-sdp/xo-rooms", "Date": "2015-06-28T19:22:02Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((left instanceof java.util.List) && (right instanceof java.util.List)) return railo.runtime.op.Operator.__equalsComplexEL(done, railo.runtime.type.wrap.ListAsArray.toArray(((java.util.List) (left))), railo.runtime.type.wrap.ListAsArray.toArray(((java.util.List) (right))), caseSensitive);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8707/buggy-version/railo-java.railo-core.src.railo.runtime.op.Operator.java", "BodyUseAPI": [], "Fixed commit": "d481ffcf9992c8e129209e7169c974cc68ae6d35", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-11-23T19:34:13Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (b != null) word = word.concat(b.getLetter().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4827/buggy-version/mtScrabble.src.essentials.objects.BrickList.java", "BodyUseAPI": ["b.getLetter().toString()", "java.lang.String.concat(b.getLetter().toString())", "essentials.objects.Brick.getLetter()"], "Fixed commit": "2f769907a80bb171e905ac86d276fa84b131db95", "Url": "https://api.github.com/repos/hanneseilers/mtScrabble", "Date": "2013-06-03T19:24:16Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (setting.equals(\"min_longitude\")) { try { newMinLongitude = (java.lang.Double.parseDouble(settingsCrsr.collectDescendantText(false))) / 1000000000; } catch (java.lang.Exception e) { } }else if (setting.equals(\"max_longitude\")) { try { newMaxLatitude = (java.lang.Double.parseDouble(settingsCrsr.collectDescendantText(false))) / 1000000000; } catch (java.lang.Exception e) { } }else if (setting.equals(\"min_latitude\")) { try { newMinLatitude = (java.lang.Double.parseDouble(settingsCrsr.collectDescendantText(false))) / 1000000000; } catch (java.lang.Exception e) { } }else if (setting.equals(\"max_latitude\")) { try { newMaxLatitude = (java.lang.Double.parseDouble(settingsCrsr.collectDescendantText(false))) / 1000000000; } catch (java.lang.Exception e) { } }else if (setting.equals(\"region_height\")) { try { newRegionWidth = java.lang.Integer.parseInt(settingsCrsr.collectDescendantText(false)); } catch (java.lang.Exception e) { } }else if (setting.equals(\"region_width\")) { try { newRegionHeight = java.lang.Integer.parseInt(settingsCrsr.collectDescendantText(false)); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5462/buggy-version/src.vanetsim.map.Map.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "f379518b9570631b89ff172fac7fc7b36fd172b0", "Url": "https://api.github.com/repos/VanetSim/VanetSim", "Date": "2014-11-02T11:57:25Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position) == 4) { if (form.getAddress().isEmpty()) { checkBox.setVisibility(View.INVISIBLE); }else { checkBox.setOnCheckedChangeListener(checkListener()); } }else { checkBox.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6029/buggy-version/app.src.main.java.com.example.mierul.myapplication21.Fragment.EditProfileFragment.java", "BodyUseAPI": [], "Fixed commit": "4c056d1f05a67411910d402c4b2187320e084651", "Url": "https://api.github.com/repos/sasuketaichou/MyApplication21", "Date": "2017-06-02T15:31:23Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((str.length()) > 0) && ((str.charAt(((str.length()) - 1))) == '\\n')) { output.print(str); }else { output.println(str); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8005/buggy-version/modules.wyil.src.wybs.lang.SyntaxError.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.print(java.lang.String)"], "Fixed commit": "e1829fd51a20e4956cc92bd652f43b07f5c8619b", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-12-07T03:57:53Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (c.equals(donor)) { gameState = Engine.ATTACK_A; donor.toggleSpecialOff(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7602/buggy-version/src.Engine.java", "BodyUseAPI": ["Country.toggleSpecialOff()"], "Fixed commit": "14c7e0064b8a9ed92ce676002cbf099a32ba962a", "Url": "https://api.github.com/repos/bayofpigs/ilnibor-risk", "Date": "2013-06-18T16:23:57Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getPlayerScoreAtIndex(i)) == (player.get(0).getScore())) { player.add(getPlayerList().get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8295/buggy-version/src.chalmers.TDA367.B17.gamemodes.scoreBasedGame.java", "BodyUseAPI": ["java.util.List<chalmers.TDA367.B17.model.Player>.add(getPlayerList().get(i))", "getPlayerList().get(int)"], "Fixed commit": "998302b379c4be8e93fcbf42c71480a20a8266cd", "Url": "https://api.github.com/repos/totteCh/B17", "Date": "2013-05-21T11:27:10Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arguments.size()) != (m.getParameterTypes().length)) { java.lang.System.out.println(invocation); throw new edu.cmu.cs.syzygy.NotImplementedException((\"Not enough parameter types: \" + invocation)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2481/buggy-version/Syzygy.src.edu.cmu.cs.syzygy.Predictor.java", "BodyUseAPI": [], "Fixed commit": "8cf9bf2a79ac930c4f50548d7f764233f01dfd20", "Url": "https://api.github.com/repos/cyrus-/syzygy", "Date": "2013-10-28T01:10:42Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((handler) != null) { handler.removeCallbacksAndMessages(null); handler = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/9196/buggy-version/multipleimageselect.src.main.java.com.darsh.multipleimageselect.activities.AlbumSelectActivity.java", "BodyUseAPI": [], "Fixed commit": "4523283b298ecb5b11e4835e2a4fb50aefead4f7", "Url": "https://api.github.com/repos/BassDay/MultipleImageSelect", "Date": "2016-04-08T02:10:36Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(secondaryTorpedoStore.isEmpty())) { firingSecondarySuccess = secondaryTorpedoStore.fire(1); wasPrimaryFiredLast = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/556/buggy-version/src.main.java.hu.bme.mit.spaceship.GT4500.java", "BodyUseAPI": ["hu.bme.mit.spaceship.TorpedoStore.fire(int)"], "Fixed commit": "0d23c6c22274fe4a6c1642a766fe7fa210818fbb", "Url": "https://api.github.com/repos/tamaskisshu/ivt-lab", "Date": "2017-03-31T07:27:02Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (utils.FileUtils.isDirectory(inPath)) { try { utils.FileUtils.listAllSubFiles(fileNames, java.nio.file.Paths.get(inPath), java.nio.file.Paths.get(inPath).toString()); } catch (java.io.IOException e) { e.printStackTrace(); } this.inPath = inPath; }else { java.lang.String fileName = java.nio.file.Paths.get(inPath).getFileName().toString(); fileNames.add(fileName); this.inPath = inPath.replace(fileName, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/9127/buggy-version/src.crypto.AES.java", "BodyUseAPI": [], "Fixed commit": "cf69018f1ed1fe7ecfbce3027fdb6e2991ae31de", "Url": "https://api.github.com/repos/ttson153/SecureFileSharing", "Date": "2017-03-19T17:07:18Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/719/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "fc548be8fdd758c1f94186df1f64595602e04fc2", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (m.lookingAt()) { java.lang.System.out.println(((Words.length) - 1)); }else { java.lang.System.out.println(Words.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8185/buggy-version/src.strings_2039.WordCounter.java", "BodyUseAPI": [], "Fixed commit": "0219c8a3a4b472881a7fd1a30cf0c900194d4a71", "Url": "https://api.github.com/repos/Votun/sberschool", "Date": "2016-09-12T09:21:15Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (socket.isClosed()) { com.cardshifter.server.clients.ClientSocketHandler.logger.info(((this) + \" socket closed\")); close(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3427/buggy-version/cardshifter-server.src.main.java.com.cardshifter.server.clients.ClientSocketHandler.java", "BodyUseAPI": [], "Fixed commit": "6d8a58ec499cd3bb1d5daa613fe570124b8e4b2d", "Url": "https://api.github.com/repos/Cardshifter/Cardshifter", "Date": "2014-10-21T11:29:51Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(rowProperties.usePreparedStatement())) { statement.executeBatch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/141/buggy-version/components.components-snowflake.src.main.java.org.talend.components.snowflake.runtime.SnowflakeRowWriter.java", "BodyUseAPI": [], "Fixed commit": "8754e0105cb338d4fa7e6121f8fb3a7470a49e50", "Url": "https://api.github.com/repos/Talend/components", "Date": "2017-09-05T14:13:15Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(rowProperties.propagateQueryResultSet())) { statement.executeBatch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/141/buggy-version/components.components-snowflake.src.main.java.org.talend.components.snowflake.runtime.SnowflakeRowWriter.java", "BodyUseAPI": [], "Fixed commit": "8754e0105cb338d4fa7e6121f8fb3a7470a49e50", "Url": "https://api.github.com/repos/Talend/components", "Date": "2017-09-05T14:13:15Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getContentResolver().query(android.net.Uri,java.lang.String[],<nulltype>,<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (convCur != null) { convCur.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7560/buggy-version/src.com.tinfoil.sms.settings.ImportTask.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "dd226616ef79f97849bba1ca4c382aa15c29e18b", "Url": "https://api.github.com/repos/tinfoilhat/tinfoil-sms", "Date": "2014-01-28T17:49:53Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) listener.onFinish(0, ConnectionStatus.TIMEOUT, 0, 0, null, null, OnConnectionResultListener.streamingStatus.DOWNLOAD);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6236/buggy-version/netup.src.main.java.ir.afshin.netup.base.InternetManager.java", "BodyUseAPI": [], "Fixed commit": "618088d6a7dbea8595a846150cff7251a54b1fd5", "Url": "https://api.github.com/repos/afshin-hoseini/Netup", "Date": "2016-03-10T04:25:39Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(result.equals(node.getLeft()))) { result.setLeft(node.getLeft()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6595/buggy-version/src.BST.java", "BodyUseAPI": ["BSTNode<T>.setLeft(node.getLeft())", "BSTNode<T>.getLeft()"], "Fixed commit": "708e632f81ead8f9def4184ca26afc829f5a53de", "Url": "https://api.github.com/repos/SidH97/PRQuadTree", "Date": "2017-10-20T16:41:49Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.niccholaspage.nSpleef.Filter.getArenaByPlayer(player)) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/702/buggy-version/src.com.niccholaspage.nSpleef.nSpleefArena.java", "BodyUseAPI": [], "Fixed commit": "e86b82faf3d7ea4c85846d7f62a4b4cedf75e099", "Url": "https://api.github.com/repos/niccholaspage/nSpleef", "Date": "2011-05-07T13:56:32Z"},
{"Line": "=>1007", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == baseChild) { if ((shadowHost.getParent()) != null) return shadowHost.getParent().getShadowVariable(name, recurse); }else return shadowHost.getShadowVariable(name, recurse);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1079/buggy-version/zk.src.org.zkoss.zk.ui.AbstractComponent.java", "BodyUseAPI": [], "Fixed commit": "b6bf8a680c38592419927de2c83393177331119b", "Url": "https://api.github.com/repos/chunfuchang/zk", "Date": "2015-04-21T10:13:16Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (allHighScoringWords.isEmpty()) { allHighScoringWords.add(new runner.Word(\"No words\", 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/9247/buggy-version/src.runner.Processor.java", "BodyUseAPI": ["java.util.ArrayList<runner.Word>.add(runner.Word)"], "Fixed commit": "ae12c22c9d2012fc305f2ab8be4d33e4e73fad9b", "Url": "https://api.github.com/repos/hjobrien/Root", "Date": "2016-03-22T05:00:08Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mData) != null) { return mData.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4191/buggy-version/app.src.main.java.me.unnikrishnanpatel.popularmovies.MovieAdapter.java", "BodyUseAPI": [], "Fixed commit": "b046db485dcccde1a29bd4c2b27a8117074e4e54", "Url": "https://api.github.com/repos/ukpa/popular-movies", "Date": "2016-04-16T11:47:24Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (role != null) { for (sx.blah.discord.handle.obj.IRole r : sender.getRolesForGuild(event.getMessage().getGuild())) { if (r.getID().equals(role.getID())) { return true; } } return false; }else { bd.setControlRole(\"everyone\"); com.cloudcraftgaming.database.DatabaseManager.getManager().updateData(bd); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6675/buggy-version/src.main.java.com.cloudcraftgaming.utils.PermissionChecker.java", "BodyUseAPI": ["r.getID().equals(role.getID())", "sx.blah.discord.handle.obj.IRole.getID()"], "Fixed commit": "f25891f0855dd903a439e5bf0728d1fabd4edf57", "Url": "https://api.github.com/repos/NovaFox161/DisCal-Discord-Bot", "Date": "2017-03-06T19:15:43Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (att.getName().equals(\"font-name\")) createdStyle.append(((\"font-family:\" + (att.getValue())) + \";\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8680/buggy-version/src.main.java.org.oruji.odt2html.App.java", "BodyUseAPI": ["org.jdom.Attribute.getValue()", "java.lang.StringBuilder.append(((\"font-family:\" + (att.getValue())) + \";\"))"], "Fixed commit": "ccbe679e15729c6c84478123714b4644fb926cbe", "Url": "https://api.github.com/repos/aminpy/odt2html", "Date": "2013-09-14T13:00:43Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (x > 0) { if (cell((x - 1), y).isNeighbor()) { linkNodes(x, y, (-1), 0, java.lang.Math.min(2, amount), java.lang.Math.min(2, amount)); }else if (cell((x - 1), y).isSimpleLink(false)) { linkNodes(x, y, (-1), 0, 2, 1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2412/buggy-version/solutions.level-04-hard.apu-improvement-phase.java", "BodyUseAPI": ["Player.Grid.cell(int,int)", "Player.Grid.linkNodes(int,int,int,int,int,int)", "Player.Cell.isNeighbor()", "Player.Grid.cell(int,int)", "Player.Grid.linkNodes(int,int,int,int,int,int)", "Player.Cell.isSimpleLink(boolean)"], "Fixed commit": "92ad6dc1b0478f2fd3655c114166af246853a594", "Url": "https://api.github.com/repos/squallco/CodinGame", "Date": "2015-06-27T16:53:09Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (y > 0) { if (cell(x, (y - 1)).isNeighbor()) { linkNodes(x, y, 0, (-1), java.lang.Math.min(2, amount), java.lang.Math.min(2, amount)); }else if (cell(x, (y - 1)).isSimpleLink(false)) { linkNodes(x, y, 0, (-1), 2, 1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2412/buggy-version/solutions.level-04-hard.apu-improvement-phase.java", "BodyUseAPI": ["Player.Grid.cell(int,int)", "Player.Cell.isSimpleLink(boolean)", "Player.Grid.linkNodes(int,int,int,int,int,int)", "Player.Grid.linkNodes(int,int,int,int,int,int)", "Player.Grid.cell(int,int)", "Player.Cell.isNeighbor()"], "Fixed commit": "92ad6dc1b0478f2fd3655c114166af246853a594", "Url": "https://api.github.com/repos/squallco/CodinGame", "Date": "2015-06-27T16:53:09Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GraveStone.GraveStoneMobSpawn.getMobEntity(net.minecraft.world.World,tileEntity.getGraveType(),int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (mob != null) { GraveStone.GraveStoneMobSpawn.spawnMob(world, mob, x, y, z); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1631/buggy-version/block.BlockGSGraveStone.java", "BodyUseAPI": ["GraveStone.GraveStoneMobSpawn.spawnMob(net.minecraft.world.World,net.minecraft.entity.Entity,int,int,int)"], "Fixed commit": "bf8e22033bd5e724f7f394844948d369e727a77b", "Url": "https://api.github.com/repos/NightKosh/GraveStone-mod", "Date": "2013-06-07T11:57:51Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mSettings.showPostInfo())) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6372/buggy-version/src.main.java.com.mde.potdroid.helpers.TopicBuilder.java", "BodyUseAPI": [], "Fixed commit": "a7d7cfd0d912be98543a68cf0f5f772933cb03ce", "Url": "https://api.github.com/repos/janoliver/pOT-Droid", "Date": "2014-01-26T09:05:25Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mSettings.showPostInfo())) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6372/buggy-version/src.main.java.com.mde.potdroid.helpers.TopicBuilder.java", "BodyUseAPI": [], "Fixed commit": "a7d7cfd0d912be98543a68cf0f5f772933cb03ce", "Url": "https://api.github.com/repos/janoliver/pOT-Droid", "Date": "2014-01-26T09:05:25Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((ptpverifier != null) && ((socketchannel) != null)) { ptpverifier.authenticateAndEstablishAuthKey(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4846/buggy-version/src.navigators.smart.communication.server.ServerConnection.java", "BodyUseAPI": [], "Fixed commit": "43daa1070f7fa4f4e2cf499e576e4e234ecdab76", "Url": "https://api.github.com/repos/vs-uulm/bft-smart", "Date": "2011-04-19T12:09:53Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.all().equals(\"System Error Code 1. Num was too long for immidiate calculation. Switching mode<br> just try again\")) return \"System Error Code 1. Num was too long for immidiate calculation. Switching mode<br> just try again\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2747/buggy-version/src.com.wynprice.chemistry.Main.java", "BodyUseAPI": [], "Fixed commit": "b20efdb8ebd7755e213989407cd349c0c41e9135", "Url": "https://api.github.com/repos/Wyn-Price/chemistryElectron", "Date": "2017-07-20T22:41:44Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((projectile.getShooter()) instanceof org.bukkit.entity.Player) { attacker = ((org.bukkit.entity.Player) (projectile.getShooter())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2767/buggy-version/src.com.comze_instancelabs.mgmobescape.Main.java", "BodyUseAPI": ["org.bukkit.entity.Projectile.getShooter()"], "Fixed commit": "c2567ea9a2782d03326ba2fcce91634fc3b221eb", "Url": "https://api.github.com/repos/MC-Minigames/MGMobEscape", "Date": "2014-08-31T15:59:07Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentLoader) != null) { currentLoader.onDisable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3740/buggy-version/src.main.java.cz.GravelCZLP.TracerBlocker.TracerBlocker.java", "BodyUseAPI": [], "Fixed commit": "8ef08dd9b17974c84f5d14d1578e0f40c5288683", "Url": "https://api.github.com/repos/BreakpointCrew/TracerBlocker", "Date": "2017-07-19T14:48:44Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) instanceof com.watabou.pixeldungeon.items.EquipableItem) { ((com.watabou.pixeldungeon.items.EquipableItem) (this)).doUnequip(hero, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1456/buggy-version/PixelDungeon.src.main.java.com.watabou.pixeldungeon.items.Item.java", "BodyUseAPI": [], "Fixed commit": "f04bad0044c31e6196f3c4f04c7a039b1d85cc27", "Url": "https://api.github.com/repos/NYRDS/pixel-dungeon-remix", "Date": "2016-02-21T20:31:44Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.makechip.stdf2xls4.stdfapi.DefaultValueDatabase.getDefaultLoLimit(com.makechip.stdf2xls4.stdf.TestID)", "com.makechip.stdf2xls4.stdfapi.DefaultValueDatabase.getDefaultHiLimit(com.makechip.stdf2xls4.stdf.TestID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((hiLimit == null) && (loLimit == null)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8128/buggy-version/src.com.makechip.stdf2xls4.stdfapi.DefaultValueDatabase.java", "BodyUseAPI": [], "Fixed commit": "a3507a35fdc503602e2e71690d537640371b8314", "Url": "https://api.github.com/repos/makechip/stdf2xls4", "Date": "2017-05-26T01:25:07Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.edu.agh.student.simulatedannealing.solver.SimulatedAnnealingSolver<CurrentState>.getObjectiveFunctionValue(CurrentState)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (childObjectiveValue > 0) { statistics.add((step + 1), getObjectiveFunctionValue(child)); double deltaE = (getObjectiveFunctionValue(current)) - (getObjectiveFunctionValue(child)); if ((getObjectiveFunctionValue(child)) > (getObjectiveFunctionValue(best))) { best = child; } if (shouldAccept(deltaE, currentTemperature)) { current = child; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3747/buggy-version/src.main.java.pl.edu.agh.student.simulatedannealing.solver.SimulatedAnnealingSolver.java", "BodyUseAPI": [], "Fixed commit": "0f1e7f48133c8197f079defcd80a73741a4adc50", "Url": "https://api.github.com/repos/tastypenguinbacon/mmwd-project", "Date": "2017-01-07T22:10:09Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((actionIds.size()) > (java.lang.Long.SIZE)) || (((actionIds.size()) == (java.lang.Long.SIZE)) && (!(actionIds.contains(ActionKeys.VIEW))))) { throw new com.liferay.portal.kernel.exception.SystemException((\"There are too many actions for resource \" + name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7995/buggy-version/portal-impl.src.com.liferay.portal.service.impl.ResourceActionLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "a77ccc8fec94d53998e50d6fe762117326a4ba86", "Url": "https://api.github.com/repos/mbowerman/liferay-portal", "Date": "2016-06-21T00:13:21Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (emailAddressHint != null) { userId = emailAddressHint; }else { userId = com.onedrive.sdk.authentication.MSAAuthenticator.DEFAULT_USER_ID; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5000/buggy-version/onedrivesdk.src.main.java.com.onedrive.sdk.authentication.MSAAuthenticator.java", "BodyUseAPI": [], "Fixed commit": "b9c710772e260cf9eb397e88b005d0832601fa36", "Url": "https://api.github.com/repos/OneDrive/onedrive-sdk-android", "Date": "2016-02-03T22:03:08Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentIndex) > ((indices.length) - 1)) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8276/buggy-version/src.RandomizedQueue.java", "BodyUseAPI": [], "Fixed commit": "ba71d6ea2bc763fb453a793aef38d0482aaa5c2e", "Url": "https://api.github.com/repos/joshuasmith1981/Queues", "Date": "2014-02-21T17:28:46Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item == null) { throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8276/buggy-version/src.RandomizedQueue.java", "BodyUseAPI": [], "Fixed commit": "ba71d6ea2bc763fb453a793aef38d0482aaa5c2e", "Url": "https://api.github.com/repos/joshuasmith1981/Queues", "Date": "2014-02-21T17:28:46Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.floor((posX / (Chunk.CHUNK_WIDTH)))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((chunksTile.get(chunk)) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4305/buggy-version/API.src.main.java.com.werwolv.world.World.java", "BodyUseAPI": [], "Fixed commit": "9c4b931ee5152bfbfb8fa44f59a23a24650e0df7", "Url": "https://api.github.com/repos/WerWolv98/Game", "Date": "2017-06-30T21:22:26Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((posY < 0) || (posY >= (com.werwolv.world.World.WORLD_HEIGHT))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4305/buggy-version/API.src.main.java.com.werwolv.world.World.java", "BodyUseAPI": [], "Fixed commit": "9c4b931ee5152bfbfb8fa44f59a23a24650e0df7", "Url": "https://api.github.com/repos/WerWolv98/Game", "Date": "2017-06-30T21:22:26Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.floor((posX / (Chunk.CHUNK_WIDTH)))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((chunksTile.get(chunk)) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4305/buggy-version/API.src.main.java.com.werwolv.world.World.java", "BodyUseAPI": [], "Fixed commit": "9c4b931ee5152bfbfb8fa44f59a23a24650e0df7", "Url": "https://api.github.com/repos/WerWolv98/Game", "Date": "2017-06-30T21:22:26Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (prgm.equalsIgnoreCase(\"Slots\")) { javaClass.slots s = new javaClass.slots(); s.paint(g); }else if (prgm.equalsIgnoreCase(\"Border Patrol\")) { javaClass.KeyMouse key = new javaClass.KeyMouse(); key.paint(g); }else if (prgm.equalsIgnoreCase(\"Order Pizza\")) { }else if (prgm.equalsIgnoreCase(\"Freeform\")) { javaClass.Freeform free = new javaClass.Freeform(); free.paint(g); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4153/buggy-version/src.javaClass.Computer.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "348fef58e2ca08857b3e9fced528dce282a41a94", "Url": "https://api.github.com/repos/TheMinecraftBrick/javaClass", "Date": "2017-12-14T15:54:21Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (overlapping) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6009/buggy-version/src.main.java.cat.udl.eps.softarch.mypadel.utils.ReservationOverlappingChecker.java", "BodyUseAPI": [], "Fixed commit": "b991a4a7d48799e78d09e71a12e0654a298d1550", "Url": "https://api.github.com/repos/UdL-EPS-SoftArch/mypadel-api", "Date": "2017-10-25T14:27:19Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((peer) != null) { display.updateMenuItem(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/824/buggy-version/jswt-core.src.main.java.org.eclipse.swt.widgets.MenuItem.java", "BodyUseAPI": [], "Fixed commit": "aaf8857ebd87407003a57ebe1538289333eb44da", "Url": "https://api.github.com/repos/stefanhaustein/jSWT", "Date": "2017-01-30T21:23:50Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(list.equals(\"\"))) list = list.substring(0, ((list.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2470/buggy-version/swe400fitness.src.domainModel.IncomingRequestsList.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "ab3a644ca18bf2b45836c99cfab4df23f4e73e8a", "Url": "https://api.github.com/repos/funcvehicle/swe400", "Date": "2014-11-07T02:20:30Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(list.equals(\"\"))) list = list.substring(0, ((list.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2470/buggy-version/swe400fitness.src.domainModel.FriendList.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "ab3a644ca18bf2b45836c99cfab4df23f4e73e8a", "Url": "https://api.github.com/repos/funcvehicle/swe400", "Date": "2014-11-07T02:20:30Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(list.equals(\"\"))) list = list.substring(0, ((list.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2470/buggy-version/swe400fitness.src.domainModel.OutgoingRequestsList.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "ab3a644ca18bf2b45836c99cfab4df23f4e73e8a", "Url": "https://api.github.com/repos/funcvehicle/swe400", "Date": "2014-11-07T02:20:30Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((timingOfHospitalPrescriptionConcept) == null) { throw new java.lang.IllegalStateException((((\"Couldn't find concept for discharge location which should be mapped as \" + (org.openmrs.module.emrapi.EmrApiConstants.EMR_CONCEPT_SOURCE_NAME)) + \":\") + (org.openmrs.module.dispensing.DispensingApiConstants.CONCEPT_CODE_DISCHARGE_LOCATION))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/453/buggy-version/api.src.main.java.org.openmrs.module.dispensing.descriptor.DispensingConceptSetDescriptor.java", "BodyUseAPI": [], "Fixed commit": "2302ec16dd04d3b9333db837db8d21e954d91955", "Url": "https://api.github.com/repos/openmrs/openmrs-module-dispensing", "Date": "2013-10-25T14:40:40Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((timingOfHospitalPrescriptionConcept) == null) { throw new java.lang.IllegalStateException((((\"Couldn't find concept for timing of prescription which should be mapped as \" + (org.openmrs.module.emrapi.EmrApiConstants.EMR_CONCEPT_SOURCE_NAME)) + \":\") + (org.openmrs.module.dispensing.DispensingApiConstants.CONCEPT_CODE_HOSPITAL_PRESCRIPTION_TIMING))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/453/buggy-version/api.src.main.java.org.openmrs.module.dispensing.descriptor.DispensingConceptSetDescriptor.java", "BodyUseAPI": [], "Fixed commit": "2302ec16dd04d3b9333db837db8d21e954d91955", "Url": "https://api.github.com/repos/openmrs/openmrs-module-dispensing", "Date": "2013-10-25T14:40:40Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Objects.equals(computingType, \"ConcurrentHashMap2\")) { setupConcurrentHashMap2(); }else if (java.util.Objects.equals(computingType, \"Caffeine\")) { setupCaffeine(); }else if (java.util.Objects.equals(computingType, \"Guava\")) { setupGuava(); }else { throw new java.lang.AssertionError((\"Unknown computingType: \" + (computingType))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/864/buggy-version/src.jmh.java.com.github.benmanes.caffeine.cache.ComputeBenchmark.java", "BodyUseAPI": ["java.util.Objects.equals(java.lang.String,java.lang.String)", "java.util.Objects.equals(java.lang.String,java.lang.String)"], "Fixed commit": "1c7d4f468be39e1b1da6b3ce8de7bd62cc5740cc", "Url": "https://api.github.com/repos/ben-manes/caffeine", "Date": "2014-12-20T21:06:54Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFirstUpdate) { be.kuleuven.mech.androidrsgdemozmq.Rsg.resendWorldModel(); isFirstUpdate = false; android.util.Log.w(\"onProgressChanged\", \"Rsg.resendWorldModel()\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2975/buggy-version/examples.AndroidRSGDemoZMQ.src.be.kuleuven.mech.androidrsgdemozmq.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b4f7a35284c3aef08a8af319bb08244a19dc5115", "Url": "https://api.github.com/repos/blumenthal/brics_3d_jni", "Date": "2014-10-22T16:09:40Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((c.getCreatedAt()) != null) { o.addProperty(\"issued_at\", c.getCreatedAt().getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5530/buggy-version/openid-connect-server.src.main.java.org.mitre.openid.connect.view.ClientInformationResponseView.java", "BodyUseAPI": ["com.google.gson.JsonObject.addProperty(java.lang.String,c.getCreatedAt().getTime())", "org.mitre.oauth2.model.ClientDetailsEntity.getCreatedAt()", "c.getCreatedAt().getTime()"], "Fixed commit": "23efdf9f51775c53447721ee5ebb88a5b99f0e28", "Url": "https://api.github.com/repos/mitreid-connect/OpenID-Connect-Java-Spring-Server", "Date": "2013-03-04T21:12:06Z"},
{"Line": "=>2006", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lblForw.isEnabled()) { btnForwardActionPerformed(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7581/buggy-version/src.main.java.de.cismet.cids.custom.objectrenderer.wunda_blau.AlkisPointRenderer.java", "BodyUseAPI": [], "Fixed commit": "c668ed6c839b759201bfb926ba9c63f98abc3839", "Url": "https://api.github.com/repos/cismet/cids-custom-wuppertal", "Date": "2016-11-17T08:27:52Z"},
{"Line": "=>1967", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lblBack.isEnabled()) { btnBackActionPerformed(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7581/buggy-version/src.main.java.de.cismet.cids.custom.objectrenderer.wunda_blau.AlkisPointRenderer.java", "BodyUseAPI": [], "Fixed commit": "c668ed6c839b759201bfb926ba9c63f98abc3839", "Url": "https://api.github.com/repos/cismet/cids-custom-wuppertal", "Date": "2016-11-17T08:27:52Z"},
{"Line": "=>1619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lblBack.isEnabled()) { btnBackActionPerformed(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7581/buggy-version/src.main.java.de.cismet.cids.custom.objectrenderer.wunda_blau.AlkisLandparcelRenderer.java", "BodyUseAPI": [], "Fixed commit": "c668ed6c839b759201bfb926ba9c63f98abc3839", "Url": "https://api.github.com/repos/cismet/cids-custom-wuppertal", "Date": "2016-11-17T08:27:52Z"},
{"Line": "=>1630", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lblForw.isEnabled()) { btnForwardActionPerformed(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7581/buggy-version/src.main.java.de.cismet.cids.custom.objectrenderer.wunda_blau.AlkisLandparcelRenderer.java", "BodyUseAPI": [], "Fixed commit": "c668ed6c839b759201bfb926ba9c63f98abc3839", "Url": "https://api.github.com/repos/cismet/cids-custom-wuppertal", "Date": "2016-11-17T08:27:52Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(reversalTimer.isRunning)) reversalTimer.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/810/buggy-version/portfolio.elevatorcontrol.Proj11RuntimeMonitor.java", "BodyUseAPI": ["simulator.elevatorcontrol.Proj11RuntimeMonitor.Stopwatch.start()"], "Fixed commit": "700c4fa553bbd0caaf36da3cf9836c77dc3c5f10", "Url": "https://api.github.com/repos/pgong/jdby", "Date": "2013-11-14T02:23:00Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (caches == null) { caches = new org.json.JSONArray().put(data.optJSONObject(\"c\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7867/buggy-version/src.main.java.utils.Loader.java", "BodyUseAPI": [], "Fixed commit": "97e219d738f06cdc4f590e3d5a6f4985f5c8336d", "Url": "https://api.github.com/repos/nordnomad/geocaching-server", "Date": "2015-11-13T17:20:15Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (monthOfYear < 10) { return new java.lang.StringBuffer(\"\").append(year).append(\"-0\").append(monthOfYear).append(\"-\").append(dayOfMonth).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4601/buggy-version/ShuttleBus.app.src.main.java.com.example.fengge.shuttlebus.BookingTicketActivity.java", "BodyUseAPI": ["java.lang.StringBuffer.toString()", "java.lang.StringBuffer.append(int)", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.StringBuffer.append(int)"], "Fixed commit": "ae11f896231ea4328cf35ab6f8e035f7a275bc54", "Url": "https://api.github.com/repos/GerrardFeng/shuttleBus", "Date": "2016-01-14T14:17:40Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.paris.lutece.plugins.workflow.modules.eudonetrestdirectory.business.EudonetLinkHome.findBy(int,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (eudonetLink != null) { net.sf.json.JSONObject jsonObject = new net.sf.json.JSONObject(); jsonObject.accumulate(\"DescId\", eudonetLink.getIdTable()); jsonObject.accumulate(\"Value\", (\"\" + (eudonetLink.getIdField()))); jsonArray.add(jsonObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1061/buggy-version/src.java.fr.paris.lutece.plugins.workflow.modules.eudonetrestdirectory.service.BuildJsonBodyService.java", "BodyUseAPI": ["fr.paris.lutece.plugins.workflow.modules.eudonetrestdirectory.business.EudonetLink.getIdTable()", "net.sf.json.JSONObject.accumulate(java.lang.String,(\"\" + (eudonetLink.getIdField())))", "net.sf.json.JSONObject.accumulate(java.lang.String,eudonetLink.getIdTable())", "fr.paris.lutece.plugins.workflow.modules.eudonetrestdirectory.business.EudonetLink.getIdField()"], "Fixed commit": "73c9b1095d25d0b72ab16c4f3bf29709e311bf66", "Url": "https://api.github.com/repos/lutece-platform/lutece-wf-module-workflow-eudonetrestdirectory", "Date": "2017-09-22T09:26:07Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (v == (mRegisterTextView)) { android.content.Intent intent = new android.content.Intent(this, com.mehequanna.gitawesome.ui.CreateAccountActivity.class); startActivity(intent); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3661/buggy-version/app.src.main.java.com.mehequanna.gitawesome.ui.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "9cf14a3b543f4315e63a4a64bbe9eecb658b1959", "Url": "https://api.github.com/repos/Mehequanna/GitAwesome", "Date": "2016-12-09T19:25:55Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 0) { menu.setGroupVisible(R.id.sortGroup, false); menu.setGroupVisible(R.id.toolbarButtons, true); }else if (position == 1) { menu.setGroupVisible(R.id.sortGroup, true); menu.setGroupVisible(R.id.toolbarButtons, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2827/buggy-version/app.src.main.java.com.example.mary.carparkdemo1.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3453a21d73f16c353e12bbccb520f0f46aa12118", "Url": "https://api.github.com/repos/CarParkNerds/YSJHCIIOT", "Date": "2015-11-24T12:52:09Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((helper.getProductIdsFromCart(false).size()) > 0) { helper.clearCartItems(); com.greentopli.core.service.OrderHistoryService.start(mContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8595/buggy-version/app.src.user.java.com.greentopli.app.user.notification.NotificationHelper.java", "BodyUseAPI": ["com.greentopli.core.storage.helper.CartDbHelper.clearCartItems()"], "Fixed commit": "63b317e19e65e3e4658978631d099b8fed8e052a", "Url": "https://api.github.com/repos/karadkar/Veggie", "Date": "2016-11-23T18:26:34Z"},
{"Line": "=>964", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedIdx == (-1)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1019/buggy-version/pentaho-xul-swt.src.org.pentaho.ui.xul.swt.tags.SwtTree.java", "BodyUseAPI": [], "Fixed commit": "dac53e14b0152e8543402691644dec80fd1d1ec1", "Url": "https://api.github.com/repos/wseyler/pentaho-connections", "Date": "2009-11-03T19:37:39Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(button.isDisposed())) { button.setImage(image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/101/buggy-version/applications.opibuilder.opibuilder-plugins.org.csstudio.opibuilder.widgets.src.org.csstudio.opibuilder.widgets.figures.NativeButtonFigure.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Button.setImage(org.eclipse.swt.graphics.Image)"], "Fixed commit": "4322f996c66a4f49c6007f8ca4d09eaabd5d4bd1", "Url": "https://api.github.com/repos/css-iter/cs-studio", "Date": "2015-05-19T18:16:33Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stack.getItemDamage()) == 0) return super.getUnlocalizedName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5673/buggy-version/src.minecraft.dechmods.ctm.blocks.ItemBlockGlass.java", "BodyUseAPI": [], "Fixed commit": "29f859ff526eb09719119cca3df406abe9c74dda", "Url": "https://api.github.com/repos/team-dech/CTM", "Date": "2013-11-24T12:10:19Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (methodName.startsWith(Classes.LAMBDA_METHOD_PREFIX)) return co.paralleluniverse.fibers.instrument.MethodDatabase.SuspendableType.SUSPENDABLE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8734/buggy-version/quasar-core.src.main.java.co.paralleluniverse.fibers.instrument.DefaultSuspendableClassifier.java", "BodyUseAPI": [], "Fixed commit": "0e1e681846f1688057d93026cc327fb311c138b9", "Url": "https://api.github.com/repos/puniverse/quasar", "Date": "2016-03-09T06:27:03Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.x) == (that.x)) && ((this.y) != (that.y))) return java.lang.Double.POSITIVE_INFINITY; else if (((this.x) == (that.x)) && ((this.y) == (that.y))) return java.lang.Double.NEGATIVE_INFINITY; else return ((double) ((that.y) - (this.y))) / ((that.x) - (this.x));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7393/buggy-version/src.Point.java", "BodyUseAPI": [], "Fixed commit": "dcaf997752a6453f180294122473ee68f5636852", "Url": "https://api.github.com/repos/ostrbor/algs", "Date": "2017-12-17T20:14:36Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 11) message.setTextColor(context.getResources().getColor(R.color.white));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5183/buggy-version/src.de.azapps.ilovefs.ILoveFS.java", "BodyUseAPI": [], "Fixed commit": "f1222d1bc668a8e40176dc9831640969d3e763a1", "Url": "https://api.github.com/repos/azapps/ilovefs-android", "Date": "2014-02-12T13:30:07Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((camera) != null) { android.hardware.Camera.Parameters p = camera.getParameters(); p.setPreviewSize(arg2, arg3); try { camera.setPreviewDisplay(arg0); camera.setDisplayOrientation(90); } catch (java.io.IOException e) { e.printStackTrace(); } camera.startPreview(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3965/buggy-version/src.org.c_base.c_beam.activity.CcorderActivity.java", "BodyUseAPI": [], "Fixed commit": "49cbbe6ab1b218009093cca393977d1837e101fb", "Url": "https://api.github.com/repos/c-base/c-beam-droid", "Date": "2013-12-09T16:39:23Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (health < 0.0) { health = 0.0; }else if (health > (player.getMaxHealth())) { health = player.getMaxHealth(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7145/buggy-version/src.com.wasteofplastic.acidrain.listeners.AcidEffect.java", "BodyUseAPI": [], "Fixed commit": "22c9a91ad1657d9920ac1e65d9f336f19a95290f", "Url": "https://api.github.com/repos/tastybento/acidrain", "Date": "2017-01-14T16:27:53Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["microbat.evaluation.model.PairList.findByMutatedNode(microbat.model.trace.TraceNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (pair != null) { microbat.model.trace.TraceNode originalNode = pair.getOriginalNode(); if (originalNode != null) { microbat.evaluation.views.BeforeTraceView view = microbat.evaluation.views.EvaluationViews.getBeforeTraceView(); view.jumpToNode(view.getTrace(), originalNode.getOrder(), false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7922/buggy-version/microbat.src.evaluation.microbat.evaluation.views.AfterTraceView.java", "BodyUseAPI": ["microbat.evaluation.model.TraceNodePair.getOriginalNode()"], "Fixed commit": "33e572fa8a3044be4f4fdea086fe74c5579b17f7", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2016-12-22T12:32:58Z"},
{"Line": "=>911", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPerson) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4081/buggy-version/RelationshipsPJE.src.relationshipspje.RelationshipFrame.java", "BodyUseAPI": [], "Fixed commit": "92f46f6be6d263dd5c77289059a21926ebeedc18", "Url": "https://api.github.com/repos/harlanhowe/RelationshipsPJE", "Date": "2013-12-09T17:45:14Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.avaje.ebean.Ebean.find(java.lang.Class,java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((score.value) == null) { scoreForm.reject(\"Veuillez saisir une valeur de score.\"); return badRequest(views.html.score_update.render(score, scoreForm)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1888/buggy-version/app.controllers.ScoreController.java", "BodyUseAPI": ["views.html.score_update.render(models.Score,play.data.Form<models.Score>)", "controllers.ScoreController.badRequest(views.html.score_update.render(score, scoreForm))"], "Fixed commit": "f299d447e947b5b35e897a92f02df7cde39db778", "Url": "https://api.github.com/repos/jsmadja/shmuphiscores", "Date": "2015-09-14T17:53:40Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value != null) { java.lang.String score = value.toString(); return formatters.ScoreFormatter.format(score); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1888/buggy-version/app.formatters.ScoreFormatter.java", "BodyUseAPI": ["java.math.BigDecimal.toString()"], "Fixed commit": "f299d447e947b5b35e897a92f02df7cde39db778", "Url": "https://api.github.com/repos/jsmadja/shmuphiscores", "Date": "2015-09-14T17:53:40Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gephi.appearance.RankingImpl.getValue(org.gephi.graph.api.Element,org.gephi.graph.api.Graph)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (val == null) { throw new java.lang.NullPointerException(((\"The element with id '\" + (element.getId())) + \"' has a null value for ranking\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4461/buggy-version/modules.AppearanceAPI.src.main.java.org.gephi.appearance.FunctionImpl.java", "BodyUseAPI": [], "Fixed commit": "92b6b2ce7068df19f79f38874c19a82ce0df238a", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2016-01-31T21:24:09Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lastIndex - firstIndex) == 1) { if ((array[firstIndex]) > (array[lastIndex])) { GeneralUtils.swapElementsAtLocation(array, firstIndex, lastIndex); return lastIndex; }else { return firstIndex; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8777/buggy-version/GeneralUtils.java", "BodyUseAPI": ["GeneralUtils.swapElementsAtLocation(double[],int,int)"], "Fixed commit": "29003140dba2d3498cebd2e32d124efcf6a1a421", "Url": "https://api.github.com/repos/DanielLavie/data_structure_2016_hw_6", "Date": "2016-05-29T16:17:50Z"},
{"Line": "=>6", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstIndex == lastIndex) { return firstIndex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8777/buggy-version/GeneralUtils.java", "BodyUseAPI": [], "Fixed commit": "29003140dba2d3498cebd2e32d124efcf6a1a421", "Url": "https://api.github.com/repos/DanielLavie/data_structure_2016_hw_6", "Date": "2016-05-29T16:17:50Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.pelle.mango.client.web.modules.dictionary.controls.FileControl.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (file == null) { file = new io.pelle.mango.client.FileVO(); setValue(file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2849/buggy-version/mango-client-web.src.io.pelle.mango.client.web.modules.dictionary.controls.FileControl.java", "BodyUseAPI": [], "Fixed commit": "179dc166fda244b015caa53f70521862829e2497", "Url": "https://api.github.com/repos/pellepelster/mango", "Date": "2015-08-26T19:54:37Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (primaryKeyAttribute != null) { org.wso2.siddhi.core.util.parser.EventHolderPasser.log.info((((((\"Ignoring '@\" + (org.wso2.siddhi.core.util.SiddhiConstants.ANNOTATION_INDEX_BY)) + \"' as @\") + (org.wso2.siddhi.core.util.SiddhiConstants.ANNOTATION_PRIMARY_KEY)) + \"' is already defined for event table \") + (tableDefinition.getId()))); }else { if ((indexByAnnotation.getElements().size()) > 1) { throw new org.wso2.siddhi.core.exception.OperationNotSupportedException(((((org.wso2.siddhi.core.util.SiddhiConstants.ANNOTATION_INDEX_BY) + \" annotation contains \") + (indexByAnnotation.getElements().size())) + \" elements, Siddhi in-memory table only supports indexing based on a single attribute\")); } if ((indexByAnnotation.getElements().size()) == 0) { throw new org.wso2.siddhi.query.api.exception.ExecutionPlanValidationException(((((org.wso2.siddhi.core.util.SiddhiConstants.ANNOTATION_INDEX_BY) + \" annotation contains \") + (indexByAnnotation.getElements().size())) + \" element\")); } primaryKeyAttribute = indexByAnnotation.getElements().get(0).getValue().trim(); primaryKeyPosition = tableDefinition.getAttributePosition(primaryKeyAttribute); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6569/buggy-version/modules.siddhi-core.src.main.java.org.wso2.siddhi.core.util.parser.EventHolderPasser.java", "BodyUseAPI": [], "Fixed commit": "4876fd6054f30b5cc155ce9a000d9f3c8131741e", "Url": "https://api.github.com/repos/wso2/siddhi", "Date": "2016-07-08T15:31:21Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((primaryKeyData) != null) { primaryKeyData.remove(deletedEvent.getOutputData()[primaryKeyPosition]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6569/buggy-version/modules.siddhi-core.src.main.java.org.wso2.siddhi.core.table.holder.IndexEventHolder.java", "BodyUseAPI": [], "Fixed commit": "4876fd6054f30b5cc155ce9a000d9f3c8131741e", "Url": "https://api.github.com/repos/wso2/siddhi", "Date": "2016-07-08T15:31:21Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vulnerableComponents > 0) { ratio = ((double) (vulnerabilities)) / vulnerableComponents; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1834/buggy-version/sonar-dependency-check-plugin.src.main.java.org.sonar.dependencycheck.base.DependencyCheckMetrics.java", "BodyUseAPI": [], "Fixed commit": "a61f562876046d86990a44850d5679d8842e2ab8", "Url": "https://api.github.com/repos/stevespringett/dependency-check-sonar-plugin", "Date": "2015-06-19T14:57:02Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((drone) != null) && (drone.getMavClient().isConnected())) { speakPeriodic(drone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3245/buggy-version/Android.src.org.droidplanner.android.notifications.TTSNotificationProvider.java", "BodyUseAPI": ["org.droidplanner.android.notifications.TTSNotificationProvider.Watchdog.speakPeriodic(org.droidplanner.core.model.Drone)"], "Fixed commit": "108c86c8917d56e452efc71e34a20fc1d6a80ca8", "Url": "https://api.github.com/repos/metalnow/droidplanner", "Date": "2014-08-24T23:12:32Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (graphIRI.endsWith(\".owl\")) { java.lang.System.out.println(((((\"***************** Getting Values for Graph No\" + i) + \" : Graph URI is :\") + graphIRI) + \"******************\")); ontoPersistance.insertMetadata(graphIRI, identifiers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/537/buggy-version/benchmark.src.main.java.dataload.LoadDataClass.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "dataload.OntologyPersistance.insertMetadata(java.lang.String,java.util.List<java.lang.String>)"], "Fixed commit": "bdc9456be1471383f0b1e4015cd283e77371cd63", "Url": "https://api.github.com/repos/danielapoliveira/bioont-search-benchmark", "Date": "2017-11-29T16:10:38Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position >= (PostListContent.POSTS.size())) { android.util.Log.e(com.zfdang.zsmth_android.PostListActivity.TAG, ((\"onPostPopupMenuItem: \" + \"Invalid Post index\") + position)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2573/buggy-version/app.src.main.java.com.zfdang.zsmth_android.PostListActivity.java", "BodyUseAPI": ["android.util.Log.e(java.lang.String,java.lang.String)"], "Fixed commit": "1caa052898468b1059f81065adf408ad7ed16936", "Url": "https://api.github.com/repos/zfdang/zSMTH-Android", "Date": "2016-05-26T07:06:09Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.speko.android.sync.SpekoSyncAdapter.mFirebaseAuth.getCurrentUser()) == null) { com.speko.android.sync.SpekoSyncAdapter.mFirebaseAuth.signOut(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/727/buggy-version/app.src.main.java.com.speko.android.sync.SpekoSyncAdapter.java", "BodyUseAPI": ["com.google.firebase.auth.FirebaseAuth.signOut()"], "Fixed commit": "e7627ad236a4c491752055f95d84842169fd3b09", "Url": "https://api.github.com/repos/rafaelanastacioalves/Speko", "Date": "2017-02-24T19:53:38Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user == null) { android.util.Log.w(com.speko.android.sync.SpekoSyncAdapter.LOG_TAG, \"method with null User variable!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/727/buggy-version/app.src.main.java.com.speko.android.sync.SpekoSyncAdapter.java", "BodyUseAPI": [], "Fixed commit": "e7627ad236a4c491752055f95d84842169fd3b09", "Url": "https://api.github.com/repos/rafaelanastacioalves/Speko", "Date": "2017-02-24T19:53:38Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.speko.android.sync.SpekoSyncAdapter.user) != null) { android.util.Log.i(\"SpekoSyncAdapter\", (\"Deu certo!: \\n\" + (com.speko.android.sync.SpekoSyncAdapter.user.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/727/buggy-version/app.src.main.java.com.speko.android.sync.SpekoSyncAdapter.java", "BodyUseAPI": [], "Fixed commit": "e7627ad236a4c491752055f95d84842169fd3b09", "Url": "https://api.github.com/repos/rafaelanastacioalves/Speko", "Date": "2017-02-24T19:53:38Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (owner.isCorporation()) { marketOrders.removeAll(owner.getMarketOrders()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4549/buggy-version/src.main.java.net.nikr.eve.jeveasset.data.profile.ProfileData.java", "BodyUseAPI": ["java.util.Set<net.nikr.eve.jeveasset.data.api.my.MyMarketOrder>.removeAll(owner.getMarketOrders())", "net.nikr.eve.jeveasset.data.api.accounts.OwnerType.getMarketOrders()"], "Fixed commit": "e3172d8b44125e8d9b8a60829bc11e8b544e0845", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-10-20T19:53:41Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (first < last) { int middle = (first + last) >>> 1; granatamammolo.Java.granatamammolo.sort.Sorting.mSortIsortRic(b, first, middle, a); granatamammolo.Java.granatamammolo.sort.Sorting.mSortIsortRic(b, (middle + 1), last, a); granatamammolo.Java.granatamammolo.sort.Sorting.mergeAlt(b, first, middle, last, a); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3609/buggy-version/src.granatamammolo.Java.granatamammolo.sort.Sorting.java", "BodyUseAPI": ["granatamammolo.Java.granatamammolo.sort.Sorting.mSortIsortRic(int[],int,int,int[])", "granatamammolo.Java.granatamammolo.sort.Sorting.mergeAlt(int[],int,int,int,int[])", "granatamammolo.Java.granatamammolo.sort.Sorting.mSortIsortRic(int[],int,int,int[])"], "Fixed commit": "2ea5f5577443958b6e61862066badbb1197884be", "Url": "https://api.github.com/repos/gmammolo/Algoritmi", "Date": "2015-04-19T17:55:38Z"},
{"Line": "=>743", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edTitle.getText().isEmpty()) check = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7494/buggy-version/src.de.jClipCorn.gui.frames.addMovieFrame.AddMovieFrame.java", "BodyUseAPI": [], "Fixed commit": "2adb2703ad269c1e48b5f49ea57f31060cc798fe", "Url": "https://api.github.com/repos/Mikescher/jClipCorn", "Date": "2015-12-06T14:49:13Z"},
{"Line": "=>742", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(edCvrControl.isCoverSet())) check = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7494/buggy-version/src.de.jClipCorn.gui.frames.addMovieFrame.AddMovieFrame.java", "BodyUseAPI": [], "Fixed commit": "2adb2703ad269c1e48b5f49ea57f31060cc798fe", "Url": "https://api.github.com/repos/Mikescher/jClipCorn", "Date": "2015-12-06T14:49:13Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getItemCount()) == 0) && (start == end)) { }else if (((end - start) + 1) != (getItemCount())) { throw new com.alibaba.android.vlayout.MismatchChildCountException((((\"ItemCount mismatch when range: \" + (mRange.toString())) + \" childCount: \") + (getItemCount()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2337/buggy-version/vlayout.src.main.java.com.alibaba.android.vlayout.LayoutHelper.java", "BodyUseAPI": [], "Fixed commit": "1f805e6948ad6dff2b2958fe76f460b10b9d1ff1", "Url": "https://api.github.com/repos/lixi0912/vlayout", "Date": "2017-09-08T03:26:14Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.rainu.lib.dbc.DBMapEntrySetIterator<K, V>.extractValueClassFromSet()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (valueClass == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8996/buggy-version/src.main.java.de.rainu.lib.dbc.DBMapEntrySetIterator.java", "BodyUseAPI": [], "Fixed commit": "8019ec1cb6089e8f6a4d66d0eeaef692ba6c1bf3", "Url": "https://api.github.com/repos/rainu/dbc", "Date": "2013-01-25T19:59:09Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (maxObjects_ == (-1)) { objectPool = new java.util.concurrent.LinkedBlockingQueue<T>(); }else { objectPool = new java.util.concurrent.ArrayBlockingQueue<T>(maxObjects); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1969/buggy-version/barchart-http-server.src.main.java.com.barchart.http.server.ObjectPool.java", "BodyUseAPI": [], "Fixed commit": "022aa966aa08d4cff15d4efa2beca42718e00cdf", "Url": "https://api.github.com/repos/barchart/barchart-http", "Date": "2013-03-21T17:06:46Z"},
{"Line": "=>982", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.alibaba.fastjson.util.TypeUtils.isJSONTypeIgnore(clazz, jsonType, propertyName)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5009/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": [], "Fixed commit": "aa980697c09d9e47d8c51e996009df0bd7c3f63e", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-04-14T09:45:54Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.longBitsToDouble(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.lang.Double.isNaN(secondTryOut))) { return secondTryOut; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4975/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.BaseRandom.java", "BodyUseAPI": [], "Fixed commit": "dd511effa0a2b9966dcf2d14d9ad12ba0c6534c8", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-11-28T07:55:43Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (count > 0) { form.getPostponedMessage().setText(java.lang.String.valueOf(count)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3739/buggy-version/finance.swing.src.main.java.com.lavida.swing.handler.MainFormHandler.java", "BodyUseAPI": ["form.getPostponedMessage().setText(java.lang.String)", "java.lang.String.valueOf(int)"], "Fixed commit": "02cf01064675c028c78438bcb5118521e2c8cf1c", "Url": "https://api.github.com/repos/pavel-slyvka/lavida", "Date": "2013-08-27T11:23:15Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<org.bukkit.Location>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((org.bukkit.block.Furnace) (l.getBlock().getState())).getCookTime()) > 0) ((org.bukkit.block.Furnace) (l.getBlock().getState())).setCookTime(((short) ((((org.bukkit.block.Furnace) (l.getBlock().getState())).getCookTime()) + (furnace.getSpeed()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1734/buggy-version/src.me.mrCookieSlime.Slimefun.main.java", "BodyUseAPI": ["((org.bukkit.block.Furnace) (l.getBlock().getState())).getCookTime()", "l.getBlock().getState()", "org.bukkit.Location.getBlock()", "l.getBlock().getState()", "((org.bukkit.block.Furnace) (l.getBlock().getState())).setCookTime(((short) ((((org.bukkit.block.Furnace) (l.getBlock().getState())).getCookTime()) + (furnace.getSpeed()))))", "org.bukkit.Location.getBlock()"], "Fixed commit": "a71c8b764fd392da650c304bbfe12ffea50b8cf6", "Url": "https://api.github.com/repos/TheBusyBiscuit/Slimefun4", "Date": "2015-07-14T11:41:22Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.sequenceiq.cloudbreak.common.type.ScalingType.isStackDownScale(payload.getScalingType())) { stackDownscaleService.startStackDownscale(context, payload); sendEvent(context); }else { sendEvent(context.getFlowId(), StackDownscaleEvent.DOWNSCALE_FAILURE_EVENT.stringRepresentation(), getFailurePayload(context, new java.lang.Exception(\"Stack downscale wasn't requested.\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6284/buggy-version/core.src.main.java.com.sequenceiq.cloudbreak.core.flow2.stack.downscale.StackDownscaleActions.java", "BodyUseAPI": ["com.sequenceiq.cloudbreak.core.flow2.stack.downscale.StackDownscaleService.startStackDownscale(com.sequenceiq.cloudbreak.core.flow2.stack.downscale.StackScalingFlowContext,com.sequenceiq.cloudbreak.core.flow.context.StackScalingContext)"], "Fixed commit": "c8c521c69735a52ec91b41304facb7f05d62de8e", "Url": "https://api.github.com/repos/sequenceiq/cloudbreak", "Date": "2016-05-02T12:43:37Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((prevDealItems.size()) > (dealItems.size())) { listAdapter.notifyItemRangeRemoved(dealItems.size(), prevDealItems.size()); }else { listAdapter.notifyItemRangeChanged(0, prevDealItems.size()); listAdapter.notifyItemRangeInserted(prevDealItems.size(), dealItems.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7521/buggy-version/app.src.main.java.com.dgaf.happyhour.Model.Adapter.DealListAdapter.java", "BodyUseAPI": ["java.util.List<com.dgaf.happyhour.Model.DealModel>.size()", "java.util.List<com.dgaf.happyhour.Model.DealModel>.size()", "java.util.List<com.dgaf.happyhour.Model.DealModel>.size()", "com.dgaf.happyhour.Model.Adapter.DealListAdapter.notifyItemRangeChanged(int,prevDealItems.size())", "com.dgaf.happyhour.Model.Adapter.DealListAdapter.notifyItemRangeInserted(prevDealItems.size(),dealItems.size())", "java.util.List<com.dgaf.happyhour.Model.DealModel>.size()", "java.util.List<com.dgaf.happyhour.Model.DealModel>.size()", "com.dgaf.happyhour.Model.Adapter.DealListAdapter.notifyItemRangeRemoved(dealItems.size(),prevDealItems.size())"], "Fixed commit": "4d0cccdb92f7f1fcc5bdd494a9fab441fd080b98", "Url": "https://api.github.com/repos/TheBurrd/androidClient", "Date": "2015-06-06T21:57:18Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.Ntut.MainApplication.readSetting(\"uiLang\").isEmpty()) || (com.Ntut.MainApplication.readSetting(\"courseLang\").isEmpty())) { com.Ntut.MainApplication.writeSetting(\"uiLang\", java.util.Locale.getDefault().getLanguage()); com.Ntut.MainApplication.writeSetting(\"courseLang\", java.util.Locale.getDefault().getLanguage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4524/buggy-version/app.src.main.java.com.Ntut.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8acd3faf51eb879f71878dc0063ab3ec1c3f13c6", "Url": "https://api.github.com/repos/yaoandy107/TaipeiTechStudent", "Date": "2017-08-04T01:15:53Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timerValue) <= 0) { speed.x = 0; speed.y = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8454/buggy-version/core.src.com.mygdx.game.Game.java", "BodyUseAPI": [], "Fixed commit": "37a75224b836b8eb3e326569003c5f8be68b4271", "Url": "https://api.github.com/repos/Pedram26/BattleOfOlympus", "Date": "2015-03-09T09:01:40Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adsManager) != null) { adsManager.destroy(); adsManager = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/901/buggy-version/demo.src.main.java.com.google.googlemediaframeworkdemo.demo.adplayer.ImaPlayer.java", "BodyUseAPI": [], "Fixed commit": "f11b8edf3b42bf3ea96ed7c117a0aca62c5acc10", "Url": "https://api.github.com/repos/ypavlotsky/google-media-framework-android", "Date": "2015-11-13T18:58:42Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(alreadyAddedToRecently)) { if (database.notInRecentlyChatted(com.gepardy.emotychat.AfterLoginActivity.ChatActivity.ReceiverName)) { database.addToRecentlyChatted(com.gepardy.emotychat.AfterLoginActivity.ChatActivity.ReceiverName, database.getFriend(com.gepardy.emotychat.AfterLoginActivity.ChatActivity.ReceiverName).getProfilePicturePath()); }else { database.setRecentlyStatusToTop(com.gepardy.emotychat.AfterLoginActivity.ChatActivity.ReceiverName); } alreadyAddedToRecently = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7572/buggy-version/App.App-v1.app.src.main.java.com.gepardy.emotychat.AfterLoginActivity.ChatActivity.java", "BodyUseAPI": [], "Fixed commit": "9595f5a31a0151095ebdd1d575fa9ef228c25589", "Url": "https://api.github.com/repos/Nikolas1814/APP", "Date": "2015-05-20T20:25:24Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.eniacdevelopment.EniacHome.Repositories.Shared.UserRepository.getByUserName(credentials.Username)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) { return new com.eniacdevelopment.EniacHome.Repositories.Shared.Objects.UserAuthenticationResult() { { Authenticated = false; user.Id = null; } }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/311/buggy-version/src.main.java.com.eniacdevelopment.EniacHome.Business.UserServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "f76eaad27d143bda49207a58995d5df33e5ca550", "Url": "https://api.github.com/repos/EniacHome/AlarmService", "Date": "2017-01-18T20:28:56Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((componentName) != null) { spanBuilder.setComponent(componentName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6020/buggy-version/apm-sniffer.apm-agent-core.src.main.java.org.skywalking.apm.agent.core.context.trace.AbstractTracingSpan.java", "BodyUseAPI": [], "Fixed commit": "9f8622b8a1ee18601cb9a64e7768117385b3307d", "Url": "https://api.github.com/repos/apache/incubator-skywalking", "Date": "2017-07-12T08:33:51Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.layer) != null) { spanBuilder.setSpanLayerValue(this.layer.getCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6020/buggy-version/apm-sniffer.apm-agent-core.src.main.java.org.skywalking.apm.agent.core.context.trace.AbstractTracingSpan.java", "BodyUseAPI": [], "Fixed commit": "9f8622b8a1ee18601cb9a64e7768117385b3307d", "Url": "https://api.github.com/repos/apache/incubator-skywalking", "Date": "2017-07-12T08:33:51Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.hadoop.fs.FileSystem.get(new org.apache.hadoop.conf.Configuration()).exists(new org.apache.hadoop.fs.Path(((_localHdfsSegmentTarPath) + \"/\")))) { context.write(new org.apache.hadoop.io.LongWritable(java.lang.Long.parseLong(lineSplits[2])), new org.apache.hadoop.io.Text(org.apache.hadoop.fs.FileSystem.get(new org.apache.hadoop.conf.Configuration()).listStatus(new org.apache.hadoop.fs.Path(((_localHdfsSegmentTarPath) + \"/\")))[0].getPath().getName())); com.linkedin.pinot.hadoop.job.mapper.HadoopSegmentCreationMapReduceJob.HadoopSegmentCreationMapper.LOGGER.info(\"finished the job successfully\"); }else { com.linkedin.pinot.hadoop.job.mapper.HadoopSegmentCreationMapReduceJob.HadoopSegmentCreationMapper.LOGGER.error(\"Can't find compressed segment on hdfs!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2845/buggy-version/pinot-hadoop.src.main.java.com.linkedin.pinot.hadoop.job.mapper.HadoopSegmentCreationMapReduceJob.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileSystem.get(new org.apache.hadoop.conf.Configuration()).listStatus(new org.apache.hadoop.fs.Path(((_localHdfsSegmentTarPath) + \"/\")))[0].getPath().getName()", "org.apache.hadoop.fs.FileSystem.get(new org.apache.hadoop.conf.Configuration()).listStatus(org.apache.hadoop.fs.Path)", "org.apache.hadoop.fs.FileSystem.get(new org.apache.hadoop.conf.Configuration()).listStatus(new org.apache.hadoop.fs.Path(((_localHdfsSegmentTarPath) + \"/\")))[0].getPath()", "com.linkedin.pinot.hadoop.job.mapper.Context.write(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text)"], "Fixed commit": "1c362e3bca11dbfe77bbb5cf8565290675745da9", "Url": "https://api.github.com/repos/goverdata/pinot", "Date": "2015-07-15T07:30:40Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((output.length()) > 0) { output += \"]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4206/buggy-version/src.mhcs.model.ModuleList.java", "BodyUseAPI": [], "Fixed commit": "792ef031ddf569d3552691b627607a6b1c202edb", "Url": "https://api.github.com/repos/Catnina/mhcsCS4531", "Date": "2015-04-26T02:09:30Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.wayward_realms.waywardcombat.WaywardCombat.getActiveFight(characterPlugin.getActiveCharacter(((org.bukkit.entity.Player) (sender))))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (fight != null) { if ((fight.getCombatants()) != null) { if ((fight.getCombatants().size()) > 1) { fight.start(); fight.sendMessage((((plugin.getPrefix()) + (org.bukkit.ChatColor.GREEN)) + \"The fight has begun!\")); fight.sendMessage(((((org.bukkit.ChatColor.YELLOW) + \"It's \") + (fight.getNextTurn().getName())) + \"'s turn.\")); }else { sender.sendMessage((((plugin.getPrefix()) + (org.bukkit.ChatColor.RED)) + \"You cannot fight with yourself! Please get any others to join the fight first.\")); } }else { sender.sendMessage((((plugin.getPrefix()) + (org.bukkit.ChatColor.RED)) + \"You are not currently in a fight.\")); } }else { sender.sendMessage((((plugin.getPrefix()) + (org.bukkit.ChatColor.RED)) + \"You are not currently in a fight.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8309/buggy-version/WaywardCombat.src.main.java.net.wayward_realms.waywardcombat.FightCommand.java", "BodyUseAPI": ["net.wayward_realms.waywardlib.combat.Fight.getNextTurn()", "net.wayward_realms.waywardlib.combat.Fight.sendMessage((((plugin.getPrefix()) + (org.bukkit.ChatColor.GREEN)) + \"The fight has begun!\"))", "net.wayward_realms.waywardlib.combat.Fight.start()", "net.wayward_realms.waywardlib.combat.Fight.sendMessage(((((org.bukkit.ChatColor.YELLOW) + \"It's \") + (fight.getNextTurn().getName())) + \"'s turn.\"))", "net.wayward_realms.waywardlib.combat.Fight.getCombatants()", "fight.getCombatants().size()", "net.wayward_realms.waywardlib.combat.Fight.getCombatants()", "fight.getNextTurn().getName()"], "Fixed commit": "902de0e4ac4c6d257307ec89407f2de29a9e35db", "Url": "https://api.github.com/repos/WaywardRealms/Wayward", "Date": "2014-05-30T09:00:30Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stack.empty()) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1614/buggy-version/src.PostfixCalculator.java", "BodyUseAPI": [], "Fixed commit": "18e009744bc85369cfb4779b8ca5d96f17fb6f6c", "Url": "https://api.github.com/repos/matthewdschulman/CIS121-DequeResizing", "Date": "2014-10-16T01:42:45Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stack.empty()) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1614/buggy-version/src.PostfixCalculator.java", "BodyUseAPI": [], "Fixed commit": "18e009744bc85369cfb4779b8ca5d96f17fb6f6c", "Url": "https://api.github.com/repos/matthewdschulman/CIS121-DequeResizing", "Date": "2014-10-16T01:42:45Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((ticks) % 300) == 0) || ((ticks) <= 20)) && (!(worldObj.isRemote))) { net.glider.src.network.PacketHandler.sendToDimension(new net.glider.src.network.packets.ArmorStandItemSyncPacket(items, xCoord, yCoord, zCoord), worldObj.provider.dimensionId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/767/buggy-version/src.main.java.net.glider.src.tiles.TileEntityArmorStand.java", "BodyUseAPI": [], "Fixed commit": "4740686a0bd6454c26304a00c1d0cbfdaa02be1f", "Url": "https://api.github.com/repos/kremnev8/AdvancedSpaceStaion-mod", "Date": "2016-08-24T09:20:55Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hourOfDay < 10) { hourStr = \"0\" + hourOfDay; }else { hourStr = \"\" + hourOfDay; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5370/buggy-version/app.src.main.java.com.example.calendar.DateTimeUtils.java", "BodyUseAPI": [], "Fixed commit": "c2ce1d562ec78cb8d0f996b991e6425c2a6aee43", "Url": "https://api.github.com/repos/somdas/CalendarAndAgenda", "Date": "2017-07-13T18:25:29Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gnu.trove.map.hash.TIntObjectHashMap<cofh.lib.transport.EnderRegistry.EnderDestination>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dest == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1974/buggy-version/src.main.java.cofh.lib.transport.EnderRegistry.java", "BodyUseAPI": [], "Fixed commit": "59d79d54c4247da9e178b779549b5c7767bf3125", "Url": "https://api.github.com/repos/CoFH/CoFHLib", "Date": "2015-08-08T20:35:43Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cofh.lib.transport.EnderRegistry.EnderDestination.getOutput()", "gnu.trove.map.hash.TIntObjectHashMap<cofh.lib.transport.EnderRegistry.EnderDestination>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((!requireLoaded) && (out == null)) && (!(dest.isInvalid))) { return new cofh.api.transport.IEnderDestination() { @java.lang.Override public java.lang.String getChannelString() { return channel; } @java.lang.Override public int getFrequency() { return frequency; } @java.lang.Override public boolean setFrequency(int frequency) { return false; } @java.lang.Override public boolean clearFrequency() { return false; } @java.lang.Override public boolean isNotValid() { return true; } @java.lang.Override public int x() { return dest.z; } @java.lang.Override public int y() { return dest.y; } @java.lang.Override public int z() { return dest.z; } @java.lang.Override public int dimension() { return dest.dimension; } @java.lang.Override public int getDestination() { return -1; } @java.lang.Override public boolean setDestination(int frequency) { return false; } @java.lang.Override public boolean clearDestination() { return false; } }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1974/buggy-version/src.main.java.cofh.lib.transport.EnderRegistry.java", "BodyUseAPI": [], "Fixed commit": "59d79d54c4247da9e178b779549b5c7767bf3125", "Url": "https://api.github.com/repos/CoFH/CoFHLib", "Date": "2015-08-08T20:35:43Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value.getClass().isArray()) { java.lang.String[] ips = ((java.lang.String[]) (value)); src = ips[0]; }else { src = ((java.lang.String) (value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2435/buggy-version/src.main.java.com.ctrip.ops.sysdev.filters.IPIP.java", "BodyUseAPI": [], "Fixed commit": "b69acaed88a3652891dba12537bbef31acc30ede", "Url": "https://api.github.com/repos/modeyang/hangout", "Date": "2017-08-30T06:41:25Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value.getClass().isArray()) { java.lang.String[] ips = ((java.lang.String[]) (value)); src = ips[0]; }else { src = ((java.lang.String) (value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2435/buggy-version/src.main.java.com.ctrip.ops.sysdev.filters.GeoIP2.java", "BodyUseAPI": [], "Fixed commit": "b69acaed88a3652891dba12537bbef31acc30ede", "Url": "https://api.github.com/repos/modeyang/hangout", "Date": "2017-08-30T06:41:25Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isVistor()) { alertDialog(\"\u8a2a\u5ba2\u8eab\u5206\u7121\u6cd5\u4f7f\u7528\u6211\u7684\u6700\u611b\u529f\u80fd\"); }else { invalidateOptionsMenu(); android.util.Log.e(TAG, ((tinydb.getListString(\"myFav\")) + \"\")); myFavovResult(compareNewData(favList, adapter.getFavorite(), true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/303/buggy-version/app.src.main.java.com.james.stockparser.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ecb566bac44636eaaddef61f50f7db9fbd32e471", "Url": "https://api.github.com/repos/empirejames/StockParser", "Date": "2017-07-12T06:50:45Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!(mProcessingDir.exists())) && (!(mProcessingDir.mkdir()))) throw new java.lang.RuntimeException((\"Cannot create \" + (mProcessingDir)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7631/buggy-version/src.plugins.WebOfTrust.IdentityFileDiskQueue.java", "BodyUseAPI": [], "Fixed commit": "a7b3c2252536aac9c661b88ad74931365d575a99", "Url": "https://api.github.com/repos/freenet/plugin-WebOfTrust", "Date": "2015-06-14T02:59:47Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!(mFinishedDir.exists())) && (!(mFinishedDir.mkdir()))) throw new java.lang.RuntimeException((\"Cannot create \" + (mFinishedDir)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7631/buggy-version/src.plugins.WebOfTrust.IdentityFileDiskQueue.java", "BodyUseAPI": [], "Fixed commit": "a7b3c2252536aac9c661b88ad74931365d575a99", "Url": "https://api.github.com/repos/freenet/plugin-WebOfTrust", "Date": "2015-06-14T02:59:47Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!(mQueueDir.exists())) && (!(mQueueDir.mkdir()))) throw new java.lang.RuntimeException((\"Cannot create \" + (mQueueDir)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7631/buggy-version/src.plugins.WebOfTrust.IdentityFileDiskQueue.java", "BodyUseAPI": [], "Fixed commit": "a7b3c2252536aac9c661b88ad74931365d575a99", "Url": "https://api.github.com/repos/freenet/plugin-WebOfTrust", "Date": "2015-06-14T02:59:47Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.floodlightcontroller.core.internal.IOFSwitchService.getSwitch(org.projectfloodlight.openflow.types.DatapathId)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sw == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8835/buggy-version/src.main.java.net.floodlightcontroller.dhcpserver.DHCPSwitchFlowSetter.java", "BodyUseAPI": [], "Fixed commit": "9a64ba5fdc02d706bbcb739f5dca26849350ba72", "Url": "https://api.github.com/repos/rizard/floodlight", "Date": "2015-12-02T02:20:46Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Assignments.evaluate()", "java.util.Scanner.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(s.insert(var, i))) s.setValue(var, i);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2388/buggy-version/src.Assignments.java", "BodyUseAPI": ["SymbolTable.setValue(java.lang.String,int)"], "Fixed commit": "6fa7a2d83c4556649314007446cc15b88adfe911", "Url": "https://api.github.com/repos/Jessman2014/SymbolTable", "Date": "2014-11-09T16:24:25Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recite.isFinsihed()) == true) { java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2673/buggy-version/src.org.ling0322.danci.ReciteFragment.java", "BodyUseAPI": [], "Fixed commit": "92820693ecc1c69e1035fad5c185225bf03856d9", "Url": "https://api.github.com/repos/ling0322/danci", "Date": "2012-10-04T00:28:47Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mFolder)) { getActivity().findViewById(R.id.tab_main).setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/17/buggy-version/Mobile.src.main.java.com.ericfabreu.wearflashcards.fragments.SetListFragment.java", "BodyUseAPI": [], "Fixed commit": "d863b38473406a2c1ae6eda4838dd87bf2bd7d45", "Url": "https://api.github.com/repos/ericfabreu/WearFlashcards", "Date": "2016-08-16T05:01:13Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mFolder)) { getActivity().findViewById(R.id.tab_main).setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/17/buggy-version/Mobile.src.main.java.com.ericfabreu.wearflashcards.fragments.SetListFragment.java", "BodyUseAPI": [], "Fixed commit": "d863b38473406a2c1ae6eda4838dd87bf2bd7d45", "Url": "https://api.github.com/repos/ericfabreu/WearFlashcards", "Date": "2016-08-16T05:01:13Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Aron.Heinecke.ts3Manager.Instance<?>.getTS3Connection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (ts3conn != null) ts3conn.disconnect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7749/buggy-version/src.Aron.Heinecke.ts3Manager.Mods.ModTools.java", "BodyUseAPI": ["Aron.Heinecke.ts3Manager.Lib.TS3Connector<?>.disconnect()"], "Fixed commit": "debca8b23996ce6daa5a2b71036b1a01b533edfd", "Url": "https://api.github.com/repos/0xpr03/ts3-manager", "Date": "2016-04-04T05:23:41Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (hasAdminPerms(sID)) { boolean misCMD = false; switch (args[1]) { case \"rocket\" : if ((args.length) >= 3) { boolean ignore_users = false; if ((args.length) == 4) ignore_users = args[3].equals(\"ignore\"); rocketchan(args[2], sID, ignore_users); }else { misCMD = true; } break; case \"help\" : default : misCMD = true; logger.warn(\"unknown cmd\"); } if (misCMD) { instance.getTS3Connection().getConnector().sendTextMessage(sID, JTS3ServerQuery.TEXTMESSAGE_TARGET_CLIENT, CMD_HELP); } }else { instance.getTS3Connection().getConnector().sendTextMessage(sID, JTS3ServerQuery.TEXTMESSAGE_TARGET_CLIENT, Aron.Heinecke.ts3Manager.Mods.PERM_MSG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7749/buggy-version/src.Aron.Heinecke.ts3Manager.Mods.ModTools.java", "BodyUseAPI": ["Aron.Heinecke.ts3Manager.Mods.ModTools.rocketchan(java.lang.String,int,boolean)", "instance.getTS3Connection().getConnector().sendTextMessage(int,JTS3ServerQuery.TEXTMESSAGE_TARGET_CLIENT,Aron.Heinecke.ts3Manager.Mods.PERM_MSG)", "instance.getTS3Connection().getConnector().sendTextMessage(int,JTS3ServerQuery.TEXTMESSAGE_TARGET_CLIENT,java.lang.String)"], "Fixed commit": "debca8b23996ce6daa5a2b71036b1a01b533edfd", "Url": "https://api.github.com/repos/0xpr03/ts3-manager", "Date": "2016-04-04T05:23:41Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stack.peek().getType()) == (CardType.PRESS)) { if ((card.getType()) != (CardType.HIT)) throw new brawllogic.GameplayException(\"Only hits can be played on presses.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/548/buggy-version/src.brawllogic.BaseStack.java", "BodyUseAPI": [], "Fixed commit": "c078709f2b45ae415725cba402368c75680843a5", "Url": "https://api.github.com/repos/patrickherrmann/Brawl", "Date": "2013-02-11T07:08:50Z"},
{"Line": "=>928", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((aliases.length()) > 0) aliases.delete(((aliases.length()) - 2), aliases.length());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7550/buggy-version/src.com.nhksos.jjfs85.BetterShop.BSCommand.java", "BodyUseAPI": ["java.lang.StringBuilder.length()", "java.lang.StringBuilder.length()", "java.lang.StringBuilder.delete(int,int)"], "Fixed commit": "141b9286084c7d8b34e9be113f7f6b15c1f293b6", "Url": "https://api.github.com/repos/BetterShop/BetterShop", "Date": "2011-06-21T20:06:11Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mZabbixDataService.isLoggedIn()) loadData();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3282/buggy-version/src.com.inovex.zabbixmobile.activities.ScreensActivity.java", "BodyUseAPI": [], "Fixed commit": "f705f1a054a0cbe6fbc6d879cd0a28f6dd6ede94", "Url": "https://api.github.com/repos/inovex/zax", "Date": "2013-08-22T11:19:00Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mZabbixDataService.isLoggedIn()) loadAdapterContent(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3282/buggy-version/src.com.inovex.zabbixmobile.activities.BaseHostGroupSpinnerActivity.java", "BodyUseAPI": [], "Fixed commit": "f705f1a054a0cbe6fbc6d879cd0a28f6dd6ede94", "Url": "https://api.github.com/repos/inovex/zax", "Date": "2013-08-22T11:19:00Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.coniks.coniks_server.DirectoryOps.findUser(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(uln.allowsUnsignedKeychange())) && (sig == null)) { org.coniks.coniks_server.MsgHandlerLogger.error(((\"Required signature for \" + username) + \" not found\")); org.coniks.coniks_server.ServerMessaging.sendSimpleResponseProto(ServerErr.MALFORMED_CLIENT_MSG_ERR, clientSocket); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6200/buggy-version/coniks_server.src.org.coniks.coniks_server.RequestHandler.java", "BodyUseAPI": [], "Fixed commit": "a5a44d1e9747dbda52dc30692ba706bba93aace0", "Url": "https://api.github.com/repos/coniks-sys/coniks-java", "Date": "2016-05-25T04:33:00Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.length()) > 0) { int mark = java.lang.Integer.parseInt(s.toString()); if ((mark > 0) && (mark <= 10)) { ReviewActivity.floatingActionButton.setBackground(mContext.getResources().getDrawable(R.drawable.circle_red, null)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6968/buggy-version/Version4.app.src.main.java.fontys.fhict.delta.sam.Adapters.ExpandableListViewAdapter.java", "BodyUseAPI": ["java.lang.Integer.parseInt(s.toString())", "android.text.Editable.toString()"], "Fixed commit": "b1307e9dbbcf04aad6ffafcc8e0d9440ae4e2fe3", "Url": "https://api.github.com/repos/DeltaSAM/Android", "Date": "2015-12-04T20:27:12Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (simple) { if (certificationEditionDAO.getById(dto.getCertificationEditionId()).getRetired().equals(true)) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7068/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.manager.impl.SearchMenuManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "527d12b06c59258e94314ba303ca5272d17045ea", "Url": "https://api.github.com/repos/andlar/chpl-api", "Date": "2015-12-01T16:24:34Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTelephonyManager()) != null) { getTelephonyManager().setRadioPower(false); if (com.android.settings.wificall.WifiCallingStatusControl.DEBUG) android.util.Log.d(com.android.settings.wificall.WifiCallingStatusControl.TAG, \"updateRadioStatus, turn radio off\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8789/buggy-version/src.com.android.settings.wificall.WifiCallingStatusControl.java", "BodyUseAPI": [], "Fixed commit": "31d2dcaa36bb8ab81d7eafba8ac0db5bd67f072e", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Settings", "Date": "2016-03-07T11:41:14Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isSnapshot())) return this.version;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6902/buggy-version/src.main.java.com.drewhoener.artifact.MavenArtifact.java", "BodyUseAPI": [], "Fixed commit": "179361ef534ab4392be3447483eb474bece4b6a6", "Url": "https://api.github.com/repos/drewhoener/Fido", "Date": "2017-03-08T06:39:28Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.tools.ToolProvider.getSystemJavaCompiler()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (compiler == null) { throw new java.lang.AssertionError(\"The system Java compiler is unavailable. You may need to install the JDK vs the JRE.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1505/buggy-version/compiler.src.main.java.com.sampullara.util.RuntimeJavaCompiler.java", "BodyUseAPI": [], "Fixed commit": "cdf25e7dd728bb3fbe4b7bdc3b72027dc20a31cc", "Url": "https://api.github.com/repos/spullara/mustache.java", "Date": "2011-07-22T16:30:29Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getNames(org.json.JSONObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (emails == null) return employees;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2199/buggy-version/src.application.models.Business.java", "BodyUseAPI": [], "Fixed commit": "f03f5580413bca250bbd14388ecccd4f7d205883", "Url": "https://api.github.com/repos/dbns97/SE-P-T-Assignment", "Date": "2017-05-09T05:09:23Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getNames(org.json.JSONObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (usernames == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2199/buggy-version/src.application.models.Business.java", "BodyUseAPI": [], "Fixed commit": "f03f5580413bca250bbd14388ecccd4f7d205883", "Url": "https://api.github.com/repos/dbns97/SE-P-T-Assignment", "Date": "2017-05-09T05:09:23Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getNames(org.json.JSONObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (usernames == null) return customers;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2199/buggy-version/src.application.models.Business.java", "BodyUseAPI": [], "Fixed commit": "f03f5580413bca250bbd14388ecccd4f7d205883", "Url": "https://api.github.com/repos/dbns97/SE-P-T-Assignment", "Date": "2017-05-09T05:09:23Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((polynomial.termAt(i).getExponent()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5649/buggy-version/projekti.src.commands.Derivative.java", "BodyUseAPI": [], "Fixed commit": "bc2ba93d1b9ea356353843719deef23594917068", "Url": "https://api.github.com/repos/Kaltsoon/Javalabra", "Date": "2013-02-18T09:53:30Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.attoparser.util.TextUtil.equals(true, this.nameLower, 0, this.nameLower.length, org.attoparser.HtmlCDATAContentElement.ELEMENT_SCRIPT_NAME, 0, org.attoparser.HtmlCDATAContentElement.ELEMENT_SCRIPT_NAME.length)) { status.shouldDisableParsing = false; if ((org.attoparser.util.TextUtil.endsWith(false, buffer, valueContentOffset, valueContentLen, org.attoparser.HtmlCDATAContentElement.ATTRIBUTE_TYPE_JAVASCRIPT_VALUE, 0, org.attoparser.HtmlCDATAContentElement.ATTRIBUTE_TYPE_JAVASCRIPT_VALUE.length)) || (org.attoparser.util.TextUtil.endsWith(false, buffer, valueContentOffset, valueContentLen, org.attoparser.HtmlCDATAContentElement.ATTRIBUTE_TYPE_ECMASCRIPT_VALUE, 0, org.attoparser.HtmlCDATAContentElement.ATTRIBUTE_TYPE_ECMASCRIPT_VALUE.length))) { if ((org.attoparser.util.TextUtil.equals(false, buffer, valueContentOffset, valueContentLen, org.attoparser.HtmlCDATAContentElement.ATTRIBUTE_TYPE_JAVASCRIPT_VALUE, 0, org.attoparser.HtmlCDATAContentElement.ATTRIBUTE_TYPE_JAVASCRIPT_VALUE.length)) || (org.attoparser.util.TextUtil.equals(false, buffer, valueContentOffset, valueContentLen, org.attoparser.HtmlCDATAContentElement.ATTRIBUTE_TYPE_ECMASCRIPT_VALUE, 0, org.attoparser.HtmlCDATAContentElement.ATTRIBUTE_TYPE_ECMASCRIPT_VALUE.length))) { status.shouldDisableParsing = true; }else if ((org.attoparser.util.TextUtil.equals(false, buffer, valueContentOffset, valueContentLen, org.attoparser.HtmlCDATAContentElement.ATTRIBUTE_TYPE_TEXT_JAVASCRIPT_VALUE, 0, org.attoparser.HtmlCDATAContentElement.ATTRIBUTE_TYPE_TEXT_JAVASCRIPT_VALUE.length)) || (org.attoparser.util.TextUtil.equals(false, buffer, valueContentOffset, valueContentLen, org.attoparser.HtmlCDATAContentElement.ATTRIBUTE_TYPE_TEXT_ECMASCRIPT_VALUE, 0, org.attoparser.HtmlCDATAContentElement.ATTRIBUTE_TYPE_TEXT_ECMASCRIPT_VALUE.length))) { status.shouldDisableParsing = true; }else if ((org.attoparser.util.TextUtil.equals(false, buffer, valueContentOffset, valueContentLen, org.attoparser.HtmlCDATAContentElement.ATTRIBUTE_TYPE_APPLICATION_JAVASCRIPT_VALUE, 0, org.attoparser.HtmlCDATAContentElement.ATTRIBUTE_TYPE_APPLICATION_JAVASCRIPT_VALUE.length)) || (org.attoparser.util.TextUtil.equals(false, buffer, valueContentOffset, valueContentLen, org.attoparser.HtmlCDATAContentElement.ATTRIBUTE_TYPE_APPLICATION_ECMASCRIPT_VALUE, 0, org.attoparser.HtmlCDATAContentElement.ATTRIBUTE_TYPE_APPLICATION_ECMASCRIPT_VALUE.length))) { status.shouldDisableParsing = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3515/buggy-version/src.main.java.org.attoparser.HtmlCDATAContentElement.java", "BodyUseAPI": [], "Fixed commit": "a7a8b91632be267a88d21759215d7a6a84e4af80", "Url": "https://api.github.com/repos/attoparser/attoparser", "Date": "2015-12-12T23:30:36Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.attoparser.util.TextUtil.equals(false, buffer, valueContentOffset, valueContentLen, org.attoparser.HtmlCDATAContentElement.ATTRIBUTE_TYPE_APPLICATION_JAVASCRIPT_VALUE, 0, org.attoparser.HtmlCDATAContentElement.ATTRIBUTE_TYPE_APPLICATION_JAVASCRIPT_VALUE.length)) || (org.attoparser.util.TextUtil.equals(false, buffer, valueContentOffset, valueContentLen, org.attoparser.HtmlCDATAContentElement.ATTRIBUTE_TYPE_APPLICATION_ECMASCRIPT_VALUE, 0, org.attoparser.HtmlCDATAContentElement.ATTRIBUTE_TYPE_APPLICATION_ECMASCRIPT_VALUE.length))) { status.shouldDisableParsing = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3515/buggy-version/src.main.java.org.attoparser.HtmlCDATAContentElement.java", "BodyUseAPI": [], "Fixed commit": "a7a8b91632be267a88d21759215d7a6a84e4af80", "Url": "https://api.github.com/repos/attoparser/attoparser", "Date": "2015-12-12T23:30:36Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (getInteractionBox().contains(curX, curY)) { if (!(com.kowaisugoi.game.screens.PlayGame.getFlagManager().getFlag(FlagId.FLAG_BODY_FOUND).getState())) { com.kowaisugoi.game.screens.PlayGame.getPlayer().think(com.kowaisugoi.game.messages.Messages.getText(\"kitchen.glass.thought\")); return false; }else { return super.click(curX, curY); } }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4551/buggy-version/core.src.com.kowaisugoi.game.rooms.RoomKitchen.java", "BodyUseAPI": ["com.kowaisugoi.game.interactables.objects.PickupableItem.click(float,float)"], "Fixed commit": "7a5bbed6cb60e540fc1a2fcba483c7d21645a9fe", "Url": "https://api.github.com/repos/gjhutchison/pixelhorrorjam2016", "Date": "2016-10-24T01:08:10Z"},
{"Line": "=>657", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiManager.getInstance(project).findFile(com.intellij.openapi.vfs.VirtualFile)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(psiFile instanceof org.ballerinalang.plugins.idea.BallerinaLanguage)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6491/buggy-version/src.main.java.org.ballerinalang.plugins.idea.psi.impl.BallerinaPsiImplUtil.java", "BodyUseAPI": [], "Fixed commit": "cb5444f3b5f6ee61e06e44512d02a301b57b2100", "Url": "https://api.github.com/repos/ballerina-attic/plugin-intellij", "Date": "2017-03-21T09:10:45Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAvailable(componentName, newCoord))) { throw new java.lang.Exception(\"Position unavailable\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8939/buggy-version/src.scenario.Scenario.java", "BodyUseAPI": [], "Fixed commit": "e6d770ca24621071f127805e60a27c22c6d37694", "Url": "https://api.github.com/repos/BrunoRafael/wumpus", "Date": "2016-09-30T16:00:34Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((not.trim().length()) > 0) t = new Transaktion(due, source.getAccountNumber(), destination.getAccountNumber(), amount, ocr); else t = new Transaktion(due, source.getAccountNumber(), destination.getAccountNumber(), amount, ocr, not);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8009/buggy-version/weraFinal.Pgm2.java", "BodyUseAPI": [], "Fixed commit": "bc261ed1d1f75f2352e7e755545187e20639130b", "Url": "https://api.github.com/repos/nyson/db-assignment1", "Date": "2013-02-26T10:57:10Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((ocr.length()) > 15) || ((ocr.length()) <= 1)) || (!(Pgm2.m.validOcr(ocr)))) { java.lang.System.out.println(\"Din inmatning registreades som ett Meddelande!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8009/buggy-version/weraFinal.Pgm2.java", "BodyUseAPI": [], "Fixed commit": "bc261ed1d1f75f2352e7e755545187e20639130b", "Url": "https://api.github.com/repos/nyson/db-assignment1", "Date": "2013-02-26T10:57:10Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((query.getQueryType()) == (clustering.QueryType.KMEANS)) kQuery = new clustering.KMeansQuery(hbase.Cons.K); else if ((query.getQueryType()) == (clustering.QueryType.CONSTRAINED_KMEANS)) kQuery = new clustering.KMeansQuery(hbase.Cons.K, query.getFilters());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4574/buggy-version/serving_layer.src.main.java.shell.Shell.java", "BodyUseAPI": ["clustering.KMeansQuery.getFilters()", "clustering.KMeansQuery.getQueryType()"], "Fixed commit": "68b06fac7cb424d35b7f67bc057064cc0e3470b8", "Url": "https://api.github.com/repos/nickozoulis/thunderstorm", "Date": "2015-11-24T11:34:17Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prefixes) == null) { prefixes = new com.hp.hpl.jena.shared.impl.PrefixMappingImpl(); prefixes.setNsPrefixes(model); for (java.lang.String prefix : config.getPrefixes().getNsPrefixMap().keySet()) { prefixes.setNsPrefix(prefix, config.getPrefixes().getNsPrefixURI(prefix)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8584/buggy-version/src.main.java.de.fuberlin.wiwiss.pubby.ResourceDescription.java", "BodyUseAPI": [], "Fixed commit": "ea1f06452563cb1458e5bdc359e1a73df5ffe553", "Url": "https://api.github.com/repos/cygri/pubby", "Date": "2013-02-25T15:58:23Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((partyText == null) || (partyText.equals(VoterInformation.ALL_PARTIES_LABEL))) { mPartyTextView.setText(getString(R.string.fragment_home_all_parties)); }else { mPartyTextView.setText(partyText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6057/buggy-version/app.src.main.java.com.votinginfoproject.VotingInformationProject.activities.homeActivity.HomeActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "b80235a49abc7b4c6bbde73f4100199501e88d04", "Url": "https://api.github.com/repos/votinginfoproject/android-white-label-app", "Date": "2016-07-12T15:00:42Z"},
{"Line": "=>4405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.internal.compiler.lookup.Scope.inferInvocationType(org.eclipse.jdt.internal.compiler.lookup.InvocationSite,visible[0],org.eclipse.jdt.internal.compiler.lookup.TypeBinding[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (candidate != null) compilationUnitScope().recordTypeReferences(candidate.thrownExceptions);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7769/buggy-version/org.eclipse.jdt.core.compiler.org.eclipse.jdt.internal.compiler.lookup.Scope.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordTypeReferences(candidate.thrownExceptions)"], "Fixed commit": "53eb573c43542222d6c3cd0b6bfa9e07b0f7454d", "Url": "https://api.github.com/repos/eclipse/eclipse.jdt.core", "Date": "2014-09-01T08:52:43Z"},
{"Line": "=>1887", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (candidate != null) unitScope.recordTypeReferences(candidate.thrownExceptions);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7769/buggy-version/org.eclipse.jdt.core.compiler.org.eclipse.jdt.internal.compiler.lookup.Scope.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordTypeReferences(candidate.thrownExceptions)"], "Fixed commit": "53eb573c43542222d6c3cd0b6bfa9e07b0f7454d", "Url": "https://api.github.com/repos/eclipse/eclipse.jdt.core", "Date": "2014-09-01T08:52:43Z"},
{"Line": "=>4548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.internal.compiler.lookup.Scope.inferInvocationType(org.eclipse.jdt.internal.compiler.lookup.InvocationSite,visible[i],org.eclipse.jdt.internal.compiler.lookup.TypeBinding[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (candidate != null) compilationUnitScope().recordTypeReferences(candidate.thrownExceptions);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7769/buggy-version/org.eclipse.jdt.core.compiler.org.eclipse.jdt.internal.compiler.lookup.Scope.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordTypeReferences(candidate.thrownExceptions)"], "Fixed commit": "53eb573c43542222d6c3cd0b6bfa9e07b0f7454d", "Url": "https://api.github.com/repos/eclipse/eclipse.jdt.core", "Date": "2014-09-01T08:52:43Z"},
{"Line": "=>1298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (concreteMatch != null) compilationUnitScope().recordTypeReferences(concreteMatch.thrownExceptions);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7769/buggy-version/org.eclipse.jdt.core.compiler.org.eclipse.jdt.internal.compiler.lookup.Scope.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordTypeReferences(concreteMatch.thrownExceptions)"], "Fixed commit": "53eb573c43542222d6c3cd0b6bfa9e07b0f7454d", "Url": "https://api.github.com/repos/eclipse/eclipse.jdt.core", "Date": "2014-09-01T08:52:43Z"},
{"Line": "=>4470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.internal.compiler.lookup.Scope.inferInvocationType(org.eclipse.jdt.internal.compiler.lookup.InvocationSite,moreSpecific[0],org.eclipse.jdt.internal.compiler.lookup.TypeBinding[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (candidate != null) compilationUnitScope().recordTypeReferences(candidate.thrownExceptions);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7769/buggy-version/org.eclipse.jdt.core.compiler.org.eclipse.jdt.internal.compiler.lookup.Scope.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.recordTypeReferences(candidate.thrownExceptions)"], "Fixed commit": "53eb573c43542222d6c3cd0b6bfa9e07b0f7454d", "Url": "https://api.github.com/repos/eclipse/eclipse.jdt.core", "Date": "2014-09-01T08:52:43Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((boardState.data_.modelForSide(thisMinionPlayerSide).getNumMinions()) >= 7) { return boardState; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4214/buggy-version/src.main.java.com.hearthsim.card.goblinsvsgnomes.minion.legendary.MekgineerThermaplugg.java", "BodyUseAPI": [], "Fixed commit": "0094803fe6c53e98e5555794e4eba1b6b1d6003e", "Url": "https://api.github.com/repos/slaymaker1907/HearthSim", "Date": "2015-06-21T22:51:30Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list.toString().isEmpty()) return \"No Players with PvP Enabled\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3620/buggy-version/src.main.java.me.NoChance.PvPManager.Commands.PvP.java", "BodyUseAPI": [], "Fixed commit": "44233320397600974996096eaf77853cf7cf2d50", "Url": "https://api.github.com/repos/NoChanceSD/PvPManager", "Date": "2014-01-13T21:17:50Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.AbstractBuild<?, ?>.getProject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"hudson.plugins.promoted_builds.PromotionProcess\".equals(project.getClass().getName())) { project = project.getRootProject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6433/buggy-version/src.main.java.hudson.maven.RedeployPublisher.java", "BodyUseAPI": ["hudson.model.AbstractProject.getRootProject()"], "Fixed commit": "c467213925d7ee8ee852bf7afd2d4c5b109386d7", "Url": "https://api.github.com/repos/aheritier/maven-plugin", "Date": "2015-10-23T08:30:05Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_symbol.length()) == 9) { _symbol = _symbol.substring(0, ((_symbol.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6654/buggy-version/gcocentral-root.GCOcentral.src.main.java.com.grimesco.gcocentral.axys.HandleAxysSymbol.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "891c8099e27866654d66c06c73ef1f7e5aaa6284", "Url": "https://api.github.com/repos/jaeboston/GCOcentralRemote", "Date": "2013-10-22T16:14:52Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameterValues(Constants.ENTITY_ID_PARAM)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (eids == null) { return new org.hyperic.hq.ui.beans.ChartDataBean(new java.util.ArrayList(), new java.util.ArrayList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4039/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.servlet.MetricChartServlet.java", "BodyUseAPI": [], "Fixed commit": "9d0bab6106c04d49989ad73a870f71be37ba3e6c", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-11-17T12:46:57Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DEBUG) { java.lang.System.err.println((((\"Screen A screen \" + (outMetrics.widthPixels)) + \" x \") + (outMetrics.heightPixels))); java.lang.System.err.println((((\"Screen A xy dpi \" + (outMetrics.xdpi)) + \" x \") + (outMetrics.ydpi))); java.lang.System.err.println((\"Screen A densityDPI \" + (outMetrics.densityDpi))); java.lang.System.err.println((\"Screen A density \" + (outMetrics.density))); java.lang.System.err.println((((\"Screen N xy inch \" + inW) + \" x \") + inH)); java.lang.System.err.println((((\"Screen N xy mm \" + mmW) + \" x \") + mmH)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6782/buggy-version/src.newt.classes.jogamp.newt.driver.android.ScreenDriver.java", "BodyUseAPI": [], "Fixed commit": "802f52a2ed4769703786f03fbc9b036fecca49bd", "Url": "https://api.github.com/repos/JogAmp/jogl", "Date": "2013-10-30T17:28:22Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (linearLayout == (mfindLoops)) visible.weight = 50;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2173/buggy-version/app.src.main.java.com.apres.gerber.loops.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "6f827d31bae3dbf485eb0ce3a3fc1bc70e0dec97", "Url": "https://api.github.com/repos/cmps115project/Loops", "Date": "2015-09-03T03:55:55Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isPlotted) == true) { refreshPointsAndAxises(graphView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8691/buggy-version/app.src.main.java.com.example.tfs_hw5.CustomViewLayout.java", "BodyUseAPI": [], "Fixed commit": "177f46a1a8b783cc1722e6cf6a6cff0d65a01843", "Url": "https://api.github.com/repos/admitrevskiy/TFS_HW5", "Date": "2017-10-31T09:09:15Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y < ((getWorldHeight()) / (-2))) { y = (getWorldHeight()) + y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/736/buggy-version/rover.rover.src.main.java.rover.GenericRover.java", "BodyUseAPI": [], "Fixed commit": "62245a915516589e51c14e7a50756c1bab3265eb", "Url": "https://api.github.com/repos/Birdfriender/IA-AgentScape-Rover", "Date": "2016-11-22T13:07:46Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x < ((getWorldWidth()) / (-2))) { x = (getWorldHeight()) + x; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/736/buggy-version/rover.rover.src.main.java.rover.GenericRover.java", "BodyUseAPI": [], "Fixed commit": "62245a915516589e51c14e7a50756c1bab3265eb", "Url": "https://api.github.com/repos/Birdfriender/IA-AgentScape-Rover", "Date": "2016-11-22T13:07:46Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(me.wirlie.allbanks.data.BankSession.started)) { new org.bukkit.scheduler.BukkitRunnable() { public void run() { for (me.wirlie.allbanks.data.BankSession bs : me.wirlie.allbanks.data.BankSession.activeSessions.values()) { if (bs.sessionExpired()) { bs.closeSession(); } } } }.runTaskTimer(me.wirlie.allbanks.AllBanks.getInstance(), 20, 20); me.wirlie.allbanks.data.BankSession.started = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7133/buggy-version/AllBanks.src.main.java.me.wirlie.allbanks.data.BankSession.java", "BodyUseAPI": [], "Fixed commit": "d6fdad4575dcfd59cb43aef476768b2c80060ec2", "Url": "https://api.github.com/repos/Wirlie/AllBanks-2", "Date": "2016-04-11T00:49:26Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == (lastOpenPosition)) { lastOpen = target; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7778/buggy-version/library.src.com.tjerkw.slideexpandable.library.AbstractSlideExpandableListAdapter.java", "BodyUseAPI": [], "Fixed commit": "0a993cf42ab4f884f71da48a75918d2328564c8f", "Url": "https://api.github.com/repos/grivos/Android-SlideExpandableListView", "Date": "2013-01-12T00:43:23Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f1.exists()) org.apache.commons.io.FileUtils.forceDelete(f1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/9041/buggy-version/src.fr.intechinfo.doctorj.controllers.Game.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.forceDelete(java.io.File)"], "Fixed commit": "68de865eb96e94a8ddf76fe3cab98092f2dfedca", "Url": "https://api.github.com/repos/JulienBernard/DoctorJ", "Date": "2014-07-08T13:40:25Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f2.exists()) org.apache.commons.io.FileUtils.forceDelete(f2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/9041/buggy-version/src.fr.intechinfo.doctorj.controllers.Game.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.forceDelete(java.io.File)"], "Fixed commit": "68de865eb96e94a8ddf76fe3cab98092f2dfedca", "Url": "https://api.github.com/repos/JulienBernard/DoctorJ", "Date": "2014-07-08T13:40:25Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tender.getAuthor().getId().equals(profileService.findProfileByUserLogin(userLogin).getId())) && ((proposalService.getTenderNewProposalsForCustomer(tender.getId())) > 0)) { tenderDto.setHaveNewProposal(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8366/buggy-version/src.main.java.com.softserveinc.tender.facade.impl.TenderServiceFacadeImpl.java", "BodyUseAPI": [], "Fixed commit": "588a9b7136caa10a94c0c78a7f62a91b5c92306f", "Url": "https://api.github.com/repos/if045/tender", "Date": "2014-06-25T08:43:50Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c < 0) c = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/204/buggy-version/DietTracker.src.me.ci.FoodEntry.java", "BodyUseAPI": [], "Fixed commit": "1a043bc21277347f41eab5998c1f729166fbb678", "Url": "https://api.github.com/repos/TheDudeFromCI/DietTracker", "Date": "2015-01-16T08:27:08Z"},
{"Line": "=>1094", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (record == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4893/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.record.ODatabaseRecordAbstract.java", "BodyUseAPI": [], "Fixed commit": "de598c0e03a3255028fb33092bd3177ee0065355", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-04-07T16:54:05Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLast && (!(com.facebook.imagepipeline.image.EncodedImage.isValid(newResult)))) { handleError(new java.lang.NullPointerException(\"Encoded image is not valid.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2903/buggy-version/imagepipeline.src.main.java.com.facebook.imagepipeline.producers.DecodeProducer.java", "BodyUseAPI": [], "Fixed commit": "4cbcd33873ba6d5495baa23fdec759c587907887", "Url": "https://api.github.com/repos/wantyou365/fresco", "Date": "2015-08-22T17:37:43Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cet.getCondition()) == (treePath.getLeaf())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8207/buggy-version/javacutil.src.org.checkerframework.javacutil.TreeUtils.java", "BodyUseAPI": [], "Fixed commit": "b4f481460ac0a1d6e5005c32fc217d97b51d29c3", "Url": "https://api.github.com/repos/typetools/checker-framework", "Date": "2017-02-23T05:31:35Z"},
{"Line": "=>3403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.db.client.model.Volume.getConsistencyGroup()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.emc.storageos.db.client.util.NullColumnValueGetter.isNullURI(cgURI)) { result = false; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3768/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.VPlexBlockServiceApiImpl.java", "BodyUseAPI": [], "Fixed commit": "f738c3590fdf6070ad52f229459bace26ec5a504", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-12-04T16:56:06Z"},
{"Line": "=>3408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.util.VPlexUtil.getVPLEXBackendVolume(com.emc.storageos.db.client.model.Volume,boolean,com.emc.storageos.api.service.impl.resource.VPlexBlockServiceApiImpl,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (srcVol == null) { result = false; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3768/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.VPlexBlockServiceApiImpl.java", "BodyUseAPI": [], "Fixed commit": "f738c3590fdf6070ad52f229459bace26ec5a504", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-12-04T16:56:06Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.eweblib.util.EweblibUtil.isValid(urlEncoding)) { url = java.net.URLEncoder.encode(url, urlEncoding); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7291/buggy-version/src.main.java.com.eweblib.util.HttpClientUtil.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "16bdf21bbc3135e8faa45e194167956b812f6492", "Url": "https://api.github.com/repos/antme/_eweblib", "Date": "2014-08-11T07:51:23Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((directRelation.getTransSupportMetaElement()) != null) { cell.setStyle(directRelation.getTransSupportMetaElement().getStyle()); if ((directRelation.getTransSupportMetaElement().getTransInstSemanticElement()) != null) parents = directRelation.getTransSupportMetaElement().getTransInstSemanticElement().getParentOpersConcept(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7682/buggy-version/com.variamos.gui.src.com.variamos.gui.perspeditor.PerspEditorGraph.java", "BodyUseAPI": ["com.variamos.dynsup.instance.InstPairwiseRel.getTransSupportMetaElement()", "directRelation.getTransSupportMetaElement().getTransInstSemanticElement()", "directRelation.getTransSupportMetaElement().getStyle()", "com.variamos.dynsup.instance.InstPairwiseRel.getTransSupportMetaElement()", "com.variamos.dynsup.instance.InstPairwiseRel.getTransSupportMetaElement()", "directRelation.getTransSupportMetaElement().getTransInstSemanticElement().getParentOpersConcept()", "com.mxgraph.model.mxCell.setStyle(directRelation.getTransSupportMetaElement().getStyle())", "directRelation.getTransSupportMetaElement().getTransInstSemanticElement()"], "Fixed commit": "390a76aed994e2942375e16c121b427fa9542e0e", "Url": "https://api.github.com/repos/jcmunozf/VARIAMOS", "Date": "2016-08-11T02:18:21Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((target.getUri()) != null) { mRequestHandler.obtainMessage(com.github.dimanolog.flickr.imageloader.VanGogh.MESSAGE_DOWNLOAD, target).sendToTarget(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8771/buggy-version/app.src.main.java.com.github.dimanolog.flickr.imageloader.VanGogh.java", "BodyUseAPI": ["android.os.Handler.obtainMessage(int,com.github.dimanolog.flickr.imageloader.ImageRequest)", "mRequestHandler.obtainMessage(com.github.dimanolog.flickr.imageloader.VanGogh.MESSAGE_DOWNLOAD, target).sendToTarget()"], "Fixed commit": "a850bb58f87c56b6f8e545be0e56baff61bfb84b", "Url": "https://api.github.com/repos/Dimanolog/Flickr", "Date": "2017-12-24T20:23:08Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(Context.ACTIVITY_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (activityManager != null) { availMemorInBytes = ((activityManager.getMemoryClass()) * 1024) * 1024; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8771/buggy-version/app.src.main.java.com.github.dimanolog.flickr.imageloader.VanGogh.java", "BodyUseAPI": ["android.app.ActivityManager.getMemoryClass()"], "Fixed commit": "a850bb58f87c56b6f8e545be0e56baff61bfb84b", "Url": "https://api.github.com/repos/Dimanolog/Flickr", "Date": "2017-12-24T20:23:08Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.hasSnapshotProfile()) && (this.getSnapshotProfile().equals(p))) { this.snapshotProfile = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6089/buggy-version/src.kml.Profiles.java", "BodyUseAPI": [], "Fixed commit": "56764abc7507394cc857c6f501a7e497d879cf9d", "Url": "https://api.github.com/repos/DarkLBP/Krothium-Launcher", "Date": "2016-12-27T10:47:29Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.hasReleaseProfile()) && (this.getReleaseProfile().equals(p))) { this.releaseProfile = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6089/buggy-version/src.kml.Profiles.java", "BodyUseAPI": [], "Fixed commit": "56764abc7507394cc857c6f501a7e497d879cf9d", "Url": "https://api.github.com/repos/DarkLBP/Krothium-Launcher", "Date": "2016-12-27T10:47:29Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((blockedTests) == 0) { blockedtd = \"td_footer_blocked_zero\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/924/buggy-version/src.vddlogger.VddSummaryReporter.java", "BodyUseAPI": [], "Fixed commit": "d105305a09da2fdd69c28c4aa22850d849e9ddf1", "Url": "https://api.github.com/repos/sugarcrm/VooDooDriver", "Date": "2011-10-27T01:33:49Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n1 != n2) { footerrun = \"td_footer_run_err\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/924/buggy-version/src.vddlogger.VddSummaryReporter.java", "BodyUseAPI": [], "Fixed commit": "d105305a09da2fdd69c28c4aa22850d849e9ddf1", "Url": "https://api.github.com/repos/sugarcrm/VooDooDriver", "Date": "2011-10-27T01:33:49Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.delete())) { throw new java.io.IOException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5118/buggy-version/src.main.java.sem.group47.main.Log.java", "BodyUseAPI": [], "Fixed commit": "6164bb49635e51063834e0501eff172d0cea780c", "Url": "https://api.github.com/repos/karinvangarderen/SEMGroup47", "Date": "2015-09-22T09:36:54Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((file) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1833/buggy-version/demeter-base.src.main.java.com.heliosphere.demeter.base.resource.AbstractResource.java", "BodyUseAPI": [], "Fixed commit": "67275913cbd414f0a38e2e44bc03a9a127f086e6", "Url": "https://api.github.com/repos/ressec/demeter", "Date": "2016-12-15T17:31:42Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((selection) == (NullValue)) && ((currTab) != (net.rujel.ui.CoursesSelector.TEACHER_TAB))) selection = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8709/buggy-version/RujelBase.Sources.net.rujel.ui.CoursesSelector.java", "BodyUseAPI": [], "Fixed commit": "1e8f71fe0d98edaf363660149be9f01cfa7aa402", "Url": "https://api.github.com/repos/baywind/rujel", "Date": "2013-02-09T17:32:48Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.item.ItemStack.getTagCompound()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tagCompound == null) { return \"no nbt\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4469/buggy-version/src.main.java.mezz.jei.debug.DebugItem.java", "BodyUseAPI": [], "Fixed commit": "4fea04f4fb4b3053234d954c1b24329642ddfd4b", "Url": "https://api.github.com/repos/mezz/JustEnoughItems", "Date": "2016-06-02T00:26:27Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mCursor) == null) || ((mCursor.getCount()) <= position)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4165/buggy-version/Meizitu.src.main.java.me.isming.meizitu.adapter.FeedsAdapter.java", "BodyUseAPI": [], "Fixed commit": "a3c5013fe296d66b3de4faa6c3e77f088fcd4268", "Url": "https://api.github.com/repos/sangmingming/Meizitu", "Date": "2014-11-24T02:17:50Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.isming.meizitu.adapter.FeedsAdapter.getItem((position - (mListView.getHeaderViewsCount())))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (feed == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4165/buggy-version/Meizitu.src.main.java.me.isming.meizitu.app.FeedsFragment.java", "BodyUseAPI": [], "Fixed commit": "a3c5013fe296d66b3de4faa6c3e77f088fcd4268", "Url": "https://api.github.com/repos/sangmingming/Meizitu", "Date": "2014-11-24T02:17:50Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (different(s1, s2)) throw new java.security.InvalidParameterException(((((\"Trying to merge \\\"\" + s1) + \"\\\" with \\\"\") + s2) + \"\\\"!\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6482/buggy-version/src.Adress.java", "BodyUseAPI": [], "Fixed commit": "fce9c42bd8a9d1e530b56c8b41cb879159b63fb7", "Url": "https://api.github.com/repos/SRSoftware/CardDavCleaner", "Date": "2014-01-23T13:41:42Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.text.MessageFormat.format(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (variable.getFormat().contains(oldTypeUsage)) { variable.setFormat(variable.getFormat().replaceAll(oldTypeUsage, java.text.MessageFormat.format(typeUsage, newTypeName))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5581/buggy-version/plugins.ru.runa.gpd.src.ru.runa.gpd.util.VariableUtils.java", "BodyUseAPI": ["variable.getFormat().replaceAll(java.lang.String,java.lang.String)", "ru.runa.gpd.lang.model.Variable.setFormat(variable.getFormat().replaceAll(oldTypeUsage, java.text.MessageFormat.format(typeUsage, newTypeName)))", "ru.runa.gpd.lang.model.Variable.getFormat()"], "Fixed commit": "62bed7f88c54fd8e13509ac9643877a5eb2ac545", "Url": "https://api.github.com/repos/processtech/runawfe-devstudio", "Date": "2017-09-25T19:47:55Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.text.MessageFormat.format(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (attribute.getFormat().contains(oldTypeUsage)) { attribute.setFormat(attribute.getFormat().replaceAll(oldTypeUsage, java.text.MessageFormat.format(typeUsage, newTypeName))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5581/buggy-version/plugins.ru.runa.gpd.src.ru.runa.gpd.util.VariableUtils.java", "BodyUseAPI": ["ru.runa.gpd.lang.model.Variable.getFormat()", "ru.runa.gpd.lang.model.Variable.setFormat(attribute.getFormat().replaceAll(oldTypeUsage, java.text.MessageFormat.format(typeUsage, newTypeName)))", "attribute.getFormat().replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "62bed7f88c54fd8e13509ac9643877a5eb2ac545", "Url": "https://api.github.com/repos/processtech/runawfe-devstudio", "Date": "2017-09-25T19:47:55Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (modal) { getModal().removeFromParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6276/buggy-version/src.main.java.ru.fly.client.ui.panel.window.FWindow.java", "BodyUseAPI": [], "Fixed commit": "be4a66dba51e39ba7f4ac7f904588e22ccc08a15", "Url": "https://api.github.com/repos/filius/fly-gwt", "Date": "2015-07-10T10:18:38Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.drill.exec.planner.sql.SchemaUtilites.findSchema(org.apache.calcite.schema.SchemaPlus,java.util.List<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (schema == null) { org.apache.drill.exec.planner.sql.SchemaUtilites.throwSchemaNotFoundException(defaultSchema, SchemaUtilites.SCHEMA_PATH_JOINER.join(schemaPathGivenInCmd)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7931/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.planner.sql.handlers.DescribeTableHandler.java", "BodyUseAPI": [], "Fixed commit": "6c819dcdaf5df4da06dd94bd4815bee1f58adcce", "Url": "https://api.github.com/repos/vkorukanti/drill", "Date": "2015-05-29T15:57:40Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.drill.exec.planner.sql.SchemaUtilites.findSchema(org.apache.calcite.schema.SchemaPlus,java.util.List<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.drill.exec.planner.sql.SchemaUtilites.isRootSchema(schema)) { throw org.apache.drill.common.exceptions.UserException.validationError().message(\"No schema selected.\").build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7931/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.planner.sql.handlers.DescribeTableHandler.java", "BodyUseAPI": [], "Fixed commit": "6c819dcdaf5df4da06dd94bd4815bee1f58adcce", "Url": "https://api.github.com/repos/vkorukanti/drill", "Date": "2015-05-29T15:57:40Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selfDamage) { gameModel.getAttackAction().inflictDamageToPosition(active.getElement(), active.getCurrentPosition().getPositionID(), active.getCurrentPosition().getPositionID(), 10, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/291/buggy-version/src.network.network.server.PokemonGameManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "4a5f72a2791e04bb4d612019cb43eebc4c6ee3e2", "Url": "https://api.github.com/repos/Krakomat/final_tcg_3", "Date": "2015-12-11T12:27:13Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(gameModel.getPosition(PositionID.STADIUM).isEmpty())) && (gameModel.getPosition(PositionID.STADIUM).getTopCard().getCardId().equals(\"00342\"))) && (active.getName().contains(\"Lt. Surge\"))) { boolean answer = player.playerDecidesYesOrNo(\"Do you want to use the effect of Vermillion City Gym?\"); if (answer) { if ((gameModel.getAttackAction().flipACoin()) == (model.enums.Coin.HEADS)) { gameModel.getGameModelParameters().setVermillionCityGymAttackModifier(true); }else { selfDamage = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/291/buggy-version/src.network.network.server.PokemonGameManagerImpl.java", "BodyUseAPI": ["gameModel.getGameModelParameters().setVermillionCityGymAttackModifier(boolean)", "gameModel.getAttackAction().flipACoin()", "model.interfaces.PokemonGame.getAttackAction()", "model.interfaces.PokemonGame.getGameModelParameters()"], "Fixed commit": "4a5f72a2791e04bb4d612019cb43eebc4c6ee3e2", "Url": "https://api.github.com/repos/Krakomat/final_tcg_3", "Date": "2015-12-11T12:27:13Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.rascalmpl.values.uptr.TreeAdapter.isAmb(ambCluster))) { return ambCluster; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2636/buggy-version/src.org.rascalmpl.parser.uptr.action.RascalFunctionActionExecutor.java", "BodyUseAPI": [], "Fixed commit": "c8984054b0886ebb9585f35555f3ec66c97d8da9", "Url": "https://api.github.com/repos/usethesource/rascal", "Date": "2017-05-12T12:03:05Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (progressBar.isEnabled()) { progressBar.setProgress(progress); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7172/buggy-version/src.main.java.de.domradio.activity.util.ProgressClient.java", "BodyUseAPI": ["com.gc.materialdesign.views.ProgressBarDeterminate.setProgress(int)"], "Fixed commit": "e94de56a46ab4383cd9ebd978710dc55f4a1a5b8", "Url": "https://api.github.com/repos/stetro/domradio-android", "Date": "2015-07-27T12:59:58Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.contains(\"www.\")) { result = result.substring(((result.indexOf(\"www.\")) + 4)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7633/buggy-version/ruby-business.src.main.java.com.fpt.ruby.business.helper.DisplayAnswerHelper.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "4e13724e821b997fb147279ee4aa3bff263b85a0", "Url": "https://api.github.com/repos/NguyenAnhDuc/new-ruby", "Date": "2014-11-12T09:50:17Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (trim.size())) { trimming = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2100/buggy-version/src.com.lithium3141.OpenWarp.util.StringUtil.java", "BodyUseAPI": [], "Fixed commit": "c7c15e90277329285e48fb7dd42758f3b5641cb1", "Url": "https://api.github.com/repos/PneumatiCraft/OpenWarp", "Date": "2011-07-15T03:37:20Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((first_aired_date.length()) > 10) { first_aired_date = first_aired_date.substring(0, 10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3345/buggy-version/TV_SHOWS.src.engine.Episode.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "208028bbc14d6a296110327b7a06b71c1ece3b0d", "Url": "https://api.github.com/repos/luca9294/TV-SHOW-N", "Date": "2014-04-14T21:01:28Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Series.getDatum(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((plot.length()) < 45) len = plot.length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4803/buggy-version/Series.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "3ba4dc1baacbd845720936759d5bbcc009f39b12", "Url": "https://api.github.com/repos/AntiBlade/Movie-Journal", "Date": "2015-10-24T13:25:41Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Movie.getDatum(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((plot.length()) < 45) len = plot.length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4803/buggy-version/Movie.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "3ba4dc1baacbd845720936759d5bbcc009f39b12", "Url": "https://api.github.com/repos/AntiBlade/Movie-Journal", "Date": "2015-10-24T13:25:41Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (phoneNumber.trim().isEmpty()) return \"NULL\"; else return phoneNumber;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5320/buggy-version/MarketPlace.src.model.User.java", "BodyUseAPI": [], "Fixed commit": "bf9d5468685200b3419191c80e84d5d0dee210b5", "Url": "https://api.github.com/repos/YufeiG/thedolphinproject", "Date": "2012-07-15T20:29:06Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ctrip.platform.dal.daogen.resource.Response.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (httpCode.equals(WebUtil.NO_VALIDATION)) { status = com.ctrip.platform.dal.daogen.domain.Status.OK(); return status; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1861/buggy-version/dal-dao-gen.src.main.java.com.ctrip.platform.dal.daogen.resource.DatabaseResource.java", "BodyUseAPI": [], "Fixed commit": "6355acf67e4a69c2928ec49c5fba01c6680c8d77", "Url": "https://api.github.com/repos/ctripcorp/dal", "Date": "2017-09-30T02:33:38Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCdnFeaturesEnabled()) { profiles.add(\"cdn\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7904/buggy-version/konker.registry.src.main.java.com.konkerlabs.platform.registry.RegistryAppInitializer.java", "BodyUseAPI": [], "Fixed commit": "3697fc6d015069e9afd3f0dc668afa38a1aace8f", "Url": "https://api.github.com/repos/KonkerLabs/konker-platform", "Date": "2017-01-23T18:49:53Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nabucco.alfresco.enhScriptEnv.common.script.LogFunction.LoggerData.getScriptLogger()", "org.mozilla.javascript.ScriptRuntime.toObject(org.mozilla.javascript.Scriptable,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((setScriptLogger != scriptLogger) && (setScriptLogger != null)) { if ((setScriptLogger instanceof org.mozilla.javascript.NativeJavaObject) && (!(((org.mozilla.javascript.NativeJavaObject) (setScriptLogger)).unwrap().getClass().equals(org.springframework.extensions.webscripts.ScriptLogger.class)))) { throw new java.lang.IllegalStateException(\"ScriptLogger has already been set - not allowed to replace it once set\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/485/buggy-version/framework.common.src.main.java.org.nabucco.alfresco.enhScriptEnv.common.script.LogFunction.java", "BodyUseAPI": [], "Fixed commit": "6edc620bc87b5cc480a122d824b951df7d399fe7", "Url": "https://api.github.com/repos/AFaust/alfresco-enhanced-script-environment", "Date": "2013-12-22T14:00:02Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (settings.SFX) hit.play(0.8F);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3710/buggy-version/core.src.com.github.bot.curiosone.app.games.wordtiles.tiles.Tile.java", "BodyUseAPI": [], "Fixed commit": "a64f5e879e3bd2a2156dd8cfad59abca11d7ecf6", "Url": "https://api.github.com/repos/curiosone-bot/curiosone-app", "Date": "2017-07-25T08:02:37Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (settings.SFX) hit.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3710/buggy-version/core.src.com.github.bot.curiosone.app.games.wordtiles.tiles.Tile.java", "BodyUseAPI": [], "Fixed commit": "a64f5e879e3bd2a2156dd8cfad59abca11d7ecf6", "Url": "https://api.github.com/repos/curiosone-bot/curiosone-app", "Date": "2017-07-25T08:02:37Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ship1.id) < (ship2.id)) { ship1.setMass(((ship2.mass) + (ship1.mass))); ship1.model.killShip(ship2); }else { ship2.setMass(((ship2.mass) + (ship1.mass))); ship2.model.killShip(ship1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7140/buggy-version/core.src.com.gmail.dajinchu.Ship.java", "BodyUseAPI": ["com.gmail.dajinchu.Ship.setMass(int)", "com.gmail.dajinchu.Model.killShip(com.gmail.dajinchu.Ship)", "com.gmail.dajinchu.Model.killShip(com.gmail.dajinchu.Ship)", "com.gmail.dajinchu.Ship.setMass(int)"], "Fixed commit": "1c56593ca2476bfe63cee7c174be4860c608773d", "Url": "https://api.github.com/repos/dajinchu/ships-and-suns", "Date": "2015-02-07T19:19:54Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["snmp.AgentNode.getChild(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (anode == null) node.createChild(\"edit\").setAction(act).build().setSerializable(false); else anode.setAction(act);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8184/buggy-version/src.main.java.snmp.AgentNode.java", "BodyUseAPI": ["org.dsa.iot.dslink.node.Node.setAction(org.dsa.iot.dslink.node.actions.Action)"], "Fixed commit": "ef1ebef03ea6d20ea367fef012af06eee3363995", "Url": "https://api.github.com/repos/IOT-DSA/dslink-java-snmp", "Date": "2015-06-23T00:30:21Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vertDesc) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8108/buggy-version/trackviewer.src.main.chart.JChart.java", "BodyUseAPI": [], "Fixed commit": "170719444cbc9ff9152dc8e2b11929fae7134824", "Url": "https://api.github.com/repos/msteiger/trackviewer", "Date": "2012-09-20T14:09:12Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((horzDesc) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8108/buggy-version/trackviewer.src.main.chart.JChart.java", "BodyUseAPI": [], "Fixed commit": "170719444cbc9ff9152dc8e2b11929fae7134824", "Url": "https://api.github.com/repos/msteiger/trackviewer", "Date": "2012-09-20T14:09:12Z"},
{"Line": "=>824", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (fileName != null) { fileName = fileName.replaceAll(\"[\\u0001-\\u001f<>:\\\"/\\\\\\\\|?*\\u007f]+\", \"\").trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8848/buggy-version/TMessagesProj.src.main.java.org.telegram.messenger.FileLoader.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "e9e40cb13ea942b148b259c083fb3364a0cd90ea", "Url": "https://api.github.com/repos/DcSoK/Awesomegram", "Date": "2017-12-09T00:45:38Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmicroscopy.shoola.env.data.model.DownloadActivityParam.getFolder()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(f.isDirectory())) f = f.getParentFile();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6495/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.env.ui.UserNotifierImpl.java", "BodyUseAPI": ["java.io.File.getParentFile()"], "Fixed commit": "dd215f3ad4e7dfa4dce65114ffaf5d73648b0405", "Url": "https://api.github.com/repos/openmicroscopy/openmicroscopy", "Date": "2012-12-19T14:39:17Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lexer.token()) == (JSONToken.NULL)) { lexer.next(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3229/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": ["com.alibaba.fastjson.parser.JSONLexer.next()"], "Fixed commit": "72114a641d3a20875f6483532371b974f02d29b0", "Url": "https://api.github.com/repos/cmanlh/fastjson", "Date": "2014-10-28T11:45:34Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(java.lang.System.getProperty(\"os.name\").startsWith(\"Mac\"))) { this.setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4740/buggy-version/src.org.myunitracker.gui.MyUniTrackerGUI.java", "BodyUseAPI": [], "Fixed commit": "26ff3c2ede4520a18d7a713e194c3458de12a8f4", "Url": "https://api.github.com/repos/SamuelHeath/MyUniTracker", "Date": "2017-02-28T11:10:36Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (code instanceof wyil.transforms.ExternJvm) { }else if (code instanceof wyil.transforms.Fail) { code = infer(((wyil.transforms.Fail) (code)), entry, environment); }else if (code instanceof wyil.transforms.FieldLoad) { wyil.transforms.Block block = infer(((wyil.transforms.FieldLoad) (code)), entry, environment); rewrites.put(index, block); return environment; }else if (code instanceof wyil.transforms.IndirectInvoke) { code = infer(((wyil.transforms.IndirectInvoke) (code)), entry, environment); }else if (code instanceof wyil.transforms.IndirectSend) { code = infer(((wyil.transforms.IndirectSend) (code)), entry, environment); }else if (code instanceof wyil.transforms.Invoke) { code = infer(((wyil.transforms.Invoke) (code)), entry, environment); }else if (code instanceof wyil.transforms.Label) { }else if (code instanceof wyil.transforms.ListOp) { code = infer(((wyil.transforms.ListOp) (code)), entry, environment); }else if (code instanceof wyil.transforms.ListLoad) { code = infer(((wyil.transforms.ListLoad) (code)), entry, environment); }else if (code instanceof wyil.transforms.Load) { code = infer(((wyil.transforms.Load) (code)), entry, environment); }else if (code instanceof wyil.transforms.MultiStore) { code = infer(((wyil.transforms.MultiStore) (code)), entry, environment); }else if (code instanceof wyil.transforms.NewDict) { code = infer(((wyil.transforms.NewDict) (code)), entry, environment); }else if (code instanceof wyil.transforms.NewList) { code = infer(((wyil.transforms.NewList) (code)), entry, environment); }else if (code instanceof wyil.transforms.NewRecord) { code = infer(((wyil.transforms.NewRecord) (code)), entry, environment); }else if (code instanceof wyil.transforms.NewSet) { code = infer(((wyil.transforms.NewSet) (code)), entry, environment); }else if (code instanceof wyil.transforms.Return) { code = infer(((wyil.transforms.Return) (code)), entry, environment); }else if (code instanceof wyil.transforms.Send) { code = infer(((wyil.transforms.Send) (code)), entry, environment); }else if (code instanceof wyil.transforms.Store) { code = infer(((wyil.transforms.Store) (code)), entry, environment); }else if (code instanceof wyil.transforms.SetOp) { code = infer(((wyil.transforms.SetOp) (code)), entry, environment); }else if (code instanceof wyil.transforms.UnOp) { code = infer(((wyil.transforms.UnOp) (code)), entry, environment); }else { syntaxError((\"Need to finish type inference \" + code), filename, entry); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4806/buggy-version/src.wyil.transforms.TypePropagation.java", "BodyUseAPI": [], "Fixed commit": "8e0d06fe51e8755d3af16707e7ae4059eb9dc5f2", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-06-10T03:27:22Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wyil.transforms.TypePropagation.Env.pop()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (wyil.transforms.Type.isSubtype(wyil.transforms.Type.T_PROCESS(Type.T_ANY), lhs_t)) { wyil.transforms.Type.Process tp = ((wyil.transforms.Type.Process) (lhs_t)); blk.add(wyil.lang.Code.UnOp(tp, Code.UOp.PROCESSACCESS), stmt.attributes()); lhs_t = tp.element(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4806/buggy-version/src.wyil.transforms.TypePropagation.java", "BodyUseAPI": [], "Fixed commit": "8e0d06fe51e8755d3af16707e7ae4059eb9dc5f2", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-06-10T03:27:22Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (code instanceof wyil.transforms.FieldLoad) { wyil.transforms.Block block = infer(((wyil.transforms.FieldLoad) (code)), entry, environment); rewrites.put(index, block); return environment; }else if (code instanceof wyil.transforms.IndirectInvoke) { code = infer(((wyil.transforms.IndirectInvoke) (code)), entry, environment); }else if (code instanceof wyil.transforms.IndirectSend) { code = infer(((wyil.transforms.IndirectSend) (code)), entry, environment); }else if (code instanceof wyil.transforms.Invoke) { code = infer(((wyil.transforms.Invoke) (code)), entry, environment); }else if (code instanceof wyil.transforms.Label) { }else if (code instanceof wyil.transforms.ListOp) { code = infer(((wyil.transforms.ListOp) (code)), entry, environment); }else if (code instanceof wyil.transforms.ListLoad) { code = infer(((wyil.transforms.ListLoad) (code)), entry, environment); }else if (code instanceof wyil.transforms.Load) { code = infer(((wyil.transforms.Load) (code)), entry, environment); }else if (code instanceof wyil.transforms.MultiStore) { code = infer(((wyil.transforms.MultiStore) (code)), entry, environment); }else if (code instanceof wyil.transforms.NewDict) { code = infer(((wyil.transforms.NewDict) (code)), entry, environment); }else if (code instanceof wyil.transforms.NewList) { code = infer(((wyil.transforms.NewList) (code)), entry, environment); }else if (code instanceof wyil.transforms.NewRecord) { code = infer(((wyil.transforms.NewRecord) (code)), entry, environment); }else if (code instanceof wyil.transforms.NewSet) { code = infer(((wyil.transforms.NewSet) (code)), entry, environment); }else if (code instanceof wyil.transforms.Return) { code = infer(((wyil.transforms.Return) (code)), entry, environment); }else if (code instanceof wyil.transforms.Send) { code = infer(((wyil.transforms.Send) (code)), entry, environment); }else if (code instanceof wyil.transforms.Store) { code = infer(((wyil.transforms.Store) (code)), entry, environment); }else if (code instanceof wyil.transforms.SetOp) { code = infer(((wyil.transforms.SetOp) (code)), entry, environment); }else if (code instanceof wyil.transforms.UnOp) { code = infer(((wyil.transforms.UnOp) (code)), entry, environment); }else { syntaxError((\"Need to finish type inference \" + code), filename, entry); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4806/buggy-version/src.wyil.transforms.TypePropagation.java", "BodyUseAPI": [], "Fixed commit": "8e0d06fe51e8755d3af16707e7ae4059eb9dc5f2", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-06-10T03:27:22Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wasCountingDown && (!(isCountingDown))) { currentTime = timeFromEarlierActivity; time.setText(currentTime); createCountDownTimer(); start.setClickable(false); stop.setClickable(true); isCountingDown = true; }else if ((!wasCountingDown) && (!(isCountingDown))) { currentTime = timeFromEarlierActivity; time.setText(currentTime); start.setClickable(true); stop.setClickable(false); isCountingDown = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1328/buggy-version/app.src.main.java.com.google.zach.OnTargetFencing.HomeScreen.java", "BodyUseAPI": [], "Fixed commit": "6af2a5b73b703a0bf6ba2be9f406acef3734367c", "Url": "https://api.github.com/repos/SnackKing/DigitalFencingRef", "Date": "2017-07-20T00:00:56Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vGene.getPartitioning().getRelativePosition(com.milaboratory.mixcr.util.GeneFeature,com.milaboratory.mixcr.util.ReferencePoint)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (vAnchorPositionInRef >= (vHit.getAlignment(cdr3target).getSequence1Range().getFrom())) { vExtension = null; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2360/buggy-version/src.main.java.com.milaboratory.mixcr.util.AlignmentExtender.java", "BodyUseAPI": [], "Fixed commit": "291723b805ae04429f958224a8b13cfdfd3d2020", "Url": "https://api.github.com/repos/milaboratory/mixcr", "Date": "2017-04-14T22:03:13Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jGene.getPartitioning().getRelativePosition(com.milaboratory.mixcr.util.GeneFeature,com.milaboratory.mixcr.util.ReferencePoint)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (jAnchorPositionInRef <= (jHit.getAlignment(cdr3target).getSequence1Range().getTo())) { jExtension = null; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2360/buggy-version/src.main.java.com.milaboratory.mixcr.util.AlignmentExtender.java", "BodyUseAPI": [], "Fixed commit": "291723b805ae04429f958224a8b13cfdfd3d2020", "Url": "https://api.github.com/repos/milaboratory/mixcr", "Date": "2017-04-14T22:03:13Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHostGroupPosition) != 0) mFirstCall = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4691/buggy-version/src.com.inovex.zabbixmobile.activities.BaseHostGroupSpinnerActivity.java", "BodyUseAPI": [], "Fixed commit": "d4f10d797db265d43b1fd338a0661536f02b6aab", "Url": "https://api.github.com/repos/inovex/zax", "Date": "2013-07-26T12:23:25Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.ObjectInputStream.readObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (logData == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/661/buggy-version/src.com.za.logging.ZALoggingWorker.java", "BodyUseAPI": [], "Fixed commit": "b1d0e9a25cfefc59e8c6082c9b34b0ecec1e9663", "Url": "https://api.github.com/repos/chjcken/ZLoggingGearmanWorker", "Date": "2015-08-07T16:43:22Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((cmdLine.getArgs().length) != 1) throw new uk.ac.tgac.rampart.ParseException(\"Unexpected number of arguments on the command line\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1518/buggy-version/src.main.java.uk.ac.tgac.rampart.Rampart.java", "BodyUseAPI": [], "Fixed commit": "97a40b17c277b100db200bd1685a8317a9dc27fa", "Url": "https://api.github.com/repos/TGAC/RAMPART", "Date": "2013-10-25T17:47:29Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (injectee.isOptional()) { arguments[lcv] = null; continue; }else { throw new java.lang.IllegalStateException((((((\"Could not find injectee \" + injectee) + \" for subscriber \") + (org.glassfish.hk2.utilities.reflection.Pretty.method(subscription))) + \" on class \") + (target.getClass().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3297/buggy-version/hk2.hk2-api.src.main.java.org.glassfish.hk2.internal.DefaultTopicDistributionService.java", "BodyUseAPI": [], "Fixed commit": "1d40f2b4ec0295d9000852dd465d9cdde60db2c0", "Url": "https://api.github.com/repos/hk2-project/hk2", "Date": "2014-02-27T13:37:02Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (injectee.isSelf()) { arguments[lcv] = injectee.getInjecteeDescriptor(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3297/buggy-version/hk2.hk2-api.src.main.java.org.glassfish.hk2.internal.DefaultTopicDistributionService.java", "BodyUseAPI": ["org.glassfish.hk2.utilities.InjecteeImpl.getInjecteeDescriptor()"], "Fixed commit": "1d40f2b4ec0295d9000852dd465d9cdde60db2c0", "Url": "https://api.github.com/repos/hk2-project/hk2", "Date": "2014-02-27T13:37:02Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.dundee.computing.aec.instagrim.lib.Convertors.SplitRequestPath(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((args.length) == 3) { request.setAttribute(\"profilePicture\", \"profilePicture\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1536/buggy-version/src.main.java.uk.ac.dundee.computing.aec.instagrim.servlets.Image.java", "BodyUseAPI": [], "Fixed commit": "159b8b4b9b3dc4424f71512f4ee3da623c3ab681", "Url": "https://api.github.com/repos/TwoRice/instagrim", "Date": "2016-10-21T00:32:22Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((doc.select(\"p\").first()) != null) Description = doc.select(\"p\").first().text();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7901/buggy-version/src.main.java.fetcher.model.PageEntry.java", "BodyUseAPI": ["org.jsoup.nodes.Document.select(java.lang.String)", "doc.select(\"p\").first().text()", "doc.select(\"p\").first()"], "Fixed commit": "a67d39e84fa6e52bf54790fbd5e98f0f18c2f7f0", "Url": "https://api.github.com/repos/arocketman/URL-pad", "Date": "2014-10-26T16:50:38Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(com.prairie.eemory.util.IDialogSettingsUtil.get(Constants.PLUGIN_SETTINGS_KEY_TOKEN))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1167/buggy-version/com.prairie.eemory.src.com.prairie.eemory.exception.EDAMUserExceptionHandler.java", "BodyUseAPI": [], "Fixed commit": "3440a3c55cec25e8b1729552503fa02abcc3d51a", "Url": "https://api.github.com/repos/prairie/Eemory", "Date": "2014-12-01T13:05:18Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(com.prairie.eemory.util.IDialogSettingsUtil.get(Constants.PLUGIN_SETTINGS_KEY_TOKEN))) { return com.prairie.eemory.util.LogUtil.ok(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1167/buggy-version/com.prairie.eemory.src.com.prairie.eemory.exception.EDAMUserExceptionHandler.java", "BodyUseAPI": [], "Fixed commit": "3440a3c55cec25e8b1729552503fa02abcc3d51a", "Url": "https://api.github.com/repos/prairie/Eemory", "Date": "2014-12-01T13:05:18Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((event.getCode()) == (javafx.scene.input.KeyCode.ENTER)) && (event.isShiftDown())) { in.appendText(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2430/buggy-version/src.main.java.ch.tiim.sco.gui.main.ConsoleView.java", "BodyUseAPI": [], "Fixed commit": "43b50f502951e87b8bee0ff362ea35e1a6a9d5db", "Url": "https://api.github.com/repos/Tiim/SwimCoachOrganizer", "Date": "2016-01-23T22:49:26Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fragmentManager.getFragments().size()) > 0) fragmentManager.popBackStack();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7664/buggy-version/KutumbLink.app.src.main.java.kutumblink.appants.com.kutumblink.HomeActivity.java", "BodyUseAPI": ["android.support.v4.app.FragmentManager.popBackStack()"], "Fixed commit": "133bf276ce15e5c7328ff8bcaf081248dafd94b2", "Url": "https://api.github.com/repos/RajesMca008/KutCon", "Date": "2017-06-23T14:25:18Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.uci.ics.crawler4j.frontier.DocIDServer.getNewUnseenDocID(page.redirectedToUrl)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (docid >= 0) { webURL.setDocid(docid); frontier.schedule(webURL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4378/buggy-version/src.main.java.edu.uci.ics.crawler4j.crawler.WebCrawler.java", "BodyUseAPI": ["edu.uci.ics.crawler4j.url.WebURL.setDocid(int)"], "Fixed commit": "3a4f89a1f9cf63cade09b2813366a4e4b071ffd6", "Url": "https://api.github.com/repos/EgbertW/crawler4j", "Date": "2015-07-14T12:55:54Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zahm.horsetrack.data.HorseDataAccess.getInstance().findHorseWithNumber(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (newWinner == null) { throw new org.zahm.horsetrack.exception.InvalidHorseException(java.lang.Integer.toString(winningHorse)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3753/buggy-version/src.org.zahm.horsetrack.service.BettingService.java", "BodyUseAPI": [], "Fixed commit": "dc68a8b3040c906786aeb1591181f2aa65bcca75", "Url": "https://api.github.com/repos/robzahm/horsetrack", "Date": "2017-04-04T03:12:24Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (onScreen) { for (org.lorenzoleonardini.badger.physics.PhysicsObject o : objs) for (java.awt.event.org.lorenzoleonardini.badger.input.MouseEvent evt : o.mouseEvents) evt.onMouse(x, y); for (java.awt.event.org.lorenzoleonardini.badger.input.MouseEvent evt : engine.mouseEvents) evt.onMouse(x, y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2383/buggy-version/src.org.lorenzoleonardini.badger.input.Mouse.java", "BodyUseAPI": [], "Fixed commit": "d9df1ee90f989f0e47f2a094543070d1359a3ba4", "Url": "https://api.github.com/repos/LorenzoLeonardini/Badger-Engine", "Date": "2017-04-25T16:51:17Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((co.raawr.cah.CAH.players.indexOf(p)) < (co.raawr.cah.CAH.czar)) { (co.raawr.cah.CAH.czar)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5247/buggy-version/src.co.raawr.cah.CAH.java", "BodyUseAPI": [], "Fixed commit": "982cd5a655fa77e786c39f9593c48e44a30aa21b", "Url": "https://api.github.com/repos/Rurigok/cah", "Date": "2013-05-04T18:02:03Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pocketserver.player.PlayerRegistry.get().getPlayer(dg.sender())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (player == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1418/buggy-version/src.main.java.com.pocketserver.net.packets.message.ChatPacket.java", "BodyUseAPI": [], "Fixed commit": "a4f28b31b14d59c4e3abfcbb3726cb61e2aa939d", "Url": "https://api.github.com/repos/PocketServer/PocketServer-Ref", "Date": "2015-10-31T09:01:21Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (decision == null) { if (policyCompliance.getResult().equals(PolicyCompliance.MAYBE)) { decision = eu.musesproject.server.risktrust.Decision.MAYBE_ACCESS_WITH_RISKTREATMENTS; }else if (policyCompliance.getResult().equals(PolicyCompliance.DENY)) { decision = eu.musesproject.server.risktrust.Decision.STRONG_DENY_ACCESS; }else if (policyCompliance.getResult().equals(PolicyCompliance.ALLOW)) { decision = eu.musesproject.server.risktrust.Decision.GRANTED_ACCESS; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1334/buggy-version/src.main.java.eu.musesproject.server.eventprocessor.correlator.global.Rt2aeGlobal.java", "BodyUseAPI": [], "Fixed commit": "69cc5f1aaa83ad84b05936cef0eb32cbfde747f0", "Url": "https://api.github.com/repos/MusesProject/MusesServer", "Date": "2015-04-14T16:47:07Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((totalLoan != null) && ((totalLoan.intValue()) > 0)) { this.totalLoan = totalLoan; }else { this.totalLoan = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5847/buggy-version/src.java.com.autopay.crm.model.search.CustomerSearchCriteria.java", "BodyUseAPI": [], "Fixed commit": "8434421799b00a8f900ecbbaba002da31cfe6ca2", "Url": "https://api.github.com/repos/jwang2/CRM", "Date": "2013-10-17T20:51:32Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((totalFinanced != null) && ((totalFinanced.intValue()) > 0)) { this.totalFinanced = totalFinanced; }else { this.totalFinanced = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5847/buggy-version/src.java.com.autopay.crm.model.search.CustomerSearchCriteria.java", "BodyUseAPI": [], "Fixed commit": "8434421799b00a8f900ecbbaba002da31cfe6ca2", "Url": "https://api.github.com/repos/jwang2/CRM", "Date": "2013-10-17T20:51:32Z"},
{"Line": "=>678", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((unfilledRequest) != null) available += unfilledRequest.count;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2197/buggy-version/src.main.java.net.sourceforge.javaflacencoder.FLACEncoder.java", "BodyUseAPI": [], "Fixed commit": "0803b6fea9ff1b27f43d35030f29af62ae9dea64", "Url": "https://api.github.com/repos/amplexus/java-flac-encoder", "Date": "2016-06-10T08:54:31Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((expr.getLength()) == 0) { return com.oracle.truffle.r.runtime.RRuntime.DOUBLE_NA; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8457/buggy-version/com.oracle.truffle.r.library.src.com.oracle.truffle.r.library.stats.deriv.D.java", "BodyUseAPI": [], "Fixed commit": "4790b3420b7ba9077eaeb1b72b397bb318bca490", "Url": "https://api.github.com/repos/oracle/fastr", "Date": "2017-03-21T10:33:28Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.subutai.core.hubmanager.impl.tunnel.TunnelHelper.getPeerTunnelState(java.lang.String,io.subutai.core.hubmanager.impl.ConfigManager)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((tunnelInfoDto != null) && (tunnelInfoDto.getTunnelStatus().equals(io.subutai.core.hubmanager.impl.tunnel.READY))) { java.util.Map<java.lang.Long, java.lang.String> map = parseResult(result.getStdOut()); if (((io.subutai.core.hubmanager.impl.tunnel.TunnelEventProcessor.OPENED_IP_PORT) == null) || (!(map.containsValue(io.subutai.core.hubmanager.impl.tunnel.TunnelEventProcessor.OPENED_IP_PORT)))) { sendDataToHub(map); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6480/buggy-version/management.server.core.hub-manager.hub-manager-impl.src.main.java.io.subutai.core.hubmanager.impl.tunnel.TunnelEventProcessor.java", "BodyUseAPI": [], "Fixed commit": "a39ea0f69e7409d177757013609cfe5cf8d876a2", "Url": "https://api.github.com/repos/subutai-io/peer-os", "Date": "2017-02-06T09:23:30Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listToShow.get(position).getIs_done()) == null) listToShow.get(position).setIs_done(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7001/buggy-version/oneToDo.src.main.java.com.vector.onetodo.TaskListAdapter.java", "BodyUseAPI": ["java.util.List<com.vector.onetodo.db.gen.ToDo>.get(int)", "listToShow.get(position).setIs_done(boolean)"], "Fixed commit": "41d84f3970e5d37349b61ac0c14846286fda38f7", "Url": "https://api.github.com/repos/vector-solutions/OneToDoAndroidStudio", "Date": "2015-04-29T20:45:19Z"},
{"Line": "=>1321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hindernis_lowerworld_lower.getLaenge()) > (-10)) { if (((((body.getPosition().x) + ((width) / 10)) - ((width) / 36)) >= (((hindernis_lowerworld_upper.getX()) + ((width) / 8)) - ((width) / 9))) && ((((body.getPosition().x) + ((width) / 10)) - ((width) / 36)) <= ((hindernis_lowerworld_upper.getX()) + ((2 * (width)) / 8)))) { java.lang.System.out.println(0); if ((((body.getPosition().y) + ((0.25 * (width)) / 12)) < ((height) - (wand_punkte[2]))) || (((body.getPosition().y) + ((0.75 * (width)) / 12)) > (wand_punkte[3]))) { return true; } } if (((((body.getPosition().x) + ((width) / 10)) - ((width) / 36)) >= (((hindernis_lowerworld_upper.getX()) + ((2 * (width)) / 8)) - ((width) / 9))) && ((((body.getPosition().x) + ((width) / 10)) - ((width) / 36)) <= ((hindernis_lowerworld_upper.getX()) + ((3 * (width)) / 8)))) { java.lang.System.out.println(1); if ((((body.getPosition().y) + ((0.25 * (width)) / 12)) < ((height) - (wand_punkte[4]))) || (((body.getPosition().y) + ((0.75 * (width)) / 12)) > (wand_punkte[5]))) { return true; } }else { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8690/buggy-version/core.src.com.mygdx.game.MyGdxGame.java", "BodyUseAPI": [], "Fixed commit": "48dee12a168cb2878aaf9c4bb6508649ba82f204", "Url": "https://api.github.com/repos/LuiseHenriette/wassermann", "Date": "2016-03-23T15:38:00Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((myJobs.indexOf(theJob)) < 0) myJobs.add(theJob);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8850/buggy-version/src.Project.Volunteer.java", "BodyUseAPI": ["Project.Volunteer.add(Project.Job)"], "Fixed commit": "8484e776f45e1796c7f4de7d0fbe813e5a7fef2b", "Url": "https://api.github.com/repos/esodell1/TCSS360", "Date": "2016-03-08T09:20:21Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lineNo >= number) { final java.lang.String prePreviousLine = getLines()[(lineNo - number)]; result = prePreviousLine.trim().isEmpty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6531/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck.java", "BodyUseAPI": [], "Fixed commit": "7c262e61e676982d7d33a42971b885d97b95f456", "Url": "https://api.github.com/repos/alex-zuy/checkstyle", "Date": "2015-02-09T18:38:28Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bison.isSitting()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/412/buggy-version/src.main.java.com.crowsofwar.avatar.common.entity.ai.EntityAiBisonFollowOwner.java", "BodyUseAPI": [], "Fixed commit": "79dcfe4845c537384c2440b426bac6f69667f617", "Url": "https://api.github.com/repos/CrowsOfWar/AvatarMod", "Date": "2017-04-20T01:27:55Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bison.isSitting()) { eatGrassTime = 81; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/412/buggy-version/src.main.java.com.crowsofwar.avatar.common.entity.ai.EntityAiBisonEatGrass.java", "BodyUseAPI": [], "Fixed commit": "79dcfe4845c537384c2440b426bac6f69667f617", "Url": "https://api.github.com/repos/CrowsOfWar/AvatarMod", "Date": "2017-04-20T01:27:55Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(bison.isSitting())) { bison.moveEntityWithHeading(0, 5); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/412/buggy-version/src.main.java.com.crowsofwar.avatar.common.entity.ai.EntityAiBisonEatGrass.java", "BodyUseAPI": ["com.crowsofwar.avatar.common.entity.mob.EntitySkyBison.moveEntityWithHeading(int,int)"], "Fixed commit": "79dcfe4845c537384c2440b426bac6f69667f617", "Url": "https://api.github.com/repos/CrowsOfWar/AvatarMod", "Date": "2017-04-20T01:27:55Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(leftClick)) bufferTime = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3672/buggy-version/src.gui.MineButton.java", "BodyUseAPI": [], "Fixed commit": "a9ee3e49c9232975d49f3cad6440a9b3e8a92b67", "Url": "https://api.github.com/repos/digli/minesweeper", "Date": "2013-12-29T16:21:53Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.verapdf.pd.PDResources.getColorSpace(org.verapdf.as.ASAtom)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (colorSpace != null) { colorSpace.setInherited(inheritedResources); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5808/buggy-version/validation-model.src.main.java.org.verapdf.model.impl.pd.util.PDResourcesHandler.java", "BodyUseAPI": ["org.verapdf.pd.colors.PDColorSpace.setInherited(boolean)"], "Fixed commit": "056d963c7b64bd442667a36e7502618e54a5bb50", "Url": "https://api.github.com/repos/timurkamalov/veraPDF-validation", "Date": "2016-09-12T08:16:16Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.verapdf.pd.PDResources.getFont(org.verapdf.as.ASAtom)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (font != null) { font.setInherited(inheritedResources); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5808/buggy-version/validation-model.src.main.java.org.verapdf.model.impl.pd.util.PDResourcesHandler.java", "BodyUseAPI": ["org.verapdf.pd.font.PDFont.setInherited(boolean)"], "Fixed commit": "056d963c7b64bd442667a36e7502618e54a5bb50", "Url": "https://api.github.com/repos/timurkamalov/veraPDF-validation", "Date": "2016-09-12T08:16:16Z"},
{"Line": "=>1157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.DEC()) != null) { long ipAsLong = java.lang.Long.parseLong(ctx.DEC().getText()); clusterId = new batfish.representation.Ip(ipAsLong); }else if ((ctx.IP_ADDRESS()) != null) { clusterId = batfish.grammar.cisco.controlplane.CiscoControlPlaneExtractor.toIp(ctx.IP_ADDRESS()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2546/buggy-version/projects.batfish.src.batfish.grammar.cisco.controlplane.CiscoControlPlaneExtractor.java", "BodyUseAPI": ["batfish.grammar.cisco.controlplane.CiscoControlPlaneExtractor.toIp(ctx.IP_ADDRESS())", "batfish.grammar.cisco.controlplane.Cluster_id_bgp_tailContext.DEC()", "batfish.grammar.cisco.controlplane.Cluster_id_bgp_tailContext.IP_ADDRESS()", "java.lang.Long.parseLong(ctx.DEC().getText())", "batfish.grammar.cisco.controlplane.Cluster_id_bgp_tailContext.IP_ADDRESS()", "ctx.DEC().getText()"], "Fixed commit": "7443c308dc0c29604fc118f426ee6f97d0205ec9", "Url": "https://api.github.com/repos/batfish/batfish", "Date": "2015-02-01T02:38:08Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (description == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3900/buggy-version/rosa-website.rosa-website-core.src.main.java.rosa.website.core.client.view.impl.BookDescriptionViewImpl.java", "BodyUseAPI": [], "Fixed commit": "3ac29bbd47b1c66879b917eae529cc2ee064bb14", "Url": "https://api.github.com/repos/jhu-digital-manuscripts/rosa2", "Date": "2015-08-26T14:44:41Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((data.getData()) != null) && ((data.getData().size()) > 0)) { config.setBarWidth((chartWidth / (data.getData().size()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8495/buggy-version/ChartLibrary.src.main.java.com.github.onlynight.chartlibrary.render.part.BasePartRender.java", "BodyUseAPI": ["com.github.onlynight.chartlibrary.data.config.BaseChartDataConfig.setBarWidth((chartWidth / (data.getData().size())))", "data.getData().size()", "com.github.onlynight.chartlibrary.data.BaseChartData.getData()"], "Fixed commit": "38485a4c9399352276690d4112dcfd630c931774", "Url": "https://api.github.com/repos/onlynight/CombineChart", "Date": "2017-09-02T08:42:45Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((passengerList.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/152/buggy-version/JavaAir.src.java_air.panel.reservation.ReservationPassengerDetailPanel.java", "BodyUseAPI": [], "Fixed commit": "a9697cc701ea9c57a3da358843adc2d9cbf3bc84", "Url": "https://api.github.com/repos/aerxleben/JavaAir", "Date": "2016-11-17T21:06:18Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(com.androidrecord.ActiveRecordBase)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dateTime == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7689/buggy-version/src.com.androidrecord.query.ColumnValues.java", "BodyUseAPI": [], "Fixed commit": "e9c558f8a4233402bdec111f2b789863f778c8cb", "Url": "https://api.github.com/repos/lyudmil/androidrecord", "Date": "2011-06-14T22:16:06Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dateString == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7689/buggy-version/src.com.androidrecord.query.ResultSetFieldTranslator.java", "BodyUseAPI": [], "Fixed commit": "e9c558f8a4233402bdec111f2b789863f778c8cb", "Url": "https://api.github.com/repos/lyudmil/androidrecord", "Date": "2011-06-14T22:16:06Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof org.openremote.container.json.JsonNull) { gen.writeNull(); }else { gen.writeRawValue(value.toJson()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1481/buggy-version/container.src.main.java.org.openremote.container.json.ElementalJsonModule.java", "BodyUseAPI": ["com.fasterxml.jackson.core.JsonGenerator.writeRawValue(value.toJson())", "org.openremote.container.json.JsonValue.toJson()"], "Fixed commit": "3b683929a78819dc3eedca0a7661c67e6faf65f5", "Url": "https://api.github.com/repos/openremote/openremote", "Date": "2017-03-03T21:27:14Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(asteroids.Util.fuzzyLessThanOrEqualTo(0.0, angle))) { angle = ((angle % (java.lang.Math.PI)) * 2) + ((java.lang.Math.PI) * 2); }else if (!(asteroids.Util.fuzzyLessThanOrEqualTo(angle, ((java.lang.Math.PI) * 2)))) { angle = (angle % (java.lang.Math.PI)) * 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4901/buggy-version/ogpTaak.src.asteroids.Facade.java", "BodyUseAPI": ["asteroids.Util.fuzzyLessThanOrEqualTo(double,double)"], "Fixed commit": "6fd95b702d69d3350103218199fcea766543b340", "Url": "https://api.github.com/repos/martijnbousse/ogpTaak", "Date": "2013-03-06T10:53:16Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(asteroids.Util.fuzzyLessThanOrEqualTo(0.0, angle))) { angle = ((angle % (java.lang.Math.PI)) * 2) + ((java.lang.Math.PI) * 2); }else if (!(asteroids.Util.fuzzyLessThanOrEqualTo(angle, ((java.lang.Math.PI) * 2)))) { angle = (angle % (java.lang.Math.PI)) * 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4901/buggy-version/ogpTaak.src.asteroids.Facade.java", "BodyUseAPI": ["asteroids.Util.fuzzyLessThanOrEqualTo(double,double)"], "Fixed commit": "6fd95b702d69d3350103218199fcea766543b340", "Url": "https://api.github.com/repos/martijnbousse/ogpTaak", "Date": "2013-03-06T10:53:16Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(frequency.containsKey(token))) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/925/buggy-version/src.duplicatesearcher.analysis.frequency.TermFrequencyCounter.java", "BodyUseAPI": [], "Fixed commit": "ba67f16594ca853e8373d2cd4047e07bc77d92bb", "Url": "https://api.github.com/repos/mantono/DuplicateSearcher", "Date": "2016-05-04T12:50:56Z"},
{"Line": "=>1153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((finishMonth.length()) < 2) { if ((finishMonth.length()) == 1) finishMonth = 0 + (finishMonth.trim()); else finishMonth = \"??\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7326/buggy-version/src.util.window.AddAnimeDialog.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.length()"], "Fixed commit": "a722c630dd7b573f4e92c27818315eb36d2caad4", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-08-29T19:27:40Z"},
{"Line": "=>1145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((finishDay.length()) < 2) { if ((finishDay.length()) == 1) finishDay = 0 + (finishDay.trim()); else finishDay = \"??\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7326/buggy-version/src.util.window.AddAnimeDialog.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.length()"], "Fixed commit": "a722c630dd7b573f4e92c27818315eb36d2caad4", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-08-29T19:27:40Z"},
{"Line": "=>1123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((startMonth.length()) < 2) { if ((startMonth.length()) == 1) startMonth = 0 + (startMonth.trim()); else startMonth = \"??\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7326/buggy-version/src.util.window.AddAnimeDialog.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.trim()"], "Fixed commit": "a722c630dd7b573f4e92c27818315eb36d2caad4", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-08-29T19:27:40Z"},
{"Line": "=>1115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((startDay.length()) < 2) { if ((startDay.length()) == 1) startDay = 0 + (startDay.trim()); else startDay = \"??\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7326/buggy-version/src.util.window.AddAnimeDialog.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.length()"], "Fixed commit": "a722c630dd7b573f4e92c27818315eb36d2caad4", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-08-29T19:27:40Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.xiuxiuchat.main.chat.ContactListManager.getInstance().isInContactList(username)) { getView().findViewById(R.id.right_layout).setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2092/buggy-version/app.src.main.java.com.xiuxiuchat.chat.im.ChatFragment.java", "BodyUseAPI": [], "Fixed commit": "77322a2224f9490fffda32991aa73909e736b44f", "Url": "https://api.github.com/repos/seedzi/new_heixiu", "Date": "2016-10-04T05:55:06Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (transformations.isEmpty()) { transformations.addLast(t); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/202/buggy-version/src.main.java.de.tuberlin.amos.ws17.swit.application.TransformationBuffer.java", "BodyUseAPI": ["java.util.LinkedList<de.tuberlin.amos.ws17.swit.application.TransformStamped>.addLast(de.tuberlin.amos.ws17.swit.application.TransformStamped)"], "Fixed commit": "f58c83855407ade480f51509b29afa21a1dd89b5", "Url": "https://api.github.com/repos/cfengler/amos-ws17-proj2", "Date": "2017-11-21T11:32:56Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (menuStack.empty()) { if ((((level) != null) && (!(isMultiplayer))) && (!(paused))) { paused = true; menuStack.add(new com.mojang.mojam.gui.PauseMenu(com.mojang.mojam.MojamComponent.GAME_WIDTH, com.mojang.mojam.MojamComponent.GAME_HEIGHT)); } menuStack.add(new com.mojang.mojam.gui.ExitMenu(com.mojang.mojam.MojamComponent.GAME_WIDTH, com.mojang.mojam.MojamComponent.GAME_HEIGHT)); }else if (!((menuStack.peek()) instanceof com.mojang.mojam.gui.ExitMenu)) { menuStack.add(new com.mojang.mojam.gui.ExitMenu(com.mojang.mojam.MojamComponent.GAME_WIDTH, com.mojang.mojam.MojamComponent.GAME_HEIGHT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/700/buggy-version/src.com.mojang.mojam.MojamComponent.java", "BodyUseAPI": ["com.mojang.mojam.gui.MenuStack.add(com.mojang.mojam.gui.PauseMenu)", "com.mojang.mojam.gui.MenuStack.add(com.mojang.mojam.gui.ExitMenu)", "com.mojang.mojam.gui.MenuStack.peek()", "com.mojang.mojam.gui.MenuStack.add(com.mojang.mojam.gui.ExitMenu)"], "Fixed commit": "f0ef15d0198c955019f1f143a5c70c0d87c1bb82", "Url": "https://api.github.com/repos/Flet/Catacomb-Snatch", "Date": "2012-03-23T21:58:32Z"},
{"Line": "=>655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((status != null) && (!(status.isEmpty()))) handler.updateProgress(status);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1859/buggy-version/LimeStudio.app.src.main.java.net.toload.main.hd.ui.SetupImLoadDialog.java", "BodyUseAPI": ["net.toload.main.hd.ui.SetupImHandler.updateProgress(java.lang.String)"], "Fixed commit": "980426b1498b214b15ce25ae6fefa3a5a1f179af", "Url": "https://api.github.com/repos/lime-ime/limeime", "Date": "2015-05-26T10:43:47Z"},
{"Line": "=>660", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((source != null) && (!(source.isEmpty()))) showToastMessage(source, Toast.LENGTH_LONG);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1859/buggy-version/LimeStudio.app.src.main.java.net.toload.main.hd.ui.SetupImLoadDialog.java", "BodyUseAPI": ["net.toload.main.hd.ui.SetupImLoadDialog.25.showToastMessage(java.lang.String,Toast.LENGTH_LONG)"], "Fixed commit": "980426b1498b214b15ce25ae6fefa3a5a1f179af", "Url": "https://api.github.com/repos/lime-ime/limeime", "Date": "2015-05-26T10:43:47Z"},
{"Line": "=>649", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((status != null) && (!(status.isEmpty()))) handler.updateProgress(status);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1859/buggy-version/LimeStudio.app.src.main.java.net.toload.main.hd.ui.SetupImLoadDialog.java", "BodyUseAPI": ["net.toload.main.hd.ui.SetupImHandler.updateProgress(java.lang.String)"], "Fixed commit": "980426b1498b214b15ce25ae6fefa3a5a1f179af", "Url": "https://api.github.com/repos/lime-ime/limeime", "Date": "2015-05-26T10:43:47Z"},
{"Line": "=>1513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bt.getTargetOrgCol()) != 0) { sysErrors = sysErrors + (rejectInvalidTargetOrg(batchId, bt)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/862/buggy-version/src.main.java.com.ut.dph.service.impl.transactionInManagerImpl.java", "BodyUseAPI": ["com.ut.dph.service.impl.transactionInManagerImpl.rejectInvalidTargetOrg(java.lang.Integer,com.ut.dph.model.configurationConnection)"], "Fixed commit": "e8cf604290de859e6d25c82517f10bf71d58a432", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2014-03-18T16:41:32Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"NULL\".equals(aux.data))) { java.lang.System.out.print(aux.data); if (!(callSt.isEmpty())) { aux = ((trees.TreeUtil.Node) (callSt.pop())); if (!(\"NULL\".equals(aux.data))) { java.lang.System.out.print(aux.data); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2283/buggy-version/StackEx.java", "BodyUseAPI": ["java.io.PrintStream.print(aux.data)", "java.lang.String.equals(aux.data)", "java.io.PrintStream.print(aux.data)"], "Fixed commit": "2a6ce29c52ebb12076243496b4e0822e5c5e678a", "Url": "https://api.github.com/repos/jawa2jawa/Datastrutures", "Date": "2017-04-23T11:54:39Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"NULL\".equals(aux.data))) { java.lang.System.out.print(aux.data); if (!(callSt.isEmpty())) { aux = ((trees.TreeUtil.Node) (callSt.pop())); if (!(\"NULL\".equals(aux.data))) { java.lang.System.out.print(aux.data); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2283/buggy-version/StackEx.java", "BodyUseAPI": ["java.lang.String.equals(aux.data)", "java.io.PrintStream.print(aux.data)", "java.io.PrintStream.print(aux.data)"], "Fixed commit": "2a6ce29c52ebb12076243496b4e0822e5c5e678a", "Url": "https://api.github.com/repos/jawa2jawa/Datastrutures", "Date": "2017-04-23T11:54:39Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inputPwd.getText()) != null) { pwd = inputPwd.getText().toString(); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1721/buggy-version/src.de.franziskuskiefer.android.vault.avtivities.Setup.java", "BodyUseAPI": ["inputPwd.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "fc8743a68dd1f4076a229d35af41a4e2de179f80", "Url": "https://api.github.com/repos/franziskuskiefer/AndroidVault", "Date": "2014-02-01T13:59:15Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (padStr.isEmpty()) return arg0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6669/buggy-version/swc-engine.src.main.java.org.sweble.wikitext.engine.ext.core.CorePfnFunctionsFormatting.java", "BodyUseAPI": [], "Fixed commit": "4b27729a3aa5b063ddb218be34f4e300b5a6ac8e", "Url": "https://api.github.com/repos/sweble/sweble-wikitext", "Date": "2013-02-19T22:29:02Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.Bitmap.getHeight()", "android.graphics.Bitmap.getWidth()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((width > 800) && (height > 800)) { return bitmap; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6971/buggy-version/App-Android.app.src.main.java.com.oneupapplications.bucketapp.Utility.PictureUtils.java", "BodyUseAPI": [], "Fixed commit": "ad5ba8f18255ec826213362976227eafd5effd7b", "Url": "https://api.github.com/repos/nesterenes/bucket-android", "Date": "2016-05-27T23:50:39Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cause instanceof io.netty.handler.ssl.NotSslRecordException) com.chiorichan.net.NetworkManager.getLogger().severe(\"Not an SSL/TLS record\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6151/buggy-version/src.main.groovy.com.chiorichan.http.ssl.SslExceptionHandler.java", "BodyUseAPI": [], "Fixed commit": "92bc6b492e61e7928d36335b2ea093e0d090d2ef", "Url": "https://api.github.com/repos/TheAmeliaDeWitt/ChioriWebServer", "Date": "2016-05-20T23:41:41Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mCursor.isClosed())) { mCursor.moveToPosition(position); bindView(view, parent.getContext(), mCursor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6670/buggy-version/barterli.src.main.java.li.barter.adapters.BooksGridAdapter.java", "BodyUseAPI": ["li.barter.adapters.BooksGridAdapter.bindView(android.view.View,parent.getContext(),li.barter.adapters.BooksGridAdapter)", "li.barter.adapters.BooksGridAdapter.moveToPosition(int)"], "Fixed commit": "a2efe7f0e55322ab32298278a11166794e3b6055", "Url": "https://api.github.com/repos/barterli/barterli_android", "Date": "2014-09-26T19:26:15Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scopes.size()) < 2) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/20/buggy-version/src.com.bme.logo.Environment.java", "BodyUseAPI": [], "Fixed commit": "e3aacd0347014a1fd054a7e0789af5c2da8fc156", "Url": "https://api.github.com/repos/JohnEarnest/MLogo", "Date": "2014-03-10T14:35:19Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.anon.grow.fragment.SettingsFragment.findPreference(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((list.getPreferenceCount()) == 0) { getPreferenceScreen().removePreference(list); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2385/buggy-version/app.src.main.java.me.anon.grow.fragment.SettingsFragment.java", "BodyUseAPI": ["getPreferenceScreen().removePreference(android.preference.PreferenceCategory)"], "Fixed commit": "673794c6a38f30364ed6e29610e95493876290c0", "Url": "https://api.github.com/repos/7LPdWcaW/GrowTracker-Android", "Date": "2017-02-25T18:12:46Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pixelSize <= 0) pixelSize = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7430/buggy-version/src.org.witness.sscphase1.PixelizeObscure.java", "BodyUseAPI": [], "Fixed commit": "fee3e76f90c13a19bdf38ffeeb3a9b508ae2bbf8", "Url": "https://api.github.com/repos/guardianproject/ObscuraCam", "Date": "2011-06-11T04:51:24Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Random.nextInt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (b == 0) { b++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/317/buggy-version/app.src.main.java.com.macedo.braintrainer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "64923cae78e716cefb4743289193702ede65282f", "Url": "https://api.github.com/repos/biamacedo/brain-trainer-android", "Date": "2015-11-02T21:25:06Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<com.dsh105.holoapi.api.Hologram>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(h.isSimple())) this.saveToFile(h);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3300/buggy-version/src.main.java.com.dsh105.holoapi.api.SimpleHoloManager.java", "BodyUseAPI": ["com.dsh105.holoapi.api.SimpleHoloManager.saveToFile(com.dsh105.holoapi.api.Hologram)"], "Fixed commit": "b2a22e24cac1f5c35a52b9cdd619f32c7e7f3e19", "Url": "https://api.github.com/repos/DSH105/HoloAPI", "Date": "2014-05-07T08:53:48Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((scaledBG.getWidth()) > boardWidthPixels) { imgOffset = ((scaledBG.getWidth()) - boardWidthPixels) / 2; cropBG = scaledBG.getSubimage(imgOffset, 0, boardWidthPixels, boardHeightPixels); }else if ((scaledBG.getHeight()) > boardHeightPixels) { imgOffset = ((scaledBG.getHeight()) - boardHeightPixels) / 2; cropBG = scaledBG.getSubimage(0, imgOffset, boardWidthPixels, boardHeightPixels); }else { cropBG = scaledBG; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6576/buggy-version/src.vbtetris.VBTetrisGameBoard.java", "BodyUseAPI": ["java.awt.image.BufferedImage.getSubimage(int,int,int,int)", "java.awt.image.BufferedImage.getHeight()", "java.awt.image.BufferedImage.getWidth()", "java.awt.image.BufferedImage.getHeight()", "java.awt.image.BufferedImage.getSubimage(int,int,int,int)"], "Fixed commit": "a9e40e899fb8dcf0c45f3be3bc31fd1911aabd8e", "Url": "https://api.github.com/repos/robblamb/VBTetris", "Date": "2013-11-05T03:57:33Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (widthRatio > heightRatio) scaledBG = org.imgscalr.Scalr.resize(origBG, Mode.FIT_TO_HEIGHT, boardHeightPixels); else scaledBG = org.imgscalr.Scalr.resize(origBG, Mode.FIT_TO_WIDTH, boardWidthPixels);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6576/buggy-version/src.vbtetris.VBTetrisGameBoard.java", "BodyUseAPI": [], "Fixed commit": "a9e40e899fb8dcf0c45f3be3bc31fd1911aabd8e", "Url": "https://api.github.com/repos/robblamb/VBTetris", "Date": "2013-11-05T03:57:33Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((authCallCount) > 0) && (authCallCompleted)) { sendResult(com.livefyre.streamhub_android_sdk.activity.AuthenticationActivity.getToken()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2795/buggy-version/streamhub-android-sdk.src.main.java.com.livefyre.streamhub_android_sdk.activity.AuthenticationActivity.java", "BodyUseAPI": [], "Fixed commit": "97199ef105b0d2813cbf560f29574270b796de78", "Url": "https://api.github.com/repos/Livefyre/Android-Identity-Example", "Date": "2016-08-19T06:39:09Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((points.length) < 4) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/9174/buggy-version/src.FastCollinearPoints.java", "BodyUseAPI": [], "Fixed commit": "dfb6a80b35092407ad2b6b3e3cf710013167b778", "Url": "https://api.github.com/repos/szhou1/Algs4", "Date": "2017-01-18T03:26:56Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((points.length) < 4) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/9174/buggy-version/src.BruteCollinearPoints.java", "BodyUseAPI": [], "Fixed commit": "dfb6a80b35092407ad2b6b3e3cf710013167b778", "Url": "https://api.github.com/repos/szhou1/Algs4", "Date": "2017-01-18T03:26:56Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dao.GameResultRecords.countRs(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pageSize > totalPage) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3375/buggy-version/GameResult_Web.WebContent.com.dao.GameResultRecords.java", "BodyUseAPI": [], "Fixed commit": "d4ac24aabac3a9e0c6608c9efdfdc4cc0f7fe42a", "Url": "https://api.github.com/repos/fanntone/GameResult_Web", "Date": "2017-01-05T03:54:26Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dao.OnlineMember.countRs()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pageSize > totalPage) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3375/buggy-version/GameResult_Web.WebContent.com.dao.OnlineMember.java", "BodyUseAPI": [], "Fixed commit": "d4ac24aabac3a9e0c6608c9efdfdc4cc0f7fe42a", "Url": "https://api.github.com/repos/fanntone/GameResult_Web", "Date": "2017-01-05T03:54:26Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.path.size()) < 2) return \"You are already at your destination!\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3054/buggy-version/src.models.path.Path.java", "BodyUseAPI": [], "Fixed commit": "2b55fb25ab1d856acc0385a4e18f49f1b3a312e4", "Url": "https://api.github.com/repos/ateamwpi/HospitalKiosk", "Date": "2017-04-07T00:42:38Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((server) != null) { server.updateExecutionState(aState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8959/buggy-version/de.gebit.integrity.runner.src.de.gebit.integrity.runner.forking.Fork.java", "BodyUseAPI": [], "Fixed commit": "0f265f2eb3a8eeae78b3c66fd8383e383ae492a6", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2015-09-10T08:55:45Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.getTags().isEmpty())) { this.tags += \", \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8450/buggy-version/src.main.java.by.dzmitry.model.entities.Word.java", "BodyUseAPI": [], "Fixed commit": "f0e6c71b121167438ac4580eda7c4fa6e4ed6e65", "Url": "https://api.github.com/repos/dzmitry-ivanou/words-mvc-gae", "Date": "2017-05-22T13:32:01Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (aroma1997.betterchests.InventoryFilter.SLOT_UPGRADE)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5951/buggy-version/src.main.java.aroma1997.betterchests.InventoryFilter.java", "BodyUseAPI": [], "Fixed commit": "41825e56d6a514fd722ef98578d9d5100f285d47", "Url": "https://api.github.com/repos/Aroma1997/BetterChests", "Date": "2014-10-12T15:54:53Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Events.Events.indexOf(Events.Event)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index != (-1)) { _events.remove(ev); fireTableRowsDeleted(index, index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2493/buggy-version/src.GUI.Agenda.Planning.EventTableModel.java", "BodyUseAPI": ["GUI.Agenda.Planning.EventTableModel.fireTableRowsDeleted(int,int)"], "Fixed commit": "8aa39f80b6e07eb09f89f260a504770f9290a0cd", "Url": "https://api.github.com/repos/jipjan/ProjectFestival", "Date": "2017-03-19T12:28:12Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(seedu.address.commons.util.FileUtil.isFileExists(file))) { throw new seedu.address.commons.exceptions.IllegalValueException(seedu.address.model.person.Avatar.IMAGE_NOT_EXISTS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7151/buggy-version/src.main.java.seedu.address.model.person.Avatar.java", "BodyUseAPI": [], "Fixed commit": "de45dbcaee761f1cb8b1d949df2a1588072669d3", "Url": "https://api.github.com/repos/yunpengn/main", "Date": "2017-11-11T15:20:48Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pipeGraph.containsVertex(tap)) tap.presentSourceFields(cascading.flow.BaseFlow.getFlowProcess(), getFieldsFor(pipeGraph, tap));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5930/buggy-version/src.core.cascading.flow.BaseFlow.java", "BodyUseAPI": ["cascading.flow.BaseFlow<Config>.getFieldsFor(cascading.flow.planner.ElementGraph,cascading.tap.Tap)", "cascading.tap.Tap.presentSourceFields(cascading.flow.BaseFlow.getFlowProcess(),cascading.tuple.Fields)"], "Fixed commit": "c954b7cf37f1901bd3d0be2869562873f3632d10", "Url": "https://api.github.com/repos/Cascading/cascading", "Date": "2012-10-31T01:46:02Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pipeGraph.containsVertex(tap)) tap.presentSourceFields(cascading.flow.BaseFlow.getFlowProcess(), getFieldsFor(pipeGraph, tap));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5930/buggy-version/src.core.cascading.flow.BaseFlow.java", "BodyUseAPI": ["cascading.tap.Tap.presentSourceFields(cascading.flow.BaseFlow.getFlowProcess(),cascading.tuple.Fields)", "cascading.flow.BaseFlow<Config>.getFieldsFor(cascading.flow.planner.ElementGraph,cascading.tap.Tap)"], "Fixed commit": "c954b7cf37f1901bd3d0be2869562873f3632d10", "Url": "https://api.github.com/repos/Cascading/cascading", "Date": "2012-10-31T01:46:02Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pipeGraph.containsVertex(tap)) tap.presentSinkFields(cascading.flow.BaseFlow.getFlowProcess(), getFieldsFor(pipeGraph, tap));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5930/buggy-version/src.core.cascading.flow.BaseFlow.java", "BodyUseAPI": ["cascading.tap.Tap.presentSinkFields(cascading.flow.BaseFlow.getFlowProcess(),cascading.tuple.Fields)", "cascading.flow.BaseFlow<Config>.getFieldsFor(cascading.flow.planner.ElementGraph,cascading.tap.Tap)"], "Fixed commit": "c954b7cf37f1901bd3d0be2869562873f3632d10", "Url": "https://api.github.com/repos/Cascading/cascading", "Date": "2012-10-31T01:46:02Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pipeGraph.containsVertex(tap)) tap.presentSinkFields(cascading.flow.BaseFlow.getFlowProcess(), getFieldsFor(pipeGraph, tap));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5930/buggy-version/src.core.cascading.flow.BaseFlow.java", "BodyUseAPI": ["cascading.flow.BaseFlow<Config>.getFieldsFor(cascading.flow.planner.ElementGraph,cascading.tap.Tap)", "cascading.tap.Tap.presentSinkFields(cascading.flow.BaseFlow.getFlowProcess(),cascading.tuple.Fields)"], "Fixed commit": "c954b7cf37f1901bd3d0be2869562873f3632d10", "Url": "https://api.github.com/repos/Cascading/cascading", "Date": "2012-10-31T01:46:02Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gogofo.minecraft.awesome.tileentity.TileEntityLiquidStorageContainer.tryTakeLiquid(net.minecraft.block.Block,Fluid.BUCKET_VOLUME)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (liquidTaken == (Fluid.BUCKET_VOLUME)) { heldStack.shrink(1); gogofo.minecraft.awesome.block.Fluid fluid = gogofo.minecraft.awesome.block.FluidRegistry.lookupFluidForBlock(substance); net.minecraft.item.ItemStack filledBucket = gogofo.minecraft.awesome.block.FluidUtil.getFilledBucket(new gogofo.minecraft.awesome.block.FluidStack(fluid, Fluid.BUCKET_VOLUME)); if (heldStack.isEmpty()) { playerIn.setHeldItem(hand, filledBucket); }else if (!(playerIn.inventory.addItemStackToInventory(filledBucket))) { playerIn.dropItem(filledBucket, false); } }else { te.tryPlaceLiquid(substance, liquidTaken); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8744/buggy-version/src.main.java.gogofo.minecraft.awesome.block.BlockLiquidStorageContainer.java", "BodyUseAPI": ["gogofo.minecraft.awesome.tileentity.TileEntityLiquidStorageContainer.tryPlaceLiquid(net.minecraft.block.Block,int)"], "Fixed commit": "c97ec64742b36689a5015b503fa6117b43529059", "Url": "https://api.github.com/repos/tomerorian/minecraft-awesome", "Date": "2017-10-02T08:03:32Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gogofo.minecraft.awesome.block.FluidUtil.getFilledBucket(gogofo.minecraft.awesome.block.FluidStack)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(playerIn.inventory.addItemStackToInventory(filledBucket))) { playerIn.dropItem(filledBucket, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8744/buggy-version/src.main.java.gogofo.minecraft.awesome.block.BlockLiquidStorageContainer.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.dropItem(net.minecraft.item.ItemStack,boolean)"], "Fixed commit": "c97ec64742b36689a5015b503fa6117b43529059", "Url": "https://api.github.com/repos/tomerorian/minecraft-awesome", "Date": "2017-10-02T08:03:32Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (podcastList.isEmpty()) getView().findViewById(android.R.id.empty).setVisibility(View.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4210/buggy-version/src.net.alliknow.podcatcher.fragments.PodcastListFragment.java", "BodyUseAPI": [], "Fixed commit": "e667cbd37360e01346b9b2740ae9250c0e1ec164", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2012-11-20T20:35:16Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((u.getEntity().getEntityType()) & (megamek.common.Entity.ETYPE_DROPSHIP)) == (megamek.common.Entity.ETYPE_DROPSHIP)) { totalAero++; }else if ((((u.getEntity().getEntityType()) & (megamek.common.Entity.ETYPE_MECH)) == (megamek.common.Entity.ETYPE_MECH)) || (((u.getEntity().getEntityType()) & (megamek.common.Entity.ETYPE_TANK)) == (megamek.common.Entity.ETYPE_TANK))) { totalGround++; }else if (((u.getEntity().getEntityType()) & (megamek.common.Entity.ETYPE_BATTLEARMOR)) == (megamek.common.Entity.ETYPE_BATTLEARMOR)) { totalBattleArmor++; }else if (((u.getEntity().getEntityType()) & (megamek.common.Entity.ETYPE_INFANTRY)) == (megamek.common.Entity.ETYPE_INFANTRY)) { totalInfantry++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2987/buggy-version/MekHQ.src.mekhq.campaign.rating.CampaignOpsReputation.java", "BodyUseAPI": ["mekhq.campaign.unit.Unit.getEntity()", "u.getEntity().getEntityType()", "u.getEntity().getEntityType()", "u.getEntity().getEntityType()", "mekhq.campaign.unit.Unit.getEntity()", "u.getEntity().getEntityType()", "mekhq.campaign.unit.Unit.getEntity()", "mekhq.campaign.unit.Unit.getEntity()"], "Fixed commit": "c83b1fb4f4bce15937b081e8e3c9f010f31aa756", "Url": "https://api.github.com/repos/jslater89/mekhq", "Date": "2017-09-29T21:04:02Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.csulb.suitup.RandomWardrobeActivity.getIntent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((intent.getExtras()) != null) { weather = intent.getExtras().getString(\"weather\"); }else { weather = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4163/buggy-version/app.src.main.java.edu.csulb.suitup.RandomWardrobeActivity.java", "BodyUseAPI": ["intent.getExtras().getString(java.lang.String)", "android.content.Intent.getExtras()"], "Fixed commit": "aca2443c5d0d1fba5ee7435c60c4db07ab2a36a1", "Url": "https://api.github.com/repos/DavidVan/CECS-453-Final-Project", "Date": "2016-12-09T07:23:20Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.servicecomb.config.archaius.sources.AbstractConfigLoader.loadData(java.net.URL)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (config == null) { config = new java.util.LinkedHashMap<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2036/buggy-version/foundations.foundation-config.src.main.java.io.servicecomb.config.archaius.sources.AbstractConfigLoader.java", "BodyUseAPI": [], "Fixed commit": "3b9127460e5a2b41acb38a3f86a1b3fa14c7823c", "Url": "https://api.github.com/repos/sunming0213/ServiceComb-Java-Chassis", "Date": "2017-08-22T02:43:17Z"},
{"Line": "=>930", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (field.getName().matches(\"^[a-z]{1}[A-Z]{1}.*\")) { setterMethodName = setterMethodPrefix + (field.getName()); }else { setterMethodName = setterMethodPrefix + (org.litepal.util.BaseUtility.capitalize(field.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3426/buggy-version/library.src.org.litepal.crud.DataHandler.java", "BodyUseAPI": ["org.litepal.util.BaseUtility.capitalize(java.lang.String)", "java.lang.reflect.Field.getName()", "java.lang.reflect.Field.getName()"], "Fixed commit": "448470cae4c4774a6ef13c005953932d36a85e77", "Url": "https://api.github.com/repos/LitePalFramework/LitePal", "Date": "2014-07-04T09:09:57Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(data.delete())) { org.ut.biolab.medsavant.client.view.genetics.variantinfo.GenemaniaInfoRetriever.LOG.error((\"Couldn't delete GeneMANIA .zip: \" + (data.getAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8186/buggy-version/MedSavantClient.src.main.java.org.ut.biolab.medsavant.client.view.genetics.variantinfo.GenemaniaInfoRetriever.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "org.apache.commons.logging.Log.error(java.lang.String)"], "Fixed commit": "3c6dafec883a932d6e69d6321b0ded561b7b5a59", "Url": "https://api.github.com/repos/compbio-UofT/medsavant", "Date": "2013-09-03T22:07:04Z"},
{"Line": "=>979", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (start > ostart) { int prevStart = start - 2; if (!((prevStart >= 0) && ((getText().charAt(prevStart)) == '\\n'))) { while ((prevStart > 0) && ((getText().charAt((prevStart - 1))) != '\\n')) prevStart--; } java.util.regex.Matcher prevMatcher = null; if (prevStart >= 0) prevMatcher = linePrefixPattern.matcher(getText().subSequence(prevStart, getText().length())); if ((prevMatcher != null) && (prevMatcher.find())) { java.lang.String str = prevMatcher.group(); if (str.equals(bulletMarkdown)) { insertBefore(start, getBulletSpannable()); setMargin(start, bullet); }else if ((str.equals(checkboxMarkdown)) || (str.equals(checkboxCheckedMarkdown))) { insertBefore(start, new android.text.SpannableString(checkboxMarkdown)); setMargin(start, checkbox); }else { insertBefore(start, new android.text.SpannableString(((java.lang.String.valueOf(((java.lang.Integer.valueOf(prevMatcher.group(2))) + 1))) + \". \"))); } }else { if ((start == (s.length())) || ((s.charAt(start)) == '\\n')) insertBefore(start, new android.text.SpannableString(\" \")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1933/buggy-version/library.src.main.java.com.jiaminglu.markdownedittext.MarkdownEditText.java", "BodyUseAPI": ["com.jiaminglu.markdownedittext.MarkdownEditText.TextFormatter.insertBefore(int,android.text.SpannableString)", "com.jiaminglu.markdownedittext.MarkdownEditText.TextFormatter.insertBefore(int,android.text.SpannableString)", "com.jiaminglu.markdownedittext.MarkdownEditText.TextFormatter.setMargin(int,android.graphics.drawable.ShapeDrawable)", "com.jiaminglu.markdownedittext.MarkdownEditText.TextFormatter.insertBefore(int,android.text.Spannable)", "com.jiaminglu.markdownedittext.MarkdownEditText.TextFormatter.insertBefore(int,android.text.SpannableString)", "com.jiaminglu.markdownedittext.MarkdownEditText.TextFormatter.setMargin(int,android.graphics.drawable.Drawable)", "java.lang.CharSequence.charAt(int)"], "Fixed commit": "2002560e2e19fa8dc980300d1e15155e77eb2f3a", "Url": "https://api.github.com/repos/jiaminglu/MarkdownEditText", "Date": "2015-06-19T03:07:26Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.hp.hpl.jena.util.FileUtils.guessLang(this.mapURL, \"unknown\").equals(\"unknown\")) return com.hp.hpl.jena.util.FileManager.get().loadModel(this.mapURL, baseURI(), \"TURTLE\"); else return com.hp.hpl.jena.util.FileManager.get().loadModel(this.mapURL, baseURI(), null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6988/buggy-version/src.d2rq.dump_rdf.java", "BodyUseAPI": ["com.hp.hpl.jena.util.FileManager.get().loadModel(java.lang.String,java.lang.String,<nulltype>)", "com.hp.hpl.jena.util.FileManager.get().loadModel(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "78e73ecc93f31da0b9336384a3fb4640512f9f55", "Url": "https://api.github.com/repos/d2rq/d2rq", "Date": "2012-03-16T11:19:02Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (null != (prop.getValue())) { d = com.owncloud.android.lib.common.network.WebdavUtils.parseResponseDate(((java.lang.String) (prop.getValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4328/buggy-version/WebDAV.jackrabbit-webdav.src.com.owncloud.android.lib.common.network.WebdavEntry.java", "BodyUseAPI": [], "Fixed commit": "9a10e9a8ff6e3364548ef6ebca43752d94a5ecb2", "Url": "https://api.github.com/repos/tuacy/WebDav", "Date": "2015-07-08T15:38:47Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (null != (prop.getValue())) { d = com.owncloud.android.lib.common.network.WebdavUtils.parseResponseDate(((java.lang.String) (prop.getValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4328/buggy-version/WebDAV.jackrabbit-webdav.src.com.owncloud.android.lib.common.network.WebdavEntry.java", "BodyUseAPI": [], "Fixed commit": "9a10e9a8ff6e3364548ef6ebca43752d94a5ecb2", "Url": "https://api.github.com/repos/tuacy/WebDav", "Date": "2015-07-08T15:38:47Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (null != (prop.getValue())) { mContentLength = java.lang.Long.parseLong(((java.lang.String) (prop.getValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4328/buggy-version/WebDAV.jackrabbit-webdav.src.com.owncloud.android.lib.common.network.WebdavEntry.java", "BodyUseAPI": [], "Fixed commit": "9a10e9a8ff6e3364548ef6ebca43752d94a5ecb2", "Url": "https://api.github.com/repos/tuacy/WebDav", "Date": "2015-07-08T15:38:47Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(element.getImage_url()))) { android.content.Intent i = new android.content.Intent(android.content.Intent.ACTION_VIEW); i.setData(android.net.Uri.parse(element.getItem_url())); i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); mContext.startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8866/buggy-version/src.main.java.com.xabber.android.data.message.recyclerview.GenericTemplateElementsViewHolder.java", "BodyUseAPI": ["android.content.Intent.setData(android.net.Uri.parse(element.getItem_url()))", "com.xabber.android.data.message.entity.PayloadElementsJSONParsed.getItem_url()", "android.net.Uri.parse(element.getItem_url())"], "Fixed commit": "8dc7d4487ca1b7bd09442b3e29d55dda125cbac8", "Url": "https://api.github.com/repos/samuelharden/PlugNPlayXMPPLibraryAndroid", "Date": "2016-10-27T11:27:51Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (adversary) { cards.add(ActivityMgr.launchActivity.cards.get(3).clone(adversary)); cards.add(ActivityMgr.launchActivity.cards.get(5).clone(adversary)); }else { cards.add(ActivityMgr.launchActivity.cards.get(2).clone(adversary)); cards.add(ActivityMgr.launchActivity.cards.get(4).clone(adversary)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4380/buggy-version/PTS3G10.app.src.main.java.ked.pts3g10.Gameplay.Player.java", "BodyUseAPI": [], "Fixed commit": "5aaf9afdbcacd2aebdb033290e46450c9fc27ae9", "Url": "https://api.github.com/repos/Ked57/PTS3G10", "Date": "2017-12-23T17:15:34Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (accession == null) throw new java.lang.IllegalArgumentException(\"Cannot query Bioportal without term accession/URI\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2418/buggy-version/src.main.java.uk.ac.ebi.bioportal.webservice.client.BioportalClient.java", "BodyUseAPI": [], "Fixed commit": "6a2d7a609b78d5cdf66482c2bf46dbe9ddcfd933", "Url": "https://api.github.com/repos/EBIBioSamples/bioportal-client", "Date": "2016-01-19T15:17:14Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((hourOfDay > 10) && (hourOfDay < 18)) { int clipIndex = (hourOfDay - 10) + ((dayOfWeek - 6) * 8); return tsh.TshMonitor.trafficClips[clipIndex]; }else { return tsh.TshMonitor.defaultTrafficClip; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5410/buggy-version/src.tsh.TshMonitor.java", "BodyUseAPI": [], "Fixed commit": "31f00124651be436bbf38cd85fea37b9fb7b5f33", "Url": "https://api.github.com/repos/colin-combe/tsh", "Date": "2017-02-17T06:21:16Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) == null) trace = e.getStackTrace(); else trace = e.getCause().getStackTrace();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7856/buggy-version/src.main.java.net.xprova.piccolo.Console.java", "BodyUseAPI": ["java.lang.Exception.getStackTrace()", "java.lang.Exception.getCause()", "java.lang.Throwable.getStackTrace()"], "Fixed commit": "b627373437c763cc71e4f08ae9f92dbb3b169e75", "Url": "https://api.github.com/repos/xprova/piccolo-cli-lib", "Date": "2016-07-09T18:14:42Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.util.math.BlockPos.add(int,int,int)", "net.minecraft.world.World.getBlockState(net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((((((((iblockstate.isOpaqueCube()) && ((iblockstate.getBlock()) != (net.minecraft.init.Blocks.BEDROCK))) && ((iblockstate.getBlock()) != (ga.scmc.handlers.BlockHandler.ZERG_CREEP))) && ((iblockstate.getBlock()) != (ga.scmc.handlers.MetaBlockHandler.ZERG_FLESH))) && ((iblockstate.getBlock()) != (ga.scmc.handlers.BlockHandler.KERATIN_CHUNK))) && ((iblockstate.getBlock()) != (ga.scmc.handlers.MetaBlockHandler.ZERG_CARAPACE_BLOCK))) && ((iblockstate.getBlock()) != (ga.scmc.handlers.MetaBlockHandler.PROTOSS_METAL_T1))) && ((iblockstate.getBlock()) != (ga.scmc.handlers.MetaBlockHandler.PROTOSS_METAL_T2))) && ((iblockstate.getBlock()) != (ga.scmc.handlers.MetaBlockHandler.PROTOSS_METAL_T3))) && (!(ga.scmc.lib.Library.checkCube(worldIn, Blocks.AIR.getDefaultState(), blockpos, 3).isEmpty()))) { worldIn.setBlockState(blockpos, BlockHandler.ZERG_CREEP.getDefaultState()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4759/buggy-version/src.main.java.ga.scmc.blocks.BlockZergCreep.java", "BodyUseAPI": ["net.minecraft.world.World.setBlockState(net.minecraft.util.math.BlockPos,BlockHandler.ZERG_CREEP.getDefaultState())"], "Fixed commit": "d472d510f677a051eafc45035bc653560e494be4", "Url": "https://api.github.com/repos/SCMCMod/Starcraft-Mod", "Date": "2017-10-21T21:38:17Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.util.math.BlockPos.add(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((blockpos.getY()) >= 0) && ((blockpos.getY()) < 256)) && (!(worldIn.isBlockLoaded(blockpos)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4759/buggy-version/src.main.java.ga.scmc.blocks.BlockZergCreep.java", "BodyUseAPI": [], "Fixed commit": "d472d510f677a051eafc45035bc653560e494be4", "Url": "https://api.github.com/repos/SCMCMod/Starcraft-Mod", "Date": "2017-10-21T21:38:17Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entityIn instanceof ga.scmc.entity.EntityZergMob) || (entityIn instanceof ga.scmc.entity.EntityZergPassive)) { entityIn.motionX *= 1.2; entityIn.motionZ *= 1.2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4759/buggy-version/src.main.java.ga.scmc.blocks.BlockZergCreep.java", "BodyUseAPI": [], "Fixed commit": "d472d510f677a051eafc45035bc653560e494be4", "Url": "https://api.github.com/repos/SCMCMod/Starcraft-Mod", "Date": "2017-10-21T21:38:17Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.startsWithIgnoreCase(org.apache.commons.lang.StringUtils.trim(ddl), \"flush\"))) { repository.console(ddl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2796/buggy-version/parse.src.main.java.com.alibaba.otter.canal.parse.inbound.mysql.tsdb.MemoryTableMeta.java", "BodyUseAPI": ["com.alibaba.druid.sql.repository.SchemaRepository.console(java.lang.String)"], "Fixed commit": "01ef15223cafa277ed7f0292ce97781abaf0b73d", "Url": "https://api.github.com/repos/yakirChen/canal", "Date": "2017-12-04T05:19:58Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.loocha.bean.UserScore>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((oldScore.getScore()) != score) { com.loocha.resources.UserScoreResourses.logger.error(\"only one score after \u9ad8\u8003\"); throw new com.loocha.exception.ServerInternalException(com.loocha.exception.ServerInternalException.ERR_ONE_INPUT_SCORE_AFTER_EXAM); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5213/buggy-version/college-server.src.com.loocha.resources.UserScoreResourses.java", "BodyUseAPI": [], "Fixed commit": "e6a252c092d6262d82077107b28dbcb57c7e602a", "Url": "https://api.github.com/repos/knowledges/college-zhejiang", "Date": "2017-05-29T15:41:15Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(parameter.getKey())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (checkBoxButton != null) { boolean selection = checkBoxButton.getSelection(); parameter.setValue(java.lang.String.valueOf(selection)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4713/buggy-version/com.photon.phresco.ui.src.com.photon.phresco.ui.phrescoexplorer.Functional.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Button.getSelection()"], "Fixed commit": "f9d649cae0bc5c094e28851c31b36a56d530434a", "Url": "https://api.github.com/repos/photon-infotech/phresco-eclipse", "Date": "2013-08-13T12:19:58Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value == null) { return clazz.newInstance(); }else { return clazz.getDeclaredConstructor(java.lang.String.class).newInstance(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/9012/buggy-version/src.main.java.lib.sbet.parser.SbetReaderTextProcessor.java", "BodyUseAPI": ["java.lang.reflect.Constructor.newInstance(java.lang.String)"], "Fixed commit": "b14a17bacf0cd2fbd4e8c14209a19c07db286c88", "Url": "https://api.github.com/repos/etiennec/jebt", "Date": "2016-10-15T02:26:23Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minute < 10) { msg = ((\"\" + hourOfDay) + \":0\") + minute; }else { msg = ((\"\" + hourOfDay) + \":\") + minute; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4525/buggy-version/app.src.main.java.com.example.antoan.planit.view.createEvent.CreateEventView.java", "BodyUseAPI": [], "Fixed commit": "dd9fd0af7c308ecb5b5c3d5532297c346cbd1584", "Url": "https://api.github.com/repos/team-placeholder/plan-it", "Date": "2017-03-05T21:05:41Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(Stomp.Headers.ContentType.TYPESUBTYPE_SEPARATOR)", "java.util.Map<?, ?>.get(Stomp.Headers.CONTENT_TYPE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (slashIndex == ((contentType.length()) - 1)) { throw new org.apache.activemq.transport.stomp.ProtocolException((\"Invalid content type format: subtype not found in + \" + contentType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8924/buggy-version/activemq-stomp.src.main.java.org.apache.activemq.transport.stomp.LegacyFrameTranslator.java", "BodyUseAPI": [], "Fixed commit": "3f2eea90b33c2aa6a47d9659440df82c71b23bda", "Url": "https://api.github.com/repos/4th-building-2nd-floor-innopolis/activemq", "Date": "2017-03-20T18:30:08Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mapPanel.selectedPoint) != null) { mapPanel.selectedPoint.setId(nodeTextField.getText()); mapPanel.selectedPoint.setType(((java.lang.String) (typeSelector.getSelectedItem()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7029/buggy-version/src.main.java.WPI.CampusMap.UI.AppUIObject.java", "BodyUseAPI": ["mapPanel.selectedPoint.setType(java.lang.Object)", "mapPanel.selectedPoint.setId(java.lang.String)"], "Fixed commit": "f7d9eb5e26948e49bdeeead05dd0aa29cbb560f0", "Url": "https://api.github.com/repos/Team11b/CampusMap", "Date": "2015-11-24T19:18:58Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e2.length()) != 0) e1.setText((((e1.getText()) + (e2.getText().toString())) + \")\")); else e1.setText(((e1.getText()) + \")\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4896/buggy-version/app.src.main.java.anubhav.calculatorapp.ScientificCal.java", "BodyUseAPI": ["e2.getText().toString()", "android.widget.EditText.getText()", "android.widget.EditText.setText((((e1.getText()) + (e2.getText().toString())) + \")\"))"], "Fixed commit": "440920671fa92f05f496a2c4e5c6bbc50fe61a57", "Url": "https://api.github.com/repos/anubhavshrimal/CalculatorApp", "Date": "2016-03-15T19:23:01Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((((((((((((((newText.equals(\"-\")) || (newText.endsWith(\"sqrt\"))) || (newText.endsWith(\"log\"))) || (newText.endsWith(\"ln\"))) || (newText.endsWith(\"sin\"))) || (newText.endsWith(\"asin\"))) || (newText.endsWith(\"asind\"))) || (newText.endsWith(\"sinh\"))) || (newText.endsWith(\"cos\"))) || (newText.endsWith(\"acos\"))) || (newText.endsWith(\"acosd\"))) || (newText.endsWith(\"cosh\"))) || (newText.endsWith(\"tan\"))) || (newText.endsWith(\"atan\"))) || (newText.endsWith(\"atand\"))) || (newText.endsWith(\"tanh\"))) || (newText.endsWith(\"cbrt\"))) { newText = \"\"; }else if ((newText.endsWith(\"^\")) || (newText.endsWith(\"/\"))) newText = newText.substring(0, ((newText.length()) - 1)); else if (newText.endsWith(\"pi\")) newText = newText.substring(0, ((newText.length()) - 2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4896/buggy-version/app.src.main.java.anubhav.calculatorapp.ScientificCal.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "440920671fa92f05f496a2c4e5c6bbc50fe61a57", "Url": "https://api.github.com/repos/anubhavshrimal/CalculatorApp", "Date": "2016-03-15T19:23:01Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((expertChat.getMessageType()) == (com.inceptai.dobby.expert.ExpertChat.MSG_TYPE_EXPERT_TEXT)) { dobbyAnalytics.receivedMessageFromExpert(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/9014/buggy-version/Dobby.app.src.main.java.com.inceptai.dobby.ui.ExpertChatActivity.java", "BodyUseAPI": [], "Fixed commit": "be27f2686e6edfeba644bc4d80bce4c1ac996cd8", "Url": "https://api.github.com/repos/InceptAi/dobby-android", "Date": "2017-06-22T00:10:52Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (field.isSynthetic()) { return descriptors; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4968/buggy-version/centromere-core.src.main.java.org.oncoblocks.centromere.core.util.QueryParameterUtil.java", "BodyUseAPI": [], "Fixed commit": "a1b429cba97a55e81c0a4cbd73d9eabadd9dedd2", "Url": "https://api.github.com/repos/blueprintmedicines/centromere", "Date": "2016-06-21T16:48:38Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chatHistory) != null) { for (int i = 0; i < (chatHistory.size()); i++) { com.onelio.myuacloud.Apps.Chat.ChatMessage message = chatHistory.get(i); displayMessage(message); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/9205/buggy-version/app.src.main.java.com.onelio.myuacloud.Apps.TutoriaViewActivity.java", "BodyUseAPI": [], "Fixed commit": "08e1729fa395f421f8cfd868b8ba740f9106800d", "Url": "https://api.github.com/repos/Onelio/MyUACloud", "Date": "2017-02-06T09:34:03Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((view.getParent()) != null) { android.util.Log.e(\"IndexedCursorAdapter\", \"View should not have a parent.\"); ((android.view.ViewGroup) (view.getParent())).removeView(view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4578/buggy-version/app.src.main.java.org.fasola.fasolaminutes.IndexedCursorAdapter.java", "BodyUseAPI": ["android.view.View.getParent()", "((android.view.ViewGroup) (view.getParent())).removeView(android.view.View)"], "Fixed commit": "99aab93a7ba3b0717430c6d0b388fdc6a8e28cb9", "Url": "https://api.github.com/repos/mrichards42/fasola_android", "Date": "2016-01-20T00:35:16Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (param.contains(\"=\")) { java.lang.String[] argAndValue = param.split(\"=\"); finalParams.put(decode(argAndValue[0]), decode(argAndValue[1])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3764/buggy-version/src.main.java.HTTPServer.RequestParser.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "7fb8739e09f2106c59fb8b7ff317a3c734350f9f", "Url": "https://api.github.com/repos/7hoenix/javaServer", "Date": "2016-09-04T00:20:00Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiFile.findElementAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (element == null) { element = file.findElementAt((offset - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2869/buggy-version/idea.src.org.jetbrains.kotlin.idea.liveTemplates.JetTemplateContextType.java", "BodyUseAPI": [], "Fixed commit": "7f14e7eb31a5591dc3bface939dfb7432ae313a6", "Url": "https://api.github.com/repos/alexey-tsvetkov/kotlin", "Date": "2015-02-04T18:57:11Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getIntExtra(java.lang.String,Ultils.REQUEST_CODE_EDIT)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (back == (Ultils.REQUEST_CODE_EDIT)) { android.os.Bundle packageFromCaller = data.getBundleExtra(\"MyPackage\"); com.example.gerbera.todocs.TodoItemsPojo itemTodo = ((com.example.gerbera.todocs.TodoItemsPojo) (packageFromCaller.getSerializable(\"edititem\"))); todoItemDbManager.update(itemTodo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1320/buggy-version/app.src.main.java.com.example.gerbera.todocs.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a0fae9c3011ed22f9f65d6f24fc970abfe64d156", "Url": "https://api.github.com/repos/vtatntpt/ToDoCS", "Date": "2016-10-10T08:52:20Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endpoint) instanceof org.mule.api.context.MuleContextAware) { ((org.mule.api.context.MuleContextAware) (endpoint)).setMuleContext(muleContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/668/buggy-version/core.src.main.java.org.mule.agent.EndpointNotificationLoggerAgent.java", "BodyUseAPI": [], "Fixed commit": "ac8da2c9d86bbc212ecd8052d582f074c5fd0529", "Url": "https://api.github.com/repos/mulesoft/mule", "Date": "2014-07-14T15:04:03Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endpoint) instanceof org.mule.api.exception.MessagingExceptionHandlerAware) { ((org.mule.api.exception.MessagingExceptionHandlerAware) (endpoint)).setMessagingExceptionHandler(new org.mule.exception.MessagingExceptionHandlerToSystemAdapter()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/668/buggy-version/core.src.main.java.org.mule.agent.EndpointNotificationLoggerAgent.java", "BodyUseAPI": [], "Fixed commit": "ac8da2c9d86bbc212ecd8052d582f074c5fd0529", "Url": "https://api.github.com/repos/mulesoft/mule", "Date": "2014-07-14T15:04:03Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endpoint) instanceof org.mule.api.lifecycle.Initialisable) { ((org.mule.api.lifecycle.Initialisable) (endpoint)).initialise(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/668/buggy-version/core.src.main.java.org.mule.agent.EndpointNotificationLoggerAgent.java", "BodyUseAPI": [], "Fixed commit": "ac8da2c9d86bbc212ecd8052d582f074c5fd0529", "Url": "https://api.github.com/repos/mulesoft/mule", "Date": "2014-07-14T15:04:03Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openflexo.view.SelectionSynchronizedFIBView.getFIBView()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (aFibView != null) { aController = aFibView.getController(); if (aController != null) { aController.removeSelectionListener(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4049/buggy-version/flexodesktop.GUI.flexo.src.main.java.org.openflexo.view.SelectionSynchronizedFIBView.java", "BodyUseAPI": ["org.openflexo.fib.view.FIBView.getController()"], "Fixed commit": "b07de7c1fcd9c6d5e50b9a5849a193ad13edbd37", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-12-18T08:23:10Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openflexo.fge.view.ConnectorView<O>.getController()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (controller != null) { return getController().getDrawingView(); }else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4049/buggy-version/flexodesktop.GUI.flexographicalengine.src.main.java.org.openflexo.fge.view.ConnectorView.java", "BodyUseAPI": [], "Fixed commit": "b07de7c1fcd9c6d5e50b9a5849a193ad13edbd37", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-12-18T08:23:10Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mffr.getField().getMapping()) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6760/buggy-version/src.main.java.net.frontlinesms.plugins.patientview.responsemapping.IncomingFormMatcher.java", "BodyUseAPI": [], "Fixed commit": "868f7178b74a7b6596f0270dac52eda618e0a542", "Url": "https://api.github.com/repos/medic/PatientView", "Date": "2012-06-25T00:08:19Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(java.lang.Character.isLetter(first.getDisplayName().charAt(0)))) || (!(java.lang.Character.isLetter(second.getDisplayName().charAt(0))))) { if (!(java.lang.Character.isDigit(first.getDisplayName().charAt(0)))) { return 1; } return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8234/buggy-version/api.src.main.java.org.hisp.dhis.android.dashboard.api.models.IdentifiableObject.java", "BodyUseAPI": ["java.lang.Character.isDigit(char)", "java.lang.String.charAt(int)", "org.hisp.dhis.android.dashboard.api.models.IdentifiableObject.getDisplayName()"], "Fixed commit": "85e5c1caf37bcca94921ac179c5f67680aad54e6", "Url": "https://api.github.com/repos/harsha-sira/dhis2-android-dashboard", "Date": "2016-03-25T09:00:48Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["backtype.storm.tuple.Tuple.getString(int)", "backtype.storm.tuple.Tuple.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((sup + ((miRNA.length()) - 8)) <= (lncRNA.length())) && ((inf - 1) >= 0)) { java.lang.String MRE = lncRNA.substring((inf - 1), (sup + ((miRNA.length()) - 8))); MRE = new java.lang.StringBuilder(MRE).reverse().toString(); collector.emit(new backtype.storm.tuple.Values(miRNA, MRE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7947/buggy-version/src.main.java.luis.miRNAstorm.bolts.SeedMatchBolt.java", "BodyUseAPI": ["java.lang.String.length()", "backtype.storm.topology.BasicOutputCollector.emit(backtype.storm.tuple.Values)", "java.lang.String.substring(int,int)"], "Fixed commit": "3f0ff4937740ad20a59f2602edc99efb923f90bc", "Url": "https://api.github.com/repos/luisceledon/miRNA-storm", "Date": "2016-03-23T13:53:32Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((observableResult.get().length()) > (Const.ZERO_VALUE)) && (!(observableResult.get().equals(Const.ZERO)))) || (((observableResult.get().length()) > (Const.ZERO_VALUE)) && (!(observableResult.get().equals(Const.EMPTY))))) { mCurrentValue = observableResult.get(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2341/buggy-version/app.src.main.java.kultprosvet.com.calculator.Calculator.java", "BodyUseAPI": ["android.databinding.ObservableField<java.lang.String>.get()"], "Fixed commit": "a4725a4b5460a1157148e870da7a80b87c27fb00", "Url": "https://api.github.com/repos/roma-sck/Calculator", "Date": "2016-07-08T22:25:53Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cdata) != null) { if (offset > (cdata.length())) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); } if ((offset + count) > (cdata.length())) { cdata.delete(offset, ((cdata.length()) - offset)); }else { cdata.delete(offset, count); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2939/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "7a02820def9584637ad8c77a3a8c07dbe89bc1b4", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset + count) > length) { document.alpha[nodeNumber] = inDocOffset + offset; document.alphaLen[nodeNumber] = length - offset; }else { document.alpha[nodeNumber] = inDocOffset + offset; document.alphaLen[nodeNumber] = count; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2939/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "7a02820def9584637ad8c77a3a8c07dbe89bc1b4", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > length) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2939/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "7a02820def9584637ad8c77a3a8c07dbe89bc1b4", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2939/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "7a02820def9584637ad8c77a3a8c07dbe89bc1b4", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > length) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2939/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "7a02820def9584637ad8c77a3a8c07dbe89bc1b4", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isEmpty(value))) { contact.setImageFileName(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1590/buggy-version/src.main.java.com.evgenyshilov.web.contacts.fieldhanlders.ImageFilenameFieldHandler.java", "BodyUseAPI": ["com.evgenyshilov.web.contacts.database.model.Contact.setImageFileName(java.lang.String)"], "Fixed commit": "9ba1aa3de1fe09e38919e0e4a52bfaaa1f779330", "Url": "https://api.github.com/repos/speane/contacts-web-app", "Date": "2016-10-10T18:06:04Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getDatabase().find(me.hwei.bukkit.scoreplugin.data.Work.class).where().eq(\"pos_x\", sign.getX()).eq(\"pos_y\", sign.getY()).eq(\"pos_z\", sign.getZ()).findUnique()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (work != null) e.setCancelled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/329/buggy-version/src.main.java.me.hwei.bukkit.scoreplugin.ScorePlugin.java", "BodyUseAPI": [], "Fixed commit": "dbae5e576365c41d1a0b2aea7fcdf92bd788525b", "Url": "https://api.github.com/repos/hwei/ScorePlugin", "Date": "2011-08-24T08:33:20Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.lang.ASTNode.getElementType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parentType == (LONG_TEMPLATE_ENTRY)) && (com.jetbrains.lang.dart.ide.formatter.DartIndentProcessor.EXPRESSIONS.contains(elementType))) { return com.intellij.formatting.Indent.getContinuationIndent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4558/buggy-version/Dart.src.com.jetbrains.lang.dart.ide.formatter.DartIndentProcessor.java", "BodyUseAPI": [], "Fixed commit": "51331773ac9bed5f711ebfe1f7291baf964c5613", "Url": "https://api.github.com/repos/stevemessick/intellij-plugins", "Date": "2015-09-10T21:48:24Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getFirstDir()) != null) return getFirstDir().getAbsolutePath(); else return mName;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5171/buggy-version/src.org.brandroid.openmanager.data.OpenSmartFolder.java", "BodyUseAPI": [], "Fixed commit": "95f3d835d002542e591446056bba4de5cfa255b4", "Url": "https://api.github.com/repos/BrandoCommando/OpenExplorer", "Date": "2012-05-18T22:57:19Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(fieldType.isAssignableFrom(levelType))) { errors.add(java.lang.String.format(\"'%s' values can't be assigned to '%s' field.\", levelType, field)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5439/buggy-version/src.main.java.com.github.dakusui.jcunit.core.factor.FactorLoader.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.Class<?>,java.lang.reflect.Field)"], "Fixed commit": "bb016f150c6bce2b4c8893533dfc58dccaf63dd0", "Url": "https://api.github.com/repos/dakusui/jcunit", "Date": "2014-07-15T14:22:44Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.moquette.server.netty.NettyUtils.getAttribute(io.netty.channel.ChannelHandlerContext,NettyChannel.ATTR_KEY_CLIENTID)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((clientID != null) && (!(clientID.isEmpty()))) { m_messaging.lostConnection(clientID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1027/buggy-version/broker.src.main.java.org.eclipse.moquette.server.netty.NettyMQTTHandler.java", "BodyUseAPI": ["org.eclipse.moquette.spi.IMessaging.lostConnection(java.lang.String)"], "Fixed commit": "f7466fd9683a22f81a786088ba10f7a3779bbdb6", "Url": "https://api.github.com/repos/wagnerluis1982/moquette", "Date": "2015-09-22T13:29:02Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isSendingErrorOutput()) { com.codelanx.codelanxlib.logging.Debugger.error(ex, \"Error in SQL operation: %s\", com.codelanx.codelanxlib.util.Databases.simpleErrorOutput(ex)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4775/buggy-version/src.main.java.com.codelanx.codelanxlib.data.SQLDataType.java", "BodyUseAPI": [], "Fixed commit": "7d1ff993ccbb2ce40fac946416169800639f8c66", "Url": "https://api.github.com/repos/Codelanx/CodelanxLib", "Date": "2015-05-13T09:48:23Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isSendingErrorOutput()) { com.codelanx.codelanxlib.logging.Debugger.error(ex, \"Error in SQL operation: %s\", com.codelanx.codelanxlib.util.Databases.simpleErrorOutput(ex)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4775/buggy-version/src.main.java.com.codelanx.codelanxlib.data.SQLDataType.java", "BodyUseAPI": [], "Fixed commit": "7d1ff993ccbb2ce40fac946416169800639f8c66", "Url": "https://api.github.com/repos/Codelanx/CodelanxLib", "Date": "2015-05-13T09:48:23Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isSendingErrorOutput()) { com.codelanx.codelanxlib.logging.Debugger.error(ex, \"Error in SQL operation: %s\", com.codelanx.codelanxlib.util.Databases.simpleErrorOutput(ex)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4775/buggy-version/src.main.java.com.codelanx.codelanxlib.data.SQLDataType.java", "BodyUseAPI": [], "Fixed commit": "7d1ff993ccbb2ce40fac946416169800639f8c66", "Url": "https://api.github.com/repos/Codelanx/CodelanxLib", "Date": "2015-05-13T09:48:23Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isSendingErrorOutput()) { com.codelanx.codelanxlib.logging.Debugger.error(ex, \"Error in SQL operation: %s\", com.codelanx.codelanxlib.util.Databases.simpleErrorOutput(ex)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4775/buggy-version/src.main.java.com.codelanx.codelanxlib.data.SQLDataType.java", "BodyUseAPI": [], "Fixed commit": "7d1ff993ccbb2ce40fac946416169800639f8c66", "Url": "https://api.github.com/repos/Codelanx/CodelanxLib", "Date": "2015-05-13T09:48:23Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isSendingErrorOutput()) { com.codelanx.codelanxlib.logging.Debugger.error(ex, \"Error in SQL operation: %s\", com.codelanx.codelanxlib.util.Databases.simpleErrorOutput(ex)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4775/buggy-version/src.main.java.com.codelanx.codelanxlib.data.SQLDataType.java", "BodyUseAPI": [], "Fixed commit": "7d1ff993ccbb2ce40fac946416169800639f8c66", "Url": "https://api.github.com/repos/Codelanx/CodelanxLib", "Date": "2015-05-13T09:48:23Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((FourBitTwoDisclosureDeviceUnlocker.dev) == null) { FourBitTwoDisclosureDeviceUnlocker.appendTrace(\"doSpin : device is null\"); continueSpin = false; }else if (numOfSpins <= 0) { FourBitTwoDisclosureDeviceUnlocker.appendTrace(\"doSpin : Num of spins is negative, cannot spin a negative amount of times.\"); continueSpin = false; }else if ((FourBitTwoDisclosureDeviceUnlocker.state) == (FourBitTwoDisclosureDeviceUnlocker.STATE_NOT_CREATED)) { FourBitTwoDisclosureDeviceUnlocker.appendTrace(\"doSpin : Invalid state for spin - no device is created\"); continueSpin = false; }else { continueSpin = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6656/buggy-version/src.FourBitTwoDisclosureDeviceUnlocker.java", "BodyUseAPI": [], "Fixed commit": "36bed3e66127e8a6cbd269069061c867226ad75c", "Url": "https://api.github.com/repos/Resource-Locking-Project/Resource-Locking-Project", "Date": "2017-09-16T20:38:02Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.StringUtils.split(java.lang.String,HubContext.DELIMITER)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((comps != null) && ((comps.length) > 3)) { return com.whizzosoftware.hobson.api.variable.DeviceVariableContext.create(com.whizzosoftware.hobson.api.device.DeviceContext.create(com.whizzosoftware.hobson.api.hub.HubContext.create(comps[0]), comps[1], comps[2]), comps[3]); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3970/buggy-version/src.main.java.com.whizzosoftware.hobson.api.variable.DeviceVariableContext.java", "BodyUseAPI": ["com.whizzosoftware.hobson.api.device.DeviceContext.create(com.whizzosoftware.hobson.api.hub.HubContext.create(comps[0]),java.lang.String,java.lang.String)", "com.whizzosoftware.hobson.api.hub.HubContext.create(java.lang.String)", "com.whizzosoftware.hobson.api.variable.DeviceVariableContext.create(com.whizzosoftware.hobson.api.device.DeviceContext.create(com.whizzosoftware.hobson.api.hub.HubContext.create(comps[0]), comps[1], comps[2]),java.lang.String)"], "Fixed commit": "7aba40442eafb61f69c5a3519216be3abc51f83b", "Url": "https://api.github.com/repos/whizzosoftware/hobson-hub-api", "Date": "2016-11-22T21:25:29Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTree.getClosestPathForLocation(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (path != null) { java.awt.Rectangle r = tree.getPathBounds(path); if (r.contains(x, y)) { tree.setSelectionPath(path); tree.startEditingAtPath(path); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4357/buggy-version/N2A.src.gov.sandia.n2a.ui.eq.PanelEquationTree.java", "BodyUseAPI": ["javax.swing.JTree.startEditingAtPath(javax.swing.tree.TreePath)", "javax.swing.JTree.setSelectionPath(javax.swing.tree.TreePath)", "javax.swing.JTree.getPathBounds(javax.swing.tree.TreePath)"], "Fixed commit": "6322a0f68601a0f1bcbf847c6fee04706d902647", "Url": "https://api.github.com/repos/frothga/n2a", "Date": "2017-11-15T16:06:38Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(CommonConstants.MAX_PRICE,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(maxPriceString.equals(\"\"))) { url += \"&max_price=\" + maxPriceString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9020/buggy-version/app.src.main.java.com.company.android.etsysearch.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "964d6b001cc2813703f269e020a45057bb6ddc63", "Url": "https://api.github.com/repos/andytriboletti/etsysearch", "Date": "2016-04-03T04:12:12Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, android.support.v4.app.Fragment>.get(CalendarFragment.TAG)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (calendarFragment != null) calendarFragment.showCalendarView();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/900/buggy-version/app.src.main.java.me.kholmukhamedov.organizer.ui.activity.MainActivity.java", "BodyUseAPI": ["me.kholmukhamedov.organizer.ui.fragment.calendar.CalendarFragment.showCalendarView()"], "Fixed commit": "e93b8a7f2ca4997d76e0791d9a8a8a4b3217bc28", "Url": "https://api.github.com/repos/kholmukhamedovme/organizer", "Date": "2017-07-12T13:04:07Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, android.support.v4.app.Fragment>.get(CalendarFragment.TAG)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (calendarFragment != null) calendarFragment.hideCalendarView();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/900/buggy-version/app.src.main.java.me.kholmukhamedov.organizer.ui.activity.MainActivity.java", "BodyUseAPI": ["me.kholmukhamedov.organizer.ui.fragment.calendar.CalendarFragment.hideCalendarView()"], "Fixed commit": "e93b8a7f2ca4997d76e0791d9a8a8a4b3217bc28", "Url": "https://api.github.com/repos/kholmukhamedovme/organizer", "Date": "2017-07-12T13:04:07Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, android.support.v4.app.Fragment>.get(CalendarFragment.TAG)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (calendarFragment != null) calendarFragment.showCalendarView();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/900/buggy-version/app.src.main.java.me.kholmukhamedov.organizer.ui.activity.MainActivity.java", "BodyUseAPI": ["me.kholmukhamedov.organizer.ui.fragment.calendar.CalendarFragment.showCalendarView()"], "Fixed commit": "e93b8a7f2ca4997d76e0791d9a8a8a4b3217bc28", "Url": "https://api.github.com/repos/kholmukhamedovme/organizer", "Date": "2017-07-12T13:04:07Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getRelationships()) == null) { pJson = patientService.createPerson(c); }else { pJson = patientService.createPatient(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4187/buggy-version/opensrp-connector.src.main.java.org.opensrp.connector.openmrs.schedule.OpenmrsSyncerListener.java", "BodyUseAPI": ["org.opensrp.connector.openmrs.service.PatientService.createPerson(org.opensrp.domain.Client)", "org.opensrp.connector.openmrs.service.PatientService.createPatient(org.opensrp.domain.Client)"], "Fixed commit": "b051ef2b9fc0d9394e8fc36a3f24a7a863ed1016", "Url": "https://api.github.com/repos/I-TECH/opensrp-server", "Date": "2017-05-29T14:34:58Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((endpointAliasMap != null) && (endpointAliasMap.containsKey(endpoint))) { endpoint = endpointAliasMap.get(endpoint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1841/buggy-version/src.main.java.com.heimuheimu.naivemonitor.falcon.FalconReporter.java", "BodyUseAPI": [], "Fixed commit": "4f24a97e349ade29ce8221f16b67a676c4e27c26", "Url": "https://api.github.com/repos/heimuheimu/naivemonitor", "Date": "2017-10-13T05:12:12Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (user.isInRole(Account.ROLE_USER)) { return incidentRepository.findAllByCreatorIdAndStatus(user.getAccountId(), status); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7064/buggy-version/src.main.java.com.github.kolorobot.icm.incident.IncidentService.java", "BodyUseAPI": ["com.github.kolorobot.icm.incident.IncidentRepository.findAllByCreatorIdAndStatus(user.getAccountId(),com.github.kolorobot.icm.incident.Incident.Status)", "com.github.kolorobot.icm.account.User.getAccountId()"], "Fixed commit": "9ed8d2ec265305f3557bd9ae5154ca128ade0b92", "Url": "https://api.github.com/repos/kolorobot/spring-mvc-icm-demo", "Date": "2015-03-06T14:25:24Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hp.hpl.jena.query.ResultSet.nextSolution()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((soln.get((\"?\" + (predicates.get(i).getPredicate().toString())))) != null) { elementAttribute.appendChild(document.createCDATASection(soln.get((\"?\" + (predicates.get(i).getPredicate()))).toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5459/buggy-version/lod4wfs.src.main.java.de.ifgi.lod4wfs.factory.FactoryWFS.java", "BodyUseAPI": ["org.w3c.dom.Element.appendChild(org.w3c.dom.CDATASection)", "soln.get((\"?\" + (predicates.get(i).getPredicate()))).toString()", "predicates.get(i).getPredicate()", "org.w3c.dom.Document.createCDATASection(soln.get((\"?\" + (predicates.get(i).getPredicate()))).toString())", "java.util.ArrayList<de.ifgi.lod4wfs.core.Triple>.get(int)", "com.hp.hpl.jena.query.QuerySolution.get((\"?\" + (predicates.get(i).getPredicate())))"], "Fixed commit": "9359dd39e81a37e3297c30a57d117da1e4a18dba", "Url": "https://api.github.com/repos/jimjonesbr/lod4wfs", "Date": "2015-01-05T16:18:03Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.Toolkit.getScreenSize()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((x + (getWidth())) > (s.width)) { x = (s.width) - (getWidth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7106/buggy-version/StickyNotes.src.com.dosse.stickynotes.Note.java", "BodyUseAPI": [], "Fixed commit": "741dbfb86b92c7123eea6c6abe48bc68d350da3e", "Url": "https://api.github.com/repos/adolfintel/NoteBot", "Date": "2016-07-21T12:44:32Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().findViewById(R.id.button_1)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (button != null) { button.setText(\"Close\"); button.setOnClickListener(new android.view.View.OnClickListener() { public void onClick(android.view.View v) { getActivity().finish(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5310/buggy-version/plotter.src.main.java.org.md2k.plotter.PrefsFragmentDataSources.java", "BodyUseAPI": ["android.widget.Button.setOnClickListener(android.view.View.OnClickListener)", "android.widget.Button.setText(java.lang.String)"], "Fixed commit": "8c09ce908cd3753fc742cc13c814c7c450997300", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-Plotter", "Date": "2016-03-14T21:09:34Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n < 1) { return false; }else if (n < 4) { return true; }else if ((n % 2) == 0) { return false; }else if (n < 9) { return true; }else if ((n % 3) == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4007/buggy-version/src.main.java.io.github.atealxt.projecteuler.problem.Problem3.java", "BodyUseAPI": [], "Fixed commit": "fd9f475e7239074be50b7d7a376fd64ee288f148", "Url": "https://api.github.com/repos/atealxt/projecteuler", "Date": "2014-11-03T06:10:47Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(java.lang.String,java.lang.String[],<nulltype>,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cursor.getCount()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8315/buggy-version/app.src.main.java.com.example.cnitz.eatthis.RestaurantDb.java", "BodyUseAPI": [], "Fixed commit": "3bf87c087fa9479c228722a71393e6821da35569", "Url": "https://api.github.com/repos/Cnitz/EatThis", "Date": "2015-10-30T23:07:13Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dx != 0) || (dy != 0)) { if (grid1.add(wordBank.get(x), row, col, dx, dy)) { added = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4051/buggy-version/03WordSearch.Driver.java", "BodyUseAPI": ["WordGrid.add(java.lang.String,int,int,int,int)"], "Fixed commit": "8cc1b0fa48e3e6814c95cd77cb95c4f964aaa5ba", "Url": "https://api.github.com/repos/Weihwu/APCS-HW-Period-7", "Date": "2014-11-27T19:23:58Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((nodes.contains(node)) && (!(graph.isInitialNode(node)))) && (isDoLoop(node))) stack.push(new adt.graph.CyclePath<V>(nodes.subList(nodes.lastIndexOf(node), nodes.size()))); else if (((nodes.contains(node)) && (!(graph.isInitialNode(node)))) && (!(isDoLoop(node)))) stack.push(new adt.graph.CyclePath<V>(nodes.subList(nodes.lastIndexOf(node), nodes.size())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5822/buggy-version/PESTT.src.domain.coverage.algorithms.CompletePathCoverage.java", "BodyUseAPI": ["java.util.Stack<adt.graph.CyclePath<V>>.push(adt.graph.CyclePath<V>)", "java.util.LinkedList<adt.graph.Node<V>>.lastIndexOf(adt.graph.Node<V>)", "java.util.LinkedList<adt.graph.Node<V>>.lastIndexOf(adt.graph.Node<V>)", "java.util.LinkedList<adt.graph.Node<V>>.size()", "java.util.LinkedList<adt.graph.Node<V>>.subList(nodes.lastIndexOf(node),nodes.size())", "java.util.LinkedList<adt.graph.Node<V>>.contains(adt.graph.Node<V>)", "domain.coverage.algorithms.CompletePathCoverage<V>.CompletePathCoverageVisitor.isDoLoop(adt.graph.Node<V>)", "java.util.Stack<adt.graph.CyclePath<V>>.push(adt.graph.CyclePath<V>)", "adt.graph.Graph<V>.isInitialNode(adt.graph.Node<V>)", "java.util.LinkedList<adt.graph.Node<V>>.size()", "java.util.LinkedList<adt.graph.Node<V>>.subList(nodes.lastIndexOf(node),nodes.size())"], "Fixed commit": "49b757dd2d1e0cb7a2a17576cca90c93471b52ac", "Url": "https://api.github.com/repos/pestt/PESTT", "Date": "2012-05-07T16:13:21Z"},
{"Line": "=>973", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.semanticweb.owlapi.mansyntax.parser.ManchesterOWLSyntaxEditorParser.peekToken()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (eof(tok)) { return dataFactory.getOWLThing(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4617/buggy-version/parsers.src.main.java.org.semanticweb.owlapi.mansyntax.parser.ManchesterOWLSyntaxEditorParser.java", "BodyUseAPI": [], "Fixed commit": "b8e7693a13339469a81cc47a9cd9f8b62a3498a6", "Url": "https://api.github.com/repos/owlcs/owlapi", "Date": "2014-03-11T23:12:31Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ntut.csie.ezScrum.web.dataObject.SprintObject.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sprint == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5534/buggy-version/java.ntut.csie.ezScrum.web.helper.ReleasePlanHelper.java", "BodyUseAPI": [], "Fixed commit": "023e290c47765c2816b4f0d4f33f9812967f43bf", "Url": "https://api.github.com/repos/ezScrum/ezScrum", "Date": "2016-05-03T02:04:13Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dx < width) { level[dx] = y + (piece.getHeight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1605/buggy-version/src.eu.veldsoft.esgi120.p2.GeneticAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "3b23b66dd69611dbf75fb4332169fe4d65f3150f", "Url": "https://api.github.com/repos/TodorBalabanov/ESGI120Problem2GeneticAlgorithmSolver", "Date": "2016-08-01T07:55:17Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (button.isDisabled()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4602/buggy-version/core.src.main.java.me.seanmaltby.lonearcher.core.gui.UpgradeGUI.java", "BodyUseAPI": [], "Fixed commit": "ef2d288b3a4291e1228697390f00ec1f4e3f3206", "Url": "https://api.github.com/repos/smaltby/LoneArcher", "Date": "2014-05-10T23:11:44Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CommonLibs.DataStructure.IPAddress.toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (secureConList.containsKey(key)) { connection = new CommonLibs.DataStructure.Connection(address, true); secureConList.put(key, connection); java.lang.Thread thread = new java.lang.Thread(connection); thread.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5906/buggy-version/src.CommonLibs.DataStructure.ConnectionListManager.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, CommonLibs.DataStructure.Connection>.put(java.lang.String,CommonLibs.DataStructure.Connection)"], "Fixed commit": "b89cd491a33645874e962ff268e23a6993d6f011", "Url": "https://api.github.com/repos/AlonikiX/EZShareSystem", "Date": "2017-05-27T05:27:59Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["armyc2.c2sd.JavaTacticalRenderer.clsUtility.isClosedPolygon(tg.get_LineType())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isClosedPolygon) minSize = 3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6836/buggy-version/Renderer.src.armyc2.c2sd.JavaRendererServer.RenderMultipoints.clsUtility.java", "BodyUseAPI": [], "Fixed commit": "2cb81ac2c85d03778f45cb2b51c4c3760d42f781", "Url": "https://api.github.com/repos/missioncommand/mil-sym-android", "Date": "2015-01-13T20:55:52Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(strNum.isEmpty())) { tokens.add(new algo.exercise.Num(java.lang.Integer.valueOf(strNum))); strNum = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8324/buggy-version/src.algo.exercise.Tokenizer.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)", "java.util.Vector<algo.exercise.Token>.add(algo.exercise.Num)"], "Fixed commit": "e6c6603555619c802e1f4b2de8bbacd0b2c1ef38", "Url": "https://api.github.com/repos/rixx/AlgoTrees", "Date": "2013-06-28T09:27:29Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (primerProductValueMap.isEmpty()) { return new java.math.BigDecimal(\"0.0\"); }else { return this.primerProductValueMap.get(type).getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5961/buggy-version/web.src.main.java.org.one.gene.domain.entity.PrimerProduct.java", "BodyUseAPI": [], "Fixed commit": "6294c1692975a320e2d3a967e54b7f6b9bcdeeca", "Url": "https://api.github.com/repos/sanctityQ/gene", "Date": "2015-05-26T04:19:15Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTTS.synthesizeToFile(text, params, filename)) != (android.speech.tts.TextToSpeech.SUCCESS)) { mDone = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3980/buggy-version/src.com.rfo.basic.TextToSpeechActivity.java", "BodyUseAPI": [], "Fixed commit": "39efdbfe3af68f1328bbd6ed8b2a2838b8b266fe", "Url": "https://api.github.com/repos/RFO-BASIC/Basic", "Date": "2013-08-22T21:54:02Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (null == (cf.lihao.Vars.getKey(tmp))) firsta[i] = firsta[i].replace(m.group(1), \"vars_not_found\"); else firsta[i] = firsta[i].replace(m.group(1), cf.lihao.Vars.getKey(tmp));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8834/buggy-version/src.cf.lihao.Parser.java", "BodyUseAPI": ["cf.lihao.Vars.getKey(java.lang.String)", "java.lang.String.replace(java.lang.String,cf.lihao.Vars.getKey(tmp))"], "Fixed commit": "e0d3cfd5b6854173268286a78887e4c073c9da2d", "Url": "https://api.github.com/repos/nighteblis/WhoistesterAutoTest", "Date": "2015-07-27T10:06:20Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((put) == (bibliothek.gui.dock.station.split.PutInfo.Put.RIGHT)) || ((put) == (bibliothek.gui.dock.station.split.PutInfo.Put.BOTTOM))) { neighbor = ((bibliothek.gui.dock.station.split.Node) (parent)).getRight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8663/buggy-version/docking-frames-core.src.bibliothek.gui.dock.station.split.PutInfo.java", "BodyUseAPI": [], "Fixed commit": "1aed69c95a31bd53fef3822c5af7bcd8679b6127", "Url": "https://api.github.com/repos/Benoker/DockingFrames", "Date": "2012-05-17T08:15:25Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.server.duplication.ws.DuplicationsParser.Duplication.file()", "org.sonar.server.duplication.ws.DuplicationsParser.Duplication.file()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((file1 == null) || (file2 == null)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/832/buggy-version/sonar-server.src.main.java.org.sonar.server.duplication.ws.DuplicationsParser.java", "BodyUseAPI": [], "Fixed commit": "f7bb6cc1a95b3c54d5371e2b37b97821648ff2b7", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-06-26T11:42:51Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.context.ApplicationContext.getBean(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (p == null) { java.lang.System.out.println(\"p is null\"); }else { java.lang.System.out.println(p); p.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1357/buggy-version/src.main.java.currencyparser.App.java", "BodyUseAPI": ["currencyparser.Parser.run()", "java.io.PrintStream.println(currencyparser.Parser)"], "Fixed commit": "2b81a22ea8c37dec6a9508e72382d6d89ab85b20", "Url": "https://api.github.com/repos/ylychko/currency-parser", "Date": "2015-05-28T18:36:26Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((url.startsWith(\"http://\")) || (url.startsWith(\"https://\"))) { urlToCheck = url; }else { urlToCheck = \"http://\" + url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6734/buggy-version/orcid-web.src.main.java.org.orcid.frontend.web.controllers.GroupAdministratorController.java", "BodyUseAPI": [], "Fixed commit": "9f3e6515772d957597ecc6fae9643b99f9afba3b", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2014-02-25T23:06:49Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<raijin.common.datatypes.Task>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(isOverdue(task.getDateTime()))) { today.add(task); isRestEmpty = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5059/buggy-version/src.main.raijin.logic.command.DisplayCommandRunner.java", "BodyUseAPI": ["java.util.ArrayList<raijin.common.datatypes.Task>.add(raijin.common.datatypes.Task)"], "Fixed commit": "6acbbf60930a5810dd84d14cbc61d8b1a640f3c4", "Url": "https://api.github.com/repos/cs2103aug2015-w15-3j/main", "Date": "2015-10-26T04:47:40Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(violateConstraints(boundResult))) && (!(hasTested(boundResult)))) { results.add(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5354/buggy-version/src.main.java.com.github.jesg.dither.IPOG.java", "BodyUseAPI": [], "Fixed commit": "1675767fc05fd98305e7fd084ff16aace2de22f2", "Url": "https://api.github.com/repos/jesg/dither-java", "Date": "2015-09-27T00:31:39Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(violateConstraints(unboundTestCase))) { unbound.add(unboundTestCase); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5354/buggy-version/src.main.java.com.github.jesg.dither.IPOG.java", "BodyUseAPI": ["java.util.List<int[]>.add(int[])"], "Fixed commit": "1675767fc05fd98305e7fd084ff16aace2de22f2", "Url": "https://api.github.com/repos/jesg/dither-java", "Date": "2015-09-27T00:31:39Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (customer.isPersonCustomer()) { customer.registerFinantialInstitutions(finantialInstitutions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8759/buggy-version/src.main.java.org.fenixedu.treasury.ui.accounting.managecustomer.AdhocCustomerController.java", "BodyUseAPI": ["org.fenixedu.treasury.domain.Customer.registerFinantialInstitutions(java.util.List<org.fenixedu.treasury.domain.FinantialInstitution>)"], "Fixed commit": "e0c8f4e097e6ef8fd1daf063b581377de67789d8", "Url": "https://api.github.com/repos/qub-it/fenixedu-treasury", "Date": "2017-06-22T14:50:12Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((apiList == null) || ((apiList.station) == null)) { m_ProgressDialog.hide(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7114/buggy-version/BeTrains.src.main.java.tof.cv.mpp.ClosestFragment.java", "BodyUseAPI": [], "Fixed commit": "3d4a1ad2b94368cca3edaee1141d768aa84992c4", "Url": "https://api.github.com/repos/iRail/BeTrains-for-Android", "Date": "2016-11-28T08:23:31Z"},
{"Line": "=>540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((volumesFromSnapshot.size()) > 0) { throw new com.cloud.exception.InvalidParameterValueException(((\"Unable to perform delete operation, Snapshot with id: \" + snapshotId) + \" is in use \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8660/buggy-version/server.src.com.cloud.storage.snapshot.SnapshotManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "91b9cc8ee3df375274f064352aae0c3ffeda7b71", "Url": "https://api.github.com/repos/Accelerite/cloudstack", "Date": "2017-06-15T09:14:28Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((from == null) || (from == \"\")) { resp.sendRedirect(((req.getContextPath()) + \"/home\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1199/buggy-version/CS320_tjones50.src.edu.ycp.cs320.tjones50.servlet.LoginServlet.java", "BodyUseAPI": [], "Fixed commit": "6dbf1775e75e5a1869d691636ccceb534a616989", "Url": "https://api.github.com/repos/nrussell96/ClassWise", "Date": "2017-04-28T17:40:18Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, java.lang.Integer>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (localVarNumber != null) { if (!(owner.equals(localVariableTypes.get(localVarNumber)))) { return; } java.util.List<java.util.List<java.lang.String>> active = methodCallSequence.get(localVarNumber); if (active == null) { active = new java.util.ArrayList<java.util.List<java.lang.String>>(); active.add(new java.util.ArrayList<java.lang.String>()); } for (java.util.List<java.lang.String> sequence : active) { sequence.add(representation); } methodCallSequence.put(localVarNumber, active); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2263/buggy-version/recommenders-jps-plugin.src.ru.spbau.jps.incremental.recommenders.RecommendersMethodVisitor.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.util.List<java.util.List<java.lang.String>>>.get(java.lang.Integer)", "java.util.Map<java.lang.Integer, java.util.List<java.util.List<java.lang.String>>>.put(java.lang.Integer,java.util.List<java.util.List<java.lang.String>>)", "java.util.Map<java.lang.Integer, java.lang.String>.get(java.lang.Integer)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "d602b1b71d559a52a68162b2fbe6e20f400604f6", "Url": "https://api.github.com/repos/pTalanov/IdeaCodeRecommenders", "Date": "2013-05-08T18:22:12Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(st.hasMoreTokens())) { throw new java.lang.IllegalArgumentException(\"Attempt to scan invalid header\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1815/buggy-version/src.com.meterware.httpunit.HttpUnitUtils.java", "BodyUseAPI": [], "Fixed commit": "ddad7f517645c1ccb97282743cb0607639db950c", "Url": "https://api.github.com/repos/emopers/httpunit", "Date": "2015-10-21T18:30:45Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Call.Type.REGISTRATION_S2N) != (call.getType())) { task.setLease(new common.task.TaskLease(conf.getLong(Configuration.LEASE_PERIOD_KEY))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8733/buggy-version/src.nameserver.task.TaskFactory.java", "BodyUseAPI": [], "Fixed commit": "56ccdbeb97a3690e1a3c9b51e550aee26cc2afca", "Url": "https://api.github.com/repos/dshnightmare/DistributedFileSystem", "Date": "2014-07-05T11:58:19Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((orders.size()) > 0) { showAbleBtnPage(true); }else { showDisableBtnPage(true, mRes.getString(R.string.check_order_fail2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/564/buggy-version/app.src.main.java.com.linuxclub.cdcfan.ui.CancelOrderActivity.java", "BodyUseAPI": [], "Fixed commit": "6db2706d1bf39de5decb2087d9bc115993d4c7ce", "Url": "https://api.github.com/repos/peacepassion/cdcfan2.0", "Date": "2015-05-27T00:40:33Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files[i].length()) < 1048576) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3146/buggy-version/src.dapp.InfoApp.java", "BodyUseAPI": [], "Fixed commit": "6f975d7a2b20e75a8e5371f640d9219111bbc083", "Url": "https://api.github.com/repos/jerrcs/dappinfo", "Date": "2011-07-19T01:28:52Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((width % 2) > 0) width += 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3146/buggy-version/src.dapp.GrabScreens.java", "BodyUseAPI": [], "Fixed commit": "6f975d7a2b20e75a8e5371f640d9219111bbc083", "Url": "https://api.github.com/repos/jerrcs/dappinfo", "Date": "2011-07-19T01:28:52Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filter.accept(semType1, semType2)) { accepted = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4802/buggy-version/src.main.java.org.knoesis.semmed.concept.ConceptMapper.java", "BodyUseAPI": [], "Fixed commit": "0cb402d2dde84b564f2a94b364c4c87fd85d59d6", "Url": "https://api.github.com/repos/shreyanshbhatt/semmed-concept-pair-generator", "Date": "2014-02-25T22:02:33Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (accepted) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4802/buggy-version/src.main.java.org.knoesis.semmed.concept.ConceptMapper.java", "BodyUseAPI": [], "Fixed commit": "0cb402d2dde84b564f2a94b364c4c87fd85d59d6", "Url": "https://api.github.com/repos/shreyanshbhatt/semmed-concept-pair-generator", "Date": "2014-02-25T22:02:33Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (params.equals(qualParamHierarchy.getBottom())) { return qualParamHierarchy.getBottom(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2177/buggy-version/framework.src.org.checkerframework.qualframework.poly.MethodParameterInference.java", "BodyUseAPI": ["org.checkerframework.qualframework.poly.QualifierParameterHierarchy<Q>.getBottom()"], "Fixed commit": "079bae4d5312354ab7c85801a7f451433b60e1f9", "Url": "https://api.github.com/repos/typetools/checker-framework", "Date": "2015-07-21T18:47:01Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (params.equals(getQualifierHierarchy().getBottom())) { return getQualifierHierarchy().getBottom(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2177/buggy-version/framework.src.org.checkerframework.qualframework.poly.QualifierParameterTypeFactory.java", "BodyUseAPI": [], "Fixed commit": "079bae4d5312354ab7c85801a7f451433b60e1f9", "Url": "https://api.github.com/repos/typetools/checker-framework", "Date": "2015-07-21T18:47:01Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f.isDirectory()) directories.add(f); else explore(f, vistor);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1098/buggy-version/Lab01App-build.Lab01App-code.src.main.java.ch.heigvd.res.lab01.impl.explorers.DFSFileExplorer.java", "BodyUseAPI": ["ch.heigvd.res.lab01.impl.explorers.DFSFileExplorer.explore(java.io.File,ch.heigvd.res.lab01.interfaces.IFileVisitor)", "java.util.ArrayList<java.io.File>.add(java.io.File)"], "Fixed commit": "ac3af3be3fbbd9911fd59a39a778520581bfe8e5", "Url": "https://api.github.com/repos/Fanfou02/Teaching-HEIGVD-RES-2017-Labo-01", "Date": "2017-03-11T21:07:55Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exist.repo.Deployment.findElement(org.exist.repo.DocumentImpl,org.exist.dom.QName)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (target != null) { final java.lang.String targetPath = target.getStringValue(); if ((targetPath.length()) > 0) { try { targetCollection = org.exist.xmldb.XmldbURI.create(getTargetCollection(targetPath)); } catch (final java.lang.Exception e) { throw new org.exist.repo.PackageException((\"Bad collection URI for <target> element: \" + (target.getStringValue())), e); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2051/buggy-version/src.org.exist.repo.Deployment.java", "BodyUseAPI": ["org.exist.repo.ElementImpl.getStringValue()", "org.exist.repo.ElementImpl.getStringValue()"], "Fixed commit": "658a0c000d96983175de63d7ae8d9f74c79ab5b7", "Url": "https://api.github.com/repos/eXist-db/exist", "Date": "2014-04-02T13:57:23Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count) > 255) { throw new org.apache.jackrabbit.mk.api.MicroKernelException(\"Error generating new revision id, counter overflowed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4307/buggy-version/src.main.java.ch.x42.terye.mk.hbase.RevisionIdGenerator.java", "BodyUseAPI": [], "Fixed commit": "e3672f00e120024f7882acc223dfdd615f2df6fe", "Url": "https://api.github.com/repos/dobrist/oak-mk-hbase", "Date": "2013-02-25T20:22:30Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((camPos.x) == (target.x)) && ((camPos.y) == (target.y))) && ((camPos.z) == (target.z))) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4143/buggy-version/src.graphics.GLOperations.java", "BodyUseAPI": [], "Fixed commit": "e6e827e8b959b065a44f76f612e4659a23286bfd", "Url": "https://api.github.com/repos/Jemeyr/Malka", "Date": "2013-07-21T23:18:12Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.lwjgl.input.Keyboard.isKeyDown(Keyboard.KEY_LEFT)) { graphics.compatibility.CompatibilityRenderMaster.timestep += 0.01F; }else if (org.lwjgl.input.Keyboard.isKeyDown(Keyboard.KEY_RIGHT)) { graphics.compatibility.CompatibilityRenderMaster.timestep -= 0.01F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4143/buggy-version/src.graphics.compatibility.CompatibilityRenderMaster.java", "BodyUseAPI": [], "Fixed commit": "e6e827e8b959b065a44f76f612e4659a23286bfd", "Url": "https://api.github.com/repos/Jemeyr/Malka", "Date": "2013-07-21T23:18:12Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAddressEditText.hasFocus()) && isUserInitiated) { clearEditTextFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/324/buggy-version/library.src.com.manuelpeinado.addressfragment.AddressView.java", "BodyUseAPI": [], "Fixed commit": "6743207d77ca30b91e4a0739f496e256d37a1fd0", "Url": "https://api.github.com/repos/ManuelPeinado/AddressFragment", "Date": "2013-04-28T19:02:28Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.lang.Double.isFinite(amountTravelled))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4082/buggy-version/src.main.java.io.darkcraft.darkcore.mod.datastore.SimpleCoordStore.java", "BodyUseAPI": [], "Fixed commit": "e56e22e15cc932fc607fbc3777fede079ff3061e", "Url": "https://api.github.com/repos/DarkholmeTenk/Darkcore", "Date": "2015-11-26T07:44:47Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (false) { java.lang.System.out.println(\"this is false\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3110/buggy-version/src.snippet.Snippet.java", "BodyUseAPI": [], "Fixed commit": "0cc59372ceb98f8a0a81c3d8daafe5693d75dfbe", "Url": "https://api.github.com/repos/liweidong1216/MyGitHubTest", "Date": "2016-07-08T12:32:43Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["calendarData.getLecturesEventIDs().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (eventIDs == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7040/buggy-version/app.src.main.java.de.hof.university.app.calendar.CalendarInterface.java", "BodyUseAPI": [], "Fixed commit": "4c748d0c2850977ed7123b89db3845e1c0783f74", "Url": "https://api.github.com/repos/HochschuleHofStundenplanapp/AndroidStundenplanHof", "Date": "2017-10-08T16:11:42Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getMySchedule(context).getLectures().size()) == 0) { this.updateCalendar(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7040/buggy-version/app.src.main.java.de.hof.university.app.data.DataManager.java", "BodyUseAPI": [], "Fixed commit": "4c748d0c2850977ed7123b89db3845e1c0783f74", "Url": "https://api.github.com/repos/HochschuleHofStundenplanapp/AndroidStundenplanHof", "Date": "2017-10-08T16:11:42Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getServer().getServicesManager().getRegistration(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rsp == null) { getServer().getLogger().warning((\"Vault installed BUT a chat provider is missing! Some of PerWorldChatPlus's functions may not work!\" + \" Sorry, this will be fixed in a future update!\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8585/buggy-version/src.main.java.com.cloudcraftgaming.perworldchatplus.Main.java", "BodyUseAPI": [], "Fixed commit": "6c763685fe1995cc021467883dcc5d26004e71a6", "Url": "https://api.github.com/repos/NovaFox161/PerWorldChatPlus", "Date": "2017-01-22T23:30:42Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (tempPlayer != null) { possiblePlayers.remove(tempPlayer); matchingPlayers.add(tempPlayer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5269/buggy-version/CodeGenerator.src.codeGenerator.RosterSQLGenerator.java", "BodyUseAPI": ["java.util.ArrayList<nba.Player>.remove(nba.Player)", "java.util.ArrayList<nba.Player>.add(nba.Player)"], "Fixed commit": "184990eb6a65e778a1e2bca60975870bbbfdea46", "Url": "https://api.github.com/repos/Respectable/PBPCompilerV2", "Date": "2013-07-13T05:59:09Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cxf.rs.security.jose.jwt.JwtToken.getClaims()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(iss.equals(claims.getIssuer()))) { throw new java.lang.SecurityException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3903/buggy-version/rt.rs.security.oauth-parent.oauth2.src.main.java.org.apache.cxf.rs.security.oauth2.grants.code.JwtRequestCodeFilter.java", "BodyUseAPI": [], "Fixed commit": "0f2e948cdc9f7391a87b6a26a76347c84282f6b6", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2016-02-17T16:17:27Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cxf.rs.security.jose.jwt.JwtClaims.getClaim(OAuthConstants.RESPONSE_TYPE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((tokenResponseType != null) && (!(tokenResponseType.equals(params.getFirst(OAuthConstants.RESPONSE_TYPE))))) { throw new java.lang.SecurityException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3903/buggy-version/rt.rs.security.oauth-parent.oauth2.src.main.java.org.apache.cxf.rs.security.oauth2.grants.code.JwtRequestCodeFilter.java", "BodyUseAPI": [], "Fixed commit": "0f2e948cdc9f7391a87b6a26a76347c84282f6b6", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2016-02-17T16:17:27Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) != (com.github.dbadia.sqrl.server.SqrlAuthenticationStatus.AUTH_COMPLETE)) { query.setParameter((\"authenticationStatus\" + counter), entry.getValue()); com.github.dbadia.sqrl.server.data.SqrlJpaPersistenceProvider.updateDebugBuf(debugBuf, (\":authenticationStatus\" + counter), entry.getValue().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7692/buggy-version/src.main.java.com.github.dbadia.sqrl.server.data.SqrlJpaPersistenceProvider.java", "BodyUseAPI": ["javax.persistence.TypedQuery<com.github.dbadia.sqrl.server.data.SqrlCorrelator>.setParameter(java.lang.String,entry.getValue())", "java.util.Map.Entry<java.lang.String, com.github.dbadia.sqrl.server.SqrlAuthenticationStatus>.getValue()", "entry.getValue().toString()", "java.util.Map.Entry<java.lang.String, com.github.dbadia.sqrl.server.SqrlAuthenticationStatus>.getValue()", "com.github.dbadia.sqrl.server.data.SqrlJpaPersistenceProvider.updateDebugBuf(java.lang.StringBuilder,java.lang.String,entry.getValue().toString())"], "Fixed commit": "4169fb88f0a1acec2c60b52f3032f6fa76a7c276", "Url": "https://api.github.com/repos/sqrlserverjava/sqrl-server-base", "Date": "2016-11-13T16:16:15Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6253/buggy-version/src.main.java.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "0dd1e2f922b0c283e1254f9d8be13db56cdd42d9", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tmpInside) { mPointerID = pSceneTouchEvent.getPointerID(); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8942/buggy-version/src.com.killoctal.andenginecontrols.detectors.PointerDetector.java", "BodyUseAPI": [], "Fixed commit": "f83ba8e94a57a0ceaa6c07d01ea7bdf428023a20", "Url": "https://api.github.com/repos/killoctal/AndEngineControls", "Date": "2013-05-22T22:56:36Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ACM.binarycalculator.ConvertToPostFix.getFinalAnswer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((check % 1) == 0) { check = convert.getFinalAnswer(); int wholeNumberAnswer = ((int) (check)); mComputeTextView.setText((\"\" + wholeNumberAnswer)); }else mComputeTextView.setText((\"\" + (convert.getFinalAnswer())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2889/buggy-version/src.com.ACM.binarycalculator.CalculatorDecimalFragment.java", "BodyUseAPI": [], "Fixed commit": "5981c237d15f293c5a782c529029ba11115335a7", "Url": "https://api.github.com/repos/SigMobile/BinaryCalculator", "Date": "2013-11-24T06:26:30Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["friendname.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (friendlist.contains(friend)) { android.widget.Toast.makeText(getApplicationContext(), \"The user is already your friend\", Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(getApplicationContext(), \"User added to your Friend List\", Toast.LENGTH_SHORT).show(); receivercloud.child(\"Friends\").child(friend).setValue(\"true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2342/buggy-version/app.src.main.java.com.example.lasyaboddapati.moneymatters.Addfriends.java", "BodyUseAPI": ["receivercloud.child(\"Friends\").child(friend).setValue(java.lang.String)", "receivercloud.child(\"Friends\").child(java.lang.String)"], "Fixed commit": "1f5133154089f8c171b8e8dbb83435c873c44fb6", "Url": "https://api.github.com/repos/kaustavghosh06/MoneyMatters-Android-App", "Date": "2015-03-07T03:43:58Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rand.nextInt(10)) == 0) { player.playSound(((net.hycrafthd.teambattle.TeambattleReference.resource) + \"teambattlehangglider\"), this.getSoundVolume(), this.getSoundPitch()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8321/buggy-version/src.main.java.net.hycrafthd.teambattle.entity.EntityHangGlider.java", "BodyUseAPI": [], "Fixed commit": "dd7be6a59ae0b9a8d32abb786cc36c91636ed0b4", "Url": "https://api.github.com/repos/HyCraftHD/TeambattleMod", "Date": "2016-03-16T14:32:18Z"},
{"Line": "=>968", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (osName.startsWith(\"Mac\")) { windowMaximised = false; }else { windowMaximised = this.preferences.getBoolean(\"windowMaximised\", propertyManager.isMaximizeWindow()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6148/buggy-version/src.main.java.Sirius.navigator.Navigator.java", "BodyUseAPI": [], "Fixed commit": "7db102042ba2071b53f74d361f2db2de2749988e", "Url": "https://api.github.com/repos/cismet/cids-navigator", "Date": "2012-08-24T15:33:07Z"},
{"Line": "=>877", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Sirius.navigator.Navigator.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((location.x) == 0) && ((location.y) == 0)) { this.setLocationRelativeTo(this.loginDialog); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6148/buggy-version/src.main.java.Sirius.navigator.Navigator.java", "BodyUseAPI": [], "Fixed commit": "7db102042ba2071b53f74d361f2db2de2749988e", "Url": "https://api.github.com/repos/cismet/cids-navigator", "Date": "2012-08-24T15:33:07Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ipeirotis.gal.scripts.Helper.getMaxLikelihoodLabel(java.util.Map<java.lang.String, java.lang.Double>,java.util.Map<java.lang.String, com.ipeirotis.gal.scripts.Category>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (to == null) { return java.lang.Double.NaN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2695/buggy-version/src.main.java.com.ipeirotis.gal.scripts.Helper.java", "BodyUseAPI": [], "Fixed commit": "4913ed86f48a9c5eb037bc98819173361ac1dcdb", "Url": "https://api.github.com/repos/ipeirotis/Get-Another-Label", "Date": "2012-10-01T19:38:23Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck.getLine(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(line.isEmpty())) { final int start = getLineStart(line); if (indentLevel.isGreaterThan(start)) { logChildError(lineNum, start, indentLevel); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5781/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler.getLineStart(java.lang.String)"], "Fixed commit": "822ba1740f6a2f0c75cf391c275569d79a21e5da", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2015-12-17T21:59:15Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(<nulltype>,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (originNodeName != null) { java.lang.String msg = newGraph.findNodebyName(originNodeName).bFS(); javax.swing.JOptionPane.showMessageDialog(null, msg); newGraph.resetGraph(); }else { javax.swing.JOptionPane.showMessageDialog(null, \"\u00c9 necess\u00e1rio inserir o nome de um n\u00f3\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7439/buggy-version/CreateG.java", "BodyUseAPI": ["newGraph.findNodebyName(originNodeName).bFS()", "Graph.findNodebyName(java.lang.String)"], "Fixed commit": "6d1d753c1319f1944b8e17b2797dcc517889953a", "Url": "https://api.github.com/repos/GDSRS/TrabalhoFinalEDA2", "Date": "2017-06-26T16:27:58Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.video.getImage()) != null) { this.backgrounds = net.iksela.xbmc.companion.helpers.UIHelper.getPieces(mSwipePagerAdapter.fragments.size(), this.video.getImage(), root.getHeight(), root.getWidth(), settings.getDarkness(), getResources()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/888/buggy-version/src.net.iksela.xbmc.companion.MainActivity.java", "BodyUseAPI": ["net.iksela.xbmc.companion.helpers.UIHelper.getPieces(mSwipePagerAdapter.fragments.size(),this.video.getImage(),root.getHeight(),root.getWidth(),settings.getDarkness(),getResources())", "net.iksela.xbmc.companion.data.Video.getImage()"], "Fixed commit": "03d07044ceba04c3ce9fa97a8f1c8798c9357370", "Url": "https://api.github.com/repos/iksela/XBMC-Companion", "Date": "2012-08-07T12:01:16Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.iksela.xbmc.companion.fragments.PlotFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((activity.backgrounds) != null) { ((android.widget.RelativeLayout) (view.findViewById(R.id.page2))).setBackgroundDrawable(activity.backgrounds[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/888/buggy-version/src.net.iksela.xbmc.companion.fragments.PlotFragment.java", "BodyUseAPI": ["((android.widget.RelativeLayout) (view.findViewById(R.id.page2))).setBackgroundDrawable(activity.backgrounds[1])"], "Fixed commit": "03d07044ceba04c3ce9fa97a8f1c8798c9357370", "Url": "https://api.github.com/repos/iksela/XBMC-Companion", "Date": "2012-08-07T12:01:16Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.iksela.xbmc.companion.fragments.CastFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((activity.backgrounds) != null) { ((android.widget.RelativeLayout) (view.findViewById(R.id.page3))).setBackgroundDrawable(activity.backgrounds[2]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/888/buggy-version/src.net.iksela.xbmc.companion.fragments.CastFragment.java", "BodyUseAPI": ["((android.widget.RelativeLayout) (view.findViewById(R.id.page3))).setBackgroundDrawable(activity.backgrounds[2])"], "Fixed commit": "03d07044ceba04c3ce9fa97a8f1c8798c9357370", "Url": "https://api.github.com/repos/iksela/XBMC-Companion", "Date": "2012-08-07T12:01:16Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.iksela.xbmc.companion.fragments.NowPlayingFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((activity.backgrounds) != null) { ((android.widget.RelativeLayout) (view.findViewById(R.id.page1))).setBackgroundDrawable(activity.backgrounds[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/888/buggy-version/src.net.iksela.xbmc.companion.fragments.NowPlayingFragment.java", "BodyUseAPI": ["((android.widget.RelativeLayout) (view.findViewById(R.id.page1))).setBackgroundDrawable(activity.backgrounds[0])"], "Fixed commit": "03d07044ceba04c3ce9fa97a8f1c8798c9357370", "Url": "https://api.github.com/repos/iksela/XBMC-Companion", "Date": "2012-08-07T12:01:16Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ox3dr.services.android.lib.drone.property.State.getVehicleMode()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mode == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6402/buggy-version/Android.src.org.droidplanner.android.notifications.PebbleNotificationProvider.java", "BodyUseAPI": [], "Fixed commit": "52f5c6192cca4d68e9a9be20a699d97b5253e6b9", "Url": "https://api.github.com/repos/ne0fhyk/droidplanner", "Date": "2014-11-10T04:06:26Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldName.equals(\"this$0\")) { return oldName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/185/buggy-version/compiler.backend.src.org.jetbrains.jet.codegen.inline.LambdaTransformer.java", "BodyUseAPI": [], "Fixed commit": "c73f83548694c1b4613d4a0a84fbd31bb7d53581", "Url": "https://api.github.com/repos/voddan/kotlin", "Date": "2014-03-09T07:19:15Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["movie.repository.RelTagsRepository.findByCodTagAndCodMovie(r.getCodTag(),r.getCodMovie())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((lr != null) && ((lr.size()) > 0)) { relTags.remove(i); i--; }else { relTags.set(i, r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6442/buggy-version/folder-access-rest.src.main.java.movie.service.MovieService.java", "BodyUseAPI": [], "Fixed commit": "586f6d5cb7916f47361c1a679691254a59b3b610", "Url": "https://api.github.com/repos/grotes/folder-access-rest", "Date": "2017-09-15T16:38:28Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.polyforms.parameter.Parameter.getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.springframework.util.StringUtils.hasText(name)) { namedParameters.put(name, sourceParameter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6679/buggy-version/util.src.main.java.org.polyforms.parameter.support.SourceParameters.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.polyforms.parameter.Parameter>.put(java.lang.String,org.polyforms.parameter.Parameter)"], "Fixed commit": "374a4da9f5b1c1a4cb41e6b95681dd1c1ef8a6b2", "Url": "https://api.github.com/repos/Polyforms/Polyforms", "Date": "2011-11-17T09:10:38Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (dataObj != null) { launchConfigItems.put(key, dataObj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/655/buggy-version/code.iaas.service-discovery.server.src.main.java.io.cattle.platform.servicediscovery.service.impl.ServiceDiscoveryServiceImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)"], "Fixed commit": "9b34f31ce50bb3ddec62d9e046099be2a8420cb1", "Url": "https://api.github.com/repos/sonchang/cattle", "Date": "2015-06-02T06:29:14Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["groups.getSelectionModel().getSelectedItem().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (groupToDelete.equals(Group.FRIENDS_GROUP_NAME)) { IHM.utils.Dialogs.showInformationDialog(\"Suppression impossible, le groupe Amis ne peut pas \u00eatre supprim\u00e9.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1415/buggy-version/controllers.GroupsController.java", "BodyUseAPI": [], "Fixed commit": "9d407e16491392deeaf15a2016353d7306bfcbb9", "Url": "https://api.github.com/repos/adoulrac/IHM", "Date": "2015-01-12T13:49:31Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((zk.exists((experimentPath + (AiravataZKUtils.DELIVERY_TAG_POSTFIX)), false)) != null) { org.apache.zookeeper.ZKUtil.deleteRecursive(zk, (experimentPath + (AiravataZKUtils.DELIVERY_TAG_POSTFIX))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9199/buggy-version/airavata-api.airavata-api-server.src.main.java.org.apache.airavata.api.server.listener.AiravataExperimentStatusUpdator.java", "BodyUseAPI": ["org.apache.zookeeper.ZKUtil.deleteRecursive(org.apache.zookeeper.ZooKeeper,(experimentPath + (AiravataZKUtils.DELIVERY_TAG_POSTFIX)))"], "Fixed commit": "e8b31a325c91daa9104b1f70268e44fbcf2fd11a", "Url": "https://api.github.com/repos/apache/airavata", "Date": "2015-04-25T15:19:15Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((zk.exists(experimentPath, false)) != null) { org.apache.zookeeper.ZKUtil.deleteRecursive(zk, experimentPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9199/buggy-version/airavata-api.airavata-api-server.src.main.java.org.apache.airavata.api.server.listener.AiravataExperimentStatusUpdator.java", "BodyUseAPI": ["org.apache.zookeeper.ZKUtil.deleteRecursive(org.apache.zookeeper.ZooKeeper,java.lang.String)"], "Fixed commit": "e8b31a325c91daa9104b1f70268e44fbcf2fd11a", "Url": "https://api.github.com/repos/apache/airavata", "Date": "2015-04-25T15:19:15Z"},
{"Line": "=>1224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.airavata.gfac.core.utils.ZooKeeper.exists(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (exists != null) { zk.create((newExpNode + (org.apache.airavata.common.utils.AiravataZKUtils.DELIVERY_TAG_POSTFIX)), zk.getData(oldDeliveryTag, null, exists), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT); org.apache.airavata.gfac.core.utils.ZKUtil.deleteRecursive(zk, oldDeliveryTag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9199/buggy-version/modules.gfac.gfac-core.src.main.java.org.apache.airavata.gfac.core.utils.GFacUtils.java", "BodyUseAPI": ["org.apache.airavata.gfac.core.utils.ZooKeeper.create((newExpNode + (org.apache.airavata.common.utils.AiravataZKUtils.DELIVERY_TAG_POSTFIX)),zk.getData(oldDeliveryTag, null, exists),ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)", "org.apache.airavata.gfac.core.utils.ZooKeeper.getData(java.lang.String,<nulltype>,org.apache.zookeeper.data.Stat)"], "Fixed commit": "e8b31a325c91daa9104b1f70268e44fbcf2fd11a", "Url": "https://api.github.com/repos/apache/airavata", "Date": "2015-04-25T15:19:15Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.AbstractBuild.getWorkspace()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (workspace == null) { throw new java.io.IOException((\"Workspace is not accessible in \" + build)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3531/buggy-version/src.main.java.hudson.tasks.junit.JUnitResultArchiver.java", "BodyUseAPI": [], "Fixed commit": "c60ad47311b7f257f8408082375e3c383ab76178", "Url": "https://api.github.com/repos/jenkinsci/junit-plugin", "Date": "2015-07-16T15:37:28Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jenkins == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3531/buggy-version/src.main.java.hudson.tasks.junit.History.java", "BodyUseAPI": [], "Fixed commit": "c60ad47311b7f257f8408082375e3c383ab76178", "Url": "https://api.github.com/repos/jenkinsci/junit-plugin", "Date": "2015-07-16T15:37:28Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((field.getToken()) != null) { if (field.getToken().isBlack()) { java.lang.System.out.println(\"schwarz\"); }else { java.lang.System.out.println(\"wei\ufffd\"); } }else { java.lang.System.out.println(\"null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7235/buggy-version/Dame.src.frontend.Board.java", "BodyUseAPI": ["frontend.Field.getToken()", "field.getToken().isBlack()"], "Fixed commit": "d1b352566bfa2ae00ccfd81aa16a2990e4300c3f", "Url": "https://api.github.com/repos/Brujah4/Spielesammlung", "Date": "2017-09-17T21:33:57Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(requestedResources.isEmpty())) { recreateContainerRequest(requestedResources, loopCounter, resourceRequestor, removedContainerRequests); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5912/buggy-version/engine.src.main.java.com.datatorrent.stram.BlacklistBasedResourceRequestHandler.java", "BodyUseAPI": ["com.datatorrent.stram.BlacklistBasedResourceRequestHandler.recreateContainerRequest(java.util.Map<com.datatorrent.stram.StreamingContainerAgent.ContainerStartRequest, org.apache.commons.lang3.tuple.MutablePair<java.lang.Integer, org.apache.hadoop.yarn.client.api.AMRMClient.ContainerRequest>>,int,com.datatorrent.stram.ResourceRequestHandler,java.util.List<org.apache.hadoop.yarn.client.api.AMRMClient.ContainerRequest>)"], "Fixed commit": "8eff0b48cac54fecc056bc4ba16207ed757d9777", "Url": "https://api.github.com/repos/sandeshh/apex-core", "Date": "2016-12-25T07:25:31Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (byte3 == 0) { midiEventListener.onMidiNoteOff(sender, cable, (byte1 & 15), byte2, byte3); }else { midiEventListener.onMidiNoteOn(sender, cable, (byte1 & 15), byte2, byte3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7959/buggy-version/MIDIDriver.src.jp.kshoji.driver.midi.handler.MidiMessageCallback.java", "BodyUseAPI": ["jp.kshoji.driver.midi.listener.OnMidiInputEventListener.onMidiNoteOff(jp.kshoji.driver.midi.device.MidiInputDevice,int,int,int,int)", "jp.kshoji.driver.midi.listener.OnMidiInputEventListener.onMidiNoteOn(jp.kshoji.driver.midi.device.MidiInputDevice,int,int,int,int)"], "Fixed commit": "4ee9495ed6c0e6e7fd629d58710437597edc5d19", "Url": "https://api.github.com/repos/kshoji/USB-MIDI-Driver", "Date": "2013-05-25T01:24:08Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((property.getCategory()) == (org.csstudio.display.builder.model.WidgetPropertyCategory.RUNTIME)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2115/buggy-version/org.csstudio.display.builder.editor.src.org.csstudio.display.builder.editor.properties.PropertyPanel.java", "BodyUseAPI": [], "Fixed commit": "74d681930b81440a60d70a0d8825230b62400697", "Url": "https://api.github.com/repos/kasemir/org.csstudio.display.builder", "Date": "2015-09-09T18:46:44Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((meeting.getCreator().getUsername()) != (calendarModel.getUser().getUsername())) { delete.setEnabled(false); change.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1452/buggy-version/KalenderProsjekt.src.framePackage.AppointmentOverView.java", "BodyUseAPI": [], "Fixed commit": "84be71881e79cec94cf578809302e7fbdb74af43", "Url": "https://api.github.com/repos/Daveiac/FProj_Gruppe48", "Date": "2013-03-20T16:40:36Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(parentName.equals(\"RelativeLayout\"))) { throw new com.excelsecu.androidx2j.AX2JException(AX2JException.METHOD_NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1732/buggy-version/src.com.excelsecu.androidx2j.LayoutTranslator.java", "BodyUseAPI": [], "Fixed commit": "a8e6bed89785c566a8239682e961fbdae8cd1b74", "Url": "https://api.github.com/repos/sickworm/AndroidXMLToJava", "Date": "2015-02-04T08:17:43Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState == null) { webView.loadUrl(\"file:///android_asset/en/Main_page.html\"); }else { webView.restoreState(savedInstanceState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2780/buggy-version/src.com.gsc.archwikimanual.MainActivity.java", "BodyUseAPI": ["android.webkit.WebView.restoreState(android.os.Bundle)"], "Fixed commit": "3c0ab909993dce0620cefa1c27b555f8c115b751", "Url": "https://api.github.com/repos/xgdgsc/archwikimanual", "Date": "2015-04-11T02:39:21Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(clazz.isEmpty())) { list.add(new se.toxbee.fimpl.common.ImplementationInformation.Impl(clazz, prio, type, extras)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2932/buggy-version/fimpl-metainf.src.main.java.se.toxbee.fimpl.metainf.MetainfTransformer.java", "BodyUseAPI": ["java.util.List<se.toxbee.fimpl.common.ImplementationInformation>.add(se.toxbee.fimpl.common.ImplementationInformation.Impl)"], "Fixed commit": "f9c37b4004aca889bace735666e6b2697f3fa14d", "Url": "https://api.github.com/repos/toxbee/fimpl", "Date": "2014-02-11T22:54:05Z"},
{"Line": "=>1651", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.grails.datastore.mapping.engine.NativeEntryEntityPersister<T, K>.getPropertyKey(org.grails.datastore.mapping.model.PersistentProperty)", "org.grails.datastore.mapping.engine.EntityAccess.getProperty(prop.getName())", "org.grails.datastore.mapping.model.PersistentProperty.getCustomTypeMarshaller()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(areEqual(marshaller.read(prop, entry), currentValue, key))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/411/buggy-version/grails-datastore-core.src.main.groovy.org.grails.datastore.mapping.engine.NativeEntryEntityPersister.java", "BodyUseAPI": [], "Fixed commit": "95f392fba946b0eb38813427b8fa7a9afa388b7d", "Url": "https://api.github.com/repos/mhurne/grails-data-mapping", "Date": "2013-03-06T03:35:42Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((at.android.gm.guessthemovie.DataHandler.getInstance().getLives()) > 0) { loadNext(false, false); }else { loadNext(false, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8035/buggy-version/app.src.main.java.at.android.gm.guessthemovie.GuessActivity.java", "BodyUseAPI": [], "Fixed commit": "624c7141cf1f3f7cbbfcd1d71bf299ece94ece7b", "Url": "https://api.github.com/repos/winterwurzel/gtm", "Date": "2015-11-29T17:43:46Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (num.startsWith(\"-\")) { num = num.replace(\"-\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2702/buggy-version/utils.src.main.java.com.studio.elephant.utils.StringUtil.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "d5abdad51a9463724bc42fbc92ed5b1fe0049b06", "Url": "https://api.github.com/repos/file1987/utils", "Date": "2015-07-02T01:55:03Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.util.UUID, nmt.minecraft.Regicide.Game.Player.RPlayer>.get(event.getPlayer().getUniqueId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (player == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8248/buggy-version/src.nmt.minecraft.Regicide.Game.RegicideGame.java", "BodyUseAPI": [], "Fixed commit": "5915d8ff867648c31f0ae78079a7cfcf61b820e2", "Url": "https://api.github.com/repos/NMTMinecraftClub/Regicide", "Date": "2015-03-08T02:44:28Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((villager) != null) { villager.teleport(player.getLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8248/buggy-version/src.nmt.minecraft.Regicide.Game.Player.RPlayer.java", "BodyUseAPI": [], "Fixed commit": "5915d8ff867648c31f0ae78079a7cfcf61b820e2", "Url": "https://api.github.com/repos/NMTMinecraftClub/Regicide", "Date": "2015-03-08T02:44:28Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flagFirstMusic) == true) { mixplayer.setOnCompletionListener(new android.media.MediaPlayer.OnCompletionListener() { public void onCompletion(android.media.MediaPlayer mp) { flagFirstMusic = true; mp.release(); mixplayer = android.media.MediaPlayer.create(com.gepardy.bahjivotnoto.SoundActivity.this, R.drawable.full_sound_mix); flagMusic = true; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5722/buggy-version/BasiGolemiteRukiAPP.BahJivotno_Leaderboard.app.src.main.java.com.gepardy.bahjivotnoto.SoundActivity.java", "BodyUseAPI": [], "Fixed commit": "66007fa9ee11d8f5c9ab4d2582a35ea3bae2cabb", "Url": "https://api.github.com/repos/Nikolas1814/APP", "Date": "2015-02-13T20:31:43Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.geeksong.agricolascorer.GameCache.getInstance().isFarmersOfTheMoor())) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8206/buggy-version/src.com.geeksong.agricolascorer.ScoreManager.java", "BodyUseAPI": [], "Fixed commit": "c029cc7fddc1b49cfbc7e260bf6d1ca960baa7c7", "Url": "https://api.github.com/repos/rythos42/AgricolaScorer", "Date": "2013-05-25T23:15:21Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bahmniEncounterTransaction.getEncounterDateTime()) == null) { bahmniEncounterTransaction.setEncounterDateTime(new java.util.Date()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5299/buggy-version/bahmni-emr-api.src.main.java.org.openmrs.module.bahmniemrapi.encountertransaction.impl.BahmniEncounterTransactionServiceImpl.java", "BodyUseAPI": ["org.openmrs.module.bahmniemrapi.encountertransaction.contract.BahmniEncounterTransaction.setEncounterDateTime(java.util.Date)"], "Fixed commit": "050ab4b06fa23d9e484dfc63e31b64f14553bf9f", "Url": "https://api.github.com/repos/Bahmni/bahmni-core", "Date": "2015-07-02T12:04:46Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (simulationEndTime.isInfinite()) throw new java.lang.RuntimeException(\"Please set the simulation end time to a real value. Aborting...\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6496/buggy-version/playgrounds.vsp.src.main.java.playground.vsp.airPollution.exposure.IntervalHandler.java", "BodyUseAPI": [], "Fixed commit": "a2b187220bd254ba3802fac02f8f854c9e83fbb0", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2017-05-04T11:45:24Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.eyeseetea.malariacare.data.database.utils.Session.sUserDB) == null) { org.eyeseetea.malariacare.data.database.utils.Session.sUserDB = org.eyeseetea.malariacare.data.database.model.UserDB.getLoggedUser(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4021/buggy-version/app.src.main.java.org.eyeseetea.malariacare.data.database.utils.Session.java", "BodyUseAPI": [], "Fixed commit": "fa6da3607e371e4058239615a7e064bc8fa664c5", "Url": "https://api.github.com/repos/EyeSeeTea/pictureapp", "Date": "2017-10-23T12:34:27Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["amberdb.model.Work.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (parent != null) { parent.removePart(work); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/135/buggy-version/src.amberdb.AmberSession.java", "BodyUseAPI": ["amberdb.model.Work.removePart(amberdb.model.Work)"], "Fixed commit": "1186be6918f26d5460e74dc53f96881d43500cf2", "Url": "https://api.github.com/repos/nla/amberdb", "Date": "2014-11-18T01:10:39Z"},
{"Line": "=>4677", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (max != 0) { if ((index < 1) || (index > max)) { RunTimeError(((\"Index (\" + index) + \") out of range\")); return 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7515/buggy-version/src.com.rfo.basic.Run.java", "BodyUseAPI": [], "Fixed commit": "f83d194ba7b6272a301368dc2acf88c48dd8c029", "Url": "https://api.github.com/repos/mnjrupp/Basic", "Date": "2014-08-23T02:25:52Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ch) == (quote)) { output.appender.append(quote); prev = '\\u0000'; }else { output.appender.append(prev); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6459/buggy-version/src.main.java.com.univocity.parsers.csv.CsvParser.java", "BodyUseAPI": [], "Fixed commit": "b69eec0c7a946117510d558e2d73e57d0016f24e", "Url": "https://api.github.com/repos/uniVocity/univocity-parsers", "Date": "2015-03-25T19:12:09Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ModuleType.getText().toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ModuleTypeText.equals(\"subsystem\")) { xmlModule = new husacct.define.domain.module.SubSystem(moduleName, moduleDescription); }else { xmlModule = new java.lang.Module(moduleName, moduleDescription); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/532/buggy-version/src.husacct.define.persistency.XMLDomain.java", "BodyUseAPI": [], "Fixed commit": "52aa62af912b97250f6dc3a75dd40065b51e4fb9", "Url": "https://api.github.com/repos/pkmelee337/HUSACCT", "Date": "2012-05-30T20:46:08Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((settings.getViews()) == null) || ((settings.getViews().size()) == 0)) { settings.setViews(java.util.Arrays.asList(ContainerView.METADATA.name(), ContainerView.STRUCTURE.name())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/729/buggy-version/admin.src.main.java.edu.unc.lib.dl.admin.controller.EditCollectionSettingsController.java", "BodyUseAPI": ["edu.unc.lib.dl.model.ContainerSettings.setViews(java.util.List)"], "Fixed commit": "4b86f14a61f8555baf573a5c5f8822c981bcb7a1", "Url": "https://api.github.com/repos/UNC-Libraries/Carolina-Digital-Repository", "Date": "2015-10-05T19:28:06Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((settings.getDefaultView()) == null) { settings.setDefaultView(ContainerView.METADATA.name()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/729/buggy-version/admin.src.main.java.edu.unc.lib.dl.admin.controller.EditCollectionSettingsController.java", "BodyUseAPI": ["edu.unc.lib.dl.model.ContainerSettings.setDefaultView(ContainerView.METADATA.name())"], "Fixed commit": "4b86f14a61f8555baf573a5c5f8822c981bcb7a1", "Url": "https://api.github.com/repos/UNC-Libraries/Carolina-Digital-Repository", "Date": "2015-10-05T19:28:06Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((marker) != null) { marker.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4080/buggy-version/android.Router.app.src.main.java.edu.csumb.cst438.router.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ebcd9eb4c437eddb53caf2b2ad34a2d34a7a8a03", "Url": "https://api.github.com/repos/pierater/Router-Android", "Date": "2016-12-01T01:41:28Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x == 0) && (y == 0)) return net.ddns.zivlak.mehatron.robotichand.Joypad.DIRECTION_CENTER;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3786/buggy-version/src.net.ddns.zivlak.mehatron.robotichand.Joypad.java", "BodyUseAPI": [], "Fixed commit": "60ad50f30bbd569f49a7428d55e3e1c8feb73d84", "Url": "https://api.github.com/repos/Mehatron/AndroidClient", "Date": "2017-02-20T21:36:48Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sKey.matches(\"%\")) && (expresssionToSelection().matches(\".*%$\"))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1851/buggy-version/src.com.llamacorp.unitcalc.Expression.java", "BodyUseAPI": [], "Fixed commit": "6c211ad3dc281f31948aded1c50e9be2bd314f98", "Url": "https://api.github.com/repos/EvanRespaut/UnitCalc", "Date": "2014-05-23T02:47:01Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldRemove) { this.evictionListener.onEviction(eldest.getKey(), eldest.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1943/buggy-version/imcache.src.main.java.com.cetsoft.imcache.cache.heap.HeapCache.java", "BodyUseAPI": [], "Fixed commit": "f26601f919e0b97dc04152b746d0f9b3583d2c0b", "Url": "https://api.github.com/repos/Cetsoft/imcache", "Date": "2014-05-21T09:23:10Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(respData.has(com.owncloud.android.lib.resources.users.GetRemoteUserInfoOperation.NODE_ID))) { userInfo.setId(respData.getString(com.owncloud.android.lib.resources.users.GetRemoteUserInfoOperation.NODE_ID)); }else { userInfo.setId(credentials.getUsername()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7124/buggy-version/src.com.owncloud.android.lib.resources.users.GetRemoteUserInfoOperation.java", "BodyUseAPI": ["com.owncloud.android.lib.common.UserInfo.setId(respData.getString(com.owncloud.android.lib.resources.users.GetRemoteUserInfoOperation.NODE_ID))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "5827062a33a5e8c2628d487fdb6fd94e59efea6b", "Url": "https://api.github.com/repos/nextcloud/android-library", "Date": "2017-01-25T11:03:38Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ID == 3) { int i = 0; int j = (party.getCharacters().length) - 1; boolean a = false; while ((!a) || (i < j)) { int charNum = ((int) ((java.lang.Math.random()) * j)); if ((party.getCharacterStatus(charNum)) == (Status.SICK)) { party.getCharacter(charNum).setStatus(Status.NORMAL); a = true; }else { j--; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5525/buggy-version/src.models.Event.java", "BodyUseAPI": [], "Fixed commit": "1c6b9987966ad5fcdbe7fac70faba5967c09a56e", "Url": "https://api.github.com/repos/tomelm/oregon_trail", "Date": "2011-11-17T02:33:53Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((messageRequestDTO.getText()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7933/buggy-version/src.main.java.com.radionov.jrbot.service.MessageServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "1af66372296d31c83988c0f9cb74d3f8cd497cb4", "Url": "https://api.github.com/repos/AndyRadionov/jrbot", "Date": "2017-11-01T18:56:53Z"},
{"Line": "=>776", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rect.isEmpty())) { bbox.add(rect); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5039/buggy-version/src.main.java.jkanvas.groups.RenderGroup.java", "BodyUseAPI": ["java.awt.geom.Rectangle2D.add(java.awt.geom.Rectangle2D)"], "Fixed commit": "29a49e3f4e013581f92c974076bb9dca2845f690", "Url": "https://api.github.com/repos/JosuaKrause/Kanvas", "Date": "2013-12-08T04:28:39Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(bbox.isEmpty())) { rect.add(bbox); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5039/buggy-version/src.main.java.jkanvas.painter.RenderpassPainter.java", "BodyUseAPI": ["java.awt.geom.Rectangle2D.add(java.awt.geom.Rectangle2D)"], "Fixed commit": "29a49e3f4e013581f92c974076bb9dca2845f690", "Url": "https://api.github.com/repos/JosuaKrause/Kanvas", "Date": "2013-12-08T04:28:39Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processes) == null) { this.processes = processes; }else { this.processes.clear(); this.processes.addAll(processes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5968/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Batch.java", "BodyUseAPI": [], "Fixed commit": "7295ae967f8c619ab04929d86126ec42c1ecd2d8", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batches) == null) { this.batches = batches; }else { this.batches.clear(); this.batches.addAll(batches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5968/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Process.java", "BodyUseAPI": [], "Fixed commit": "7295ae967f8c619ab04929d86126ec42c1ecd2d8", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.isoftstone.smartsite.http.ReportBean.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (status > 1) { status--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1275/buggy-version/app.src.main.java.com.isoftstone.smartsite.model.tripartite.adapter.ReplyReportAdapter.java", "BodyUseAPI": [], "Fixed commit": "745891735b6668c065e771f78cdb461626e4d366", "Url": "https://api.github.com/repos/YanYoJun/SmartSite", "Date": "2017-11-05T14:39:22Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.bootsfaces.expressions.ExpressionResolverUtilities.determineQualifiedId(javax.faces.component.UIComponent)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((parentId.length()) == 0) childId = currentId; else if (parentId.endsWith(\":\")) childId = parentId + currentId; else childId = (parentId + \":\") + currentId;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5070/buggy-version/src.main.java.net.bootsfaces.expressions.IDExpressionResolver.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "da4e750d15e592458648e9c86e05aa2d5de53bfa", "Url": "https://api.github.com/repos/TheCoder4eu/BootsFaces-OSP", "Date": "2015-08-10T18:45:48Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.faces.component.UIComponent.findComponent(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == c) { c = component.findComponent((\":\" + childId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5070/buggy-version/src.main.java.net.bootsfaces.expressions.IDExpressionResolver.java", "BodyUseAPI": [], "Fixed commit": "da4e750d15e592458648e9c86e05aa2d5de53bfa", "Url": "https://api.github.com/repos/TheCoder4eu/BootsFaces-OSP", "Date": "2015-08-10T18:45:48Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tanguyantoine.react.MusicControlModule.1.loadArtwork(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((bitmap != null) && ((md) != null)) { md.putBitmap(MediaMetadataCompat.METADATA_KEY_ART, bitmap); nb.setLargeIcon(bitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9219/buggy-version/android.src.main.java.com.tanguyantoine.react.MusicControlModule.java", "BodyUseAPI": ["MediaMetadataCompat.Builder.putBitmap(MediaMetadataCompat.METADATA_KEY_ART,android.graphics.Bitmap)", "NotificationCompat.Builder.setLargeIcon(android.graphics.Bitmap)"], "Fixed commit": "3cf1823f52735cbe09d4536be6032665e2400121", "Url": "https://api.github.com/repos/dnish/react-native-music-control", "Date": "2017-07-07T15:39:05Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pb) != null) { notification.updateActions(controls); pb.setActions(controls); state = pb.build(); session.setPlaybackState(state); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9219/buggy-version/android.src.main.java.com.tanguyantoine.react.MusicControlModule.java", "BodyUseAPI": [], "Fixed commit": "3cf1823f52735cbe09d4536be6032665e2400121", "Url": "https://api.github.com/repos/dnish/react-native-music-control", "Date": "2017-07-07T15:39:05Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(errorInMasterData)) errorInMasterData = scheduleOfRateService.validateRates(uploadSORRatesList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6237/buggy-version/egov.egov-worksweb.src.main.java.org.egov.works.web.controller.uploadsor.UploadExistingSORController.java", "BodyUseAPI": [], "Fixed commit": "afd7bd688eb342bb105b0c98604528c89c75878b", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-08-25T11:47:20Z"},
{"Line": "=>613", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRecipients.size()) == 0) { throw new java.lang.IllegalArgumentException(\"Recipients is not specified\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/387/buggy-version/android.src.main.java.com.magnet.mmx.client.api.MMXMessage.java", "BodyUseAPI": [], "Fixed commit": "4d72881cb05e6364e04f4cf13df3fff23cd27f6a", "Url": "https://api.github.com/repos/magnetsystems/message-sdk-java-android", "Date": "2015-12-10T01:05:08Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spinner) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4532/buggy-version/app.src.main.java.org.sickstache.app.LoadingListFragment.java", "BodyUseAPI": [], "Fixed commit": "663b37929c9303a489eb029740ad12f837f25733", "Url": "https://api.github.com/repos/hardwarefault/sick-stache", "Date": "2013-02-28T21:03:35Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotEmpty(phoneNumber)) { net.gmsworld.devicelocator.Utilities.Messenger.sendSMS(this, phoneNumber, message); }else if (org.apache.commons.lang3.StringUtils.isNotEmpty(telegramId)) { net.gmsworld.devicelocator.Utilities.Messenger.sendTelegram(this, telegramId, message, 1); }else { android.util.Log.e(net.gmsworld.devicelocator.Services.SmsSenderService.TAG, message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2770/buggy-version/app.src.main.java.net.gmsworld.devicelocator.Services.SmsSenderService.java", "BodyUseAPI": ["net.gmsworld.devicelocator.Utilities.Messenger.sendSMS(net.gmsworld.devicelocator.Services.SmsSenderService,java.lang.String,java.lang.String)"], "Fixed commit": "dcbfe379814ab8f4e84f9a10ef8b8d19beef32ed", "Url": "https://api.github.com/repos/jstakun/device-locator", "Date": "2017-09-23T10:19:33Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) > 0) msg = args[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8947/buggy-version/src.client.Client.java", "BodyUseAPI": [], "Fixed commit": "8f6d81196ab6e17e6f16e4ea608a147b7d9eff0f", "Url": "https://api.github.com/repos/patrickopowell/P2P-CI", "Date": "2017-02-23T02:12:41Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sneaky.bigb.main.Util.world) == null) { sneaky.bigb.main.Util.world = net.minecraft.world.WorldProvider.getProviderForDimension(0).worldObj; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1879/buggy-version/src.main.java.sneaky.bigb.worldgen.GenUtil.java", "BodyUseAPI": [], "Fixed commit": "e5105284f4899500cf700df6bf101cc97c4d13ce", "Url": "https://api.github.com/repos/SneakyTactician/BIGB", "Date": "2016-07-12T03:50:11Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sender instanceof org.bukkit.entity.Player)) { sender.sendMessage(util.ColorParser.parseColors(getSetting(\"players_only_msg\", \"<xml><font color=\\\"Red\\\">This feature is only available to players.</font></xml>\"))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8674/buggy-version/src.plugin.Stalemate.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(util.ColorParser.parseColors(getSetting(\"players_only_msg\", \"<xml><font color=\\\"Red\\\">This feature is only available to players.</font></xml>\")))"], "Fixed commit": "ddb8a93d9b9fed9bdbaaa78b922bb810db525948", "Url": "https://api.github.com/repos/terraflops/Stalemate", "Date": "2013-08-01T15:32:32Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defense.Team.getTeam(args[1])) != null) { sender.sendMessage(util.ColorParser.parseColors(getSetting(\"team_fail_msg\", \"<xml>Failed to create team.</xml>\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8674/buggy-version/src.plugin.Stalemate.java", "BodyUseAPI": [], "Fixed commit": "ddb8a93d9b9fed9bdbaaa78b922bb810db525948", "Url": "https://api.github.com/repos/terraflops/Stalemate", "Date": "2013-08-01T15:32:32Z"},
{"Line": "=>723", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jdkLevel == (org.eclipse.jdt.internal.compiler.classfmt.ClassFileConstants.JDK1_9)) return org.eclipse.jdt.internal.compiler.impl.CompilerOptions.VERSION_1_9;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4122/buggy-version/org.eclipse.jdt.core.compiler.org.eclipse.jdt.internal.compiler.impl.CompilerOptions.java", "BodyUseAPI": [], "Fixed commit": "d1246b4aff159c8bec10d39c7616aa371724fb25", "Url": "https://api.github.com/repos/eclipse/eclipse.jdt.core", "Date": "2015-01-23T11:14:42Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (extension.trim().equals(\"\")) { extension = \".png\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6277/buggy-version/src.main.java.org.openpnp.vision.pipeline.stages.ReadTemplateImage.java", "BodyUseAPI": [], "Fixed commit": "4af187fba9244ee373b57feb4d00358b70b228b0", "Url": "https://api.github.com/repos/dzach/openpnp", "Date": "2017-06-08T12:07:24Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (parsedDate != null) { if ((((parsedDate[1]) != null) && ((parsedDate[2]) != null)) && ((dateFrom == null) || (dateTo == null))) { displayErrorMessage(input, parsedDate, deleteAll, isTask); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9245/buggy-version/src.main.java.seedu.todo.controllers.ClearController.java", "BodyUseAPI": ["seedu.todo.controllers.ClearController.displayErrorMessage(java.lang.String,java.lang.String[],boolean,boolean)"], "Fixed commit": "b3fbe0cb18b724f7b2df5d5b613a8731213ee28d", "Url": "https://api.github.com/repos/CS2103AUG2016-F11-C1/main", "Date": "2016-10-20T19:49:59Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.util.concurrent.TimeUnit.MILLISECONDS.toMinutes(cracking_time)) < 60) { time = (java.lang.Long.toString(java.util.concurrent.TimeUnit.MILLISECONDS.toMinutes(cracking_time))) + \" M\"; }else if ((java.util.concurrent.TimeUnit.MILLISECONDS.toHours(cracking_time)) < 24) { time = (java.lang.Long.toString(java.util.concurrent.TimeUnit.MILLISECONDS.toHours(cracking_time))) + \" H\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3566/buggy-version/core.src.servlet.WorkerWebUIServlet.java", "BodyUseAPI": ["java.lang.Long.toString(long)", "java.util.concurrent.TimeUnit.toMinutes(long)", "java.util.concurrent.TimeUnit.toHours(long)", "java.lang.Long.toString(long)", "java.util.concurrent.TimeUnit.toHours(long)"], "Fixed commit": "44164f952f1d0988e3da652cf221003002ab2cfa", "Url": "https://api.github.com/repos/arcaneiceman/Kraken", "Date": "2016-09-02T23:07:03Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tooth == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6440/buggy-version/src.main.java.me.ondoc.OnDocApiApp.java", "BodyUseAPI": [], "Fixed commit": "6c3d9b2399e22055fdd5163a9b0293cad01ee11e", "Url": "https://api.github.com/repos/OnDoc/clinic-client", "Date": "2015-05-26T16:39:07Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (curDupNum >= 2) { nums[(curAvailableIdx - 1)] = nums[(numsLength - 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7674/buggy-version/src.RemoveDuplicatesFromSortedArrayII.java", "BodyUseAPI": [], "Fixed commit": "e2bddf71ecdab155c200465f285a3cd3ca0aee8c", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-06-04T05:16:38Z"},
{"Line": "=>1810", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((tempList != null) && (!(tempList.isEmpty()))) { edu.common.dynamicextensions.domain.nui.Control ctrl = tempList.get(0); if (((ctrl.getDbColumnName()) != null) && (!(org.apache.commons.lang.StringUtils.isBlank(ctrl.getDbColumnName())))) { counter = java.lang.Long.valueOf(ctrl.getDbColumnName().substring(5, ctrl.getDbColumnName().length())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9007/buggy-version/software.DynamicExtentions.src.java.edu.common.dynamicextensions.domain.nui.Container.java", "BodyUseAPI": ["java.util.List<edu.common.dynamicextensions.domain.nui.Control>.get(int)"], "Fixed commit": "85da13d0e7b1aba2a46ddc38fcdff16798290081", "Url": "https://api.github.com/repos/NCIP/catissue-dynamic-extensions", "Date": "2015-06-04T18:57:39Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) <= 20) { notificationBuilder.setSmallIcon(R.drawable.mail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7684/buggy-version/app.src.main.java.com.github.aliakseiKaraliou.onechatapp.broadcastReceivers.NotificationBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "b652e350a2d8eb4537a89d4ecf392bd37ceebc55", "Url": "https://api.github.com/repos/Aliaksei-Karaliou/OneChatApp", "Date": "2016-12-25T22:44:21Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((k == 0) && (cells[j][k].isIs_header())) { cells[j][k].setIs_stub(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/673/buggy-version/src.Annotation.Annotate.java", "BodyUseAPI": ["cells[j][k].setIs_stub(boolean)"], "Fixed commit": "ff95886498d078a1c9388f9479ec83b5af6fe456", "Url": "https://api.github.com/repos/nikolamilosevic86/TableDisentangler", "Date": "2015-09-18T14:24:35Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (listener == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4839/buggy-version/DataDroidPoC.src.com.foxykeep.datadroidpoc.data.requestmanager.PoCRequestManager.java", "BodyUseAPI": [], "Fixed commit": "89d75e7b7133456e50dbf1973cf427231e38bf6d", "Url": "https://api.github.com/repos/foxykeep/DataDroid", "Date": "2012-05-24T05:22:31Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (listener == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4839/buggy-version/DataDroidPoC.src.com.foxykeep.datadroidpoc.data.requestmanager.PoCRequestManager.java", "BodyUseAPI": [], "Fixed commit": "89d75e7b7133456e50dbf1973cf427231e38bf6d", "Url": "https://api.github.com/repos/foxykeep/DataDroid", "Date": "2012-05-24T05:22:31Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (listener == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4839/buggy-version/DataDroidPoC.src.com.foxykeep.datadroidpoc.skeleton.data.requestmanager.SkeletonRequestManager.java", "BodyUseAPI": [], "Fixed commit": "89d75e7b7133456e50dbf1973cf427231e38bf6d", "Url": "https://api.github.com/repos/foxykeep/DataDroid", "Date": "2012-05-24T05:22:31Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (listener == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4839/buggy-version/DataDroidPoC.src.com.foxykeep.datadroidpoc.skeleton.data.requestmanager.SkeletonRequestManager.java", "BodyUseAPI": [], "Fixed commit": "89d75e7b7133456e50dbf1973cf427231e38bf6d", "Url": "https://api.github.com/repos/foxykeep/DataDroid", "Date": "2012-05-24T05:22:31Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((weight) != 0) { weight -= movable.getWeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/337/buggy-version/src.game.cellelements.Scales.java", "BodyUseAPI": [], "Fixed commit": "c4a58b6c1842094afdbb89bc8e323ff09eace917", "Url": "https://api.github.com/repos/DVDripXvid/ProjektLab", "Date": "2016-04-23T15:08:26Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(count < (dashboard.getColumnCount()))) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1692/buggy-version/src.main.java.org.hpccsystems.dashboard.controller.DashboardController.java", "BodyUseAPI": [], "Fixed commit": "752d6a4878994de0a5a83129a7219a97358f76de", "Url": "https://api.github.com/repos/somanr-ln/Dashboard", "Date": "2014-01-28T13:26:54Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((hz[i]) - (hz[j])) == 0) { rs += 0; }else { rs += (-(tn[i])) - (tn[j]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/836/buggy-version/app.src.main.java.com.lckiss.calculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "871a6da25955a56d5fa886a3ebfe5534b4a6a7b7", "Url": "https://api.github.com/repos/TIL-MICE/Calculator", "Date": "2017-03-22T15:32:15Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((hz[i]) - (hz[j])) == 0) { rs += 0; }else { rs += (-(tn[i])) - (tn[j]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/836/buggy-version/app.src.main.java.com.lckiss.calculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "871a6da25955a56d5fa886a3ebfe5534b4a6a7b7", "Url": "https://api.github.com/repos/TIL-MICE/Calculator", "Date": "2017-03-22T15:32:15Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (serviceName.contains(\".\")) { serviceName = serviceName.split(\".\")[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8423/buggy-version/src.main.java.com.cnrancher.rancher.RancherClient.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "c8dd81f6d9528f15a2d969dcf5f3cc569f6fe064", "Url": "https://api.github.com/repos/loganhz/cicd-core", "Date": "2017-03-31T09:25:17Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (visited == null) visited = new java.util.HashSet<java.lang.Class<?>>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6426/buggy-version/jsonrpc-java.src.main.java.org.json.rpc.commons.GsonTypeChecker.java", "BodyUseAPI": [], "Fixed commit": "e89c8b7a2c6cf758544177ebbbdaf300dba2dba8", "Url": "https://api.github.com/repos/parvanov/jsonrpc", "Date": "2013-10-16T22:11:35Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.isEmpty()) { android.widget.RelativeLayout toolBar = ((android.widget.RelativeLayout) (findViewById(R.id.favorite_layout))); de.keyboardsurfer.android.widget.crouton.Crouton.showText(this, getString(R.string.no_favorite), Style.INFO, toolBar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5887/buggy-version/app.src.main.java.com.zamigos.espacedali.FavoriteActivity.java", "BodyUseAPI": [], "Fixed commit": "da80246c32ec3d8aee9778a5310163ad8a539fdc", "Url": "https://api.github.com/repos/Zamigos/Espace-Dali", "Date": "2016-01-15T15:11:32Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.reprap.configuration.Preferences.getInstance().loadBool(\"Shield\")) { omitShield = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9159/buggy-version/slicer.src.main.java.org.reprap.geometry.Producer.java", "BodyUseAPI": [], "Fixed commit": "d31fe291d263bdc8c6204758165f03d128ed2408", "Url": "https://api.github.com/repos/holgero/RepRapProSlicer", "Date": "2013-04-21T17:42:21Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((usedPhysicalExtruders(allPolygons)) > 1) { omitShield = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9159/buggy-version/slicer.src.main.java.org.reprap.geometry.Producer.java", "BodyUseAPI": [], "Fixed commit": "d31fe291d263bdc8c6204758165f03d128ed2408", "Url": "https://api.github.com/repos/holgero/RepRapProSlicer", "Date": "2013-04-21T17:42:21Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (omitShield) { for (int stl = 1; stl < (stlList.size()); stl++) { startNearHere = collectPolygonsForObject(stl, startNearHere, allPolygons); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9159/buggy-version/slicer.src.main.java.org.reprap.geometry.Producer.java", "BodyUseAPI": [], "Fixed commit": "d31fe291d263bdc8c6204758165f03d128ed2408", "Url": "https://api.github.com/repos/holgero/RepRapProSlicer", "Date": "2013-04-21T17:42:21Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.model.host.InitiatorAliasSetParam.getInitiatorAlias()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(initiatorAlias.contains(com.emc.storageos.api.service.impl.resource.InitiatorService.EMPTY_INITIATOR_ALIAS))) { com.emc.storageos.api.service.impl.resource.ArgValidator.checkFieldLengthMaximum(initiatorAlias, com.emc.storageos.api.service.impl.resource.InitiatorService.ALIAS_MAX_LIMIT, \"alias\"); }else { com.emc.storageos.api.service.impl.resource.ArgValidator.checkFieldLengthMaximum(initiatorAlias.split(com.emc.storageos.api.service.impl.resource.InitiatorService.EMPTY_INITIATOR_ALIAS)[0], com.emc.storageos.api.service.impl.resource.InitiatorService.ALIAS_MAX_LIMIT, \"alias node name\"); com.emc.storageos.api.service.impl.resource.ArgValidator.checkFieldLengthMaximum(initiatorAlias.split(com.emc.storageos.api.service.impl.resource.InitiatorService.EMPTY_INITIATOR_ALIAS)[1], com.emc.storageos.api.service.impl.resource.InitiatorService.ALIAS_MAX_LIMIT, \"alias port name\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/239/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.InitiatorService.java", "BodyUseAPI": ["com.emc.storageos.api.service.impl.resource.ArgValidator.checkFieldLengthMaximum(java.lang.String,int,java.lang.String)", "com.emc.storageos.api.service.impl.resource.ArgValidator.checkFieldLengthMaximum(java.lang.String,int,java.lang.String)", "com.emc.storageos.api.service.impl.resource.ArgValidator.checkFieldLengthMaximum(java.lang.String,int,java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "f078eca097a94b8f085dafd5743adb5f980cc552", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-07-20T19:53:13Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.model.host.InitiatorAliasSetParam.getInitiatorAlias()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (initiatorAlias.matches(com.emc.storageos.api.service.impl.resource.InitiatorService.ALIAS_ILLEGAL_CHARACTERS)) { java.lang.String errMsg = java.lang.String.format(\"Supplied Alias: %s has invalid characters\", initiatorAlias); com.emc.storageos.api.service.impl.resource.InitiatorService._log.error(errMsg); throw DeviceControllerException.exceptions.couldNotPerformAliasOperation(errMsg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/239/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.InitiatorService.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)"], "Fixed commit": "f078eca097a94b8f085dafd5743adb5f980cc552", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-07-20T19:53:13Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (track == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6665/buggy-version/src.com.awaker.audio.PlayerMaster.java", "BodyUseAPI": [], "Fixed commit": "f56c85e6fb08413df907f4f17a85126014d9090e", "Url": "https://api.github.com/repos/caleron/awaker", "Date": "2016-05-09T10:08:11Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (handler == null) { throw new java.lang.IllegalArgumentException(\"handler cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9089/buggy-version/src.main.java.edu.emory.cci.aiw.i2b2etl.dest.table.ConceptDimensionLoader.java", "BodyUseAPI": [], "Fixed commit": "254823f1a2fdb05ea8837e528b72794e2f9e7620", "Url": "https://api.github.com/repos/eurekaclinical/aiw-i2b2-etl", "Date": "2016-02-18T22:46:24Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((net.yawk.client.cameras.Camera.fontRendererID) == 0) { net.yawk.client.cameras.Camera.fontRendererID = mc.getTextureManager().getTexture(mc.fontRendererObj.locationFontTexture).getGlTextureId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1056/buggy-version/net.yawk.client.cameras.Camera.java", "BodyUseAPI": [], "Fixed commit": "2f170808f8b02e1574fc3f85f2a32e8a7ca56add", "Url": "https://api.github.com/repos/10askinsw/Yawk-Client", "Date": "2015-08-15T19:21:01Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (frame.isManual()) frame.getStartButton().setText(\"\u041d\u0430\u0447\u0430\u0442\u044c \u0440\u0443\u0447\u043d\u043e\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440\"); else frame.getStartButton().setText(\"\u041d\u0430\u0447\u0430\u0442\u044c \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/602/buggy-version/src.objects.GraphPanel.java", "BodyUseAPI": ["frames.MainFrame.getStartButton()", "frame.getStartButton().setText(java.lang.String)", "frames.MainFrame.getStartButton()", "frame.getStartButton().setText(java.lang.String)"], "Fixed commit": "d0e7dbfd864295bd3e38113db6e0c7017cbf82ea", "Url": "https://api.github.com/repos/Criptonite/QweenPlacing", "Date": "2017-06-28T12:13:58Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((udpStreamProcessor) != null) { udpStreamProcessor.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/491/buggy-version/catalog.video.video-mpegts-stream.src.main.java.org.codice.alliance.video.stream.mpegts.UdpStreamMonitor.java", "BodyUseAPI": [], "Fixed commit": "9beabf9f60530feee857a3fbf3c559cd8e80e309", "Url": "https://api.github.com/repos/bdeining/alliance", "Date": "2016-09-20T21:26:18Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eventLoopGroup) != null) { eventLoopGroup.shutdownGracefully(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/491/buggy-version/catalog.video.video-mpegts-stream.src.main.java.org.codice.alliance.video.stream.mpegts.UdpStreamMonitor.java", "BodyUseAPI": [], "Fixed commit": "9beabf9f60530feee857a3fbf3c559cd8e80e309", "Url": "https://api.github.com/repos/bdeining/alliance", "Date": "2016-09-20T21:26:18Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(java.lang.Double.isNaN(ratio))) && (!(java.lang.Double.isInfinite(ratio)))) { getLog().info(java.lang.String.format(org.jacoco.maven.CheckMojo.COVERAGE_INFO, entity.name(), truncate(ratio))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1340/buggy-version/jacoco-maven-plugin.src.org.jacoco.maven.CheckMojo.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,entity.name(),java.math.BigDecimal)", "org.jacoco.maven.CheckMojo.truncate(double)", "getLog().info(java.lang.String)"], "Fixed commit": "216b4398787057837a7be2af49f9f8f2d971d43d", "Url": "https://api.github.com/repos/andrey81inmd/jacoco", "Date": "2013-05-07T19:05:23Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["forestry.core.tiles.TileUtil.getTile(net.minecraft.world.World,int,int,int,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (leaves != null) { leaves.setTree(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7654/buggy-version/src.main.java.forestry.arboriculture.genetics.Tree.java", "BodyUseAPI": ["forestry.arboriculture.tiles.TileLeaves.setTree(forestry.arboriculture.genetics.Tree)"], "Fixed commit": "2a1b8fbc685e39c74d94ff5406916655cc1ed7fb", "Url": "https://api.github.com/repos/ForestryMC/ForestryMC", "Date": "2015-10-20T05:34:25Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((errorCount) != 0) { java.lang.System.out.println(\"---------- Error Report ----------\"); java.lang.System.out.println(((errorCount) + \" errors in symbol resolution - fix these before code generation.\")); java.lang.System.out.println(errors); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5169/buggy-version/src.ProcessJc.java", "BodyUseAPI": ["java.io.PrintStream.println(((errorCount) + \" errors in symbol resolution - fix these before code generation.\"))"], "Fixed commit": "053ae86510ca887578c8ce58429421ae5751d65c", "Url": "https://api.github.com/repos/mattunlv/ProcessJ", "Date": "2016-03-03T02:46:35Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.ws.rs.container.ContainerRequestContext.getHeaderString(HeaderField.TOKEN)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(token.equals(\"anonymous\"))) { userId = com.vn.dailycookapp.security.authorization.Authorizer.getInstance().authorize(token); requestContext.getHeaders().putSingle(HeaderField.USER_ID, userId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5659/buggy-version/DailyCookApp.src.main.java.com.vn.dailycookapp.security.RequestHandler.java", "BodyUseAPI": ["com.vn.dailycookapp.security.authorization.Authorizer.getInstance().authorize(java.lang.String)"], "Fixed commit": "ac1346c615d31f29c60e63c38e0436a4c1459d15", "Url": "https://api.github.com/repos/duyetpt/dailycook_restructe", "Date": "2015-11-27T05:32:20Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.pinae.timon.cache.CacheObject>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (replaceObject != null) { info.incPuts(false); info.minusMemorySize(replaceObject.getSize()); }else { info.incPuts(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3005/buggy-version/src.main.java.org.pinae.timon.cache.decorator.syn.SynchronizedCache.java", "BodyUseAPI": ["org.pinae.timon.cache.decorator.syn.SynchronizedCache.minusMemorySize(replaceObject.getSize())", "org.pinae.timon.cache.CacheObject.getSize()"], "Fixed commit": "40c7cd92281213d3ca682a6601b130c72766bae5", "Url": "https://api.github.com/repos/PinaeOS/timon", "Date": "2015-11-05T16:30:01Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (incSize) { (this.size)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3005/buggy-version/src.main.java.org.pinae.timon.cache.CacheInformation.java", "BodyUseAPI": [], "Fixed commit": "40c7cd92281213d3ca682a6601b130c72766bae5", "Url": "https://api.github.com/repos/PinaeOS/timon", "Date": "2015-11-05T16:30:01Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((java.lang.Character) (c)).getSelected()) && (canMoveUnits)) { ((java.lang.Character) (c)).setPath(getScene().getWorldMouse()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8190/buggy-version/Project.core.src.com.dreamteam.villageTycoon.characters.Controller.java", "BodyUseAPI": ["com.dreamteam.villageTycoon.framework.GameObject.setPath(getScene().getWorldMouse())"], "Fixed commit": "82851ab9def226ffdc7ff892b8e103587a7040b5", "Url": "https://api.github.com/repos/Dreamteam2015-LBSLund/Village-Tycoon-RTS", "Date": "2015-09-15T19:24:15Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (p != null) { java.lang.System.out.println(p.yytext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8980/buggy-version/ex01.LEXER.src.Main.java", "BodyUseAPI": ["java.io.PrintStream.println(p.yytext())", "Lexer.yytext()"], "Fixed commit": "b892b4edd6fd34449dae4810ee6b275a13018e4c", "Url": "https://api.github.com/repos/nirattar1/comp15", "Date": "2015-11-04T19:29:22Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(use64Bit)) { for (int i = 0; i < (markers.length); i++) { markers[i] = (markers[i]) & 4294967295L; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1239/buggy-version/components.formats-gpl.src.loci.formats.in.NDPIReader.java", "BodyUseAPI": [], "Fixed commit": "76f6a37c3a89041c9ca511e9df12035dfde6cb41", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-23T19:35:49Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getItemInHand().getAmount()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (amountInHand == 1) { org.bukkit.inventory.ItemStack emptyStack = null; player.setItemInHand(emptyStack); }else { player.setItemInHand(new org.bukkit.inventory.ItemStack(org.bukkit.Material.DIAMOND_BLOCK, (amountInHand - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1283/buggy-version/src.com.fullwall.Citizens.Listeners.EntityListen.java", "BodyUseAPI": ["org.bukkit.entity.Player.setItemInHand(org.bukkit.inventory.ItemStack)"], "Fixed commit": "caf91400b7fada7dc66be0e2b2c8c746c2ae3a55", "Url": "https://api.github.com/repos/fullwall/Citizens", "Date": "2011-05-11T17:11:51Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inputStream.skipBytes(org.gradoop.common.model.impl.properties.PropertyValue.OFFSET)) != (org.gradoop.common.model.impl.properties.PropertyValue.OFFSET)) { throw new java.lang.RuntimeException(\"Malformed entry in PropertyValue List\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1627/buggy-version/gradoop-common.src.main.java.org.gradoop.common.model.impl.properties.PropertyValue.java", "BodyUseAPI": [], "Fixed commit": "cd38ede0b115937eb5bcd461a980b230a1d864c1", "Url": "https://api.github.com/repos/DarthMax/gradoop", "Date": "2017-01-20T10:31:52Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inputStream.skipBytes(org.gradoop.common.model.impl.properties.PropertyValue.OFFSET)) != (org.gradoop.common.model.impl.properties.PropertyValue.OFFSET)) { throw new java.lang.RuntimeException(\"Malformed entry in PropertyValue List\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1627/buggy-version/gradoop-common.src.main.java.org.gradoop.common.model.impl.properties.PropertyValue.java", "BodyUseAPI": [], "Fixed commit": "cd38ede0b115937eb5bcd461a980b230a1d864c1", "Url": "https://api.github.com/repos/DarthMax/gradoop", "Date": "2017-01-20T10:31:52Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((user.getMajor()) != null) this.major = java.util.Arrays.asList(user.getMajor().split(\" \"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8746/buggy-version/tss2.src.main.java.model.User.java", "BodyUseAPI": [], "Fixed commit": "dbc34b13afe835d3787fa1cff140da1569ed37a8", "Url": "https://api.github.com/repos/NjuFate/TSS2.0", "Date": "2016-07-25T08:54:06Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((project.getTeaching_assistants()) != null) this.teaching_assistants = java.util.Arrays.asList(project.getTeaching_assistants().split(\" \"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8746/buggy-version/tss2.src.main.java.model.Project.java", "BodyUseAPI": [], "Fixed commit": "dbc34b13afe835d3787fa1cff140da1569ed37a8", "Url": "https://api.github.com/repos/NjuFate/TSS2.0", "Date": "2016-07-25T08:54:06Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((project.getInstrutor()) != null) this.instrutor = java.util.Arrays.asList(project.getInstrutor().split(\" \"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8746/buggy-version/tss2.src.main.java.model.Project.java", "BodyUseAPI": [], "Fixed commit": "dbc34b13afe835d3787fa1cff140da1569ed37a8", "Url": "https://api.github.com/repos/NjuFate/TSS2.0", "Date": "2016-07-25T08:54:06Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((emrPatient.getId()) != null) { java.util.List<org.openmrs.module.shrclient.service.impl.Obs> obsForCauseOfDeath = obsService.getObservationsByPersonAndConcept(emrPatient, causeOfDeathConcept); if ((obsForCauseOfDeath != null) && (!(obsForCauseOfDeath.isEmpty()))) { for (org.openmrs.module.shrclient.service.impl.Obs obs : obsForCauseOfDeath) { if (!(obs.isVoided())) { causeOfDeath = obs.getValueCoded(); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6829/buggy-version/shrclient-omod.src.main.java.org.openmrs.module.shrclient.service.impl.MciPatientServiceImpl.java", "BodyUseAPI": ["org.openmrs.module.shrclient.service.impl.ObsService.getObservationsByPersonAndConcept(org.openmrs.module.shrclient.model.Patient,org.openmrs.module.shrclient.service.impl.Concept)"], "Fixed commit": "8065fd2594802b6a191b36e2093c6d073ed7b4d4", "Url": "https://api.github.com/repos/SharedHealth/openmrs-module-bdshrclient", "Date": "2015-05-26T11:55:29Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((e.getMessage()) != null) && (e.getMessage().contains(\"headless\"))) { org.syncany.operations.ActionFileHandler.logger.log(java.util.logging.Level.INFO, \"Cannot prevent standby, because headless mode is enabled (no GUI environment)\"); }else { org.syncany.operations.ActionFileHandler.logger.log(java.util.logging.Level.WARNING, \"Standby prevention failed (headless mode?).\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5532/buggy-version/syncany-lib.src.main.java.org.syncany.operations.ActionFileHandler.java", "BodyUseAPI": ["java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,java.lang.Exception)"], "Fixed commit": "4c4cb587538ee9c2f89769591d4adb898e0f8f35", "Url": "https://api.github.com/repos/syncany/syncany", "Date": "2014-08-08T21:45:20Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloudbees.jenkins.support.SupportLogFormatter.formatMessage(java.util.logging.LogRecord)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (message != null) { builder.append(\": \").append(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6928/buggy-version/src.main.java.com.cloudbees.jenkins.support.SupportLogFormatter.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "0f74d9d3d2413d5a37972faaf0ac482eeccd3049", "Url": "https://api.github.com/repos/jenkinsci/support-core-plugin", "Date": "2016-10-28T20:35:51Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWon) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/278/buggy-version/src.cluedo.GameOfCluedo.java", "BodyUseAPI": [], "Fixed commit": "be95da34362f2d0b18ddda5f306ae52dd553db37", "Url": "https://api.github.com/repos/thomsedavi/CluedoText", "Date": "2015-08-05T05:35:57Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (className.equals(\"mml.filters.english.harpur.h003.Filter\")) java.lang.System.out.println(\"here we go!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7363/buggy-version/src.importer.handler.post.stages.StageThreeXML.java", "BodyUseAPI": [], "Fixed commit": "946351e92fc09d28a70f6ae39c6d28a0ea3cfdc5", "Url": "https://api.github.com/repos/Ecdosis/Importer", "Date": "2015-12-17T22:48:50Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(scanner.hasNext())) { throw new java.lang.IllegalArgumentException(\"Insufficient number of tokens to scan after closed parenthesis\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/972/buggy-version/src.main.java.de.strullerbaumann.visualee.examiner.Examiner.java", "BodyUseAPI": [], "Fixed commit": "cb7b08d182b463e78f85f7851cce64d6cf0e36b5", "Url": "https://api.github.com/repos/Thomas-S-B/visualee", "Date": "2015-12-22T10:41:16Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (outputString != null) { outputString.set(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7741/buggy-version/src.org.jboard.jboard.utilities.StringUtils.java", "BodyUseAPI": ["org.jboard.jboard.utilities.Container<java.lang.String>.set(<nulltype>)"], "Fixed commit": "f9ee607727d6407dda5afe1502533316aa28baf6", "Url": "https://api.github.com/repos/astern7/jboard", "Date": "2014-08-25T17:41:58Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client) != null) { com.uzh.csg.overlaynetworks.web3j.MessageService messageService = new com.uzh.csg.overlaynetworks.web3j.MessageService(); client.sendMessage(message, result); if (message.getNotary()) { messageService.writeToBlockchain(message, result.getMessageId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8851/buggy-version/src.main.java.com.uzh.csg.overlaynetworks.service.P2PService.java", "BodyUseAPI": [], "Fixed commit": "71237063dd7bd7b2cb80502d068964b180151214", "Url": "https://api.github.com/repos/Overlay-Networks/challenge-task", "Date": "2017-05-31T18:02:11Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cytoscape.task.internal.table.JoinTablesTask.getColumns(name2RootMap.get(rootNetworkList.getSelectedValue()),dataTypeOptions.getSelectedValue(),CyRootNetwork.SHARED_ATTRS)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(columnList.getPossibleValues().containsAll(tempList.getPossibleValues()))) || ((columnList.getPossibleValues().size()) != (tempList.getPossibleValues().size()))) columnList = tempList;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6868/buggy-version/core-task-impl.src.main.java.org.cytoscape.task.internal.table.JoinTablesTask.java", "BodyUseAPI": [], "Fixed commit": "86b1608631d07185a49bcc298896341b9f677d4a", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2013-01-24T18:17:49Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cytoscape.task.internal.table.JoinTablesTask.getColumns(name2RootMap.get(rootNetworkList.getSelectedValue()),dataTypeOptions.getSelectedValue(),CyRootNetwork.SHARED_ATTRS)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(columnList.getPossibleValues().containsAll(tempList.getPossibleValues()))) || ((columnList.getPossibleValues().size()) != (tempList.getPossibleValues().size()))) columnList = tempList;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6868/buggy-version/core-task-impl.src.main.java.org.cytoscape.task.internal.table.JoinTablesTask.java", "BodyUseAPI": [], "Fixed commit": "86b1608631d07185a49bcc298896341b9f677d4a", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2013-01-24T18:17:49Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.configuration.PropertiesConfiguration.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (res instanceof java.lang.String) { return ((java.lang.String) (res)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2525/buggy-version/src.main.java.org.roda.rodain.core.AppProperties.java", "BodyUseAPI": [], "Fixed commit": "a96ca2272eaf462ce1b86e9d0474b20e0e205604", "Url": "https://api.github.com/repos/keeps/roda-in", "Date": "2016-02-18T17:41:18Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (res instanceof java.lang.String) { return ((java.lang.String) (res)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2525/buggy-version/src.main.java.org.roda.rodain.core.AppProperties.java", "BodyUseAPI": [], "Fixed commit": "a96ca2272eaf462ce1b86e9d0474b20e0e205604", "Url": "https://api.github.com/repos/keeps/roda-in", "Date": "2016-02-18T17:41:18Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["releventElements.get(i).text()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (text.startsWith(\"CATVAR 2.0 Preposition-Verb Supplement\")) { java.lang.System.out.println(text); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3102/buggy-version/ICrawling.src.linguistic_processing.CatVariator.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "4b122848dba173c6bb4c3fe7132fd893455465c2", "Url": "https://api.github.com/repos/VeraCLHD/NFContinued", "Date": "2017-05-05T11:58:30Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (publicationIds.isEmpty()) { return new java.util.ArrayList<org.nextprot.api.core.domain.PublicationDbXref>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7003/buggy-version/core.src.main.java.org.nextprot.api.core.dao.impl.DbXrefDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "f6fd63bf23988222838c49fbaaf9beb411a6c329", "Url": "https://api.github.com/repos/calipho-sib/nextprot-api", "Date": "2016-09-07T16:03:13Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (publicationIds.isEmpty()) { return new java.util.ArrayList<org.nextprot.api.core.domain.PublicationAuthor>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7003/buggy-version/core.src.main.java.org.nextprot.api.core.dao.impl.AuthorDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "f6fd63bf23988222838c49fbaaf9beb411a6c329", "Url": "https://api.github.com/repos/calipho-sib/nextprot-api", "Date": "2016-09-07T16:03:13Z"},
{"Line": "=>2252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (poppedOperator.tokenStr.equals(\"not\")) outPutStack.push(evaluate(null, ((havabol.ResultValue) (outPutStack.pop())), poppedOperator.tokenStr)); else { firstResValue = ((havabol.ResultValue) (outPutStack.pop())); secondResValue = ((havabol.ResultValue) (outPutStack.pop())); res = evaluate(secondResValue, firstResValue, poppedOperator.tokenStr); outPutStack.push(res); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1241/buggy-version/src.havabol.Parser.java", "BodyUseAPI": ["havabol.Parser.evaluate(<nulltype>,java.lang.Object,poppedOperator.tokenStr)", "havabol.Parser.evaluate(havabol.ResultValue,havabol.ResultValue,poppedOperator.tokenStr)", "java.util.Stack.push(havabol.ResultValue)"], "Fixed commit": "1a2a281aaa2589f5caeb91ef1b850a767c17eb11", "Url": "https://api.github.com/repos/pabloevd950/havaBol", "Date": "2017-04-28T03:20:23Z"},
{"Line": "=>2162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (poppedOperator.tokenStr.equals(\"not\")) res = evaluate(null, ((havabol.ResultValue) (outPutStack.pop())), poppedOperator.tokenStr); else { secondResValue = ((havabol.ResultValue) (outPutStack.pop())); res = evaluate(secondResValue, firstResValue, poppedOperator.tokenStr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1241/buggy-version/src.havabol.Parser.java", "BodyUseAPI": ["havabol.Parser.evaluate(havabol.ResultValue,havabol.ResultValue,poppedOperator.tokenStr)", "havabol.Parser.evaluate(<nulltype>,java.lang.Object,poppedOperator.tokenStr)"], "Fixed commit": "1a2a281aaa2589f5caeb91ef1b850a767c17eb11", "Url": "https://api.github.com/repos/pabloevd950/havaBol", "Date": "2017-04-28T03:20:23Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((beginIndex < (formatString.length())) && (i <= (formatString.length()))) { return resultString + (net.bootsfaces.utils.LocaleUtils.mapSubformat(formatString, mapping, beginIndex, i, escapeStart, escapeEnd, targetEscapeStart, targetEscapeEnd)); }else { return resultString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8517/buggy-version/src.main.java.net.bootsfaces.utils.LocaleUtils.java", "BodyUseAPI": ["net.bootsfaces.utils.LocaleUtils.mapSubformat(java.lang.String,java.util.Map<java.lang.String, java.lang.String>,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "f2e2b54520435e1fd5af348396a122ded64ca44e", "Url": "https://api.github.com/repos/chongma/BootsFaces-OSP", "Date": "2017-03-25T18:01:49Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pack) == null) || (\"\".equals(pack))) { throw new java.lang.RuntimeException((\"Package is empty for block \" + (getFullName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2456/buggy-version/core.src.main.java.com.jukta.jtahoe.definitions.BlockMeta.java", "BodyUseAPI": [], "Fixed commit": "3b8011ce4c35f14ea1bb6ca6bb0fbb5c893f822b", "Url": "https://api.github.com/repos/jukta/j-tahoe", "Date": "2016-07-16T16:22:34Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currMovie.getQuantity()) <= 0) { movieList.remove(currMovie); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4684/buggy-version/Inventory.java", "BodyUseAPI": ["java.util.ArrayList<Movie>.remove(Movie)"], "Fixed commit": "4d52c62e19355859930b660aef7b205920585a47", "Url": "https://api.github.com/repos/aay15/OO-Assignment1", "Date": "2015-07-10T13:32:38Z"},
{"Line": "=>1082", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((uk.ac.gla.student._2074245k.cde.components.ConcreteComponent) (comp)).indexOfPort(child)) == (-1)) { componentsList.remove(child); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5301/buggy-version/CircuitDesignEditor.src.uk.ac.gla.student._2074245k.cde.gui.MainCanvas.java", "BodyUseAPI": ["java.util.List<uk.ac.gla.student._2074245k.cde.components.Component>.remove(uk.ac.gla.student._2074245k.cde.components.Component)"], "Fixed commit": "edd442c431acd8c52c427825514497d6ad4ed42f", "Url": "https://api.github.com/repos/AlexKoukoulas2074245K/Circuit-Design-Editor", "Date": "2017-01-22T15:52:27Z"},
{"Line": "=>1002", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ashc.grammar.Scope.getFuncScope()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(scope.returnType.isVoid())) semanticError(this, line, column, ashc.grammar.RETURN_VOID_IN_NONVOID_FUNC);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6409/buggy-version/src.ashc.grammar.Node.java", "BodyUseAPI": [], "Fixed commit": "4fb0a2649fdef63cc654729a92edb4b4b7e24b96", "Url": "https://api.github.com/repos/ash-lang/ash", "Date": "2015-06-30T17:47:46Z"},
{"Line": "=>1400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((expr) != null) { ((ashc.grammar.Node) (expr)).analyse(); if (!(((ashc.grammar.Node) (expr)).errored)) { final ashc.semantics.Semantics.TypeI exprType = expr.getExprType(); if (((ashc.grammar.EnumPrimitive.getPrimitive(exprType.shortName)) != (EnumPrimitive.BOOL)) || (exprType.isArray())) semanticError(this, line, column, ashc.grammar.EXPECTED_BOOL_EXPR, exprType); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6409/buggy-version/src.ashc.grammar.Node.java", "BodyUseAPI": [], "Fixed commit": "4fb0a2649fdef63cc654729a92edb4b4b7e24b96", "Url": "https://api.github.com/repos/ash-lang/ash", "Date": "2015-06-30T17:47:46Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (test && (tw.fatminmin.xposed.minminguard.Main.pref.getBoolean((packageName + \"_first\"), true))) { tw.fatminmin.xposed.minminguard.Main.pref.reload(); if (tw.fatminmin.xposed.minminguard.Main.pref.getBoolean((packageName + \"_first\"), true)) { tw.fatminmin.xposed.minminguard.Main.launchEnableDialog(packageName, context); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4645/buggy-version/src.tw.fatminmin.xposed.minminguard.Main.java", "BodyUseAPI": ["de.robv.android.xposed.XSharedPreferences.reload()", "de.robv.android.xposed.XSharedPreferences.getBoolean(java.lang.String,boolean)", "tw.fatminmin.xposed.minminguard.Main.launchEnableDialog(java.lang.String,android.content.Context)"], "Fixed commit": "a7554f1ce416379b76e614a045cbe12a6d0f87a4", "Url": "https://api.github.com/repos/chiehmin/MinMinGuard", "Date": "2015-07-05T13:20:23Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parts.length) > 1) { return parts[1]; }else { return parts[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3532/buggy-version/src.main.java.com.simpl.service.news.newsservice.newsapi.NewsArticle.java", "BodyUseAPI": [], "Fixed commit": "e478d8deb5a6848f1ba49f49c6b0a9114c50179d", "Url": "https://api.github.com/repos/tomaytotomato/simpl.press-service", "Date": "2016-12-04T07:16:50Z"},
{"Line": "=>614", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mDesiredetailReportPopupBinding.reportReasonSpinner.getSelectedItem()", "getResources().getStringArray(R.array.report_reasons)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (flagString.equals(flags[0])) { flagReason = de.fau.cs.mad.wanthavers.common.FlagReason.INAPPROPRIATE; }else if (flagString.equals(flags[1])) { flagReason = de.fau.cs.mad.wanthavers.common.FlagReason.IMPOSSIBLE; }else if (flagString.equals(flags[2])) { flagReason = de.fau.cs.mad.wanthavers.common.FlagReason.SPAM; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6644/buggy-version/app.src.main.java.wanthavers.mad.cs.fau.de.wanthavers_android.desiredetail.DesireDetailFragment.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "c0045afa5d0fad5d0709ad2adde247e39f2c93c7", "Url": "https://api.github.com/repos/FAU-Inf2/wanthavers-android", "Date": "2016-09-06T09:37:48Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataBufferType == (java.awt.image.DataBuffer.TYPE_BYTE)) && ((zoomedDataBuffer.getSize()) < ((w * h) * 3))) zoomedDataBuffer = new java.awt.image.DataBufferByte(((w * h) * 3), 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1560/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.util.ui.lens.LensModel.java", "BodyUseAPI": [], "Fixed commit": "911529ac526cf4f99139617b9abf5fe9e79aa43d", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2016-03-22T03:32:45Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dcm4che3.conf.core.normalization.DefaultsAndNullFilterDecorator.3.getDefaultValueFromClass(java.lang.Class,org.dcm4che3.conf.core.api.internal.ConfigProperty)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (defaultNode == null) { containerNode.put(property.getAnnotatedName(), new java.util.ArrayList()); }else { containerNode.put(property.getAnnotatedName(), defaultNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4211/buggy-version/dcm4che-conf.dcm4che-conf-core.src.main.java.org.dcm4che3.conf.core.normalization.DefaultsAndNullFilterDecorator.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(property.getAnnotatedName(),java.lang.Object)"], "Fixed commit": "ca4ee79972de4a1e103c2e639775c3bea2471113", "Url": "https://api.github.com/repos/alessio-roselli/dcm4che", "Date": "2017-05-23T08:42:20Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Server.logArray.size()) >= 4) { deltaRequest = (((Server.logArray.get(((Server.logArray.size()) - 1))) + (Server.logArray.get(((Server.logArray.size()) - 2)))) - ((Server.logArray.get(((Server.logArray.size()) - 3))) + (Server.logArray.get(((Server.logArray.size()) - 4))))) / 2; }else { deltaRequest = (Server.logArray.get(((Server.logArray.size()) - 1))) - (Server.logArray.get(((Server.logArray.size()) - 2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8535/buggy-version/Server.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.get(int)", "java.util.List<java.lang.Integer>.get(int)", "java.util.List<java.lang.Integer>.get(int)", "java.util.List<java.lang.Integer>.size()", "java.util.List<java.lang.Integer>.size()", "java.util.List<java.lang.Integer>.size()", "java.util.List<java.lang.Integer>.size()", "java.util.List<java.lang.Integer>.size()", "java.util.List<java.lang.Integer>.get(int)", "java.util.List<java.lang.Integer>.size()", "java.util.List<java.lang.Integer>.get(int)", "java.util.List<java.lang.Integer>.get(int)"], "Fixed commit": "ed058c7f7761b5b105701c9ddfe5515ddbc2bfcb", "Url": "https://api.github.com/repos/kn1ghtted/project3", "Date": "2017-03-29T10:28:38Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Double.valueOf(etMaxAttendees.getText().toString())) <= 0) { android.util.Log.e(\"err\", \"Max Attendees too low\"); showErrDialog(getString(R.string.errMissingDataTitle), getString(R.string.errLowAtt)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8067/buggy-version/AdHoc.src.com.codepath.adhoc.fragments.CreateEventDataFragment.java", "BodyUseAPI": [], "Fixed commit": "841e5fd0249a7ca8f93d9ab32e2cc869f0337084", "Url": "https://api.github.com/repos/zephos64/CodePathAdHoc", "Date": "2014-03-02T00:42:08Z"},
{"Line": "=>803", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((preference.getKey()) != null) && (preference instanceof android.preference.PreferenceScreen)) && ((((android.preference.PreferenceCategory) (findPreference(\"profile_dep_cat\"))).findPreference(preference.getKey())) != null)) { android.preference.PreferenceScreen scr = ((android.preference.PreferenceScreen) (preference)); scr.getDialog().setTitle(((((scr.getTitle()) + \" [\") + (osmandSettings.APPLICATION_MODE.get().toHumanString(this))) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6933/buggy-version/OsmAnd.src.net.osmand.plus.activities.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "1ac8e2d9cf8ee7194f1f8883eaa0a1aa3ebab5eb", "Url": "https://api.github.com/repos/poretsky/Osmand", "Date": "2012-04-18T22:06:27Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((poolState) == (com.zaxxer.hikari.pool.HikariPool.POOL_NORMAL)) { LOGGER.debug(\"Connection attempt to database in pool {} failed: {}\", configuration.getPoolName(), e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1877/buggy-version/src.main.java.com.zaxxer.hikari.pool.HikariPool.java", "BodyUseAPI": [], "Fixed commit": "53fe3b5b51ffa3e09b808ff35c07a6ae7656b164", "Url": "https://api.github.com/repos/brettwooldridge/HikariCP", "Date": "2015-05-12T15:04:01Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (inputStream != null) { try { inputStream.close(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/441/buggy-version/app.src.main.java.com.bananaplan.workflowandroid.data.loading.RestfulUtils.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "68eff49181d51be28655034e2d8d3aa688610dda", "Url": "https://api.github.com/repos/bananaplanTW/WorkFlowAndroid", "Date": "2015-10-18T14:39:17Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (inputStream != null) { try { inputStream.close(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/441/buggy-version/app.src.main.java.com.bananaplan.workflowandroid.data.loading.RestfulUtils.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "68eff49181d51be28655034e2d8d3aa688610dda", "Url": "https://api.github.com/repos/bananaplanTW/WorkFlowAndroid", "Date": "2015-10-18T14:39:17Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parent instanceof eu.modelwriter.traceability.validation.core.fol.recognizer.FOLParser.QuantificationContext) { ((eu.modelwriter.traceability.validation.core.fol.recognizer.FOLParser.QuantificationContext) (parent)).scope = child; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9106/buggy-version/Source.eu.modelwriter.traceability.validation.core.src.eu.modelwriter.traceability.validation.core.fol.Utilities.java", "BodyUseAPI": [], "Fixed commit": "4c717b4cc91926f5f8751a252977bab69a1edaf9", "Url": "https://api.github.com/repos/ModelWriter/WP3", "Date": "2015-11-06T07:59:54Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((catList.size()) >= 1) { monthReportList.get(month).setFirstCategory(catList.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8598/buggy-version/app.src.main.java.com.zhan.budget.Fragment.MonthReportFragment.java", "BodyUseAPI": ["monthReportList.get(month).setFirstCategory(catList.get(0))", "java.util.List<com.zhan.budget.Model.Realm.Category>.get(int)"], "Fixed commit": "13c78232f86e8097e84654ed1ec5f6c0659813ac", "Url": "https://api.github.com/repos/zhanhui913/Budget", "Date": "2016-05-11T16:40:59Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((catList.size()) >= 2) { monthReportList.get(month).setSecondCategory(catList.get(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8598/buggy-version/app.src.main.java.com.zhan.budget.Fragment.MonthReportFragment.java", "BodyUseAPI": ["java.util.List<com.zhan.budget.Model.Realm.Category>.get(int)", "monthReportList.get(month).setSecondCategory(catList.get(1))"], "Fixed commit": "13c78232f86e8097e84654ed1ec5f6c0659813ac", "Url": "https://api.github.com/repos/zhanhui913/Budget", "Date": "2016-05-11T16:40:59Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((catList.size()) >= 3) { monthReportList.get(month).setThirdCategory(catList.get(2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8598/buggy-version/app.src.main.java.com.zhan.budget.Fragment.MonthReportFragment.java", "BodyUseAPI": ["monthReportList.get(month).setThirdCategory(catList.get(2))", "java.util.List<com.zhan.budget.Model.Realm.Category>.get(int)"], "Fixed commit": "13c78232f86e8097e84654ed1ec5f6c0659813ac", "Url": "https://api.github.com/repos/zhanhui913/Budget", "Date": "2016-05-11T16:40:59Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<java.lang.String>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (current_dir.equals(\"\")) { actionBar.setTitle(getString(R.string.default_display_name_for_root_folder)); }else { actionBar.setTitle(current_dir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6709/buggy-version/src.com.owncloud.android.ui.activity.Uploader.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.setTitle(java.lang.String)"], "Fixed commit": "5d19ae0e104f6eba00cbcd5022bd3c9e109af998", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2016-03-23T15:17:14Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (parentFile != null) { final java.net.URI d = new java.io.File(dirPath).toURI(); final java.net.URI p = new java.io.File(dirPath, filePath).getParentFile().toURI(); final java.lang.String b = d.relativize(p).toASCIIString(); final java.lang.StringBuilder ret = new java.lang.StringBuilder(b); if (!(b.endsWith(org.dita.dost.reader.URI_SEPARATOR))) { ret.append(org.dita.dost.reader.URI_SEPARATOR); } ret.append(attValue); return org.dita.dost.util.FileUtils.normalize(ret.toString(), org.dita.dost.reader.URI_SEPARATOR); }else { return attValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1700/buggy-version/src.main.java.org.dita.dost.reader.MergeTopicParser.java", "BodyUseAPI": [], "Fixed commit": "37837c3d7280ca93fe69143c004a44d5c400e253", "Url": "https://api.github.com/repos/jelovirt/dita-ot", "Date": "2012-09-07T08:31:22Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lockReceiver) != null) lockReceiver.destroy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1209/buggy-version/mobile.PassMatters.app.src.main.java.eu.asyncro.passmatters.activities.ActivityMain.java", "BodyUseAPI": [], "Fixed commit": "19fc6a6eb8c09251b5b548047ea2d757def956ff", "Url": "https://api.github.com/repos/mpavlovic/PassMatters", "Date": "2015-01-27T17:48:48Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type.getArrayLength()) == 0) codeGenerator.emitProgramString(((((\"pop \" + (type.getSizeStr())) + \" [\") + (label)) + \"]\")); else codeGenerator.emitProgramString((\"pop \" + (label)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7315/buggy-version/Compiler.se.neava.compiler.symbol.ObjectVariableSymbol.java", "BodyUseAPI": ["se.neava.compiler.CodeGenerator.emitProgramString(((((\"pop \" + (type.getSizeStr())) + \" [\") + (label)) + \"]\"))", "se.neava.compiler.symbol.ObjectVariableSymbol.getSizeStr()"], "Fixed commit": "112df1edce3ca961b3b2db5ae47abaca1598e152", "Url": "https://api.github.com/repos/Otrebus/xa-frontend", "Date": "2014-08-29T14:36:59Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type.getArrayLength()) == 0) codeGenerator.emitProgramString(((((\"push \" + (type.getSizeStr())) + \" [\") + (label)) + \"]\")); else codeGenerator.emitProgramString((\"push \" + (label)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7315/buggy-version/Compiler.se.neava.compiler.symbol.ObjectVariableSymbol.java", "BodyUseAPI": ["se.neava.compiler.CodeGenerator.emitProgramString(((((\"push \" + (type.getSizeStr())) + \" [\") + (label)) + \"]\"))", "se.neava.compiler.symbol.ObjectVariableSymbol.getSizeStr()"], "Fixed commit": "112df1edce3ca961b3b2db5ae47abaca1598e152", "Url": "https://api.github.com/repos/Otrebus/xa-frontend", "Date": "2014-08-29T14:36:59Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null != (record.getOrderId())) && (!(record.getOrderId().trim().isEmpty()))) { oetmapper.deleteByPrimaryKey(record); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4285/buggy-version/src.com.manicure.order.impl.OrderServiceImp.java", "BodyUseAPI": ["com.manicure.order.mapper.OrderExtendTmpMapper.deleteByPrimaryKey(com.manicure.order.entity.OrderExtendTmp)"], "Fixed commit": "ba594b83be4ae83e0880956c1e5771f395bc7582", "Url": "https://api.github.com/repos/Code-Fly/manicure-wechat", "Date": "2015-08-21T01:56:36Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (column.getType().equalsIgnoreCase(\"INTEGER\")) { typeName = \"INT\"; columnSize = \"9\"; }else if (column.getType().equalsIgnoreCase(\"DECIMAL\")) { typeName = \"DECIMAL\"; columnSize = \"38,10\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6293/buggy-version/controller.src.main.java.org.openhds.controller.service.impl.ExtraFormServiceImpl.java", "BodyUseAPI": ["org.openhds.domain.model.ColumnDummy.getType()", "column.getType().equalsIgnoreCase(java.lang.String)"], "Fixed commit": "2c3686fe32676554d9c6bfd951ee61430caaa1f5", "Url": "https://api.github.com/repos/SwissTPH/openhds-server", "Date": "2016-07-25T07:34:35Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edu.cornell.mannlib.vitro.webapp.utils.dataGetter.SparqlQueryDataGetter.log.isDebugEnabled()) { edu.cornell.mannlib.vitro.webapp.utils.dataGetter.SparqlQueryDataGetter.log.debug((\"parameters: \" + merged)); edu.cornell.mannlib.vitro.webapp.utils.dataGetter.SparqlQueryDataGetter.log.debug((\"query before binding parameters:\" + text)); edu.cornell.mannlib.vitro.webapp.utils.dataGetter.SparqlQueryDataGetter.log.debug((\"query after binding parameters: \" + bound)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1747/buggy-version/webapp.src.edu.cornell.mannlib.vitro.webapp.utils.dataGetter.SparqlQueryDataGetter.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)", "org.apache.commons.logging.Log.debug(java.lang.String)", "org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "7f67b1b7daf0319c199a5babbb2c5ed0b745a741", "Url": "https://api.github.com/repos/vivo-project/Vitro", "Date": "2013-11-06T16:43:33Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edu.cornell.mannlib.vitro.webapp.utils.dataGetter.SparqlQueryDataGetter.log.isDebugEnabled()) { edu.cornell.mannlib.vitro.webapp.utils.dataGetter.SparqlQueryDataGetter.log.debug((((((\"Merging request parameters \" + parameterMap) + \" with page data \") + pageData) + \" results in \") + merged)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1747/buggy-version/webapp.src.edu.cornell.mannlib.vitro.webapp.utils.dataGetter.SparqlQueryDataGetter.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "7f67b1b7daf0319c199a5babbb2c5ed0b745a741", "Url": "https://api.github.com/repos/vivo-project/Vitro", "Date": "2013-11-06T16:43:33Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (curr == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6230/buggy-version/csc.2017.2.LockFreeSet.ShkviroIA.LockFreeSetImpl.java", "BodyUseAPI": [], "Fixed commit": "f8f7340a8abaea6a04901a90f74d3dc4ca6e4672", "Url": "https://api.github.com/repos/IrinaShkviro/hpcourse", "Date": "2017-05-08T17:12:22Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (now < 0) { org.zstack.storage.primary.PrimaryStorageManagerImpl.logger.warn(java.lang.String.format((\"negative available capacity of the primary storage, detail: re-calculated available capacity of the primary storage\" + \"[uuid:%s, before:%s, now:%s] with over-provisioning ratio[%s]\"), psUuid, before, now, ratioMgr.getRatio(psUuid))); now = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8695/buggy-version/storage.src.main.java.org.zstack.storage.primary.PrimaryStorageManagerImpl.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String,long,long,ratioMgr.getRatio(psUuid))", "org.zstack.utils.logging.CLogger.warn(java.lang.String)"], "Fixed commit": "c7bd8630a22ed040ea876c0da7a1a94bf18fe6b4", "Url": "https://api.github.com/repos/liningone/zstack", "Date": "2017-03-13T14:37:36Z"},
{"Line": "=>619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((svc.getParameterCollection()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1024/buggy-version/core.upgrade.src.main.java.org.opennms.upgrade.implementations.JmxRrdMigratorOffline.java", "BodyUseAPI": [], "Fixed commit": "a5a8d23c9cb621ac0dd19eb5ee8661da85701eae", "Url": "https://api.github.com/repos/roskens/opennms", "Date": "2014-03-13T16:28:46Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (friendlyName == null) { log(\"Warning: there is no friendly-name or port parameter for service %s. The JRBs/RRDs for this service are not going to be updated.\", service); }else { jmxFriendlyNames.add(friendlyName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1024/buggy-version/core.upgrade.src.main.java.org.opennms.upgrade.implementations.JmxRrdMigratorOffline.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "a5a8d23c9cb621ac0dd19eb5ee8661da85701eae", "Url": "https://api.github.com/repos/roskens/opennms", "Date": "2014-03-13T16:28:46Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opennms.upgrade.implementations.JmxRrdMigratorOffline.getSvcPropertyValue(org.opennms.netmgt.config.collectd.Service,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (friendlyName == null) { friendlyName = getSvcPropertyValue(svc, \"port\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1024/buggy-version/core.upgrade.src.main.java.org.opennms.upgrade.implementations.JmxRrdMigratorOffline.java", "BodyUseAPI": [], "Fixed commit": "a5a8d23c9cb621ac0dd19eb5ee8661da85701eae", "Url": "https://api.github.com/repos/roskens/opennms", "Date": "2014-03-13T16:28:46Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (otherOwnedWarpStr.endsWith(\", \")) otherOwnedWarpStr = otherOwnedWarpStr.trim().substring(0, ((otherOwnedWarpStr.length()) - 2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1117/buggy-version/src.main.java.net.niftymonkey.niftywarp.commands.ListWarpsCommand.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.trim()", "java.lang.String.length()"], "Fixed commit": "373a5ef441676c14c5ea95b234f4eeeb480fb231", "Url": "https://api.github.com/repos/niftymonkey/NiftyWarp", "Date": "2011-06-26T07:51:40Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (organizationVCardsTaskQueue.isEmpty()) { organizationVCardsTaskQueue.enqueueTasks(organizationSettingController.listOrganizationIdsWithSetting(VCardConsts.ORGANIZATION_SETTING_URL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5910/buggy-version/src.main.java.fi.otavanopisto.kuntaapi.server.integrations.vcard.VCardEntityUpdater.java", "BodyUseAPI": ["fi.otavanopisto.kuntaapi.server.integrations.vcard.tasks.OrganizationVCardsTaskQueue.enqueueTasks(organizationSettingController.listOrganizationIdsWithSetting(VCardConsts.ORGANIZATION_SETTING_URL))"], "Fixed commit": "0b5aa5a065faa312555bc18a12a79b871d02a511", "Url": "https://api.github.com/repos/Metatavu/kunta-api-server", "Date": "2017-09-04T15:22:24Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Lists.newArrayList()", "com.google.common.collect.Lists.newArrayList()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((props.size()) > (uris.size())) { com.chiorichan.Loader.getLogger().fine((((\"The length of elements in route \" + (this)) + \" is LONGER then the length of elements on the uri; \") + uris)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9100/buggy-version/src.main.groovy.com.chiorichan.http.Routes.java", "BodyUseAPI": ["com.chiorichan.Loader.getLogger().fine(java.lang.String)"], "Fixed commit": "9b3f749b87965312a5f225a722643f9e524f4dda", "Url": "https://api.github.com/repos/ChioriGreene/ChioriWebServer", "Date": "2014-09-18T14:30:34Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Lists.newArrayList()", "com.google.common.collect.Lists.newArrayList()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((props.size()) < (uris.size())) { com.chiorichan.Loader.getLogger().fine((((\"The length of elements in route \" + (this)) + \" is SHORTER then the length of elements on the uri; \") + uris)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9100/buggy-version/src.main.groovy.com.chiorichan.http.Routes.java", "BodyUseAPI": ["com.chiorichan.Loader.getLogger().fine(java.lang.String)"], "Fixed commit": "9b3f749b87965312a5f225a722643f9e524f4dda", "Url": "https://api.github.com/repos/ChioriGreene/ChioriWebServer", "Date": "2014-09-18T14:30:34Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menu) != null) { menu.findItem(R.id.menu_switchwidgetconfig_edit).setTitle(getResources().getString(R.string.edit)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1184/buggy-version/app.src.main.java.de.appphil.webcamviewerwidget.activities.SwitchWidgetConfigActivity.java", "BodyUseAPI": [], "Fixed commit": "7e258998118e0bdc77eb587d8b030c90ab0adac8", "Url": "https://api.github.com/repos/PhilippDE/WebcamViewerWidget", "Date": "2017-02-24T16:43:17Z"},
{"Line": "=>1222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lockThread) != null) lockThread.reset();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6310/buggy-version/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.ODistributedDatabaseImpl.java", "BodyUseAPI": [], "Fixed commit": "d8a0bf5ba63cc9c7bbc09c112453ef090cf32471", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-08-09T10:26:18Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tw.com.citi.catalog.web.util.AccessControlUtil.authenticateCBCUser(java.util.Map)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!authenticated) { throw new java.lang.RuntimeException(\"ID/Password is invalid.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3492/buggy-version/tw.com.citi.catalog.web.src.tw.com.citi.catalog.web.pages.JCS1600.java", "BodyUseAPI": [], "Fixed commit": "72db5ff38f7d1cb30a4c6136f5d4be78a4121b93", "Url": "https://api.github.com/repos/IISI/catalog", "Date": "2011-10-14T04:44:09Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ClubsActivity.sourceOfList.equals(ClubsActivity.SourceOfList.FAVORITES)) { ClubActivity.activityClub.onBackPressed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7447/buggy-version/src.hu.schonherz.y2014.partyappandroid.ClubActionBar.java", "BodyUseAPI": [], "Fixed commit": "3fa6468901aaf2bab7485fd520da7705f0a436f8", "Url": "https://api.github.com/repos/toroktibor/partyappandroid", "Date": "2014-02-02T20:40:17Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3361/buggy-version/src.model.Model.java", "BodyUseAPI": [], "Fixed commit": "6f90c0edcdfdd3153635547d51791b33ffab8410", "Url": "https://api.github.com/repos/StaySharp0/SimpleMerge", "Date": "2017-06-07T11:08:41Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(removing.isEmpty())) { final java.util.Iterator<com.poixson.utils.pxdb.dbWorker> it = removing.iterator(); while (it.hasNext()) { this.workers.remove(it.next()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/30/buggy-version/src.com.poixson.utils.pxdb.dbPool.java", "BodyUseAPI": ["java.util.Set<com.poixson.utils.pxdb.dbWorker>.iterator()"], "Fixed commit": "38868f44d9ca5afde37a56f2f56828b9a7656bed", "Url": "https://api.github.com/repos/GrowControl/pxnCommon", "Date": "2017-05-19T03:48:39Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clientDetailsEntity.getClientSecrets()) != null) { for (org.orcid.persistence.jpa.entities.ClientSecretEntity updatedClientSecret : clientDetailsEntity.getClientSecrets()) { updatedClientSecret.setDecryptedClientSecret(encryptionManager.decryptForInternalUse(updatedClientSecret.getClientSecret())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9126/buggy-version/orcid-core.src.main.java.org.orcid.core.manager.impl.OrcidSSOManagerImpl.java", "BodyUseAPI": ["org.orcid.persistence.jpa.entities.ClientDetailsEntity.getClientSecrets()"], "Fixed commit": "a500dca98861a1013c145ccf3d0b657247f85f22", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2014-06-17T17:05:38Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (password.matches(passwordRegExp)) { return 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7453/buggy-version/app.src.main.java.treasurehunt.mobile.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "f35208253fb928370a698a78cd2e7896ed2637a9", "Url": "https://api.github.com/repos/mrLarbi/TreasureHuntAndroid", "Date": "2015-10-27T10:44:30Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sb) > 0) glCallList(Building.dls[sb]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4706/buggy-version/src.org.jufi.villagebuilder.VB.java", "BodyUseAPI": [], "Fixed commit": "b5a12d1bb692c22ce5eb4324a41a90a2e7b0f199", "Url": "https://api.github.com/repos/jufimu12/org.jufi.villagebuilder", "Date": "2015-01-18T21:49:48Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.keycloak.models.RealmModel.getFlowByAlias(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parentFlow.getProviderId().equals(AuthenticationFlow.CLIENT_FLOW)) { f = session.getKeycloakSessionFactory().getProviderFactory(org.keycloak.authentication.ClientAuthenticator.class, provider); }else { f = session.getKeycloakSessionFactory().getProviderFactory(org.keycloak.authentication.Authenticator.class, provider); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2139/buggy-version/services.src.main.java.org.keycloak.services.resources.admin.AuthenticationManagementResource.java", "BodyUseAPI": [], "Fixed commit": "45231b69a7eff7e9f27b1ff95c03775c8773f21c", "Url": "https://api.github.com/repos/thomasdarimont/keycloak", "Date": "2016-04-12T06:04:06Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(host.hasPotentialResourceFor(job))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7889/buggy-version/simba.java.src.sim.scheduling.reserving.HostPicker.java", "BodyUseAPI": [], "Fixed commit": "68bed37cff7dc3df5741d70368b057d72736fe8e", "Url": "https://api.github.com/repos/oshai/simba", "Date": "2012-12-13T20:46:39Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (privacyLog != null) privacyLogEnabled = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/877/buggy-version/platform-infrastructure.comms-frwk.XCCommunicationMgr.src.main.java.org.societies.comm.xmpp.xc.impl.XCCommunicationMgr.java", "BodyUseAPI": [], "Fixed commit": "43abc5f7824f7023b7772caa9fe128a58184153a", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2012-11-10T19:53:08Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bedework.caldav.util.notifications.NotificationType.getNotification()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(edu.rpi.sss.util.Util.isEmpty(rc.getUpdated()))) { storedRc.setDeleted(null); storedRc.setCreated(null); storedRc.setCollectionChanges(null); for (org.bedework.caldav.util.notifications.UpdatedType u : rc.getUpdated()) { storedRc.addUpdate(u); } getNotes().update(storedNote); processed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8166/buggy-version/bw-calendar-engine-chgnote.src.main.java.org.bedework.chgnote.Notifier.java", "BodyUseAPI": ["org.bedework.caldav.util.notifications.ResourceChangeType.getUpdated()"], "Fixed commit": "7e1b1fb48916470df35a9f437dd865a1a1636aea", "Url": "https://api.github.com/repos/Bedework/bw-calendar-engine", "Date": "2013-07-11T16:14:50Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getEndpointURI()) == null) || (getEndpointURI().isEmpty())) { java.lang.String tmp_customDereferenceURI = datasetURI; if (((customDereferenceURI) != null) && (!(customDereferenceURI.isEmpty()))) { tmp_customDereferenceURI = customDereferenceURI; } testSourceBuilder.setInMemReader(org.aksw.rdfunit.io.reader.RDFReaderFactory.createDereferenceReader(tmp_customDereferenceURI)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3837/buggy-version/rdfunit-core.src.main.java.org.aksw.rdfunit.RDFUnitConfiguration.java", "BodyUseAPI": [], "Fixed commit": "782286bc9e9866ee4fdd709b70dbc2cadc24f7db", "Url": "https://api.github.com/repos/AKSW/RDFUnit", "Date": "2015-08-19T23:45:34Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.jbidwatcher.auction.server.ebay.StringTools.isNumberOnly(score))) { score = doc.getNextContentAfterContent(\"Feedback score of\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/372/buggy-version/src.com.jbidwatcher.auction.server.ebay.ebayAuction.java", "BodyUseAPI": [], "Fixed commit": "62666375560b329f31b53030a766b85ac1512f45", "Url": "https://api.github.com/repos/cyberfox/jbidwatcher", "Date": "2011-04-09T18:52:16Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (verifyStoragePermissions(this)) { com.danycabrera.signcoach.MainActivity.initGlobals(\"/sdcard\"); com.danycabrera.signcoach.FileOps.copyDatasetFiles(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3250/buggy-version/SignCoachApp.SignCoach.app.src.main.java.com.danycabrera.signcoach.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4fc3db74ae746b04ee60bd6f53dad8ca13f9401a", "Url": "https://api.github.com/repos/TaniaFerman/SignTalker", "Date": "2016-11-28T02:28:06Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["prompto.expression.IExpression.interpret(prompto.runtime.Context)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (((value != null) && ((type) instanceof prompto.type.ContainerType)) && ((value.getType()) instanceof prompto.type.ContainerType)) { ((prompto.type.ContainerType) (value.getType())).setItemType(((prompto.type.ContainerType) (type)).getItemType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8210/buggy-version/Java-Core.src.main.java.prompto.expression.CastExpression.java", "BodyUseAPI": ["((prompto.type.ContainerType) (value.getType())).setItemType(((prompto.type.ContainerType) (type)).getItemType())", "prompto.value.IValue.getType()"], "Fixed commit": "35c8d2681d4707546d220e33ef75e1f58a093fca", "Url": "https://api.github.com/repos/prompto/prompto-java", "Date": "2016-04-24T06:55:42Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getCurrentValue().equalsIgnoreCase(\"\"))) b.setText(getCurrentValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6169/buggy-version/src.SudokuFrame.java", "BodyUseAPI": [], "Fixed commit": "d60194518c4095deb1d54661a0aadf55bff79d91", "Url": "https://api.github.com/repos/chamhayden/COMP2911-ASS1", "Date": "2013-05-22T06:37:04Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["toothfairy1.Managers.TaskManager.GetTaskForTooth(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (taskForTooth != null) taskForTooth.deleteFromDb();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6191/buggy-version/src.java.toothfairy1.Models.Tooth.java", "BodyUseAPI": ["toothfairy1.Models.Task.deleteFromDb()"], "Fixed commit": "295464ce8650b153d7d82a689336e185c6af5ab8", "Url": "https://api.github.com/repos/valek177/mpi", "Date": "2015-06-24T14:11:26Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!closed) && (channel.isOpen())) { firedInboundBufferSuspended = true; pipeline.fireInboundBufferSuspended(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4224/buggy-version/transport.src.main.java.io.netty.channel.socket.aio.AioSocketChannel.java", "BodyUseAPI": [], "Fixed commit": "93fd73fbbf2054a6785bf58bcf40bfdd7c91bbfb", "Url": "https://api.github.com/repos/JiniKim/netty", "Date": "2012-12-31T15:26:52Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((B.get(((currentTag + \"+\") + firstWord))) != null) { emissionProbability = B.get(((currentTag + \"+\") + firstWord)); }else { emissionProbability = B.get((currentTag + \"+UNK\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/283/buggy-version/src.HMMTagger.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Double>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Double>.get(java.lang.String)"], "Fixed commit": "53982d56dd49aa5d9808f497010332e4b29e2c66", "Url": "https://api.github.com/repos/vgoel30/CSE-390-HW-2", "Date": "2016-03-23T05:24:59Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["textbox.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (text != \"\") { items.add(text); myAdapter.notifyDataSetChanged(); textbox.setText(\"\"); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2574/buggy-version/app.src.main.java.com.example.ysingh9481.taskmanager.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList.add(java.lang.String)"], "Fixed commit": "5ed30c7e3337197962233a2185ae7b5b26f8a406", "Url": "https://api.github.com/repos/yadwinderpalsingh/TaskManager", "Date": "2016-09-16T20:09:40Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromUser) { mImageView.setContrast((((((float) (seekBar.getProgress())) / (seekBar.getMax())) * 2) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5864/buggy-version/AugendiagnoseIdea.augendiagnoseLib.src.main.java.de.jeisfeld.augendiagnoselib.fragments.DisplayImageFragment.java", "BodyUseAPI": [], "Fixed commit": "f5edf3bf0eff320a8ea311975d0536c3fa7354f9", "Url": "https://api.github.com/repos/jeisfeld/Augendiagnose", "Date": "2016-01-13T14:01:30Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromUser) { mImageView.setBrightness((((((float) (seekBar.getProgress())) / (seekBar.getMax())) * 2) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5864/buggy-version/AugendiagnoseIdea.augendiagnoseLib.src.main.java.de.jeisfeld.augendiagnoselib.fragments.DisplayImageFragment.java", "BodyUseAPI": [], "Fixed commit": "f5edf3bf0eff320a8ea311975d0536c3fa7354f9", "Url": "https://api.github.com/repos/jeisfeld/Augendiagnose", "Date": "2016-01-13T14:01:30Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((uri.getUserInfo()) != null) { uriBuilder.setUserInfo(uri.getUserInfo()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5358/buggy-version/restcomm.restcomm.http.src.main.java.org.mobicents.servlet.restcomm.http.client.HttpRequestDescriptor.java", "BodyUseAPI": ["org.apache.http.client.utils.URIBuilder.setUserInfo(java.lang.String)", "java.net.URI.getUserInfo()"], "Fixed commit": "3a592b6467dbe5f5707f839d24aa9733b271ab20", "Url": "https://api.github.com/repos/Mobicents/RestComm", "Date": "2013-11-27T12:28:53Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mockServer) != null) { mockServer.stopServer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7465/buggy-version/src.com.qa.framework.factory.ExecutorFactory.java", "BodyUseAPI": [], "Fixed commit": "96ddfe296899333ace377667e2794ea65199363b", "Url": "https://api.github.com/repos/lwfwind/smart-api-framework", "Date": "2016-07-27T06:43:47Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.isRemote) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7426/buggy-version/src.pneumaticCraft.common.heat.HeatExchangerLogic.java", "BodyUseAPI": [], "Fixed commit": "a83f7d4a729ba9a9786f93baa6b0ffcd0eeb4bf3", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-09-17T15:54:55Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ledArray1) { }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5461/buggy-version/src.MiscTaskJoystick.java", "BodyUseAPI": [], "Fixed commit": "78f43e5b8e7d6ec8ed2527efc95b0a5ad132468b", "Url": "https://api.github.com/repos/rajasjambekar/ROV-Controller", "Date": "2016-04-07T14:21:30Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ledArray2) { }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5461/buggy-version/src.MiscTaskJoystick.java", "BodyUseAPI": [], "Fixed commit": "78f43e5b8e7d6ec8ed2527efc95b0a5ad132468b", "Url": "https://api.github.com/repos/rajasjambekar/ROV-Controller", "Date": "2016-04-07T14:21:30Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getGeneratedDirectory().mkdirs())) { throw new org.apache.maven.plugin.MojoExecutionException((\"Unable to create directory \" + (getGeneratedDirectory().getAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5988/buggy-version/hk2-configuration.persistence.hk2-xml-dom.config-generator.src.main.java.org.jvnet.hk2.config.generator.maven.AbstractConfigGeneratorMojo.java", "BodyUseAPI": [], "Fixed commit": "ff9b0d3d5688fc5c8238a08c7e0b493af337a3f0", "Url": "https://api.github.com/repos/javaee/hk2", "Date": "2015-05-06T19:18:53Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isFolder()) { throw new java.io.IOException((\"Can't write. This is folder: \" + (this))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/797/buggy-version/scarabei-red.src.com.jfixby.scarabei.red.filesystem.AbstractRedFile.java", "BodyUseAPI": [], "Fixed commit": "10f6b84376dcb56f89b6c91a199251c08fcad9b1", "Url": "https://api.github.com/repos/JFixby/ScarabeiRed", "Date": "2017-07-23T20:29:39Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (onAndroid()) { fullScreen = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1847/buggy-version/gdx2d-desktop.src.hevs.gdx2d.lib.PortableApplication.java", "BodyUseAPI": [], "Fixed commit": "148e7e6cf097de55400ee93154f819f4d276d3c5", "Url": "https://api.github.com/repos/hevs-isi/gdx2d", "Date": "2015-05-04T12:27:20Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item.isLive) { item.time = mTimer.currMillisecond; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4031/buggy-version/DanmakuFlameMaster.src.main.java.master.flame.danmaku.controller.DrawTask.java", "BodyUseAPI": [], "Fixed commit": "a7817a1e7588f99eb3f3fde6b6ee2ba277bb4d7b", "Url": "https://api.github.com/repos/aojiaotage/DanmakuFlameMaster", "Date": "2014-11-23T12:53:10Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((metadata) != null) { metadata.close(); metadata = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6415/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.record.ODatabaseRecordAbstract.java", "BodyUseAPI": [], "Fixed commit": "1732fe01accd95b07b3b13d0dfee92bcd91ac0df", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-10-28T09:14:17Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8276/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "fce13cae9a1e5c44ddfdafeb0875f242695a001f", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mp3bib.backend.mp3library.Database.getCollection()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((collection.count()) <= 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/383/buggy-version/src.main.java.com.mp3bib.backend.mp3library.Database.java", "BodyUseAPI": [], "Fixed commit": "7785c4d75abd411ed60d0de5f355a77e1f3f5bc2", "Url": "https://api.github.com/repos/Saphs/Mp3Bib-Java", "Date": "2017-11-15T21:49:36Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((onBoard(currentX, currentY)) && (gb[currentX][currentY].isPlaced())) if (gb[currentX][currentY].getColor().equals(colorIn)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1593/buggy-version/Othello-p2-v1.src.game.Board.java", "BodyUseAPI": ["gb[currentX][currentY].getColor().equals(java.lang.String)", "gb[currentX][currentY].getColor()"], "Fixed commit": "80a002247a988f1504a3545ab21bd677ce296b3b", "Url": "https://api.github.com/repos/garrisonhenkle/OthelloProject2", "Date": "2017-10-11T18:21:17Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dna.series.SeriesGeneration.singleFile) { dna.profiler.Profiler.currentFileSystem = dna.series.SeriesGeneration.writeFileSystem; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5635/buggy-version/src.dna.profiler.Profiler.java", "BodyUseAPI": [], "Fixed commit": "a8133174a8fcd497539cde59424ab90db092aa58", "Url": "https://api.github.com/repos/NicoHaase/DNA", "Date": "2014-05-06T13:44:53Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getSex()) != null) pStored.setSex(p.getSex());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1514/buggy-version/service01-DataService.src.myhealthylife.dataservice.soap.DataServiceImpl.java", "BodyUseAPI": ["myhealthylife.dataservice.model.entities.Person.getSex()", "myhealthylife.dataservice.model.entities.Person.setSex(p.getSex())"], "Fixed commit": "e355624aa7f993b57d99a8f9f0995735d42165bd", "Url": "https://api.github.com/repos/MyHealthyLife/service01-DataService", "Date": "2017-02-27T08:40:06Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.ycdev.android.lib.common.internalapi.android.os.PowerManagerIA.sVersion_goToSleep) == (me.ycdev.android.lib.common.internalapi.android.os.PowerManagerIA.API_VERSION_1)) { me.ycdev.android.lib.common.internalapi.android.os.PowerManagerIA.sMtd_goToSleep.invoke(service, time, me.ycdev.android.lib.common.internalapi.android.os.PowerManagerIA.GO_TO_SLEEP_REASON_USER); }else if ((me.ycdev.android.lib.common.internalapi.android.os.PowerManagerIA.sVersion_goToSleep) == (me.ycdev.android.lib.common.internalapi.android.os.PowerManagerIA.API_VERSION_2)) { me.ycdev.android.lib.common.internalapi.android.os.PowerManagerIA.sMtd_goToSleep.invoke(service, time, me.ycdev.android.lib.common.internalapi.android.os.PowerManagerIA.GO_TO_SLEEP_REASON_USER, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9142/buggy-version/lib.src.main.java.me.ycdev.android.lib.common.internalapi.android.os.PowerManagerIA.java", "BodyUseAPI": [], "Fixed commit": "b85bc6213a0576240f97b66b7d51d020349d1ef1", "Url": "https://api.github.com/repos/yongce/AndroidLib", "Date": "2014-11-20T15:48:53Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRootBalanced) return (isBalanced(root.left)) && (isBalanced(root.right)); else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7890/buggy-version/cracking-the-coding-interview.04-trees-and-graphs.P0401.java", "BodyUseAPI": [], "Fixed commit": "ac6b77e16ecfbdd6743e394d494bfd6b266874fc", "Url": "https://api.github.com/repos/zw267/coding-practice", "Date": "2013-09-29T07:20:19Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((GriefPrevention.instance.config_claims_blocksAccruedPerHour) <= 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6957/buggy-version/src.me.ryanhamshire.GriefPrevention.DeliverClaimBlocksTask.java", "BodyUseAPI": [], "Fixed commit": "b1b8d537c306d720931319dbc3b8e3ebe64d4f6c", "Url": "https://api.github.com/repos/wolfwork/GriefPrevention", "Date": "2015-07-08T20:33:47Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstToolpath == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/651/buggy-version/src.main.java.org.cirqwizard.gcode.TraceGCodeGenerator.java", "BodyUseAPI": [], "Fixed commit": "2fc86f131d5b968ceca41b6225ddf632c0e8af2b", "Url": "https://api.github.com/repos/simonsalykov/cirqwizard", "Date": "2015-10-27T10:11:07Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (buffReader != null) buffReader.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8173/buggy-version/rega-genotype.src.main.java.rega.genotype.utils.FileUtil.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "400479cbe9acef5c01a474939d6945b8e1af296e", "Url": "https://api.github.com/repos/rega-cev/rega-genotype", "Date": "2016-05-12T14:23:42Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentLocation) != null) { android.util.Log.d(com.havrylyuk.elevation.activity.MainActivity.LOG_TAG, (\"currentLocation.getAltitude()=\" + (currentLocation.getAltitude()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1061/buggy-version/app.src.main.java.com.havrylyuk.elevation.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1745b22ab33657cc5dcdc7e1605766a409cc47af", "Url": "https://api.github.com/repos/graviton57/Elevation", "Date": "2017-03-25T23:08:17Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentLocation) != null) { addLocationMarker(currentLocation.getLatitude(), currentLocation.getLongitude()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1061/buggy-version/app.src.main.java.com.havrylyuk.elevation.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1745b22ab33657cc5dcdc7e1605766a409cc47af", "Url": "https://api.github.com/repos/graviton57/Elevation", "Date": "2017-03-25T23:08:17Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (createBindingFinal) { configuration.getBindingConfigurations().add(bindingConfiguration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4423/buggy-version/ee.src.main.java.org.jboss.as.ee.component.ResourceInjectionAnnotationParsingProcessor.java", "BodyUseAPI": [], "Fixed commit": "dc45534274aac551f28f007bc6c521291eabd5c5", "Url": "https://api.github.com/repos/jfclere/jboss-as", "Date": "2011-06-23T03:57:09Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalAvlPoints <= 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5450/buggy-version/se24_PT04.src.sg.edu.nus.iss.ssa.validation.OrderValidator.java", "BodyUseAPI": [], "Fixed commit": "3356f3dd1804a1224f8ea3e3765974f6fd35a51e", "Url": "https://api.github.com/repos/RonnSanji/USSA_SOLUTION_TEAM4", "Date": "2016-04-05T14:49:16Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) != 0) builder.deleteCharAt(((builder.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1019/buggy-version/ChatBroker.src.br.ufrj.tp.protocol.ProtocolManager.java", "BodyUseAPI": [], "Fixed commit": "5d182bfd4e4ba0fd86a27d6568826e00207c8436", "Url": "https://api.github.com/repos/ramirezjpdf/tp2014-2_Chat", "Date": "2014-09-25T14:12:21Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataLine.contains(\"Default Gateway\")) { java.lang.String[] data = dataLine.split(\":\", 2); if (((data.length) > 1) && (!(data[1].isEmpty()))) { networkDataMap.put((\"received_packets_\" + count), receivedPackets); networkDataMap.put((\"transmitted_packets_\" + count), transmittedPackets); networkDataMap.put((\"received_bytes_\" + count), receivedBytes); networkDataMap.put((\"transmitted_bytes_\" + count), transmittedBytes); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5610/buggy-version/src.main.java.org.jutils.jhardware.info.network.windows.WindowsNetworkInfo.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String,int)"], "Fixed commit": "8d19f79b694f9a14e02117802d2a5cbf4e9e144e", "Url": "https://api.github.com/repos/profesorfalken/jHardware", "Date": "2016-04-17T13:28:25Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tilePos.z) < 0) { chunkPos.z -= 1; tilePos.z += chunkSize - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/166/buggy-version/haju3d-client.src.main.java.fi.haju.haju3d.client.ui.WorldManager.java", "BodyUseAPI": [], "Fixed commit": "b0a25317dffea996d0ec7b1e25e6dc3198f52870", "Url": "https://api.github.com/repos/jvmakine/haju3d", "Date": "2013-10-14T19:26:31Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tilePos.x) < 0) { chunkPos.x -= 1; tilePos.x += chunkSize - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/166/buggy-version/haju3d-client.src.main.java.fi.haju.haju3d.client.ui.WorldManager.java", "BodyUseAPI": [], "Fixed commit": "b0a25317dffea996d0ec7b1e25e6dc3198f52870", "Url": "https://api.github.com/repos/jvmakine/haju3d", "Date": "2013-10-14T19:26:31Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tilePos.y) < 0) { chunkPos.y -= 1; tilePos.y += chunkSize - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/166/buggy-version/haju3d-client.src.main.java.fi.haju.haju3d.client.ui.WorldManager.java", "BodyUseAPI": [], "Fixed commit": "b0a25317dffea996d0ec7b1e25e6dc3198f52870", "Url": "https://api.github.com/repos/jvmakine/haju3d", "Date": "2013-10-14T19:26:31Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(toParse.contains(\".\"))) { toParse = new java.lang.StringBuilder(toParse).insert(((toParse.lastIndexOf(\":\")) + 3), \".000\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/209/buggy-version/core.src.main.java.org.jclouds.date.internal.SimpleDateFormatDateService.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.lang.StringBuilder.insert(int,java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "7eb937dbdc28739cea7f7c6052d830f966542282", "Url": "https://api.github.com/repos/florianleibert/jclouds", "Date": "2013-08-08T21:45:43Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isStatic) { template.addTextSegment(\"static\"); template.addTextSegment(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5183/buggy-version/Dart.src.com.jetbrains.lang.dart.ide.generation.CreateGetterSetterFix.java", "BodyUseAPI": [], "Fixed commit": "30c1da81167d82a593147c211186d7b2023e2b57", "Url": "https://api.github.com/repos/stevemessick/intellij-plugins", "Date": "2016-02-08T18:04:38Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (asmEnable) { com.alibaba.fastjson.annotation.JSONType jsonType = clazz.getAnnotation(com.alibaba.fastjson.annotation.JSONType.class); if ((jsonType != null) && (!(jsonType.asm()))) { asmEnable = false; } if (asmEnable) { java.lang.Class<?> superClass = com.alibaba.fastjson.util.JavaBeanInfo.getBuilderClass(jsonType); if (superClass == null) { superClass = clazz; } for (; ;) { if (!(java.lang.reflect.Modifier.isPublic(superClass.getModifiers()))) { asmEnable = false; break; } superClass = superClass.getSuperclass(); if ((superClass == (java.lang.Object.class)) || (superClass == null)) { break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/931/buggy-version/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java", "BodyUseAPI": [], "Fixed commit": "5cb53781733b5df05c3e26f1f76381f9aa96c4df", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-15T18:23:52Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m.isBridge()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1210/buggy-version/core.src.main.java.org.kohsuke.stapler.ClassDescriptor.java", "BodyUseAPI": [], "Fixed commit": "99b9edbf682729a971c21ca7a8fafd4cf30b6d90", "Url": "https://api.github.com/repos/stapler/stapler", "Date": "2016-03-02T07:40:14Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sorter.getOptions().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (predicateObject instanceof com.psddev.dari.db.Predicate) { sortPredicate = ((com.psddev.dari.db.Predicate) (predicateObject)); }else { @java.lang.SuppressWarnings(\"unchecked\") java.util.Map<java.lang.String, java.lang.Object> simpleValues = ((java.util.Map<java.lang.String, java.lang.Object>) (predicateObject)); com.psddev.dari.db.ObjectType type = com.psddev.dari.db.ObjectType.getInstance(com.psddev.dari.util.ObjectUtils.to(java.util.UUID.class, simpleValues.get(StateValueUtils.TYPE_KEY))); java.lang.Object object = type.createObject(com.psddev.dari.util.ObjectUtils.to(java.util.UUID.class, simpleValues.get(StateValueUtils.ID_KEY))); com.psddev.dari.db.State state = com.psddev.dari.db.State.getInstance(predicateObject); state.putAll(simpleValues); if (object instanceof com.psddev.dari.db.Predicate) { sortPredicate = ((com.psddev.dari.db.Predicate) (object)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2778/buggy-version/db.src.main.java.com.psddev.dari.db.SolrDatabase.java", "BodyUseAPI": ["com.psddev.dari.db.State.getInstance(java.lang.Object)"], "Fixed commit": "b6f0bbee6d85af4757145df764228a9ae4fa3358", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2015-02-20T19:03:24Z"},
{"Line": "=>2017", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (description != null) { params.put(\"description\", description); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2669/buggy-version/src.com.minxing.client.app.AppAccount.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "07a163fb5917ba17e66cfaffdd81a3685d223321", "Url": "https://api.github.com/repos/dehuinet/minxing_java_sdk", "Date": "2015-12-01T14:54:26Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((velocityPID.getSetpoint()) < 0) { velocity = -velocity; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1834/buggy-version/src.org.usfirst.frc3824.HolonomicDrive.subsystems.Forklift.java", "BodyUseAPI": [], "Fixed commit": "fbaccb9e7dbe552ac6839cc94a0f073df8816ea1", "Url": "https://api.github.com/repos/HVA-FRC-3824/HolonomicDrive", "Date": "2015-03-18T03:59:52Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.android.mig.bakingapp.fragments.StepDetailFragment.isTabletFlag)) { onRotationAction(getResources().getConfiguration()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9067/buggy-version/app.src.main.java.com.android.mig.bakingapp.fragments.StepDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "3a3f2ea132f2a94129e36a415047e439917b0c73", "Url": "https://api.github.com/repos/msaenz424/BakingApp", "Date": "2017-06-25T20:30:58Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pathName == null) { pathName = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6769/buggy-version/src.main.java.com.elmakers.mine.bukkit.action.BaseShopAction.java", "BodyUseAPI": [], "Fixed commit": "69428b805ca5f3f25bd2eb40ed5351a8f1cda0ac", "Url": "https://api.github.com/repos/elBukkit/MagicLib", "Date": "2015-12-05T03:54:09Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == p) dt = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4760/buggy-version/Actor.java", "BodyUseAPI": [], "Fixed commit": "156d09a6d647c2e13e1a6dbdd3e4cfbdec6e140a", "Url": "https://api.github.com/repos/severyn-kozak/FinalProject", "Date": "2013-06-02T05:49:11Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isLocked())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7406/buggy-version/src.main.java.io.jboot.component.redis.JbootRedisLock.java", "BodyUseAPI": [], "Fixed commit": "c2449e17bf86be3460dab809d42a005fc07180e3", "Url": "https://api.github.com/repos/yangfuhai/jboot", "Date": "2017-07-27T02:38:35Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.pressgang.ccms.model.utils.TopicUtilities.getMinHashes(topic.getTopicXML(),java.util.List<org.jboss.pressgang.ccms.model.MinHashXOR>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(minHash.getMinHash().equals(minHashes.get(funcId)))) { minHash.setMinHash(minHashes.get(funcId)); retValue = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4106/buggy-version/src.main.java.org.jboss.pressgang.ccms.model.utils.TopicUtilities.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.model.MinHash.setMinHash(java.lang.Integer)", "java.util.Map<java.lang.Integer, java.lang.Integer>.get(java.lang.Integer)"], "Fixed commit": "986c2a1809b1a0c57f609f2f29100fdb5ab7dbce", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSModel", "Date": "2014-03-23T20:16:53Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.facebook.AccessToken.getCurrentAccessToken()) == null) { printAlertDialog(\"You must log in to view attendees\"); }else { android.content.Intent intent = new android.content.Intent(this, com.attender.AttendeesPage.class); intent.putExtra(\"eventId\", currEvent.getId()); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8984/buggy-version/Attender.app.src.main.java.com.attender.Event_Page_Activity.java", "BodyUseAPI": [], "Fixed commit": "24df9e80f75a0c7d7d8bd42ccebb724e46fc2cea", "Url": "https://api.github.com/repos/denbedilov/attender-app", "Date": "2015-05-20T22:37:44Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) getSupportActionBar().setDisplayHomeAsUpEnabled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7624/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.activities.ListActivity.java", "BodyUseAPI": [], "Fixed commit": "1d0808ec30bf817404405e7db74a21b7cfe0446e", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-12-22T15:16:09Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(name.isEmpty())) && ((name.trim().length()) > 0)) this.name = name.trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7422/buggy-version/computer-database.src.main.java.com.excilys.cdb.controller.dto.ComputerDTO.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "684620bfb585fd4d54097c326fe028dd65aa10dc", "Url": "https://api.github.com/repos/ahammani/computer-database", "Date": "2015-05-12T16:03:28Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((sHistory.length()) > 0) && ((sDisplay.length()) > 0)) { this.del(); }else { sHistory = \"0\"; sDisplay = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3415/buggy-version/app.src.main.java.nyc.c4q.rusili.simplecalculator.Main.java", "BodyUseAPI": [], "Fixed commit": "faa2c56f50d5463fae5dedfc0b345d928928fff0", "Url": "https://api.github.com/repos/rusili/SimpleCalculator", "Date": "2016-10-18T04:55:06Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ignoreMalformed.value()) { return; }else { throw new java.lang.IllegalArgumentException(((\"[scaled_float] only supports finite values, but got [\" + doubleValue) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8996/buggy-version/core.src.main.java.org.elasticsearch.index.mapper.ScaledFloatFieldMapper.java", "BodyUseAPI": [], "Fixed commit": "643700a873e73801424d14964a4cdedbfe511238", "Url": "https://api.github.com/repos/elastic/elasticsearch", "Date": "2017-07-31T14:14:30Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["view.Listener.getSeedFileBy(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sf == null) { seedingFile.getItems().add(new view.SeedFile(selectedFile.getName(), selectedFile.getPath())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8994/buggy-version/FileTransfer.src.view.app.java", "BodyUseAPI": [], "Fixed commit": "dd2e9b393dcbde8fc17500904a79b49c7186d48c", "Url": "https://api.github.com/repos/HCB2-NPT/BitTorrent-Like", "Date": "2016-10-29T02:56:55Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isServiceConnected)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2219/buggy-version/src.com.scutchenhao.tachograph.MainService.java", "BodyUseAPI": [], "Fixed commit": "fee501236a0ae1d59eb221e2b5c300ec2fe19e16", "Url": "https://api.github.com/repos/SickWorm/tachograph-for-android", "Date": "2014-05-05T13:26:37Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pList) != null) { setListAdapter(new android.widget.ArrayAdapter<java.lang.String>(this, android.R.layout.simple_dropdown_item_1line, pList)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5251/buggy-version/seniorproject.src.edu.fiu.cs.seniorproject.MyPlacesActivity.java", "BodyUseAPI": [], "Fixed commit": "b3c8f0b4447f64551777b014ce0868b39a066d46", "Url": "https://api.github.com/repos/seniorprojectandroid/seniorproject", "Date": "2012-11-09T00:46:12Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.fiu.cs.seniorproject.MyEventsActivity.findViewById(android.R.id.text1)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (tv != null) { tv.setText(\"No events\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5251/buggy-version/seniorproject.src.edu.fiu.cs.seniorproject.MyEventsActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "b3c8f0b4447f64551777b014ce0868b39a066d46", "Url": "https://api.github.com/repos/seniorprojectandroid/seniorproject", "Date": "2012-11-09T00:46:12Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.lang.Boolean) return !(railo.runtime.op.Caster.toBoolean(value));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6691/buggy-version/railo-java.railo-core.src.railo.runtime.functions.decision.IsEmpty.java", "BodyUseAPI": ["railo.runtime.op.Caster.toBoolean(java.lang.Object)"], "Fixed commit": "05b6555930b2c9c5fc21a968b7e92a5a90cd3bed", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-04-30T10:01:14Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isAuthenticationFailedError(e)) { e.printStackTrace(listener.error((\"Failed to check out \" + (location.remote)))); return null; }else { listener.error(\"Subversion checkout has been canceled\"); throw ((java.lang.InterruptedException) (new java.lang.InterruptedException().initCause(e))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3645/buggy-version/src.main.java.hudson.scm.subversion.CheckoutUpdater.java", "BodyUseAPI": ["org.tmatesoft.svn.core.SVNCancelException.printStackTrace(listener.error((\"Failed to check out \" + (location.remote))))", "java.lang.InterruptedException.initCause(org.tmatesoft.svn.core.SVNCancelException)"], "Fixed commit": "7155ad99177e88f1083afdacbf0d2fbc3f39d425", "Url": "https://api.github.com/repos/astellingwerf/subversion-plugin", "Date": "2012-11-22T22:02:13Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isAuthenticationFailedError(e)) { e.printStackTrace(listener.error((\"Failed to check out \" + (location.remote)))); return null; }else { listener.error(\"Subversion update has been canceled\"); throw ((java.lang.InterruptedException) (new java.lang.InterruptedException().initCause(e))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3645/buggy-version/src.main.java.hudson.scm.subversion.UpdateUpdater.java", "BodyUseAPI": ["java.lang.InterruptedException.initCause(org.tmatesoft.svn.core.SVNCancelException)", "org.tmatesoft.svn.core.SVNCancelException.printStackTrace(listener.error((\"Failed to check out \" + (location.remote))))"], "Fixed commit": "7155ad99177e88f1083afdacbf0d2fbc3f39d425", "Url": "https://api.github.com/repos/astellingwerf/subversion-plugin", "Date": "2012-11-22T22:02:13Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nibiru.mobile.core.api.http.HttpStatus.valueOf(response.getStatusCode())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((status.is4xxClientError()) || (status.is5xxServerError())) { deferred.reject(new org.nibiru.mobile.core.api.http.HttpException(status, response.getStatusText())); }else { java.lang.String text = response.getText(); if ((text != null) && ((text.length()) == 0)) { text = null; } deferred.resolve(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7156/buggy-version/main.org.nibiru.mobile.gwt.src.main.java.org.nibiru.mobile.gwt.http.RequestBuilderHttpManager.java", "BodyUseAPI": ["org.nibiru.mobile.core.api.async.Deferred<java.lang.String, org.nibiru.mobile.core.api.http.HttpException>.reject(org.nibiru.mobile.core.api.http.HttpException)"], "Fixed commit": "900dd9ce74a032a39b457c8b56998c2dc52216cd", "Url": "https://api.github.com/repos/NibiruOS/mobile", "Date": "2017-02-24T19:13:31Z"},
{"Line": "=>560", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.util.HashSet<databank.WordForm>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (wordforms != null) for (databank.WordForm wordform : wordforms) { databank.EndingRule endingrule = wordform.endingRule; if (((((endingrule.type) == (endingRuleStat.type)) && ((endingrule.wcase) == (endingRuleStat.wcase))) && ((endingrule.gender) == (endingRuleStat.gender))) && ((endingrule.sing_pl) == (endingRuleStat.sing_pl))) { wordform.setRelationIndex((((float) (endingRuleStat.index)) / totalCount)); updatedWords.add(getWord(wordform.wordID)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4999/buggy-version/src.databank.Vocabulary.java", "BodyUseAPI": [], "Fixed commit": "66e14a80f4ceeb37b9f2373cd1d1ec81502f8f68", "Url": "https://api.github.com/repos/sergiojr/Knowledge_App", "Date": "2013-01-05T17:28:05Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wordformsByWordformstring) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4999/buggy-version/src.databank.Vocabulary.java", "BodyUseAPI": [], "Fixed commit": "66e14a80f4ceeb37b9f2373cd1d1ec81502f8f68", "Url": "https://api.github.com/repos/sergiojr/Knowledge_App", "Date": "2013-01-05T17:28:05Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.illinois.cs.cogcomp.wsd.embedding.EmbeddingSpace.getEmbeddingOrNull(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (senseEmbedding == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4524/buggy-version/src.main.java.edu.illinois.cs.cogcomp.wsd.annotators.WordSenseAnnotator.java", "BodyUseAPI": [], "Fixed commit": "45815c2628ee33f077ed837d9f37bbcada73a673", "Url": "https://api.github.com/repos/haowu4/WordSenseAnnotator", "Date": "2017-01-18T02:22:51Z"},
{"Line": "=>2328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getType().typeOf(eval.getCurrentEnvt(),boolean,org.rascalmpl.interpreter.IEvaluator<org.rascalmpl.interpreter.result.Result<io.usethesource.vallang.IValue>>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (t instanceof org.rascalmpl.interpreter.types.NonTerminalType) { value = ((org.rascalmpl.values.uptr.IRascalValueFactory) (eval.getValueFactory())).reifiedType(((org.rascalmpl.interpreter.types.NonTerminalType) (t)).getSymbol(), gr); }else { value = new org.rascalmpl.interpreter.TypeReifier(eval.__getVf()).typeToValue(t, eval.getCurrentEnvt().getStore(), gr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4983/buggy-version/src.org.rascalmpl.semantics.dynamic.Expression.java", "BodyUseAPI": ["org.rascalmpl.interpreter.TypeReifier.typeToValue(io.usethesource.vallang.type.Type,eval.getCurrentEnvt().getStore(),io.usethesource.vallang.IMap)"], "Fixed commit": "b798a2a55c071893f719dacda9cbf80939a23b62", "Url": "https://api.github.com/repos/usethesource/rascal", "Date": "2017-11-15T09:42:47Z"},
{"Line": "=>2964", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e instanceof org.apache.hadoop.hbase.io.hfile.CorruptHFileException) || (e instanceof java.io.FileNotFoundException)) { throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7924/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.RSRpcServices.java", "BodyUseAPI": [], "Fixed commit": "90d53af6eb17ec17cf14e894b2a309b5b9ce732a", "Url": "https://api.github.com/repos/JingchengDu/hbase", "Date": "2016-11-15T08:14:10Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["messageQueue.getBrokerName().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (3 > (brokerNameSegments.length)) { com.alibaba.rocketmq.client.producer.selector.SelectMessageQueueByDataCenter.LOGGER.warn((\"Issue: broker name is not properly named. Check \" + (messageQueue.getBrokerName()))); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1358/buggy-version/rocketmq-client.src.main.java.com.alibaba.rocketmq.client.producer.selector.SelectMessageQueueByDataCenter.java", "BodyUseAPI": [], "Fixed commit": "422a958924d38a56c9c7245fc242fdb6e91a7c48", "Url": "https://api.github.com/repos/lizhanhui/Alibaba_RocketMQ", "Date": "2014-12-17T07:31:06Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mPriceView.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(priceString))) { price = java.lang.Integer.parseInt(priceString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7539/buggy-version/app.src.main.java.com.example.android.lipstickinventory.DetailActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "dbc8047fc254e93eaeef6d168a40b21d19eb2032", "Url": "https://api.github.com/repos/aparna-jay-master/Lipstick-Inventory", "Date": "2017-07-15T02:05:50Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (lsc != null) lsc.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1929/buggy-version/src.logic.Database.java", "BodyUseAPI": ["java.util.Scanner.close()"], "Fixed commit": "216f2da63c5d26b205e1efb509334646e27a6ea9", "Url": "https://api.github.com/repos/nfayazov/PolyCrash", "Date": "2017-12-01T04:28:58Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fsc != null) fsc.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1929/buggy-version/src.logic.Database.java", "BodyUseAPI": ["java.util.Scanner.close()"], "Fixed commit": "216f2da63c5d26b205e1efb509334646e27a6ea9", "Url": "https://api.github.com/repos/nfayazov/PolyCrash", "Date": "2017-12-01T04:28:58Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["aschantz.restaurantapp.model.Friend.getUid()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (getUid().equals(postUid)) { friendsAdapter.addFriend(newFriend, dataSnapshot.getKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7897/buggy-version/app.src.main.java.aschantz.restaurantapp.FriendsActivity.java", "BodyUseAPI": [], "Fixed commit": "5fd4e359e90d913b419ae8eee80734b444a6438d", "Url": "https://api.github.com/repos/abbyschantz/RestaurantApp", "Date": "2016-12-11T21:49:54Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Object>.get(getAdapterPosition())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (item instanceof com.github.androidpirate.flipcard.model.Deck) { com.github.androidpirate.flipcard.model.Deck deck = ((com.github.androidpirate.flipcard.model.Deck) (item)); mListener.onItemClick(deck); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3847/buggy-version/app.src.main.java.com.github.androidpirate.flipcard.adapter.DeckListAdapter.java", "BodyUseAPI": [], "Fixed commit": "4552715aa6ad23a8c6733d8dce6a5cf731e2a47c", "Url": "https://api.github.com/repos/androidpirate/FlipIt", "Date": "2017-11-18T22:02:41Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) { file.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6211/buggy-version/CustomSpawners.src.com.github.thebiologist13.FileManager.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "7501de81ca60753f1fc0681ba7a7ed639211494d", "Url": "https://api.github.com/repos/thebiologist13/CustomSpawners", "Date": "2013-01-14T00:57:55Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.unibe.ese.shopnote.server.database.NeodatisDatabaseManager.getRequestContainer(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (container != null) { requests = container.popRequests(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/169/buggy-version/Code.ShoppingListServer.src.ch.unibe.ese.shopnote.server.database.NeodatisDatabaseManager.java", "BodyUseAPI": ["ch.unibe.ese.shopnote.server.core.RequestContainer.popRequests()"], "Fixed commit": "c75d09d82f62e38d9888c6e2d3f7e4ab64f7ae57", "Url": "https://api.github.com/repos/ese-unibe-ch/ese2013-team8", "Date": "2013-12-03T21:48:42Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.debug.core.IJavaBreakpoint.getTypeName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (type != null) { int innerClassIndex = type.indexOf('$'); if (innerClassIndex > 0) { type = type.substring(0, innerClassIndex); } return (type.replace('.', '/')) + \".java\"; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8348/buggy-version/com.github.sdbg.integration.jdt.src.com.github.sdbg.integration.jdt.JDTBreakpointPathResolver.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int,int)"], "Fixed commit": "31b95fc5fa46bd695b4d17968aff03bb57a764b6", "Url": "https://api.github.com/repos/sdbg/sdbg", "Date": "2015-02-24T17:46:12Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (path != null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8348/buggy-version/com.github.sdbg.debug.core.src.com.github.sdbg.debug.core.internal.webkit.model.BreakpointManager.java", "BodyUseAPI": [], "Fixed commit": "31b95fc5fa46bd695b4d17968aff03bb57a764b6", "Url": "https://api.github.com/repos/sdbg/sdbg", "Date": "2015-02-24T17:46:12Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((shardResolver.getNumberOfShards()) % (shardedDataSource.getShardsPerDataSource())) > 0) physicalShards++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1990/buggy-version/src.main.java.com.gaoshin.dbshard2.impl.BaseDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "3ec4db8096a30917f52a74590a1e7b4c6239e49f", "Url": "https://api.github.com/repos/zhangyongjiang/dbshard2", "Date": "2016-03-18T21:22:06Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(failed.isEmpty())) { model.addAttribute(\"failed\", true); model.addAttribute(\"isAuth\", false); }else model.addAttribute(\"isAuth\", true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2262/buggy-version/src.main.java.ro.academyplus.controller.AwesomeController.java", "BodyUseAPI": [], "Fixed commit": "fe080a9935ad2ff8b67786bb3f3d257e85d2dfa0", "Url": "https://api.github.com/repos/anflorea/RPGWeb", "Date": "2016-03-08T12:39:58Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((0 < t0) && (t0 < 1))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6538/buggy-version/src.Classification.ShapePotentialClassifier.java", "BodyUseAPI": [], "Fixed commit": "03df5cd5d33192767bcea90da130a52027df6d68", "Url": "https://api.github.com/repos/Qbyte248/MechanicalShapeRecognition", "Date": "2016-12-02T11:02:57Z"},
{"Line": "=>1047", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (method.isStatic()) receiver = expressionMaker.makeStaticName(codehint.utils.EclipseUtils.sanitizeTypename(getShortestTypename(method.declaringType().name())), ((org.eclipse.jdt.debug.core.IJavaReferenceType) (codehint.utils.EclipseUtils.getTypeAndLoadIfNeeded(method.declaringType().name(), stack, target, typeCache))), thread); else if (isSubtype && (((com.sun.jdi.ReferenceType) (((org.eclipse.jdt.internal.debug.core.model.JDIType) (e.getStaticType())).getUnderlyingType())).methodsByName(method.name(), method.signature()).isEmpty())) { org.eclipse.jdt.debug.core.IJavaType downcastType = getDowncastTypeName(method); if (downcastType != null) receiver = expressionMaker.makeParenthesized(downcast(receiver, downcastType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8047/buggy-version/codehint-plugin.src.codehint.exprgen.ExpressionGenerator.java", "BodyUseAPI": ["codehint.exprgen.ExpressionGenerator.getShortestTypename(java.lang.String)", "codehint.exprgen.ExpressionGenerator.getDowncastTypeName(com.sun.jdi.Method)", "com.sun.jdi.Method.name()", "java.util.List<com.sun.jdi.Method>.isEmpty()", "codehint.utils.EclipseUtils.getTypeAndLoadIfNeeded(java.lang.String,org.eclipse.jdt.debug.core.IJavaStackFrame,org.eclipse.jdt.debug.core.IJavaDebugTarget,codehint.exprgen.TypeCache)", "com.sun.jdi.ReferenceType.name()", "codehint.utils.EclipseUtils.sanitizeTypename(java.lang.String)", "com.sun.jdi.ReferenceType.name()", "com.sun.jdi.Method.declaringType()", "com.sun.jdi.Method.signature()", "codehint.exprgen.ExpressionMaker.makeStaticName(codehint.utils.EclipseUtils.sanitizeTypename(getShortestTypename(method.declaringType().name())),((org.eclipse.jdt.debug.core.IJavaReferenceType) (codehint.utils.EclipseUtils.getTypeAndLoadIfNeeded(method.declaringType().name(), stack, target, typeCache))),org.eclipse.jdt.debug.core.IJavaThread)", "((com.sun.jdi.ReferenceType) (((org.eclipse.jdt.internal.debug.core.model.JDIType) (e.getStaticType())).getUnderlyingType())).methodsByName(java.lang.String,java.lang.String)", "com.sun.jdi.Method.declaringType()"], "Fixed commit": "70e4468a2e1d89cfef0de74b5595d9a4b0ba1fc7", "Url": "https://api.github.com/repos/jgalenson/codehint", "Date": "2013-12-07T18:53:32Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { com.kcode.lib.utils.ToastUtils.show(getActivity(), R.string.update_lib_download_in_background); getActivity().finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7760/buggy-version/lib.src.main.java.com.kcode.lib.dialog.DownLoadDialog.java", "BodyUseAPI": [], "Fixed commit": "4849cc4f32d3866b7cb3f5331d3cb4846f5d1f86", "Url": "https://api.github.com/repos/fccaikai/AppUpdate", "Date": "2017-08-15T01:05:55Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((attributes) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3207/buggy-version/teamdash.src.teamdash.hist.BlameNodeData.java", "BodyUseAPI": [], "Fixed commit": "da8c58244411f372d2e6eeaa05502b3c196c2e45", "Url": "https://api.github.com/repos/dtuma/processdash", "Date": "2015-07-07T18:11:28Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (artifact != null) { artifact.setType(extension); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5877/buggy-version/main.plugins.org.talend.core.runtime.src.main.java.org.talend.core.model.general.ModuleNeeded.java", "BodyUseAPI": ["org.talend.core.runtime.maven.MavenArtifact.setType(java.lang.String)"], "Fixed commit": "20f6e950b9e7d8222783e637ca6c56e534938494", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2016-05-03T15:09:55Z"},
{"Line": "=>717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(expr.getInBytes())) { expr.setValueSize(VoltType.MAX_VALUE_LENGTH_IN_CHARACTERS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6281/buggy-version/src.frontend.org.voltdb.planner.ParsedSelectStmt.java", "BodyUseAPI": ["org.voltdb.expressions.AbstractExpression.setValueSize(VoltType.MAX_VALUE_LENGTH_IN_CHARACTERS)"], "Fixed commit": "bc90d8d41a18e1a995b4657b19dab864b9d435f6", "Url": "https://api.github.com/repos/deerwalk/voltdb", "Date": "2015-06-19T13:34:09Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((lastPosition) != null) { android.widget.Toast.makeText(this, (((((\"The users position has positionChanged from \" + (lastPosition)) + \" to \") + (state.getCurrentPosition())) + \" dist=\") + (com.barrybecker4.mapland.game.LocationUtil.distance(state.getCurrentPosition(), lastPosition))), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7333/buggy-version/app.src.main.java.com.barrybecker4.mapland.screens.LandGrabMapActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(com.barrybecker4.mapland.screens.LandGrabMapActivity,(((((\"The users position has positionChanged from \" + (lastPosition)) + \" to \") + (state.getCurrentPosition())) + \" dist=\") + (com.barrybecker4.mapland.game.LocationUtil.distance(state.getCurrentPosition(), lastPosition))),Toast.LENGTH_LONG)", "android.widget.Toast.makeText(this, (((((\"The users position has positionChanged from \" + (lastPosition)) + \" to \") + (state.getCurrentPosition())) + \" dist=\") + (com.barrybecker4.mapland.game.LocationUtil.distance(state.getCurrentPosition(), lastPosition))), Toast.LENGTH_LONG).show()"], "Fixed commit": "562ad458384ee703b3073e5e9c0ed94557bdda40", "Url": "https://api.github.com/repos/LoganCSC/MapLand", "Date": "2015-10-26T00:53:55Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (log.isDebugEnabled()) { log.debug((\"Handling new client connection \" + threadName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9037/buggy-version/greenmail-core.src.main.java.com.icegreen.greenmail.server.AbstractServer.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "d76d4ccdf05004b9530bb5493a034242680b5b6f", "Url": "https://api.github.com/repos/greenmail-mail-test/greenmail", "Date": "2016-05-17T06:57:40Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (null == bindAddress) { bindAddress = setup.getDefaultBindAddress(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9037/buggy-version/greenmail-core.src.main.java.com.icegreen.greenmail.server.AbstractServer.java", "BodyUseAPI": [], "Fixed commit": "d76d4ccdf05004b9530bb5493a034242680b5b6f", "Url": "https://api.github.com/repos/greenmail-mail-test/greenmail", "Date": "2016-05-17T06:57:40Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((forceHidingComponents) != null) { showHiddenComponents = !(forceHidingComponents); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3385/buggy-version/core-web.src.main.java.org.silverpeas.core.web.util.viewgenerator.html.map.MapTag.java", "BodyUseAPI": [], "Fixed commit": "a7df92c58de1894cc6f5595c7e6b6985d557c72c", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2017-10-20T21:26:46Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (throwException) { throw new fi.nls.oskari.service.ServiceRuntimeException((\"Getting Jedis connection from the pool failed: \" + (e.getMessage())), e.getCause(), fi.nls.oskari.cache.JedisManager.ERROR_REDIS_COMMUNICATION_FAILURE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6387/buggy-version/service-base.src.main.java.fi.nls.oskari.cache.JedisManager.java", "BodyUseAPI": [], "Fixed commit": "da33379894b871db300d3937c3b120de924aa684", "Url": "https://api.github.com/repos/oskariorg/oskari-server", "Date": "2016-11-09T16:34:27Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((subsContent) != null) && ((hyphenMode) == (dk.statsbiblioteket.summa.support.alto.Alto.HYPHEN_MODE.join))) { if (((content.length()) <= (subsContent.length())) && (content.equals(subsContent.substring(0, content.length())))) { return subsContent; } return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3685/buggy-version/Core.src.main.java.dk.statsbiblioteket.summa.support.alto.Alto.java", "BodyUseAPI": [], "Fixed commit": "2704c2c6b7738b64b14f3788516194bdbb120593", "Url": "https://api.github.com/repos/statsbiblioteket/summa", "Date": "2017-02-27T13:21:53Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentInputStream) == null) { throw new java.io.IOException((\"Unable to get input stream for connection \" + (getPath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/475/buggy-version/jphp-runtime.src.php.runtime.ext.net.WrapNetStream.java", "BodyUseAPI": [], "Fixed commit": "74334d65df254c55a83e521a34ad7374b57fd2ee", "Url": "https://api.github.com/repos/jphp-group/jphp", "Date": "2016-07-26T12:31:52Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["php.runtime.ext.net.WrapNetStream.getURLConnection()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((currentInputStream) == null) && (urlConnection instanceof java.net.HttpURLConnection)) { currentInputStream = ((java.net.HttpURLConnection) (urlConnection)).getErrorStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/475/buggy-version/jphp-runtime.src.php.runtime.ext.net.WrapNetStream.java", "BodyUseAPI": [], "Fixed commit": "74334d65df254c55a83e521a34ad7374b57fd2ee", "Url": "https://api.github.com/repos/jphp-group/jphp", "Date": "2016-07-26T12:31:52Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (end > ((scr.length) - 1)) end = (scr.length) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6433/buggy-version/src.main.java.JSSHTerminal.TerminalEmulator.java", "BodyUseAPI": [], "Fixed commit": "749ecfa6a05c0ae086d8d2dd1143ce1f16d58207", "Url": "https://api.github.com/repos/tango-controls/JSSHTerminal", "Date": "2016-11-28T15:15:33Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start < (-(((scrollSize) * (width)) - 1))) start = -(((scrollSize) * (width)) - 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6433/buggy-version/src.main.java.JSSHTerminal.TerminalEmulator.java", "BodyUseAPI": [], "Fixed commit": "749ecfa6a05c0ae086d8d2dd1143ce1f16d58207", "Url": "https://api.github.com/repos/tango-controls/JSSHTerminal", "Date": "2016-11-28T15:15:33Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.getResultCode()) == (com.backtory.android.iap.IapResult.SUCCESS)) { this.sku = null; this.purchaseToken = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1181/buggy-version/app.src.main.java.com.backtory.android.sdksample.InAppPurchaseFragment.java", "BodyUseAPI": [], "Fixed commit": "fd22e6bcff1f59eadc1affd42a0cf85441a5f357", "Url": "https://api.github.com/repos/backtory/androidsdk-sample", "Date": "2017-12-05T08:23:34Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targets.isEmpty()) { if (!(illegalTargets.isEmpty())) { return false; } if ((getNumberOfTargets()) == 0) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1473/buggy-version/Mage.src.mage.target.TargetImpl.java", "BodyUseAPI": [], "Fixed commit": "8044940a97953ccc7dd26418ca89cf68cb15fd74", "Url": "https://api.github.com/repos/FenrisulfrX/mage", "Date": "2015-09-29T22:53:33Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.musicbrainz.mp3.tagger.Tools.Tools.httpGet(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(res.startsWith(\"{\"))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6549/buggy-version/src.main.java.com.musicbrainz.mp3.tagger.Tools.CoverArt.java", "BodyUseAPI": [], "Fixed commit": "dc478bfb1d9106fe5e3d41ab148166b93ef30027", "Url": "https://api.github.com/repos/dessalines/musicbrainz-tagger", "Date": "2015-06-21T13:26:04Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cantidadApostada.isNaN()) || (cantidadApostada <= 0)) { throw new es.udc.pa.pa009.pwin.model.betservice.NegativeAmountException(cantidadApostada, \"Double\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6826/buggy-version/src.main.java.es.udc.pa.pa009.pwin.model.betservice.BetServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "d74a85d4182ff3eb3f38c7a63ff7812d6e41b2ff", "Url": "https://api.github.com/repos/danielFerreiro/VVS2016", "Date": "2016-10-21T14:43:50Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((tokens != null) && ((tokens.size()) > 0)) { this.apiToken = tokens.get(0).getToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7182/buggy-version/alexis-domain.src.main.java.com.mothsoft.alexis.domain.UserAuthenticationDetails.java", "BodyUseAPI": [], "Fixed commit": "798fa3dca690715b0d1a01fe8f97a796c1cdec7d", "Url": "https://api.github.com/repos/mothsoft/openalexis", "Date": "2013-08-10T16:40:25Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pd) != null) { pd.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7967/buggy-version/src.cz.quinix.condroid.database.DatabaseLoader.java", "BodyUseAPI": [], "Fixed commit": "dfd1e8db5cc1b0aa3ffb44fe8b179a0d0e4e909b", "Url": "https://api.github.com/repos/Quinix/Condroid", "Date": "2012-05-12T22:05:58Z"},
{"Line": "=>1252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(database.DBSet.getInstance().getReferenceMap().contains(address))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7655/buggy-version/Qora.src.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "14cfd7eecb272b6dc13573b4e073f2cd1d148d58", "Url": "https://api.github.com/repos/Qoracoin/Qora", "Date": "2015-07-05T06:39:21Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5958/buggy-version/src.main.java.com.mridang.wifiinfo.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "f8e8cbdce0e0f160d797c247da53c9a29452d67f", "Url": "https://api.github.com/repos/mridang/dashclock-wifiinfo", "Date": "2015-03-29T09:13:15Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedDatasets) == null) { return new java.util.ArrayList<au.gov.ansto.bragg.nbi.ui.scripting.parts.DatasetInfo>(); }else { return selectedDatasets; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8491/buggy-version/bragg.nbi.au.gov.ansto.bragg.nbi.ui.src.au.gov.ansto.bragg.nbi.ui.scripting.parts.ScriptDataSourceViewer.java", "BodyUseAPI": [], "Fixed commit": "86deff44f83946e03256b2c2454a4799b39f0967", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2012-11-29T05:06:52Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dstpic.equals(srcpic)) srcpic = srcpic.clone();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6785/buggy-version/src.pers.season.vml.statistics.texture.TextureModel.java", "BodyUseAPI": ["org.opencv.core.Mat.clone()"], "Fixed commit": "6b2493891193b4325bd97ff706e9c8cf15378d3f", "Url": "https://api.github.com/repos/htkseason/VisionModelLib", "Date": "2017-07-05T08:41:26Z"},
{"Line": "=>1077", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.fieldType(java.lang.String)", "com.orientechnologies.orient.core.record.impl.ODocument.deriveFieldType(java.lang.String,com.orientechnologies.orient.core.metadata.schema.OType[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((oldType != fieldType) && (oldType != null)) { if (((iPropertyValue == null) || (fieldType != null)) || (oldType != (com.orientechnologies.orient.core.metadata.schema.OType.getTypeByValue(iPropertyValue)))) setFieldType(iFieldName, fieldType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7603/buggy-version/core.src.main.java.com.orientechnologies.orient.core.record.impl.ODocument.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.setFieldType(java.lang.String,com.orientechnologies.orient.core.metadata.schema.OType)"], "Fixed commit": "0227509575718e9c27c01d39b165b5f0533c7500", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-10-05T17:14:10Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pagemining.extractor.xpath.XPathExtractor.extract(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (jsonDoc != null) { collector.collect(new org.apache.hadoop.io.Text(url), new org.apache.hadoop.io.Text(jsonDoc.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3979/buggy-version/hadoop.src.main.java.org.pagemining.hadoop.infoextract.XPathExtractorMapper.java", "BodyUseAPI": ["net.minidev.json.JSONObject.toString()", "org.pagemining.hadoop.infoextract.OutputCollector<org.apache.hadoop.io.Text, org.apache.hadoop.io.Text>.collect(org.apache.hadoop.io.Text,org.apache.hadoop.io.Text)"], "Fixed commit": "d304a0bf1f4b815d4fa0aa1ce70d6bdff8e983d3", "Url": "https://api.github.com/repos/xlvector/pagemining", "Date": "2014-02-13T06:21:24Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.widget.EditText) (findViewById(R.id.newUserName))).getText().toString()", "((android.widget.EditText) (findViewById(R.id.newUserPassword))).getText().toString()", "((android.widget.EditText) (findViewById(R.id.newUserPasswordConfirm))).getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((newUserName.length()) == 0) || ((newUserNamePassword.length()) == 0)) || ((newUserNamePasswordConfirm.length()) == 0)) { android.widget.Toast toast = android.widget.Toast.makeText(context, \"Can't have blank options\", duration); toast.show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5210/buggy-version/DesignProject.src.com.designproject.controllers.SettingsController.java", "BodyUseAPI": [], "Fixed commit": "52b92d4cddf89f41c76c5d6cdd42b645128a2367", "Url": "https://api.github.com/repos/nlubczynski/DesignProject", "Date": "2013-12-01T21:47:37Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.sc.csce740.module.DataStore.getTranscript(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((record.getCertificateSought()) != null) { if (record.getCertificateSought().getName().equalsIgnoreCase(\"INFAS\")) { java.util.List<edu.sc.csce740.module.RequirementCheck> requirementINFAS = edu.sc.csce740.module.ProgressSummaryGenerator.checkINFAS(record); for (int i = 0; i < (requirementINFAS.size()); i++) { requirementCheckResults.add(requirementINFAS.get(i)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5206/buggy-version/src.edu.sc.csce740.module.ProgressSummaryGenerator.java", "BodyUseAPI": ["record.getCertificateSought().getName().equalsIgnoreCase(java.lang.String)", "edu.sc.csce740.module.StudentRecord.getCertificateSought()", "record.getCertificateSought().getName()", "edu.sc.csce740.module.ProgressSummaryGenerator.checkINFAS(edu.sc.csce740.module.StudentRecord)"], "Fixed commit": "b01165f16ddf349060f19d104452c3415766b596", "Url": "https://api.github.com/repos/fuzzley/GRADS", "Date": "2015-11-21T20:05:21Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.sc.csce740.module.DataStore.getTranscript(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((record.getCertificateSought()) != null) { if (record.getCertificateSought().getName().equalsIgnoreCase(\"INFAS\")) { java.util.List<edu.sc.csce740.module.RequirementCheck> requirementINFAS = edu.sc.csce740.module.ProgressSummaryGenerator.checkINFAS(record); for (int i = 0; i < (requirementINFAS.size()); i++) { requirementCheckResults.add(requirementINFAS.get(i)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5206/buggy-version/src.edu.sc.csce740.module.ProgressSummaryGenerator.java", "BodyUseAPI": ["record.getCertificateSought().getName()", "edu.sc.csce740.module.StudentRecord.getCertificateSought()", "record.getCertificateSought().getName().equalsIgnoreCase(java.lang.String)", "edu.sc.csce740.module.ProgressSummaryGenerator.checkINFAS(edu.sc.csce740.module.StudentRecord)"], "Fixed commit": "b01165f16ddf349060f19d104452c3415766b596", "Url": "https://api.github.com/repos/fuzzley/GRADS", "Date": "2015-11-21T20:05:21Z"},
{"Line": "=>1746", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)", "java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (y1 == y2) { return (to.get(java.util.Calendar.DAY_OF_YEAR)) - (from.get(java.util.Calendar.DAY_OF_YEAR)); }else { int result = 0; java.util.Calendar fromClone = ((java.util.Calendar) (from.clone())); while ((fromClone.get(java.util.Calendar.YEAR)) != y2) { int dayOfYear = fromClone.get(java.util.Calendar.DAY_OF_YEAR); fromClone.set(java.util.Calendar.MONTH, 11); fromClone.set(java.util.Calendar.DAY_OF_MONTH, 31); result += (fromClone.get(java.util.Calendar.DAY_OF_YEAR)) - dayOfYear; fromClone.add(java.util.Calendar.DATE, 1); result++; } result += (to.get(java.util.Calendar.DAY_OF_YEAR)) - (fromClone.get(java.util.Calendar.DAY_OF_YEAR)); return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5602/buggy-version/src.jfb.tools.activitymgr.core.ModelMgr.java", "BodyUseAPI": [], "Fixed commit": "5acd5f87df3e2caef31e191151d5ac80ffd8a0b2", "Url": "https://api.github.com/repos/jfbrazeau/Activity-Manager", "Date": "2013-01-23T21:04:04Z"},
{"Line": "=>1739", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date1.after(date2)) { from = date2; to = date1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5602/buggy-version/src.jfb.tools.activitymgr.core.ModelMgr.java", "BodyUseAPI": [], "Fixed commit": "5acd5f87df3e2caef31e191151d5ac80ffd8a0b2", "Url": "https://api.github.com/repos/jfbrazeau/Activity-Manager", "Date": "2013-01-23T21:04:04Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (screen.buttonIsActive(screen.LEFT)) { screen.setButtonStatus(false, screen.LEFT); }else if (screen.buttonIsActive(screen.RIGHT)) { screen.setButtonStatus(false, screen.RIGHT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8590/buggy-version/edoocatia.src.id.ac.ui.edoocatia.controller.SpaceBattleController.java", "BodyUseAPI": ["id.ac.ui.edoocatia.screen.SpaceBattleScreen.setButtonStatus(boolean,screen.RIGHT)", "id.ac.ui.edoocatia.screen.SpaceBattleScreen.buttonIsActive(screen.RIGHT)", "id.ac.ui.edoocatia.screen.SpaceBattleScreen.setButtonStatus(boolean,screen.LEFT)"], "Fixed commit": "5692c1cf2612ce16fdcbe0c5e60762404d0eac89", "Url": "https://api.github.com/repos/futuhal-arifin/edc", "Date": "2014-05-25T10:59:43Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (sheetName == null) { sheetName = getCategoryName(locale, (processNameOrCategoryId.equals(CasesStatistics.UNKOWN_CATEGORY_ID) ? null : getCaseCategory(id))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9025/buggy-version/src.java.is.idega.idegaweb.egov.bpm.cases.presentation.beans.CasesSearchResultsHolderImpl.java", "BodyUseAPI": [], "Fixed commit": "392924d82bf77d523482b85215f3745727e18ac6", "Url": "https://api.github.com/repos/idega/is.idega.idegaweb.egov.bpm", "Date": "2016-01-29T10:19:23Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (saveMemory()) { listener.onSaveClicked(); hideKeyboard(); getActivity().finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3258/buggy-version/app.src.main.java.example.com.memkeeper.Layouts.NewMemoryFragLayout.java", "BodyUseAPI": [], "Fixed commit": "f36e81d97fe0299db0da8ced6f62c86c0de96ad2", "Url": "https://api.github.com/repos/alexbuicescu/Mem-keeper", "Date": "2015-04-04T08:40:24Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anyAreSet(state, io.undertow.conduits.ChunkedStreamSinkConduit.FLAG_WRITES_SHUTDOWN)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5728/buggy-version/core.src.main.java.io.undertow.conduits.ChunkedStreamSinkConduit.java", "BodyUseAPI": [], "Fixed commit": "5d48cab50824c6223250087b5fd79d21af85ca38", "Url": "https://api.github.com/repos/emag/undertow", "Date": "2014-01-24T15:05:00Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.lasarobotics.vision.opmode.VisionOpModeCore.initialized) org.lasarobotics.vision.opmode.VisionOpModeCore.openCVCamera.disconnectCamera();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6718/buggy-version/ftc-visionlib.src.main.java.org.lasarobotics.vision.opmode.VisionOpModeCore.java", "BodyUseAPI": [], "Fixed commit": "d26a4d47a29bb94c0a0a3b343f872ccd604bae65", "Url": "https://api.github.com/repos/lasarobotics/FTCVision", "Date": "2016-01-23T03:52:33Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.lasarobotics.vision.opmode.VisionOpModeCore.initialized) org.lasarobotics.vision.opmode.VisionOpModeCore.openCVCamera.connectCamera(((int) (frameSize.width)), ((int) (frameSize.height)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6718/buggy-version/ftc-visionlib.src.main.java.org.lasarobotics.vision.opmode.VisionOpModeCore.java", "BodyUseAPI": [], "Fixed commit": "d26a4d47a29bb94c0a0a3b343f872ccd604bae65", "Url": "https://api.github.com/repos/lasarobotics/FTCVision", "Date": "2016-01-23T03:52:33Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.lasarobotics.vision.opmode.VisionOpModeCore.initialized) org.lasarobotics.vision.opmode.VisionOpModeCore.openCVCamera.connectCamera(width, height);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6718/buggy-version/ftc-visionlib.src.main.java.org.lasarobotics.vision.opmode.VisionOpModeCore.java", "BodyUseAPI": [], "Fixed commit": "d26a4d47a29bb94c0a0a3b343f872ccd604bae65", "Url": "https://api.github.com/repos/lasarobotics/FTCVision", "Date": "2016-01-23T03:52:33Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.lasarobotics.vision.opmode.VisionOpModeCore.initialized) org.lasarobotics.vision.opmode.VisionOpModeCore.openCVCamera.disconnectCamera();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6718/buggy-version/ftc-visionlib.src.main.java.org.lasarobotics.vision.opmode.VisionOpModeCore.java", "BodyUseAPI": [], "Fixed commit": "d26a4d47a29bb94c0a0a3b343f872ccd604bae65", "Url": "https://api.github.com/repos/lasarobotics/FTCVision", "Date": "2016-01-23T03:52:33Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.synapse.config.SynapseConfiguration.getProxyService(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((currentProxy.getArtifactContainerName()) != null) { currentProxy.setIsEdited(true); }else { persistProxyService(currentProxy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6536/buggy-version/components.mediation-admin.org.wso2.carbon.proxyadmin.src.main.java.org.wso2.carbon.proxyadmin.service.ProxyServiceAdmin.java", "BodyUseAPI": ["org.wso2.carbon.proxyadmin.service.ProxyServiceAdmin.persistProxyService(org.apache.synapse.core.axis2.ProxyService)", "org.apache.synapse.core.axis2.ProxyService.setIsEdited(boolean)"], "Fixed commit": "09172cf353ed20689823a2de5479a9954604595a", "Url": "https://api.github.com/repos/wso2/carbon-mediation", "Date": "2015-08-20T06:44:02Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.BitmapFactory.decodeStream(java.io.FileInputStream)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (thumbnail == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/469/buggy-version/app.src.main.java.com.cpen321.circuitsolver.ui.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "4171a1eafb96cabf1be18fe121e171a64dfc486d", "Url": "https://api.github.com/repos/Frikster/CircuitSolverApp", "Date": "2016-10-27T21:23:19Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (contentWarning != null) { startingHideText = !(contentWarning.isEmpty()); if (startingHideText) { startingContentWarning = contentWarning; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2577/buggy-version/app.src.main.java.com.keylesspalace.tusky.ComposeActivity.java", "BodyUseAPI": ["java.lang.String.isEmpty()"], "Fixed commit": "855f6c7ca46197d1ac5bd58d7aa893c3f5ddee7b", "Url": "https://api.github.com/repos/tuskyapp/Tusky", "Date": "2017-07-17T03:43:52Z"},
{"Line": "=>802", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sig.plugin.TwosideKeeper.HelperStructures.Common.GenericFunctions.getSwiftAegisAmt(p)) > 0) { pd.swiftaegisamt = java.lang.Math.max(0, ((sig.plugin.TwosideKeeper.HelperStructures.Common.GenericFunctions.getSwiftAegisAmt(p)) - 1)); if ((sig.plugin.TwosideKeeper.HelperStructures.Common.GenericFunctions.getSwiftAegisAmt(p)) > 0) { sig.plugin.TwosideKeeper.HelperStructures.Common.GenericFunctions.sendActionBarMessage(p, (((org.bukkit.ChatColor.GRAY) + \"Resist \") + (sig.plugin.TwosideKeeper.HelperStructures.WorldShop.toRomanNumeral(sig.plugin.TwosideKeeper.HelperStructures.Common.GenericFunctions.getSwiftAegisAmt(p))))); }else { sig.plugin.TwosideKeeper.HelperStructures.Common.GenericFunctions.sendActionBarMessage(p, ((org.bukkit.ChatColor.GRAY) + \"Swift Aegis Resist Removed.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/647/buggy-version/src.sig.plugin.TwosideKeeper.CustomDamage.java", "BodyUseAPI": ["java.lang.Math.max(int,((sig.plugin.TwosideKeeper.HelperStructures.Common.GenericFunctions.getSwiftAegisAmt(p)) - 1))", "sig.plugin.TwosideKeeper.HelperStructures.Common.GenericFunctions.getSwiftAegisAmt(org.bukkit.entity.Player)", "sig.plugin.TwosideKeeper.HelperStructures.Common.GenericFunctions.sendActionBarMessage(org.bukkit.entity.Player,(((org.bukkit.ChatColor.GRAY) + \"Resist \") + (sig.plugin.TwosideKeeper.HelperStructures.WorldShop.toRomanNumeral(sig.plugin.TwosideKeeper.HelperStructures.Common.GenericFunctions.getSwiftAegisAmt(p)))))", "sig.plugin.TwosideKeeper.HelperStructures.WorldShop.toRomanNumeral(sig.plugin.TwosideKeeper.HelperStructures.Common.GenericFunctions.getSwiftAegisAmt(p))", "sig.plugin.TwosideKeeper.HelperStructures.Common.GenericFunctions.getSwiftAegisAmt(org.bukkit.entity.Player)", "sig.plugin.TwosideKeeper.HelperStructures.Common.GenericFunctions.getSwiftAegisAmt(org.bukkit.entity.Player)", "sig.plugin.TwosideKeeper.HelperStructures.Common.GenericFunctions.sendActionBarMessage(org.bukkit.entity.Player,((org.bukkit.ChatColor.GRAY) + \"Swift Aegis Resist Removed.\"))"], "Fixed commit": "7878e7a9568ea90f64b57c42aa1bb5d8c94567a8", "Url": "https://api.github.com/repos/sigonasr2/TwosideKeeper", "Date": "2016-09-21T01:06:08Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rawlistdata.get(i).price) == 0) { tv2.setText(java.lang.String.valueOf(rawlistdata.get(i).yesterday_price)); }else tv2.setText(java.lang.String.valueOf(rawlistdata.get(i).price));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3182/buggy-version/src.com.example.stockquotes1.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<com.example.stockquotes1.StockRtData>.get(int)", "android.widget.TextView.setText(java.lang.String)", "java.util.ArrayList<com.example.stockquotes1.StockRtData>.get(int)", "android.widget.TextView.setText(java.lang.String)", "java.lang.String.valueOf(rawlistdata.get(i).yesterday_price)", "java.lang.String.valueOf(rawlistdata.get(i).price)"], "Fixed commit": "dda38bc208b11d92e79d293047fbcf1c49546c11", "Url": "https://api.github.com/repos/dxsooo/StockQuotes1", "Date": "2015-12-25T06:28:32Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (interest == (-1)) { interest = ((rawlistdata.get(i).yesterday_price) - (StockMap.get(rawlistdata.get(i).code).cost)) / (StockMap.get(rawlistdata.get(i).code).cost); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3182/buggy-version/src.com.example.stockquotes1.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "dda38bc208b11d92e79d293047fbcf1c49546c11", "Url": "https://api.github.com/repos/dxsooo/StockQuotes1", "Date": "2015-12-25T06:28:32Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((amount.compareTo(java.math.BigDecimal.ZERO)) == 0) amount = tax;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4657/buggy-version/egov.egov-ptis.src.main.java.org.egov.ptis.client.service.calculator.APTaxCalculator.java", "BodyUseAPI": [], "Fixed commit": "a2b250eeefe2c1fd7f5a94bf618f1c7702ede7d0", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2017-03-01T07:36:28Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((string.length()) > 0) target.add(java.lang.Integer.parseInt(string));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7740/buggy-version/src.main.java.dekk.pw.pokemate.Config.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.util.List<java.lang.Integer>.add(int)"], "Fixed commit": "b9a2bc77c1fde1f9a814fe270dcdf2bdd5a8dddb", "Url": "https://api.github.com/repos/SwipeX/PokeMate", "Date": "2016-07-26T19:32:51Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index > 2) { if (((word.charAt((index - 2))) == (word.charAt((index + 1)))) && ((word.charAt((index - 1))) == (word.charAt((index + 2))))) { change = java.lang.Character.toString(word.charAt((index - 2))); change += word.charAt((index - 1)); java.lang.String r = (change + \" \") + change; word = word.replaceFirst(r, change); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1454/buggy-version/src.Training.DailyProgrammer319.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.Character.toString(char)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)"], "Fixed commit": "da5c9508f63c15cd749d1512472b6763bd474de4", "Url": "https://api.github.com/repos/rmyz/Training", "Date": "2017-06-22T16:58:32Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.overlord.sramp.common.ArtifactType.isValid(extendedType))) { throw new java.lang.RuntimeException(Messages.i18n.format(\"ArtifactType.InvalidExtendedType\", extendedType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8084/buggy-version/s-ramp-common.src.main.java.org.overlord.sramp.common.ArtifactType.java", "BodyUseAPI": ["Messages.i18n.format(java.lang.String,java.lang.String)"], "Fixed commit": "9372eaf3464c41195dd81092cb513bd08acc38c0", "Url": "https://api.github.com/repos/EricWittmann/s-ramp", "Date": "2014-04-11T15:40:30Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parameters == null) { parameters = new software.sandc.springframework.security.jwt.model.parameter.Parameters(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3236/buggy-version/src.main.java.software.sandc.springframework.security.jwt.impl.DefaultJWTService.java", "BodyUseAPI": [], "Fixed commit": "80fa1e066a2a225206d70178857c9f1c98645b80", "Url": "https://api.github.com/repos/selimok/spring-security-jwt", "Date": "2017-02-09T15:48:07Z"},
{"Line": "=>1655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ichi2.anki.AnkiDroidApp.deck()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (deck2 == null) { ad.setEnabled(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3100/buggy-version/src.com.ichi2.anki.StudyOptions.java", "BodyUseAPI": [], "Fixed commit": "7b0152795e750462fc8106f513fd68ae6f49bfcc", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2011-10-11T07:37:07Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tuwien.auto.calimero.process.ProcessEvent.getDestination()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (destination.equals(currentDevice)) { messageReceived(e); }else if (source.equals(currentDevice)) { messageSent(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8123/buggy-version/importers.knx.src.main.java.org.ow2.chameleon.fuchsia.importer.knx.device.impl.KNXDeviceAbstract.java", "BodyUseAPI": ["tuwien.auto.calimero.GroupAddress.equals(tuwien.auto.calimero.GroupAddress)"], "Fixed commit": "7d3daa531a59af9dc22d909447fb6a3cc7ac0025", "Url": "https://api.github.com/repos/ow2-chameleon/fuchsia", "Date": "2014-10-14T09:57:52Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object instanceof railo.runtime.type.ObjectWrap) { return railo.runtime.functions.decision.IsCustomFunction.call(pc, ((railo.runtime.type.ObjectWrap) (object)).getEmbededObject(null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8788/buggy-version/railo-java.railo-core.src.railo.runtime.functions.decision.IsCustomFunction.java", "BodyUseAPI": [], "Fixed commit": "1159cec2061b8ca78f432afa1f3e6d62c41beb8e", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-05-11T11:40:49Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connected) { connected = false; if ((listener) != null) listener.notConnected(context, intent); android.util.Log.d(com.maia_business_solutions.NetworkBroadcastReceiver.LOG_TAG, \"No active network is connected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4348/buggy-version/src.com.maia_business_solutions.NetworkBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "0ad416cdc6561c30a466879236c6857123361ce1", "Url": "https://api.github.com/repos/aqm1970/Android-Tools", "Date": "2015-06-06T16:53:35Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Chest.getInventory()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(inventory instanceof org.bukkit.inventory.DoubleChestInventory)) { for (org.bukkit.block.Block b : com.github.igotyou.FactoryMod.structures.MultiBlockStructure.searchForBlockOnSides(getChest(), Material.CHEST)) { if ((b.getType()) == (org.bukkit.Material.CHEST)) { org.bukkit.inventory.Inventory secondChestInventory = ((org.bukkit.block.Chest) (getChest().getState())).getInventory(); if (secondChestInventory instanceof org.bukkit.inventory.DoubleChestInventory) { if ((((org.bukkit.inventory.DoubleChestInventory) (secondChestInventory)).getLeftSide().equals(inventory)) || (((org.bukkit.inventory.DoubleChestInventory) (secondChestInventory)).getRightSide().equals(inventory))) { return secondChestInventory; } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3295/buggy-version/src.com.github.igotyou.FactoryMod.factories.FurnCraftChestFactory.java", "BodyUseAPI": ["((org.bukkit.inventory.DoubleChestInventory) (secondChestInventory)).getRightSide().equals(org.bukkit.inventory.Inventory)", "((org.bukkit.inventory.DoubleChestInventory) (secondChestInventory)).getLeftSide().equals(org.bukkit.inventory.Inventory)"], "Fixed commit": "08d861314c003312d0a88b6855f07ba1f8816d62", "Url": "https://api.github.com/repos/BlackXnt/FactoryMod", "Date": "2016-03-26T13:44:34Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getIntExtra(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (colorValue == (-16777216)) { xOut.setBackgroundResource(R.drawable.exit_icon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4134/buggy-version/app.src.main.java.com.willard5991.colorfull.ChooseActivity.java", "BodyUseAPI": [], "Fixed commit": "73f3c1223b29dc89c1b40a69ac4ed35db4e8d538", "Url": "https://api.github.com/repos/william-swanson/software_eng_proj2", "Date": "2017-12-04T02:44:12Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.organization.unit.UnitAdapter.getUnit(java.lang.Long)", "model.organization.resource.ResourceAdapter.getResource(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(retrievedResource.getCurrentUnit().getId().equals(retrievedUnit.getId()))) { retrievedUnit.addRequiredResources(retrievedResource); unitAdapter.addUnit(retrievedUnit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7945/buggy-version/RMS.src.logic.organization.unit.Unit.java", "BodyUseAPI": ["model.organization.unit.UnitAdapter.addUnit(model.organization.unit.UnitModel)", "model.organization.unit.UnitModel.addRequiredResources(model.organization.resource.ResourceModel)"], "Fixed commit": "8763879866ad56b7e8f2e46081d99f2588fea1c0", "Url": "https://api.github.com/repos/salavi/ResourceManagementSystem", "Date": "2016-07-12T07:14:18Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.structr.core.EntityContext.getRelation(sourceNode.getClass(),typeConstraint.getRawType())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rel == null) { rel = org.structr.core.EntityContext.getRelation(sourceNode.getClass(), newNode.getType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7266/buggy-version/structr.structr-core.src.main.java.org.structr.rest.constraint.StaticRelationshipConstraint.java", "BodyUseAPI": [], "Fixed commit": "fcee16d3ff8badd3b266c01e8f174ca7079b0f0b", "Url": "https://api.github.com/repos/structr/structr", "Date": "2011-12-01T10:25:40Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(conceptToUpdate.getThesaurus().isPolyHierarchical())) && ((conceptToUpdate.getParentConcepts().size()) > 1)) { throw new fr.mcc.ginco.exceptions.BusinessException(\"Thesaurus is monohierarchical, but some concepts have multiple parents!\", \"monohierarchical-violation\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9189/buggy-version/ginco-impl.src.main.java.fr.mcc.ginco.services.ConceptHierarchicalRelationshipServiceUtil.java", "BodyUseAPI": [], "Fixed commit": "148ade20f5fe9c80017932eafadc184d7d928a75", "Url": "https://api.github.com/repos/culturecommunication/ginco", "Date": "2013-04-15T14:05:55Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.supercsv.ext.annotation.CsvDateConverter.timezone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (timezone.isEmpty()) { return java.util.TimeZone.getDefault(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2168/buggy-version/src.main.java.org.supercsv.ext.builder.DateCellProcessorBuilder.java", "BodyUseAPI": [], "Fixed commit": "4487bcb0307ed408aa727b5e6b3caa22710c6773", "Url": "https://api.github.com/repos/tatsu-no-otoshigo/super-csv-annotation", "Date": "2014-10-14T02:58:30Z"},
{"Line": "=>566", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((datFile != null) && (!(datFile.isProjectFile()))) && (!(View.DUMMY_DATFILE.equals(datFile)))) { java.io.File dff = new java.io.File(datFile.getOldName()).getParentFile(); if (((dff != null) && (dff.exists())) && (dff.isDirectory())) { prefix = new java.lang.String[]{ dff.getAbsolutePath(), org.nschmidt.ldparteditor.project.Project.getProjectPath(), org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().getUnofficialFolderPath(), org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().getLdrawFolderPath() }; }else { prefix = new java.lang.String[]{ org.nschmidt.ldparteditor.project.Project.getProjectPath(), org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().getUnofficialFolderPath(), org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().getLdrawFolderPath() }; } }else { prefix = new java.lang.String[]{ org.nschmidt.ldparteditor.project.Project.getProjectPath(), org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().getUnofficialFolderPath(), org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().getLdrawFolderPath() }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7975/buggy-version/src.org.nschmidt.ldparteditor.text.SyntaxFormatter.java", "BodyUseAPI": ["java.io.File.getParentFile()", "org.nschmidt.ldparteditor.data.DatFile.getOldName()"], "Fixed commit": "4dd09954ec9035453961ef9ed1cfbb2c305d8f5e", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-05-16T19:45:40Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (javaFile.exists()) javaFile.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7041/buggy-version/src.main.java.me.olivervscreeper.networkutilities.utils.compiler.CompilerUtils.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "e73d316f2a3331a290d01b1875411287211fe398", "Url": "https://api.github.com/repos/oliverdunk/NetworkUtilities", "Date": "2015-08-12T10:54:11Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((phase) != (com.trifice.theunderworldsiege.Phase.ACTIVE)) || ((phase) != (com.trifice.theunderworldsiege.Phase.PASSIVE))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7168/buggy-version/app.src.main.java.com.trifice.theunderworldsiege.MainModel.java", "BodyUseAPI": [], "Fixed commit": "426ab1b3d22758071f0c0779b0462702badd6314", "Url": "https://api.github.com/repos/chengenzhao/TheUnderworldSiege", "Date": "2015-04-08T12:22:10Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.dakror.spamwars.game.Game.player) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6129/buggy-version/src.de.dakror.spamwars.layer.HUDLayer.java", "BodyUseAPI": [], "Fixed commit": "da1da0b3a7e9d04254a26a1fc39895b851a755a6", "Url": "https://api.github.com/repos/Dakror/Spam-Wars", "Date": "2013-12-08T10:02:45Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((s[0]) != null) && ((s[1]) != null)) ch.hearc.smarthome.CredentialManager.cptJackSparrow.put(s[0], s[1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8099/buggy-version/src.ch.hearc.smarthome.CredentialManager.java", "BodyUseAPI": ["java.util.Hashtable<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "6369c481ce5529258d527765223789abd74b2a1d", "Url": "https://api.github.com/repos/Drakesinger/SmartHome", "Date": "2014-09-04T09:18:10Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rs.getString(5).length()) < 1) { pd.setyearUpdated(0); }else { pd.setyearUpdated(rs.getString(5).substring(0, 4)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1838/buggy-version/src.main.java.database.DBReader.java", "BodyUseAPI": ["main.java.classes_for_db.PropertyDetails.setyearUpdated(java.lang.String)", "java.sql.ResultSet.getString(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "ab12cf5f3207e0e944e48f13d9bc0652e5ac34a4", "Url": "https://api.github.com/repos/RFarizon/webservices", "Date": "2016-04-18T20:53:59Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bg.znestorov.sofbus24.databases.StationsDataSource.cursorToStation(android.database.Cursor)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(\"XXXX\".equals(foundStation.getNumber()))) { stations.add(foundStation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2731/buggy-version/HoloDesign-ver.3.Sofbus24.src.bg.znestorov.sofbus24.databases.StationsDataSource.java", "BodyUseAPI": ["java.util.List<bg.znestorov.sofbus24.entity.StationEntity>.add(bg.znestorov.sofbus24.entity.StationEntity)"], "Fixed commit": "eb291970ee962a35c8e65783ab30f8936c89cd6c", "Url": "https://api.github.com/repos/zdravko-nestorov/Sofbus-24", "Date": "2015-04-17T13:50:50Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contactPicture == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8523/buggy-version/src.heinrisch.contact.picture.sync.Friend.java", "BodyUseAPI": [], "Fixed commit": "e34d33aa15ce2b2f037fc51d05cfba8620d01f57", "Url": "https://api.github.com/repos/heinrisch/Contact-Picture-Sync", "Date": "2012-04-22T19:07:17Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["heinrisch.contact.picture.sync.ContactHandler.getPhoto(android.content.Context,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (contactPhoto != null) f.setContactPicture(contactPhoto);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8523/buggy-version/src.heinrisch.contact.picture.sync.ContactHandler.java", "BodyUseAPI": ["heinrisch.contact.picture.sync.Friend.setContactPicture(android.graphics.Bitmap)"], "Fixed commit": "e34d33aa15ce2b2f037fc51d05cfba8620d01f57", "Url": "https://api.github.com/repos/heinrisch/Contact-Picture-Sync", "Date": "2012-04-22T19:07:17Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tetrisGrid.isLose()) { if (kc == (Input.KEY_ESCAPE)) { restart(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/562/buggy-version/TetrisClone.src.Game.java", "BodyUseAPI": [], "Fixed commit": "275ef8731dcc28beea6f4d206309dd03b15706bb", "Url": "https://api.github.com/repos/teccoppeans/TetrisClone", "Date": "2013-08-08T15:43:40Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(likedBy.contains(u))) { likedBy.add(u); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9132/buggy-version/src.main.java.com.example.model.Post.java", "BodyUseAPI": ["java.util.HashSet<com.example.model.User>.add(com.example.model.User)"], "Fixed commit": "40a3dea74eb9d09a4daffc38edc452d6bc4fddae", "Url": "https://api.github.com/repos/tsgramova/FinalSpringProject", "Date": "2017-04-22T10:38:11Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasSelection) textLength -= java.lang.Math.abs(((cursor) - (selectionStart)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3461/buggy-version/UI.src.com.kotcrab.vis.ui.widget.VisTextField.java", "BodyUseAPI": [], "Fixed commit": "cb640cb483c4e301c82c9d23afffd7adade11805", "Url": "https://api.github.com/repos/kotcrab/vis-editor", "Date": "2015-08-09T14:17:20Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (crontab != null) { com.github.seratch.taskun.scheduler.crond.RawCrontabLine line = crontab.rawLine; if ((((line != null) && (!(line.toString().startsWith(\"#\")))) && (!(line.toString().equals(\"\")))) && (!(isAlreadyRegistered(crontab)))) { crontabLines.add(crontab); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8534/buggy-version/taskun-scheduler.src.main.java.com.github.seratch.taskun.scheduler.crond.CrontabRepository.java", "BodyUseAPI": ["com.github.seratch.taskun.scheduler.crond.CrontabRepository.isAlreadyRegistered(com.github.seratch.taskun.scheduler.crond.Crontab)", "java.util.List<com.github.seratch.taskun.scheduler.crond.Crontab>.add(com.github.seratch.taskun.scheduler.crond.Crontab)"], "Fixed commit": "ab641b11db835d1593b29ae79ceceeb0eaefe11d", "Url": "https://api.github.com/repos/seratch/taskun", "Date": "2011-09-06T05:55:43Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstFloorPosition) { firstFloorPosition = false; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3858/buggy-version/JavaElevatorAction.src.br.ol.elevador_action.ElevadorActionModel.java", "BodyUseAPI": [], "Fixed commit": "8c1d7685beedc34c1169cebbb53de898ef712419", "Url": "https://api.github.com/repos/leonardo-ono/Java2DElevatorActionGame", "Date": "2017-07-07T22:19:31Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tag.equals(\"\"))) { for (int i = 0; i < (fCode.size()); i++) { if (fCode.get(i).equals(tag)) { miiFriendsFound.add(new com.wii.sean.wiimmfiitus.model.MiiCharacter(fCode.get(i).toString(), miiName.get(i).toString(), vr.get(i).toString())); } } }else { for (int i = 0; i < (fCode.size()); i++) { if ((((fCode.get(i).equals(FriendCodes.PONCHO.getFriendCode())) || (fCode.get(i).equals(FriendCodes.DIKROT.getFriendCode()))) || (fCode.get(i).equals(FriendCodes.FARTFACE.getFriendCode()))) || (fCode.get(i).equals(FriendCodes.SEAN.getFriendCode()))) { miiFriendsFound.add(new com.wii.sean.wiimmfiitus.model.MiiCharacter(fCode.get(i).toString(), miiName.get(i).toString(), vr.get(i).toString())); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8443/buggy-version/app.src.main.java.com.wii.sean.wiimmfiitus.friendSearch.MkFriendSearch.java", "BodyUseAPI": ["java.lang.Object.equals(java.lang.String)"], "Fixed commit": "1919f56deebcc69d67aac36040efd07466b59791", "Url": "https://api.github.com/repos/seanleavy/WiimmFiinndus", "Date": "2017-03-08T22:43:07Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1625/buggy-version/src.org.peg4d.ParsingSource.java", "BodyUseAPI": [], "Fixed commit": "25c4038fa12db8a9e03132b9b4532f311080b730", "Url": "https://api.github.com/repos/nikuuchi/peg4d-java", "Date": "2015-01-04T16:52:08Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type.getParentid()) != null) this.writerkb.setSuperClass(type.getId(), type.getParentid());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/581/buggy-version/reasoner.src.main.java.org.earthcube.geosoft.software.api.impl.kb.SoftwareKB.java", "BodyUseAPI": ["org.earthcube.geosoft.software.classes.SoftwareType.getId()", "org.earthcube.geosoft.software.classes.SoftwareType.getParentid()", "edu.isi.wings.ontapi.KBAPI.setSuperClass(type.getId(),type.getParentid())"], "Fixed commit": "27159bbf160960960d7e7d25ef3f497e2478ffac", "Url": "https://api.github.com/repos/IKCAP/turbosoft", "Date": "2014-05-15T01:34:17Z"},
{"Line": "=>537", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type.getAnnotation()) != null) this.writerkb.setComment(cls, type.getAnnotation());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/581/buggy-version/reasoner.src.main.java.org.earthcube.geosoft.software.api.impl.kb.SoftwareKB.java", "BodyUseAPI": ["edu.isi.wings.ontapi.KBAPI.setComment(edu.isi.wings.ontapi.KBObject,type.getAnnotation())", "org.earthcube.geosoft.software.classes.SoftwareType.getAnnotation()"], "Fixed commit": "27159bbf160960960d7e7d25ef3f497e2478ffac", "Url": "https://api.github.com/repos/IKCAP/turbosoft", "Date": "2014-05-15T01:34:17Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (refChange.getFromHash().equalsIgnoreCase(\"0000000000000000000000000000000000000000\")) { com.atlassian.stash.content.Changeset latestChangeSet = commitService.getChangeset(repository, refChange.getToHash()); myChanges.add(latestChangeSet); }else { com.atlassian.stash.content.ChangesetsBetweenRequest request = new com.atlassian.stash.content.ChangesetsBetweenRequest.Builder(repository).exclude(refChange.getFromHash()).include(refChange.getToHash()).build(); com.atlassian.stash.util.Page<com.atlassian.stash.content.Changeset> changeSets = commitService.getChangesetsBetween(request, com.atlassian.stash.util.PageUtils.newRequest(0, PageRequest.MAX_PAGE_LIMIT)); myChanges.addAll(com.google.common.collect.Lists.newArrayList(changeSets.getValues())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4494/buggy-version/src.main.java.com.pragbits.stash.components.RepositoryPushActivityListener.java", "BodyUseAPI": ["com.atlassian.stash.commit.CommitService.getChangeset(com.atlassian.stash.repository.Repository,refChange.getToHash())", "com.atlassian.stash.repository.RefChange.getToHash()", "com.atlassian.stash.repository.RefChange.getToHash()", "new com.atlassian.stash.content.ChangesetsBetweenRequest.Builder(repository).exclude(refChange.getFromHash()).include(refChange.getToHash()).build()", "com.atlassian.stash.repository.RefChange.getFromHash()", "new com.atlassian.stash.content.ChangesetsBetweenRequest.Builder(repository).exclude(refChange.getFromHash()).include(refChange.getToHash())", "com.atlassian.stash.content.ChangesetsBetweenRequest.Builder.exclude(refChange.getFromHash())"], "Fixed commit": "db16b86c9deb2b8e1860ce101323814b38bd6b4c", "Url": "https://api.github.com/repos/pragbits/stash2slack", "Date": "2015-04-24T11:55:39Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((refChange.getToHash().equalsIgnoreCase(\"0000000000000000000000000000000000000000\")) && ((refChange.getType()) == (com.atlassian.stash.repository.RefChangeType.DELETE))) { text = java.lang.String.format(\"`%s` deleted by `%s <%s>`.\", refChange.getRefId(), ((event.getUser()) != null ? event.getUser().getDisplayName() : \"unknown user\"), ((event.getUser()) != null ? event.getUser().getEmailAddress() : \"unknown email\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4494/buggy-version/src.main.java.com.pragbits.stash.components.RepositoryPushActivityListener.java", "BodyUseAPI": ["com.atlassian.stash.repository.RefChange.getRefId()", "java.lang.String.format(java.lang.String,refChange.getRefId(),((event.getUser()) != null ? event.getUser().getDisplayName() : \"unknown user\"),((event.getUser()) != null ? event.getUser().getEmailAddress() : \"unknown email\"))"], "Fixed commit": "db16b86c9deb2b8e1860ce101323814b38bd6b4c", "Url": "https://api.github.com/repos/pragbits/stash2slack", "Date": "2015-04-24T11:55:39Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gmi.nordborglab.browser.server.repository.UserRepository.findOne(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (user != null) { name = ((user.getFirstname()) + \" \") + (user.getLastname()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5022/buggy-version/genophenbrowser-server.src.main.java.com.gmi.nordborglab.browser.server.security.EsAclManager.java", "BodyUseAPI": ["com.gmi.nordborglab.browser.server.domain.acl.AppUser.getFirstname()", "com.gmi.nordborglab.browser.server.domain.acl.AppUser.getLastname()"], "Fixed commit": "4117d3b7a300525c1e597c54ef3f47bdd541c8e7", "Url": "https://api.github.com/repos/timeu/GWA-Portal", "Date": "2015-01-26T16:45:48Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position > 998) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6567/buggy-version/LittleSmartTool2.src.littlesmarttool2.model.Setting.java", "BodyUseAPI": [], "Fixed commit": "76ae0b0e471a46c06556bd997cfa8aa47e626579", "Url": "https://api.github.com/repos/LittleSmartThings/LittleSmartTool2", "Date": "2013-05-27T08:06:58Z"},
{"Line": "=>714", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.deidentifier.arx.aggregates.HierarchyBuilderIntervalBased.getDataType()", "org.deidentifier.arx.DataType.DataTypeWithRatioScale<T>.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((type.compare(value, tempLower.labelBound)) < 0) { throw new java.lang.IllegalArgumentException(((type.format(value)) + \" is < lower label bound\")); }else if ((type.compare(value, tempLower.snapBound)) < 0) { interval = new org.deidentifier.arx.aggregates.HierarchyBuilderIntervalBased.Interval<T>(this, true, tempLower.snapBound); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7017/buggy-version/src.main.org.deidentifier.arx.aggregates.HierarchyBuilderIntervalBased.java", "BodyUseAPI": ["org.deidentifier.arx.DataType.DataTypeWithRatioScale<T>.compare(T,T)", "org.deidentifier.arx.DataType.DataTypeWithRatioScale<T>.format(T)"], "Fixed commit": "6daa6060828cb84ca1eb221707f26a807994216e", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-04-15T16:21:27Z"},
{"Line": "=>720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.deidentifier.arx.aggregates.HierarchyBuilderIntervalBased.getDataType()", "org.deidentifier.arx.DataType.DataTypeWithRatioScale<T>.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((type.compare(value, tempUpper.labelBound)) >= 0) { throw new java.lang.IllegalArgumentException(((type.format(value)) + \" is >= upper label bound\")); }else if ((type.compare(value, tempUpper.snapBound)) >= 0) { interval = new org.deidentifier.arx.aggregates.HierarchyBuilderIntervalBased.Interval<T>(this, false, tempUpper.snapBound); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7017/buggy-version/src.main.org.deidentifier.arx.aggregates.HierarchyBuilderIntervalBased.java", "BodyUseAPI": ["org.deidentifier.arx.DataType.DataTypeWithRatioScale<T>.format(T)", "org.deidentifier.arx.DataType.DataTypeWithRatioScale<T>.compare(T,T)"], "Fixed commit": "6daa6060828cb84ca1eb221707f26a807994216e", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-04-15T16:21:27Z"},
{"Line": "=>726", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((interval.min) != null) && ((interval.max) != null)) { if ((type.compare(interval.min, tempLower.repeatBound)) < 0) { interval = new org.deidentifier.arx.aggregates.HierarchyBuilderIntervalBased.Interval<T>(this, org.deidentifier.arx.aggregates.HierarchyBuilderIntervalBased.getDataType(), tempLower.repeatBound, interval.max, interval.function); } if ((type.compare(interval.max, tempUpper.repeatBound)) >= 0) { interval = new org.deidentifier.arx.aggregates.HierarchyBuilderIntervalBased.Interval<T>(this, org.deidentifier.arx.aggregates.HierarchyBuilderIntervalBased.getDataType(), interval.min, tempUpper.repeatBound, interval.function); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7017/buggy-version/src.main.org.deidentifier.arx.aggregates.HierarchyBuilderIntervalBased.java", "BodyUseAPI": ["org.deidentifier.arx.DataType.DataTypeWithRatioScale<T>.compare(T,T)"], "Fixed commit": "6daa6060828cb84ca1eb221707f26a807994216e", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-04-15T16:21:27Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["typeBuilder.getDefaultSchema().get(com.constellio.app.services.migrations.scripts.TOKENS).getDataEntry()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((dataEntry.getType()) == (CALCULATED)) && ((((com.constellio.model.entities.schemas.entries.CalculatedDataEntry) (dataEntry)).getCalculator()) instanceof com.constellio.model.services.schemas.calculators.TokensCalculator2)) { typeBuilder.getDefaultSchema().get(com.constellio.app.services.migrations.scripts.TOKENS).defineDataEntry().asCalculated(com.constellio.model.services.schemas.calculators.TokensCalculator3.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3835/buggy-version/app.src.com.constellio.app.services.migrations.scripts.CoreMigrationTo_6_7.java", "BodyUseAPI": [], "Fixed commit": "406de25554719d960b5b3b1a38fd8cd9c8f9c42a", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-01-11T19:45:03Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mListMutex) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7074/buggy-version/app.src.main.java.xyz.monkeytong.hongbao.services.HongbaoService.java", "BodyUseAPI": [], "Fixed commit": "5740f540ce904de239b325822257cb009947b474", "Url": "https://api.github.com/repos/jinge1936/WeChatLuckyMoney", "Date": "2016-02-07T10:39:04Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFile) != null) { if (mFile.getFile().exists()) { android.widget.Toast.makeText(getActivity(), \"Opening file\", Toast.LENGTH_SHORT).show(); com.stoneapp.ourvlemoodle2.util.FileUtils.openFile(getActivity(), mFile.getFile()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2743/buggy-version/app.src.main.java.com.stoneapp.ourvlemoodle2.fragments.CourseContentFragment.java", "BodyUseAPI": [], "Fixed commit": "77f582e92f63d4b3dab8de08e0ace7e00bc3b4ab", "Url": "https://api.github.com/repos/UWICompSociety/OurVLE", "Date": "2017-09-19T18:40:21Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((mEditable) && (mEditFlag)) && ((moonlight) != null)) && (!(moonlight.isTrash()))) { if (isMakeACopy) { com.art2cat.dev.moonlightnote.Utils.Firebase.FDatabaseUtils.updateMoonlight(mUserId, mKeyId, com.art2cat.dev.moonlightnote.Utils.MoonlightEncryptUtils.decryptMoonlight(moonlight), Constants.EXTRA_TYPE_MOONLIGHT); }else { com.art2cat.dev.moonlightnote.Utils.Firebase.FDatabaseUtils.updateMoonlight(mUserId, mKeyId, moonlight, Constants.EXTRA_TYPE_MOONLIGHT); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4279/buggy-version/app.src.main.java.com.art2cat.dev.moonlightnote.Controller.MoonlightDetail.MoonlightDetailFragment.java", "BodyUseAPI": ["com.art2cat.dev.moonlightnote.Utils.MoonlightEncryptUtils.decryptMoonlight(com.art2cat.dev.moonlightnote.Model.Moonlight)", "com.art2cat.dev.moonlightnote.Utils.Firebase.FDatabaseUtils.updateMoonlight(java.lang.String,java.lang.String,com.art2cat.dev.moonlightnote.Model.Moonlight,Constants.EXTRA_TYPE_MOONLIGHT)", "com.art2cat.dev.moonlightnote.Utils.Firebase.FDatabaseUtils.updateMoonlight(java.lang.String,java.lang.String,com.art2cat.dev.moonlightnote.Utils.MoonlightEncryptUtils.decryptMoonlight(moonlight),Constants.EXTRA_TYPE_MOONLIGHT)"], "Fixed commit": "821291c431850b0f469dc762b4334462dfc9b7c9", "Url": "https://api.github.com/repos/Art2Cat/MoonlightNote", "Date": "2016-12-16T08:04:22Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fos != null) { try { fos.close(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5872/buggy-version/app.src.main.java.com.zsx.download.Lib_DownloadService.java", "BodyUseAPI": ["java.io.FileOutputStream.close()"], "Fixed commit": "71a372cf2a477168ae0afb86e762d4b37dd74b19", "Url": "https://api.github.com/repos/z1986s8x11/androidLib", "Date": "2015-11-06T07:19:06Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.organization.DomainTable.truncate(row.theTimeStamp,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((valueTimeStamp == null) || ((valueTimeStamp.length()) == 0)) { valueTimeStamp = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5276/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.organization.DomainTable.java", "BodyUseAPI": [], "Fixed commit": "dfd8a6c3bb41e76212924a6be74f290e23d7588f", "Url": "https://api.github.com/repos/SilverYoCha/Silverpeas-Core", "Date": "2015-03-25T10:41:03Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.organization.DomainTable.truncate(row.theTimeStamp,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((valueTimeStamp == null) || ((valueTimeStamp.length()) == 0)) { valueTimeStamp = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5276/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.organization.DomainTable.java", "BodyUseAPI": [], "Fixed commit": "dfd8a6c3bb41e76212924a6be74f290e23d7588f", "Url": "https://api.github.com/repos/SilverYoCha/Silverpeas-Core", "Date": "2015-03-25T10:41:03Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((org.bukkit.Bukkit.getServer().getPluginManager().getPlugin(\"Vault\")) != null) { org.bukkit.plugin.RegisteredServiceProvider<net.milkbowl.vault.economy.Economy> economyProvider = org.bukkit.Bukkit.getServer().getServicesManager().getRegistration(net.milkbowl.vault.economy.Economy.class); if (economyProvider == null) { economy = null; }else { economy = economyProvider.getProvider(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4872/buggy-version/src.main.java.com.mtihc.minecraft.treasurechest.v8.rewardfactory.rewards.MoneyRewardFactory.java", "BodyUseAPI": [], "Fixed commit": "3609087e19584e89897e58e3cb19a5d27024c8bd", "Url": "https://api.github.com/repos/Mtihc/TreasureChest", "Date": "2012-07-20T06:00:59Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.nschmidt.ldparteditor.helpers.Cocoa.isCocoa) { if (((event.stateMask) & (org.eclipse.swt.SWT.ALT)) == (org.eclipse.swt.SWT.ALT)) { mouse_button_pressed = org.nschmidt.ldparteditor.enums.MouseButton.RIGHT; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7953/buggy-version/src.org.nschmidt.ldparteditor.helpers.composite3d.MouseActions.java", "BodyUseAPI": [], "Fixed commit": "80bdc1a7809c6d26d6af608da724934b37727ac2", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-06-24T15:43:47Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.nschmidt.ldparteditor.helpers.Cocoa.isCocoa) { if (((event.stateMask) & (org.eclipse.swt.SWT.ALT)) == (org.eclipse.swt.SWT.ALT)) { mouse_button_pressed = org.nschmidt.ldparteditor.enums.MouseButton.RIGHT; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7953/buggy-version/src.org.nschmidt.ldparteditor.helpers.composite3d.MouseActions.java", "BodyUseAPI": [], "Fixed commit": "80bdc1a7809c6d26d6af608da724934b37727ac2", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-06-24T15:43:47Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (r2.getStartNode().hasProperty(\"Guid\")) { java.lang.System.out.println((\"TrustEdge:\" + (r2.getStartNode().getProperty(\"Guid\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1909/buggy-version/src.app.Cli.java", "BodyUseAPI": ["java.io.PrintStream.println((\"TrustEdge:\" + (r2.getStartNode().getProperty(\"Guid\"))))", "r2.getStartNode().getProperty(java.lang.String)", "app.Relationship.getStartNode()"], "Fixed commit": "6c5778afb0c55606c4c2c7acc67e063a26fdd9a4", "Url": "https://api.github.com/repos/jamesmiller5/app", "Date": "2013-09-21T02:55:18Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1909/buggy-version/src.app.Cli.java", "BodyUseAPI": [], "Fixed commit": "6c5778afb0c55606c4c2c7acc67e063a26fdd9a4", "Url": "https://api.github.com/repos/jamesmiller5/app", "Date": "2013-09-21T02:55:18Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e1.getAddress()) != null) { java.lang.System.out.println(e1.getAddress()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1909/buggy-version/src.app.Cli.java", "BodyUseAPI": ["java.io.PrintStream.println(e1.getAddress())", "app.Email.getAddress()"], "Fixed commit": "6c5778afb0c55606c4c2c7acc67e063a26fdd9a4", "Url": "https://api.github.com/repos/jamesmiller5/app", "Date": "2013-09-21T02:55:18Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (internalNode.hasProperty(app.Email.EMAIL_KEY)) { address = ((java.lang.String) (internalNode.getProperty(app.Email.EMAIL_KEY))); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1909/buggy-version/src.app.Email.java", "BodyUseAPI": ["app.Email.getProperty(java.lang.String)"], "Fixed commit": "6c5778afb0c55606c4c2c7acc67e063a26fdd9a4", "Url": "https://api.github.com/repos/jamesmiller5/app", "Date": "2013-09-21T02:55:18Z"},
{"Line": "=>591", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chosenSong) != null) { for (mytunes.be.Song shownSong : shownSongs) { if ((shownSong.getSongId()) == (chosenSong.getSongId())) { chosenSong = shownSong; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8904/buggy-version/MyTunes.src.mytunes.gui.model.MainWindowModel.java", "BodyUseAPI": [], "Fixed commit": "5eaa4db0c5f55251103a0bb6bd074dc90494707e", "Url": "https://api.github.com/repos/JanvanZetten/MyTunes", "Date": "2017-12-12T11:30:42Z"},
{"Line": "=>604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chosenSong) != null) { if (chosenSong.equals(copyOfChosenSong)) { chosenSong = chosenPlaylist.getSongs().get(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8904/buggy-version/MyTunes.src.mytunes.gui.model.MainWindowModel.java", "BodyUseAPI": [], "Fixed commit": "5eaa4db0c5f55251103a0bb6bd074dc90494707e", "Url": "https://api.github.com/repos/JanvanZetten/MyTunes", "Date": "2017-12-12T11:30:42Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) == null) { mAdapter = new com.zfdang.zsmth_android.BoardRecyclerViewAdapter(com.zfdang.zsmth_android.models.BoardListContent.ALL_BOARDS, mListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8575/buggy-version/app.src.main.java.com.zfdang.zsmth_android.AllBoardFragment.java", "BodyUseAPI": [], "Fixed commit": "7ea3d645cc31cea2f666c043b91e1d55c92aef05", "Url": "https://api.github.com/repos/zfdang/zSMTH-Android", "Date": "2016-04-06T15:53:34Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.andiwand.odf2html.translator.content.SpreadsheetTableRowTranslator.getCurrentRepeated()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (repeated > 50) repeated = 50;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5535/buggy-version/src.at.andiwand.odf2html.translator.content.SpreadsheetTableTranslator.java", "BodyUseAPI": [], "Fixed commit": "55e571bfbd06c830fca4c1bfcc538ed4dcba4a69", "Url": "https://api.github.com/repos/andiwand/odf2html", "Date": "2012-10-23T20:58:44Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isEntityOnVec(entity.getTilePos()))) this.entityList.add(entity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6103/buggy-version/src.de.fhstralsund.opentransport.core.entity.EntityController.java", "BodyUseAPI": ["java.util.List<de.fhstralsund.opentransport.core.entity.Entity>.add(de.fhstralsund.opentransport.core.entity.Entity)"], "Fixed commit": "b0a3da338d53e1aa142fd9f2edbed36ca0b58d87", "Url": "https://api.github.com/repos/deB4SH/OpenTransport", "Date": "2014-12-03T16:41:47Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cassandra.db.marshal.UserType.split(java.nio.ByteBuffer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((values[i]) != null) { columns.add(process(columnBuilder.clone().udtName(itemName), itemType, values[i], hasAnyNotFrozenCollectionAsParent)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3823/buggy-version/plugin.src.main.java.com.stratio.cassandra.lucene.service.RegularCellsMapper.java", "BodyUseAPI": ["com.stratio.cassandra.lucene.service.RegularCellsMapper.process(columnBuilder.clone().udtName(itemName),org.apache.cassandra.db.marshal.AbstractType<?>,java.nio.ByteBuffer,boolean)", "com.stratio.cassandra.lucene.schema.column.Columns.add(com.stratio.cassandra.lucene.schema.column.Columns)"], "Fixed commit": "a5a01a5c028c75c114296e4aa4991d108ebd3c4d", "Url": "https://api.github.com/repos/Stratio/cassandra-lucene-index", "Date": "2016-01-08T11:26:15Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.janrufmonitor.repository.HttpCallManager.getXmlContent(de.janrufmonitor.service.commons.http.IHttpResponse)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((xml != null) && ((xml.length()) > 0)) { de.janrufmonitor.framework.ICallList l = de.janrufmonitor.xml.transformation.XMLSerializer.toCallList(xml); if (l != null) return l; this.m_logger.warning(\"Calllist from remote host was empty.\"); de.janrufmonitor.exception.PropagationFactory.getInstance().fire(new de.janrufmonitor.exception.Message(de.janrufmonitor.exception.Message.ERROR, getNamespace(), \"empty\", new java.lang.Exception(\"CallList from server has either a wrong format, contains forbidden characters or was empty.\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1581/buggy-version/modules.httpclient.src.de.janrufmonitor.repository.HttpCallManager.java", "BodyUseAPI": ["de.janrufmonitor.xml.transformation.XMLSerializer.toCallList(java.lang.String)"], "Fixed commit": "08532c172249d217ac89d87a7d72ddb49cfdee55", "Url": "https://api.github.com/repos/tbrandt77/janrufmonitor", "Date": "2014-05-27T20:49:40Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((className == null) || (className.trim().isEmpty())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2430/buggy-version/src.main.java.feedreader.web.rest.RestServlet.java", "BodyUseAPI": [], "Fixed commit": "9bc0d75c3571247fee474be46e8a619df9a82949", "Url": "https://api.github.com/repos/jaredpearson/feedreader", "Date": "2013-11-24T20:31:27Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((other.data) == null) { return (data) == null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1584/buggy-version/src.echowand.service.result.ResultData.java", "BodyUseAPI": [], "Fixed commit": "0a8dc92e748206044a1b260fae1dd71e778ff008", "Url": "https://api.github.com/repos/ymakino/echowand", "Date": "2015-03-14T03:19:27Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pName.equals(\"com.apres.cmps116.url_logger\")) { results.add(item); saveResults(results); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1380/buggy-version/app.src.main.java.com.apres.cmps116.url_logger.MyService.java", "BodyUseAPI": [], "Fixed commit": "84b544bb9e89f67cdd8e51552b18280c7ffa0679", "Url": "https://api.github.com/repos/URL-Logger/Android-AppTracker-Draft2", "Date": "2017-05-19T17:03:56Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(edu.umass.cs.weathercasestudy.SearchAndUpdateDriver.triggerEnabled)) { edu.umass.cs.weathercasestudy.SearchAndUpdateDriver.PeriodicRefreshThread periodicRefresh = new edu.umass.cs.weathercasestudy.SearchAndUpdateDriver.PeriodicRefreshThread(); new java.lang.Thread(periodicRefresh).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4554/buggy-version/src.edu.umass.cs.weathercasestudy.SearchAndUpdateDriver.java", "BodyUseAPI": [], "Fixed commit": "08792a6afbdfa785d9a3bfa8d1790835018285c7", "Url": "https://api.github.com/repos/ayadavumass/ContextServiceExperimentCode", "Date": "2016-09-16T21:53:16Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.netty.buffer.ChannelBuffer.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_ALERT_NOTIFICATION)) { pdu = new com.cloudhopper.smpp.pdu.AlertNotification(); }else if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_SUBMIT_MULTI)) { pdu = new com.cloudhopper.smpp.pdu.SubmitMulti(); }else { pdu = new com.cloudhopper.smpp.pdu.PartialPdu(commandId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3090/buggy-version/src.main.java.com.cloudhopper.smpp.transcoder.DefaultPduTranscoder.java", "BodyUseAPI": [], "Fixed commit": "3e56da880efd716e8ddd329ecfa6d3ecd4baec25", "Url": "https://api.github.com/repos/RestComm/cloudhopper-smpp", "Date": "2013-06-09T08:31:22Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.netty.buffer.ChannelBuffer.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_GENERIC_NACK)) { pdu = new com.cloudhopper.smpp.pdu.GenericNack(); }else if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_SUBMIT_MULTI_RESP)) { pdu = new com.cloudhopper.smpp.pdu.SubmitMultiResp(); }else { pdu = new com.cloudhopper.smpp.pdu.PartialPduResp(commandId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3090/buggy-version/src.main.java.com.cloudhopper.smpp.transcoder.DefaultPduTranscoder.java", "BodyUseAPI": [], "Fixed commit": "3e56da880efd716e8ddd329ecfa6d3ecd4baec25", "Url": "https://api.github.com/repos/RestComm/cloudhopper-smpp", "Date": "2013-06-09T08:31:22Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.nestedworld.nestedworld.Utils.Typeface.FontManager.instance) == null) { com.nestedworld.nestedworld.Utils.Typeface.FontManager.init(mgr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4247/buggy-version/app.src.main.java.com.nestedworld.nestedworld.Utils.Typeface.FontManager.java", "BodyUseAPI": [], "Fixed commit": "559650dc5d940e5e736e1782f5b7177d6bdb20a6", "Url": "https://api.github.com/repos/kassisdion/NestedWorld-Android", "Date": "2015-09-03T15:13:48Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { java.util.Calendar comicDate = ((java.util.Calendar) (savedInstanceState.getSerializable(\"comicDate\"))); currentComicDate = comicDate; loadComic(); }else { loadComic(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7229/buggy-version/app.src.main.java.me.loganfuller.garfieldreader.MainActivity.java", "BodyUseAPI": ["android.os.Bundle.getSerializable(java.lang.String)"], "Fixed commit": "fba5a0817a88bcfa44374b2afa535c3d34ca71a7", "Url": "https://api.github.com/repos/Speshel/GarfieldReader", "Date": "2017-07-17T05:00:14Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(lorian.graph.GraphFunctionsFrame.applet)) lorian.graph.GraphFunctionsFrame.funcframe.setTitle(((((\"Graph v\" + (lorian.graph.GraphFunctionsFrame.version)) + \" - \") + (lorian.graph.GraphFunctionsFrame.FileName)) + (lorian.graph.GraphFunctionsFrame.FileSaved ? \"\" : \" *\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1961/buggy-version/lorian.graph.GraphFunctionsFrame.java", "BodyUseAPI": [], "Fixed commit": "a7c63402a747036d0af295bb91682ba7d683804a", "Url": "https://api.github.com/repos/lorian1333/graph", "Date": "2013-04-13T08:50:35Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/113/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "4a2f998ab8cf6dec6c76284e91812312cddbe1eb", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.example.app.model.DBConnection.sConnection) == null) || (com.example.app.model.DBConnection.sConnection.isClosed())) { java.lang.String url = ((\"jdbc:mysql://\" + host) + \"/\") + db; java.lang.Class.forName(\"com.mysql.jdbc.Driver\"); com.example.app.model.DBConnection.sConnection = java.sql.DriverManager.getConnection(url, user, password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3260/buggy-version/src.com.example.app.model.DBConnection.java", "BodyUseAPI": [], "Fixed commit": "b3d048c4a327498649c9617a6aa3fc9d08c8cc1e", "Url": "https://api.github.com/repos/alandurney/Department-Store", "Date": "2015-02-26T18:19:09Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((chs.length()) == 0) || (((chs.length()) == 1) && ((chs.charAt(0)) == '/'))) { chs = \"1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3718/buggy-version/src.hydna.Channel.java", "BodyUseAPI": [], "Fixed commit": "5b9a4c650ec59d6dc2e2deca616eb41d0c72e7ee", "Url": "https://api.github.com/repos/hydna/hydna-java", "Date": "2013-05-27T19:58:53Z"}]}
