{"UNKNOWN to If":[{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (latLngBounds != null) googleMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(latLngBounds, ch.hearc.devmobile.travelnotebook.NotebookActivity.MAP_BOUNDS_MARGIN));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5785/buggy-version/src.ch.hearc.devmobile.travelnotebook.NotebookActivity.java", "BodyUseAPI": ["com.google.android.gms.maps.GoogleMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(latLngBounds, ch.hearc.devmobile.travelnotebook.NotebookActivity.MAP_BOUNDS_MARGIN))", "com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(com.google.android.gms.maps.model.LatLngBounds,int)"], "Fixed commit": "4dd06c9a681d126a571ab39224d66aa892cac1d4", "Url": "https://api.github.com/repos/maeberli/travelnotebook", "Date": "2014-01-03T06:43:59Z"},
{"Line": "=>607", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.jsoup.helper.StringUtil.isBlank(key))) { body = (\" { \\\"secretkey\\\": \\\"\" + key) + \"\\\" }\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6665/buggy-version/exportLibraries.ecs.src.main.java.com.emc.storageos.ecs.api.ECSApi.java", "BodyUseAPI": [], "Fixed commit": "94e2f5517908b5cf5831170d0751b8f98c6f433b", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-03-24T14:28:32Z"},
{"Line": "=>1337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.jsoup.helper.StringUtil.isBlank(param.getSecretkey()))) { secretKey = param.getSecretkey(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6665/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.StorageSystemService.java", "BodyUseAPI": ["com.emc.storageos.model.object.ObjectUserSecretKeyRequestParam.getSecretkey()"], "Fixed commit": "94e2f5517908b5cf5831170d0751b8f98c6f433b", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-03-24T14:28:32Z"},
{"Line": "=>1685", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parent instanceof java.util.List) { for (java.lang.Object element : ((java.util.List) (parent))) { if (element == null) { continue; } setPropertyValue(element, name, value); } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3668/buggy-version/src.main.java.com.alibaba.fastjson.JSONPath.java", "BodyUseAPI": [], "Fixed commit": "e583e43988e4cd3e6d26f23ebe93458c60367dbf", "Url": "https://api.github.com/repos/lichenxing/fastJson", "Date": "2015-07-05T13:38:44Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != o) { if ((o < lowBorder) || (o > highBorder)) { outlierList.add(new org.molgenis.charts.data.XYData(count, o)); }else { normalList.add(o); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/187/buggy-version/molgenis-charts.src.main.java.org.molgenis.charts.data.ChartDataServiceImpl.java", "BodyUseAPI": ["java.util.List<java.lang.Double>.add(java.lang.Double)", "java.util.List<org.molgenis.charts.data.XYData>.add(org.molgenis.charts.data.XYData)"], "Fixed commit": "60a7d7b32b32af4e9cfecdcad60ff4ec0da7eefa", "Url": "https://api.github.com/repos/molgenis/molgenis", "Date": "2014-07-31T14:42:04Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mInvest.getAlarmHour()) == currentHour) { buy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1976/buggy-version/app.src.main.java.com.tao.autoinvest.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "85645e6ad3a339e0d37b66fa30b9fab4e9886356", "Url": "https://api.github.com/repos/yinzhijian/Autoinvest", "Date": "2017-05-21T13:39:29Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MyPetConfig.hungerSystem) { return hunger; }else { return 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1790/buggy-version/src.Java.de.Keyle.MyPet.entity.types.MyPet.java", "BodyUseAPI": [], "Fixed commit": "00b20cdee6350c6e497c507d0b08af6e03baaacc", "Url": "https://api.github.com/repos/xXKeyleXx/MyPet", "Date": "2013-01-01T12:01:57Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!fail) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4496/buggy-version/proivzo-pkg.src.main.java.com.proizvo.pkg.util.IOHelper.java", "BodyUseAPI": [], "Fixed commit": "be80a653009bedc056dc6a7643bb1138e2896429", "Url": "https://api.github.com/repos/proivzo/proivzo", "Date": "2016-08-07T23:51:08Z"},
{"Line": "=>820", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.unresolvedLoggers.remove(fullName))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9123/buggy-version/araqne-log-api.src.main.java.org.araqne.log.api.AbstractLogger.java", "BodyUseAPI": [], "Fixed commit": "7ba55ac55be6ef0bd11f3eaf2dcdd6ab507932cd", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-04-24T12:59:27Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listResourceOptionsStruct.get(\"geni_compressed\")) != null) { listResourceOptions.setGeni_compressed(new org.fiteagle.interactors.sfa.common.GeniCompressedOption(listResourceOptionsStruct.getBoolean(\"geni_compressed\"))); }else { listResourceOptions.setGeni_compressed(new org.fiteagle.interactors.sfa.common.GeniCompressedOption(false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2667/buggy-version/delivery.interfaces.src.main.java.org.fiteagle.delivery.xmlrpc.util.GeniAMHandler.java", "BodyUseAPI": ["org.fiteagle.interactors.sfa.listresources.ListResourceOptions.setGeni_compressed(org.fiteagle.interactors.sfa.common.GeniCompressedOption)", "redstone.xmlrpc.XmlRpcStruct.getBoolean(java.lang.String)"], "Fixed commit": "885c33d100e9487883fc72b2e48fecb273121898", "Url": "https://api.github.com/repos/tubav/fiteagle", "Date": "2013-05-29T12:35:31Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listResourceOptionsStruct.get(\"geni_available\")) != null) listResourceOptions.setGeni_available(new org.fiteagle.interactors.sfa.common.GeniAvailableOption(listResourceOptionsStruct.getBoolean(\"geni_available\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2667/buggy-version/delivery.interfaces.src.main.java.org.fiteagle.delivery.xmlrpc.util.GeniAMHandler.java", "BodyUseAPI": ["org.fiteagle.interactors.sfa.listresources.ListResourceOptions.setGeni_available(org.fiteagle.interactors.sfa.common.GeniAvailableOption)", "redstone.xmlrpc.XmlRpcStruct.getBoolean(java.lang.String)"], "Fixed commit": "885c33d100e9487883fc72b2e48fecb273121898", "Url": "https://api.github.com/repos/tubav/fiteagle", "Date": "2013-05-29T12:35:31Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mDataNotSet) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4553/buggy-version/MPChartLib.src.com.github.mikephil.charting.charts.PieChart.java", "BodyUseAPI": [], "Fixed commit": "aec9f79b06eae3132da16d5311039f2b6bb3c1b0", "Url": "https://api.github.com/repos/PhilJay/MPAndroidChart", "Date": "2014-08-19T08:07:35Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opencb.opencga.storage.core.search.solr.SolrQueryParser.buildXrefOrGeneOrRegion(java.util.List<java.lang.String>,java.util.List<java.lang.String>,java.util.List<org.opencb.biodata.models.core.Region>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(orXrefs.isEmpty())) { filterList.add(orXrefs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4796/buggy-version/opencga-storage.opencga-storage-core.src.main.java.org.opencb.opencga.storage.core.search.solr.SolrQueryParser.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "27497383aabcd1faf5ea3a049f8ddcf80bf2dcdc", "Url": "https://api.github.com/repos/opencb/opencga", "Date": "2017-03-14T00:40:40Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (autoWrite) workbook.write(outputStream);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5659/buggy-version/hsweb-expands-office.src.main.java.org.hsweb.expands.office.excel.api.poi.callback.POIExcelWriterProcessor.java", "BodyUseAPI": [], "Fixed commit": "161a44f0cea2d00600d1b881976977500776966e", "Url": "https://api.github.com/repos/hs-web/hsweb-expands", "Date": "2017-01-03T09:56:22Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adminService.getNumPendingCompleteTransactions()) > 0) { throw new java.lang.IllegalStateException(\"There are still pending complete transactions\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8407/buggy-version/agent-parent.it-harness.src.main.java.org.glowroot.agent.it.harness.impl.JavaagentContainer.java", "BodyUseAPI": [], "Fixed commit": "d981e73647d7e02f068b08375561403f49a88c90", "Url": "https://api.github.com/repos/trask/glowroot", "Date": "2015-10-11T19:51:56Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adminService.getNumPendingCompleteTransactions()) > 0) { throw new java.lang.IllegalStateException(\"There are still pending complete transactions\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8407/buggy-version/agent-parent.it-harness.src.main.java.org.glowroot.agent.it.harness.impl.LocalContainer.java", "BodyUseAPI": [], "Fixed commit": "d981e73647d7e02f068b08375561403f49a88c90", "Url": "https://api.github.com/repos/trask/glowroot", "Date": "2015-10-11T19:51:56Z"},
{"Line": "=>1417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.storage.ceph.backup.CephBackupStorageVO.getFsid()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((org.zstack.core.db.Q.New(org.zstack.storage.ceph.backup.CephBackupStorageVO.class).eq(CephBackupStorageVO_.fsid, fsid).find()) == null) { dbf.removeByPrimaryKey(fsid, org.zstack.storage.ceph.backup.CephCapacityVO.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4591/buggy-version/plugin.ceph.src.main.java.org.zstack.storage.ceph.backup.CephBackupStorageBase.java", "BodyUseAPI": ["org.zstack.storage.ceph.backup.CephBackupStorageBase.removeByPrimaryKey(java.lang.String,java.lang.Class)"], "Fixed commit": "125072343c600ae14e3d3a3d68b2852a7bda3ea2", "Url": "https://api.github.com/repos/MaJin1996/zstack", "Date": "2017-03-20T01:34:58Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.googlecode.objectify.Key.create(java.lang.Class,com.googlecode.objectify.Ref.create(pointKey).get().getTrailId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (registeredKeys.contains(trailKey)) { if (trailsKeys.add(trailKey)) { result.add(new mx.krieger.mapaton.publicutils.handlers.NearTrails(com.googlecode.objectify.Ref.create(trailKey).get())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1772/buggy-version/public-utils.src.main.java.mx.krieger.mapaton.publicutils.handlers.TrailsHandler.java", "BodyUseAPI": ["java.util.ArrayList<mx.krieger.mapaton.publicutils.handlers.NearTrails>.add(mx.krieger.mapaton.publicutils.handlers.NearTrails)", "java.util.HashSet<com.googlecode.objectify.Key<mx.krieger.mapaton.publicutils.entities.RegisteredTrail>>.add(com.googlecode.objectify.Key<mx.krieger.mapaton.publicutils.entities.RegisteredTrail>)", "com.googlecode.objectify.Ref.create(trailKey).get()", "com.googlecode.objectify.Ref.create(com.googlecode.objectify.Key<mx.krieger.mapaton.publicutils.entities.RegisteredTrail>)"], "Fixed commit": "a9c4f5fd50cae460ff18d112de680adbff0443cb", "Url": "https://api.github.com/repos/LabPLC/MapatonAPI", "Date": "2016-04-09T13:44:04Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ownTryBlock) == null) newTryBlock = null; else { uk.ac.cam.db538.dexter.dex.code.elem.DexTryEnd newEnd = new uk.ac.cam.db538.dexter.dex.code.elem.DexTryEnd(ownTryBlock.getEndMarker().getId()); newTryBlock = new uk.ac.cam.db538.dexter.dex.code.elem.DexTryStart(ownTryBlock, newEnd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4092/buggy-version/libdexter.src.main.java.uk.ac.cam.db538.dexter.transform.MethodCall.java", "BodyUseAPI": [], "Fixed commit": "9d825f9de49ee43e31eff13f240aba23ec577573", "Url": "https://api.github.com/repos/davidbrazdil/dexter", "Date": "2013-11-05T16:44:34Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mThemeSetAtRuntime) { dialog.setThemeDark(mThemeDark); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/879/buggy-version/bottomsheetpickers.src.main.java.com.philliphsu.bottomsheetpickers.BottomSheetPickerDialog.java", "BodyUseAPI": [], "Fixed commit": "56e81627b7eab3efc4a50f590669c86276a54bf4", "Url": "https://api.github.com/repos/philliphsu/BottomSheetPickers", "Date": "2017-02-27T06:18:16Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3565/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "b27710b5754728068dd2d64aad2d18aa4e6ff302", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-04T03:01:09Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((image) != null) { dest.writeInt(image.length); dest.writeByteArray(image); }else { dest.writeInt(0); byte[] i = new byte[0]; dest.writeByteArray(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8960/buggy-version/app.src.main.java.com.example.gokhan.papurrless.ListFragment.java", "BodyUseAPI": [], "Fixed commit": "fbeca4b10aa58afda01a874880a6a0298749c24a", "Url": "https://api.github.com/repos/GokGuu/Papurrless", "Date": "2016-03-28T15:55:13Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imagePath) != null) { dest.writeString(imagePath); }else { dest.writeString(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8960/buggy-version/app.src.main.java.com.example.gokhan.papurrless.ListFragment.java", "BodyUseAPI": [], "Fixed commit": "fbeca4b10aa58afda01a874880a6a0298749c24a", "Url": "https://api.github.com/repos/GokGuu/Papurrless", "Date": "2016-03-28T15:55:13Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isNotLogin(req)) { showLoginPage(req, resp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/961/buggy-version/src.main.java.com.bodejidi.AuthLoginServlet.java", "BodyUseAPI": ["com.bodejidi.AuthLoginServlet.showLoginPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"], "Fixed commit": "285a921c0541dcb805afa8794446416f191bc5ea", "Url": "https://api.github.com/repos/baijiayong/mustached-octo-shame-jdbc", "Date": "2014-05-31T02:10:29Z"},
{"Line": "=>596", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mpl1c009a.isChecked()) { if (mpl1c010.getText().toString().isEmpty()) { android.widget.Toast.makeText(this, (\"ERROR(Empty)\" + (getString(R.string.mpl1c010))), Toast.LENGTH_SHORT).show(); mpl1c010.setError(\"This data is required\"); android.util.Log.d(edu.aku.hassannaqvi.mapps_form_l1.activities.SectionEActivity.TAG, \" mpl1c010 :empty \"); return false; }else { mpl1c010.setError(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6195/buggy-version/app.src.main.java.edu.aku.hassannaqvi.mapps_form_l1.activities.SectionEActivity.java", "BodyUseAPI": [], "Fixed commit": "007148ad269677267872aa4b52ea378588b04be4", "Url": "https://api.github.com/repos/shznaqvi/MaPPS-L1", "Date": "2017-10-07T12:36:37Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (mEvent)) { mEvent = new com.canyapan.dietdiaryapp.models.Event(); mEvent.setType(Event.TYPE_FOOD); mEvent.setDate(org.joda.time.LocalDate.now()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5884/buggy-version/app.src.main.java.com.canyapan.dietdiaryapp.CreateEditEventActivity.java", "BodyUseAPI": [], "Fixed commit": "1f67c77d7cf0d0df2929d500ecb0ce2cf5075a9d", "Url": "https://api.github.com/repos/canyapan/DietDiaryApp", "Date": "2017-05-11T06:50:33Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.ele.amigo.PatchChecker.checkPatchAndCopy(android.content.Context,java.io.File,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (patchChecksum != null) { me.ele.amigo.AmigoService.start(context, patchChecksum, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7109/buggy-version/amigo-lib.src.main.java.me.ele.amigo.Amigo.java", "BodyUseAPI": ["me.ele.amigo.AmigoService.start(android.content.Context,java.lang.String,boolean)"], "Fixed commit": "5eb5503cf0ffb5c24e8ffba9faa3bd0a348d271d", "Url": "https://api.github.com/repos/eleme/Amigo", "Date": "2016-11-09T06:02:52Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (container instanceof org.eclipse.cdt.debug.core.sourcelookup.AbsolutePathSourceContainer) { container = new melnorme.lang.ide.debug.core.LangAbsolutePathSourceContainer(); }else { container = type.createSourceContainer(type.getMemento(container)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8481/buggy-version/plugin_ide.debug.src-lang.melnorme.lang.ide.debug.core.LangSourceLookupDirector.java", "BodyUseAPI": ["org.eclipse.debug.core.sourcelookup.ISourceContainerType.getMemento(org.eclipse.debug.core.sourcelookup.ISourceContainer)", "org.eclipse.debug.core.sourcelookup.ISourceContainerType.createSourceContainer(type.getMemento(container))"], "Fixed commit": "d0a6ce212f5dfd58f5b98deec35653b935ffcf3d", "Url": "https://api.github.com/repos/RustDT/RustDT", "Date": "2015-11-19T17:34:38Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (editText != null) { inputMethodManager.hideSoftInputFromWindow(editText.getWindowToken(), 0); }else if ((activity.getCurrentFocus()) != null) { inputMethodManager.hideSoftInputFromWindow(activity.getCurrentFocus().getWindowToken(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9077/buggy-version/robotium-solo.src.main.java.com.jayway.android.robotium.solo.TextEnterer.java", "BodyUseAPI": ["android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(editText.getWindowToken(),int)", "android.widget.EditText.getWindowToken()"], "Fixed commit": "eb7ea77ec287b3afdc75f0e6a3756e11a0a06d34", "Url": "https://api.github.com/repos/jayway/robotium", "Date": "2013-06-07T11:39:28Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.meta.ItemMeta.getLore()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lore == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1278/buggy-version/src.main.java.com.github.riking.dropcontrol.matcher.LoreLineMatcher.java", "BodyUseAPI": [], "Fixed commit": "72e6201771d2b9ff2a91f307e0bfeb2dac14c892", "Url": "https://api.github.com/repos/riking/DropControl", "Date": "2013-08-19T23:03:04Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(p.fieldList.getValue())) { vr.setStatus(Result.ERROR); vr.setMessage(org.talend.components.marketo.runtime.MarketoSource.messages.getMessage(\"error.validation.fieldlist\")); return vr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/335/buggy-version/components.components-marketo.src.main.java.org.talend.components.marketo.runtime.MarketoSource.java", "BodyUseAPI": [], "Fixed commit": "15f86d82da4f5265270ca0a94a60b8f03df4b660", "Url": "https://api.github.com/repos/Talend/components", "Date": "2017-05-09T07:52:57Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (g != null) g.drawImage(offscreen, 0, 0, this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8851/buggy-version/src.com.darksouls.rougelike.view.GameCanvas.java", "BodyUseAPI": ["java.awt.Graphics2D.drawImage(java.awt.Image,int,int,com.darksouls.rougelike.view.GameCanvas)"], "Fixed commit": "d95be67dc48b8cfc789ba3620cf81c71631a0e00", "Url": "https://api.github.com/repos/SoulEvans07/SoulsLike", "Date": "2016-04-26T19:07:51Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dungeonLevel) != null) dungeonLevel.tick();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8851/buggy-version/src.com.darksouls.rougelike.view.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "d95be67dc48b8cfc789ba3620cf81c71631a0e00", "Url": "https://api.github.com/repos/SoulEvans07/SoulsLike", "Date": "2016-04-26T19:07:51Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((canvas.getGraphics()) != null) canvas.paint(canvas.getGraphics());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8851/buggy-version/src.com.darksouls.rougelike.view.GamePanel.java", "BodyUseAPI": ["com.darksouls.rougelike.view.GameCanvas.getGraphics()", "com.darksouls.rougelike.view.GameCanvas.paint(canvas.getGraphics())"], "Fixed commit": "d95be67dc48b8cfc789ba3620cf81c71631a0e00", "Url": "https://api.github.com/repos/SoulEvans07/SoulsLike", "Date": "2016-04-26T19:07:51Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game.getTurn()) == (tp.pr5.logic.Counter.WHITE)) { currentPlayer = 0; }else { currentPlayer = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/830/buggy-version/src.tp.pr5.control.Controller.java", "BodyUseAPI": [], "Fixed commit": "ce12864748a37490e6719989a3ef4a1ec5ce8f25", "Url": "https://api.github.com/repos/ferreiro/JavaGames-X4", "Date": "2015-04-28T20:08:54Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (designErrors.isEmpty()) design.fillInUnusedPackages(designErrors);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3453/buggy-version/trunk.ant-contrib.src.java.net.sf.antcontrib.design.VerifyDesignDelegate.java", "BodyUseAPI": ["net.sf.antcontrib.design.Design.fillInUnusedPackages(java.util.Vector)"], "Fixed commit": "895e2b8aa2d5ca3e8e4784f78b2583bb0fb9beb2", "Url": "https://api.github.com/repos/crazy-max/ant-contrib", "Date": "2006-10-25T21:22:43Z"},
{"Line": "=>1138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (throwStmt != null) if (aliasing.mayAlias(throwStmt.getOp(), source.getAccessPath().getPlainValue())) return java.util.Collections.singleton(source.deriveNewAbstractionOnThrow(throwStmt));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1410/buggy-version/src.soot.jimple.infoflow.problems.InfoflowProblem.java", "BodyUseAPI": ["soot.jimple.ThrowStmt.getOp()", "java.util.Collections.singleton(source.deriveNewAbstractionOnThrow(throwStmt))", "soot.jimple.infoflow.data.Abstraction.deriveNewAbstractionOnThrow(soot.jimple.ThrowStmt)", "soot.jimple.infoflow.aliasing.Aliasing.mayAlias(throwStmt.getOp(),source.getAccessPath().getPlainValue())"], "Fixed commit": "d76e39dd749cdd97501bdf7ab6fe8d818d524202", "Url": "https://api.github.com/repos/secure-software-engineering/soot-infoflow", "Date": "2015-03-19T14:16:52Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((carsBuyerIsWatchingDto.getVins()) == null) || (carsBuyerIsWatchingDto.getVins().isEmpty())) { returns = new java.util.ArrayList(); }else { returns = this.carStoreService.postForObject(this.carStoreUrlWatching, carsBuyerIsWatchingDto, ((java.lang.Class<java.util.List<com.rta.filtercarlist.dto.Car>>) ((java.lang.Object) (java.util.List.class))), vars); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5174/buggy-version/src.main.java.com.rta.filtercarlist.rest.CarRest.java", "BodyUseAPI": ["org.springframework.web.client.RestTemplate.postForObject(java.lang.String,com.rta.filtercarlist.dto.CarBuyerIsWatchingDto,java.lang.Class,java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "41f6df8775745007727eec1f9bb28283585ef385", "Url": "https://api.github.com/repos/reasonthearchitect/AD_FilterCarList", "Date": "2016-08-01T01:22:58Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.silverpeas.sharing.services.SharingServiceFactory.getSharingTicketService().getTicket(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((ticket == null) || (!(ticket.isValid()))) { throw new javax.ws.rs.WebApplicationException(Response.Status.NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7324/buggy-version/web-core.src.main.java.org.silverpeas.sharing.web.SharingResource.java", "BodyUseAPI": [], "Fixed commit": "92fe8572e66acaf2758512a5a9dce3a6d25987da", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2013-11-05T16:27:09Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zimbra.cs.imap.ImapHandler.getSelectedFolder()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (selectedFolder != null) { com.zimbra.cs.imap.ImapMessage i4msg = selectedFolder.getById(msgId); if (i4msg != null) { i4msg.setSessionFlags(sflags, selectedFolder); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1802/buggy-version/store.src.java.com.zimbra.cs.imap.AppendMessage.java", "BodyUseAPI": ["com.zimbra.cs.imap.ImapFolder.getById(int)", "com.zimbra.cs.imap.ImapMessage.setSessionFlags(short,com.zimbra.cs.imap.ImapFolder)"], "Fixed commit": "95774907c67bae5792eccade9bef37c0877a85bf", "Url": "https://api.github.com/repos/Zimbra/zm-mailbox", "Date": "2017-08-21T21:41:49Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.webapp.authenticator.framework.WebappAuthenticatorFactory.getAuthenticator(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (authenticator == null) { java.lang.String msg = \"Failed to load an appropriate authenticator to authenticate the request\"; org.wso2.carbon.webapp.authenticator.framework.AuthenticationFrameworkUtil.handleResponse(request, response, HttpServletResponse.SC_UNAUTHORIZED, msg); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1796/buggy-version/components.webapp-authenticator-framework.org.wso2.carbon.webapp.authenticator.framework.src.main.java.org.wso2.carbon.webapp.authenticator.framework.WebappAuthenticatorFrameworkValve.java", "BodyUseAPI": [], "Fixed commit": "67c3c7f9a5646a8c883649e79a0cf6b6a8f0aeea", "Url": "https://api.github.com/repos/milanperera/carbon-device-mgt", "Date": "2015-06-12T12:33:48Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((last) != null) { last.next = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3102/buggy-version/src.main.java.Deque.java", "BodyUseAPI": [], "Fixed commit": "290d7dc4d05b09d844c1a1f012225dc1fd7e6bf5", "Url": "https://api.github.com/repos/tedolga/algorithms", "Date": "2014-07-11T12:54:02Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((first) != null) { first.previous = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3102/buggy-version/src.main.java.Deque.java", "BodyUseAPI": [], "Fixed commit": "290d7dc4d05b09d844c1a1f012225dc1fd7e6bf5", "Url": "https://api.github.com/repos/tedolga/algorithms", "Date": "2014-07-11T12:54:02Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((table.getName()) != null) { tableName = table.getName(); }else { tableName = \"-\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8317/buggy-version/src.org.pine.servlets.app.delete.DeleteRow.java", "BodyUseAPI": ["org.pine.model.Table.getName()"], "Fixed commit": "d791519e4ebffa63ea3b887dc91f66f479cf0a19", "Url": "https://api.github.com/repos/barik87/pine", "Date": "2013-03-14T08:12:48Z"},
{"Line": "=>942", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pine.model.Table.getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (finalName != null) { finalName = (\"'\" + finalName) + \"'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8317/buggy-version/src.org.pine.dao.Dao.java", "BodyUseAPI": [], "Fixed commit": "d791519e4ebffa63ea3b887dc91f66f479cf0a19", "Url": "https://api.github.com/repos/barik87/pine", "Date": "2013-03-14T08:12:48Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["oakbot.chat.ChatMessage.getContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(command.name().equals(commandText))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9134/buggy-version/src.main.java.oakbot.bot.HelpCommand.java", "BodyUseAPI": [], "Fixed commit": "79c831a115b18464742f219850b83a8537fae3a4", "Url": "https://api.github.com/repos/mangstadt/OakBot", "Date": "2014-11-29T18:10:39Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((!(symbolAtStart.equals(seedu.address.logic.parser.CliSyntax.PREFIX_NAME.getPrefix()))) && (!(symbolAtStart.equals(seedu.address.logic.parser.CliSyntax.PREFIX_PHONE.getPrefix())))) && (!(symbolAtStart.equals(seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL.getPrefix())))) && (!(symbolAtStart.equals(seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS.getPrefix())))) { throw new seedu.address.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4069/buggy-version/src.main.java.seedu.address.logic.parser.FindCommandParser.java", "BodyUseAPI": [], "Fixed commit": "cd435915393f2f388ebd8fdc028e61eb5ca940cc", "Url": "https://api.github.com/repos/ZhangH795/main", "Date": "2017-10-15T15:47:15Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(getComponentVersionLink())) { return com.blackducksoftware.integration.hub.util.HubUrlParser.getUUIDFromURLString(com.blackducksoftware.integration.hub.api.component.ComponentVersionStatus.COMPONENT_URL_IDENTIFIER, getComponentVersionLink()); }else { return com.blackducksoftware.integration.hub.util.HubUrlParser.getUUIDFromURLString(com.blackducksoftware.integration.hub.api.component.ComponentVersionStatus.COMPONENT_URL_IDENTIFIER, getBomComponentVersionPolicyStatusLink()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2741/buggy-version/src.main.java.com.blackducksoftware.integration.hub.api.component.ComponentVersionStatus.java", "BodyUseAPI": [], "Fixed commit": "06d68ea89ef68a743654982b811db3481eb5ed8b", "Url": "https://api.github.com/repos/blackducksoftware/hub-common", "Date": "2016-09-14T19:07:07Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fqa.questionNumber) < 0) { fqa.questionNumber = (questions.size()) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6489/buggy-version/src.main.java.teammates.logic.core.FeedbackQuestionsLogic.java", "BodyUseAPI": [], "Fixed commit": "52ccedf6f825181551a9ef8f263c99667535198a", "Url": "https://api.github.com/repos/TEAMMATES/repo", "Date": "2014-07-03T09:40:33Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((picture) == null) { picture = new ca.ualberta.lard.model.Picture(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5419/buggy-version/LARD.src.ca.ualberta.lard.NewCommentActivity.java", "BodyUseAPI": [], "Fixed commit": "0b6ac0109106412c7c2659f633441d54930b94db", "Url": "https://api.github.com/repos/CMPUT301W14T06/LARD", "Date": "2014-04-03T01:15:02Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nr.viewnote.db.DbAdapter.getInstance(getActivity()).getEntityToView(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((entity != null) && ((entity.getImage()) != null)) { imageView.setImageBitmap(com.nr.androidutils.BitmapUtils.convertCompressedByteArrayToBitmap(entity.getImage())); editText.setText(entity.getText()); editText.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4440/buggy-version/app.src.main.java.com.nr.viewnote.view.NoteDetailFragment.java", "BodyUseAPI": ["com.nr.viewnote.db.NoteEntity.getText()", "com.nr.viewnote.view.ScaleImageView.setImageBitmap(com.nr.androidutils.BitmapUtils.convertCompressedByteArrayToBitmap(entity.getImage()))", "com.nr.androidutils.BitmapUtils.convertCompressedByteArrayToBitmap(entity.getImage())", "com.nr.viewnote.db.NoteEntity.getImage()", "android.widget.TextView.setText(entity.getText())"], "Fixed commit": "7bff64d6de49312599d4b04bbc259f7eacba9b87", "Url": "https://api.github.com/repos/vvkirillov/viewnote", "Date": "2015-12-14T09:21:40Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.faces.application.Application.createConverter(java.lang.Class<?>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (converter != null) { bean = ((javax.enterprise.inject.spi.Bean<javax.faces.convert.Converter>) (resolve(manager, converter.getClass()))); if ((bean != null) && ((bean.getBeanClass()) != (converter.getClass()))) { bean = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2852/buggy-version/src.org.omnifaces.cdi.converter.ConverterManager.java", "BodyUseAPI": ["javax.faces.convert.Converter.getClass()", "javax.faces.convert.Converter.getClass()", "org.omnifaces.cdi.converter.ConverterManager.resolve(javax.enterprise.inject.spi.BeanManager,converter.getClass())"], "Fixed commit": "4c2e5cbb55cd32aa69c699b978dc9fdb31ff1792", "Url": "https://api.github.com/repos/omnifaces/omnifaces", "Date": "2014-04-16T13:12:50Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cursor.hasNext())) { throw new java.io.IOException(\"hasNext() failed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6753/buggy-version/src.java.br.bireme.scl.CopyMongoDb.java", "BodyUseAPI": [], "Fixed commit": "e5e6d37e6b6b5581da9791711179a1f883aa2936", "Url": "https://api.github.com/repos/bireme/social-checklinks", "Date": "2015-04-17T17:53:53Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 0) { android.util.DisplayMetrics metrics = mContext.getResources().getDisplayMetrics(); int px = ((int) (android.util.TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 8, metrics))); android.support.v7.widget.RecyclerView.LayoutParams llp = ((android.support.v7.widget.RecyclerView.LayoutParams) (viewHolder.view.getLayoutParams())); llp.setMargins(((int) (mContext.getResources().getDimension(R.dimen.bite_card_margin_horizontal))), (((int) (mContext.getResources().getDimension(R.dimen.bite_card_margin_top))) + px), ((int) (mContext.getResources().getDimension(R.dimen.bite_card_margin_horizontal))), ((int) (mContext.getResources().getDimension(R.dimen.bite_card_margin_bottom)))); viewHolder.view.setLayoutParams(llp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2684/buggy-version/app.src.main.java.com.move4mobile.apps.bite.BitesAdapter.java", "BodyUseAPI": [], "Fixed commit": "27fba398b084ab0d15081e8aa969e9d9e3e6b326", "Url": "https://api.github.com/repos/mschilling/bite-android", "Date": "2016-11-29T12:48:40Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context instanceof android.app.Activity) { ((android.app.Activity) (context)).overridePendingTransition(options.enterAnim, options.exitAnim); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7585/buggy-version/saf-router.src.main.java.com.safframework.router.Router.java", "BodyUseAPI": [], "Fixed commit": "3e94fe1d175b1e8308f9361b8f785296588950d4", "Url": "https://api.github.com/repos/fengzhizi715/SAF-Kotlin-Router", "Date": "2017-08-26T04:47:20Z"},
{"Line": "=>2589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_model.getSize()) == 0) { resetDataLoader(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8682/buggy-version/zul.src.org.zkoss.zul.Listbox.java", "BodyUseAPI": [], "Fixed commit": "aeafc024d5b54e5adddc899aa2b43fb1ff0c3fee", "Url": "https://api.github.com/repos/VincentJian/zk", "Date": "2013-11-15T02:34:56Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultList) == null) { return \"\"; }else { return resultList.get(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7339/buggy-version/src.org.everyuse.android.adapter.QuerySuggestionAdapter.java", "BodyUseAPI": [], "Fixed commit": "d8e0920bb5a2caa51dc9dcd86a99f2b13701dbee", "Url": "https://api.github.com/repos/astray0924/EveryUseAndroid", "Date": "2013-02-28T05:17:10Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultList) == null) { return 0; }else { return resultList.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7339/buggy-version/src.org.everyuse.android.adapter.QuerySuggestionAdapter.java", "BodyUseAPI": [], "Fixed commit": "d8e0920bb5a2caa51dc9dcd86a99f2b13701dbee", "Url": "https://api.github.com/repos/astray0924/EveryUseAndroid", "Date": "2013-02-28T05:17:10Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Selection.RADIO.equals(selectionAnnotation.type())) { parameters.setResourceType(RadioGroupWidget.RADIO_RESOURCE_TYPE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3333/buggy-version/cq-component-maven-plugin.src.main.java.com.citytechinc.cq.component.touchuidialog.util.TouchUIDialogUtil.java", "BodyUseAPI": [], "Fixed commit": "1ee26bd4f940d43f072b9c2d959b3bf3ed3263d9", "Url": "https://api.github.com/repos/OlsonDigital/cq-component-maven-plugin", "Date": "2016-06-23T15:36:16Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((style.indexOf(\"%animenamepart1\")) != (-1)) && ((style.indexOf(\"%animenamepart2\")) != (-1))) { java.lang.String separatorAnime = style.substring(((style.indexOf(\"%animenamepart1\")) + 15), style.indexOf(\"%animenamepart2\")); animeName = animeName.replaceAll(\" \", separatorAnime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3458/buggy-version/anidbcmdc.impl.AnimeFile.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "bb9d333bb143343dddb1731b33cf2366fa1b5523", "Url": "https://api.github.com/repos/timemaster67/AniDBCmdC", "Date": "2014-09-28T18:18:40Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((style.indexOf(\"%epnamepart1\")) != (-1)) && ((style.indexOf(\"%epnamepart2\")) != (-1))) { java.lang.String separatorEp = style.substring(((style.indexOf(\"%epnamepart1\")) + 12), style.indexOf(\"%epnamepart2\")); epName = epName.replaceAll(\" \", separatorEp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3458/buggy-version/anidbcmdc.impl.AnimeFile.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "bb9d333bb143343dddb1731b33cf2366fa1b5523", "Url": "https://api.github.com/repos/timemaster67/AniDBCmdC", "Date": "2014-09-28T18:18:40Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (12 > (startTimeParts.hours)) { startTimeParts.hours += 12; }else { startTimeParts.hours = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7764/buggy-version/app.src.main.java.com.cynthiar.dancingday.dummy.DummyUtils.java", "BodyUseAPI": [], "Fixed commit": "75e0597a7380093547cc528d928eae7b0d11f683", "Url": "https://api.github.com/repos/cynthia-r/dancing-day", "Date": "2017-03-26T03:05:46Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((val.length) < (start.val.length)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5194/buggy-version/com.ibm.wala.core.src.com.ibm.wala.util.strings.Atom.java", "BodyUseAPI": [], "Fixed commit": "46548d31cd3e6729b8c81b3b1c6514167ae5b28b", "Url": "https://api.github.com/repos/ponder-lab/WALA", "Date": "2017-12-19T20:42:27Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lifterConnected) { lifter.addTelemetry(telemetry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8764/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.HardwareOmniBot.java", "BodyUseAPI": [], "Fixed commit": "355444e9eaf17025d22fa81a96ecc4e0a5fb0e38", "Url": "https://api.github.com/repos/sjclindsay/ftc_app", "Date": "2017-10-07T22:35:01Z"},
{"Line": "=>497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((event.getAction()) == (android.view.KeyEvent.ACTION_DOWN)) && (keyCode == (android.view.KeyEvent.KEYCODE_ENTER))) { btnOnClick(v); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/503/buggy-version/app.src.main.java.is.arnastofnun.beygdu.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "72553735ed4844cc9b62b1b8de22e7ccad475bc5", "Url": "https://api.github.com/repos/Beygdu/Beygdu", "Date": "2015-03-31T00:08:34Z"},
{"Line": "=>1172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((objection.getEgwStatus()) != null) && (objection.getEgwStatus().getCode().equalsIgnoreCase(PropertyTaxConstants.OBJECTION_CREATED))) updateRevisionPetitionStatus(wfmatrix, objection, PropertyTaxConstants.OBJECTION_HEARING_FIXED);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4618/buggy-version/egov.egov-ptisweb.src.main.java.org.egov.ptis.actions.objection.RevisionPetitionAction.java", "BodyUseAPI": ["org.egov.ptis.actions.objection.RevisionPetitionAction.updateRevisionPetitionStatus(org.egov.infstr.workflow.WorkFlowMatrix,org.egov.ptis.domain.entity.objection.RevisionPetition,PropertyTaxConstants.OBJECTION_HEARING_FIXED)"], "Fixed commit": "a8bc9e26292d9dcd3a7d8bafe534ced5bbaf9e27", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2015-09-01T08:33:17Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["matchTree.get(\"lobby_type\").getAsInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (2 == lobby_type) { context.getCounter(org.kiji.wibidota.FifthPick.FifthPickCounters.TOURNAMENT_GAMES).increment(1); }else if (0 != lobby_type) { context.getCounter(org.kiji.wibidota.FifthPick.FifthPickCounters.OTHER_LOBBY_TYPE).increment(1); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1905/buggy-version/wibidota-mr.src.main.java.org.kiji.wibidota.FifthPick.java", "BodyUseAPI": [], "Fixed commit": "089c638598d35a0b17b3fbf42ab96026f7fe3d53", "Url": "https://api.github.com/repos/sqrl/wibidota", "Date": "2013-04-09T06:22:56Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stage) != null) stage.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2188/buggy-version/core.src.dev.gg.screen.BaseUIScreen.java", "BodyUseAPI": [], "Fixed commit": "2eeed1513e1575144d87f541da78cb909cfbded8", "Url": "https://api.github.com/repos/eskalon/ProjektGG", "Date": "2017-07-21T21:22:55Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1270/buggy-version/src.u5.u5a3.SortedLists.java", "BodyUseAPI": [], "Fixed commit": "1e9ac4eee26b193ba5e94b5aef4d385e91689193", "Url": "https://api.github.com/repos/FerdinandvHagen/Informatik-2", "Date": "2015-03-31T20:29:21Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.github.ubiquitousspice.mobjam.Util.isOurGameMode(this.entityLiving.worldObj)) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9181/buggy-version/src.main.java.com.github.ubiquitousspice.mobjam.navigation.EntityAISwarmSpawn.java", "BodyUseAPI": [], "Fixed commit": "735ccbf7a916dc64b88f4d2b4fc91e5a02e02045", "Url": "https://api.github.com/repos/Mitchellbrine/Modjam-3", "Date": "2014-03-08T16:21:44Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkAgainst.isConfigurationSection(key)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/498/buggy-version/lib.src.main.java.net.nunnerycode.bukkit.libraries.ivory.config.VersionedIvoryYamlConfiguration.java", "BodyUseAPI": [], "Fixed commit": "988fbc8d2cfbca4fd192126a740b6be08f24a376", "Url": "https://api.github.com/repos/Nunnery/Ivory", "Date": "2014-03-04T03:21:06Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((verifyWord(var.substring(((operator.length()) + 1)), cn.ac.nya.nsasm.NSASM.WordType.STR)) || (verifyWord(var.substring(((operator.length()) + 1)), cn.ac.nya.nsasm.NSASM.WordType.CHAR))) { dst = var.substring(((operator.length()) + 1)); src = \"\"; }else { dst = var.substring(((operator.length()) + 1)).split(\",\")[0]; if ((var.length()) <= (((operator.length()) + 1) + (dst.length()))) src = \"\"; else if ((var.charAt((((operator.length()) + 1) + (dst.length())))) == ',') src = var.substring(((((operator.length()) + 1) + (dst.length())) + 1)); else src = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8597/buggy-version/src.cn.ac.nya.nsasm.NSASM.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.length()", "java.lang.String.length()", "java.lang.String.length()", "java.lang.String.length()", "java.lang.String.charAt(int)", "java.lang.String.length()", "java.lang.String.split(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.length()", "java.lang.String.substring(int)"], "Fixed commit": "f05fe278a7464e41ae432c0753b8c4e9256874ea", "Url": "https://api.github.com/repos/NSDN/jNSASM", "Date": "2017-05-20T13:43:07Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestCode == (com.alabama.bamboofinder.ObservationDetailActivity.CAMERA_REQUEST)) && (resultCode == (RESULT_CANCELED))) { com.alabama.bamboofinder.ObservationDetailActivity.imagePath = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1810/buggy-version/app.src.main.java.com.alabama.bamboofinder.ObservationDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "f8a669d2063afd6166007ba48cd9f070f2fd93f2", "Url": "https://api.github.com/repos/mehagar/Bamboo", "Date": "2015-04-23T13:23:26Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tableName != null) && ((tableName.indexOf(\".\")) < 0)) tableName = \"DEFAULT.\" + tableName;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1634/buggy-version/metadata.src.main.java.com.kylinolap.metadata.MetadataManager.java", "BodyUseAPI": [], "Fixed commit": "2c64fc3f1e8e92cc3b1bcfd00a0c6ba21088b198", "Url": "https://api.github.com/repos/KylinOLAP/Kylin", "Date": "2015-01-24T14:53:12Z"},
{"Line": "=>576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (success) { return javax.ws.rs.core.Response.status(Status.OK).entity(result).build(); }else { return javax.ws.rs.core.Response.status(Status.INTERNAL_SERVER_ERROR).entity(result).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6365/buggy-version/src.main.java.org.opentripplanner.index.IndexAPI.java", "BodyUseAPI": [], "Fixed commit": "7141c27849d6d86833fa8cdfaeaac32cf83dac3b", "Url": "https://api.github.com/repos/azavea/OpenTripPlanner", "Date": "2015-07-15T13:00:08Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((itemInUseCount) <= 0) { onItemUseFinish(); }else { itemInUse.getItem().onUsingTick(itemInUse, this, itemInUseCount); if (((itemInUseCount) <= 25) && (((itemInUseCount) % 4) == 0)) { updateItemUse(updateItem, 5); } if (((--(itemInUseCount)) == 0) && (!(worldObj.isRemote))) { onItemUseFinish(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5660/buggy-version/src.main.java.cofh.core.entity.CoFHFakePlayer.java", "BodyUseAPI": [], "Fixed commit": "314036468b9412a4e48d5780ba83079e24443079", "Url": "https://api.github.com/repos/CoFH/CoFHCore", "Date": "2014-12-18T03:06:31Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((nstuff.juggerfall.extension.MainExtension) (getParentExtension())).viewManager.getView(data.getInt(\"pawnId\"))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (pawn != null) { send(PawnHandlerManager.RequestName_RemoteDamageOnPawn, data, pawn.getOwner()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2579/buggy-version/src.nstuff.juggerfall.extension.handlers.pawn.RemoteDamageOnPawnHandler.java", "BodyUseAPI": ["nstuff.juggerfall.extension.handlers.pawn.RemoteDamageOnPawnHandler.send(PawnHandlerManager.RequestName_RemoteDamageOnPawn,com.smartfoxserver.v2.entities.data.ISFSObject,pawn.getOwner())", "nstuff.juggerfall.extension.pawn.Pawn.getOwner()"], "Fixed commit": "e1df2f43719fd9315542651e8d212036e99f2b10", "Url": "https://api.github.com/repos/JazzyJohn/fox-server-side", "Date": "2014-09-13T20:36:35Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (close) view.setFrontClipDistance(1.0E-4);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5396/buggy-version/src.robot.WorldBranchGroup.java", "BodyUseAPI": [], "Fixed commit": "f17c1ebd13f2dc9cec751e1e2da5b33b3df2aaaa", "Url": "https://api.github.com/repos/mllofriu/rat_simulator", "Date": "2014-01-13T19:01:46Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (villager.isDead()) { this.cancel(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/102/buggy-version/src.ua.Coolboy.QuartzDefenders.Shop.ShopRunnable.java", "BodyUseAPI": [], "Fixed commit": "526f91421f50e107809ab7a66703e8b25a030045", "Url": "https://api.github.com/repos/Endertainment/QuartzDefenders", "Date": "2017-12-04T18:51:32Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intent == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/212/buggy-version/app.src.main.java.com.udacitiy.nanodegree.spotifystage1.MediaPlayerService.java", "BodyUseAPI": [], "Fixed commit": "4a264e6cf578d2d85ab93671cc71b32fc724ab72", "Url": "https://api.github.com/repos/yash256/SpotifyStage1", "Date": "2015-10-06T05:13:35Z"},
{"Line": "=>594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((ANIMATION_SPEED) + 1) - ((cell.size()) / 4000)) > 0) && ((cell.size()) < 180000)) { speed = 1000 / (((ANIMATION_SPEED) + 1) - ((cell.size()) / 4000)); }else if (((cell.size()) >= 180000) && ((cell.size()) <= 300000)) { speed = 100; }else if ((cell.size()) > 370000) { speed = 160; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5567/buggy-version/src.GameScene.java", "BodyUseAPI": ["java.util.ArrayList<java.awt.Point>.size()", "java.util.ArrayList<java.awt.Point>.size()", "java.util.ArrayList<java.awt.Point>.size()", "java.util.ArrayList<java.awt.Point>.size()"], "Fixed commit": "e4c77c847afc6247c6e1aeef1bfbffece4126b38", "Url": "https://api.github.com/repos/tqpz/CellularLife", "Date": "2017-03-18T11:27:27Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rascalmpl.eclipse.repl.ReplConnector.4.screenPointToCell(e.x,e.y)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pt != null) { return pt.x; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/837/buggy-version/src.org.rascalmpl.eclipse.repl.ReplConnector.java", "BodyUseAPI": [], "Fixed commit": "8d815c574ad7f820dbb2239b58a62c8cd335253c", "Url": "https://api.github.com/repos/usethesource/rascal-eclipse", "Date": "2015-08-18T14:34:38Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rascalmpl.eclipse.repl.ReplConnector.4.screenPointToCell(e.x,e.y)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (pt != null) { char[] chars = model.getTerminalText().getChars(pt.y); if (chars != null) { return new java.lang.String(chars); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/837/buggy-version/src.org.rascalmpl.eclipse.repl.ReplConnector.java", "BodyUseAPI": ["model.getTerminalText().getChars(pt.y)"], "Fixed commit": "8d815c574ad7f820dbb2239b58a62c8cd335253c", "Url": "https://api.github.com/repos/usethesource/rascal-eclipse", "Date": "2015-08-18T14:34:38Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((asteriskUrl) != null) && ((asteriskUser) != null)) future = executorService.scheduleAtFixedRate(new ch.cern.atlas.apvs.server.AudioServiceImpl.AsteriskConnect(), 0, ch.cern.atlas.apvs.server.AudioServiceImpl.ASTERISK_POLLING, java.util.concurrent.TimeUnit.MILLISECONDS);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6111/buggy-version/apvs.src.main.java.ch.cern.atlas.apvs.server.AudioServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "ed831a492fcbe8f5d4c38195f82a23c6edc943aa", "Url": "https://api.github.com/repos/CERN/apvs", "Date": "2013-01-17T07:36:14Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mServiceName.equals(io.v.android.apps.syncslides.discovery.ParticipantPeer.Unknown.SERVER_NAME)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7878/buggy-version/projects.syncslides.app.src.main.java.io.v.android.apps.syncslides.discovery.ParticipantPeer.java", "BodyUseAPI": [], "Fixed commit": "537e22a65bcee4f19588550f73221ed9668d3ac9", "Url": "https://api.github.com/repos/vanadium-archive/java", "Date": "2015-10-22T18:11:11Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(shotFired)) laser.setLocation(topX, topY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7181/buggy-version/Ship.java", "BodyUseAPI": [], "Fixed commit": "d5e40b6bd782f9451b47e9eaf46872ec524f7d96", "Url": "https://api.github.com/repos/jakewilson/spaceinvaders", "Date": "2014-02-28T05:02:02Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numCols > (java.lang.Integer.MAX_VALUE)) { throw new org.apache.sysml.runtime.DMLRuntimeException(\"The current operator doesnot support large outputs.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/133/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.spark.ConvolutionSPInstruction.java", "BodyUseAPI": [], "Fixed commit": "0ca69dd195733a489d0b9c03cb93a46e05cdbe89", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2017-02-21T22:52:16Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sysml.runtime.instructions.spark.ConvolutionSPInstruction.RDDConv2dMapMMFunction.MapsideConvolutionPartitionIterator.processRectangularBlock(arg._2)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((out.getNumRows()) != 1) { throw new java.lang.RuntimeException(\"Expected the output to have 1 row\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/133/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.spark.ConvolutionSPInstruction.java", "BodyUseAPI": [], "Fixed commit": "0ca69dd195733a489d0b9c03cb93a46e05cdbe89", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2017-02-21T22:52:16Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((instOpcode.equalsIgnoreCase(\"maxpooling\")) || (instOpcode.equalsIgnoreCase(\"relu_maxpooling\"))) { numCols = (((long) (C)) * ((long) (P))) * ((long) (Q)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/133/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.spark.ConvolutionSPInstruction.java", "BodyUseAPI": [], "Fixed commit": "0ca69dd195733a489d0b9c03cb93a46e05cdbe89", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2017-02-21T22:52:16Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((arg._1.getRowIndex()) > (numRows)) || ((arg._1.getColumnIndex()) != 1)) { throw new java.lang.RuntimeException(\"Expected the inputs to be reblocked as rectangular RDD\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/133/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.spark.ConvolutionSPInstruction.java", "BodyUseAPI": [], "Fixed commit": "0ca69dd195733a489d0b9c03cb93a46e05cdbe89", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2017-02-21T22:52:16Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dayInt != (edu.calpoly.ai.skynest.ScheduleManager.NUM_DAYS)) { int_schedule[((dayInt * 2) + timeInt)] = loaded_schedule.getTime(dayInt, timeInt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9265/buggy-version/src.edu.calpoly.ai.skynest.ScheduleManager.java", "BodyUseAPI": ["edu.calpoly.ai.skynest.ScheduleManager.Schedule.getTime(int,int)"], "Fixed commit": "71720c51e1d895af72c19d687deb355ffed262a0", "Url": "https://api.github.com/repos/luke-plewa/skynest", "Date": "2013-12-03T23:09:44Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Date.compareTo(java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value == 0) { return f1.getName().compareTo(f2.getName()); }else { return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5713/buggy-version/src.main.java.de.milchreis.cps.CPS.java", "BodyUseAPI": [], "Fixed commit": "172ee7adf3e7546e3b2f60c0e760b689d6fcd349", "Url": "https://api.github.com/repos/Milchreis/Chronological-Picture-Sort", "Date": "2017-06-23T19:54:33Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.nav_settings)) { android.content.Intent intent = new android.content.Intent(this, com.ucarry.developer.android.activity.Settings.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7609/buggy-version/app.src.main.java.com.ucarry.developer.android.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9e2c76caff0d5dfaa885ef4bedd01dae6a869acd", "Url": "https://api.github.com/repos/amoebiq/Karrier-Bay", "Date": "2017-06-06T01:41:14Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((originalUri == null) || (originalUri.isEmpty())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7609/buggy-version/app.src.main.java.com.ucarry.developer.android.Utilities.Utility.java", "BodyUseAPI": [], "Fixed commit": "9e2c76caff0d5dfaa885ef4bedd01dae6a869acd", "Url": "https://api.github.com/repos/amoebiq/Karrier-Bay", "Date": "2017-06-06T01:41:14Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (leftNum != 0) { result = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8923/buggy-version/src.Codility.Nesting.java", "BodyUseAPI": [], "Fixed commit": "bbfb9136cca2e5b6eb9f9ced9b7faab1429e9c91", "Url": "https://api.github.com/repos/wangyouan/LearnJava", "Date": "2016-01-24T15:29:05Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResources().getConfiguration().orientation) == (android.content.res.Configuration.ORIENTATION_LANDSCAPE)) { return inflater.inflate(R.layout.activity_now_land, container, false); }else { return inflater.inflate(R.layout.activity_now, container, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3837/buggy-version/DCM.src.main.java.com.ucb.dcm.NowActivity.java", "BodyUseAPI": [], "Fixed commit": "1217ad60f93f1bc867ce686bcf4c4a3c11073b6f", "Url": "https://api.github.com/repos/ucbtheatre/dcm-android", "Date": "2013-06-20T16:10:37Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(entryFile.exists())) && (!(entryFile.createNewFile()))) { throw new java.nio.file.AccessDeniedException(entryFile.getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6997/buggy-version/src.main.java.me.hqm.plugindev.wget.WGET.java", "BodyUseAPI": ["java.io.File.getPath()"], "Fixed commit": "aa29c21a028d0250733e0a1d12c122b166143a82", "Url": "https://api.github.com/repos/HmmmQuestionMark/wget-mc", "Date": "2014-07-13T18:29:19Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lc.api.defs.IInterfaceDefinition.getContainerClass()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (containerClass != null) { lc.common.LCLog.debug(\"Creating container %s\", containerClass); net.minecraft.tileentity.TileEntity tile = world.getTileEntity(x, y, z); java.lang.Class<?> container = java.lang.Class.forName(containerClass); java.lang.reflect.Constructor<?> constr = container.getConstructor(new java.lang.Class<?>[]{ tile.getClass(), net.minecraft.entity.player.EntityPlayer.class }); return constr.newInstance(tile, player); }else { lc.common.LCLog.warn(\"Attempted to open client-side only UI %s on server.\", def.getName()); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2452/buggy-version/src.main.java.lc.common.GUIHandler.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)", "lc.common.LCLog.debug(java.lang.String,java.lang.String)"], "Fixed commit": "a93767fe144a97e44d7f3aaac3211fe598477b42", "Url": "https://api.github.com/repos/PC-Logix/LanteaCraft", "Date": "2016-03-20T06:09:51Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.project.cs.patriotsadvisment.CoursesActivity.parseTheData(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(previous.equals(rawSophomoreArray.get(i)))) sophomore.add(rawSophomoreArray.get(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9288/buggy-version/PatriotsAdvisment.app.src.main.java.com.project.cs.patriotsadvisment.CoursesActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "f48b2170a54dc6438289fb14df0fa177e63422c2", "Url": "https://api.github.com/repos/nmelone/UTTyler-Mobile-App", "Date": "2017-12-05T20:07:37Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.project.cs.patriotsadvisment.CoursesActivity.parseTheData(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(previous.equals(rawJuniorArray.get(i)))) junior.add(rawJuniorArray.get(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9288/buggy-version/PatriotsAdvisment.app.src.main.java.com.project.cs.patriotsadvisment.CoursesActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "f48b2170a54dc6438289fb14df0fa177e63422c2", "Url": "https://api.github.com/repos/nmelone/UTTyler-Mobile-App", "Date": "2017-12-05T20:07:37Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.project.cs.patriotsadvisment.CoursesActivity.parseTheData(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(previous.equals(rawFreshmanArray.get(i)))) freshman.add(rawFreshmanArray.get(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9288/buggy-version/PatriotsAdvisment.app.src.main.java.com.project.cs.patriotsadvisment.CoursesActivity.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "f48b2170a54dc6438289fb14df0fa177e63422c2", "Url": "https://api.github.com/repos/nmelone/UTTyler-Mobile-App", "Date": "2017-12-05T20:07:37Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.project.cs.patriotsadvisment.CoursesActivity.parseTheData(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(previous.equals(rawSeniorArray.get(i)))) senior.add(rawSeniorArray.get(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9288/buggy-version/PatriotsAdvisment.app.src.main.java.com.project.cs.patriotsadvisment.CoursesActivity.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "f48b2170a54dc6438289fb14df0fa177e63422c2", "Url": "https://api.github.com/repos/nmelone/UTTyler-Mobile-App", "Date": "2017-12-05T20:07:37Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (struct.isHasSubParameters()) { struct.setSubParam(readSubParameter(VersionType.THE_FROZEN_THRONE, triggerData)); struct.setUnknown(parser.readIntAndIncrement()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3519/buggy-version/src.main.java.wtg.WTGStructReader.java", "BodyUseAPI": ["wtg.Parameter.setSubParam(wtg.SubParameter)", "wtg.Parameter.setUnknown(parser.readIntAndIncrement())"], "Fixed commit": "fa5938013f9382ce6163a50aaa030123372aefb9", "Url": "https://api.github.com/repos/griggszm/WTGUtils", "Date": "2017-07-30T18:48:11Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fr.tse.fi2.hpp.labs.queries.impl.projet.Query2.recsRentable.get(i).getFares().isEmpty()) { fr.tse.fi2.hpp.labs.queries.impl.projet.Query2.recsRentable.get(i).setProfit(0.0); }else { fr.tse.fi2.hpp.labs.queries.impl.projet.Query2.recsRentable.get(i).setMediane(fr.tse.fi2.hpp.labs.queries.impl.projet.Query2.recsRentable.get(i).getFares().get(((fr.tse.fi2.hpp.labs.queries.impl.projet.Query2.recsRentable.get(i).getFares().size()) / 2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6400/buggy-version/src.main.java.fr.tse.fi2.hpp.labs.queries.impl.projet.Query2.java", "BodyUseAPI": ["fr.tse.fi2.hpp.labs.queries.impl.projet.Query2.recsRentable.get(i).getFares()", "fr.tse.fi2.hpp.labs.queries.impl.projet.Query2.recsRentable.get(i).getFares().size()", "java.util.LinkedList<fr.tse.fi2.hpp.labs.queries.impl.projet.RecRentable>.get(int)", "fr.tse.fi2.hpp.labs.queries.impl.projet.Query2.recsRentable.get(i).getFares()", "java.util.LinkedList<fr.tse.fi2.hpp.labs.queries.impl.projet.RecRentable>.get(int)", "java.util.LinkedList<fr.tse.fi2.hpp.labs.queries.impl.projet.RecRentable>.get(int)", "java.util.LinkedList<fr.tse.fi2.hpp.labs.queries.impl.projet.RecRentable>.get(int)", "fr.tse.fi2.hpp.labs.queries.impl.projet.Query2.recsRentable.get(i).setProfit(double)", "fr.tse.fi2.hpp.labs.queries.impl.projet.Query2.recsRentable.get(i).setMediane(fr.tse.fi2.hpp.labs.queries.impl.projet.Query2.recsRentable.get(i).getFares().get(((fr.tse.fi2.hpp.labs.queries.impl.projet.Query2.recsRentable.get(i).getFares().size()) / 2)))", "fr.tse.fi2.hpp.labs.queries.impl.projet.Query2.recsRentable.get(i).getFares().get(((fr.tse.fi2.hpp.labs.queries.impl.projet.Query2.recsRentable.get(i).getFares().size()) / 2))"], "Fixed commit": "9a5a415cf85f6b3a3f555d8f98f3ab76ba4ef260", "Url": "https://api.github.com/repos/OlivierMonhonvalle/hpp", "Date": "2015-06-10T16:04:26Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bytes == 0) { return \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3179/buggy-version/core.src.main.java.org.dcache.nfs.vfs.Stat.java", "BodyUseAPI": [], "Fixed commit": "2aba1b8445bcb9c9fac1934e137fb3013da75d3b", "Url": "https://api.github.com/repos/kofemann/jpnfs", "Date": "2014-09-11T09:50:18Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (memberWorkerCount == (-1)) { memberWorkerCount = (dedicatedMemberMachineCount == 0) ? componentRegistry.agentCount() : dedicatedMemberMachineCount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8014/buggy-version/simulator.src.main.java.com.hazelcast.simulator.coordinator.deployment.DeploymentUtils.java", "BodyUseAPI": [], "Fixed commit": "caf2c32743bfa4bbbe40f5e8e6ba1322dac090c9", "Url": "https://api.github.com/repos/hazelcast/hazelcast-simulator", "Date": "2016-08-13T12:04:34Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dungUserInterface.GameInput.baActions[dungUserInterface.GameActions.SPEED_MODIFIER]) { dungMain.DungeonGame.handleEntity(iEntityID).dMovementMagnitude *= 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2323/buggy-version/Dung.src.dungContent.ControllerPlayer.java", "BodyUseAPI": [], "Fixed commit": "5e02d2867ae165e67c9e0e31a43fc57ec0cb6fe6", "Url": "https://api.github.com/repos/qmpzaltb/cptgame", "Date": "2013-01-03T04:49:03Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getAuthor()) != null) { dto.setAuthorId(p.getAuthor().getId()); dto.setAuthorUsername(p.getAuthor().getUsername()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9230/buggy-version/backend.ProbexEJB.ejbModule.br.unifor.probex.dao.PostDAO.java", "BodyUseAPI": ["br.unifor.probex.entity.Post.getAuthor()", "br.unifor.probex.dto.PostDTO.setAuthorId(p.getAuthor().getId())", "p.getAuthor().getId()", "p.getAuthor().getUsername()", "br.unifor.probex.entity.Post.getAuthor()", "br.unifor.probex.dto.PostDTO.setAuthorUsername(p.getAuthor().getUsername())"], "Fixed commit": "9ca2eba2c3aa58c7fcb8cc5be32c8cf27cee5f31", "Url": "https://api.github.com/repos/pino/probex", "Date": "2017-05-05T18:36:29Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInitialized())) { throw new java.lang.IllegalStateException(\"Cannot call getRenderSize() before initialized!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4299/buggy-version/jme3-vr.src.main.java.com.jme3.input.vr.OculusVR.java", "BodyUseAPI": [], "Fixed commit": "11816c41a0282542152b6648b09493ceb18a3744", "Url": "https://api.github.com/repos/ZNiPATHn/jmonkeyengine", "Date": "2017-10-01T05:17:41Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.uniroma2.gqm.service.StrategyManager.get(strategy.getStrategyParent().getId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((sParent.getParentType()) == 1) || ((sParent.getParentType()) == (-1))) { sParent.getStrategyChild().add(strategy); strategy.setStrategyParent(sParent); strategyManager.save(sParent); }else { errors.rejectValue(\"parentType\", \"parentType\", \"Can't add Goal child to parent already having Strategy children\"); return \"strategyform\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3792/buggy-version/src.main.java.it.uniroma2.gqm.webapp.controller.StrategyFromController.java", "BodyUseAPI": ["it.uniroma2.gqm.model.Strategy.setStrategyParent(it.uniroma2.gqm.model.Strategy)", "it.uniroma2.gqm.service.StrategyManager.save(it.uniroma2.gqm.model.Strategy)", "it.uniroma2.gqm.model.Strategy.getStrategyChild()", "sParent.getStrategyChild().add(it.uniroma2.gqm.model.Strategy)"], "Fixed commit": "46894dcf8343e6fe873842efad3316ecb61a647d", "Url": "https://api.github.com/repos/PuRoTeam/PuRoGQM", "Date": "2014-08-25T12:53:55Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (strategyManager.hasParent(strategy)) { if ((strategy.getParentType()) == 0) { it.uniroma2.gqm.model.Goal oParent = goalManager.get(strategy.getSorgParent().getId()); if (((oParent.getParentType()) == 1) || ((oParent.getParentType()) == (-1))) { oParent.getOstrategyChild().add(strategy); strategy.setSorgParent(oParent); goalManager.save(oParent); }else { errors.rejectValue(\"parentType\", \"parentType\", \"Can't add Strategy child to parent already having Goal children\"); return \"strategyform\"; } }else { it.uniroma2.gqm.model.Strategy sParent = strategyManager.get(strategy.getStrategyParent().getId()); if (((sParent.getParentType()) == 1) || ((sParent.getParentType()) == (-1))) { sParent.getStrategyChild().add(strategy); strategy.setStrategyParent(sParent); strategyManager.save(sParent); }else { errors.rejectValue(\"parentType\", \"parentType\", \"Can't add Goal child to parent already having Strategy children\"); return \"strategyform\"; } } }else { errors.rejectValue(\"parentType\", \"parentType\", \"Strategy needs parent\"); return \"strategyform\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3792/buggy-version/src.main.java.it.uniroma2.gqm.webapp.controller.StrategyFromController.java", "BodyUseAPI": ["it.uniroma2.gqm.model.Strategy.getSorgParent()", "it.uniroma2.gqm.model.Strategy.getStrategyParent()", "it.uniroma2.gqm.service.StrategyManager.save(it.uniroma2.gqm.model.Strategy)", "it.uniroma2.gqm.service.GoalManager.get(strategy.getSorgParent().getId())", "strategy.getStrategyParent().getId()", "it.uniroma2.gqm.model.Strategy.setStrategyParent(it.uniroma2.gqm.model.Strategy)", "it.uniroma2.gqm.model.Strategy.setSorgParent(it.uniroma2.gqm.model.Goal)", "strategy.getSorgParent().getId()", "oParent.getOstrategyChild().add(it.uniroma2.gqm.model.Strategy)", "sParent.getStrategyChild().add(it.uniroma2.gqm.model.Strategy)", "it.uniroma2.gqm.service.StrategyManager.get(strategy.getStrategyParent().getId())", "it.uniroma2.gqm.model.Strategy.getParentType()"], "Fixed commit": "46894dcf8343e6fe873842efad3316ecb61a647d", "Url": "https://api.github.com/repos/PuRoTeam/PuRoGQM", "Date": "2014-08-25T12:53:55Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.getMessage()", "java.lang.Thread.getTitle()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((updatedTitle == null) && (updatedMessage == null)) { org.springframework.http.ResponseEntity.ok(thread); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3563/buggy-version/src.main.java.ru.mail.park.database.kgulyy.controllers.ThreadController.java", "BodyUseAPI": [], "Fixed commit": "d96f617a7eeac55a0b93af226b9bca77f0ba9aa1", "Url": "https://api.github.com/repos/kgulyy/database-forum-api", "Date": "2017-10-18T11:42:04Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.parser.ParserConfig.getDeserializer(java.lang.Class<?>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (deserializer instanceof com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer) { instance = ((com.alibaba.fastjson.parser.deserializer.ASMJavaBeanDeserializer) (deserializer)).createInstance(this, clazz); }else if (deserializer instanceof com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer) { instance = ((com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer) (deserializer)).createInstance(this, clazz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6349/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": [], "Fixed commit": "b1142ecab83bee881f4d152db1d22e25207d4211", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2013-05-08T08:34:55Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (instance == null) { instance = clazz.newInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6349/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": [], "Fixed commit": "b1142ecab83bee881f4d152db1d22e25207d4211", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2013-05-08T08:34:55Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x0Min) { res = x0 / x1; if ((x1 * res) == x0) { return res; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/526/buggy-version/src.main.java.org.optimizationBenchmarking.utils.math.functions.arithmetic.Div.java", "BodyUseAPI": [], "Fixed commit": "9d7ef1d5bf010948d79b786e9343e9627557ba66", "Url": "https://api.github.com/repos/optimizationBenchmarking/utils-math", "Date": "2017-12-28T21:27:12Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x1Min) { res = x1 / x0; if ((x0 * res) == x1) { return 1.0 / res; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/526/buggy-version/src.main.java.org.optimizationBenchmarking.utils.math.functions.arithmetic.Div.java", "BodyUseAPI": [], "Fixed commit": "9d7ef1d5bf010948d79b786e9343e9627557ba66", "Url": "https://api.github.com/repos/optimizationBenchmarking/utils-math", "Date": "2017-12-28T21:27:12Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x0Min && x1Min) { gcd = GCD.INSTANCE.computeAsLong(x0, x1); return ((double) (x0 / gcd)) / ((double) (x1 / gcd)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/526/buggy-version/src.main.java.org.optimizationBenchmarking.utils.math.functions.arithmetic.Div.java", "BodyUseAPI": [], "Fixed commit": "9d7ef1d5bf010948d79b786e9343e9627557ba66", "Url": "https://api.github.com/repos/optimizationBenchmarking/utils-math", "Date": "2017-12-28T21:27:12Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (volume > 40) volume = 40;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4352/buggy-version/src.org.frostbite.karren.interactions.Tags.D4JPlayer.D4JPlay.java", "BodyUseAPI": [], "Fixed commit": "d64783faaaf9995d28e6cafdf452a9fe998679ff", "Url": "https://api.github.com/repos/ripxfrostbite/karren-sama", "Date": "2017-12-15T02:50:35Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(interaction.getParameter().trim())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (volume > 40) volume = 40;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4352/buggy-version/src.org.frostbite.karren.interactions.Tags.D4JPlayer.D4JVolume.java", "BodyUseAPI": [], "Fixed commit": "d64783faaaf9995d28e6cafdf452a9fe998679ff", "Url": "https://api.github.com/repos/ripxfrostbite/karren-sama", "Date": "2017-12-15T02:50:35Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRecorder) != null) { mRecorder.stop(); mRecorder.release(); mRecorder = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2747/buggy-version/app.src.main.java.cs371.record_sound_logic.RecordLogic.java", "BodyUseAPI": [], "Fixed commit": "f0d00c48c9bbef445af5c52a513be38e945b2a6c", "Url": "https://api.github.com/repos/lock14/alarming", "Date": "2017-08-07T01:48:31Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (site.isJetpackConnected()) { return org.wordpress.android.ui.WPWebViewActivity.WPCOM_LOGIN_URL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3233/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.WPWebViewActivity.java", "BodyUseAPI": [], "Fixed commit": "c3ce617d77cb9e9c0c73d301843b6e9a9d4bef59", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2017-10-25T22:58:30Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["res.getClusterLabels().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clusterLabel < 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3722/buggy-version/src.us.kbase.kbasefeaturevalues.KBaseFeatureValuesImpl.java", "BodyUseAPI": [], "Fixed commit": "89d57b8c03ceda38ddb1e5103aee689d97d0b933", "Url": "https://api.github.com/repos/kbase/feature_values", "Date": "2015-08-20T23:24:41Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((owner.getIBAN()) != \"\") { request = (((((((((((((((((((((((((((((((((((((((((\"<?xml version='1.0' encoding='UTF-8'?>\" + ((((((((\"<Request version='1.0'>\" + \"<Header>\") + \"<ID>6200</ID>\") + \"<Description>Owner</Description>\") + \"<Timestamp>2015-04-10T21:34:00</Timestamp>\") + \"<FormatResponse>false</FormatResponse>\") + \"</Header>\") + \"<Data>\") + \"<Owner op='update' session_id='\")) + sessionID) + \"'>\") + \"<LastName>\") + (owner.getLastName())) + \"</LastName>\") + \"<LastNamePrefix>\") + (owner.getLastNamePrefix())) + \"</LastNamePrefix>\") + \"<Initials>\") + (owner.getInitials())) + \"</Initials>\") + \"<FirstName>\") + (owner.getFirstName())) + \"</FirstName>\") + \"<Street>\") + (owner.getStreet())) + \"</Street>\") + \"<HouseNumber>\") + (owner.getHouseNumber())) + \"</HouseNumber>\") + \"<PostalCode>\") + (owner.getPostalCode())) + \"</PostalCode>\") + \"<City>\") + (owner.getCity())) + \"</City>\") + \"<Phone>\") + (owner.getPhone())) + \"</Phone>\") + \"<Mobile>\") + (owner.getMobile())) + \"</Mobile>\") + \"<IBAN>\") + (owner.getIBAN())) + \"</IBAN>\") + \"<BIC>\") + (getBicCode(sessionID, owner))) + \"</BIC>\") + \"</Owner>\") + \"</Data>\") + \"</Request>\"; }else { request = ((((((((((((((((((((((((((((((((((((\"<?xml version='1.0' encoding='UTF-8'?>\" + ((((((((\"<Request version='1.0'>\" + \"<Header>\") + \"<ID>6200</ID>\") + \"<Description>Owner</Description>\") + \"<Timestamp>2015-04-10T21:34:00</Timestamp>\") + \"<FormatResponse>false</FormatResponse>\") + \"</Header>\") + \"<Data>\") + \"<Owner op='update' session_id='\")) + sessionID) + \"'>\") + \"<LastName>\") + (owner.getLastName())) + \"</LastName>\") + \"<LastNamePrefix>\") + (owner.getLastNamePrefix())) + \"</LastNamePrefix>\") + \"<Initials>\") + (owner.getInitials())) + \"</Initials>\") + \"<FirstName>\") + (owner.getFirstName())) + \"</FirstName>\") + \"<Street>\") + (owner.getStreet())) + \"</Street>\") + \"<HouseNumber>\") + (owner.getHouseNumber())) + \"</HouseNumber>\") + \"<PostalCode>\") + (owner.getPostalCode())) + \"</PostalCode>\") + \"<City>\") + (owner.getCity())) + \"</City>\") + \"<Phone>\") + (owner.getPhone())) + \"</Phone>\") + \"<Mobile>\") + (owner.getMobile())) + \"</Mobile>\") + \"<IBAN></IBAN>\") + \"</Owner>\") + \"</Data>\") + \"</Request>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7759/buggy-version/src.main.java.com.sunclassdurbuy.leden.service.BookingService.java", "BodyUseAPI": ["com.sunclassdurbuy.leden.service.Owner.getPostalCode()", "com.sunclassdurbuy.leden.service.Owner.getStreet()", "com.sunclassdurbuy.leden.service.Owner.getInitials()", "com.sunclassdurbuy.leden.service.Owner.getIBAN()", "com.sunclassdurbuy.leden.service.Owner.getMobile()", "com.sunclassdurbuy.leden.service.Owner.getPostalCode()", "com.sunclassdurbuy.leden.service.Owner.getInitials()", "com.sunclassdurbuy.leden.service.Owner.getMobile()", "com.sunclassdurbuy.leden.service.Owner.getStreet()", "com.sunclassdurbuy.leden.service.Owner.getCity()", "com.sunclassdurbuy.leden.service.Owner.getPhone()", "com.sunclassdurbuy.leden.service.Owner.getPhone()", "com.sunclassdurbuy.leden.service.Owner.getFirstName()", "com.sunclassdurbuy.leden.service.Owner.getLastName()", "com.sunclassdurbuy.leden.service.Owner.getCity()", "com.sunclassdurbuy.leden.service.Owner.getFirstName()", "com.sunclassdurbuy.leden.service.Owner.getHouseNumber()", "com.sunclassdurbuy.leden.service.Owner.getHouseNumber()", "com.sunclassdurbuy.leden.service.Owner.getLastName()", "com.sunclassdurbuy.leden.service.Owner.getLastNamePrefix()", "com.sunclassdurbuy.leden.service.BookingService.getBicCode(java.lang.String,com.sunclassdurbuy.leden.service.Owner)", "com.sunclassdurbuy.leden.service.Owner.getLastNamePrefix()"], "Fixed commit": "4c2226278691fe49f2aeaba2379e7706fd5bd04a", "Url": "https://api.github.com/repos/ejjaquet/ledensite", "Date": "2016-02-13T13:57:26Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((operation) == (java_gpio.optype.expledstop)) { return true; }else if (argc > 1) { if (args[1].equals(\"all\")) { if ((((operation) != (java_gpio.optype.set)) && ((operation) != (java_gpio.optype.getd))) && ((operation) != (java_gpio.optype.info))) { java.lang.System.out.printf(\"**ERROR** Invalid <pin> for operation: %s\\n\", args[1]); return false; } pinnum = -1; }else { try { pinnum = new java.lang.Integer(args[1]); if (!(nz.net.bishop.omega.gpio.GPIOAccess.isPinUsable(pinnum))) { java.lang.System.out.printf(\"**ERROR** Invalid <pin> : %s\\n\", args[1]); return false; } } catch (java.lang.Exception e) { java.lang.System.out.printf(\"**ERROR** Invalid <pin> : %s\\n\", args[1]); return false; } } if ((operation) == (java_gpio.optype.set)) { if (argc > 2) { if (args[2].equals(\"0\")) { value = 0; }else if (args[2].equals(\"1\")) { value = 1; }else { java.lang.System.out.printf(\"**ERROR** Invalid <val> for set: %s\\n\", args[2]); return false; } }else { java.lang.System.out.printf(\"**ERROR** No <val> specified for set\\n\"); return false; } }else if ((operation) == (java_gpio.optype.pwm)) { if (argc > 2) { try { freq = new java.lang.Integer(args[2]); if ((freq) > 0) { if (argc > 3) { try { duty = new java.lang.Integer(args[3]); if (((duty) < 0) || ((duty) > 100)) { java.lang.System.out.printf(\"**ERROR** Invalid <duty> for pwm : %s\\n\", args[3]); return false; } } catch (java.lang.Exception e) { java.lang.System.out.printf(\"**ERROR** Invalid <duty> for pwm : %s\\n\", args[3]); return false; } }else { java.lang.System.out.printf(\"**ERROR** No <duty> specified for pwm\\n\"); return false; } }else { java.lang.System.out.printf(\"**ERROR** Invalid <freq> for pwm : %s\\n\", args[2]); return false; } } catch (java.lang.Exception e) { java.lang.System.out.printf(\"**ERROR** Invalid <freq> for pwm : %s\\n\", args[2]); return false; } }else { java.lang.System.out.printf(\"**ERROR** No <freq> specified for pwm\\n\"); return false; } }else if ((operation) == (java_gpio.optype.irq)) { if (argc > 2) { if (args[2].equals(\"rising\")) { irqtype = nz.net.bishop.omega.gpio.GPIOIrqType.GPIO_IRQ_RISING; }else if (args[2].equals(\"falling\")) { irqtype = nz.net.bishop.omega.gpio.GPIOIrqType.GPIO_IRQ_FALLING; }else if (args[2].equals(\"both\")) { irqtype = nz.net.bishop.omega.gpio.GPIOIrqType.GPIO_IRQ_BOTH; }else { java.lang.System.out.printf(\"**ERROR** Invalid <irqtype> for irq : %s\\n\", args[2]); return false; } if (argc > 3) { irqtext = args[3]; if (argc > 4) { try { irqdebounce = new java.lang.Integer(args[4]); if ((irqdebounce) < 0) { java.lang.System.out.printf(\"**ERROR** Invalid <debounce> for irq : %s\\n\", args[4]); return false; } } catch (java.lang.Exception e) { java.lang.System.out.printf(\"**ERROR** Invalid <debounce> for irq : %s\\n\", args[4]); return false; } }else { irqdebounce = 0; } }else { java.lang.System.out.printf(\"**ERROR** No <irqcmd> specified for irq\\n\"); return false; } }else { java.lang.System.out.printf(\"**ERROR** No <irqtype> specified for irq\\n\"); return false; } } }else { java.lang.System.out.printf(\"**ERROR** No <pin> specified\\n\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1332/buggy-version/source.java-gpio.src.java_gpio.java", "BodyUseAPI": [], "Fixed commit": "b0b68c745a8bb3014fec069868f479dffc7f8bb0", "Url": "https://api.github.com/repos/KitBishop/java-gpio", "Date": "2016-02-19T02:06:44Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SmartCity.Generator.CarGenerator.Create(SmartCity.Event.Grid.TimeStamp)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((newCar.CurrTrafficLight.CarList.size()) == 1) { sim.scheduleEvent(new SmartCity.Event.Grid.ApproachTLEvent(TimeStamp, newCar, newCar.CurrTrafficLight)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8128/buggy-version/src.SmartCity.Event.Grid.InsertCarEvent.java", "BodyUseAPI": ["SmartCity.Simulation.GridSimulation.scheduleEvent(SmartCity.Event.Grid.ApproachTLEvent)"], "Fixed commit": "63e8b7b0300259ea8acbfc2ce37b98a090c59b79", "Url": "https://api.github.com/repos/mshuaic/SmartCity", "Date": "2017-10-27T03:43:39Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((separator != null) && (aList != null)) { java.lang.String returnString = \"\"; for (java.lang.String s : aList) { returnString = (returnString + (s.replace(\"'\", \"''\"))) + separator; } if ((aList.size()) > 0) { returnString = returnString.substring(0, ((returnString.length()) - (separator.length()))); } return returnString; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6149/buggy-version/Error404.src.movie.db.server.Query.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.util.ArrayList<java.lang.String>.size()"], "Fixed commit": "b146fb8ddb58d969c1d18cb7034f5ec5e7d0ac50", "Url": "https://api.github.com/repos/DavidLay94/Error404_GWT", "Date": "2015-11-18T18:43:35Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parent == null) { return getTopLevelResources(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1800/buggy-version/opennms-dao.src.main.java.org.opennms.netmgt.dao.support.AbstractTopLevelResourceType.java", "BodyUseAPI": [], "Fixed commit": "2ea21f37edef8a72a2d5d4d1dc0480026bf4b578", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2016-05-16T21:41:41Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (last > 0) { sFromFile.setDurationNanos(((de.wsdevel.tools.streams.buffer.TimeshiftBuffer.NANOS_IN_MILLIS) * (ts - last))); }else { sFromFile.setDurationNanos((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5917/buggy-version/src.main.java.de.wsdevel.tools.streams.buffer.TimeshiftBuffer.java", "BodyUseAPI": ["S.setDurationNanos(long)"], "Fixed commit": "38a7bf20e36527e268af1e56ac7a02c8e8f784bd", "Url": "https://api.github.com/repos/dawnofmusic/SAW_Java-Tools", "Date": "2013-05-28T18:35:46Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<?>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (selectedEditorPart.getChildren().isEmpty()) { if (null != addNewRootRecordContextAction) { menu.appendToGroup(org.wso2.developerstudio.datamapper.diagram.part.DiagramEditorContextMenuProvider.EDIT_GROUP_ID, addNewRootRecordContextAction); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8290/buggy-version/plugins.org.wso2.developerstudio.visualdatamapper.diagram.src.org.wso2.developerstudio.datamapper.diagram.part.DiagramEditorContextMenuProvider.java", "BodyUseAPI": [], "Fixed commit": "1fa7d58f4dd24a09f09c10527a4dd6aead6b30c6", "Url": "https://api.github.com/repos/susinda/devstudio-tooling-esb", "Date": "2016-03-31T03:59:27Z"},
{"Line": "=>729", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cellObj instanceof com.mxgraph.model.mxCell) { com.mxgraph.model.mxCell cell = ((com.mxgraph.model.mxCell) (cellObj)); if (cell.isEdge()) { net.appendChild(it.wolfed.model.ArcEdge.exportPNML(doc, cell)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5180/buggy-version/src.it.wolfed.model.PetriNetGraph.java", "BodyUseAPI": [], "Fixed commit": "dc1abcd706f28af9d1e19cb7939264436809ccfe", "Url": "https://api.github.com/repos/Dewos/wolfed", "Date": "2013-02-28T10:39:54Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFieldEnabled(controllers.submit.STUDENT_ORCID)) { boolean orcidVerify = true; if (settingRepo.getConfigBoolean(AppConfig.ORCID_VALIDATION)) { if (settingRepo.getConfigBoolean(AppConfig.ORCID_AUTHENTICATION)) orcidVerify = org.tdl.vireo.services.Utilities.verifyOrcid(orcid, sub.getStudentFirstName(), sub.getStudentLastName()); else orcidVerify = org.tdl.vireo.services.Utilities.verifyOrcid(orcid); } if (!orcidVerify) { validation.addError(\"orcid\", \"Your ORCID could not be verified as valid!\"); }else { sub.setOrcid(orcid); submitter.setOrcid(orcid); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3799/buggy-version/app.controllers.submit.PersonalInfo.java", "BodyUseAPI": [], "Fixed commit": "b428e96843487d80ca11eeb458f3c9b922adf045", "Url": "https://api.github.com/repos/TexasDigitalLibrary/Vireo", "Date": "2015-02-11T19:32:17Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(s.contains(\"/\"))) if (s.contains(\":\")) return s;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/383/buggy-version/src.main.java.gabienapp.Application.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)"], "Fixed commit": "302db938fc679f756cc803c0b8c51b0d77de676d", "Url": "https://api.github.com/repos/20kdc/gabien-app-r48", "Date": "2017-07-29T15:25:54Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.equals(\"\")) return s;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/383/buggy-version/src.main.java.gabienapp.Application.java", "BodyUseAPI": [], "Fixed commit": "302db938fc679f756cc803c0b8c51b0d77de676d", "Url": "https://api.github.com/repos/20kdc/gabien-app-r48", "Date": "2017-07-29T15:25:54Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFinished()) return new SortVisualisation.Model.Pointer(firstPointer);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4984/buggy-version/src.SortVisualisation.Model.Sorting.InsertionSort.java", "BodyUseAPI": [], "Fixed commit": "2fa67481ac21913539465b9c13b3fbff18089779", "Url": "https://api.github.com/repos/HanzehogeschoolSICT/team-name-OOP3-Sorting", "Date": "2017-03-07T10:34:55Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.pages) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/739/buggy-version/src.main.java.com.pratilipi.data.type.doc.PratilipiContentDocImpl.java", "BodyUseAPI": [], "Fixed commit": "5a1e9de29e778e5c79e8d99880c49482e6be8869", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-09-24T06:40:39Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ModDamage.EventInfo.EventInfo.get(java.lang.Class,java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (enchantmentsDP == null) { com.ModDamage.ModDamage.addToLogRecord(OutputPreset.FAILURE, ((\"You can only use '\" + (m.group())) + \"' inside of an Enchant or PrepareEnchant event\")); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1886/buggy-version/src.com.ModDamage.Variables.Int.EnchantmentInt.java", "BodyUseAPI": [], "Fixed commit": "11462f9e63878e8d10e794cb4f92bc4ff5d18fff", "Url": "https://api.github.com/repos/ModDamage/ModDamage", "Date": "2012-09-04T05:34:31Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<com.sun.org.apache.bcel.internal.generic.InstructionHandle[]>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((instrs.length) == 2) { b = updateValueTable(instList, instrs, valueTable, cgen, cpgen); }else { deleteEntryFromTable(instrs, valueTable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7361/buggy-version/src.comp2010.main.ConstantFolder.java", "BodyUseAPI": ["comp2010.main.ConstantFolder.updateValueTable(com.sun.org.apache.bcel.internal.generic.InstructionList,com.sun.org.apache.bcel.internal.generic.InstructionHandle[],java.util.HashMap<java.lang.Integer, java.lang.Object>,com.sun.org.apache.bcel.internal.generic.ClassGen,com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)", "comp2010.main.ConstantFolder.deleteEntryFromTable(com.sun.org.apache.bcel.internal.generic.InstructionHandle[],java.util.HashMap<java.lang.Integer, java.lang.Object>)"], "Fixed commit": "2cef8f72a4413c1bf4042bca1f5ffbbb21ae8fd9", "Url": "https://api.github.com/repos/davidbuniat/Comp2010Part2", "Date": "2015-04-05T11:22:30Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minDistanceList.size()) == 0) { return new rznw.turn.positionchange.EnemyAIBasedPositionChange(this, 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5427/buggy-version/rznw.game.SummonedCharacter.java", "BodyUseAPI": [], "Fixed commit": "5af7aca100afb86dd6f092059db980c46899fe28", "Url": "https://api.github.com/repos/bprollinson/robotzombieninjawizard", "Date": "2015-12-28T13:56:14Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.wakeLock.isHeld()) this.wakeLock.release();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/748/buggy-version/src.org.wessner.android.stationAlarm.LocationMonitorService.java", "BodyUseAPI": ["PowerManager.WakeLock.release()"], "Fixed commit": "2715f5b20ed4bda6bbf37d8199fe74993c033dbc", "Url": "https://api.github.com/repos/wessnerj/stationAlarm", "Date": "2015-02-22T12:55:40Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.wakeLock.isHeld()) wakeLock.release();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/748/buggy-version/src.org.wessner.android.stationAlarm.LocationMonitorService.java", "BodyUseAPI": [], "Fixed commit": "2715f5b20ed4bda6bbf37d8199fe74993c033dbc", "Url": "https://api.github.com/repos/wessnerj/stationAlarm", "Date": "2015-02-22T12:55:40Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.wakeLock.isHeld()) this.wakeLock.release();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/748/buggy-version/src.org.wessner.android.stationAlarm.LocationMonitorService.java", "BodyUseAPI": ["PowerManager.WakeLock.release()"], "Fixed commit": "2715f5b20ed4bda6bbf37d8199fe74993c033dbc", "Url": "https://api.github.com/repos/wessnerj/stationAlarm", "Date": "2015-02-22T12:55:40Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rec.getFile().exists()) { java.lang.String recName = rec.getName(activity, true); if (net.osmand.util.Algorithms.isEmpty(recName)) { return new net.osmand.data.PointDescription(rec.getSearchHistoryType(), view.getResources().getString(R.string.recording_default_name)); } return new net.osmand.data.PointDescription(rec.getSearchHistoryType(), recName); }else { plugin.deleteRecording(rec, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8272/buggy-version/OsmAnd.src.net.osmand.plus.audionotes.AudioNotesLayer.java", "BodyUseAPI": ["net.osmand.plus.audionotes.AudioVideoNotesPlugin.deleteRecording(net.osmand.plus.audionotes.AudioVideoNotesPlugin.Recording,boolean)", "net.osmand.plus.audionotes.AudioVideoNotesPlugin.Recording.getName(net.osmand.plus.activities.MapActivity,boolean)", "net.osmand.plus.audionotes.AudioVideoNotesPlugin.Recording.getSearchHistoryType()", "net.osmand.plus.audionotes.AudioVideoNotesPlugin.Recording.getSearchHistoryType()"], "Fixed commit": "5255aaf0375374f6a55b8e118d6dc375463887f3", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2016-05-26T15:46:47Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((columns.length) < 2) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1465/buggy-version/Prototype.src.DB.User.java", "BodyUseAPI": [], "Fixed commit": "efa72711033c8985cb445a799481d190d84ed5b2", "Url": "https://api.github.com/repos/cse216sudoers/pos", "Date": "2015-11-19T20:55:03Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (prec != null) prec.setRecommendation((((prec.getRecommendation()) + \"\\r\\n\") + (ann.getRecommendation())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7867/buggy-version/src.main.java.DataContentAnalysis.java", "BodyUseAPI": ["DataContent.setRecommendation((((prec.getRecommendation()) + \"\\r\\n\") + (ann.getRecommendation())))", "DataContent.getRecommendation()"], "Fixed commit": "41d9569a55e1052f98f883ced7f2f32e6835cc20", "Url": "https://api.github.com/repos/imatesiu/uicontentanalysiscomponent", "Date": "2015-11-15T21:40:34Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.compareTo(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result == 0) { if (diff < diffother) { return 1; }else return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7867/buggy-version/src.main.java.eu.learnpad.ca.rest.data.Annotation.java", "BodyUseAPI": [], "Fixed commit": "41d9569a55e1052f98f883ced7f2f32e6835cc20", "Url": "https://api.github.com/repos/imatesiu/uicontentanalysiscomponent", "Date": "2015-11-15T21:40:34Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (np == 0) { np = 4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8173/buggy-version/src.Driver.java", "BodyUseAPI": [], "Fixed commit": "bd7e8e0c351c2baa7439bd99d632e7c538331138", "Url": "https://api.github.com/repos/yhangpoon/Activity2", "Date": "2012-03-28T01:45:07Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nt == 0) { nt = 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8173/buggy-version/src.Driver.java", "BodyUseAPI": [], "Fixed commit": "bd7e8e0c351c2baa7439bd99d632e7c538331138", "Url": "https://api.github.com/repos/yhangpoon/Activity2", "Date": "2012-03-28T01:45:07Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((io.evercam.androidapp.video.VideoActivity.evercamCamera) != null) { feedbackIntent.putExtra(Constants.BUNDLE_KEY_CAMERA_ID, io.evercam.androidapp.video.VideoActivity.evercamCamera.getCameraId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8308/buggy-version/evercamPlay.src.main.java.io.evercam.androidapp.video.VideoActivity.java", "BodyUseAPI": [], "Fixed commit": "38ea0cc10a2321512033b68fb678a8fe03c581e6", "Url": "https://api.github.com/repos/evercam/evercam-android", "Date": "2015-11-02T09:46:33Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((statementList.size()) == 0) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7961/buggy-version/src.main.java.com.alibaba.druid.wall.WallProvider.java", "BodyUseAPI": [], "Fixed commit": "951432cc493411ac20c6bde6e141458f49209b1f", "Url": "https://api.github.com/repos/sandzhang/druid", "Date": "2012-10-20T02:12:32Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.ednovo.gooru.client.gin.AppClientFactory.getCurrentPlaceToken().equals(PlaceTokens.COMMUNITY)) { viewAllBtn.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7115/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.home.library.LibraryTopicListView.java", "BodyUseAPI": [], "Fixed commit": "204fce298c4f632a52fbadd6ed04ec12f93a25aa", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2015-03-16T09:38:55Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (converter == null) { if ((from.isArray()) && ((from.getComponentType()) != (java.lang.Object.class))) { return ((com.spbsu.commons.func.types.TypeConverter<U, V>) (converter(java.lang.Object[].class, to))); }else if ((to.isArray()) && ((to.getComponentType()) != (java.lang.Object.class))) { return ((com.spbsu.commons.func.types.TypeConverter<U, V>) (converter(from, java.lang.Object[].class))); } throw new java.lang.RuntimeException((((\"Unable to find proper converter from \" + from) + \" to \") + to)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5703/buggy-version/src.main.java.com.spbsu.commons.func.types.impl.TypeConvertersCollection.java", "BodyUseAPI": [], "Fixed commit": "2f92520b8936213f6dfc35c528c6977a46fc9430", "Url": "https://api.github.com/repos/spbsu-ml-community/commons", "Date": "2015-02-20T20:30:31Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((animation) != null) && (animation.isRunning())) animation.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3743/buggy-version/app.src.main.java.com.example.yink.amadeus.MainActivity.java", "BodyUseAPI": ["android.graphics.drawable.AnimationDrawable.stop()"], "Fixed commit": "5cd4d02bf8e887d9fd9651fdc3b923210cc00c18", "Url": "https://api.github.com/repos/RIP95/Amadeus", "Date": "2017-03-11T02:49:11Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gameView.isTutorial())) stopView.setVisibility(View.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4669/buggy-version/app.src.main.java.james.asteroid.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b52378abaa4e671a4c2aef0dc02af2e80c3deea2", "Url": "https://api.github.com/repos/TheAndroidMaster/Asteroid", "Date": "2017-08-04T01:20:49Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((object.size()) > 0) { com.alibaba.fastjson.JSON json = (object instanceof com.alibaba.fastjson.JSON) ? ((com.alibaba.fastjson.JSON) (object)) : new com.alibaba.fastjson.JSONObject(object); java.lang.Object newObj = com.alibaba.fastjson.JSON.toJavaObject(json, clazz); this.parseObject(newObj); return newObj; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5089/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": [], "Fixed commit": "510d645e0ff83df61e1a897c8844d4e924b9f44b", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-13T09:50:04Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (listFiles != null) { for (final java.io.File file : listFiles) { this.addr(file, added); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1688/buggy-version/src.main.java.net.bbmsoft.jgitfx.cli.RepoRegistryCli.java", "BodyUseAPI": [], "Fixed commit": "e7d11fb5c82130ec070d3051600db5e045aacf57", "Url": "https://api.github.com/repos/jgitfx/net.bbmsoft.jgitfx.cli", "Date": "2017-12-29T00:44:47Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (listFiles != null) { for (final java.io.File file : listFiles) { this.remover(file, removed); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1688/buggy-version/src.main.java.net.bbmsoft.jgitfx.cli.RepoRegistryCli.java", "BodyUseAPI": [], "Fixed commit": "e7d11fb5c82130ec070d3051600db5e045aacf57", "Url": "https://api.github.com/repos/jgitfx/net.bbmsoft.jgitfx.cli", "Date": "2017-12-29T00:44:47Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"entry\".equals(name)) inEntry = false; else if (\"author\".equals(name)) inAuthor = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5098/buggy-version/railo-java.railo-core.src.railo.runtime.text.feed.FeedHandler.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "49ab9a2e2294e01b9d4cee92702bf8fe50150045", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-03-12T14:44:38Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"entry\".equals(name)) inEntry = true; else if (\"author\".equals(name)) inAuthor = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5098/buggy-version/railo-java.railo-core.src.railo.runtime.text.feed.FeedHandler.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "49ab9a2e2294e01b9d4cee92702bf8fe50150045", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-03-12T14:44:38Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(Extra.EXTRA_CALIBRATION_IMU_MESSAGE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (message != null) processMAVMessage(message, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3127/buggy-version/Android.src.org.droidplanner.android.fragments.calibration.imu.FragmentSetupIMU.java", "BodyUseAPI": ["org.droidplanner.android.fragments.calibration.imu.FragmentSetupIMU.1.processMAVMessage(java.lang.String,boolean)"], "Fixed commit": "15268486b0eba2fe449c9367d95e0d0cccd65f37", "Url": "https://api.github.com/repos/ne0fhyk/droidplanner", "Date": "2014-11-10T09:16:53Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alarm.name.equals(\"\")) alarm.name = \"Alarm\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1210/buggy-version/WeatherAlarm.src.com.mahcks.weatheralarm.AlarmEditActivity.java", "BodyUseAPI": [], "Fixed commit": "f96caff33736848cb2f38c88b79f6845c77b6588", "Url": "https://api.github.com/repos/PeterGok/WeatherAlarm", "Date": "2014-01-19T03:27:46Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldState == showState) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8741/buggy-version/uiview.src.main.java.com.angcyo.uiview.recycler.adapter.RBaseAdapter.java", "BodyUseAPI": [], "Fixed commit": "d130241b65271f20fbcdfba42a762f7f70aaf869", "Url": "https://api.github.com/repos/angcyo/RLibrary", "Date": "2017-09-26T02:29:28Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEnableLoadMore()) { setLoadMoreEnd(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8741/buggy-version/uiview.src.main.java.com.angcyo.uiview.recycler.adapter.RBaseAdapter.java", "BodyUseAPI": [], "Fixed commit": "d130241b65271f20fbcdfba42a762f7f70aaf869", "Url": "https://api.github.com/repos/angcyo/RLibrary", "Date": "2017-09-26T02:29:28Z"},
{"Line": "=>1055", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2944/buggy-version/src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "78ab30f7a70d742beb7a8a7827b39bdc3e3a176b", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (mappedIndicatorIndx < 0) { try { org.apache.wicket.core.util.lang.PropertyResolver.setValue(propertyName, ret, value, prc); } catch (org.apache.wicket.WicketRuntimeException e) { e.printStackTrace(); } }else { java.lang.String propertyExp = propertyName.substring(0, mappedIndicatorIndx); java.lang.String fieldExp = propertyName.substring((mappedIndicatorIndx + 1)); java.lang.Object object = ret; int subObject = propertyExp.lastIndexOf('.'); if (subObject >= 0) { object = org.apache.wicket.core.util.lang.PropertyResolver.getValue(propertyExp.substring(0, subObject), object); propertyExp = propertyExp.substring((subObject + 1)); } if (object != null) { java.lang.String methodName = (\"set\" + (propertyExp.substring(0, 1).toUpperCase())) + (propertyExp.substring(1)); java.lang.reflect.Method[] methods = object.getClass().getMethods(); try { for (java.lang.reflect.Method method : methods) { if (method.getName().equals(methodName)) { java.lang.Class<?>[] paramTypes = method.getParameterTypes(); if ((((paramTypes.length) == 2) && (paramTypes[0].isAssignableFrom(java.lang.String.class))) && ((value == null) || (paramTypes[1].isInstance(value)))) { method.invoke(object, fieldExp, value); break; } } } } catch (java.lang.Exception e) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5975/buggy-version/wicket-orientdb.src.main.java.ru.ydn.wicket.wicketorientdb.proto.AbstractPrototyper.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "61fe218c8326f870b4f2190819fdaa80e47979ff", "Url": "https://api.github.com/repos/PhantomYdn/wicket-orientdb", "Date": "2014-09-30T22:53:12Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sender instanceof org.bukkit.entity.Player) { if ((args[0].equalsIgnoreCase(\"c\")) || (args[0].equals(1))) { p.setGameMode(GameMode.CREATIVE); sender.sendMessage(((org.bukkit.ChatColor.GOLD) + \"You are now in creative mode!\")); return true; } if ((args[0].equalsIgnoreCase(\"s\")) || (args[0].equals(0))) { p.setGameMode(GameMode.SURVIVAL); sender.sendMessage(((org.bukkit.ChatColor.GOLD) + \"You are now in survival mode!\")); return true; } }else { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"Please use /gm <player> <gamemode> on console!\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6302/buggy-version/mineguild-admin-plugin.src.com.github.mineguild.MineguildAdmin.MGACommandExecutor.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(((org.bukkit.ChatColor.RED) + \"Please use /gm <player> <gamemode> on console!\"))", "org.bukkit.command.CommandSender.sendMessage(((org.bukkit.ChatColor.GOLD) + \"You are now in creative mode!\"))", "org.bukkit.command.CommandSender.sendMessage(((org.bukkit.ChatColor.GOLD) + \"You are now in survival mode!\"))"], "Fixed commit": "321d735c591106f71d769e8714fb22ebf6cee0e2", "Url": "https://api.github.com/repos/mineguild/mineguild-admin-plugin", "Date": "2012-08-20T14:55:24Z"},
{"Line": "=>719", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(elapsedTimeLabel.isDisposed())) { updateElapsedTime(); schedule(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6334/buggy-version/com.piece_framework.makegood.ui.src.com.piece_framework.makegood.ui.views.ResultView.java", "BodyUseAPI": [], "Fixed commit": "a26ba6c3a3b991c055172614dd36dc4988f7a0d5", "Url": "https://api.github.com/repos/piece/makegood", "Date": "2012-11-27T08:19:21Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list(java.io.FilenameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ioFolders != null) { for (java.lang.String ioFolder : ioFolders) { cz.cesnet.shongo.connector.storage.Folder folder = new cz.cesnet.shongo.connector.storage.Folder(); folder.setFolderId(cz.cesnet.shongo.connector.storage.LocalStorageHandler.getChildId(folderId, ioFolder)); folder.setParentFolderId(folderId); folder.setFolderName(ioFolder); folders.add(folder); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1683/buggy-version/shongo-connector.src.main.java.cz.cesnet.shongo.connector.storage.LocalStorageHandler.java", "BodyUseAPI": [], "Fixed commit": "9efed47e5ea1485abd94dd122aad491e3b4fe81e", "Url": "https://api.github.com/repos/shongo/shongo", "Date": "2014-05-23T08:03:56Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) { return new ReturnObjectImpl(ErrorMessage.EMPTY_STRUCTURE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/676/buggy-version/ArrayList.java", "BodyUseAPI": [], "Fixed commit": "ca614dade433339ad1220adb6e778eefadd658a1", "Url": "https://api.github.com/repos/BBK-PiJ-2014-02/cw3", "Date": "2014-12-29T21:09:53Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nbElements <= pageSize) { beginIndex = 1; endIndex = 1; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6723/buggy-version/database.src.main.java.com.excilys.database.servlets.DashboardServlet.java", "BodyUseAPI": [], "Fixed commit": "66af436e4a41d3f0c4c94b5f7caa801417b2504a", "Url": "https://api.github.com/repos/ymougenel/computer-database", "Date": "2016-05-23T10:23:59Z"},
{"Line": "=>2103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(buildData.getBuildOptions().getUseOldBugLinks())) { retValue.append(\"<!-- BUG LINK ENTITIES -->\\n\"); try { final org.jboss.pressgang.ccms.contentspec.buglinks.BaseBugLinkStrategy bugLinkStrategy = buildData.getBugLinkStrategy(); final org.jboss.pressgang.ccms.contentspec.buglinks.BugLinkOptions bugLinkOptions = buildData.getBugLinkOptions(); retValue.append(bugLinkStrategy.generateEntities(bugLinkOptions, buildData.getBuildName(), buildData.getBuildDate())); } catch (java.io.UnsupportedEncodingException e) { throw new org.jboss.pressgang.ccms.contentspec.builder.exception.BuildProcessingException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3481/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.builder.DocBookBuilder.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.contentspec.builder.structures.BuildData.getBuildName()", "java.lang.StringBuilder.append(bugLinkStrategy.generateEntities(bugLinkOptions, buildData.getBuildName(), buildData.getBuildDate()))", "org.jboss.pressgang.ccms.contentspec.builder.structures.BuildData.getBuildDate()", "org.jboss.pressgang.ccms.contentspec.buglinks.BaseBugLinkStrategy.generateEntities(org.jboss.pressgang.ccms.contentspec.buglinks.BugLinkOptions,buildData.getBuildName(),buildData.getBuildDate())", "org.jboss.pressgang.ccms.contentspec.builder.structures.BuildData.getBugLinkOptions()", "org.jboss.pressgang.ccms.contentspec.builder.structures.BuildData.getBugLinkStrategy()"], "Fixed commit": "1a0473dd3eab6005089298212a5c8c670892c94f", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSBuilder", "Date": "2014-02-15T00:58:36Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (authorizationHeader == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/157/buggy-version/components.webapp-authenticator-framework.org.wso2.carbon.webapp.authenticator.framework.src.main.java.org.wso2.carbon.webapp.authenticator.framework.authenticator.JWTAuthenticator.java", "BodyUseAPI": [], "Fixed commit": "4ed9f64ce401dfebb62ee218f5fc00351ff6671c", "Url": "https://api.github.com/repos/Kamidu/carbon-device-mgt", "Date": "2015-09-14T11:42:07Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value != null) && (value instanceof java.lang.CharSequence)) { java.lang.CharSequence string = ((java.lang.CharSequence) (value)); if (((string.charAt(0)) == '[') || ((string.charAt(0)) == '{')) { writer.append(string); writer.flush(); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1078/buggy-version/Server.Java.httprpc-server.src.org.httprpc.JSONEncoder.java", "BodyUseAPI": [], "Fixed commit": "d6b76a10607aed93b6907128a20d0035a120b697", "Url": "https://api.github.com/repos/crabo/HTTP-RPC", "Date": "2017-02-07T01:54:58Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(launchedTasks.isEmpty())) { onPostExecute(launchedTasks.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8659/buggy-version/app.src.main.java.fr.vpm.audiorss.process.TaskManager.java", "BodyUseAPI": ["fr.vpm.audiorss.process.TaskManager.1.onPostExecute(launchedTasks.get(0))", "java.util.concurrent.CopyOnWriteArrayList<android.os.AsyncTask>.get(int)"], "Fixed commit": "9cb01d171e18b85e850bb76baabca485ed74ef07", "Url": "https://api.github.com/repos/vpmalley/radiofeedz", "Date": "2015-11-02T22:29:25Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((axis.getMoveDone()) != null) { this.writeFunction(axis.getMoveDone(), \"movedone\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8244/buggy-version/applications.plugins.org.csstudio.eve.data.src.de.ptb.epics.eve.data.scandescription.processors.ScanDescriptionSaver.java", "BodyUseAPI": ["de.ptb.epics.eve.data.scandescription.processors.ScanDescriptionSaver.writeFunction(axis.getMoveDone(),java.lang.String)", "de.ptb.epics.eve.data.measuringstation.MotorAxis.getMoveDone()"], "Fixed commit": "615ca1d94025af2138cd9158cd4dba135117c646", "Url": "https://api.github.com/repos/eveCSS/eveCSS", "Date": "2014-09-04T13:42:32Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (didPut) { cache.remove(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7521/buggy-version/compiler.src.main.java.com.github.mustachejava.DefaultMustacheFactory.java", "BodyUseAPI": [], "Fixed commit": "d9ff6744cd6ee5f986aa46bfc3344bcebd4fd5b3", "Url": "https://api.github.com/repos/orirawlings/mustache.java", "Date": "2015-03-03T22:39:24Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ctx.session().containsKey(Constants.SESSION_KEY_GAME_GROUP)) { long gameGroupId = java.lang.Long.parseLong(ctx.session().get(Constants.SESSION_KEY_GAME_GROUP)); gameGroup = models.GameGroup.byId(gameGroupId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8007/buggy-version/app.filters.GameGroupValidator.java", "BodyUseAPI": ["java.lang.Long.parseLong(ctx.session().get(Constants.SESSION_KEY_GAME_GROUP))", "ctx.session().get(Constants.SESSION_KEY_GAME_GROUP)", "Http.Context.session()"], "Fixed commit": "82366c2020f51c10bdcfa0d7d34483e80a2f061e", "Url": "https://api.github.com/repos/matsjonas/squashler", "Date": "2014-03-21T22:48:43Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, graphql.execution.Argument>.get(fieldArgument.getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (argument != null) { value = coerceValueAst(fieldArgument.getType(), argument.getValue(), variables); }else { value = fieldArgument.getDefaultValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/165/buggy-version/src.main.java.graphql.execution.ValuesResolver.java", "BodyUseAPI": ["graphql.execution.ValuesResolver.coerceValueAst(fieldArgument.getType(),argument.getValue(),java.util.Map<java.lang.String, java.lang.Object>)", "graphql.execution.Argument.getValue()"], "Fixed commit": "e3a00b7af4c7094b7c2b74075e3653ebdc8c1aca", "Url": "https://api.github.com/repos/graphql-java/graphql-java", "Date": "2015-07-17T06:47:09Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["entityManager.createQuery(query).setParameter(\"saleId\", id).getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(expensesToDelete.isEmpty())) { query = \"DELETE FROM Expense e WHERE e.parentExpense.id IN (:expensesToDelete)\"; entityManager.createQuery(query).setParameter(\"expensesToDelete\", expensesToDelete).executeUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1135/buggy-version/src.main.java.org.iabako.server.dao.business.SaleDAO.java", "BodyUseAPI": ["entityManager.createQuery(query).setParameter(java.lang.String,java.util.List<java.lang.Long>)", "entityManager.createQuery(query).setParameter(\"expensesToDelete\", expensesToDelete).executeUpdate()"], "Fixed commit": "730bf6944ddbaebd4916a9b350ddc6b03bdf71d7", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2016-09-05T14:02:11Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.psddev.dari.util.Password.parseData()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dataParts == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2655/buggy-version/util.src.main.java.com.psddev.dari.util.Password.java", "BodyUseAPI": [], "Fixed commit": "befea4304fa0b81b1f595269e2a57421c1d6de8e", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2014-01-24T02:17:20Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2655/buggy-version/util.src.main.java.com.psddev.dari.util.Password.java", "BodyUseAPI": [], "Fixed commit": "befea4304fa0b81b1f595269e2a57421c1d6de8e", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2014-01-24T02:17:20Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(com.zhartunmatthew.web.contactbook.validation.ValidationUtils.isNumber(id))) { isRedirected = true; return com.zhartunmatthew.web.contactbook.command.showviewcommands.ShowContactCommand.REDIRECTED_URL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5564/buggy-version/ContactWeb.src.main.java.com.zhartunmatthew.web.contactbook.command.showviewcommands.ShowContactCommand.java", "BodyUseAPI": [], "Fixed commit": "b7eaaee4bfdb0a1e68e11d0b4abb1f9c8b340d9c", "Url": "https://api.github.com/repos/ZhartunMatthew/ContactBook", "Date": "2017-04-04T11:12:27Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["web.handlers.RequestHandler.getCommand(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (CommandType.RESERVE_BOOK_AJAX.equals(type)) { java.lang.String contextPath = request.getContextPath(); if ((session.getAttribute(\"sreader\")) == null) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/916/buggy-version/src.web.filter.AuthFilter.java", "BodyUseAPI": [], "Fixed commit": "a88298651cf333aae9ab94bc23606c65937ec6c2", "Url": "https://api.github.com/repos/masiuk-l/KR", "Date": "2017-08-21T06:44:50Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (flightId != null) flightsOfPlane.remove(flightDao.findById(flightId));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3313/buggy-version/AirportManagerService.src.main.java.com.pv165.airportmanagerservice.PlaneServiceImpl.java", "BodyUseAPI": ["com.pv165.airportmanagerpersistence.dao.FlightDao.findById(java.lang.Long)", "java.util.List<com.pv165.airportmanagerpersistence.entity.Flight>.remove(flightDao.findById(flightId))"], "Fixed commit": "247c3a003207b3900150bdb4499d64e723a53f19", "Url": "https://api.github.com/repos/lpisk/PA165AirportManager", "Date": "2016-12-18T20:52:50Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["group.getGroupBy(i).getPhoto_attribute()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (key.equals(model.Grade.FILENAME)) value = photo.getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3009/buggy-version/src.java.model.Grade.java", "BodyUseAPI": [], "Fixed commit": "97ab0193f3b44c279c88645f099a69769227361a", "Url": "https://api.github.com/repos/aryner/Photo_Grader", "Date": "2015-05-08T18:32:30Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type == (com.alibaba.fastjson.JSON.class)) || (type == (com.alibaba.fastjson.JSONObject.class))) { return ((T) (parser.parse())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2135/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.java", "BodyUseAPI": [], "Fixed commit": "5af2e72fafec39849d8950b55e2dc78ee95c5677", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2014-11-19T05:47:37Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((p.getPlist().size()) > 0) { activePlaylist = si.matjazcerkvenik.openmp3player.io.PlaylistFactory.getInstance().getPlaylist(p.getPlist().get(0).getName()); }else { activePlaylist = new si.matjazcerkvenik.openmp3player.player.Playlist(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5937/buggy-version/src.si.matjazcerkvenik.openmp3player.player.Mp3Player.java", "BodyUseAPI": [], "Fixed commit": "a2a4567200264e195bb5f8976f102917d0c6f554", "Url": "https://api.github.com/repos/matjaz99/OpenMp3Player", "Date": "2014-12-12T19:38:32Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activePlaylist.getMp3files().getFiles().isEmpty()) { return \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5937/buggy-version/src.si.matjazcerkvenik.openmp3player.player.Mp3Player.java", "BodyUseAPI": [], "Fixed commit": "a2a4567200264e195bb5f8976f102917d0c6f554", "Url": "https://api.github.com/repos/matjaz99/OpenMp3Player", "Date": "2014-12-12T19:38:32Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentCustomer.getAge()) < 18) { facesContext.addMessage(null, new javax.faces.application.FacesMessage(\"Underage users cannot do transfers.\")); }else { this.accountService.transfer(fromAccount, toAccount, amount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9080/buggy-version/src.main.java.com.lordofthejars.bank.account.web.TransferController.java", "BodyUseAPI": [], "Fixed commit": "fd8866f0a1e83ef8c7f50842b43ee53eab1eabe7", "Url": "https://api.github.com/repos/lordofthejars/foobank", "Date": "2013-09-17T18:54:28Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (reMatch.matches()) { return reMatch.group(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5560/buggy-version/src.radlab.rain.workload.rubis.RubisUtility.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)"], "Fixed commit": "e954e135346a5391ffd01eaeb63df5f91d95000b", "Url": "https://api.github.com/repos/sguazt/rain-workload-toolkit", "Date": "2013-01-19T18:30:28Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (reMatch.matches()) { return reMatch.group(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5560/buggy-version/src.radlab.rain.workload.rubis.RubisUtility.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)"], "Fixed commit": "e954e135346a5391ffd01eaeb63df5f91d95000b", "Url": "https://api.github.com/repos/sguazt/rain-workload-toolkit", "Date": "2013-01-19T18:30:28Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((params) == null) { paramNum = 0; }else { paramNum = params.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7944/buggy-version/src.main.java.com.jModule.def.Command.java", "BodyUseAPI": [], "Fixed commit": "33b5ed295d7b4273089798d7255954db5f2b9727", "Url": "https://api.github.com/repos/pkelaita/JModule", "Date": "2017-09-01T06:08:28Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (paramNum == (args.length)) { logic.runCommand(args); }else { java.lang.System.out.println(((getUsage()) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7944/buggy-version/src.main.java.com.jModule.def.Command.java", "BodyUseAPI": ["com.jModule.def.CommandLogic.runCommand(java.lang.String[])"], "Fixed commit": "33b5ed295d7b4273089798d7255954db5f2b9727", "Url": "https://api.github.com/repos/pkelaita/JModule", "Date": "2017-09-01T06:08:28Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isBufferEmpty())) && (!(ejectionScheduled))) { return stack; }else { boolean success = (!(net.minecraft.item.ItemStack.areItemStacksEqual(stack.stack, nonAcceptedStack))) && (tryProcessItem(stack.stack, simulate)); if (success) { nonAcceptedStack = stack.stack; if ((stack.stack.stackSize) <= 0) { return null; }else { return stack; } }else { return stack; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3852/buggy-version/src.main.java.com.bluepowermod.tile.tier2.TileSortingMachine.java", "BodyUseAPI": [], "Fixed commit": "b4cb769b9dd113f3e000b3cf00b208e2be8befd4", "Url": "https://api.github.com/repos/MrKickkiller/BluePower", "Date": "2015-01-13T19:39:46Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((join.getJoinCondition()) != null) sql.append(translate(join.getJoinCondition()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7107/buggy-version/src.adql.translator.SQLServerTranslator.java", "BodyUseAPI": ["adql.query.from.ADQLJoin.getJoinCondition()", "java.lang.StringBuffer.append(java.lang.String)", "adql.translator.SQLServerTranslator.translate(join.getJoinCondition())"], "Fixed commit": "4f71067ff0b003525ef380722787af3941da1cd3", "Url": "https://api.github.com/repos/vforchi/taplib", "Date": "2017-03-29T09:07:03Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mCurrentTrends.isEmpty()) { if ((pStatus == (AbsTrendsProvider.Status.READY)) && ((mCurrentCountryIB.getVisibility()) != (android.view.View.VISIBLE))) { mCurrentCountryIB.setVisibility(View.VISIBLE); onCountrySelected(mCurrentCountryCode); }else { android.widget.Toast.makeText(getActivity(), (\"Initialization failed for trends provider \" + (pTrendsProvider.getName())), Toast.LENGTH_LONG).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1165/buggy-version/app.src.main.java.com.toboehm.trendingmedia.activities.fragments.TrendsFragment.java", "BodyUseAPI": [], "Fixed commit": "35236e34268a313eb746f9ff0a6030f63a791ddf", "Url": "https://api.github.com/repos/TBoehm/Trending-Media", "Date": "2015-04-14T10:45:49Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((waterConnectionRequest.getConnection().getConnectionLocation()) != null) { connectionLocationId = waterConnectionRepository.persistConnectionLocation(waterConnectionRequest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7711/buggy-version/wcms.wcms-connection.src.main.java.org.egov.wcms.transaction.service.WaterConnectionService.java", "BodyUseAPI": ["org.egov.wcms.transaction.repository.WaterConnectionRepository.persistConnectionLocation(org.egov.wcms.transaction.web.contract.WaterConnectionReq)"], "Fixed commit": "50b0cbef41dbc93c35ae5b78e0a484e7bf880601", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-10-11T07:45:35Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((org.apache.brooklyn.core.location.AbstractLocation) (machine)).config().getBag().getAllConfig().get(\"provider\")) != null) && (((org.apache.brooklyn.core.location.AbstractLocation) (machine)).config().getBag().getAllConfig().get(\"provider\").equals(\"byon\"))) { parseMachineConfig(((org.apache.brooklyn.core.location.AbstractLocation) (machine))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5335/buggy-version/core.src.main.java.org.apache.brooklyn.location.byon.FixedListMachineProvisioningLocation.java", "BodyUseAPI": ["org.apache.brooklyn.location.byon.FixedListMachineProvisioningLocation<T>.parseMachineConfig(T)"], "Fixed commit": "946c0deb7c8174dfe220b00fbc07b6a342c2f40f", "Url": "https://api.github.com/repos/ivanayov/brooklyn-server", "Date": "2017-08-04T10:53:35Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entity instanceof net.minecraft.entity.item.EntityFireworkRocket) || (!(entity.isAddedToChunk()))) { isActive = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/147/buggy-version/src.main.java.org.spigotmc.ActivationRange.java", "BodyUseAPI": [], "Fixed commit": "3d347ed65b10166b1cf0062ad851ab6dd0de3e0a", "Url": "https://api.github.com/repos/KookykraftMC/Thermos", "Date": "2016-03-13T06:27:38Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loginS == null) { return new com.juickadvanced.RESTResponse(\"Empty own Juick username (?)\", false, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/805/buggy-version/src.com.juickadvanced.protocol.JuickLoginProcedure.java", "BodyUseAPI": [], "Fixed commit": "de35fa4d13d5990ef66dae082727cba5d21b23a5", "Url": "https://api.github.com/repos/sannysanoff/juickadvanced-common", "Date": "2014-10-25T08:02:45Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDeathEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(me.botsko.prism.Prism.getIgnore().event(\"entity-kill\", entity.getWorld()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/667/buggy-version/src.main.java.me.botsko.prism.listeners.PrismEntityEvents.java", "BodyUseAPI": [], "Fixed commit": "700f434e7170eaf8100c6d420c22d1d3e73472f2", "Url": "https://api.github.com/repos/Dykam/Prism", "Date": "2014-03-13T00:33:27Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Item.getItemStack()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((dropStack.getAmount()) == dropAmount) { return false; }else { drop.remove(); dropStack.setAmount(dropAmount); ((org.bukkit.entity.Item) (drop.getWorld().dropItem(drop.getLocation(), dropStack))).setPickupDelay(0); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5253/buggy-version/src.main.java.com.gmail.nossr50.skills.unarmed.Unarmed.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.setAmount(int)", "drop.getWorld().dropItem(drop.getLocation(),org.bukkit.inventory.ItemStack)", "((org.bukkit.entity.Item) (drop.getWorld().dropItem(drop.getLocation(), dropStack))).setPickupDelay(int)"], "Fixed commit": "4f1004472c3a6fc433cc5d72652c6d8728cbd589", "Url": "https://api.github.com/repos/mcMMO-Dev/mcMMO", "Date": "2015-02-16T03:03:30Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dirpath.isDirectory())) { img.setFlag(FlagEnum.NO_PATH.getCode()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7805/buggy-version/src.main.java.com.fisher.bostoudmp.core.service.UpLoadImageService.java", "BodyUseAPI": [], "Fixed commit": "aca61aa71cc784787ab06cef3fbb594a87b45a66", "Url": "https://api.github.com/repos/FisherChen/bostoudmp", "Date": "2017-04-27T05:50:15Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fisher.bostoudmp.core.bean.BosImageBatchInfo.getImagePath()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (path == null) { img.setFlag(FlagEnum.NO_PATH.getCode()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7805/buggy-version/src.main.java.com.fisher.bostoudmp.core.service.UpLoadImageService.java", "BodyUseAPI": [], "Fixed commit": "aca61aa71cc784787ab06cef3fbb594a87b45a66", "Url": "https://api.github.com/repos/FisherChen/bostoudmp", "Date": "2017-04-27T05:50:15Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dirpath == null) { img.setFlag(FlagEnum.NO_PATH.getCode()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7805/buggy-version/src.main.java.com.fisher.bostoudmp.core.service.UpLoadImageService.java", "BodyUseAPI": [], "Fixed commit": "aca61aa71cc784787ab06cef3fbb594a87b45a66", "Url": "https://api.github.com/repos/FisherChen/bostoudmp", "Date": "2017-04-27T05:50:15Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((itemInHand == null) || ((itemInHand.getType()) == (org.bukkit.Material.AIR))) { event.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/715/buggy-version/core.src.main.java.me.fromgate.reactions.event.EventManager.java", "BodyUseAPI": [], "Fixed commit": "bea2118dbf7ba3ce4486ebe8dfcb0de2b4e6689b", "Url": "https://api.github.com/repos/Redolith/ReActions", "Date": "2017-07-20T20:21:04Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((memberId == null) || (memberId == 0)) { throw new org.xcolab.exceptions.NotFoundException(\"No message id given\"); }else { return memberService.getMember(memberId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3685/buggy-version/microservices.services.members-service.src.main.java.org.xcolab.web.MembersController.java", "BodyUseAPI": ["org.xcolab.service.member.MemberService.getMember(java.lang.Long)"], "Fixed commit": "46e19850ead6cf1f4abff96f19e3d6d068fcad61", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2016-04-14T18:25:02Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fuser.StartFile.runProgramNumber) == 1) { fuser.LibraryClassCollector objects = new fuser.LibraryClassCollector(); java.util.ArrayList<java.lang.Class> classList = objects.getClasses(); methodList = fuser.StartFile.getMethodNames(classList); java.util.ArrayList<java.lang.reflect.Method> methodArray = fuser.StartFile.getMethodArray(methodList); java.util.ArrayList<java.util.ArrayList<java.lang.reflect.Method>> methodLinkPairs = new java.util.ArrayList<java.util.ArrayList<java.lang.reflect.Method>>(); try { methodLinkPairs = fuser.StartFile.getLinkPairsLibrary(methodArray); } catch (java.lang.Exception e1) { e1.printStackTrace(); java.lang.System.out.println(\"ERROR -- problem generating call heirarchy\"); } allJSONlinks = fuser.StartFile.createJSONCallHeirarchy(methodLinkPairs, methodList); objList = fuser.StartFile.getLibObjectNumber(); fuser.LibraryRun libClient = new fuser.LibraryRun(); t = new java.lang.Thread(libClient); t.start(); }else { fuser.PokemonClassCollector objects = new fuser.PokemonClassCollector(); java.util.ArrayList<java.lang.Class> classList = objects.getClasses(); methodList = fuser.StartFile.getMethodNames(classList); java.util.ArrayList<java.lang.reflect.Method> methodArray = fuser.StartFile.getMethodArray(methodList); java.util.ArrayList<java.util.ArrayList<java.lang.reflect.Method>> methodLinkPairs = new java.util.ArrayList<java.util.ArrayList<java.lang.reflect.Method>>(); try { methodLinkPairs = fuser.StartFile.getLinkPairsPokemon(methodArray); } catch (java.lang.Exception e1) { e1.printStackTrace(); java.lang.System.out.println(\"ERROR -- problem generating call heirarchy\"); } allJSONlinks = fuser.StartFile.createJSONCallHeirarchy(methodLinkPairs, methodList); fuser.ClientRun pkmnClient = new fuser.ClientRun(); t = new java.lang.Thread(pkmnClient); t.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1039/buggy-version/ArtProject.src.fuser.StartFile.java", "BodyUseAPI": [], "Fixed commit": "7cbf2231d5c3fc93a36ff80b00837917352a206a", "Url": "https://api.github.com/repos/MightyDragon/MightyDragonRepository", "Date": "2014-11-19T03:21:52Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((customers) != null) { for (it.zerocool.batmacaana.model.City c : customers) { if ((c.getUserID()) == (java.lang.Integer.parseInt(uid))) return c.getName(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5081/buggy-version/app.src.main.java.it.zerocool.batmacaana.GcmIntentService.java", "BodyUseAPI": [], "Fixed commit": "c100053e958eef05feeef1b7acf86738aa63a7bd", "Url": "https://api.github.com/repos/ZeroCool-IT/BatmaCaana", "Date": "2015-03-31T14:27:59Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openengsb.core.api.Domain.getInstanceId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (id != null) { javax.swing.tree.DefaultMutableTreeNode child = new javax.swing.tree.DefaultMutableTreeNode(id); rootNode.add(child); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2033/buggy-version/ui.admin.src.main.java.org.openengsb.ui.admin.wiringPage.WiringPage.java", "BodyUseAPI": [], "Fixed commit": "a995fce51ed3390fb97c4feea81f4aef450ed491", "Url": "https://api.github.com/repos/openengsb/openengsb", "Date": "2011-06-24T14:17:50Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mFeedList.indexOf(mCurrentFeed)) != position) { mCurrentFeed = mFeedList.get(position); setCurrentFeed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2339/buggy-version/app.src.main.java.ua.ck.geekhub.ivanov.rssreader.fragments.ListFragment.java", "BodyUseAPI": ["java.util.ArrayList<ua.ck.geekhub.ivanov.rssreader.dummy.Feed>.get(int)"], "Fixed commit": "e11023e7814e923995fa08ac28704275500e10f9", "Url": "https://api.github.com/repos/smchik/RssReader", "Date": "2015-02-04T15:26:39Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mFeedList.isEmpty())) { mCurrentFeed = mFeedList.get(0); if ((mListView.getChildAt(0)) != null) { mListView.getChildAt(0).setActivated(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2339/buggy-version/app.src.main.java.ua.ck.geekhub.ivanov.rssreader.fragments.ListFragment.java", "BodyUseAPI": ["java.util.ArrayList<ua.ck.geekhub.ivanov.rssreader.dummy.Feed>.get(int)"], "Fixed commit": "e11023e7814e923995fa08ac28704275500e10f9", "Url": "https://api.github.com/repos/smchik/RssReader", "Date": "2015-02-04T15:26:39Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.logger) != null) { this.logger.debug(\"utils cleanup\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6356/buggy-version/cubeengine.src.main.java.de.cubeisland.engine.core.bukkit.BukkitCore.java", "BodyUseAPI": [], "Fixed commit": "9222d9c2a46d7df3646431ee0be7785d03ce0fdc", "Url": "https://api.github.com/repos/CubeEngineDev/CubeEngine", "Date": "2013-08-27T20:52:22Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (container != null) { container.removeAllViews(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8619/buggy-version/app.src.main.java.kg.kloop.android.redbutton.HomeFragment.java", "BodyUseAPI": ["android.view.ViewGroup.removeAllViews()"], "Fixed commit": "32778c754750d28a30a897456f36e4ec5c26d61d", "Url": "https://api.github.com/repos/AlexWalker28/REDbutton", "Date": "2017-11-26T16:51:48Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCopy()) { this.getAbilities(game).setControllerId(controllerId); game.getContinuousEffects().setController(objectId, controllerId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4140/buggy-version/Mage.src.main.java.mage.game.permanent.PermanentImpl.java", "BodyUseAPI": [], "Fixed commit": "4b0d0278470c8b6bfffb4b434fd9d9d14585008d", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2016-03-09T23:54:54Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index) == (-1)) index = intent.getIntExtra(\"INDEX\", 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/536/buggy-version/app.src.main.java.bob.sun.bender.service.PlayerService.java", "BodyUseAPI": [], "Fixed commit": "a48113fd86e739c85db935bb9266df0d745f026a", "Url": "https://api.github.com/repos/SpongeBobSun/Prodigal", "Date": "2017-02-13T04:40:09Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((head.getData()) == anEntry) { return true; }else { while (traverseCounter < ((numObjects) - 1)) { currentNode = currentNode.getNext(); if ((currentNode.getData()) == anEntry) { return true; } traverseCounter++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1751/buggy-version/LinkedList.java", "BodyUseAPI": [], "Fixed commit": "9821e4d4928075fc5277d20aeedaca7e899faf77", "Url": "https://api.github.com/repos/sjhorvath1/LinkedList", "Date": "2016-12-27T00:46:30Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["abra.CompareToReference2.getChromosomeLength(java.lang.String)", "abra.cadabra.GermlineProcessor.processLocus(abra.cadabra.ReadsAtLocus)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((tumorCall.position) > 10) && ((tumorCall.position) < (chromosomeLength - 10))) { refSeq = c2r.getSequence(tumorCall.chromosome, ((tumorCall.position) - 9), 20); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/538/buggy-version/src.main.java.abra.cadabra.GermlineProcessor.java", "BodyUseAPI": ["abra.CompareToReference2.getSequence(java.lang.String,int,int)"], "Fixed commit": "1ba260f448e835415c8b4fd38f07798256a50ea2", "Url": "https://api.github.com/repos/mozack/abra2", "Date": "2017-06-13T21:06:55Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.compareTo(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (comparison == 0) comparison = v1.getIdentifier().compareTo(v2.getIdentifier());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3944/buggy-version/opensrp-tbr.src.main.java.org.smartregister.tbr.jsonspec.ViewPositionComparator.java", "BodyUseAPI": [], "Fixed commit": "fed968bd2103306a2d574db80999e243817131ad", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client-tbr", "Date": "2017-12-07T12:47:24Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Utils.getExtension(f).equals(Utils.slon)) { translationFile = f; java.io.File eventualSourceFile = new java.io.File(((fileName.substring(0, ((fileName.length()) - 4))) + \"txt\")); if (eventualSourceFile.exists()) { sourceFile = eventualSourceFile; }else { java.lang.System.out.println((\"Initial source file in plain text format \" + \"not found. But the translation is safe.\")); sourceFile = null; } }else { javax.swing.JOptionPane.showMessageDialog(null, (\"Invalid input file format!\\n\" + (\"Only files with extensions \\\".txt\\\" and \\\".slon\\\" \" + \"are accepted.\"))); chooserResult = chooser.showOpenDialog(null); if (chooserResult == (javax.swing.JFileChooser.APPROVE_OPTION)) { getCorrectFile(chooser.getSelectedFile(), chooser); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8613/buggy-version/src.SlonGui.java", "BodyUseAPI": [], "Fixed commit": "c7efe1c7d2c50a5389dbedc380949126699e6ca9", "Url": "https://api.github.com/repos/SlavaTodorova/Slon", "Date": "2016-02-25T15:30:11Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input == (count - 1)) { count--; }else { for (int i = input; i < count; i++) { repos[i] = repos[(i + 1)]; } count--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5521/buggy-version/homeworks.Task2.src.com.company.Main.java", "BodyUseAPI": [], "Fixed commit": "4c5e048c95e08fff118ea6904a24a87370339de6", "Url": "https://api.github.com/repos/ZagirNur/JAVA_IT_PARK_4", "Date": "2017-09-26T10:17:28Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (children != null) { for (int i = 0; i < (children.length); i++) { new java.io.File(userFile, children[i]).delete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1261/buggy-version/src.com.gilad.oved.telme.Login.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "fa3e245acb954d15830ae38d03360277d4b2d667", "Url": "https://api.github.com/repos/giladoved/ListenApp", "Date": "2015-01-15T03:35:58Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isTablet) && ((orientation) == (android.content.res.Configuration.ORIENTATION_LANDSCAPE))) { map.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(myLocation, 13)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3721/buggy-version/app.src.main.java.com.polimi.jaj.roarify.fragment.FavoritesFragment.java", "BodyUseAPI": [], "Fixed commit": "8677f36245ba3afe7dd710dd9c85038e1a1e3655", "Url": "https://api.github.com/repos/jramirezc93/Roarify-App", "Date": "2017-02-25T11:49:21Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isTablet) && ((orientation) == (android.content.res.Configuration.ORIENTATION_LANDSCAPE))) { map.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(myLocation, 13)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3721/buggy-version/app.src.main.java.com.polimi.jaj.roarify.fragment.MyMessagesFragment.java", "BodyUseAPI": [], "Fixed commit": "8677f36245ba3afe7dd710dd9c85038e1a1e3655", "Url": "https://api.github.com/repos/jramirezc93/Roarify-App", "Date": "2017-02-25T11:49:21Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (iconString.equals(\"snow\")) { iconId = R.drawable.snow; }else if (iconString.equals(\"sleet\")) { iconId = R.drawable.sleet; }else if (iconString.equals(\"wind\")) { iconId = R.drawable.wind; }else if (iconString.equals(\"fog\")) { iconId = R.drawable.fog; }else if (iconString.equals(\"cloudy\")) { iconId = R.drawable.cloudy; }else if (iconString.equals(\"partly-cloudy-day\")) { iconId = R.drawable.partly_cloudy; }else if (iconString.equals(\"partly-cloudy-night\")) { iconId = R.drawable.cloudy_night; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3258/buggy-version/app.src.main.java.com.tbvanderleystudios.stormy.weather.Forecast.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "1fb7d8ce85508e01084b8082d765467d0c7015c3", "Url": "https://api.github.com/repos/TBVanderley4545/Stormy", "Date": "2016-02-18T02:28:11Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.elasticsearch.search.SearchHit.getFields()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (fields.containsKey(\"inGene\")) { info.setInGene(((java.lang.Boolean) (fields.get(\"inGene\").getValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2868/buggy-version/genophenbrowser-server.src.main.java.com.gmi.nordborglab.browser.server.service.impl.MetaAnalysisServiceImpl.java", "BodyUseAPI": ["fields.get(\"inGene\").getValue()", "java.util.Map<java.lang.String, org.elasticsearch.search.SearchHitField>.get(java.lang.String)", "com.gmi.nordborglab.browser.server.data.annotation.SNPInfo.setInGene(((java.lang.Boolean) (fields.get(\"inGene\").getValue())))"], "Fixed commit": "a380bab2f9d33f7ae4019d1f9b47d2f88c03f295", "Url": "https://api.github.com/repos/timeu/GWA-Portal", "Date": "2015-06-09T11:34:48Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(file.exists())) { try { file.createNewFile(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3605/buggy-version/Corundum.org.corundummc.utils.SettingsManager.java", "BodyUseAPI": [], "Fixed commit": "2c0597bbd09939bcffda1ae0afe7b0a1235b018f", "Url": "https://api.github.com/repos/asusoda/Corundum", "Date": "2015-03-25T19:01:56Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gameInProgress)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8031/buggy-version/app.src.main.java.com.indysoft.amazingtetris.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "15a1826e384d3d7cb3fe763bc3f155eac7a6851e", "Url": "https://api.github.com/repos/scipianus/Amazing-Tetris", "Date": "2015-05-14T20:43:49Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.logging.LogRecord.getLoggerName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((loggerName.length()) <= (\"ballerina.\".length())) { sBuilder.append(\".\"); }else { sBuilder.append(loggerName.substring(\"ballerina.\".length())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/930/buggy-version/modules.ballerina-native.src.main.java.org.ballerinalang.nativeimpl.utils.logger.BvmLogFormatter.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "45ef6817d2dd127f73750fd4dc0e2e83751b2f33", "Url": "https://api.github.com/repos/ballerina-platform/ballerina-lang", "Date": "2017-06-27T20:05:40Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((status != (java.net.HttpURLConnection.HTTP_OK)) && (((status == (java.net.HttpURLConnection.HTTP_MOVED_PERM)) || (status == (java.net.HttpURLConnection.HTTP_MOVED_TEMP))) || (status == (java.net.HttpURLConnection.HTTP_SEE_OTHER)))) { java.lang.String newUrl = conn.getHeaderField(\"Location\"); url = new java.net.URL(newUrl); conn.disconnect(); conn = ((java.net.HttpURLConnection) (url.openConnection())); conn.setConnectTimeout(4000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5883/buggy-version/src.main.java.edw.olingo.service.ServiceInformation.java", "BodyUseAPI": [], "Fixed commit": "031cb375735ae97732da10f5ecd3001f16c298e0", "Url": "https://api.github.com/repos/InforMEA/odata.provider", "Date": "2016-06-16T07:49:48Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((func) instanceof liwenhaosuper.sjtu.simpl.syntax.AnonymousFunction) { return ((liwenhaosuper.sjtu.simpl.syntax.AnonymousFunction) (func)).invokeFunc(par, rst); }else if ((func) instanceof liwenhaosuper.sjtu.simpl.syntax.Application) { liwenhaosuper.sjtu.simpl.syntax.Value vapp = func.eval(rst); return new liwenhaosuper.sjtu.simpl.syntax.Application(vapp, par).eval(rst); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9256/buggy-version/simPL.src.liwenhaosuper.sjtu.simpl.syntax.Application.java", "BodyUseAPI": [], "Fixed commit": "6c8ca32d9561fc606300944cff336ca35de932cf", "Url": "https://api.github.com/repos/liwenhaosuper/simPL", "Date": "2013-06-10T08:50:20Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((imageUrl != null) && (imageUrl.contains(\"6_normal\"))) { imageUrl = imageUrl.replace(\"6_normal\", \"6_bigger\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/79/buggy-version/app.src.main.java.com.az.airzoon.social_integration.TwitterModel.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "d1fad6fd8967845724612aabf2bc540daa4bf466", "Url": "https://api.github.com/repos/Siddharthyadav123/AirZoonNew", "Date": "2016-08-25T14:09:19Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(((CFG.LocalDecl) (ne.myDecl)).type().isChannelType())) { currBlock.ueVar.add(ne.name().getname()); currBlock.ueVarNodes.add(ne); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9011/buggy-version/src.CFG.LVAVisitor.java", "BodyUseAPI": ["currBlock.ueVar.add(ne.name().getname())", "CFG.NameExpr.name()", "currBlock.ueVarNodes.add(CFG.NameExpr)", "ne.name().getname()"], "Fixed commit": "56995083d3cbfa0469a7a62e9a8cba8e5b14f58c", "Url": "https://api.github.com/repos/PalmtopTaiga/ProcessJ", "Date": "2017-02-04T22:24:41Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((amountResources) == 9) { isGravityChanged = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/619/buggy-version/core.src.com.mygdx.game.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "8b3d04e68a4a319964b2ea4f3d31018baab2d3c8", "Url": "https://api.github.com/repos/Velkonost/ludume2017", "Date": "2017-07-30T12:48:14Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mode)) { targetNum = sheeps.length; }else { targetNum = nblacks; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9211/buggy-version/sheepdog.g1.Player.java", "BodyUseAPI": [], "Fixed commit": "889e88bb464e0d05cdcb99076910adab4fb2f78d", "Url": "https://api.github.com/repos/eac2192/SheepDog", "Date": "2013-12-02T02:26:53Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dogs[((id) - 1)].x) > 50) { if (((tmp.x) < 50) && (((dogs[id].y) < 49) || ((dogs[id].y) > 51))) tmp.x = 50; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9211/buggy-version/sheepdog.g1.Player.java", "BodyUseAPI": [], "Fixed commit": "889e88bb464e0d05cdcb99076910adab4fb2f78d", "Url": "https://api.github.com/repos/eac2192/SheepDog", "Date": "2013-12-02T02:26:53Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dogs[((id) - 1)].x) < 50) { if (((tmp.x) > 50) && (((dogs[id].y) < 49) || ((dogs[id].y) > 51))) tmp.x = 50; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9211/buggy-version/sheepdog.g1.Player.java", "BodyUseAPI": [], "Fixed commit": "889e88bb464e0d05cdcb99076910adab4fb2f78d", "Url": "https://api.github.com/repos/eac2192/SheepDog", "Date": "2013-12-02T02:26:53Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name instanceof javax.naming.CompositeName) { absoluteName.addAll(name); }else { absoluteName.addAll(new javax.naming.CompositeName(name.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/240/buggy-version/naming.src.main.java.org.jboss.as.naming.NamingContext.java", "BodyUseAPI": ["javax.naming.Name.addAll(javax.naming.Name)", "javax.naming.Name.toString()", "javax.naming.Name.addAll(javax.naming.CompositeName)"], "Fixed commit": "f1640d8cbee74880c2ad24f063824565dcabe1ac", "Url": "https://api.github.com/repos/kabir/wildfly", "Date": "2016-11-09T10:10:25Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getThisRequest().getArgumentValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((\"''\".equals(expression)) || (expression.isEmpty())) { context.createResponseFrom(\"\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8796/buggy-version/src.main.java.org.netkernelroc.esi.expression.ESIExpressionRuntime.java", "BodyUseAPI": [], "Fixed commit": "bca9dc396147f86cb82bceed2a99889ce9fc83b7", "Url": "https://api.github.com/repos/nflearl/esi-engine", "Date": "2014-12-09T18:55:46Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((textColor != null) && (!(textColor.trim().isEmpty()))) { this.textColor = textColor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1833/buggy-version/app.src.main.java.io.stormcast.app.stormcast.common.models.LocationModel.java", "BodyUseAPI": [], "Fixed commit": "b3518b55a86edfcc6dfdc8a37007eff964274508", "Url": "https://api.github.com/repos/scaffeinate/Stormcast-MVP", "Date": "2017-09-24T23:12:21Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((backgroundColor != null) && (!(backgroundColor.trim().isEmpty()))) { this.backgroundColor = backgroundColor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1833/buggy-version/app.src.main.java.io.stormcast.app.stormcast.common.models.LocationModel.java", "BodyUseAPI": [], "Fixed commit": "b3518b55a86edfcc6dfdc8a37007eff964274508", "Url": "https://api.github.com/repos/scaffeinate/Stormcast-MVP", "Date": "2017-09-24T23:12:21Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (params == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7296/buggy-version/core.src.main.java.com.coinomi.stratumj.messages.CallMessage.java", "BodyUseAPI": [], "Fixed commit": "9d0923efd63678b130e4d613109cadf829265fb7", "Url": "https://api.github.com/repos/Coinomi/coinomi-android", "Date": "2014-09-25T18:50:20Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value != null) { this.put(key, new org.json.JSONArray(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7296/buggy-version/core.src.main.java.com.coinomi.stratumj.messages.BaseMessage.java", "BodyUseAPI": ["com.coinomi.stratumj.messages.BaseMessage.put(java.lang.String,org.json.JSONArray)"], "Fixed commit": "9d0923efd63678b130e4d613109cadf829265fb7", "Url": "https://api.github.com/repos/Coinomi/coinomi-android", "Date": "2014-09-25T18:50:20Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Gdx.input.isKeyJustPressed(Input.Keys.K)) { ui.hit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7146/buggy-version/core.src.com.cultstoppers.Player.java", "BodyUseAPI": [], "Fixed commit": "2c2a3d3253fd6512c863e0c2da9d2cdcb3b16f24", "Url": "https://api.github.com/repos/JGMorgan/Cult-Hunters", "Date": "2016-01-30T05:12:16Z"},
{"Line": "=>911", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (actIdList.isEmpty()) return result;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7301/buggy-version/src.main.java.org.lsst.camera.portal.queries.QueryUtils.java", "BodyUseAPI": [], "Fixed commit": "33539a5951381d4de7e3daf50501fd33410292d2", "Url": "https://api.github.com/repos/lsst-camera-dh/portal-web", "Date": "2016-05-03T00:54:41Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["node.getCdr().getCar()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fSpec.isSymbol()) { env.define(fName, fBody.eval(env)); }else { env.define(fName, c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6940/buggy-version/src.Define.java", "BodyUseAPI": [], "Fixed commit": "8ac316969721646fc9ebdf7f63cd76599582db8a", "Url": "https://api.github.com/repos/kylesarre/SchemeInterpreter", "Date": "2017-11-12T05:36:22Z"},
{"Line": "=>678", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["azkaban.execapp.event.Event.getRunner()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((runner.getOutputProps()) != null) { logger.info(((\"Job \" + (node.getJobId())) + \" had output props.\")); jobOutputProps.put(node.getJobId(), runner.getOutputProps()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5661/buggy-version/src.java.azkaban.execapp.FlowRunner.java", "BodyUseAPI": ["azkaban.execapp.JobRunner.getOutputProps()", "java.util.Map<java.lang.String, azkaban.utils.Props>.put(node.getJobId(),runner.getOutputProps())"], "Fixed commit": "78f4f71768590a03cd84eb3e8239832cc7586089", "Url": "https://api.github.com/repos/azkaban/azkaban2", "Date": "2013-04-09T20:24:57Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (close) csvwriter.close(); else csvwriter.flush();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2073/buggy-version/src.main.org.deidentifier.arx.io.CSVDataOutput.java", "BodyUseAPI": [], "Fixed commit": "866783cbdb2344084f3d7619ad3c39fdac0fa501", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-02-20T10:48:31Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.edu.mimuw.cloudatlas.model.ValueList.getElementType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (elementType.equals(TypePrimitive.DURATION)) { size = new pl.edu.mimuw.cloudatlas.model.ValueInt(((long) (nlist.size()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2100/buggy-version/src.pl.edu.mimuw.cloudatlas.interpreter.Functions.java", "BodyUseAPI": [], "Fixed commit": "5463fd9c389eee9ffcf293ac12ab7b7963257ebf", "Url": "https://api.github.com/repos/konradxyz/cloudatlas", "Date": "2014-11-02T14:58:41Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data != null) searchResults.addAll(data);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3345/buggy-version/app.src.main.java.com.dane.karaoke.activity.MainActivity.java", "BodyUseAPI": ["java.util.List<com.google.api.services.youtube.model.SearchResult>.addAll(java.util.List<com.google.api.services.youtube.model.SearchResult>)"], "Fixed commit": "d5e47a5eceb81ee105dfae05f82f5b2948ff986b", "Url": "https://api.github.com/repos/danesavot/Chrieng-Karaoke", "Date": "2016-01-30T04:57:03Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dane.karaoke.YoutubeAPI.search(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (searchListResponse != null) searchResults = com.dane.karaoke.YoutubeAPI.search(keyword).getItems();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3345/buggy-version/app.src.main.java.com.dane.karaoke.YoutubeSearchLoader.java", "BodyUseAPI": [], "Fixed commit": "d5e47a5eceb81ee105dfae05f82f5b2948ff986b", "Url": "https://api.github.com/repos/danesavot/Chrieng-Karaoke", "Date": "2016-01-30T04:57:03Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Feature.find.fetch(\"featureuser\").where().idEq(java.lang.Long.valueOf(id)).findUnique()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((f.featureUser.getId().equalsIgnoreCase(user_id)) && ((f.featureSession.retrieveId()) == (java.lang.Long.parseLong(sessionID)))) { com.avaje.ebean.Ebean.delete(f); str = \"POI Deleted\"; }else str = \"Unable to Delete\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/143/buggy-version/app.controllers.Features.java", "BodyUseAPI": ["com.avaje.ebean.Ebean.delete(controllers.Feature)"], "Fixed commit": "51ce8ec85b622cdc25aefdfcfc53c3f338cc8f80", "Url": "https://api.github.com/repos/engagelab/Mappa", "Date": "2013-06-13T15:02:32Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((takers.size()) != 1) agentIterator.remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2074/buggy-version/src.main.java.tuwien.infosys.sla.auctionsimulator.ReverseEnglishAgent.java", "BodyUseAPI": [], "Fixed commit": "c02fe9e1e5d2432b51bdf7a2a3d9ae10f2824de1", "Url": "https://api.github.com/repos/elexx/bugfreesansa", "Date": "2014-01-15T11:03:46Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(event.isShiftDown())) { if (!(panelsMap.isEmpty())) { doDeselect(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3664/buggy-version/src.tools.SelectionTool.java", "BodyUseAPI": [], "Fixed commit": "f054f31017e031b1fc58f2b6924fd45a00509b4f", "Url": "https://api.github.com/repos/fado/JDig", "Date": "2014-09-04T13:30:00Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pointPos) == (right.size())) { result = result + \".\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5580/buggy-version/src.main.dataStructure.LR1Item.java", "BodyUseAPI": [], "Fixed commit": "b4242c0ba75a48bc37195ed7712d9b3535f741fd", "Url": "https://api.github.com/repos/C1122C/compilingPractice", "Date": "2017-11-14T10:18:40Z"},
{"Line": "=>840", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c.isNullable()) { pw.printf(\"get%s ().orElse (null)\", columnName); }else { pw.printf(\"get%s ()\", columnName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4529/buggy-version/hedron-daogen.src.main.java.au.com.breakpoint.hedron.daogen.strategy.SpringJdbcTemplateCodeStrategy.java", "BodyUseAPI": [], "Fixed commit": "53762f8ea6becdb9793b07913bfe40556b349d21", "Url": "https://api.github.com/repos/breakpoint-au/Hedron", "Date": "2015-09-14T05:29:14Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPosition) < (mActivity.getStartPosition())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/505/buggy-version/app.src.main.java.com.walmart.products.view.ProductDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "66ae32c26d47732c1de3afac4dae2de7d9b52ad6", "Url": "https://api.github.com/repos/g00dnatur3/WalmartAndroidApp", "Date": "2017-10-15T12:31:20Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me.taylorkelly.bigbrother.BBSettings.usingDBMS(DBMS.H2)) sql = (\"ALTER TABLE `\" + (me.taylorkelly.bigbrother.BBSettings.applyPrefix(\"bbdata\"))) + \"` ALTER COLUMN data BLOB NOT NULL\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5804/buggy-version/src.main.java.me.taylorkelly.bigbrother.fixes.Fix6.java", "BodyUseAPI": [], "Fixed commit": "d313038faec02733dd6bcc96e3ebca03e506f14a", "Url": "https://api.github.com/repos/N3X15/BigBrother", "Date": "2011-04-18T08:35:39Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cpw.mods.fml.common.registry.GameData.getItemRegistry().getNameForObject(stack.getItem())) != null) { java.lang.String modid = Paths.MOD_ID.toLowerCase(); cpw.mods.fml.common.registry.GameRegistry.UniqueIdentifier id = cpw.mods.fml.common.registry.GameRegistry.findUniqueIdentifierFor(stack.getItem()); if ((id != null) && ((id.modId) != null)) modid = id.modId.toLowerCase(); java.util.List<java.lang.String> info = igwmod.InfoSupplier.getInfo(modid, igwmod.WikiUtils.getNameFromStack(stack), true); if (info != null) igwmod.api.WikiRegistry.registerBlockAndItemPageEntry(stack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7120/buggy-version/src.igwmod.ClientProxy.java", "BodyUseAPI": ["igwmod.InfoSupplier.getInfo(java.lang.String,igwmod.WikiUtils.getNameFromStack(stack),boolean)", "igwmod.WikiUtils.getNameFromStack(net.minecraft.item.ItemStack)", "net.minecraft.item.ItemStack.getItem()", "cpw.mods.fml.common.registry.GameRegistry.findUniqueIdentifierFor(stack.getItem())", "igwmod.api.WikiRegistry.registerBlockAndItemPageEntry(net.minecraft.item.ItemStack)"], "Fixed commit": "5b633af332e85b38d24da3d68d67bfb1a63e63b8", "Url": "https://api.github.com/repos/MineMaarten/IGW-mod", "Date": "2015-06-29T13:07:22Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((product.getBestBeforeDate()) != null) { for (int i = 0; i < (products.size()); i++) { if (((products.get(i).getBestBeforeDate()) != null) && (product.getBestBeforeDate().before(products.get(i).getBestBeforeDate()))) { products.add(i, product); return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9038/buggy-version/app.src.main.java.rhyme.a.is.nine.foodmanager.database.ProductDatabase.java", "BodyUseAPI": ["rhyme.a.is.nine.foodmanager.product.Product.getBestBeforeDate()", "product.getBestBeforeDate().before(products.get(i).getBestBeforeDate())", "java.util.List<rhyme.a.is.nine.foodmanager.product.Product>.add(int,rhyme.a.is.nine.foodmanager.product.Product)"], "Fixed commit": "ea883b20bccc16e04f90ac04c422d6a2304898fb", "Url": "https://api.github.com/repos/nine-is-a-rhyme/Food-Manager", "Date": "2015-05-13T12:05:43Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.cloudifysource.restclient.RestClientExecutor.logger.isLoggable(java.util.logging.Level.FINER)) { org.cloudifysource.restclient.RestClientExecutor.logger.finer((((((((\"Execute get request to \" + (request.getURI())) + \". try number \") + (i + 1)) + \" out of \") + (org.cloudifysource.restclient.RestClientExecutor.GET_TRIALS_NUM)) + \", error is \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4740/buggy-version/rest-client.src.main.java.org.cloudifysource.restclient.RestClientExecutor.java", "BodyUseAPI": ["java.util.logging.Logger.finer((((((((\"Execute get request to \" + (request.getURI())) + \". try number \") + (i + 1)) + \" out of \") + (org.cloudifysource.restclient.RestClientExecutor.GET_TRIALS_NUM)) + \", error is \") + (e.getMessage())))"], "Fixed commit": "4b6bfda19fcba5c85c6c71ae256a40f2f40d1f98", "Url": "https://api.github.com/repos/AsherBond/cloudify", "Date": "2013-06-24T12:41:07Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.cloudifysource.restclient.RestClient.logger.isLoggable(java.util.logging.Level.FINE)) { org.cloudifysource.restclient.RestClient.logger.fine((((\"uploading file \" + (file.getAbsolutePath())) + \" with name \") + finalFileName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4740/buggy-version/rest-client.src.main.java.org.cloudifysource.restclient.RestClient.java", "BodyUseAPI": ["java.util.logging.Logger.fine(java.lang.String)"], "Fixed commit": "4b6bfda19fcba5c85c6c71ae256a40f2f40d1f98", "Url": "https://api.github.com/repos/AsherBond/cloudify", "Date": "2013-06-24T12:41:07Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.obeonetwork.graal.impl.TaskReferenceImpl.getTask()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (referencedTask != null) { return referencedTask.isConcernedByUserStory(userStory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6872/buggy-version/models.graal.plugins.org.obeonetwork.graal.src.org.obeonetwork.graal.impl.TaskReferenceImpl.java", "BodyUseAPI": ["org.obeonetwork.graal.Task.isConcernedByUserStory(org.obeonetwork.graal.UserStory)"], "Fixed commit": "f2519f4732ccefbfd9941b3844eefd912af9d1ed", "Url": "https://api.github.com/repos/ObeoNetwork/InformationSystem", "Date": "2013-07-30T07:44:11Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.tasree7a.utils.UserDefaultUtil.getAppLanguage()) == (com.tasree7a.Enums.Language.AR)) com.tasree7a.ThisApplication.getCurrentActivity().getWindow().getDecorView().setLayoutDirection(View.LAYOUT_DIRECTION_RTL);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4586/buggy-version/app.src.main.java.com.tasree7a.Fragments.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "63b6b1d997f9ad4629b61fbd8b6fb543fbabeb1a", "Url": "https://api.github.com/repos/khataha92/tasree7a", "Date": "2017-10-21T15:31:08Z"},
{"Line": "=>2674", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r.l.await(50, java.util.concurrent.TimeUnit.MILLISECONDS)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1368/buggy-version/araqne-logdb-client.src.main.java.org.araqne.logdb.client.LogDbClient.java", "BodyUseAPI": [], "Fixed commit": "1e4e801b952e7861eda6963b6104092bcb91eb4d", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-12-30T06:33:05Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPhone()) { weight = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6064/buggy-version/src.com.tomclaw.mandarin.mmp.MmpItem.java", "BodyUseAPI": [], "Fixed commit": "b980ed61f5464b7b77f9b5ebfc08eeecef3621f7", "Url": "https://api.github.com/repos/solkin/mandarin-j2me-legacy", "Date": "2013-01-26T09:41:52Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resCode == (-1)) { return \"\"; }else if (resCode == 200) { out = \"okSuccess\"; }else { r = new java.io.BufferedReader(new java.io.InputStreamReader(conn.getErrorStream())); java.lang.StringBuilder stringBuilder = new java.lang.StringBuilder(); java.lang.String line; while ((line = r.readLine()) != null) { stringBuilder.append(line).append('\\n'); } out = stringBuilder.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1245/buggy-version/app.src.main.java.com.adam.aslfms.service.Heart.java", "BodyUseAPI": [], "Fixed commit": "51ae57467d2a344fe977c75653bbd892d0754004", "Url": "https://api.github.com/repos/tgwizard/sls", "Date": "2016-08-22T15:03:19Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resCode == (-1)) { return \"\"; }else if (resCode == 200) { r = new java.io.BufferedReader(new java.io.InputStreamReader(conn.getInputStream())); }else { r = new java.io.BufferedReader(new java.io.InputStreamReader(conn.getErrorStream())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1245/buggy-version/app.src.main.java.com.adam.aslfms.service.UserInfo.java", "BodyUseAPI": [], "Fixed commit": "51ae57467d2a344fe977c75653bbd892d0754004", "Url": "https://api.github.com/repos/tgwizard/sls", "Date": "2016-08-22T15:03:19Z"},
{"Line": "=>938", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sourcePackage.Database.getUserId(message.getReceiver(),java.sql.Connection)", "sourcePackage.Database.getUserId(message.getSender(),java.sql.Connection)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((senderID == (sourcePackage.Database.NO_ID)) || (receiverID == (sourcePackage.Database.NO_ID))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1328/buggy-version/src.sourcePackage.Database.java", "BodyUseAPI": [], "Fixed commit": "e1b7a33c01d8f20b63442b7cb4fd16c57c14f965", "Url": "https://api.github.com/repos/IKhaduri/QuizWebsite", "Date": "2016-06-27T12:10:53Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (commandLine.hasOption(uk.ac.ed.bio.synthsys.SBMLDataTools.SBMLAddTimeCourseData.OPTION_SBML_OUT)) { sbmlOutFile = new java.io.File(commandLine.getOptionValue(uk.ac.ed.bio.synthsys.SBMLDataTools.SBMLAddTimeCourseData.OPTION_SBML_OUT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/754/buggy-version/code.src.main.java.uk.ac.ed.bio.SynthSys.SBMLDataTools.SBMLAddTimeCourseData.java", "BodyUseAPI": ["org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)"], "Fixed commit": "3add9500913f895646d3356524f521d369309789", "Url": "https://api.github.com/repos/allyhume/SBMLDataTools", "Date": "2015-08-07T14:36:18Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((paramValue == null) || (paramValue.trim().isEmpty())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8832/buggy-version/spring-mvc-conf.src.main.java.com.pugwoo.spring_mvc_conf.json_param_support.JsonParamArgumentResolver.java", "BodyUseAPI": [], "Fixed commit": "8eadfa7f5b9ef4725ada090311c63b0205a92731", "Url": "https://api.github.com/repos/pugwoo/spring-mvc-conf", "Date": "2017-08-31T04:19:39Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editorPage.getServer().getOriginal().loadAdapter(java.lang.Class,org.eclipse.core.runtime.IProgressMonitor)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (cloudServer != null) { if (cloudServer.getBehaviour().existCloudApplicationModule(moduleName)) { org.eclipse.swt.widgets.Display.getDefault().asyncExec(new java.lang.Runnable() { public void run() { org.eclipse.jface.dialogs.MessageDialog.openWarning(editorPage.getSite().getShell(), \"Failed to deploy application\", org.eclipse.osgi.util.NLS.bind(\"Can't deploy the project {0} because a cloud application with the same name already exits. {1}\", moduleName, \" Please either rename the project or delete the cloud application, and then try again.\")); } }); return org.eclipse.core.runtime.Status.CANCEL_STATUS; } org.cloudfoundry.ide.eclipse.server.ui.internal.editor.ApplicationMasterPart.ApplicationViewersDropAdapter.super.performDrop(data); org.eclipse.core.runtime.jobs.Job job = new org.eclipse.core.runtime.jobs.Job(jobName) { @java.lang.Override protected org.eclipse.core.runtime.IStatus run(org.eclipse.core.runtime.IProgressMonitor monitor) { cloudServer.getBehaviour().publishAdd(project.getName(), monitor); return org.eclipse.core.runtime.Status.OK_STATUS; } }; job.setPriority(Job.INTERACTIVE); job.schedule(); return org.eclipse.core.runtime.Status.OK_STATUS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2951/buggy-version/org.cloudfoundry.ide.eclipse.server.ui.src.org.cloudfoundry.ide.eclipse.server.ui.internal.editor.ApplicationMasterPart.java", "BodyUseAPI": ["cloudServer.getBehaviour().existCloudApplicationModule(org.cloudfoundry.ide.eclipse.server.ui.internal.editor.ApplicationMasterPart.ApplicationViewersDropAdapter.1)", "org.cloudfoundry.ide.eclipse.server.core.internal.CloudFoundryServer.getBehaviour()", "cloudServer.getBehaviour().publishAdd(project.getName(),org.eclipse.core.runtime.IProgressMonitor)", "org.cloudfoundry.ide.eclipse.server.core.internal.CloudFoundryServer.getBehaviour()"], "Fixed commit": "acc049e05cf3904d2d44a3a509915e9eac484438", "Url": "https://api.github.com/repos/HuaweiTech/eclipse-integration-cloudfoundry", "Date": "2014-08-21T21:11:37Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["businesslogic.GoodsListbl.GL_controller.set_signal_name(vo.GoodsVO)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (goodsModelPO == null) { javax.swing.JOptionPane.showMessageDialog(null, \"\u6b64\u5c5e\u6027\u4e0d\u53ef\u4fee\u6539\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9065/buggy-version/src.main.java.presentation.RepoUI.GoodsListPanel.java", "BodyUseAPI": [], "Fixed commit": "d546ff9ce95724625d77b69bc5defd1e7a90d316", "Url": "https://api.github.com/repos/zzt93/Hw-Client", "Date": "2015-01-01T06:36:36Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((refTrackResourceEditRate != null) && (trackResourceEditRate != null)) && (!(trackResourceEditRate.equals(refTrackResourceEditRate)))) { imfErrorLogger.addError(IMFErrorLogger.IMFErrors.ErrorCodes.IMF_CPL_ERROR, IMFErrorLogger.IMFErrors.ErrorLevels.FATAL, java.lang.String.format(\"VirtualTrack with ID %s has resources with inconsistent editRates (First TrackResource EditRate %s), %s\", trackID.toString(), trackResourceEditRate.toString(), refTrackResourceEditRate)); result = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8888/buggy-version/src.main.java.com.netflix.imflibrary.st2067_2.CompositionModels.IMFCoreConstraintsChecker_st2067_2_2013.java", "BodyUseAPI": ["Composition.EditRate.toString()", "com.netflix.imflibrary.IMFErrorLogger.addError(IMFErrorLogger.IMFErrors.ErrorCodes.IMF_CPL_ERROR,IMFErrorLogger.IMFErrors.ErrorLevels.FATAL,java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String,trackResourceEditRate.toString(),Composition.EditRate)"], "Fixed commit": "7574c8f60499a078335ec563bb189867f4604e23", "Url": "https://api.github.com/repos/Netflix/photon", "Date": "2016-06-09T00:54:15Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mQueue.contains(xToast))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4329/buggy-version/XToast.library.src.main.java.com.chenyu.library.XToastHandler.java", "BodyUseAPI": [], "Fixed commit": "5ee2503bde69f7027b95af89579ac435d259d982", "Url": "https://api.github.com/repos/chenyuAndroid/XToast", "Date": "2016-09-01T15:59:41Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(xToast.isShowing())) { mQueue.remove(xToast); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4329/buggy-version/XToast.library.src.main.java.com.chenyu.library.XToastHandler.java", "BodyUseAPI": ["java.util.Queue<com.chenyu.library.XToast>.remove(com.chenyu.library.XToast)"], "Fixed commit": "5ee2503bde69f7027b95af89579ac435d259d982", "Url": "https://api.github.com/repos/chenyuAndroid/XToast", "Date": "2016-09-01T15:59:41Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((xToast.getOnDisappearListener()) != null) { xToast.getOnDisappearListener().onDisappear(xToast); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4329/buggy-version/XToast.library.src.main.java.com.chenyu.library.XToastHandler.java", "BodyUseAPI": ["com.chenyu.library.XToast.getOnDisappearListener()", "xToast.getOnDisappearListener().onDisappear(com.chenyu.library.XToast)"], "Fixed commit": "5ee2503bde69f7027b95af89579ac435d259d982", "Url": "https://api.github.com/repos/chenyuAndroid/XToast", "Date": "2016-09-01T15:59:41Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Philosophy.topicNameToVisitedTopic.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8426/buggy-version/src.main.java.Philosophy.java", "BodyUseAPI": [], "Fixed commit": "b73382e40dd7b662246c7dad24bc9a6f0eb12faf", "Url": "https://api.github.com/repos/Kevin-Jonaitis/Philosophy", "Date": "2016-09-14T08:26:58Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((damage) != (that.damage)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2426/buggy-version/TisButAScratch.src.main.java.scratch.model.weapons.DefaultWeapon.java", "BodyUseAPI": [], "Fixed commit": "750fba42b7fc509d6f024170fd91c1834f97be0a", "Url": "https://api.github.com/repos/Tejpbit/TDA367", "Date": "2014-05-14T14:52:55Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((attackArea) != null ? !(attackArea.equals(that.attackArea)) : (that.attackArea) != null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2426/buggy-version/TisButAScratch.src.main.java.scratch.model.weapons.DefaultWeapon.java", "BodyUseAPI": [], "Fixed commit": "750fba42b7fc509d6f024170fd91c1834f97be0a", "Url": "https://api.github.com/repos/Tejpbit/TDA367", "Date": "2014-05-14T14:52:55Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((runnable) != null ? !(runnable.equals(that.runnable)) : (that.runnable) != null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2426/buggy-version/TisButAScratch.src.main.java.scratch.model.weapons.DefaultWeapon.java", "BodyUseAPI": [], "Fixed commit": "750fba42b7fc509d6f024170fd91c1834f97be0a", "Url": "https://api.github.com/repos/Tejpbit/TDA367", "Date": "2014-05-14T14:52:55Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cooledDown) != (that.cooledDown)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2426/buggy-version/TisButAScratch.src.main.java.scratch.model.weapons.DefaultWeapon.java", "BodyUseAPI": [], "Fixed commit": "750fba42b7fc509d6f024170fd91c1834f97be0a", "Url": "https://api.github.com/repos/Tejpbit/TDA367", "Date": "2014-05-14T14:52:55Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((attackInterval) != (that.attackInterval)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2426/buggy-version/TisButAScratch.src.main.java.scratch.model.weapons.DefaultWeapon.java", "BodyUseAPI": [], "Fixed commit": "750fba42b7fc509d6f024170fd91c1834f97be0a", "Url": "https://api.github.com/repos/Tejpbit/TDA367", "Date": "2014-05-14T14:52:55Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((position == (POSITION_RIGHT_MENU)) && ((mOpenListener) != null)) { mOpenListener.onOpen(position); }else if ((position == (POSITION_CONTENT)) && ((mCloseListener) != null)) { mCloseListener.onClose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5408/buggy-version/library.src.com.jeremyfeinstein.slidingmenu.lib.SlidingMenu.java", "BodyUseAPI": ["com.jeremyfeinstein.slidingmenu.lib.SlidingMenu.OnOpenListener.onOpen(int)"], "Fixed commit": "8c29b069ea6a15b16528634254ddbde7b0d8c213", "Url": "https://api.github.com/repos/ethangao/SlidingMenu", "Date": "2013-06-21T17:36:51Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasColumn(\"Marketplace_Module\", \"bundleSymbolicName\"))) { runSQL((\"alter table Marketplace_Module add bundleSymbolicName \" + \"VARCHAR(500)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4277/buggy-version/marketplace-service.src.main.java.com.liferay.marketplace.internal.upgrade.v1_0_0.UpgradeModule.java", "BodyUseAPI": [], "Fixed commit": "b1fc6fd22ad2959850df18330f11a03b3606d331", "Url": "https://api.github.com/repos/liferay/com-liferay-marketplace", "Date": "2017-02-13T10:01:06Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasColumn(\"Marketplace_Module\", \"bundleVersion\"))) { runSQL(\"alter table Marketplace_Module add bundleVersion VARCHAR(75)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4277/buggy-version/marketplace-service.src.main.java.com.liferay.marketplace.internal.upgrade.v1_0_0.UpgradeModule.java", "BodyUseAPI": [], "Fixed commit": "b1fc6fd22ad2959850df18330f11a03b3606d331", "Url": "https://api.github.com/repos/liferay/com-liferay-marketplace", "Date": "2017-02-13T10:01:06Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!b1) || (!b2)) && (w1 || w2)) { e.setCancelled(true); if (p1 != null) if (!b1) p1.sendMessage(((org.bukkit.ChatColor.RED) + \"You can\u00b4t hit Entitys under water\")); else if (!b2) p1.sendMessage(((org.bukkit.ChatColor.RED) + \"This Player can\u00b4t be hit under water\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7964/buggy-version/src.net.gmx.teamterrian.CDsPluginPack.plugins.NoWaterHit.java", "BodyUseAPI": [], "Fixed commit": "36f0558ce2b744451b3aca384ff63b5d125d3fd9", "Url": "https://api.github.com/repos/DerGrueneFutzi/CPO", "Date": "2014-03-16T16:34:58Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (p1 != null) w1 = (p1.getWorld().getBlockAt(p1.getLocation().add(0, 1.62, 0)).getType()) == (org.bukkit.Material.STATIONARY_WATER);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7964/buggy-version/src.net.gmx.teamterrian.CDsPluginPack.plugins.NoWaterHit.java", "BodyUseAPI": ["p1.getWorld().getBlockAt(p1.getLocation().add(0, 1.62, 0)).getType()", "p1.getWorld().getBlockAt(p1.getLocation().add(0, 1.62, 0))", "org.bukkit.entity.Player.getWorld()", "org.bukkit.entity.Player.getLocation()", "p1.getLocation().add(int,double,int)"], "Fixed commit": "36f0558ce2b744451b3aca384ff63b5d125d3fd9", "Url": "https://api.github.com/repos/DerGrueneFutzi/CPO", "Date": "2014-03-16T16:34:58Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sentJoins.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9087/buggy-version/client.src.main.java.lk.filetributed.client.Client.java", "BodyUseAPI": [], "Fixed commit": "fcf1615b321bd463602263220996e12eb426643b", "Url": "https://api.github.com/repos/swsachith/Filetributed", "Date": "2015-03-06T15:00:41Z"},
{"Line": "=>666", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((key.contains(\"isMoveToPending\")) && (lead.getBrokerStatus().equals(LeadCurrentStatus.Pending.getStatus()))) { alteredFileds.append(\"Moved To Pending Deals\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3711/buggy-version/src.main.java.com.firstidea.garnet.web.brokerx.service.bean.LeadServiceBean.java", "BodyUseAPI": [], "Fixed commit": "823f514b5259622190a245e3ad14ccf5138b7845", "Url": "https://api.github.com/repos/Brokerx/BrokerxWeb", "Date": "2017-04-19T05:18:46Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isMyServiceRunning(com.personal.bourdi_b.SmartBeaconsWithAndroidWearService.DiscoverBeaconsService.class)) { bt_stop_start_service.setText(R.string.start_service); }else { startService(new android.content.Intent(this, com.personal.bourdi_b.SmartBeaconsWithAndroidWearService.DiscoverBeaconsService.class)); bt_stop_start_service.setText(R.string.stop_service); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6615/buggy-version/wear.src.main.java.com.personal.bourdi_b.SmartBeaconsWithAndroidWearService.MainActivity.java", "BodyUseAPI": ["com.personal.bourdi_b.SmartBeaconsWithAndroidWearService.MainActivity.startService(android.content.Intent)"], "Fixed commit": "00526182e1442a352a074884aa4102fe394f3c33", "Url": "https://api.github.com/repos/bourdibay/SmartBeaconsWithAndroidWearService", "Date": "2015-02-07T16:45:30Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (logged) { com.inqwell.any.Call.l.log(java.util.logging.Level.INFO, \"Leaving {0} ret: {1}\", new java.lang.Object[]{ af.getFQName(), ret }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/624/buggy-version/src.main.java.com.inqwell.any.Call.java", "BodyUseAPI": [], "Fixed commit": "3eed48f59fd87ceace02cb22e5cd7bf9cbb4b1da", "Url": "https://api.github.com/repos/inqwell/inq", "Date": "2016-09-21T14:10:19Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isScreenSizeMutable()) { mScreenWidth = width; mScreenHeight = height; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6395/buggy-version/dConnectDevicePlugin.dConnectDeviceTheta.app.src.main.java.org.deviceconnect.android.deviceplugin.theta.core.SphericalViewRenderer.java", "BodyUseAPI": [], "Fixed commit": "96805e5de21650a32c2d930cc82183379eec0efa", "Url": "https://api.github.com/repos/TakayukiHoshi1984/DeviceConnect-Android", "Date": "2015-12-07T03:14:40Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data != null) { android.os.Bundle extras = data.getExtras(); android.graphics.Bitmap bitmap = ((android.graphics.Bitmap) (extras.get(\"data\"))); camera.addToImageView(requestCode, resultCode, bitmap, getActivity(), pictureView); pod.setPicture(camera.encodeBitmap(bitmap)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4230/buggy-version/app.src.main.java.com.example.group3.santour.Activity.Pod_Fragment.java", "BodyUseAPI": ["android.content.Intent.getExtras()"], "Fixed commit": "e3f5d73835f69599582b99b4b5518a31b9f593b5", "Url": "https://api.github.com/repos/Legendthriller69/SanTour", "Date": "2017-12-01T10:21:26Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeUpdate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numOfRecordsUpdated != 0) { isUpdated = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4332/buggy-version/components.device-mgt.org.wso2.carbon.device.mgt.core.src.main.java.org.wso2.carbon.device.mgt.core.operation.mgt.dao.impl.GenericOperationDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "9eb2f5df86fba7fb3be8c4e5be0f3c6c482d905b", "Url": "https://api.github.com/repos/madhawap/carbon-device-mgt", "Date": "2016-06-04T06:03:22Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["content.getUrl().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (contentURL.contains(\"/content/col\")) { android.content.SharedPreferences sharedPref = getSharedPreferences(\"org.openstaxcollege.android\", org.openstaxcollege.android.activity.MODE_PRIVATE); java.lang.String url = sharedPref.getString(content.getIcon(), \"\"); if (!(url.equals(\"\"))) { try { content.setUrl(new java.net.URL(url)); } catch (java.net.MalformedURLException mue) { android.util.Log.e(\"WebViewActivity.onResume\", (\"Error: \" + (mue.toString()))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1177/buggy-version/app.src.main.java.org.openstaxcollege.android.activity.WebViewActivity.java", "BodyUseAPI": [], "Fixed commit": "61027ddbd8b508fb37af6f6f967055c3071ef79d", "Url": "https://api.github.com/repos/Connexions/OSCAndroid", "Date": "2014-11-20T19:48:49Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bitmap.getWidth()) >= (bitmap.getHeight())) { rect = new android.graphics.Rect(0, 0, bitmap.getHeight(), bitmap.getHeight()); canvas.drawCircle(((bitmap.getHeight()) / 2), ((bitmap.getHeight()) / 2), ((bitmap.getHeight()) / 2), paint); }else { rect = new android.graphics.Rect(0, 0, bitmap.getWidth(), bitmap.getWidth()); canvas.drawCircle(((bitmap.getWidth()) / 2), ((bitmap.getWidth()) / 2), ((bitmap.getWidth()) / 2), paint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3066/buggy-version/src.com.kau.jonathan.umdschedulesharer.SignInActivity.java", "BodyUseAPI": ["android.graphics.Bitmap.getWidth()", "android.graphics.Canvas.drawCircle(((bitmap.getHeight()) / 2),((bitmap.getHeight()) / 2),((bitmap.getHeight()) / 2),android.graphics.Paint)", "android.graphics.Bitmap.getWidth()", "android.graphics.Bitmap.getHeight()", "android.graphics.Bitmap.getHeight()", "android.graphics.Bitmap.getHeight()", "android.graphics.Bitmap.getWidth()", "android.graphics.Bitmap.getWidth()", "android.graphics.Canvas.drawCircle(((bitmap.getWidth()) / 2),((bitmap.getWidth()) / 2),((bitmap.getWidth()) / 2),android.graphics.Paint)", "android.graphics.Bitmap.getHeight()", "android.graphics.Bitmap.getHeight()", "android.graphics.Bitmap.getWidth()"], "Fixed commit": "5a555f50aaaef32bb1bac5cd67e4b59543383925", "Url": "https://api.github.com/repos/jonathankau/UMDScheduleSharer", "Date": "2014-02-11T05:21:50Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me.johnnywoof.Setting.debug) { org.bukkit.Bukkit.broadcastMessage((((\"Type: \" + (inv.getType())) + \"; Action: \") + (ia.toString().toLowerCase()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4208/buggy-version/NoHack.src.me.johnnywoof.check.interact.InventoryClick.java", "BodyUseAPI": [], "Fixed commit": "f3ed2bae802b728f9f77a2a0ab00ce7ab96e6666", "Url": "https://api.github.com/repos/johnnywoof/NoHack", "Date": "2014-06-06T15:12:25Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p.getGameMode()) == (org.bukkit.GameMode.CREATIVE)) { if ((inv.getType()) == (org.bukkit.event.inventory.InventoryType.CREATIVE)) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4208/buggy-version/NoHack.src.me.johnnywoof.check.interact.InventoryClick.java", "BodyUseAPI": [], "Fixed commit": "f3ed2bae802b728f9f77a2a0ab00ce7ab96e6666", "Url": "https://api.github.com/repos/johnnywoof/NoHack", "Date": "2014-06-06T15:12:25Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["from.getBlock().getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((m != (org.bukkit.Material.CHEST)) && (m != (org.bukkit.Material.TRAPPED_CHEST))) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4208/buggy-version/NoHack.src.me.johnnywoof.check.moving.NoFall.java", "BodyUseAPI": [], "Fixed commit": "f3ed2bae802b728f9f77a2a0ab00ce7ab96e6666", "Url": "https://api.github.com/repos/johnnywoof/NoHack", "Date": "2014-06-06T15:12:25Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (variable.equalsIgnoreCase(\"NULL\")) lastResult = null; else if (variable.startsWith(\"$\")) lastResult = getContext().getVariable(variable); else lastResult = variable;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4593/buggy-version/core.src.main.java.com.orientechnologies.orient.core.command.script.OCommandExecutorScript.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "getContext().getVariable(java.lang.String)"], "Fixed commit": "0b2d7a872d22da9468f2d4b863b3826e53f197ed", "Url": "https://api.github.com/repos/maggiolo00/orientdb", "Date": "2014-03-31T18:04:49Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.robolectric.SdkPicker.decodeSdk(int,int,int,int,java.lang.Integer)", "org.robolectric.annotation.Config.minSdk()", "org.robolectric.SdkPicker.decodeSdk(int,java.lang.Integer,int,int,java.lang.Integer)", "org.robolectric.annotation.Config.maxSdk()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rangeMin > rangeMax) && ((minSdk == (-1)) || (maxSdk == (-1)))) { return java.util.Collections.emptySet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8143/buggy-version/robolectric.src.main.java.org.robolectric.SdkPicker.java", "BodyUseAPI": [], "Fixed commit": "51f5586fec3e6963edbb708b127aa837d93047bf", "Url": "https://api.github.com/repos/robolectric/robolectric", "Date": "2017-01-04T23:10:18Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((order.getTenderRecord()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8785/buggy-version/src.main.java.com.roozen.register.dao.OrderDao.java", "BodyUseAPI": [], "Fixed commit": "f22f9a1e50dee3ac24cd0ee6e15eed52f2fa9e71", "Url": "https://api.github.com/repos/droozen/cash-register", "Date": "2015-11-03T13:35:36Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (roomName != null) { connectOptionsBuilder.roomName(roomName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2102/buggy-version/android.src.main.java.com.twiliorn.library.CustomTwilioVideoView.java", "BodyUseAPI": ["ConnectOptions.Builder.roomName(java.lang.String)"], "Fixed commit": "ae2cf37a06364ccbfd1690b570b5765ceccfe3f2", "Url": "https://api.github.com/repos/smiletime/react-native-twilio-video-webrtc", "Date": "2017-07-25T17:39:48Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wyvern.tools.PythonCompiler.wyvernRoot.get()) != null) { rootLoc = wyvern.tools.PythonCompiler.wyvernRoot.get(); }else { rootLoc = java.lang.System.getProperty(\"user.dir\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/483/buggy-version/tools.src.wyvern.tools.PythonCompiler.java", "BodyUseAPI": ["java.lang.ThreadLocal<java.lang.String>.get()"], "Fixed commit": "05705d2a011cfa898006f28dca7701c8ad4c4cd7", "Url": "https://api.github.com/repos/wyvernlang/wyvern", "Date": "2017-02-09T23:19:01Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wyvern.tools.Interpreter.wyvernRoot.get()) != null) { rootLoc = wyvern.tools.Interpreter.wyvernRoot.get(); }else { rootLoc = java.lang.System.getProperty(\"user.dir\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/483/buggy-version/tools.src.wyvern.tools.Interpreter.java", "BodyUseAPI": ["java.lang.ThreadLocal<java.lang.String>.get()"], "Fixed commit": "05705d2a011cfa898006f28dca7701c8ad4c4cd7", "Url": "https://api.github.com/repos/wyvernlang/wyvern", "Date": "2017-02-09T23:19:01Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.valueOf((org.apache.commons.lang3.StringUtils.isEmpty(map.get(\"id\")[0]) ? \"0\" : map.get(\"id\")[0]))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (id > 0) { dcf4 = DataCollectionForm4.find.byId(id); if (dcf4 == null) return badRequest(play.libs.Json.toJson(new models.response.ResponseMessage(400, \"Invalid parameters passed!\", models.response.ResponseMessageType.BAD_REQUEST))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/650/buggy-version/app.controllers.data.DataController.java", "BodyUseAPI": ["DataCollectionForm4.find.byId(java.lang.Long)"], "Fixed commit": "631f6d813b51ce6283fbcc01e82f39efb11f0bd3", "Url": "https://api.github.com/repos/stswork/e-cru", "Date": "2014-05-28T20:21:10Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.GregorianCalendar.get(int)", "java.util.GregorianCalendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (minDay >= maxDay) { minDay = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8992/buggy-version/finsight-backend.src.main.java.pl.surreal.finance.transaction.generator.TransactionData.java", "BodyUseAPI": [], "Fixed commit": "dc0841e4a7fa3e7ab7a4846ef4cda87a210be4f2", "Url": "https://api.github.com/repos/mikouaj/finsight", "Date": "2017-01-11T14:04:23Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((shouldConvertEmptyStrToNull) && (value.isEmpty())) { jsonMap.put(titleList.get(i), null); }else { jsonMap.put(titleList.get(i), value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2015/buggy-version/src.main.java.cn.com.deepdata.es_adapter.adapter.DelimitedString2MapAdapter.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)"], "Fixed commit": "6808fdcc426b79ce60a967cf51b9884ab29f8a09", "Url": "https://api.github.com/repos/bidiu/elasticsearch-adapter", "Date": "2016-06-08T02:22:38Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jbei.ice.storage.model.Entry.getFolders()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((entryFolders == null) || (entryFolders.isEmpty())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5981/buggy-version/src.main.java.org.jbei.ice.lib.entry.EntryAuthorization.java", "BodyUseAPI": [], "Fixed commit": "fdf4b773523bfa2d1d2abb093dce8ee36e6f779c", "Url": "https://api.github.com/repos/JBEI/ice", "Date": "2016-04-26T17:21:47Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["aggregations.get(0).getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (aggregation.has(\"value\")) { value = gson.fromJson(aggregation.getAsJsonPrimitive(\"value\"), this.fieldClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/732/buggy-version/thingif.src.main.java.com.kii.thingif.query.AggregatedResultAdapter.java", "BodyUseAPI": ["com.google.gson.JsonObject.getAsJsonPrimitive(java.lang.String)", "com.google.gson.Gson.fromJson(aggregation.getAsJsonPrimitive(\"value\"),java.lang.Class<T>)"], "Fixed commit": "e52ecaa4545f4d99b1e2beb3e78fe84398734c86", "Url": "https://api.github.com/repos/KiiPlatform/thing-if-AndroidSDK", "Date": "2017-03-09T08:09:05Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.JsonObject.getAsJsonArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((aggregations.size()) != 1) { throw new com.google.gson.JsonParseException(\"aggregations doesn't contain one object.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/732/buggy-version/thingif.src.main.java.com.kii.thingif.query.AggregatedResultAdapter.java", "BodyUseAPI": [], "Fixed commit": "e52ecaa4545f4d99b1e2beb3e78fe84398734c86", "Url": "https://api.github.com/repos/KiiPlatform/thing-if-AndroidSDK", "Date": "2017-03-09T08:09:05Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (powercrystals.core.util.UtilInventory.stacksEqual(player.inventory.mainInventory[_nsi], _ncw.getStack(), false)) player.inventory.mainInventory[_nsi] = _ncw.getStack(); else player.dropPlayerItem(((net.minecraft.inventory.Slot) (inventorySlots.get(0))).getStack());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3576/buggy-version/src.powercrystals.minefactoryreloaded.gui.container.ContainerNeedlegun.java", "BodyUseAPI": ["powercrystals.minefactoryreloaded.gui.NeedlegunContainerWrapper.getStack()", "net.minecraft.entity.player.EntityPlayer.dropPlayerItem(((net.minecraft.inventory.Slot) (inventorySlots.get(0))).getStack())"], "Fixed commit": "d504830c20b0ad8d93a62e9727352421f33b5466", "Url": "https://api.github.com/repos/skyboy/MineFactoryReloaded", "Date": "2013-10-12T21:02:02Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getServer()) != null) { serversToCheck = java.util.Arrays.asList(player.getServer().getInfo().getName(), IModule.GLOBAL_SERVER); }else { serversToCheck = java.util.Arrays.asList(IModule.GLOBAL_SERVER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8647/buggy-version/src.main.java.fr.Alphart.BAT.Modules.Ban.BanTask.java", "BodyUseAPI": ["java.util.Arrays.asList(player.getServer().getInfo().getName(),IModule.GLOBAL_SERVER)", "net.md_5.bungee.api.connection.ProxiedPlayer.getServer()", "player.getServer().getInfo().getName()", "player.getServer().getInfo()"], "Fixed commit": "d59b6f439923dd6b641cc6daef2bde81ad1f9dd5", "Url": "https://api.github.com/repos/alphartdev/BungeeAdminTools", "Date": "2014-11-05T15:32:35Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nameResolved) { return className.canonicalName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4127/buggy-version/src.main.java.com.squareup.javapoet.CodeWriter.java", "BodyUseAPI": [], "Fixed commit": "bb8e4fc33b271d6867ea1be5638649315fc18811", "Url": "https://api.github.com/repos/ananthasharma/javapoet", "Date": "2015-10-28T01:15:43Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loginUser) == null) { return LOGIN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1767/buggy-version/src.main.java.com.jinfonet.attendance.action.LoginAction.java", "BodyUseAPI": [], "Fixed commit": "b3d7f39c25f5e6e849553f21b8ab86e78ce9fc4d", "Url": "https://api.github.com/repos/jessehwong/Attendance", "Date": "2014-06-25T01:59:23Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<lt.emasina.resthub.TableFactory, java.util.Set<lt.emasina.resthub.server.table.TableId>>.get(lt.emasina.resthub.TableFactory)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (old != null) { for (lt.emasina.resthub.server.table.TableId oldid : old) { if ((oldid.equals(id)) && (tables.whitelist.containsKey(oldid))) { lt.emasina.resthub.server.table.ServerTable oldTable = tables.whitelist.get(oldid); lt.emasina.resthub.server.table.ServerTable st = toload.whitelist.get(oldid); if (st.isSame(oldTable)) { break; }else { qf.removeQueries(id); } } } }else { qf.removeQueries(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4243/buggy-version/server.src.main.java.lt.emasina.resthub.server.factory.MetadataFactory.java", "BodyUseAPI": [], "Fixed commit": "7390186687f5b57661ab2c6185d998d567af0d99", "Url": "https://api.github.com/repos/valdasraps/resthub", "Date": "2017-03-08T14:48:56Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((project != null) && (project.equals(\"\"))) { project = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2044/buggy-version/application.src.fr.insarouen.asi.notesync.tasks.Task.java", "BodyUseAPI": [], "Fixed commit": "67c8493baa98311028e1e959098b0f74ed072cf7", "Url": "https://api.github.com/repos/npmiller/notesync", "Date": "2014-03-24T20:42:30Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((project != null) && (project.equals(\"\"))) { project = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2044/buggy-version/application.src.fr.insarouen.asi.notesync.tasks.Task.java", "BodyUseAPI": [], "Fixed commit": "67c8493baa98311028e1e959098b0f74ed072cf7", "Url": "https://api.github.com/repos/npmiller/notesync", "Date": "2014-03-24T20:42:30Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cookies != null) { for (int i = 0; i < (cookies.length); i++) { javax.servlet.http.Cookie cookie = cookies[i]; if (cookie.getName().equals(key)) { cookieVal = cookie.getValue(); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/256/buggy-version/gde-webapp.src.main.java.com.nagarro.gde.util.CookieUtils.java", "BodyUseAPI": [], "Fixed commit": "8efd4887f7c3b6aaf800ab801bc6815faaa12ef6", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-01-23T04:21:34Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag) { tmp = tmp.substring(0, ((tmp.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2155/buggy-version/SmartEXPO_Proj_new.src.java.com.smartexpo.servlets.listItemServlet.java", "BodyUseAPI": [], "Fixed commit": "0d6abe4437763c4fafdf266a2e07b9767c6ba173", "Url": "https://api.github.com/repos/SmartEXPO/SmartEXPO", "Date": "2013-05-30T15:55:50Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((itemManager) != null) { itemManager.merge(derivedStats); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3290/buggy-version/src.model.entity.Entity.java", "BodyUseAPI": [], "Fixed commit": "ea64119683362558c6dbb86d032a128e5a265f56", "Url": "https://api.github.com/repos/Iteration-3/Code", "Date": "2015-04-20T16:21:21Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getEntityView()) != null) { this.getEntityView().turnOffHealthBar(); this.getEntityView().turnOffManaBar(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3290/buggy-version/src.model.entity.NPC.java", "BodyUseAPI": [], "Fixed commit": "ea64119683362558c6dbb86d032a128e5a265f56", "Url": "https://api.github.com/repos/Iteration-3/Code", "Date": "2015-04-20T16:21:21Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<edu.brown.cs32.scheddar.ScheddarTime>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((t.getDayOfWeek()) == (currTime.getDayOfWeek())) { t.setDay(currTime.getDay()); t.setMonth(currTime.getMonth()); t.setYear(currTime.getYear()); if (methods.doTimesConflict(t, currTime)) { currScore += g.getMemberRanking(p); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1859/buggy-version/src.edu.brown.cs32.scheddar.Scheddar.java", "BodyUseAPI": ["edu.brown.cs32.scheddar.ScheddarTime.getDay()", "edu.brown.cs32.scheddar.ScheddarTime.setDay(currTime.getDay())", "edu.brown.cs32.scheddar.UsefulMethods.doTimesConflict(edu.brown.cs32.scheddar.ScheddarTime,edu.brown.cs32.scheddar.ScheddarTime)", "edu.brown.cs32.scheddar.ScheddarTime.setYear(currTime.getYear())", "edu.brown.cs32.scheddar.ScheddarTime.getYear()", "edu.brown.cs32.scheddar.ScheddarTime.setMonth(currTime.getMonth())", "edu.brown.cs32.scheddar.ScheddarTime.getMonth()"], "Fixed commit": "b943e6809ba1f23782ab7e531a147a283ebb5f12", "Url": "https://api.github.com/repos/Destitude2112/scheddar", "Date": "2013-05-03T19:28:41Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.goodbaby.babymall.activity.NavigationActivity.getCartNumber(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newCartNumber < 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/706/buggy-version/src.com.goodbaby.babymall.activity.NavigationActivity.java", "BodyUseAPI": [], "Fixed commit": "d5fab904b10c6224e99d2a09921da526c9c2d299", "Url": "https://api.github.com/repos/GloriaGuo/BabyMall", "Date": "2013-06-25T13:23:32Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.webkit.CookieManager.getCookie(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == cookies) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/706/buggy-version/src.com.goodbaby.babymall.activity.NavigationActivity.java", "BodyUseAPI": [], "Fixed commit": "d5fab904b10c6224e99d2a09921da526c9c2d299", "Url": "https://api.github.com/repos/GloriaGuo/BabyMall", "Date": "2013-06-25T13:23:32Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m.type) == (Message.BROADCAST)) { messageType = ((manager.dht.messages.broadcast.BroadcastMessage) (m)).extractMessage().type; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5186/buggy-version/eclipse_projects.DHT.src.manager.Network.java", "BodyUseAPI": [], "Fixed commit": "0126516056ad5ad608ed6f03c90d0d3150bfbb35", "Url": "https://api.github.com/repos/miun/mediasense", "Date": "2012-04-05T18:45:21Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.openxc.gaugedriver.GaugeDriverActivity.mReceiveTimer) != null) { onTimerToggle(null); onTimerToggle(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1863/buggy-version/android.src.com.openxc.gaugedriver.GaugeDriverActivity.java", "BodyUseAPI": [], "Fixed commit": "31d4a5a9451299da08c97a3151f80921b1db904f", "Url": "https://api.github.com/repos/openxc/retro-gauge", "Date": "2013-01-23T16:54:39Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["database.EventPutter.format(database.Event)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (values == null) { java.lang.System.out.println(\"Failed to format values\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/552/buggy-version/backend.src.database.EventPutter.java", "BodyUseAPI": [], "Fixed commit": "ad76089e176d3c8261e8cb6be19403b37e9fbb7c", "Url": "https://api.github.com/repos/will-johnston/Schedule-It", "Date": "2017-10-31T15:04:33Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mContentHitRect.contains(((int) (ev.getX())), ((int) (ev.getY())))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/424/buggy-version/ActionsContentViewLib.src.shared.ui.actionscontentview.ActionsContentView.java", "BodyUseAPI": [], "Fixed commit": "5fff653ca9d394ce38eb2a894081ef840c1e816c", "Url": "https://api.github.com/repos/StevenRudenko/ActionsContentView", "Date": "2012-08-09T07:37:07Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getArguments()) == null) { this.setArguments(new android.os.Bundle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5944/buggy-version/app.src.main.java.com.example.uvdoha.translate.ResultFragment.java", "BodyUseAPI": [], "Fixed commit": "294f4e8fffd8edff94183b1e8b6ccf933d5511cc", "Url": "https://api.github.com/repos/DmitryDorofeev/android_first_kr", "Date": "2015-03-05T07:13:33Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arr.length) == 1) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7720/buggy-version/src.io.github.accessun.algorithm.BinaryMinSearch.java", "BodyUseAPI": [], "Fixed commit": "8f73d6042a2abbbcd5b5d1bd05923e00b7890917", "Url": "https://api.github.com/repos/accessun/Exercises", "Date": "2017-03-24T07:21:25Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (v.hasMetadata(\"iCU_P\")) { if (c.hasMetadata(\"iCU_H\")) { if (v.getWorld().getName().equalsIgnoreCase(c.getWorld().getName())) { if ((v.getLocation().distance(c.getLocation())) > 25) { v.teleport(c); me.firebreath15.icontrolu.TitleAPI.sendTitle(v, 20, 20, 60, \"\ufffd4TOO FAR AWAY\", \"\"); } }else { v.teleport(c); v.setGameMode(GameMode.SPECTATOR); me.firebreath15.icontrolu.TitleAPI.sendTitle(v, 20, 20, 60, \"\ufffd4SWITCHED WORLDS\", \"\"); } }else { this.cancel(); } }else { this.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2859/buggy-version/iControlU.src.me.firebreath15.icontrolu.CheckVictim.java", "BodyUseAPI": ["org.bukkit.entity.Player.setGameMode(GameMode.SPECTATOR)", "org.bukkit.entity.Player.teleport(org.bukkit.entity.Player)", "v.getWorld().getName()", "v.getWorld().getName().equalsIgnoreCase(c.getWorld().getName())", "org.bukkit.entity.Player.getWorld()", "v.getLocation().distance(c.getLocation())", "org.bukkit.entity.Player.getLocation()", "me.firebreath15.icontrolu.TitleAPI.sendTitle(org.bukkit.entity.Player,int,int,int,java.lang.String,java.lang.String)", "org.bukkit.entity.Player.teleport(org.bukkit.entity.Player)", "me.firebreath15.icontrolu.TitleAPI.sendTitle(org.bukkit.entity.Player,int,int,int,java.lang.String,java.lang.String)"], "Fixed commit": "092561bbe7d4d8a0d2880d1e3cd82e3cbbc4e51d", "Url": "https://api.github.com/repos/xFyreWolfx/iControlU", "Date": "2015-05-20T03:29:51Z"},
{"Line": "=>960", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTouchMode) == (com.comcast.freeflow.core.FreeFlowContainer.TOUCH_MODE_SCROLL)) { allowedScrollOffset = 0; }else { allowedScrollOffset = overflingDistance; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4005/buggy-version/FreeFlow.src.com.comcast.freeflow.core.FreeFlowContainer.java", "BodyUseAPI": [], "Fixed commit": "60c56fe0e9f644f979d84ebcdd190a042658257c", "Url": "https://api.github.com/repos/flipstudio/FreeFlow", "Date": "2014-04-23T04:02:17Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hex.getGroundType()) != (GroundType.WATER)) { p.addHexagon(hex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/534/buggy-version/core.src.com.fantasticfive.server.RemoteGame.java", "BodyUseAPI": ["com.fantasticfive.server.Player.addHexagon(com.fantasticfive.server.Hexagon)"], "Fixed commit": "b1588811f393533907bd27d8b2b6812fa423265a", "Url": "https://api.github.com/repos/JorinTielen/ProjectHex", "Date": "2017-12-11T14:03:28Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inWebView) { res++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7758/buggy-version/src.main.java.net.pieroxy.ua.detection.Browser.java", "BodyUseAPI": [], "Fixed commit": "d307600c17b93daae9f597a6089b83b4cef979d0", "Url": "https://api.github.com/repos/pieroxy/java-user-agent-detection", "Date": "2017-05-05T19:57:50Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(this.options.onlyCreateLog)) { this.backupProgressLabel.setText(ch.judos.backupManager.model.Text.get(\"synchronizing_files\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4519/buggy-version/src.ch.judos.backupManager.view.BackupProgressFrame.java", "BodyUseAPI": [], "Fixed commit": "9877596238cc7d0b8331e9f057feaf811207947f", "Url": "https://api.github.com/repos/judos/backupManager3", "Date": "2017-02-21T18:00:05Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((results.numberOfClasses) != null) { numClasses = results.numberOfClasses; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/814/buggy-version/biomixer.src.org.thechiselgroup.biomixer.client.graph.AutomaticOntologyExpander.java", "BodyUseAPI": [], "Fixed commit": "0d2b8220ce73e17831bb264d0e111fa7ced7fa63", "Url": "https://api.github.com/repos/thechiselgroup/biomixer", "Date": "2013-02-18T22:38:58Z"},
{"Line": "=>603", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (android.app.Activity.RESULT_OK)) { java.lang.String laiString = intent.getStringExtra(\"eu.marcofoi.android.PocketLAI.LAI\"); ((com.geoodk.collect.android.views.ODKView) (mCurrentView)).setBinaryData(laiString); saveAnswersForCurrentScreen(com.geoodk.collect.android.activities.FormEntryActivity.DO_NOT_EVALUATE_CONSTRAINTS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5123/buggy-version/app.src.main.java.com.geoodk.collect.android.activities.FormEntryActivity.java", "BodyUseAPI": [], "Fixed commit": "096a4ec9f563437239b2cd678ecc83d1e7eaf626", "Url": "https://api.github.com/repos/mcfoi/collect", "Date": "2015-06-01T16:36:11Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestParams.containsKey(\"withoutDueDate\")) && (java.lang.Boolean.valueOf(requestParams.get(\"withoutDueDate\")))) { request.setWithoutDueDate(java.lang.Boolean.TRUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6153/buggy-version/modules.activiti-rest.src.main.java.org.activiti.rest.service.api.runtime.task.TaskCollectionResource.java", "BodyUseAPI": [], "Fixed commit": "26cef7922aff83909736da14c01929322897136e", "Url": "https://api.github.com/repos/Activiti/Activiti", "Date": "2017-06-20T06:34:57Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageUpload && ((de.unipotsdam.elis.owncloud.repository.OwncloudCache.getError()) != null)) && ((de.unipotsdam.elis.owncloud.repository.OwncloudCache.getError().equals(\"enter-password\")) || (de.unipotsdam.elis.owncloud.repository.OwncloudCache.getError().equals(\"wrong-password\")))) throw new com.liferay.portal.security.auth.PrincipalException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1611/buggy-version/hooks.owncloud-hook.docroot.WEB-INF.src.de.unipotsdam.elis.owncloud.repository.OwncloudRepository.java", "BodyUseAPI": [], "Fixed commit": "f688b9de35a90e1d330c2f74a2f65c96703d286d", "Url": "https://api.github.com/repos/University-of-Potsdam-MM/liferay-plugins", "Date": "2016-07-05T13:57:27Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tc >= (totalLength)) tc = tc - (totalLength);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1222/buggy-version/src.org.e2k.CircularBitSet.java", "BodyUseAPI": [], "Fixed commit": "ad1e120ed20fa3fdf47f983039140f2cbb1e7a45", "Url": "https://api.github.com/repos/IanWraith/Rivet", "Date": "2012-08-20T12:01:51Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (value == null) { value = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2493/buggy-version/src.de.fhflensburg.pd.group007.helper.PropertyLoader.java", "BodyUseAPI": [], "Fixed commit": "82f141fa07f7238701c75902c0ed3dfbc118b32f", "Url": "https://api.github.com/repos/TPei/DjangoPlug", "Date": "2015-06-23T15:17:11Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cursor.isClosed()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2451/buggy-version/alfresco-mobile-android.src.main.java.org.alfresco.mobile.android.application.providers.search.HistorySearchInlineCursorAdapter.java", "BodyUseAPI": [], "Fixed commit": "6c433ab3039ac13c36640bb72a4c93281c06c3cc", "Url": "https://api.github.com/repos/Alfresco/alfresco-android-app", "Date": "2015-08-15T21:31:18Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cursor.isClosed()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2451/buggy-version/alfresco-mobile-android.src.main.java.org.alfresco.mobile.android.application.providers.search.HistorySearchInlineCursorAdapter.java", "BodyUseAPI": [], "Fixed commit": "6c433ab3039ac13c36640bb72a4c93281c06c3cc", "Url": "https://api.github.com/repos/Alfresco/alfresco-android-app", "Date": "2015-08-15T21:31:18Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (client.isRunning()) { client.sendToServer((message + '\\n')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/951/buggy-version/2_Echo-Server.Client.src.Client.java", "BodyUseAPI": ["Client.sendToServer(java.lang.String)"], "Fixed commit": "8b39e6963d262eed2d10b30e1a744a14cce0b1ab", "Url": "https://api.github.com/repos/cxan96/Rechnernetze", "Date": "2017-04-26T13:02:23Z"},
{"Line": "=>756", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amount < reqAmount) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/872/buggy-version/src.com.wasteofplastic.askyblock.Challenges.java", "BodyUseAPI": [], "Fixed commit": "ce337196c7736efb459ae8cefaee8d21890fa9b4", "Url": "https://api.github.com/repos/tastybento/askyblock", "Date": "2014-12-21T04:27:25Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config.getPersistentQueueMode()) == (PersistentQueueConfig.PersistentQueueMode.STICKY_EVENTS)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9062/buggy-version/queue.src.main.java.org.killbill.queue.DefaultQueueLifecycle.java", "BodyUseAPI": [], "Fixed commit": "c2fc3ab80ee79e70974cdbec19dfe1edd4d8d938", "Url": "https://api.github.com/repos/rhanneken/killbill-commons", "Date": "2015-08-18T00:31:09Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(detail.containsKey(name))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7972/buggy-version/src.dona.entity.FIB.java", "BodyUseAPI": [], "Fixed commit": "1a83aece308066a1cd99cd8be2d999695c86a5e1", "Url": "https://api.github.com/repos/Viscount/DONA-in-PeerSim", "Date": "2015-03-29T18:22:19Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currenttask) == null) { if ((_sql_user._user) != null) currenttask = new org.MagicZhang.Sql.Sql_task(_sql_user._user.current_taskid()); else currenttask = new org.MagicZhang.Sql.Sql_task(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2126/buggy-version/src.main.java.org.MagicZhang.Control.ServiceServer.java", "BodyUseAPI": [], "Fixed commit": "4345c93578b2569238edbc4ab0b86d679ffa7adc", "Url": "https://api.github.com/repos/zybing/CommunityServer", "Date": "2017-04-18T13:19:40Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dt.isBefore(minimumDate)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6996/buggy-version/src.main.java.com.mcnavish.topposts.scraper.RssScraper.java", "BodyUseAPI": [], "Fixed commit": "7668817b3a76e4ef6407a0a479d65ca2749bc801", "Url": "https://api.github.com/repos/dmcnavish/TopPosts-DigitallyRemastered", "Date": "2015-04-18T16:10:33Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sheetName.length()) > (org.datacleaner.extension.output.CreateExcelSpreadsheetAnalyzer.SHEET_NAME_MAX_LENGTH)) { throw new java.lang.IllegalStateException(((\"Sheet name must be maximum \" + (org.datacleaner.extension.output.CreateExcelSpreadsheetAnalyzer.SHEET_NAME_MAX_LENGTH)) + \" characters long\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7930/buggy-version/components.writers.src.main.java.org.datacleaner.extension.output.CreateExcelSpreadsheetAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "4dca5fe8dfdbca5193644d40558033a0075edb3f", "Url": "https://api.github.com/repos/datacleaner/DataCleaner", "Date": "2015-11-04T08:54:24Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sheet.length()) > (org.datacleaner.extension.output.CreateExcelSpreadsheetAnalyzer.SHEET_NAME_MAX_LENGTH)) { sheet = sheet.substring(0, org.datacleaner.extension.output.CreateExcelSpreadsheetAnalyzer.SHEET_NAME_MAX_LENGTH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7930/buggy-version/components.writers.src.main.java.org.datacleaner.extension.output.CreateExcelSpreadsheetAnalyzer.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "4dca5fe8dfdbca5193644d40558033a0075edb3f", "Url": "https://api.github.com/repos/datacleaner/DataCleaner", "Date": "2015-11-04T08:54:24Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (args.containsKey(\"rootActivity\")) { bencoding.alarmmanager.AlarmManagerProxy.rootActivityClassName = org.appcelerator.titanium.util.TiConvert.toString(args, \"rootActivity\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7134/buggy-version/src.bencoding.alarmmanager.AlarmManagerProxy.java", "BodyUseAPI": ["org.appcelerator.titanium.util.TiConvert.toString(org.appcelerator.kroll.KrollDict,java.lang.String)"], "Fixed commit": "a56b55bde179d733c6e1a86e3e5921011c7f8e39", "Url": "https://api.github.com/repos/hasan89/benCoding.AlarmManager", "Date": "2014-01-05T03:06:25Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mod == 1) { killWorker(dflClient, dflBuilder.getDataflowId()); }else if (mod == 2) { killLeaderMaster(dflClient, dflBuilder.getDataflowId()); }else { stopStartDataflow(shell, dflBuilder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/609/buggy-version/scribengin.core.src.main.java.com.neverwinterdp.scribengin.dataflow.tracking.TrackingWithSimulationLauncher.java", "BodyUseAPI": [], "Fixed commit": "0187d21b2b5a4b79c9f9792c90bf59611a600a8b", "Url": "https://api.github.com/repos/DemandCube/NeverwinterDP", "Date": "2016-01-18T06:22:10Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasNext())) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7463/buggy-version/src.com.company.BinaryTree.java", "BodyUseAPI": [], "Fixed commit": "bc45a85de8a2656d35b364f1468dd9d67a7ec32b", "Url": "https://api.github.com/repos/Dacus/TreeToList", "Date": "2015-07-24T07:59:52Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dir.charAt(((dir.length()) - 1))) != '/') { dir = dir + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6445/buggy-version/src.main.java.edu.kit.uneig.atisprint.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "1fbade75498a62aea14c85206e992fa8410b51a0", "Url": "https://api.github.com/repos/kevinkellner/AtisPrint", "Date": "2015-06-11T14:10:48Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSecondBallSpare()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/785/buggy-version/src.main.java.fr.noony.games.bowling.LastEditableTurnImpl.java", "BodyUseAPI": [], "Fixed commit": "cdf08ff165883a02c1a50d85e66a1f7631efc061", "Url": "https://api.github.com/repos/PtitNoony/bowling", "Date": "2017-04-20T02:21:33Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newAttachmentsSize < 0) { newAttachmentsSize = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8038/buggy-version/src.main.java.fr.ippon.tatami.service.AttachmentService.java", "BodyUseAPI": [], "Fixed commit": "3e1b9f79009105226099e5e0e17edf95c7dcb30f", "Url": "https://api.github.com/repos/ippontech/tatami", "Date": "2015-01-14T04:36:38Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ids.size()) < 2) query = sqlHelper.createFindByIdSql(clazz, ids.get(0)); else query = sqlHelper.createFindByIdsSql(clazz, ids);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2517/buggy-version/dborm.src.main.java.org.leeyaf.dborm.Dao.java", "BodyUseAPI": ["org.leeyaf.dborm.AbstractSqlHelper.createFindByIdSql(java.lang.Class<T>,ids.get(0))", "java.util.List<?>.get(int)", "org.leeyaf.dborm.AbstractSqlHelper.createFindByIdsSql(java.lang.Class<T>,java.util.List<?>)"], "Fixed commit": "a6ebd9af3b608452b2359d8c19c9c34e2dfb92e9", "Url": "https://api.github.com/repos/leeyaf/DB-ORM", "Date": "2016-11-07T06:26:38Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ids.size()) < 2) query = sqlHelper.createFindByIdSql(clazz, ids.get(0)); else query = sqlHelper.createFindByIdsSql(clazz, ids);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2517/buggy-version/dborm.src.main.java.org.leeyaf.dborm.Dao.java", "BodyUseAPI": ["org.leeyaf.dborm.AbstractSqlHelper.createFindByIdSql(java.lang.Class<T>,ids.get(0))", "java.util.List<?>.get(int)", "org.leeyaf.dborm.AbstractSqlHelper.createFindByIdsSql(java.lang.Class<T>,java.util.List<?>)"], "Fixed commit": "a6ebd9af3b608452b2359d8c19c9c34e2dfb92e9", "Url": "https://api.github.com/repos/leeyaf/DB-ORM", "Date": "2016-11-07T06:26:38Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((beanDiscoveryMode.equals(\"annotated\")) || (beanDiscoveryMode.equals(\"all\"))) { return true; }else if (beanDiscoveryMode.equals(\"none\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1378/buggy-version/main.appserver.web.gf-weld-connector.src.main.java.org.glassfish.weld.connector.WeldSniffer.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "c61dcd23786c73dcb845a6e273b9eb4883a527ba", "Url": "https://api.github.com/repos/ankathur/glassfish", "Date": "2017-05-26T08:56:55Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((id % 5) == 2) { mdCity.addCar(new view2.MdCar(new helper.Location(180, 400), \"car-5906e8.png\", (\"c\" + ID), true, id, this.initialSpeed)); }else if ((id % 5) == 3) { mdCity.addCar(new view2.MdCar(new helper.Location(180, 400), \"car-043d01.png\", (\"c\" + ID), true, id, this.initialSpeed)); }else if ((id % 5) == 4) { mdCity.addCar(new view2.MdCar(new helper.Location(180, 400), \"car-822d00.png\", (\"c\" + ID), true, id, this.initialSpeed)); }else { mdCity.addCar(new view2.MdCar(new helper.Location(180, 400), \"car-f97704.png\", (\"c\" + ID), true, id, this.initialSpeed)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5963/buggy-version/src.view2.VwCityJavaFxDemo.java", "BodyUseAPI": ["view2.MdCity.addCar(view2.MdCar)", "view2.MdCity.addCar(view2.MdCar)", "view2.MdCity.addCar(view2.MdCar)", "view2.MdCity.addCar(view2.MdCar)"], "Fixed commit": "ee355bcc6b9a733baf786defcb613979902ee84f", "Url": "https://api.github.com/repos/100001252/AJAssignment02", "Date": "2017-10-08T05:46:15Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.semanticsoft.vaaclipse.widgets.StackWidget) (stack.getWidget())).getTab(((com.vaadin.ui.Component) (placeholder == null ? part.getWidget() : placeholder.getWidget())))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (tab != null) updateTab(tab, part, attName, newValue);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8468/buggy-version/org.semanticsoft.vaaclipse.presentation.src.org.semanticsoft.vaaclipse.presentation.renderers.StackRenderer.java", "BodyUseAPI": ["org.semanticsoft.vaaclipse.presentation.renderers.StackRenderer.3.updateTab(com.vaadin.ui.TabSheet.Tab,org.eclipse.e4.ui.model.application.ui.basic.MPart,java.lang.String,java.lang.Object)"], "Fixed commit": "158fbce3d0a82e5fae0bf8676da39b2440eb01d9", "Url": "https://api.github.com/repos/zadeluca/vaaclipse", "Date": "2013-12-18T10:03:42Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDarkMode) com.james.status.utils.ImageUtils.setTint(icon, Color.BLACK); else com.james.status.utils.ImageUtils.setTint(icon, Color.WHITE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1393/buggy-version/app.src.main.java.com.james.status.views.StatusView.java", "BodyUseAPI": [], "Fixed commit": "d1e271cde27e2a357a7716db9a227cbad7f8b29f", "Url": "https://api.github.com/repos/TheAndroidMaster/Status", "Date": "2016-08-12T14:49:03Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((myzkDataMap != null) && (myzkDataMap.keySet().contains(input.getName()))) { zkDisconfData = myzkDataMap.get(input.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2389/buggy-version/disconf-web.src.main.java.com.baidu.disconf.web.service.config.service.impl.ConfigMgrImpl.java", "BodyUseAPI": ["com.baidu.disconf.web.service.config.bo.Config.getName()", "java.util.Map<java.lang.String, com.baidu.disconf.web.service.zookeeper.dto.ZkDisconfData>.get(input.getName())"], "Fixed commit": "e74196342b551c1622ea723c9917126890a84663", "Url": "https://api.github.com/repos/knightliao/disconf", "Date": "2014-11-24T07:26:17Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((habitEvent.getLocation()) != null) { mapFragment.getView().setVisibility(View.VISIBLE); mapFragment.getMapAsync(this); }else { mapFragment.getView().setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8096/buggy-version/app.src.main.java.com.example.baard.ViewHabitEventActivity.java", "BodyUseAPI": [], "Fixed commit": "ce93265161ace735449db743e50f799ae1a1a3f7", "Url": "https://api.github.com/repos/CMPUT301F17T02/BAARD", "Date": "2017-12-03T20:15:27Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input.size()) != 1) { throw new java.lang.RuntimeException(\"Expected input to have only a single field\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9026/buggy-version/src.java.datafu.pig.bags.UnorderedPairs.java", "BodyUseAPI": [], "Fixed commit": "a9985f11a77da18f4673fe75ad765f19fd78ff16", "Url": "https://api.github.com/repos/linkedin/datafu", "Date": "2011-10-05T23:58:28Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.pig.impl.logicalLayer.schema.Schema.getField(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inputFieldSchema.type) != (org.apache.pig.data.DataType.BAG)) { throw new java.lang.RuntimeException(\"Expected a BAG as input\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9026/buggy-version/src.java.datafu.pig.bags.UnorderedPairs.java", "BodyUseAPI": [], "Fixed commit": "a9985f11a77da18f4673fe75ad765f19fd78ff16", "Url": "https://api.github.com/repos/linkedin/datafu", "Date": "2011-10-05T23:58:28Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inputBagSchema.getField(0).type) != (org.apache.pig.data.DataType.TUPLE)) { throw new java.lang.RuntimeException(java.lang.String.format(\"Expected input bag to contain a TUPLE, but instead found %s\", org.apache.pig.data.DataType.findTypeName(inputBagSchema.getField(0).type))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9026/buggy-version/src.java.datafu.pig.bags.UnorderedPairs.java", "BodyUseAPI": ["org.apache.pig.data.DataType.findTypeName(inputBagSchema.getField(0).type)", "java.lang.String.format(java.lang.String,org.apache.pig.data.DataType.findTypeName(inputBagSchema.getField(0).type))", "org.apache.pig.impl.logicalLayer.schema.Schema.getField(int)"], "Fixed commit": "a9985f11a77da18f4673fe75ad765f19fd78ff16", "Url": "https://api.github.com/repos/linkedin/datafu", "Date": "2011-10-05T23:58:28Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getSiteNodeId()) == null) { org.infoglue.cms.applications.contenttool.actions.UpdateContentVersionAction.logger.info((((((\"this.contentId: \" + (this.contentId)) + \":\") + (this.getContentId())) + \":\") + (this.contentVersionVO))); org.infoglue.cms.entities.structure.SiteNodeVO metaInfoSiteNodeVO = org.infoglue.cms.controllers.kernel.impl.simple.SiteNodeController.getController().getSiteNodeVOWithMetaInfoContentId(this.contentId); this.setSiteNodeId(metaInfoSiteNodeVO.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1523/buggy-version/src.java.org.infoglue.cms.applications.contenttool.actions.UpdateContentVersionAction.java", "BodyUseAPI": [], "Fixed commit": "486cffa78dbb673635434ab992533cc75ad5ce7c", "Url": "https://api.github.com/repos/bogeblad/infoglue", "Date": "2011-08-10T21:07:44Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mLastHost.isEmpty()) { promptLogin(); }else { startLoggingIn(mLastHost, mLastUsername, saved_password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6818/buggy-version/app.src.main.java.xyz.ershweb.guessme.WelcomeActivity.java", "BodyUseAPI": ["xyz.ershweb.guessme.WelcomeActivity.startLoggingIn(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "7660de0df1d440e5f2dc00341ec20a10c2d090be", "Url": "https://api.github.com/repos/alex-ersh/GuessMe", "Date": "2017-03-12T22:28:10Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.harvard.i2b2.crc.ejb.QueryResultBean.getResultInstanceFromQueryInstanceId(edu.harvard.i2b2.crc.datavo.db.DataSourceLookup,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((responseType1.getQueryResultInstance()) != null) && (responseType1.getQueryResultInstance().get(0).getQueryStatusType().getStatusTypeId().equals(\"4\"))) { queryInstance.setBatchMode(\"COMPLETED\"); queryInstanceDao.update(queryInstance, false); }else if (((responseType1.getQueryResultInstance()) != null) && (responseType1.getQueryResultInstance().get(0).getQueryStatusType().getStatusTypeId().equals(\"5\"))) { queryInstance.setBatchMode(\"COMPLETED\"); queryInstanceDao.update(queryInstance, false); }else if (queryInstance.getBatchMode().equals(\"PROCESSING\")) { edu.harvard.i2b2.crc.datavo.setfinder.query.QueryStatusTypeType status = queryInstanceType.getQueryStatusType(); status.setStatusTypeId(\"7\"); status.setDescription(\"MEDIUM_QUEUE\"); status.setName(\"MEDIUM_QUEUE\"); queryInstanceType.setQueryStatusType(status); queryInstance.setBatchMode(\"MEDIUM_QUEUE\"); queryInstanceDao.update(queryInstance, false); responseType1.getQueryResultInstance().get(0).setQueryStatusType(status); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5214/buggy-version/edu.harvard.i2b2.crc.src.server.edu.harvard.i2b2.crc.ejb.QueryManagerBean.java", "BodyUseAPI": ["responseType1.getQueryResultInstance().get(0).getQueryStatusType().getStatusTypeId().equals(java.lang.String)", "responseType1.getQueryResultInstance().get(0).getQueryStatusType()", "edu.harvard.i2b2.crc.datavo.setfinder.query.ResultResponseType.getQueryResultInstance()", "responseType1.getQueryResultInstance().get(0).setQueryStatusType(edu.harvard.i2b2.crc.datavo.setfinder.query.QueryStatusTypeType)", "responseType1.getQueryResultInstance().get(0).getQueryStatusType().getStatusTypeId()", "edu.harvard.i2b2.crc.datavo.setfinder.query.ResultResponseType.getQueryResultInstance()", "responseType1.getQueryResultInstance().get(int)", "responseType1.getQueryResultInstance().get(int)", "edu.harvard.i2b2.crc.datavo.setfinder.query.ResultResponseType.getQueryResultInstance()"], "Fixed commit": "0f1b49e1ec49faa1b86d2877183b64eddfe50af6", "Url": "https://api.github.com/repos/i2b2/i2b2-core-server", "Date": "2016-12-07T16:51:57Z"},
{"Line": "=>1078", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((messageList) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9255/buggy-version/Amadeus.app.src.main.java.amadeuslms.amadeus.activity.ChatActivity.java", "BodyUseAPI": [], "Fixed commit": "aa0cc9597ff677a5280beeafe539e5d08cfc236d", "Url": "https://api.github.com/repos/amadeusproject/amadeus-droid", "Date": "2017-11-03T02:18:01Z"},
{"Line": "=>3688", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ejml.data.DenseMatrix64F.get(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.Double.isInfinite(value)) { java.lang.String sign = \"\"; if (value < 0) { sign = \"-\"; } writer.format(\"%24s\", (sign + \"Inf\")); }else { writer.format(java.util.Locale.ENGLISH, \"%1$ 24.16e\", _matrix.get(i, j)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3410/buggy-version/src.arma.Mat.java", "BodyUseAPI": [], "Fixed commit": "113dbe0bf34901f8ba2ffd8ff57f627d47e25402", "Url": "https://api.github.com/repos/SebastianNiemann/ArmadilloJava", "Date": "2013-10-26T09:13:51Z"},
{"Line": "=>3795", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (rowString[j].equals(\"Inf\")) { rowDouble[j] = java.lang.Double.POSITIVE_INFINITY; }else if (rowString[j].equals(\"-Inf\")) { rowDouble[j] = java.lang.Double.NEGATIVE_INFINITY; }else { rowDouble[j] = java.lang.Double.valueOf(rowString[j]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3410/buggy-version/src.arma.Mat.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "113dbe0bf34901f8ba2ffd8ff57f627d47e25402", "Url": "https://api.github.com/repos/SebastianNiemann/ArmadilloJava", "Date": "2013-10-26T09:13:51Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!parent) { (wip)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3469/buggy-version/src.main.java.rx.internal.operators.OperatorMerge.java", "BodyUseAPI": [], "Fixed commit": "061cdb685c3d3a73b90e1af81aed2f3ff4166630", "Url": "https://api.github.com/repos/davidmoten/RxJava", "Date": "2014-11-19T09:09:45Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.TreeMap<java.lang.String, upandgo.shared.entities.course.Course>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (course == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6417/buggy-version/src.main.java.upandgo.server.model.CourseModel.java", "BodyUseAPI": [], "Fixed commit": "bbbc0a81d2ea8e96ff676d9018589ff852f6e4f1", "Url": "https://api.github.com/repos/TechnionYP5777/UpAndGo", "Date": "2017-07-11T04:26:57Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jetty.http.MimeTypes.getMimeByExtension(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mimeType == null) { mimeType = \"application/octet-stream\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8382/buggy-version/src.main.java.com.opsbears.webcomponents.application.web.StaticController.java", "BodyUseAPI": [], "Fixed commit": "f481ffc98829b48d58d94a7f6dbfb3a86a398ac3", "Url": "https://api.github.com/repos/opsbears/webcomponents", "Date": "2017-03-08T15:07:47Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (m.find()) { authorName = m.group(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7481/buggy-version/SocialNetwork.src.main.java.org.baderlab.csapps.socialnetwork.model.academia.Scopus.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)"], "Fixed commit": "234c779cdc6e25c6d54c9a1c2d99f3f11a1500b1", "Url": "https://api.github.com/repos/BaderLab/SocialNetworkApp", "Date": "2015-09-03T13:54:51Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nameStartIndex == (seedu.taskitty.logic.parser.CommandParser.NOT_FOUND)) { nameStartIndex = seedu.taskitty.logic.parser.CommandParser.STRING_START; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/906/buggy-version/src.main.java.seedu.taskitty.logic.parser.CommandParser.java", "BodyUseAPI": [], "Fixed commit": "f3a5883da147bdf0bcf0debe4dd869cc8f1c1b30", "Url": "https://api.github.com/repos/CS2103AUG2016-W14-C4/main", "Date": "2016-10-21T15:06:08Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.body().getResults().size()) == 0) { mCommentContainer.setVisibility(View.GONE); }else { mCommentContainer.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6963/buggy-version/app.src.main.java.com.aldoapps.popularmovies.DetailFragment.java", "BodyUseAPI": [], "Fixed commit": "db275855b4e659510666b1b7a2cc01f45a973b7d", "Url": "https://api.github.com/repos/aldoKelvianto/Udacity-PopularMovies", "Date": "2016-03-18T04:56:21Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.body().getResults().size()) == 0) { mTrailerContainer.setVisibility(View.GONE); }else { mTrailerContainer.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6963/buggy-version/app.src.main.java.com.aldoapps.popularmovies.DetailFragment.java", "BodyUseAPI": [], "Fixed commit": "db275855b4e659510666b1b7a2cc01f45a973b7d", "Url": "https://api.github.com/repos/aldoKelvianto/Udacity-PopularMovies", "Date": "2016-03-18T04:56:21Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((x) < 0) || ((x) > 9)) || ((y) < 0)) || ((y) > 10)) java.lang.System.out.println(\"Invalid location. Try again.\"); else { Battleship.Ship entry = getBoardEntry(opponentBoard, arrayY, arrayX); if ((entry == (Ship.HIT)) || (entry == (Ship.EMPTY))) java.lang.System.out.println(\"Location (locally) is already a hit or miss. Try again.\"); else break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7587/buggy-version/src.Battleship.Player.java", "BodyUseAPI": [], "Fixed commit": "fe9adff9042b6e62b8dbdcbcb51ea3eee245f5ce", "Url": "https://api.github.com/repos/ver09934/Battleship_Test", "Date": "2017-11-09T17:48:20Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (width < 0) { return image; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/812/buggy-version/wikibrain-webapi.src.main.java.org.wikibrain.webapi.CompariFactReferenceMap.java", "BodyUseAPI": [], "Fixed commit": "ccc02e46b0dd1a520230038b76c70525ff91030a", "Url": "https://api.github.com/repos/Yuropa/wikibrain", "Date": "2016-04-19T03:26:56Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getMembers().isEmpty()) { return message; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4385/buggy-version/src.com.c45y.CutePVP.Team.java", "BodyUseAPI": [], "Fixed commit": "1b72b2ca4c4199a3855985f83066e3869646840e", "Url": "https://api.github.com/repos/totemo/CutePVP", "Date": "2015-06-04T23:04:57Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getObjectContext().getObject(pcgen.cdom.base.CDOMObject,ObjectKey.CHOOSE_INFO)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tc instanceof pcgen.cdom.base.CategorizedAbilitySelectionChooseInformation) { sb.append(((pcgen.cdom.base.CategorizedAbilitySelectionChooseInformation) (tc)).getCategory().getLSTformat(false)); }else { sb.append(\"FEAT\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9168/buggy-version/code.src.java.plugin.lsttokens.choose.AbilitySelectionToken.java", "BodyUseAPI": [], "Fixed commit": "b224c71ed9dfce84fccd0507c35dbaaaff10ca0e", "Url": "https://api.github.com/repos/skylarhiebert/pcgen", "Date": "2015-12-15T21:27:05Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((seekBar.getProgress()) == 0) { seekBar.setProgress(previousVolume); audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, previousVolume, 0); muteBtn.setImageResource(R.mipmap.mute); }else { audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, 0, 0); previousVolume = java.lang.Integer.parseInt(percentValue.getText().toString().trim()); seekBar.setProgress(0); muteBtn.setImageResource(R.mipmap.volume_off); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9024/buggy-version/RadioCaprise.app.src.main.java.icewindinc.com.radiocaprise.MainActivity.java", "BodyUseAPI": ["android.widget.SeekBar.setProgress(int)", "android.widget.SeekBar.setProgress(int)"], "Fixed commit": "63bc1398028468c76a13d616c5963c04f8506121", "Url": "https://api.github.com/repos/icewind666/android-radio-app", "Date": "2017-02-26T22:10:06Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getDoubleArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (latlng != null) place = new com.google.android.gms.maps.model.LatLng(latlng[0], latlng[1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3393/buggy-version/app.src.main.java.by.org.cgm.didyoufeelit.fragments.PlaceFragment.java", "BodyUseAPI": [], "Fixed commit": "0266e6774250c8f79dd22ec2a0d265918436299e", "Url": "https://api.github.com/repos/brazer/DidYouFeelIt", "Date": "2015-06-15T13:20:29Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != job) { jobName = job.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/668/buggy-version/app.org.tdl.vireo.error.impl.ErrorLogImpl.java", "BodyUseAPI": ["org.tdl.vireo.job.JobMetadata.getName()"], "Fixed commit": "51e9f3c8e76b8ef610528ab758cb07f00ae5e82a", "Url": "https://api.github.com/repos/TAMULib/Vireo", "Date": "2013-07-03T16:56:25Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isLoggedIn())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8926/buggy-version/genophenbrowser-client.src.main.java.com.gmi.nordborglab.browser.client.security.CurrentUser.java", "BodyUseAPI": [], "Fixed commit": "c3d4adca7fdaa9f86da2041d4c63138ae314572c", "Url": "https://api.github.com/repos/timeu/GWA-Portal", "Date": "2015-06-09T12:40:11Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (listenToUpdates) context.getContentResolver().registerContentObserver(uri, false, contentObserver);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2661/buggy-version/app.src.main.java.com.florianmski.tracktoid.rx.observables.CursorObservable.java", "BodyUseAPI": [], "Fixed commit": "86f7ea53895d9da1cde8c8a9463ad9c4cf06d5c1", "Url": "https://api.github.com/repos/florianmski/Traktoid", "Date": "2015-03-01T00:00:23Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key instanceof java.security.interfaces.RSAPublicKey) { return new org.apache.cxf.rs.security.jose.jwe.RSAKeyEncryptionAlgorithm(((java.security.interfaces.RSAPublicKey) (key)), algo); }else if (key instanceof java.security.interfaces.ECPublicKey) { return new org.apache.cxf.rs.security.jose.jwe.EcdhAesWrapKeyEncryptionAlgorithm(((java.security.interfaces.ECPublicKey) (key)), algo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8838/buggy-version/rt.rs.security.jose.jose-core.src.main.java.org.apache.cxf.rs.security.jose.jwe.JweUtils.java", "BodyUseAPI": [], "Fixed commit": "8ab6d218c0a8391d7450b30c3cc2f9c5ad796c41", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2015-10-14T14:36:24Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key instanceof java.security.interfaces.ECPrivateKey) { return new org.apache.cxf.rs.security.jose.jwe.EcdhAesWrapKeyDecryptionAlgorithm(((java.security.interfaces.ECPrivateKey) (key)), algo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8838/buggy-version/rt.rs.security.jose.jose-core.src.main.java.org.apache.cxf.rs.security.jose.jwe.JweUtils.java", "BodyUseAPI": [], "Fixed commit": "8ab6d218c0a8391d7450b30c3cc2f9c5ad796c41", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2015-10-14T14:36:24Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amount < 0) { amount = -amount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5294/buggy-version/src.banking.customer.model.BankAccount.java", "BodyUseAPI": [], "Fixed commit": "0cbcf4034e904ffa781f150c61dd7de4a8aae3bc", "Url": "https://api.github.com/repos/davidvollmar/Banking", "Date": "2012-05-24T21:12:17Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (limit > 0) { limit = -limit; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5294/buggy-version/src.banking.customer.model.BankAccount.java", "BodyUseAPI": [], "Fixed commit": "0cbcf4034e904ffa781f150c61dd7de4a8aae3bc", "Url": "https://api.github.com/repos/davidvollmar/Banking", "Date": "2012-05-24T21:12:17Z"},
{"Line": "=>1374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasPlusSign) { value = java.lang.Integer.parseInt(text.substring((position + 1), (position += length))); }else { value = java.lang.Integer.parseInt(text.substring(position, (position += length))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3793/buggy-version/src.main.java.org.joda.time.format.DateTimeFormatterBuilder.java", "BodyUseAPI": [], "Fixed commit": "d8fd76a7eefe5b1def9a16aeace652f7235143a6", "Url": "https://api.github.com/repos/hshankar/joda-time", "Date": "2013-11-13T12:18:08Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wanlonggroup.caiplus.app.CaiPlusApplication.instance().acccountServie().id()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(id)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5371/buggy-version/MoneyPlus.src.com.wanlonggroup.caiplus.bz.im.ChatHelper.java", "BodyUseAPI": [], "Fixed commit": "a40cbe25df9b04e4b1f906bba7bcf4de3cdedb42", "Url": "https://api.github.com/repos/sheely/money_android", "Date": "2014-09-01T13:47:14Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (eventSyncFrequency <= 0) { eventSyncFrequency = com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl.EVENT_SYNC_FREQUENCY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1551/buggy-version/hazelcast.src.main.java.com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "dc820393a57b6376b1cdb088be6342ecfe2374b0", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2015-12-18T14:20:38Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (importantNodes.contains(i)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2341/buggy-version/teavm-core.src.main.java.org.teavm.dependency.DataFlowGraphBuilder.java", "BodyUseAPI": [], "Fixed commit": "80814ef1670c074b87120c39943ed9e8c64ee36d", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2015-03-09T19:10:26Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.company.BoringBankingSystem.Account.mode) == true) { if (amount > 99999999) { return false; }else { com.company.BoringBankingSystem.Account.totalTransfer += amount; return true; } }else { if (amount > 100000) { return false; }else { com.company.BoringBankingSystem.Account.totalTransfer += amount; return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8345/buggy-version/src.com.company.BoringBankingSystem.java", "BodyUseAPI": [], "Fixed commit": "7f4500d6e207bdcb2329539eef774106fb6aa63d", "Url": "https://api.github.com/repos/katherinele436/BoringBankingSystem", "Date": "2017-10-20T00:43:21Z"},
{"Line": "=>2768", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sakaiproject.thread_local.api.ThreadLocalManager.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (msgs.remove(messageReference)) { msgs.add(messageReference); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3183/buggy-version/message.message-util.util.src.java.org.sakaiproject.message.util.BaseMessage.java", "BodyUseAPI": ["java.util.List.add(org.sakaiproject.message.util.MessageEdit)"], "Fixed commit": "20f5f7c329f723fb43d93cfe02acfc2a3b1d8990", "Url": "https://api.github.com/repos/hec-montreal/sakai", "Date": "2016-06-07T21:30:22Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getServiceRegistry(false).getService(org.jboss.as.clustering.infinispan.subsystem.CacheService.getServiceName(cacheContainerName, cacheName))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (controller != null) { org.infinispan.Cache<?, ?> cache = ((org.infinispan.Cache<?, ?>) (controller.getValue())); if (cache != null) { org.infinispan.topology.LocalTopologyManagerImpl localTopologyManager = ((org.infinispan.topology.LocalTopologyManagerImpl) (cache.getAdvancedCache().getComponentRegistry().getGlobalComponentRegistry().getComponent(org.infinispan.topology.LocalTopologyManager.class))); if (localTopologyManager != null) { try { if (operation.hasDefined(org.jboss.as.clustering.infinispan.subsystem.VALUE)) { org.jboss.dmr.ModelNode newValue = operation.get(org.jboss.as.clustering.infinispan.subsystem.VALUE); localTopologyManager.setRebalancingEnabled(newValue.asBoolean()); }else { context.getResult().set(new org.jboss.dmr.ModelNode().set(localTopologyManager.isRebalancingEnabled())); } } catch (java.lang.Exception e) { throw new org.jboss.as.controller.OperationFailedException(new org.jboss.dmr.ModelNode().set(org.jboss.as.clustering.infinispan.InfinispanMessages.MESSAGES.failedToInvokeOperation(e.getLocalizedMessage()))); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1571/buggy-version/server.integration.infinispan.src.main.java.org.jboss.as.clustering.infinispan.subsystem.RebalancingAttributeHandler.java", "BodyUseAPI": ["org.jboss.msc.service.ServiceController<?>.getValue()"], "Fixed commit": "ce21b6f203300fea1f5d6cbf9eaf1ef1b1905c9e", "Url": "https://api.github.com/repos/tristantarrant/infinispan", "Date": "2014-06-15T08:40:06Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.tikione.jacocoverage.plugin.util.NBUtils.getProjectJavaPackagesAsStr(org.netbeans.api.project.Project,java.util.Properties,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((packagesToTest.length()) > 1000) { packagesToTest = \"*\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5436/buggy-version/tikione-jacocoverage-plugin.src.fr.tikione.jacocoverage.plugin.action.ActionJacocoOnAntTaskJ2SE.java", "BodyUseAPI": [], "Fixed commit": "5109758234111c9c1df1bdd64c516c28b32c87d0", "Url": "https://api.github.com/repos/jonathanlermitage/tikione-jacocoverage", "Date": "2015-01-28T18:55:56Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getHitbox().intersects(h.getHitbox())) { org.amityregion5.qxrz.server.world.vector2d.Vector2D t = new org.amityregion5.qxrz.server.world.vector2d.Vector2D(v.angle()).multiply(((org.amityregion5.qxrz.server.Game.GAME_UNIT) * 2)); v = v.add(t); pos = pos.subtract(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1567/buggy-version/src.org.amityregion5.qxrz.server.world.entity.PlayerEntity.java", "BodyUseAPI": [], "Fixed commit": "b62f93718e1cf4e20f8c308e62e33e81fcbe8f8f", "Url": "https://api.github.com/repos/mkirsch42/QXRZ", "Date": "2015-05-22T20:06:20Z"},
{"Line": "=>1136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((api.getCurrentUser()) != null) { java.lang.Runnable r = new java.lang.Runnable() { public void run() { api.deleteSession(); api.useDev(edu.uml.cs.isense.datawalk_v2.DataWalk.useDev); } }; new java.lang.Thread(r).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/207/buggy-version/Android.DataWalk_v2.src.edu.uml.cs.isense.datawalk_v2.DataWalk.java", "BodyUseAPI": ["edu.uml.cs.isense.comm.API.deleteSession()", "edu.uml.cs.isense.comm.API.useDev(boolean)"], "Fixed commit": "528eb7d77635676e9a92cae3a31ef80f5faac4e9", "Url": "https://api.github.com/repos/bdonald25/iSENSE-Hardware", "Date": "2013-12-10T16:25:11Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((api.getCurrentUser()) != null) { java.lang.Runnable r = new java.lang.Runnable() { public void run() { api.deleteSession(); api.useDev(edu.uml.cs.isense.collector.splash.Welcome.useDev); } }; new java.lang.Thread(r).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/207/buggy-version/Android.Data_Collector.src.edu.uml.cs.isense.collector.splash.Welcome.java", "BodyUseAPI": ["edu.uml.cs.isense.comm.API.useDev(boolean)", "edu.uml.cs.isense.comm.API.deleteSession()"], "Fixed commit": "528eb7d77635676e9a92cae3a31ef80f5faac4e9", "Url": "https://api.github.com/repos/bdonald25/iSENSE-Hardware", "Date": "2013-12-10T16:25:11Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((file.length()) == 0) { map = new org.json.JSONObject(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6374/buggy-version/src.main.java.org.marinemc.settings.JSONConfig.java", "BodyUseAPI": [], "Fixed commit": "92489a3d0f5306d47bcd3039459b2ed470318256", "Url": "https://api.github.com/repos/MarineMC/MarineStandalone", "Date": "2015-01-17T14:41:11Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["node.getContext().clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((simulation.getWinningPlayerId()) == 0) || ((simulation.getWinningPlayerId()) == 1)) { return 1 - (simulation.getWinningPlayerId()); }else { return 0.5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5792/buggy-version/src.java.behaviors.standardMCTS.MCTSStandardNode.java", "BodyUseAPI": ["behaviors.simulation.SimulationContext.getWinningPlayerId()"], "Fixed commit": "bdeefa7ff257ccf95054dbe4e63af394a802abc3", "Url": "https://api.github.com/repos/dfreelan/MCTSHearthstone", "Date": "2016-06-27T02:52:20Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.indexOf(\" RETRO \")) == (-1)) { lastTags = data; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/524/buggy-version/src.tagtime.log.Log.java", "BodyUseAPI": [], "Fixed commit": "e383f715c801827c15cfb21c84141cdfc31f3cc9", "Url": "https://api.github.com/repos/player-03/TagTime", "Date": "2012-12-11T23:51:19Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastTags.indexOf(\" RETRO \")) != (-1)) { lastTags = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/524/buggy-version/src.tagtime.log.Log.java", "BodyUseAPI": [], "Fixed commit": "e383f715c801827c15cfb21c84141cdfc31f3cc9", "Url": "https://api.github.com/repos/player-03/TagTime", "Date": "2012-12-11T23:51:19Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (progressCallback != null) { progressCallback.updateProgress(50); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8232/buggy-version/catalog.spatial.geocoding.spatial-geocoding-extract.src.main.java.org.codice.ddf.spatial.geocoding.extract.GeoNamesFileExtractor.java", "BodyUseAPI": ["org.codice.ddf.spatial.geocoding.ProgressCallback.updateProgress(int)"], "Fixed commit": "45db4e1bc43a584efe73c18cb70ce2a6d6689454", "Url": "https://api.github.com/repos/bdeining/ddf", "Date": "2016-01-07T15:22:44Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mpatric.mp3agic.ID3v1.getTrack()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (number.contains(\"/\")) { number = number.split(\"/\")[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8876/buggy-version/src.main.java.com.musicbrainz.mp3.tagger.Tools.Song.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "4860ba0c56c8ddede5f94e794adfa4f09343091f", "Url": "https://api.github.com/repos/dessalines/musicbrainz-tagger", "Date": "2015-06-24T02:58:58Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mmSocket) == null) { cancel(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5212/buggy-version/oneSheeld.src.main.java.com.integreight.firmatabluetooth.BluetoothService.java", "BodyUseAPI": [], "Fixed commit": "ad0790acbf6002636c5ee052a1697eb3b8e01fdc", "Url": "https://api.github.com/repos/Integreight/1Sheeld-Android-App", "Date": "2015-11-22T13:59:22Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trLatest == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1841/buggy-version/src.main.java.org.snpeff.snpEffect.factory.SnpEffPredictorFactoryFeatures.java", "BodyUseAPI": [], "Fixed commit": "a1ea3ce5637faee87d825f56d782b9fb54dae66d", "Url": "https://api.github.com/repos/shmumer/SnpEff", "Date": "2017-09-04T16:24:05Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (data != null) { context.success(data.getStringExtra(\"path\")); android.widget.Toast.makeText(cordova.getActivity(), data.getStringExtra(\"path\").toString(), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5468/buggy-version/src.android.PluginMiniMp4.java", "BodyUseAPI": ["android.content.Intent.getStringExtra(java.lang.String)", "data.getStringExtra(\"path\").toString()", "android.widget.Toast.makeText(cordova.getActivity(),data.getStringExtra(\"path\").toString(),Toast.LENGTH_SHORT)", "org.apache.cordova.CallbackContext.success(data.getStringExtra(\"path\"))", "android.widget.Toast.makeText(cordova.getActivity(), data.getStringExtra(\"path\").toString(), Toast.LENGTH_SHORT).show()", "android.content.Intent.getStringExtra(java.lang.String)"], "Fixed commit": "27d735ad271101da586dac67366f6374fc621234", "Url": "https://api.github.com/repos/coderLius/cordova-plugin-minimp4", "Date": "2017-07-15T12:27:05Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(packageName.equals(oldPackageName))) { temp2.add(appBean); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2234/buggy-version/app.src.main.java.com.tomorrow_p.AutostartApps.java", "BodyUseAPI": [], "Fixed commit": "c5dbe1d4ac96a54d99290ac00b3ebcdd3b02c348", "Url": "https://api.github.com/repos/ansen360/CodeRepository", "Date": "2016-11-23T11:40:39Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(packageName.equals(oldPackageName))) { temp1.add(appBean); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2234/buggy-version/app.src.main.java.com.tomorrow_p.AutostartApps.java", "BodyUseAPI": [], "Fixed commit": "c5dbe1d4ac96a54d99290ac00b3ebcdd3b02c348", "Url": "https://api.github.com/repos/ansen360/CodeRepository", "Date": "2016-11-23T11:40:39Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.keycloak.storage.ldap.idm.model.LDAPObject.getAttributeAsString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rdnAttrVal == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3616/buggy-version/federation.ldap.src.main.java.org.keycloak.storage.ldap.idm.store.ldap.LDAPIdentityStore.java", "BodyUseAPI": [], "Fixed commit": "27f9ec9381e0ed2d2e8e67a49f963a33da44f3b8", "Url": "https://api.github.com/repos/frelibert/keycloak", "Date": "2017-02-02T21:21:18Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.ihuxu.chatxserver.util.server.ClientThreadManager.addClientThread(clientThread.getClientKey(), clientThread)) { clientThread.writeLoginMessagePackage(MessagePackage.TYPE_LOGIN_SUC_MSG); clientThread.start(); }else { clientThread.writeLoginMessagePackage(MessagePackage.TYPE_LOGIN_FAI_MSG); clientThread.close(); clientThread = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/678/buggy-version/src.com.ihuxu.chatxserver.util.server.Server.java", "BodyUseAPI": ["com.ihuxu.chatxserver.util.server.ClientThread.writeLoginMessagePackage(MessagePackage.TYPE_LOGIN_SUC_MSG)", "com.ihuxu.chatxserver.util.server.ClientThread.close()", "com.ihuxu.chatxserver.util.server.ClientThread.writeLoginMessagePackage(MessagePackage.TYPE_LOGIN_FAI_MSG)", "com.ihuxu.chatxserver.util.server.ClientThread.start()"], "Fixed commit": "ebacc3f2054cb7b34b9bf7e6667a804ea770edf9", "Url": "https://api.github.com/repos/GenialX/ChatXServer", "Date": "2016-07-07T09:32:54Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((theOldLayout) != null) theTop += ((theOldLayout.getAscent()) + (theOldLayout.getDescent())) + (theOldLayout.getLeading());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5378/buggy-version/projects.MUIS.src.main.java.org.muis.core.model.AbstractMuisDocumentModel.java", "BodyUseAPI": [], "Fixed commit": "e45ea775d3c81b300f510d037068fd3a6d44cb1e", "Url": "https://api.github.com/repos/Updownquark/MUIS", "Date": "2014-03-14T15:56:23Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"default\".equals(attributes.sound)) { defaults = defaults | (android.app.Notification.DEFAULT_SOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5053/buggy-version/android.src.main.java.io.neson.react-native.notification.Notification.java", "BodyUseAPI": [], "Fixed commit": "74b0da8d5827068db41f8535a022c008b06a6f61", "Url": "https://api.github.com/repos/neson/react-native-system-notification", "Date": "2016-01-19T17:04:09Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"default\".equals(attributes.lights)) { defaults = defaults | (android.app.Notification.DEFAULT_LIGHTS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5053/buggy-version/android.src.main.java.io.neson.react-native.notification.Notification.java", "BodyUseAPI": [], "Fixed commit": "74b0da8d5827068db41f8535a022c008b06a6f61", "Url": "https://api.github.com/repos/neson/react-native-system-notification", "Date": "2016-01-19T17:04:09Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((m_maxRetry) > 0) && ((m_numRetry) >= (m_maxRetry))) { org.eclipse.kura.linux.clock.AbstractNtpClockSyncProvider.s_logger.error(\"Failed to synchronize System Clock. Exhausted retry attempts, giving up\"); m_isSynced = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/55/buggy-version/kura.org.eclipse.kura.linux.clock.src.main.java.org.eclipse.kura.linux.clock.AbstractNtpClockSyncProvider.java", "BodyUseAPI": [], "Fixed commit": "b56aabe4e5152e0e6c04cc3f9a21dbb19b7f5295", "Url": "https://api.github.com/repos/eclipse/kura", "Date": "2015-10-06T07:15:15Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (is != null) { is.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8061/buggy-version/src.main.java.com.gitblit.LogoServlet.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "fbe265fa787e4be9cb63c6bae2ef30b9400d9afc", "Url": "https://api.github.com/repos/svogt/gitblit", "Date": "2013-07-18T14:11:04Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getSystemService(Context.POWER_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(m.isScreenOn())) { com.bam.darkhouseextreme.app.utilities.SaveUtility.saveProgress(x_cord, y_cord, score); android.support.v4.app.FragmentTransaction transaction = StartScreenActivity.activity.getSupportFragmentManager().beginTransaction(); transaction.replace(R.id.startscreenlayout, StartScreenActivity.activity.getSupportFragmentManager().findFragmentByTag(\"startScreen\")); transaction.commitAllowingStateLoss(); getActivity().finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/584/buggy-version/app.src.main.java.com.bam.darkhouseextreme.app.fragments.RoomFragment.java", "BodyUseAPI": [], "Fixed commit": "bc399df12e402b2d68e6eb5ac0de525410326ad4", "Url": "https://api.github.com/repos/ChobiJava/DarkHouseExtreme", "Date": "2015-05-27T09:21:15Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ignoredDoms.contains(domName)) sb.append((\" \" + temp)); else { if (domNdxMap.containsKey(domName)) sb.append((((((\" \" + (tags.get(0))) + l) + \" = \") + (tags.get(0))) + offsetStr)); else sb.append(((((\" \" + l) + \" = \") + (tags.get(0))) + offsetStr)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2123/buggy-version/src.petablox.project.analyses.DlogAnalysis.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)"], "Fixed commit": "e569addb10730b76ea7edf84feae8138f89157de", "Url": "https://api.github.com/repos/petablox-project/petablox", "Date": "2016-05-04T16:08:19Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)", "petablox.logicblox.LogicBloxUtils.getDomNdxMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (domNdxMap.containsKey(domName)) sb.append((((((tags.get(0)) + l) + \" = \") + (tags.get(0))) + offsetStr)); else sb.append((((l + \" = \") + (tags.get(0))) + offsetStr));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2123/buggy-version/src.petablox.project.analyses.DlogAnalysis.java", "BodyUseAPI": [], "Fixed commit": "e569addb10730b76ea7edf84feae8138f89157de", "Url": "https://api.github.com/repos/petablox-project/petablox", "Date": "2016-05-04T16:08:19Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ignoredDoms.contains(domName)) sb.append(((l + \" = \") + offset)); else { if (domNdxMap.containsKey(domName)) sb.append(((((tags.get(0)) + l) + \" = \") + offset)); else sb.append(((l + \" = \") + offset)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2123/buggy-version/src.petablox.project.analyses.DlogAnalysis.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)"], "Fixed commit": "e569addb10730b76ea7edf84feae8138f89157de", "Url": "https://api.github.com/repos/petablox-project/petablox", "Date": "2016-05-04T16:08:19Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ftwinston.KillerMinecraft.Helper.getPlayer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.ftwinston.KillerMinecraft.Helper.isSpectator(game, player)) com.ftwinston.KillerMinecraft.Helper.makeSpectator(game, player);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1396/buggy-version/src.com.ftwinston.KillerMinecraft.EventManager.java", "BodyUseAPI": ["com.ftwinston.KillerMinecraft.Helper.makeSpectator(com.ftwinston.KillerMinecraft.Game,org.bukkit.entity.Player)"], "Fixed commit": "8ce4980a961b775e0093ed053b402b1942341b77", "Url": "https://api.github.com/repos/KillerMinecraft/KillerMinecraft", "Date": "2015-10-18T22:20:50Z"},
{"Line": "=>1786", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.greenvulcano.configuration.XMLConfig.getDocument(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (doc != null) { try { synchronized(doc) { return ((org.w3c.dom.Node) (it.greenvulcano.configuration.XMLConfig.xpathAPI.selectSingleNode(doc, new it.greenvulcano.util.xpath.search.XPath(xpath)))); } } catch (java.lang.Throwable thr) { thr.printStackTrace(); throw new it.greenvulcano.configuration.XMLConfigException(((((\"XML XMLConfig error (File:\" + file) + \", Node:-, XPath:\") + xpath) + \")\"), thr); } }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8663/buggy-version/gvengine.gvbase.src.main.java.it.greenvulcano.configuration.XMLConfig.java", "BodyUseAPI": ["it.greenvulcano.util.xpath.search.XPathAPI.selectSingleNode(org.w3c.dom.Document,it.greenvulcano.util.xpath.search.XPath)"], "Fixed commit": "be9146068f81d17b1b6260322033d8076b62a01d", "Url": "https://api.github.com/repos/green-vulcano/gv-engine", "Date": "2016-06-14T14:02:54Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.greenvulcano.configuration.XMLConfig.getNode(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (swNode != null) { statisticsWriter = ((it.greenvulcano.gvesb.statistics.IStatisticsWriter) (java.lang.Class.forName(it.greenvulcano.configuration.XMLConfig.get(swNode, \"@class\")).newInstance())); statisticsWriter.init(swNode); it.greenvulcano.gvesb.statistics.StatisticsDataManager.initExtDataWrappers(); }else { statisticsWriter = new it.greenvulcano.gvesb.statistics.plugin.DUMMYStatisticsWriter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8663/buggy-version/gvengine.gvstatistics.src.main.java.it.greenvulcano.gvesb.statistics.StatisticsDataManager.java", "BodyUseAPI": ["it.greenvulcano.configuration.XMLConfig.get(org.w3c.dom.Node,java.lang.String)", "java.lang.Class.forName(it.greenvulcano.configuration.XMLConfig.get(swNode, \"@class\"))", "it.greenvulcano.gvesb.statistics.IStatisticsWriter.init(org.w3c.dom.Node)", "java.lang.Class<?>.newInstance()"], "Fixed commit": "be9146068f81d17b1b6260322033d8076b62a01d", "Url": "https://api.github.com/repos/green-vulcano/gv-engine", "Date": "2016-06-14T14:02:54Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.aumgn.bukkitutils.command.args.CommandArgs.getEnchantment(int)", "fr.aumgn.bukkitutils.command.args.CommandArgs.getInteger(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (level > (enchantment.getMaxLevel())) { player.sendMessage(((((org.bukkit.ChatColor.GREEN) + \"Le niveau d'enchantement doit \u00eatre inf\u00e9rieure ou \u00e9gal \u00e0 \") + (org.bukkit.ChatColor.RED)) + (enchantment.getMaxLevel()))); }else { player.getItemInHand().addEnchantment(enchantment, level); player.sendMessage(((((((((org.bukkit.ChatColor.GREEN) + \"Vous avez ajout\u00e9 \") + (org.bukkit.ChatColor.GOLD)) + (enchantment.getName())) + (org.bukkit.ChatColor.GOLD)) + \" : \") + (org.bukkit.ChatColor.GREEN)) + (player.getItemInHand().getEnchantmentLevel(enchantment)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4849/buggy-version/src.main.java.fr.noogotte.useful_commands.command.PlayerCommands.java", "BodyUseAPI": ["org.bukkit.enchantments.Enchantment.getName()", "player.getItemInHand().addEnchantment(org.bukkit.enchantments.Enchantment,java.lang.Integer)", "org.bukkit.enchantments.Enchantment.getMaxLevel()", "org.bukkit.entity.Player.sendMessage(((((((((org.bukkit.ChatColor.GREEN) + \"Vous avez ajout\u00e9 \") + (org.bukkit.ChatColor.GOLD)) + (enchantment.getName())) + (org.bukkit.ChatColor.GOLD)) + \" : \") + (org.bukkit.ChatColor.GREEN)) + (player.getItemInHand().getEnchantmentLevel(enchantment))))", "player.getItemInHand().getEnchantmentLevel(org.bukkit.enchantments.Enchantment)", "org.bukkit.entity.Player.sendMessage(((((org.bukkit.ChatColor.GREEN) + \"Le niveau d'enchantement doit \u00eatre inf\u00e9rieure ou \u00e9gal \u00e0 \") + (org.bukkit.ChatColor.RED)) + (enchantment.getMaxLevel())))"], "Fixed commit": "3b653f7a7ceb9afcd5fa8a6941adb4f50069bedc", "Url": "https://api.github.com/repos/noogotte/UsefulCommands", "Date": "2012-06-02T10:12:21Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ValkyrienWarfareMod.physicsManager.isEntityFixed(p_188388_1_))) def.renderEntityStatic(p_188388_1_, p_188388_2_, p_188388_3_);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5353/buggy-version/src.main.java.ValkyrienWarfareBase.Client.RenderManagerOverride.java", "BodyUseAPI": ["net.minecraft.client.renderer.entity.RenderManager.renderEntityStatic(net.minecraft.entity.Entity,float,boolean)"], "Fixed commit": "bda86943e3c8a11b8eab8eb958d7971538a2d029", "Url": "https://api.github.com/repos/BigBastardPhony/Valkyrien-Warfare-Revamped", "Date": "2017-02-14T18:38:48Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((de.ovgu.featureide.fm.core.base.IFeatureModel) (viewer.getInput())) != (((de.ovgu.featureide.fm.ui.editors.FeatureModelEditor) (active_editor)).getFeatureModel())) viewer.setInput(((de.ovgu.featureide.fm.ui.editors.FeatureModelEditor) (active_editor)).getFeatureModel());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8335/buggy-version/plugins.de.ovgu.featureide.ui.src.de.ovgu.featureide.ui.views.collaboration.outline.Outline.java", "BodyUseAPI": ["org.eclipse.ui.IEditorPart.getFeatureModel()", "org.eclipse.jface.viewers.TreeViewer.setInput(((de.ovgu.featureide.fm.ui.editors.FeatureModelEditor) (active_editor)).getFeatureModel())"], "Fixed commit": "3b3a7c83c5483857f7dedfc31f5e9732542be887", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2016-10-05T08:44:11Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.ContentResolver.insert(android.net.Uri,android.content.ContentValues)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (result != null) { return java.lang.Integer.parseInt(result.getLastPathSegment()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5399/buggy-version/app.src.main.java.com.sungjae.app.showmethemoney.service.OperationService.java", "BodyUseAPI": ["android.net.Uri.getLastPathSegment()", "java.lang.Integer.parseInt(result.getLastPathSegment())"], "Fixed commit": "91b926a78c935769499e2df60fbf44667c507bb6", "Url": "https://api.github.com/repos/jaebae/ShowMeTheMoney", "Date": "2017-07-24T05:30:54Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.System.getProperty(eu.juniper.sa.deployment.monitor.MonitoringDbServer.KEEP_RUNNING_SYSTEM_PROPERTY_NAME)) != null) { java.lang.System.out.println(\"*** (kill the application to close the database, shutdown the server, and quit)\"); final java.lang.Long sleepTimeMilis = java.lang.Long.getLong(eu.juniper.sa.deployment.monitor.MonitoringDbServer.KEEP_RUNNING_SYSTEM_PROPERTY_NAME, java.lang.Long.MAX_VALUE); while (true) { try { java.lang.Thread.sleep(sleepTimeMilis); java.lang.System.out.println(\"*** still waiting...\"); } catch (java.lang.InterruptedException ex) { } } }else { java.lang.System.out.println(\"*** (press Enter to close the database, shutdown the server, and quit)\"); java.lang.System.in.read(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7880/buggy-version/sched-advisor-deployment-monitor.src.main.java.eu.juniper.sa.deployment.monitor.MonitoringDbServer.java", "BodyUseAPI": ["java.lang.Long.getLong(java.lang.String,long)"], "Fixed commit": "6d9c3ca8882e041df8f08aff90371ab53e493f48", "Url": "https://api.github.com/repos/juniper-project/sched-advisor", "Date": "2015-12-01T21:46:24Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(searching)) { com.as.anagramsolver.SettingsPage.loadSettings(getApplicationContext()); new com.as.anagramsolver.StartPage.DBLoaderTask().execute(); setupSpinner(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2662/buggy-version/src.com.as.anagramsolver.StartPage.java", "BodyUseAPI": [], "Fixed commit": "17b1a1840b351e84b92545bfc256fd8a02d70ec9", "Url": "https://api.github.com/repos/uberspot/AnagramSolver", "Date": "2014-02-25T11:23:55Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(node.getDeclaringClass().equals(classNode))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7019/buggy-version/src.main.org.codehaus.groovy.classgen.Verifier.java", "BodyUseAPI": [], "Fixed commit": "e8744ca782e2d238a7c3b1b6e3c6ee7f957558b6", "Url": "https://api.github.com/repos/groovy/groovy-core", "Date": "2013-01-18T12:12:38Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isConnected())) { connectImpl(); setConnected(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6621/buggy-version/src.com.invertor.modbus.ModbusMaster.java", "BodyUseAPI": [], "Fixed commit": "97c4ac85ab1b33c00d8ba436fac67f8362562900", "Url": "https://api.github.com/repos/kochedykov/jlibmodbus", "Date": "2017-04-25T18:31:00Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.cached) != cached) { this.cached = cached; invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1449/buggy-version/src.be.nikiroo.fanfix.reader.LocalReaderBook.java", "BodyUseAPI": [], "Fixed commit": "f977d05b0516f4dcc1978d113ee8e945ab3fb2f9", "Url": "https://api.github.com/repos/nikiroo/fanfix", "Date": "2017-02-23T13:15:26Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (filePath.contains(\"classpath\")) { fileReader = new java.io.FileReader(getClass().getResource(filePath.substring(\"classpath:\".length())).getPath()); }else { fileReader = new java.io.FileReader(filePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3788/buggy-version/src.main.java.com.ninjadevops.tower.storage.ConfigDataStoreFile.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.Class<? extends com.ninjadevops.tower.storage.ConfigDataStoreFile>.getResource(java.lang.String)", "java.net.URL.getPath()"], "Fixed commit": "a496666984bd890272fba1053d08ceb19aeb52d9", "Url": "https://api.github.com/repos/guoliang-dev/devops-tower", "Date": "2017-03-10T15:46:35Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mProgressDialog.isShowing()) { mProgressDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8183/buggy-version/app.src.main.java.de.dbaelz.na42.fragment.MenuFragment.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "dbd8fd8bcce9774365d8773e77e750c32b0496a3", "Url": "https://api.github.com/repos/dbaelz/NotAlways42", "Date": "2014-10-23T22:34:07Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGame) == null) { try { java.io.File hsfile = new java.io.File(Tetris.hsFilePath); if (!(hsfile.exists())) HScore.generateHighScoreFile(hsfile, Tetris.mHSLIST_ENTRIES); HScore hslist = new HScore(hsfile, \"\", new ExponentialScore(0, 0, 0)); mGui.setUpHighScorePanel(hslist); } catch (java.io.IOException eio) { java.lang.System.out.println(\"Game does not exist\"); java.lang.System.out.println(\"Problem creating high score list.\"); java.lang.System.out.println(eio.getMessage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4802/buggy-version/Tetris.java", "BodyUseAPI": [], "Fixed commit": "5cd87400d9ad5cdc1569c069630083a001505ac7", "Url": "https://api.github.com/repos/MaGa8/KEY1P1.2", "Date": "2015-12-04T16:36:27Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((TerminatorPlayer.firstShipHit.y) > (TerminatorPlayer.knownPositions.get(0).y)) dir[1] = -1; else dir[1] = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5416/buggy-version/terminatorplayer.ShootingStrategy.java", "BodyUseAPI": [], "Fixed commit": "f9953a4f3d8462263a8b6e51441f121f3653713f", "Url": "https://api.github.com/repos/lanatra/Battleship", "Date": "2014-12-18T18:49:53Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((TerminatorPlayer.firstShipHit.x) > (TerminatorPlayer.knownPositions.get(0).x)) dir[0] = -1; else dir[0] = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5416/buggy-version/terminatorplayer.ShootingStrategy.java", "BodyUseAPI": [], "Fixed commit": "f9953a4f3d8462263a8b6e51441f121f3653713f", "Url": "https://api.github.com/repos/lanatra/Battleship", "Date": "2014-12-18T18:49:53Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (state == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7646/buggy-version/src.client.Client.java", "BodyUseAPI": [], "Fixed commit": "6150a24ea7a539b93c777ef5c1fc22b51b32d505", "Url": "https://api.github.com/repos/cesarcolle/Network", "Date": "2016-05-17T11:45:37Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["state.getBlock().getLocalizedName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (name == null) builder.append(\"NO ITEM\"); else builder.append(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6339/buggy-version/src.java.de.longor.talecraft.client.InfoBar.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "89e3844120d81c040d1af15128789af42c13cedc", "Url": "https://api.github.com/repos/tiffit/TaleCraft", "Date": "2016-09-13T18:33:14Z"},
{"Line": "=>2222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (generateLogo) { generateLogo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7802/buggy-version/appserver.extras.payara-micro.payara-micro-core.src.main.java.fish.payara.micro.impl.PayaraMicroImpl.java", "BodyUseAPI": [], "Fixed commit": "179afce97ad1ad3d732b428446aecc1f555f175b", "Url": "https://api.github.com/repos/MattGill98/Payara", "Date": "2017-01-20T11:22:29Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dir.exists())) { new java.io.File(dirName).mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7490/buggy-version/WriteToHTMLFile.java", "BodyUseAPI": [], "Fixed commit": "270ddabc2a8aec32a82bff48a461e7fbe9950887", "Url": "https://api.github.com/repos/madhav165/stackexchangetohtml", "Date": "2016-06-19T07:10:41Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tianli.dbhelper.LoginDBHelper.select(android.database.sqlite.SQLiteDatabase,(((com.tianli.dbhelper.LoginDBHelper.USER_NAME_COL) + \"=\") + (userDo.userName)))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((preLogin.id) != (-1)) { mDbHelper.delete(db, ((com.tianli.dbhelper.LoginDBHelper.USER_NAME_COL) + \" = ?\"), args); result.actioncode = 2; result.oldseat = preLogin.seatId; }else { result.actioncode = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8983/buggy-version/src.main.java.com.tianli.servlet.LoginServlet.java", "BodyUseAPI": [], "Fixed commit": "9714da8f9d5ec4950fb1573fddfb27eabe3a4307", "Url": "https://api.github.com/repos/tianliplus/appservice", "Date": "2014-06-22T10:06:28Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rList.isEmpty()) { return new edu.unlp.medicine.r4j.values.R4JStringDataMatrix(new java.util.ArrayList<java.lang.String>(), new java.util.ArrayList<java.lang.String>(), new java.lang.String[0][0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5599/buggy-version/R4J.src.main.java.edu.unlp.medicine.r4j.values.R4JValue.java", "BodyUseAPI": [], "Fixed commit": "8d88887e3558ca24104f237bb839f2d74f959552", "Url": "https://api.github.com/repos/CancerGenomics/libraries", "Date": "2015-10-26T04:38:43Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.indexList.contains(((startIndex) + i))) image.setSelected(true); else image.setSelected(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8252/buggy-version/src.gui2D.gui2d.geometries.chooser.CardChooseWindow.java", "BodyUseAPI": [], "Fixed commit": "76804bdbdeadc6f756d040bc7b134667419eb3dc", "Url": "https://api.github.com/repos/Krakomat/final_tcg_3", "Date": "2016-03-04T13:56:42Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (apiException.isUnauthorized()) { com.idogfooding.bone.BaseApplication.showToast(\"\u767b\u5f55\u4fe1\u606f\u5931\u6548,\u8bf7\u91cd\u65b0\u767b\u5f55!\"); android.content.Intent intent = new android.content.Intent(((getContext().getPackageName()) + \".USER.LOGIN\")); startActivity(intent); com.idogfooding.bone.utils.AppManager.getAppManager().finishAllActivityExcept(\"LoginActivity\"); }else { com.idogfooding.bone.BaseApplication.showToast(apiException.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2634/buggy-version/bone.src.main.java.com.idogfooding.bone.ui.BaseFragment.java", "BodyUseAPI": ["com.idogfooding.bone.BaseApplication.showToast(apiException.getMessage())", "com.idogfooding.bone.network.ApiException.getMessage()"], "Fixed commit": "9783c7918406d46612903e38aef27a8ea9ada984", "Url": "https://api.github.com/repos/zhangchaoxu/bone-android", "Date": "2016-07-27T03:25:52Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((to.cur) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5407/buggy-version/fight_handler.java", "BodyUseAPI": [], "Fixed commit": "e6b894f869fc387cfc7e7fca59319ee602446d30", "Url": "https://api.github.com/repos/kpj/The-Forgotten", "Date": "2012-03-17T13:59:08Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.ObjectInputStream.readBoolean()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hasHolder) { net.minecraft.nbt.NBTTagCompound nbt = ((net.minecraft.nbt.NBTTagCompound) (net.minecraft.nbt.NBTBase.readNamedTag(dataStream))); holder = com.github.AbrarSyed.SecretRooms.common.BlockHolder.buildFromNBT(nbt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3115/buggy-version/src.minecraft.com.github.AbrarSyed.SecretRooms.client.PacketHandlerClient.java", "BodyUseAPI": [], "Fixed commit": "9c3e499f204e1c00b8ed26ed2ada6965f8ce574c", "Url": "https://api.github.com/repos/AbrarSyed/SecretRoomsMod-forge", "Date": "2013-04-16T23:47:59Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((holder) != null) { data.writeBoolean(true); net.minecraft.nbt.NBTTagCompound nbt = new net.minecraft.nbt.NBTTagCompound(); holder.writeToNBT(nbt); net.minecraft.nbt.NBTBase.writeNamedTag(nbt, data); }else data.writeBoolean(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3115/buggy-version/src.minecraft.com.github.AbrarSyed.SecretRooms.common.TileEntityCamoFull.java", "BodyUseAPI": [], "Fixed commit": "9c3e499f204e1c00b8ed26ed2ada6965f8ce574c", "Url": "https://api.github.com/repos/AbrarSyed/SecretRoomsMod-forge", "Date": "2013-04-16T23:47:59Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serverRunning) == ((theServer) == null)) { serverRunning = !((theServer) == null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3373/buggy-version/net.acomputerdog.BlazeLoader.proxy.MinecraftProxy.java", "BodyUseAPI": [], "Fixed commit": "0ffa9a27d9cf916da64e57de52f2dcf883e70d58", "Url": "https://api.github.com/repos/warriordog/BlazeLoader", "Date": "2013-10-16T11:03:27Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((par1WorldClient == null) && ((this.theWorld) != null)) { serverRunning = (theServer) != null; }else { serverRunning = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3373/buggy-version/net.acomputerdog.BlazeLoader.proxy.MinecraftProxy.java", "BodyUseAPI": [], "Fixed commit": "0ffa9a27d9cf916da64e57de52f2dcf883e70d58", "Url": "https://api.github.com/repos/warriordog/BlazeLoader", "Date": "2013-10-16T11:03:27Z"},
{"Line": "=>892", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((com.example.cmput301f17t19.echoes.Activities.ToDoActivity.login_UserProfile.getProfilePicture()) != null) && ((com.example.cmput301f17t19.echoes.Activities.ToDoActivity.login_UserProfile.getProfilePicture().length) != 0)) { profile_ImageButton.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(com.example.cmput301f17t19.echoes.Activities.ToDoActivity.login_UserProfile.getProfilePicture(), 0, com.example.cmput301f17t19.echoes.Activities.ToDoActivity.login_UserProfile.getProfilePicture().length)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6518/buggy-version/Echoes.app.src.main.java.com.example.cmput301f17t19.echoes.Activities.ToDoActivity.java", "BodyUseAPI": ["com.example.cmput301f17t19.echoes.Models.UserProfile.getProfilePicture()", "com.example.cmput301f17t19.echoes.Models.UserProfile.getProfilePicture()", "de.hdodenhof.circleimageview.CircleImageView.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(com.example.cmput301f17t19.echoes.Activities.ToDoActivity.login_UserProfile.getProfilePicture(), 0, com.example.cmput301f17t19.echoes.Activities.ToDoActivity.login_UserProfile.getProfilePicture().length))", "android.graphics.BitmapFactory.decodeByteArray(com.example.cmput301f17t19.echoes.Activities.ToDoActivity.login_UserProfile.getProfilePicture(),int,com.example.cmput301f17t19.echoes.Activities.ToDoActivity.login_UserProfile.getProfilePicture().length)"], "Fixed commit": "e5318c63097bcd7c671be34326ec2337ef1daa4e", "Url": "https://api.github.com/repos/CMPUT301F17T19/Echoes", "Date": "2017-12-04T21:36:40Z"},
{"Line": "=>2781", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPlaying) != null) { mRemoteControl.metadataChanged(currentPlaying.getSong()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3960/buggy-version/app.src.main.java.github.daneren2005.dsub.service.DownloadService.java", "BodyUseAPI": [], "Fixed commit": "16e81b24b0e502ee8a57b347e464cbf7e59855c4", "Url": "https://api.github.com/repos/daneren2005/Subsonic", "Date": "2016-01-05T06:30:20Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mData) != null) { deliverResult(mData); }else { forceLoad(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6558/buggy-version/Gista.src.jp.numa08.models.gist.GistLoader.java", "BodyUseAPI": [], "Fixed commit": "08f8369e8327f947c1b118df7f54a03a4294b141", "Url": "https://api.github.com/repos/numa08/gista", "Date": "2013-02-04T15:44:03Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((takeHit()) == 0) { endGame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/9063/buggy-version/app.src.main.java.com.jeremybowyer.mathtap.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "8c20113c8f81a6bc3ef48edb4ce4300db71ef980", "Url": "https://api.github.com/repos/JeremyBowyer/MathTap", "Date": "2017-08-16T17:09:19Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getInt(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (responseCode == (org.onepf.oms.appstore.nokiaUtils.NokiaStoreHelper.RESULT_OK)) { mRequestCode = requestCode; mPurchaseListener = listener; final org.onepf.oms.appstore.nokiaUtils.IntentSender intentSender = pendingIntent.getIntentSender(); act.startIntentSenderForResult(intentSender, requestCode, new org.onepf.oms.appstore.nokiaUtils.Intent(), 0, 0, 0); }else if (listener != null) { final org.onepf.oms.appstore.nokiaUtils.IabResult result = new org.onepf.oms.appstore.nokiaUtils.IabResult(responseCode, \"Failed to get buy intent.\"); listener.onIabPurchaseFinished(result, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6078/buggy-version/library.src.org.onepf.oms.appstore.nokiaUtils.NokiaStoreHelper.java", "BodyUseAPI": [], "Fixed commit": "53189413a0573da6eaabdb8f3a38b8df00ab2fdc", "Url": "https://api.github.com/repos/onepf/OpenIAB", "Date": "2014-04-04T15:09:52Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Block.getRelative(org.bukkit.block.BlockFace)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((b.getType()) == (org.bukkit.Material.CHEST)) || ((b.getType()) == (org.bukkit.Material.TRAPPED_CHEST))) { com.github.igotyou.FactoryMod.structures.MultiBlockStructure.getAdjacentBlocks(b); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2879/buggy-version/src.com.github.igotyou.FactoryMod.factories.Sorter.java", "BodyUseAPI": ["com.github.igotyou.FactoryMod.structures.MultiBlockStructure.getAdjacentBlocks(org.bukkit.block.Block)"], "Fixed commit": "e240cedc44f47becba5055f249fe2e7b0203ed17", "Url": "https://api.github.com/repos/Civcraft/FactoryMod", "Date": "2016-03-26T14:32:24Z"},
{"Line": "=>1017", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCustomTabsSession) != null) { mCustomTabsSession.mayLaunchUrl(android.net.Uri.parse(item.getCanonical()), null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2742/buggy-version/app.src.main.java.com.wilee8.coyotereader2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6aaf427abd8fd2693ae8f450c30a51b9acf657ae", "Url": "https://api.github.com/repos/wilee8/CoyoteReader2", "Date": "2015-09-13T22:25:20Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nome == \"\") { return br.com.stefanini.controlepontoback.converter.PontoConverter.toDTO(pontoRepository.findBySaidaIsNull()); }else { return br.com.stefanini.controlepontoback.converter.PontoConverter.toDTO(pontoRepository.findBySaidaIsNullAndFuncionario_NomeContaining(nome)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3374/buggy-version/src.main.java.br.com.stefanini.controlepontoback.service.PontoService.java", "BodyUseAPI": ["br.com.stefanini.controlepontoback.converter.PontoConverter.toDTO(pontoRepository.findBySaidaIsNullAndFuncionario_NomeContaining(nome))", "br.com.stefanini.controlepontoback.repository.PontoRepository.findBySaidaIsNullAndFuncionario_NomeContaining(java.lang.String)"], "Fixed commit": "0289dfafb1842fabb9ca9bce27fa27e1d54181ac", "Url": "https://api.github.com/repos/stf-esbrito/controleponto-back", "Date": "2017-12-29T11:54:19Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (datetime < startTime) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4203/buggy-version/src.main.java.org.hptd.io.LevelDbIo.java", "BodyUseAPI": [], "Fixed commit": "979ae39f2abe257223b8a4393ed41e305c5a116b", "Url": "https://api.github.com/repos/fordguo/hptd-framework", "Date": "2013-02-02T14:12:48Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(started)) { for (org.wilson.world.model.EntityDef def : all) { cachePut(null, def); } started = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5719/buggy-version/src.main.java.org.wilson.world.manager.EntityManager.java", "BodyUseAPI": [], "Fixed commit": "9187d8d12cc466871133d93fa804a6586fee6fd9", "Url": "https://api.github.com/repos/liumiaowilson/world", "Date": "2017-02-09T09:40:35Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.delete()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!deleteSuccess) { android.util.Log.e(com.playposse.ghostphoto.util.BitmapRotationUtil.LOG_TAG, (\"rotate: Failed to delete source file after rotating: \" + (sourceFile.getAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8975/buggy-version/app.src.main.java.com.playposse.ghostphoto.util.BitmapRotationUtil.java", "BodyUseAPI": [], "Fixed commit": "2da0a073837b35a43e3b22b06e3680ff83cbb42e", "Url": "https://api.github.com/repos/thomasfischersm/GhostPhoto", "Date": "2017-08-05T18:29:28Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalMins <= 60) cost = Charge.WEUpTo2.getCharge(); else if (totalMins <= 360) cost = Charge.WEUpTo6.getCharge(); else if (totalMins <= 1440) cost = Charge.WEUpTo24.getCharge();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1777/buggy-version/src.CarParkExitBarrierSystem.ParkingTransaction.java", "BodyUseAPI": [], "Fixed commit": "15edd9ead1e8f786eca275f4733e15c33b654e6c", "Url": "https://api.github.com/repos/ColeMcCombie/AtosSoloProjectOneCOLE", "Date": "2015-11-10T08:27:23Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<net.minecraft.world.biome.Biome>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (me.superckl.api.biometweaker.property.BiomePropertyManager.setProperty(gen, this.key.toLowerCase(), this.value, this.handler)) me.superckl.biometweaker.BiomeTweaker.getInstance().onTweak(net.minecraft.world.biome.Biome.getIdForBiome(gen));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6110/buggy-version/src.main.java.me.superckl.biometweaker.script.command.misc.ScriptCommandSetBiomeProperty.java", "BodyUseAPI": ["net.minecraft.world.biome.Biome.getIdForBiome(net.minecraft.world.biome.Biome)", "me.superckl.biometweaker.BiomeTweaker.getInstance().onTweak(net.minecraft.world.biome.Biome.getIdForBiome(gen))"], "Fixed commit": "a6a0e33ffba705d88979e32dcd88c69b7e1d2f5b", "Url": "https://api.github.com/repos/superckl/BiomeTweaker", "Date": "2017-08-28T16:43:16Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(urlString.toLowerCase().startsWith(\"http://\"))) && (!(urlString.toLowerCase().startsWith(\"https://\")))) { msg += \"\\nDid you forget to prefix the address with \\'http://\\' or \\'https://\\' ?\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6679/buggy-version/src.org.opendatakit.briefcase.util.AggregateUtils.java", "BodyUseAPI": [], "Fixed commit": "6479722e4d6162ce8e9139bebd801120dabf410a", "Url": "https://api.github.com/repos/opendatakit/briefcase", "Date": "2016-12-31T03:54:54Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(urlString.toLowerCase().startsWith(\"http://\"))) && (!(urlString.toLowerCase().startsWith(\"https://\")))) { msg += \"\\nDid you forget to prefix the address with \\'http://\\' or \\'https://\\' ?\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6679/buggy-version/src.org.opendatakit.briefcase.util.AggregateUtils.java", "BodyUseAPI": [], "Fixed commit": "6479722e4d6162ce8e9139bebd801120dabf410a", "Url": "https://api.github.com/repos/opendatakit/briefcase", "Date": "2016-12-31T03:54:54Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (event == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/705/buggy-version/src.gx.realtime.Document.java", "BodyUseAPI": [], "Fixed commit": "37a1203395fb2ff972b3fc9bb6099c9e572fb87b", "Url": "https://api.github.com/repos/mkrause/gx", "Date": "2013-06-17T18:19:52Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gx.realtime.Document.getCollaboratorBySessionId(clEvent.getCollaborator().getSessionId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (c == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/705/buggy-version/src.gx.realtime.Document.java", "BodyUseAPI": [], "Fixed commit": "37a1203395fb2ff972b3fc9bb6099c9e572fb87b", "Url": "https://api.github.com/repos/mkrause/gx", "Date": "2013-06-17T18:19:52Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tmpArgs[i].length()) < 2) || (!(tmpArgs[i].startsWith(\"-\")))) { opt = \"\"; }else { opt = tmpArgs[i].substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5158/buggy-version/src.main.java.me.desht.dhutils.commands.AbstractCommand.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "cfedd3475f816950116a1f39f32c456077f6f230", "Url": "https://api.github.com/repos/desht/dhutils", "Date": "2012-11-23T10:22:17Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (yDelta < 0) { yStep = -yStep; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1212/buggy-version/src.de.tuhh.diss.plotbot.robot.PhysicalRobot.java", "BodyUseAPI": [], "Fixed commit": "8fe61bcb6782dcb0f5b9ccf5a64626dc76ecd9b2", "Url": "https://api.github.com/repos/pipapeng/DISS---LAB-4", "Date": "2016-01-27T19:54:20Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (multiTables) { }else { status = status & (checkColumn(sql, \"users-table.username\", users_table, user_name_field)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/377/buggy-version/src.org.ruhlendavis.mc.communitybridge.Configuration.java", "BodyUseAPI": [], "Fixed commit": "8b1acfbca13fba0ee44932e867e6a9fc2ffb5e01", "Url": "https://api.github.com/repos/iain-davis/CommunityBridge", "Date": "2013-03-29T14:00:15Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.massivecraft.factions.Factions.get().isDatabaseInitialized())) return this;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4464/buggy-version/src.com.massivecraft.factions.entity.MConf.java", "BodyUseAPI": [], "Fixed commit": "80eb5064996bbf94b24be7511d4d63c598cf18d1", "Url": "https://api.github.com/repos/MassiveCraft/Factions", "Date": "2013-04-24T14:50:19Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (selectedApi != null) { org.wso2.carbon.apimgt.gateway.handlers.security.Resource[] selectedAPIResources = selectedApi.getResources(); if ((selectedAPIResources.length) > 0) { for (org.apache.synapse.rest.dispatch.RESTDispatcher dispatcher : org.wso2.carbon.apimgt.gateway.handlers.security.RESTUtils.getDispatchers()) { org.wso2.carbon.apimgt.gateway.handlers.security.Resource resource = dispatcher.findResource(messageContext, java.util.Arrays.asList(selectedAPIResources)); if (resource != null) { selectedResource = resource; if (java.util.Arrays.asList(resource.getMethods()).contains(httpMethod)) { selectedResourceWithVerb = resource; break; } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3074/buggy-version/components.apimgt.org.wso2.carbon.apimgt.gateway.src.main.java.org.wso2.carbon.apimgt.gateway.handlers.security.CORSRequestHandler.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.gateway.handlers.security.API.getResources()"], "Fixed commit": "5d914fa6635e03c3c158fa8f9e5d65ab7ef4e4a7", "Url": "https://api.github.com/repos/harsha89/carbon-apimgt", "Date": "2016-01-25T06:34:57Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (employees.get(i).unableToWork) { }else { java.util.ArrayList<TimeManagement.Domain.Activity> ActivitiesInPeriod = new java.util.ArrayList<>(); for (int j = 0; j < (employees.get(i).getAssignedActivites().size()); j++) { int activityStartWeek = employees.get(i).getAssignedActivites().get(j).getStartWeek(); int activityEndWeek = employees.get(i).getAssignedActivites().get(j).getEndWeek(); if (((activityStartWeek < startWeek) || (activityStartWeek > endWeek)) && ((activityEndWeek < startWeek) || (activityEndWeek > endWeek))) { }else { ActivitiesInPeriod.add(employees.get(i).getAssignedActivites().get(j)); } } if (!((ActivitiesInPeriod.size()) > 5)) { AvailableEmployees.add(employees.get(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6106/buggy-version/src.TimeManagement.Domain.SystemTimeManager.java", "BodyUseAPI": ["employees.get(i).getAssignedActivites()", "java.util.ArrayList<TimeManagement.Domain.Employee>.get(int)", "employees.get(i).getAssignedActivites()", "java.util.ArrayList<TimeManagement.Domain.Activity>.add(employees.get(i).getAssignedActivites().get(j))", "java.util.ArrayList<TimeManagement.Domain.Employee>.get(int)", "java.util.ArrayList<TimeManagement.Domain.Employee>.add(employees.get(i))", "java.util.ArrayList<TimeManagement.Domain.Employee>.get(int)", "employees.get(i).getAssignedActivites().get(int)", "employees.get(i).getAssignedActivites()", "employees.get(i).getAssignedActivites().get(j).getStartWeek()", "java.util.ArrayList<TimeManagement.Domain.Employee>.get(int)", "employees.get(i).getAssignedActivites()", "employees.get(i).getAssignedActivites().get(int)", "employees.get(i).getAssignedActivites().get(int)", "employees.get(i).getAssignedActivites().get(j).getEndWeek()", "employees.get(i).getAssignedActivites().size()", "java.util.ArrayList<TimeManagement.Domain.Employee>.get(int)"], "Fixed commit": "8bc68c8bd6094cee967f8fa640de6f19c0c23faf", "Url": "https://api.github.com/repos/WilliamBenEmbarek/DTUSoftwareEng", "Date": "2017-05-07T17:55:51Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPoint) != null) { mXFocus = (-(mPoint.x)) + ((mViewWidth) / (2 * (mScaleFactor))); mYFocus = (-(mPoint.y)) + ((mViewHeight) / (2 * (mScaleFactor))); invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4695/buggy-version/WPS.src.de.rwth.ti.common.IPMapView.java", "BodyUseAPI": [], "Fixed commit": "e00c52ab1f258870b5b9211e659843870f1e64af", "Url": "https://api.github.com/repos/tcuje/PraktikumSS13-WLAN-Fingerprint", "Date": "2013-06-25T09:52:29Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (rels != null) { for (int i = 0; i < (rels.length); i++) { halResource.withLink(rels[i], l.getHref(), l.getId(), l.getTitle(), null, null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1151/buggy-version/interaction-media-hal.src.main.java.com.temenos.interaction.media.hal.HALProvider.java", "BodyUseAPI": ["com.theoryinpractise.halbuilder.api.Representation.withLink(java.lang.String,l.getHref(),l.getId(),l.getTitle(),<nulltype>,<nulltype>)"], "Fixed commit": "30478c6438328f5fd370fbe87d1a613254d33b7e", "Url": "https://api.github.com/repos/temenostech/IRIS", "Date": "2014-03-20T11:53:15Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (facets != null) { for (java.lang.String f : facets) { if ((org.apache.commons.lang.StringUtils.isNotEmpty(f)) && ((list.size()) < (facetsMax))) { list.add(f); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8887/buggy-version/src.main.java.au.org.ala.biocache.dto.SearchRequestParams.java", "BodyUseAPI": [], "Fixed commit": "0f7d28e53b36c2b4303292e067039db3041df519", "Url": "https://api.github.com/repos/AtlasOfLivingAustralia/biocache-service", "Date": "2016-11-24T01:59:09Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (notifier.includeCustomMessage()) { message.appendCustomMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5344/buggy-version/src.main.java.jenkins.plugins.slack.ActiveNotifier.java", "BodyUseAPI": [], "Fixed commit": "160dcd7c1016466200bc0fd7370f9ad0f612f910", "Url": "https://api.github.com/repos/jenkinsci/slack-plugin", "Date": "2015-11-30T23:18:37Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.airlift.command.Parser.find(java.util.List<io.airlift.command.model.CommandMetadata>,compose(equalTo(tokens.peek()), io.airlift.command.model.CommandMetadata.nameGetter()),((state.getGroup()) != null ? state.getGroup().getDefaultCommand() : null))", "com.google.common.collect.Iterators.peekingIterator(java.util.Iterator<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tokens.peek().equals(command.getName())) { tokens.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8436/buggy-version/src.main.java.io.airlift.command.Parser.java", "BodyUseAPI": ["com.google.common.collect.PeekingIterator<java.lang.String>.next()"], "Fixed commit": "f1603c48a779f7884022fbaff72bde501c39a13b", "Url": "https://api.github.com/repos/clarkparsia/airline", "Date": "2013-01-24T13:50:29Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_endDate) == null) { _endDate = newEndDate.toLocalDateTime(); }else { _endDate = katnote.utils.DateTimeUtils.updateDateTime(_endDate, newEndDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8081/buggy-version/src.katnote.task.Task.java", "BodyUseAPI": [], "Fixed commit": "ad4ab98a3211583cf06f4caecb3430d4f7e0ed51", "Url": "https://api.github.com/repos/cs2103aug2015-t09-2j/main", "Date": "2015-11-04T14:58:47Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNull(url)) { return url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1819/buggy-version/portal-service.src.com.liferay.portal.kernel.webdav.WebDAVUtil.java", "BodyUseAPI": [], "Fixed commit": "3ef5193602e331b8e8b4a68cf6edc51ad669f049", "Url": "https://api.github.com/repos/robertoDiaz/liferay-portal", "Date": "2012-12-20T17:08:34Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fields[i].equals(\"\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7270/buggy-version/src.java.htsjdk.samtools.metrics.MetricsFile.java", "BodyUseAPI": [], "Fixed commit": "652f7a225c680417cc67ec5c5e9ce38b6ee88059", "Url": "https://api.github.com/repos/samtools/htsjdk", "Date": "2015-10-29T17:56:42Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (indexFile.exists()) { try (java.io.InputStream in = new java.io.FileInputStream(indexFile)) { version = in.read(); } return version; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5012/buggy-version/api.src.main.java.io.druid.segment.SegmentUtils.java", "BodyUseAPI": [], "Fixed commit": "c9fc7d17092d173eb95fd53da79b493e3c8265c0", "Url": "https://api.github.com/repos/DreamLab/druid", "Date": "2017-03-23T21:21:19Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"en\".equals(net.yvin.codaview.app.context.LanguageContext.getLanguage())) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/11/buggy-version/CODAView.src.main.java.net.yvin.codaview.app.activity.TwelveActivity.java", "BodyUseAPI": [], "Fixed commit": "13245b2e5818dcf7ab9eda78dd78ea99cb5dbc32", "Url": "https://api.github.com/repos/yurivin/CODAView", "Date": "2014-07-27T19:23:42Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"en\".equals(net.yvin.codaview.app.context.LanguageContext.getLanguage())) adapter = new android.widget.ArrayAdapter<java.lang.String>(this, R.layout.text_list_item, values); else adapter = new android.widget.ArrayAdapter<java.lang.String>(this, R.layout.clickable_text_list_item, values);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/11/buggy-version/CODAView.src.main.java.net.yvin.codaview.app.activity.TwelveActivity.java", "BodyUseAPI": [], "Fixed commit": "13245b2e5818dcf7ab9eda78dd78ea99cb5dbc32", "Url": "https://api.github.com/repos/yurivin/CODAView", "Date": "2014-07-27T19:23:42Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeStart) != null) { sb.append(((\" TimeStart : \" + (this.timeStart.toString())) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6750/buggy-version/TaskScheduler.src.Task.java", "BodyUseAPI": [], "Fixed commit": "fbefc3474d2e6962717afc65ea92d0bbeeb88c3c", "Url": "https://api.github.com/repos/cs2103jan2016-w10-3j/main", "Date": "2016-03-22T10:44:01Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (window.isEmpty()) { return 0; }else { return (window.last()) - (window.first()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7018/buggy-version/rocketmq-flume-source.src.main.java.com.ndpmedia.flume.source.rocketmq.ProcessQueue.java", "BodyUseAPI": ["java.util.TreeSet<java.lang.Long>.last()", "java.util.TreeSet<java.lang.Long>.first()"], "Fixed commit": "a5a46ae723b6991f1c9b80c785d1d4f1d66254f4", "Url": "https://api.github.com/repos/NDPMediaCorp/RocketMQ-Flume", "Date": "2016-09-20T08:09:58Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (command instanceof services.command.CombatCommand) { try { processCommand(actor, target, ((services.command.BaseSWGCommand) (command.clone())), actionCounter, commandArgs); } catch (java.lang.CloneNotSupportedException e) { e.printStackTrace(); } }else processCommand(actor, target, command, actionCounter, commandArgs);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3797/buggy-version/src.services.command.CommandService.java", "BodyUseAPI": ["services.command.BaseSWGCommand.clone()", "services.command.CommandService.processCommand(resources.objects.creature.CreatureObject,engine.resources.objects.SWGObject,((services.command.BaseSWGCommand) (command.clone())),int,java.lang.String)", "services.command.CommandService.processCommand(resources.objects.creature.CreatureObject,engine.resources.objects.SWGObject,services.command.BaseSWGCommand,int,java.lang.String)"], "Fixed commit": "13b5fe7d9550d80cdc4d1a7467291af52ae900ad", "Url": "https://api.github.com/repos/LordAlfonso/NGECore2", "Date": "2014-04-21T13:50:45Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_block_adapter) != null) { m_block_adapter.filter(searchQuery.toString().trim()); lsvUsers.invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1879/buggy-version/app.src.main.java.com.fredrick.mixedsignals.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "50349e61fda16982256bed704eb720e0b4b0fd03", "Url": "https://api.github.com/repos/YangTingMobile/MixedSignals", "Date": "2017-05-10T19:14:42Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.InputStream.read(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (read < (org.gedcom4j.io.GedcomFileReader.FIRST_CHUNK_SIZE)) { throw new java.io.IOException(((\"Unable to read \" + (org.gedcom4j.io.GedcomFileReader.FIRST_CHUNK_SIZE)) + \" bytes off stream\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7695/buggy-version/src.org.gedcom4j.io.GedcomFileReader.java", "BodyUseAPI": [], "Fixed commit": "ba363ff060aad5ec3e2194d49812a6c5263358b4", "Url": "https://api.github.com/repos/frizbog/gedcom4j", "Date": "2012-12-22T14:46:18Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((set.equals(check1)) || (set.equals(check2))) score = 30;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3773/buggy-version/Scoreboard.java", "BodyUseAPI": [], "Fixed commit": "c3e43160bd0a3f2cc60c2cef969f83ee11280b5f", "Url": "https://api.github.com/repos/rileynat/Yahtzee", "Date": "2013-12-01T20:13:15Z"},
{"Line": "=>1211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedList<org.apache.drill.exec.physical.impl.xsort.managed.BatchGroup.InputBatch>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (inMemCount > 0) { spillFromMemory(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5774/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch.java", "BodyUseAPI": [], "Fixed commit": "8f162abbda41321e13354699c2453ae2575a8b97", "Url": "https://api.github.com/repos/paul-rogers/drill", "Date": "2017-02-12T02:37:46Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((fireParticleSystems.size()) > 0) && ((smokeParticleSystems.size()) > 0)) { int LAST = (fireParticleSystems.size()) - 1; fireParticleSystems.get(LAST).setParticlesSpawnEnabled(false); smokeParticleSystems.get(LAST).setParticlesSpawnEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/895/buggy-version/src.com.example.ship.game.Ship.java", "BodyUseAPI": ["java.util.ArrayList<org.andengine.entity.particle.SpriteParticleSystem>.get(int)", "smokeParticleSystems.get(LAST).setParticlesSpawnEnabled(boolean)", "java.util.ArrayList<org.andengine.entity.particle.SpriteParticleSystem>.size()", "fireParticleSystems.get(LAST).setParticlesSpawnEnabled(boolean)", "java.util.ArrayList<org.andengine.entity.particle.SpriteParticleSystem>.get(int)"], "Fixed commit": "53ba0a4cc0e6185447a3448431669e12d76d917a", "Url": "https://api.github.com/repos/dmedov/flexymind_Ship", "Date": "2013-05-28T09:37:46Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.assigned.size()) >= index) { }else { for (int i = this.assigned.size(); i < index; i++) { this.assigned.add(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1496/buggy-version/src.Student.java", "BodyUseAPI": ["java.util.ArrayList<Courses>.size()", "java.util.ArrayList<Courses>.add(<nulltype>)"], "Fixed commit": "7ffa3f373bf6c159b0566f9568e9f86f3e31c47b", "Url": "https://api.github.com/repos/EthanReese/Scriba", "Date": "2017-07-31T16:17:41Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (aux != null) { test.users.add(aux); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1553/buggy-version/etoile-play.app.controllers.ApiController.java", "BodyUseAPI": ["test.users.add(models.manytomany.Usertest)"], "Fixed commit": "070bd48335f77286b2c22d5a149ceb8793c6bfeb", "Url": "https://api.github.com/repos/lopesdasilva/etoile", "Date": "2013-05-08T10:43:17Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mult / multiplier) != (m_units)) return other.add(new info.javaperformance.money.MoneyBigDecimal(toBigDecimal()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8064/buggy-version/src.main.java.info.javaperformance.money.MoneyLong.java", "BodyUseAPI": [], "Fixed commit": "effb537ce9498e15b7be0828ed085a240c5f3460", "Url": "https://api.github.com/repos/mikvor/money-conversion", "Date": "2014-11-14T11:58:29Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mult / multiplier) != (other.m_units)) return other.add(new info.javaperformance.money.MoneyBigDecimal(toBigDecimal()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8064/buggy-version/src.main.java.info.javaperformance.money.MoneyLong.java", "BodyUseAPI": ["info.javaperformance.money.MoneyLong.add(info.javaperformance.money.MoneyBigDecimal)"], "Fixed commit": "effb537ce9498e15b7be0828ed085a240c5f3460", "Url": "https://api.github.com/repos/mikvor/money-conversion", "Date": "2014-11-14T11:58:29Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.arena.getLivingZombieAmount()) < ((this.arena.getSpawningZombies()) * (me.Aubli.ZvP.Listeners.EntityListener.ZOMBIEINTERACTIONFACTOR))) { this.arena.next(); this.arena.updatePlayerBoards(); me.Aubli.ZvP.ZvP.getPluginLogger().log(getClass(), java.util.logging.Level.INFO, ((\"Arena \" + (this.arena.getID())) + \" moved into the next wave cause of no zombie interaction!\"), true, true); this.arena.setTaskID(new me.Aubli.ZvP.Game.GameRunnable(this.arena, this.arena.getArenaBreakTime()).runTaskTimer(me.Aubli.ZvP.ZvP.getInstance(), 0L, 20L).getTaskId()); this.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2371/buggy-version/src.me.Aubli.ZvP.Game.GameRunnable.java", "BodyUseAPI": ["me.Aubli.ZvP.ZvP.getPluginLogger().log(java.lang.Class<? extends me.Aubli.ZvP.Game.GameRunnable>,java.util.logging.Level,((\"Arena \" + (this.arena.getID())) + \" moved into the next wave cause of no zombie interaction!\"),boolean,boolean)", "me.Aubli.ZvP.Game.Arena.next()", "me.Aubli.ZvP.Game.Arena.getArenaBreakTime()", "me.Aubli.ZvP.Game.Arena.getID()", "me.Aubli.ZvP.Game.Arena.setTaskID(new me.Aubli.ZvP.Game.GameRunnable(this.arena, this.arena.getArenaBreakTime()).runTaskTimer(me.Aubli.ZvP.ZvP.getInstance(), 0L, 20L).getTaskId())", "new me.Aubli.ZvP.Game.GameRunnable(this.arena, this.arena.getArenaBreakTime()).runTaskTimer(me.Aubli.ZvP.ZvP.getInstance(), 0L, 20L).getTaskId()", "me.Aubli.ZvP.Game.GameRunnable.runTaskTimer(me.Aubli.ZvP.ZvP.getInstance(),long,long)", "me.Aubli.ZvP.Game.Arena.updatePlayerBoards()"], "Fixed commit": "7ff5562dafe2975eaad00975952b82410a99d816", "Url": "https://api.github.com/repos/AlexMl/ZvP", "Date": "2015-06-28T22:12:01Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (b && (!(uploadFileRows.isEmpty()))) { uploadFilesToExperimentButton.setEnabled(b); }else { uploadFilesToExperimentButton.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2457/buggy-version/src.gui.UploadToExistingExpPanel.java", "BodyUseAPI": ["javax.swing.JButton.setEnabled(boolean)"], "Fixed commit": "ed9fbdb02b9bfc6fc27f406b1316f8005ae097a2", "Url": "https://api.github.com/repos/genomizer/genomizer-desktop", "Date": "2014-05-16T07:44:03Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((filename.length()) > 0) { cmd.add(escapeFileName(filename)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1740/buggy-version/src.org.opensolaris.opengrok.history.SubversionRepository.java", "BodyUseAPI": ["org.opensolaris.opengrok.history.SubversionRepository.escapeFileName(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "3533a68c3dda94495b6bbcd6dce28c6559671011", "Url": "https://api.github.com/repos/OpenGrok/OpenGrok", "Date": "2013-03-15T20:20:48Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dawb.workbench.ui.editors.PlotDataEditor.getDataSet(java.lang.Object,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (set == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5284/buggy-version/org.dawb.workbench.ui.src.org.dawb.workbench.ui.editors.PlotDataEditor.java", "BodyUseAPI": [], "Fixed commit": "1c7625c6064ded16ec309b7d9183aeedff2d85bb", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2012-09-28T10:34:34Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cz.uhk.fim.skoreto.todolist.TaskDetailActivity.weatherCurrent.getDate()) != null) return cz.uhk.fim.skoreto.todolist.fragments.WeatherCurrentFragment.newInstance(cz.uhk.fim.skoreto.todolist.TaskDetailActivity.weatherCurrent); else return cz.uhk.fim.skoreto.todolist.fragments.WeatherErrorFragment.newInstance();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2595/buggy-version/app.src.main.java.cz.uhk.fim.skoreto.todolist.TaskDetailActivity.java", "BodyUseAPI": ["cz.uhk.fim.skoreto.todolist.fragments.WeatherCurrentFragment.newInstance(cz.uhk.fim.skoreto.todolist.model.Weather)"], "Fixed commit": "5558257068eb3a3bc92f906861c08820f1e970d5", "Url": "https://api.github.com/repos/Skoreto/SmartList", "Date": "2017-01-29T09:16:07Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cz.uhk.fim.skoreto.todolist.TaskDetailActivity.listWeatherDaily.get(((cz.uhk.fim.skoreto.todolist.TaskDetailActivity.weatherDailyCount) - 1)).getDate()) != null) return cz.uhk.fim.skoreto.todolist.fragments.WeatherDailyFragment.newInstance(cz.uhk.fim.skoreto.todolist.TaskDetailActivity.listWeatherDaily, task, cz.uhk.fim.skoreto.todolist.TaskDetailActivity.weatherDaily); else return cz.uhk.fim.skoreto.todolist.fragments.WeatherErrorFragment.newInstance();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2595/buggy-version/app.src.main.java.cz.uhk.fim.skoreto.todolist.TaskDetailActivity.java", "BodyUseAPI": ["cz.uhk.fim.skoreto.todolist.fragments.WeatherDailyFragment.newInstance(java.util.List<cz.uhk.fim.skoreto.todolist.model.Weather>,cz.uhk.fim.skoreto.todolist.model.Task,cz.uhk.fim.skoreto.todolist.model.Weather)"], "Fixed commit": "5558257068eb3a3bc92f906861c08820f1e970d5", "Url": "https://api.github.com/repos/Skoreto/SmartList", "Date": "2017-01-29T09:16:07Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.metar.android.utils.PersistentUtils.getSettingsModel(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (settingsModel != null) { calendar.add(java.util.Calendar.HOUR_OF_DAY, settingsModel.getTimeOffset()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6840/buggy-version/app.src.main.java.com.metar.android.utils.AppUtils.java", "BodyUseAPI": ["com.metar.android.model.SettingsModel.getTimeOffset()", "java.util.Calendar.add(int,settingsModel.getTimeOffset())"], "Fixed commit": "148401c79080aa81e940298c13c5ddec42b4f947", "Url": "https://api.github.com/repos/DistributedCommunicationSystems/METAR-FirstDraft", "Date": "2016-12-17T14:41:05Z"},
{"Line": "=>699", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msnew.getParent()) != null) msnew.setIdentifier(msnew.getParent().getIdentifier());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5104/buggy-version/egov.egov-works.src.main.java.org.egov.works.revisionestimate.service.RevisionEstimateService.java", "BodyUseAPI": ["org.egov.works.abstractestimate.entity.MeasurementSheet.setIdentifier(msnew.getParent().getIdentifier())", "msnew.getParent().getIdentifier()", "org.egov.works.abstractestimate.entity.MeasurementSheet.getParent()"], "Fixed commit": "9b9ab414ec795b5ce7471476d4aae91fcc848d27", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-11-04T07:28:09Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sadovnikov.marvinbot.core.db.repository.PluginOption.getDocument(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (option != null) { valuesList = ((java.util.ArrayList<java.lang.String>) (option.get(\"value\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/9200/buggy-version/core.src.main.java.net.sadovnikov.marvinbot.core.db.repository.PluginOption.java", "BodyUseAPI": ["org.bson.Document.get(java.lang.String)"], "Fixed commit": "023a10f6cac865952652cdafbcb998a97e5adfd1", "Url": "https://api.github.com/repos/sad0vnikov/marvin-bot", "Date": "2016-08-08T20:10:55Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["info.adamjsmith.letmeknow.Contact.getNumbers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i != (phones.length)) { phonesText += \"\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3780/buggy-version/src.info.adamjsmith.letmeknow.ContactListFragment.java", "BodyUseAPI": [], "Fixed commit": "b271668768029a6fa145ac5c335faf5bcf82f1c3", "Url": "https://api.github.com/repos/iAmiAdam/LetMeKnow", "Date": "2014-08-18T10:20:18Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ctx.getResource()) == null) { status = javax.ws.rs.core.Response.Status.NO_CONTENT; }else { status = javax.ws.rs.core.Response.Status.CREATED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4448/buggy-version/interaction-core.src.main.java.com.temenos.interaction.core.rim.HTTPHypermediaRIM.java", "BodyUseAPI": [], "Fixed commit": "21b9f94f564c61cea280bccace275e1bd7c0ff41", "Url": "https://api.github.com/repos/asooben/IRIS", "Date": "2016-08-28T12:33:29Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(Context.TELEPHONY_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (tm != null) { java.lang.String deviceId = tm.getDeviceId(); return deviceId; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7873/buggy-version/CWorker.app.src.main.java.com.demo.cworker.Utils.Utils.java", "BodyUseAPI": ["android.telephony.TelephonyManager.getDeviceId()"], "Fixed commit": "dd3ad1eb16eeac6c15601821fb838a620a0b6f09", "Url": "https://api.github.com/repos/gzfgeh/Demo", "Date": "2017-06-17T01:50:40Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAuthenticationEnabled) { errorString = \"No clients in the database.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/215/buggy-version/Product.Controller.src.org.openremote.controller.servlet.AdministratorServlet.java", "BodyUseAPI": [], "Fixed commit": "e645d47dee84c7e9b0570c31bd7a82d4f8752edb", "Url": "https://api.github.com/repos/DomoTop/DomoTop", "Date": "2012-04-17T13:57:52Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((record == null) && (false == (task.moreRecord()))) { break; }else if (record == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2653/buggy-version/gpdbwriter.src.main.java.cn.hashdata.datax.plugin.writer.gpdbwriter.CopyProcessor.java", "BodyUseAPI": [], "Fixed commit": "6d5978db41c3b5798f4ae311104994667f09cf8c", "Url": "https://api.github.com/repos/HashDataInc/DataX", "Date": "2017-06-20T07:19:29Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lArray.length) != 2) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/294/buggy-version/src.main.java.com.sb.elsinore.StatusRecorder.java", "BodyUseAPI": [], "Fixed commit": "df591bf5a2ff052b75a512e4dde40ae0f142044a", "Url": "https://api.github.com/repos/DougEdey/SB_Elsinore_Server", "Date": "2015-05-30T15:26:59Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mDescription.equals(\"\"))) { c.drawText(mDescription, (((com.github.mikephil.charting.charts.Chart.getWidth()) - (mViewPortHandler.offsetRight())) - 10), (((com.github.mikephil.charting.charts.Chart.getHeight()) - (mViewPortHandler.offsetBottom())) - 10), mDescPaint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2231/buggy-version/MPChartLib.src.com.github.mikephil.charting.charts.Chart.java", "BodyUseAPI": ["android.graphics.Canvas.drawText(java.lang.String,(((com.github.mikephil.charting.charts.Chart.getWidth()) - (mViewPortHandler.offsetRight())) - 10),(((com.github.mikephil.charting.charts.Chart.getHeight()) - (mViewPortHandler.offsetBottom())) - 10),android.graphics.Paint)"], "Fixed commit": "4bd9efc1e95bea07d2b7d7a37670666a12d63213", "Url": "https://api.github.com/repos/PhilJay/MPAndroidChart", "Date": "2015-03-19T18:17:42Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTitle) == null) { return new com.czbix.v2ex.model.Node(null, mId, mAvatar, mName, mTitleAlternative, mTopics); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3604/buggy-version/app.src.main.java.com.czbix.v2ex.model.Node.java", "BodyUseAPI": [], "Fixed commit": "c0dbe770f4b50f4602ffcb8be0e195c41bc87d2f", "Url": "https://api.github.com/repos/CzBiX/v2ex-android", "Date": "2016-03-11T08:16:20Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (otherWireActive(wireID)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4286/buggy-version/src.entity.objectEntity.FlameTrapObjectEntity.java", "BodyUseAPI": [], "Fixed commit": "4de7e050f535105bdbf80c177eec07547bd74ddf", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2015-12-13T13:23:44Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.awareness.snapshot.LocationResult.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (location == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5145/buggy-version/app.src.main.java.io.alstonlin.thelearninglock.lockscreen.LockScreen.java", "BodyUseAPI": [], "Fixed commit": "f91d03ed8080de4683b008275bcdf3e2a4ed410c", "Url": "https://api.github.com/repos/AlstonLin/TheLearningLock", "Date": "2017-03-31T03:05:33Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.awareness.snapshot.WeatherResult.getWeather()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (weather == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5145/buggy-version/app.src.main.java.io.alstonlin.thelearninglock.lockscreen.LockScreen.java", "BodyUseAPI": [], "Fixed commit": "f91d03ed8080de4683b008275bcdf3e2a4ed410c", "Url": "https://api.github.com/repos/AlstonLin/TheLearningLock", "Date": "2017-03-31T03:05:33Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.ide.ResourceUtil.getFile(editor.getEditorInput())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (file == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4113/buggy-version/src.exttabhelper.SelectTab.java", "BodyUseAPI": [], "Fixed commit": "2e62b24b7427a66788f3301b97ebff79830516e1", "Url": "https://api.github.com/repos/feuersh/Eclipse-ExtTabHelper", "Date": "2013-04-22T07:32:21Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN)) { layoutBackground.getViewTreeObserver().removeOnGlobalLayoutListener(this); }else { layoutBackground.getViewTreeObserver().removeGlobalOnLayoutListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3409/buggy-version/library.src.main.java.com.akexorcist.roundcornerprogressbar.TextRoundCornerProgressBar.java", "BodyUseAPI": [], "Fixed commit": "01a7ee96b7e959a9363ff5d7789f86a82351800f", "Url": "https://api.github.com/repos/akexorcist/Android-RoundCornerProgressBar", "Date": "2015-04-20T02:28:00Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN)) { layoutHeader.getViewTreeObserver().removeOnGlobalLayoutListener(this); }else { layoutHeader.getViewTreeObserver().removeGlobalOnLayoutListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3409/buggy-version/library.src.main.java.com.akexorcist.roundcornerprogressbar.IconRoundCornerProgressBar.java", "BodyUseAPI": [], "Fixed commit": "01a7ee96b7e959a9363ff5d7789f86a82351800f", "Url": "https://api.github.com/repos/akexorcist/Android-RoundCornerProgressBar", "Date": "2015-04-20T02:28:00Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN)) { layoutBackground.getViewTreeObserver().removeOnGlobalLayoutListener(this); }else { layoutBackground.getViewTreeObserver().removeGlobalOnLayoutListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3409/buggy-version/library.src.main.java.com.akexorcist.roundcornerprogressbar.IconRoundCornerProgressBar.java", "BodyUseAPI": [], "Fixed commit": "01a7ee96b7e959a9363ff5d7789f86a82351800f", "Url": "https://api.github.com/repos/akexorcist/Android-RoundCornerProgressBar", "Date": "2015-04-20T02:28:00Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progressDialog) != null) progressDialog.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4739/buggy-version/CacheCleaner.src.main.java.com.frozendevs.cache.cleaner.activity.CleanerActivity.java", "BodyUseAPI": [], "Fixed commit": "3a5dbf3b10df934d8f9ff00ef606852481648a35", "Url": "https://api.github.com/repos/Frozen-Developers/android-cache-cleaner", "Date": "2014-01-06T01:08:01Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 1) { me.avery246813579.hotpotato.util.MessageUtil.sendTextMessage(sender, \"notEnoughArgs\"); }else { if ((me.avery246813579.hotpotato.HotPotato.findGame(player)) == null) { me.avery246813579.hotpotato.util.MessageUtil.sendTextMessage(sender, \"noArenaFound\"); return; } me.avery246813579.hotpotato.game.GameManager gameManager = me.avery246813579.hotpotato.HotPotato.findGame(args[1]); gameManager.setForceStart(true); for (me.avery246813579.hotpotato.game.GamePlayer gamePlayer : gameManager.getGamePlayers()) { me.avery246813579.hotpotato.util.MessageUtil.sendTextMessage(gamePlayer.getPlayer(), \"forceStart\", player.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6312/buggy-version/src.me.avery246813579.hotpotato.commands.StartCommand.java", "BodyUseAPI": ["me.avery246813579.hotpotato.HotPotato.findGame(java.lang.String)"], "Fixed commit": "8b57894ed117e618325ec24a95239a86fb74bfca", "Url": "https://api.github.com/repos/Avery246813579/HotPotato", "Date": "2015-08-28T04:15:08Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mResultHandler) == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/9032/buggy-version/uibackgroundjobmanager.src.main.java.com.desmond.uibackgroundjobmanager.TaskRunnable.java", "BodyUseAPI": [], "Fixed commit": "ab9c8e05c16187a3fef913bb6a91385be09ce1a6", "Url": "https://api.github.com/repos/boxme/AsyncManager", "Date": "2015-05-04T14:43:33Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.srcTuv) == null) { com.globalsight.ling.tm3.core.TuStorage.logger.warn((\"SRC TUV is NULL! TU id: \" + (data.id))); if (((data.tgtTuvs) != null) && ((data.tgtTuvs.size()) > 0)) { for (com.globalsight.ling.tm3.core.TM3Tuv<T> tuv : data.tgtTuvs) { com.globalsight.ling.tm3.core.TuStorage.logger.warn((\"Target TUV id: \" + (tuv.getId()))); } } continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3678/buggy-version/main6.ling.com.globalsight.ling.tm3.core.TuStorage.java", "BodyUseAPI": ["java.util.List<com.globalsight.ling.tm3.core.TM3Tuv<T>>.size()", "org.apache.log4j.Logger.warn(java.lang.String)"], "Fixed commit": "ee8ec6bcc996f3bb67186a344d31bdda3934387f", "Url": "https://api.github.com/repos/tingley/globalsight", "Date": "2015-03-27T09:54:19Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((localeLanguage) == null) || ((localeCountry) == null)) { final java.util.Locale locale = java.util.Locale.getDefault(); if ((localeLanguage) == null) com.orientechnologies.common.log.OLogManager.instance().warn(this, ((\"Information about storage locale is undefined (language is undefined) default locale \" + locale) + \" will be used\")); if ((localeCountry) == null) com.orientechnologies.common.log.OLogManager.instance().warn(this, ((\"Information about storage locale is undefined (country is undefined) default locale \" + locale) + \" will be used\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/444/buggy-version/core.src.main.java.com.orientechnologies.orient.core.config.OStorageConfiguration.java", "BodyUseAPI": [], "Fixed commit": "025dbcbafec124d78d95370719b185a48a94879d", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-06-27T15:31:37Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vs.jonas.client.model.RestopolyClient.getCurrentPlace(java.lang.String,user.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (currentPlace.getName().equals(place.getName())) { client.buyEstate(gameID, place, user); ui.getFrame().dispose(); }else { javax.swing.JOptionPane.showMessageDialog(null, (\"Du kannst nur ein Grundst\u00fcck erwerben,\" + \" wenn Du dich auch auf dem Grundst\u00fcck befindest!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4796/buggy-version/src.main.java.vs.jonas.client.controller.FieldController.java", "BodyUseAPI": ["vs.jonas.client.model.RestopolyClient.buyEstate(java.lang.String,vs.jonas.client.json.Place,vs.jonas.client.json.User)"], "Fixed commit": "adf58a0fdbaeb89658bf01700dcbcc8472489cd5", "Url": "https://api.github.com/repos/jnk111/VSPraktikum", "Date": "2016-06-20T11:51:42Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((permissions.length) == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7096/buggy-version/grantor.src.main.java.com.github.dfqin.grantor.PermissionsUtil.java", "BodyUseAPI": [], "Fixed commit": "c72ff8556810845c2502b77b1beb0e5bf2a36195", "Url": "https://api.github.com/repos/dfqin/PermissionGrantor", "Date": "2017-07-31T10:09:47Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((grantResult.length) == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7096/buggy-version/grantor.src.main.java.com.github.dfqin.grantor.PermissionsUtil.java", "BodyUseAPI": [], "Fixed commit": "c72ff8556810845c2502b77b1beb0e5bf2a36195", "Url": "https://api.github.com/repos/dfqin/PermissionGrantor", "Date": "2017-07-31T10:09:47Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (j < 0) { j = line.indexOf('.', i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3223/buggy-version/com.evolveum.logviewer.src.com.evolveum.logviewer.parsing.Parser.java", "BodyUseAPI": [], "Fixed commit": "316d089ae31809af31a70b1645cbdbf9b590bded", "Url": "https://api.github.com/repos/mederly/midpoint-log-viewer", "Date": "2016-09-14T11:42:42Z"},
{"Line": "=>572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity().getRequestedOrientation()) != (android.content.pm.ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED)) getActivity().setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4603/buggy-version/app.src.main.java.ar.rulosoft.mimanganu.ReaderFragment.java", "BodyUseAPI": [], "Fixed commit": "636b6dd552efbdbdb37c81bae37668de09247469", "Url": "https://api.github.com/repos/raulhaag/MiMangaNu", "Date": "2016-10-17T15:43:10Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.hasParent()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/993/buggy-version/src.com.soc.hud.Inventory.java", "BodyUseAPI": [], "Fixed commit": "df3aa33569bf59277484c09da0dde5d040451998", "Url": "https://api.github.com/repos/aimarrod/Sons-of-Cydonia", "Date": "2013-10-23T10:43:37Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.hasParent()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/993/buggy-version/src.com.soc.hud.Inventory.java", "BodyUseAPI": [], "Fixed commit": "df3aa33569bf59277484c09da0dde5d040451998", "Url": "https://api.github.com/repos/aimarrod/Sons-of-Cydonia", "Date": "2013-10-23T10:43:37Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (result != null) { iloss = java.lang.Double.valueOf(result.informationLoss.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5966/buggy-version/src.org.deidentifier.arx.BenchmarkEnvironment.java", "BodyUseAPI": ["result.informationLoss.toString()", "java.lang.Double.valueOf(result.informationLoss.toString())"], "Fixed commit": "daac5fe4266504e4509caf2f23754bbc366b39c4", "Url": "https://api.github.com/repos/arx-deidentifier/highdimensional-benchmark", "Date": "2015-07-06T09:42:39Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()", "java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((length == 1) && ((ziffern[0]) != '5')) { showUsage(((ziffern[0]) + \"ist keine G\ufffdltige Eingabe\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6754/buggy-version/src.main.java.de.lvm.client.KFZLabelerFrame.java", "BodyUseAPI": ["de.lvm.client.KFZLabelerFrame.showUsage(java.lang.String)"], "Fixed commit": "716a1fd2fa22084bb6aeebb6c8f350002123dbab", "Url": "https://api.github.com/repos/Marvin-Schoen/KFZ_Labeler", "Date": "2017-05-03T14:22:36Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (varName.startsWith(\"$$_xor_\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4092/buggy-version/client.src.main.java.org.evosuite.symbolic.solver.z3str2.Z3Str2ResultParser.java", "BodyUseAPI": [], "Fixed commit": "9f591665c48f5c362a196b717c90fd1ca3325a9e", "Url": "https://api.github.com/repos/EvoSuite/evosuite", "Date": "2015-11-20T20:05:44Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.worldObj.getTileEntity(com.amadornes.framez.network.packet.PacketStartMoving,com.amadornes.framez.network.packet.PacketStartMoving,com.amadornes.framez.network.packet.PacketStartMoving)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((te != null) && (te instanceof com.amadornes.framez.tile.TileMotor)) { com.amadornes.framez.tile.TileMotor motor = ((com.amadornes.framez.tile.TileMotor) (te)); com.amadornes.framez.movement.MovingStructure structure = new com.amadornes.framez.movement.MovingStructure(player.worldObj, direction, speed); structure.addBlocks(blocks); if (motor != null) motor.setStructure(structure); StructureTickHandler.INST.addStructure(structure); structure.tick(Phase.START); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6922/buggy-version/src.main.java.com.amadornes.framez.network.packet.PacketStartMoving.java", "BodyUseAPI": [], "Fixed commit": "a67a6569c110e8c8366093e264ff26190027dff3", "Url": "https://api.github.com/repos/amadornes/Framez", "Date": "2015-01-21T19:14:43Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.eyeseetea.malariacare.data.database.utils.Session.getUser()) != null) { isUserClosed = org.eyeseetea.malariacare.network.ServerAPIController.isUserClosed(org.eyeseetea.malariacare.data.database.utils.Session.getUser().getUid()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7402/buggy-version/app.src.main.java.org.eyeseetea.malariacare.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "5d6426343605af2f8af650dbbfec536819ce6011", "Url": "https://api.github.com/repos/EyeSeeTea/pictureapp", "Date": "2017-04-10T13:32:52Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sprint.getRawEnd_date()) != null) { org.joda.time.LocalDate enddate = new org.joda.time.LocalDate(sprint.getRawEnd_date()); org.joda.time.LocalDate startDate = new org.joda.time.LocalDate(com.qprogramming.tasq.support.Utils.convertStringToDate(sprintStart)); if (enddate.equals(startDate)) { return new com.qprogramming.tasq.support.ResultData(com.qprogramming.tasq.support.ResultData.WARNING, msg.getMessage(\"agile.sprint.startOnEnd\", new java.lang.Object[]{ sprint.getSprintNo(), sprintStart }, com.qprogramming.tasq.support.Utils.getCurrentLocale())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8431/buggy-version/src.main.java.com.qprogramming.tasq.agile.SprintController.java", "BodyUseAPI": ["org.springframework.context.MessageSource.getMessage(java.lang.String,java.lang.Object[],com.qprogramming.tasq.support.Utils.getCurrentLocale())", "com.qprogramming.tasq.agile.Sprint.getRawEnd_date()", "com.qprogramming.tasq.agile.Sprint.getSprintNo()"], "Fixed commit": "33432572e2e91a5f1764f272fcef446da68bedfb", "Url": "https://api.github.com/repos/q-programming/tasq", "Date": "2015-01-10T12:05:01Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((joiner) == null) { joiner = new su.j2e.rvjoiner.RvJoiner(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3023/buggy-version/app.src.main.java.be.ugent.zeus.hydra.fragments.sko.LineupFragment.java", "BodyUseAPI": [], "Fixed commit": "d23c7cb0d45f87d0c62dba36b844e5ef817261cd", "Url": "https://api.github.com/repos/ZeusWPI/hydra-android", "Date": "2016-09-21T16:07:13Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.forge.addon.javaee.jpa.ui.NewEntityCommand.getSelectedProject(builder.getUIContext())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (project.hasFacet(org.jboss.forge.addon.parser.java.facets.JavaSourceFacet.class)) { org.jboss.forge.addon.parser.java.facets.JavaSourceFacet facet = project.getFacet(org.jboss.forge.addon.parser.java.facets.JavaSourceFacet.class); targetLocation.setDefaultValue(facet.getSourceFolder()).setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/282/buggy-version/javaee.impl.src.main.java.org.jboss.forge.addon.javaee.jpa.ui.NewEntityCommand.java", "BodyUseAPI": ["org.jboss.forge.addon.projects.Project.getFacet(java.lang.Class)"], "Fixed commit": "8f7e1165f0683af1178989cddc6c26ac01288e83", "Url": "https://api.github.com/repos/forge/core", "Date": "2013-08-28T18:25:35Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["c.getDays().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (days != null) { for (java.lang.String d : days) { if (((day == (scheduler.Schedule.DAYS.indexOf(d))) && (time >= (t.getStartNum()))) && (time <= ((t.getEndNum()) - 5))) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3682/buggy-version/src.scheduler.Schedule.java", "BodyUseAPI": [], "Fixed commit": "e52e217cdfd11f6c77c4223132f6ac79ced74c4d", "Url": "https://api.github.com/repos/VirginiaTech/pScheduler", "Date": "2017-06-08T18:29:08Z"},
{"Line": "=>575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (option.debug) { dependClassNameMap = new java.util.HashMap<java.lang.String, java.lang.String>(); for (java.lang.String className : rootClassNameSet) { dependClassNameMap.put(className, className); } }else { dependClassNameMap = com.oneliang.thirdparty.asm.util.AsmUtil.findAllDependClassNameMap(rootClassNameSet, classDescriptionMap, referencedClassDescriptionListMap, allClassNameMap, (!(option.debug))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1470/buggy-version/src.main.java.com.oneliang.tools.autodex.AutoDexUtil.java", "BodyUseAPI": ["com.oneliang.thirdparty.asm.util.AsmUtil.findAllDependClassNameMap(java.util.Set<java.lang.String>,java.util.Map<java.lang.String, com.oneliang.thirdparty.asm.util.ClassDescription>,java.util.Map<java.lang.String, java.util.List<com.oneliang.thirdparty.asm.util.ClassDescription>>,java.util.Map<java.lang.String, java.lang.String>,boolean)"], "Fixed commit": "6ce4353d43d2c25e2208fd98183569fe91a28539", "Url": "https://api.github.com/repos/oneliang/auto-dex", "Date": "2017-03-31T10:24:45Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name.compareTo(\"\")) == 0) { name = \"cap-\" + (sdf.format(date)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5884/buggy-version/src.net.sf.memoranda.Capture.java", "BodyUseAPI": [], "Fixed commit": "ee418424247ef4f116f7960de7185e3fc1fcd1a8", "Url": "https://api.github.com/repos/ser316asu/Dahlem_SER316", "Date": "2017-04-09T18:30:59Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nodeHashTable.get(file)) != null) { file = file.concat(((\" (\" + (i++)) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3671/buggy-version/src.graph.results.CoverageResults.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)"], "Fixed commit": "0b99c8c415b7f5b2f55f8e6738a07f7e75175913", "Url": "https://api.github.com/repos/xcegin/PUTVT", "Date": "2017-04-13T19:00:27Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getVariables().size()) == 0) allConstants.add(toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7031/buggy-version/src.perl.aaron.TruthTrees.logic.FunctionSymbol.java", "BodyUseAPI": [], "Fixed commit": "1cfd6dfb3f08ee40b8c3a4a68e96b18c1d95ac6b", "Url": "https://api.github.com/repos/AaronPerl/TFTrees", "Date": "2016-05-13T11:24:10Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getComponentType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (typ != null) { if (!(classes[i].getName().equals(typ.getName()))) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/947/buggy-version/Etyllica.src.br.com.etyllica.core.event.Action.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.Class<?>.getName()"], "Fixed commit": "de2fe70361bbe2e08c612a26d9d0b532b083a7c4", "Url": "https://api.github.com/repos/yuripourre/etyllica", "Date": "2013-12-12T02:52:09Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Document.getElementsByTagName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (listRecords.item(i).hasAttributes()) { org.w3c.dom.Node n = listRecords.item(i).getAttributes().getNamedItem(\"status\"); if (n != null) { if ((n.getTextContent()) != null) id.getHeader().setStatus(n.getTextContent().toLowerCase()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1050/buggy-version/src.main.java.com.lyncode.xoai.serviceprovider.iterators.IdentifierIterator.java", "BodyUseAPI": ["org.w3c.dom.NodeList.item(int)", "org.w3c.dom.Node.getAttributes()", "org.w3c.dom.NamedNodeMap.getNamedItem(java.lang.String)"], "Fixed commit": "a25cf93b1861608d8ed2d52b224b243fb0aca511", "Url": "https://api.github.com/repos/lyncode/xoai", "Date": "2013-03-14T16:20:31Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (args[0].equals(\"makecontexts\")) { java.lang.String graphname = args[1]; org.opentree.taxonomy.MainRunner.taxdb = new org.opentree.graphdb.GraphDatabaseAgent(graphname); te = new org.opentree.taxonomy.TaxonomySynthesizer(org.opentree.taxonomy.MainRunner.taxdb); java.lang.System.out.println(\"building context-specific indexes\"); te.makeContexts(); }else if (args[0].equals(\"makegenusindexes\")) { java.lang.String graphname = args[1]; org.opentree.taxonomy.MainRunner.taxdb = new org.opentree.graphdb.GraphDatabaseAgent(graphname); te = new org.opentree.taxonomy.TaxonomySynthesizer(org.opentree.taxonomy.MainRunner.taxdb); java.lang.System.out.println(\"making species indexes by genus\"); te.makeGenericIndexes(); }else { java.lang.System.err.println(\"\\nERROR: not a known command\\n\"); org.opentree.taxonomy.MainRunner.printHelp(); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6217/buggy-version/src.main.java.org.opentree.taxonomy.MainRunner.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "9a934874fc511537815be088b4c657f715773a54", "Url": "https://api.github.com/repos/OpenTreeOfLife/taxomachine", "Date": "2014-08-05T23:27:28Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maskSize == 0) maskSize = 0.01F;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4368/buggy-version/blurify.src.main.java.com.chteuchteu.blurify.hlpr.BlurUtil.java", "BodyUseAPI": [], "Fixed commit": "5d44da1256c6fef68ec2f1500d3a5fd0ea2a5028", "Url": "https://api.github.com/repos/chteuchteu/Blurify", "Date": "2015-03-01T13:12:49Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (taskType == 'm') taskListeningPort = (org.apache.hadoop.yarn.server.utils.U2Proto.MAP_BASE_PORT) + taskId; else if (taskType == 'r') { taskListeningPort = (org.apache.hadoop.yarn.server.utils.U2Proto.BASE_PORT) + taskId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/128/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-nodemanager.src.main.java.org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch.java", "BodyUseAPI": [], "Fixed commit": "22e2440984a10ee3071eff4c09e6d8a65b271fd9", "Url": "https://api.github.com/repos/sandy197/Phadoop-2.2.0-src", "Date": "2014-03-16T02:11:57Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.javagil.columbo.internal.MethodVisitor.findConstructor(de.javagil.columbo.internal.BytecodeUtil.rawType(clazz),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (constructor != null) { referenceVisitor.onConstructorCall(referrer, constructor); notifyParameterTypes(referrer, constructor.getParameterTypes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1796/buggy-version/src.main.java.de.javagil.columbo.internal.MethodVisitor.java", "BodyUseAPI": ["de.javagil.columbo.internal.MethodVisitor.notifyParameterTypes(de.javagil.columbo.api.Referrer,java.lang.Class<?>[])", "java.lang.reflect.Constructor<?>.getParameterTypes()", "de.javagil.columbo.api.ReferenceVisitor.onConstructorCall(de.javagil.columbo.api.Referrer,java.lang.reflect.Constructor<?>)"], "Fixed commit": "379a9155a61667e1398b6332ea7798d1f9a46115", "Url": "https://api.github.com/repos/mhoennig/columbo", "Date": "2015-04-16T13:36:05Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ei.drishti.reporting.repository.cache.CacheableRepository<T>.fetch(T)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (objectInDB == null) { cacheableRepository.save(object); objectInDB = cacheableRepository.fetch(object); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1068/buggy-version/drishti-reporting.src.main.java.org.ei.drishti.reporting.repository.cache.CachingRepository.java", "BodyUseAPI": [], "Fixed commit": "02bae99b210190a9ef3de1d77a6af4d1f35ad5fc", "Url": "https://api.github.com/repos/modilabs/dristhi", "Date": "2012-07-02T10:11:13Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.DBController.findByUserName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (!(foundPerson == null)) if (password.equals(foundPerson.getPassword())) { if (database.logInPerson(foundPerson)) { if (foundPerson.getIsAdmin()) { return new controllers.AdminUI(((controllers.Admin) (foundPerson))); }else { return new controllers.UserUI(((controllers.User) (foundPerson))); } }else throw new java.lang.IllegalArgumentException(\"Password incorrect\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8003/buggy-version/src.controllers.PersonController.java", "BodyUseAPI": ["controllers.Person.getPassword()", "java.lang.String.equals(foundPerson.getPassword())", "controllers.DBController.logInPerson(controllers.Person)", "controllers.Person.getIsAdmin()"], "Fixed commit": "3799dae15f7135634d116b150591ce2f36d57c35", "Url": "https://api.github.com/repos/yogurtparfait/CMC_Project", "Date": "2016-04-04T16:40:25Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (this.useSpinner) { setupIncrementCompWidthHint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2757/buggy-version/uk.ac.gda.common.rcp.src.uk.ac.gda.ui.components.NumberEditorControl.java", "BodyUseAPI": [], "Fixed commit": "48e94f71b1b77d9376d3a0b40720ad7c199724ba", "Url": "https://api.github.com/repos/openGDA/gda-common-rcp", "Date": "2014-03-19T17:51:44Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 0) { sb.deleteCharAt(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7148/buggy-version/src.main.java.hu.sztaki.ilab.longneck.weblog.parser.postprocessor.UrlParamsPostProcessor.java", "BodyUseAPI": ["java.lang.StringBuffer.deleteCharAt(int)"], "Fixed commit": "18ec5bd14fab5800890fdb856c8ed92b51757923", "Url": "https://api.github.com/repos/MTA-SZTAKI/longneck-weblog", "Date": "2013-08-15T15:28:46Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sb.length()) > 0) sb2.deleteCharAt(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7148/buggy-version/src.main.java.hu.sztaki.ilab.longneck.weblog.parser.postprocessor.UrlParamsPostProcessor.java", "BodyUseAPI": [], "Fixed commit": "18ec5bd14fab5800890fdb856c8ed92b51757923", "Url": "https://api.github.com/repos/MTA-SZTAKI/longneck-weblog", "Date": "2013-08-15T15:28:46Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mcjty.rftools.blocks.relay.RelayTileEntity.getEnergyStored(ForgeDirection.DOWN)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (energyStored <= 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/989/buggy-version/src.main.java.com.mcjty.rftools.blocks.relay.RelayTileEntity.java", "BodyUseAPI": [], "Fixed commit": "a373b9dd456f788dddfb686cd91f474b62a731dc", "Url": "https://api.github.com/repos/McJty/RFTools", "Date": "2014-10-03T06:29:26Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mcjty.rftools.blocks.relay.RelayTileEntity.getEnergyStored(ForgeDirection.DOWN)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rf <= energyStored) { rfToGive = rf; }else { rfToGive = energyStored; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/989/buggy-version/src.main.java.com.mcjty.rftools.blocks.relay.RelayTileEntity.java", "BodyUseAPI": [], "Fixed commit": "a373b9dd456f788dddfb686cd91f474b62a731dc", "Url": "https://api.github.com/repos/McJty/RFTools", "Date": "2014-10-03T06:29:26Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((forUri.getNameCount()) > 1) { java.nio.file.Path uriAuthority = forUri.getName(0); java.nio.file.Path uriPath = forUri.subpath(1, forUri.getNameCount()); if (!(uriPath.isAbsolute())) { uriPath = java.nio.file.Paths.get(\"/\", uriPath.toString()); } return new java.net.URI(org.dataconservancy.dcs.util.UriUtility.BAG_URI_SCHEME, uriAuthority.toString(), uriPath.toString(), null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2922/buggy-version/dcs-shared-util.src.main.java.org.dataconservancy.dcs.util.UriUtility.java", "BodyUseAPI": ["java.nio.file.Path.getName(int)", "java.nio.file.Path.subpath(int,int)", "java.nio.file.Path.getNameCount()"], "Fixed commit": "ead991aa6c5c61f181f3aed03d98725b135b42bd", "Url": "https://api.github.com/repos/emetsger/dcs", "Date": "2015-11-25T16:48:05Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) { listener.onSearchQuery(newText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/920/buggy-version/app.src.main.java.io.bloco.cardcase.presentation.common.SearchToolbar.java", "BodyUseAPI": [], "Fixed commit": "8c66038b595ae04209e49cf93435ce6d9711f7da", "Url": "https://api.github.com/repos/blocoio/cardcase", "Date": "2016-04-16T15:32:07Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((teaser) != null) { teaser.mutate(SpanMode.TEASING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7898/buggy-version/docking-frames-core.src.bibliothek.gui.dock.station.support.ListSpanStrategy.java", "BodyUseAPI": [], "Fixed commit": "fb26b9ac8c44c0684650db4bdaa76e87451801c6", "Url": "https://api.github.com/repos/Benoker/DockingFrames", "Date": "2013-02-06T18:13:36Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((teaser) == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7898/buggy-version/docking-frames-core.src.bibliothek.gui.dock.station.support.ListSpanStrategy.java", "BodyUseAPI": [], "Fixed commit": "fb26b9ac8c44c0684650db4bdaa76e87451801c6", "Url": "https://api.github.com/repos/Benoker/DockingFrames", "Date": "2013-02-06T18:13:36Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((teaser) != null) { teaser.mutate(SpanMode.OFF); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7898/buggy-version/docking-frames-core.src.bibliothek.gui.dock.station.support.ListSpanStrategy.java", "BodyUseAPI": [], "Fixed commit": "fb26b9ac8c44c0684650db4bdaa76e87451801c6", "Url": "https://api.github.com/repos/Benoker/DockingFrames", "Date": "2013-02-06T18:13:36Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((adapter) != null) && ((adapter.getItemCount()) != 0)) { com.benjaminearley.mysubs.sync.MySubsSyncAdapter.syncImmediately(this); }else { swipeRefreshLayout.setRefreshing(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5473/buggy-version/app.src.main.java.com.benjaminearley.mysubs.StoryListActivity.java", "BodyUseAPI": [], "Fixed commit": "3650e0572397249775cbd2cc5160e7e6d87effcc", "Url": "https://api.github.com/repos/BenjaminEarley/Capstone-Project", "Date": "2016-04-28T01:25:02Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model.metadata) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3705/buggy-version/src.main.java.com.cjmalloy.torrentfs.editor.controller.MainController.java", "BodyUseAPI": [], "Fixed commit": "6210cb9d9311fdf847d7f2a497a298ed5ac3f49a", "Url": "https://api.github.com/repos/cjmalloy/tfs-gui", "Date": "2014-11-24T01:54:19Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model.metadata) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3705/buggy-version/src.main.java.com.cjmalloy.torrentfs.editor.controller.MainController.java", "BodyUseAPI": [], "Fixed commit": "6210cb9d9311fdf847d7f2a497a298ed5ac3f49a", "Url": "https://api.github.com/repos/cjmalloy/tfs-gui", "Date": "2014-11-24T01:54:19Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.bootsfaces.component.panel.Panel.getAccordionParent()", "net.bootsfaces.component.panel.Panel.isCollapsible()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (!(isCollapsible && (null == accordionParent))) { rw.writeAttribute(\"id\", clientId, \"id\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/620/buggy-version/src.main.java.net.bootsfaces.component.panel.PanelRenderer.java", "BodyUseAPI": [], "Fixed commit": "88723814ddb27941c40694501e1b4e333aba8867", "Url": "https://api.github.com/repos/TheCoder4eu/BootsFaces-OSP", "Date": "2016-07-01T13:50:29Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (story == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6486/buggy-version/src.ca.ualberta.cmput301f13t13.storyhoard.controllers.LocalStoryController.java", "BodyUseAPI": [], "Fixed commit": "c3b258c1cf7eea880d29dfd93d124e0ccee70370", "Url": "https://api.github.com/repos/CMPUT301F13T13/StoryHoard", "Date": "2013-11-27T22:47:19Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getSystemUiVisibility()) & (SYSTEM_UI_FLAG_HIDE_NAVIGATION)) != 0) { relativeLayout.setVisibility(com.dunrite.pixbar.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/155/buggy-version/app.src.main.java.com.dunrite.pixbar.ButtonLayer.java", "BodyUseAPI": [], "Fixed commit": "2f44973a999ae02c910d0b4896ad5ed01a0fecde", "Url": "https://api.github.com/repos/dunrite/pixbar", "Date": "2017-04-10T23:09:44Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(bitmap.hasAlpha())) { if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.HONEYCOMB)) { bitmap.setHasAlpha(true); }else { bitmap = addAlphaChannel(bitmap); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/615/buggy-version/Paintroid.src.org.catrobat.paintroid.MainActivity.java", "BodyUseAPI": ["android.graphics.Bitmap.setHasAlpha(boolean)", "org.catrobat.paintroid.MainActivity.1.addAlphaChannel(android.graphics.Bitmap)"], "Fixed commit": "2bab060793fbe95f4321030c1b2d6653563c0876", "Url": "https://api.github.com/repos/Catrobat/Paintroid", "Date": "2014-09-04T13:26:29Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.maps.GoogleMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(points.get(((points.size()) - 1))).title(\"Cilj\").snippet(race.getFinish()))", "com.google.android.gms.maps.GoogleMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(points.get(0)).title(\"Start\").snippet(race.getStart()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((m1.getPosition().latitude) < (m2.getPosition().latitude)) { southwest.lat = m1.getPosition().latitude; northeast.lat = m2.getPosition().latitude; }else { southwest.lat = m2.getPosition().latitude; northeast.lat = m1.getPosition().latitude; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1308/buggy-version/SportApp.app.src.main.java.com.example.rivios_.sportapp.activities.jogging.JoggingRaceDetails.java", "BodyUseAPI": ["com.google.android.gms.maps.model.Marker.getPosition()", "com.google.android.gms.maps.model.Marker.getPosition()", "com.google.android.gms.maps.model.Marker.getPosition()", "com.google.android.gms.maps.model.Marker.getPosition()"], "Fixed commit": "320d8f65947868ff106b558bbcea75208ec377ff", "Url": "https://api.github.com/repos/mivosevic/SportApp-projekt", "Date": "2017-09-19T07:56:07Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.maps.GoogleMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(points.get(0)).title(\"Start\").snippet(race.getStart()))", "com.google.android.gms.maps.GoogleMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(points.get(((points.size()) - 1))).title(\"Cilj\").snippet(race.getFinish()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((m1.getPosition().longitude) < (m2.getPosition().latitude)) { southwest.lng = m1.getPosition().longitude; northeast.lng = m2.getPosition().longitude; }else { southwest.lng = m2.getPosition().longitude; northeast.lng = m1.getPosition().longitude; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1308/buggy-version/SportApp.app.src.main.java.com.example.rivios_.sportapp.activities.jogging.JoggingRaceDetails.java", "BodyUseAPI": ["com.google.android.gms.maps.model.Marker.getPosition()", "com.google.android.gms.maps.model.Marker.getPosition()", "com.google.android.gms.maps.model.Marker.getPosition()", "com.google.android.gms.maps.model.Marker.getPosition()"], "Fixed commit": "320d8f65947868ff106b558bbcea75208ec377ff", "Url": "https://api.github.com/repos/mivosevic/SportApp-projekt", "Date": "2017-09-19T07:56:07Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxErrorRetry) > 0) clientConfiguration.setMaxErrorRetry(maxErrorRetry);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8132/buggy-version/src.main.java.jp.classmethod.aws.gradle.s3.AmazonS3PluginExtension.java", "BodyUseAPI": [], "Fixed commit": "476a0f848dc21f7165e71413f9ccd7d36012cd71", "Url": "https://api.github.com/repos/silasdavis/gradle-aws-plugin", "Date": "2015-08-13T16:46:17Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(message.hasField(\"interpolatorName\"))) { interpolatorName = \"Linear\"; com.opengamma.financial.fudgemsg.VolatilitySurfaceDefinitionBuilder.s_logger.warn(\"Inserting Linear interpolation as future version doesn't require an interpolator\"); }else { interpolatorName = message.getString(\"interpolatorName\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7066/buggy-version/projects.OG-Financial.src.com.opengamma.financial.fudgemsg.VolatilitySurfaceDefinitionBuilder.java", "BodyUseAPI": ["org.fudgemsg.FudgeMsg.getString(java.lang.String)"], "Fixed commit": "19caf1a38759c3544c9a45f091e78b6dc148cd50", "Url": "https://api.github.com/repos/OpenGamma/OG-Platform", "Date": "2011-07-07T10:44:56Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.argon.foto.home.FotoItemDetailActivity.class.isInstance(getActivity())) { mImageFetcher = ((com.argon.foto.home.FotoItemDetailActivity) (getActivity())).getImageFetcher(); android.util.Log.e(\"SD_TRACE\", (\"loadImage... ... ... mImageUrl: \" + (mImageUrl))); mImageFetcher.setImageFadeIn(true); mImageFetcher.loadImage(mImageUrl, mImageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3734/buggy-version/src.com.argon.foto.home.FotoItemDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "01ccbae874cf26d3eb932988b19b529cbf826daf", "Url": "https://api.github.com/repos/djfkue/Foto", "Date": "2014-08-25T06:29:56Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { android.view.ViewTreeObserver observer = mImageView.getViewTreeObserver(); observer.addOnPreDrawListener(new android.view.ViewTreeObserver.OnPreDrawListener() { @java.lang.Override public boolean onPreDraw() { mImageView.getViewTreeObserver().removeOnPreDrawListener(this); int[] screenLocation = new int[2]; mImageView.getLocationOnScreen(screenLocation); android.util.Log.e(\"SD_TRACE\", (((\"screenLocation: \" + (screenLocation[0])) + \", \") + (screenLocation[1]))); android.util.Log.e(\"SD_TRACE\", (\"screenHeight: \" + (mImageView.getHeight()))); return true; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3734/buggy-version/src.com.argon.foto.home.FotoItemDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "01ccbae874cf26d3eb932988b19b529cbf826daf", "Url": "https://api.github.com/repos/djfkue/Foto", "Date": "2014-08-25T06:29:56Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((View.OnClickListener.class.isInstance(getActivity())) && (com.argon.foto.util.Utils.hasHoneycomb())) { mImageView.setOnClickListener(((android.view.View.OnClickListener) (getActivity()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3734/buggy-version/src.com.argon.foto.home.FotoItemDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "01ccbae874cf26d3eb932988b19b529cbf826daf", "Url": "https://api.github.com/repos/djfkue/Foto", "Date": "2014-08-25T06:29:56Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDrawable()) != null) { ratio = ((float) (getDrawable().getIntrinsicHeight())) / (getDrawable().getIntrinsicWidth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3734/buggy-version/src.com.argon.foto.widget.FotoImageView.java", "BodyUseAPI": [], "Fixed commit": "01ccbae874cf26d3eb932988b19b529cbf826daf", "Url": "https://api.github.com/repos/djfkue/Foto", "Date": "2014-08-25T06:29:56Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (noOfChildren == 0) { noOfChildren = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8933/buggy-version/src.main.java.org.ivis.layout.LNode.java", "BodyUseAPI": [], "Fixed commit": "3f7199178e10ff78fea2bb94429a16a21c6634cf", "Url": "https://api.github.com/repos/iVis-at-Bilkent/chilay", "Date": "2017-08-02T18:54:11Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((inventoryNodeList == null) || ((inventoryNodeList.getLength()) < 1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7339/buggy-version/local_store.src.org.onepf.oms.data.Application.java", "BodyUseAPI": [], "Fixed commit": "ebcb0f4e176b55fb784d85ba255a1962e4569f2e", "Url": "https://api.github.com/repos/GrimReio/OpenIAB", "Date": "2013-09-26T09:42:35Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (type != null) { new com.edwardhand.mobrider.rider.RideType(type, java.lang.Double.valueOf(mob.getDouble(\"speed\")).floatValue(), mob.getString(\"noise\"), mob.getDouble(\"chance\"), mob.getDouble(\"cost\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4373/buggy-version/src.main.java.com.edwardhand.mobrider.ConfigManager.java", "BodyUseAPI": [], "Fixed commit": "654665241bd7d38a8a01fca0c593ee81eb59e47b", "Url": "https://api.github.com/repos/mung3r/MobRider", "Date": "2014-04-19T19:27:26Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.sungjae.app.showmethemoney.data.DataMap.readString(DataMapKey.ERROR_TOAST_CONTENT).isEmpty()) == false) { mBuilder = createNotification(\"ERROR\", com.sungjae.app.showmethemoney.data.DataMap.readString(DataMapKey.ERROR_TOAST_CONTENT), Notification.DEFAULT_ALL); mNotificationManager.notify(3, mBuilder.build()); android.widget.Toast.makeText(this, com.sungjae.app.showmethemoney.data.DataMap.readString(DataMapKey.ERROR_TOAST_CONTENT), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5638/buggy-version/app.src.main.java.com.sungjae.app.showmethemoney.service.OperationService.java", "BodyUseAPI": [], "Fixed commit": "5c45d3fd4fad44b9276a21a2a8d520a5458a8eba", "Url": "https://api.github.com/repos/jaebae/ShowMeTheMoney", "Date": "2017-07-25T08:14:05Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getPreferences(Context.MODE_PRIVATE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mUser.getUid()) != (sharedPref.getString(\"id\", \"\"))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2812/buggy-version/app.src.main.java.be.howest.nmct.hellocal.ProfileFragment.java", "BodyUseAPI": [], "Fixed commit": "2dba4f29760522bab81d718513356bada910a363", "Url": "https://api.github.com/repos/FBeuselinck/HelLOCAL", "Date": "2017-01-26T13:59:07Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cookies) != null) { edu.caltech.ipac.firefly.server.network.HttpServices.executeMethod(filePost, userId, passwd, cookies); }else { edu.caltech.ipac.firefly.server.network.HttpServices.executeMethod(filePost, userId, passwd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6532/buggy-version/src.firefly.java.edu.caltech.ipac.firefly.server.util.multipart.MultiPartPostBuilder.java", "BodyUseAPI": [], "Fixed commit": "cb569c1c9a89dced0a45e10739b5470200b8b3da", "Url": "https://api.github.com/repos/Caltech-IPAC/firefly", "Date": "2016-08-19T18:51:11Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!questGiven) quests.add(q);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/842/buggy-version/src.game.player.Player.java", "BodyUseAPI": [], "Fixed commit": "53edfa4466c59fe91ee1b5c5675e0852a00be9ae", "Url": "https://api.github.com/repos/anubiann00b/JourneyOfFear", "Date": "2014-05-19T04:10:10Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(logDir.endsWith(java.io.File.separator))) logDir += java.io.File.separator;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/971/buggy-version/src.main.java.com.jblur.acme_client.Application.java", "BodyUseAPI": [], "Fixed commit": "d4942e8b4e3756c651bae85ae66605a972fca821", "Url": "https://api.github.com/repos/porunov/acme_client", "Date": "2017-02-22T20:52:03Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getIntent().getExtras()) != null) { pos = this.getIntent().getExtras().getInt(SavedListScreen.GRID_ITEM_POS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2784/buggy-version/Drop.src.com.example.drop.GalleryScreen.java", "BodyUseAPI": [], "Fixed commit": "61fa77387e9710998f1139f44ffb624db6888996", "Url": "https://api.github.com/repos/zsweigart/Drop", "Date": "2014-04-06T20:45:21Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.xelitexirish.logbot.handlers.FileHandler.doesFileExist(baseFileDir))) baseFileDir.mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/447/buggy-version/src.main.java.com.xelitexirish.logbot.handlers.FileHandler.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "5c53c1707842600e13137edc4b8191767858930b", "Url": "https://api.github.com/repos/TCDG/LogBot-Discord", "Date": "2016-10-24T01:04:24Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.xelitexirish.logbot.handlers.FileHandler.doesFileExist(tempLogFile)) tempLogFile.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/447/buggy-version/src.main.java.com.xelitexirish.logbot.handlers.FileHandler.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "5c53c1707842600e13137edc4b8191767858930b", "Url": "https://api.github.com/repos/TCDG/LogBot-Discord", "Date": "2016-10-24T01:04:24Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (processor instanceof ro.isdc.wro.model.resource.processor.SupportedResourceTypeProvider) { supportedType = ((ro.isdc.wro.model.resource.processor.SupportedResourceTypeProvider) (processor)).getSupportedResourceType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/129/buggy-version/wro4j-core.src.main.java.ro.isdc.wro.model.resource.processor.ProcessorsUtils.java", "BodyUseAPI": [], "Fixed commit": "117099643249dd28587f3e2c64a33367007cdd28", "Url": "https://api.github.com/repos/alexo/wro4j", "Date": "2011-05-20T15:05:57Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((field.getModifierList().hasModifierProperty(PsiModifier.PRIVATE)) || (field.getModifierList().hasModifierProperty(PsiModifier.PUBLIC))) || (field.getModifierList().hasModifierProperty(PsiModifier.PROTECTED))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3594/buggy-version/lombok-plugin.src.main.java.de.plushnikov.intellij.plugin.extension.LombokCompletionContributor.java", "BodyUseAPI": [], "Fixed commit": "7fd3d9d0a4a86f0ff919dbd2aabbad9ea1ec2e60", "Url": "https://api.github.com/repos/Lekanich/lombok-intellij-plugin", "Date": "2014-05-20T10:43:51Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sLink.exists())) { ch.systemsx.sybit.crkwebui.server.jmol.servlets.LatticeGraphServlet.logger.info(\"Creating symbolic link {} to file {}\", sLink.toString(), structFile.toString()); java.nio.file.Files.createSymbolicLink(sLink.toPath(), structFile.toPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2566/buggy-version/eppic-wui.src.main.java.ch.systemsx.sybit.crkwebui.server.jmol.servlets.LatticeGraphServlet.java", "BodyUseAPI": ["java.nio.file.Files.createSymbolicLink(java.nio.file.Path,java.nio.file.Path)", "java.io.File.toString()", "java.io.File.toPath()", "org.slf4j.Logger.info(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "5720960994c020a890cad3c989ea71f6ad9471a1", "Url": "https://api.github.com/repos/sbliven/eppic", "Date": "2016-06-24T06:03:07Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) { head = newHead; tail = newHead; (size)++; }else { newHead.next = head; head = newHead; (size)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7613/buggy-version/src.list.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "38a8e20379da4d2c69c5196d8452a7385b899d51", "Url": "https://api.github.com/repos/amghannam/Linked-List-Stack-Queue", "Date": "2017-01-22T03:31:14Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.stage.FileChooser.showSaveDialog(javafx.stage.Stage)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (file == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1905/buggy-version/Impromptune.src.gen_settings.GenSettings.java", "BodyUseAPI": [], "Fixed commit": "bd42f78b5c1f00e4d9a35f185ca6b98b06755771", "Url": "https://api.github.com/repos/phill117/Impromptune", "Date": "2015-04-10T03:43:29Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBitmap) != null) { float offsetForDescription = ((mDynamicDetailLayout) != null) ? mDynamicDetailLayout.getHeight() : 0; canvas.save(); canvas.drawColor(Color.TRANSPARENT); canvas.drawBitmap(mBitmap, textPosition[0], (((textPosition[1]) + (offsetForTitle)) + offsetForDescription), null); canvas.restore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1113/buggy-version/src.com.github.amlcurran.showcaseview.TextDrawer.java", "BodyUseAPI": [], "Fixed commit": "6405e39607d45a907a0c4818548ba33aff1219dd", "Url": "https://api.github.com/repos/Limbika/ShowcaseView", "Date": "2014-07-21T11:33:24Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oneOffSensing) { com.ubhave.sensormanager.config.SensorConfig sensorConfig = sensorData.getSensorConfig(); sensorConfig.removeParameter(SensorConfig.POST_SENSE_SLEEP_LENGTH_MILLIS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2088/buggy-version/src.com.ubhave.sensormanager.tasks.PullSensorTask.java", "BodyUseAPI": [], "Fixed commit": "7c7b962c818cf3c944ad6ef3e5c25075b965da1c", "Url": "https://api.github.com/repos/nlathia/SensorManager", "Date": "2012-11-19T21:45:32Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r < 1000) { normalizedRadius = r * 1000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3216/buggy-version/gmsworldlayers.src.main.java.net.gmsworld.server.layers.HotelsBookingUtils.java", "BodyUseAPI": [], "Fixed commit": "6e5e58e3018d096d82035b0be7c8b4daec80d8ff", "Url": "https://api.github.com/repos/jstakun/gms-world-server", "Date": "2015-11-14T12:33:25Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jobviewer.db.objects.ImageObject.getImage_string()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((imagestring.indexOf(Constants.IMAGE_STRING_INITIAL)) >= 0) { }else { imagestring = (com.jobviewer.util.Constants.IMAGE_STRING_INITIAL) + imagestring; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3308/buggy-version/JobViewer.src.com.jobviewer.provider.JobViewerDBHandler.java", "BodyUseAPI": [], "Fixed commit": "b702c3d9909d314267ed8ee97b9ae565aeb77149", "Url": "https://api.github.com/repos/raghunaikbadde/FieldViewer", "Date": "2016-06-14T05:15:02Z"},
{"Line": "=>598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof java.lang.Integer) { return ((java.lang.Integer) (value)); }else if (value instanceof java.lang.String) { try { return java.lang.Integer.parseInt(((java.lang.String) (value))); } catch (java.lang.Exception e) { return 0; } }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8973/buggy-version/base.org.spinsuite.util.DisplayType.java", "BodyUseAPI": [], "Fixed commit": "7f0b6868cd9554f3b687e0cea00308150f1e91f2", "Url": "https://api.github.com/repos/adempiere/spin-suite", "Date": "2014-11-04T17:02:00Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dexPatch)) { lastPatchFile = getLastPatchFile(baseApkBO.getVersionName(), productName, outPatchDir); com.taobao.android.tpatch.utils.PatchUtils.getTpatchClassDef(lastPatchFile, bundleClassMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4317/buggy-version/atlas-gradle-plugin.dexpatch.src.main.java.com.taobao.android.TPatchTool.java", "BodyUseAPI": [], "Fixed commit": "921e220ff361e94eb5c21d74aa4881c45729ad52", "Url": "https://api.github.com/repos/alibaba/atlas", "Date": "2017-11-02T15:38:43Z"},
{"Line": "=>656", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cd.frame.isDefined(pkgName)) { type = cd.frame.getVarType(pkgName); if (type == null) { type = new com.iconmaster.source.compile.DataType(true); } }else { type = cd.pkg.getField(pkgName).getType(); if (type == null) { type = new com.iconmaster.source.compile.DataType(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/277/buggy-version/src.com.iconmaster.source.compile.SourceCompiler.java", "BodyUseAPI": ["cd.pkg.getField(pkgName).getType()", "cd.frame.getVarType(java.lang.String)", "cd.pkg.getField(java.lang.String)"], "Fixed commit": "1444810ef347f721d7ab3bff42c1e1013fff5144", "Url": "https://api.github.com/repos/iconmaster5326/Source", "Date": "2014-11-08T00:30:17Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cp.hw3.query.SearchEngine.search(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result == null) { java.lang.System.out.println(\"No result!\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6405/buggy-version/src.main.java.cp.hw3.query.SearchEngine.java", "BodyUseAPI": [], "Fixed commit": "382d32a04cf2071308a1e1ca7c6ff14ee9c6e88a", "Url": "https://api.github.com/repos/yuzzwx/CP2015-hw3-PageRank", "Date": "2015-06-25T06:18:43Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((thisCred == (Credential.Pass.ANY)) || (thisCred == (Credential.Pass.METERED))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/9284/buggy-version/src.com.src.model.ParkingLot.java", "BodyUseAPI": [], "Fixed commit": "30f0ce63cef53a8b6c774b097650593e8ce5ed50", "Url": "https://api.github.com/repos/JoeAcanfora/VTParkingMapper", "Date": "2015-05-05T07:52:12Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\".equals(expression)) throw new java.lang.Exception(\"Expression is empty\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1729/buggy-version/Calculator.java", "BodyUseAPI": [], "Fixed commit": "11995e28380b6bc297c553bc3eb7412a29a8b920", "Url": "https://api.github.com/repos/r-savko/git-merge-example", "Date": "2016-01-18T22:51:12Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.grails.ide.eclipse.core.internal.classpath.GrailsClasspathUtils.getClasspathContainer(org.eclipse.jdt.core.JavaCore.create(project))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (container != null) { org.grails.ide.eclipse.core.model.GrailsVersion oldVersion = container.getGrailsVersion(); if (oldVersion != null) { org.grails.ide.eclipse.core.model.GrailsVersion newVersion = org.grails.ide.eclipse.core.model.GrailsVersion.getGrailsVersion(project); return oldVersion.equals(newVersion); } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1591/buggy-version/org.grails.ide.eclipse.core.src.org.grails.ide.eclipse.core.internal.classpath.GrailsClasspathContainer.java", "BodyUseAPI": ["org.grails.ide.eclipse.core.internal.classpath.GrailsClasspathContainer.getGrailsVersion()"], "Fixed commit": "a7f25db00e4f66d9f62f2515d5ba6f691f53b978", "Url": "https://api.github.com/repos/spring-projects/grails-ide", "Date": "2014-02-18T21:17:33Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (create) { props = new java.util.Properties(); }else { props = org.grails.ide.eclipse.core.model.GrailsBuildSettingsHelper.getApplicationProperties(project); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1591/buggy-version/org.grails.ide.eclipse.core.src.org.grails.ide.eclipse.core.model.GrailsVersion.java", "BodyUseAPI": [], "Fixed commit": "a7f25db00e4f66d9f62f2515d5ba6f691f53b978", "Url": "https://api.github.com/repos/spring-projects/grails-ide", "Date": "2014-02-18T21:17:33Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((permission.getPermissionScope()) == (net.hawkengine.model.enums.PermissionScope.SERVER)) { if ((permission.getPermissionType()) == (net.hawkengine.model.enums.PermissionType.VIEWER)) { user.setPermissionType(PermissionType.VIEWER); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1634/buggy-version/Server.src.main.java.net.hawkengine.services.filters.EntityPermissionTypeService.java", "BodyUseAPI": ["net.hawkengine.model.payload.Permission.getPermissionType()"], "Fixed commit": "2ea96fdba0f36b46b64ae5b0b5cf3ff05b3ec053", "Url": "https://api.github.com/repos/rndsolutions/hawkcd", "Date": "2016-09-15T06:51:47Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((permission.getPermissionScope()) == (net.hawkengine.model.enums.PermissionScope.SERVER)) { if ((permission.getPermissionType()) == (net.hawkengine.model.enums.PermissionType.OPERATOR)) { userGroupDto.setPermissionType(PermissionType.OPERATOR); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1634/buggy-version/Server.src.main.java.net.hawkengine.services.filters.EntityPermissionTypeService.java", "BodyUseAPI": ["net.hawkengine.model.payload.Permission.getPermissionType()"], "Fixed commit": "2ea96fdba0f36b46b64ae5b0b5cf3ff05b3ec053", "Url": "https://api.github.com/repos/rndsolutions/hawkcd", "Date": "2016-09-15T06:51:47Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((permission.getPermissionScope()) == (net.hawkengine.model.enums.PermissionScope.SERVER)) { if ((permission.getPermissionType()) == (net.hawkengine.model.enums.PermissionType.OPERATOR)) { user.setPermissionType(PermissionType.OPERATOR); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1634/buggy-version/Server.src.main.java.net.hawkengine.services.filters.EntityPermissionTypeService.java", "BodyUseAPI": ["net.hawkengine.model.payload.Permission.getPermissionType()"], "Fixed commit": "2ea96fdba0f36b46b64ae5b0b5cf3ff05b3ec053", "Url": "https://api.github.com/repos/rndsolutions/hawkcd", "Date": "2016-09-15T06:51:47Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((permission.getPermissionScope()) == (net.hawkengine.model.enums.PermissionScope.SERVER)) { if ((permission.getPermissionType()) == (net.hawkengine.model.enums.PermissionType.VIEWER)) { userGroupDto.setPermissionType(PermissionType.VIEWER); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1634/buggy-version/Server.src.main.java.net.hawkengine.services.filters.EntityPermissionTypeService.java", "BodyUseAPI": ["net.hawkengine.model.payload.Permission.getPermissionType()"], "Fixed commit": "2ea96fdba0f36b46b64ae5b0b5cf3ff05b3ec053", "Url": "https://api.github.com/repos/rndsolutions/hawkcd", "Date": "2016-09-15T06:51:47Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aisLayer) != null) { this.aisLayer.forceLayerUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3421/buggy-version/epd-shore.src.main.java.dk.dma.epd.shore.gui.views.ChartPanel.java", "BodyUseAPI": [], "Fixed commit": "1f1416c2f0260f52506f3228ef1360ddcb1685ea", "Url": "https://api.github.com/repos/dma-enav/EPD", "Date": "2014-02-19T12:08:44Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.currentThread()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentThread instanceof edu.tcd.scss.nds.threadpool.socket.server.ResponderThread) { edu.tcd.scss.nds.threadpool.socket.server.ResponderThread requestThread = ((edu.tcd.scss.nds.threadpool.socket.server.ResponderThread) (currentThread)); java.lang.System.out.println((((((\"Changing state of \" + (requestThread.getName())) + \" thread from \") + (requestThread.getRunnbingStatus())) + \" to \") + (ResponderThread.STATUS_AVAILABLE))); requestThread.setRunningStatus(ResponderThread.STATUS_AVAILABLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7447/buggy-version/src.main.java.edu.tcd.scss.nds.threadpool.socket.server.ResponseTask.java", "BodyUseAPI": [], "Fixed commit": "125328f74d4a0d575f0dac5e4d77bd3f7b454f8f", "Url": "https://api.github.com/repos/hadkes/PooledSocket", "Date": "2016-11-16T18:55:11Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (secondScreen.getText().contains(com.implemica.zavizionov.calculator.CalculatorFormatter.SPACE_SYMBOL)) { replaceLast(((com.implemica.zavizionov.calculator.CalculatorFormatter.SPACE_SYMBOL) + (com.implemica.zavizionov.calculator.CalculatorFormatter.surroundWithFunction(function, getLast())))); }else { replaceLast(com.implemica.zavizionov.calculator.CalculatorFormatter.surroundWithFunction(function, getLast())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2325/buggy-version/src.com.implemica.zavizionov.calculator.CalculatorFormatter.java", "BodyUseAPI": [], "Fixed commit": "b2b227d972fbfa2797ead1e6da09275f90f2877a", "Url": "https://api.github.com/repos/Bloodmoor/calc_app", "Date": "2015-07-31T09:59:30Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((config.getInt(ProducerConfig.MAX_IN_FLIGHT_REQUESTS_PER_CONNECTION)) != 1) { throw new org.apache.kafka.common.config.ConfigException(((\"Must set '\" + (ProducerConfig.MAX_IN_FLIGHT_REQUESTS_PER_CONNECTION)) + \"' to 1 inorder to use the idempotent producer.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8805/buggy-version/clients.src.main.java.org.apache.kafka.clients.producer.KafkaProducer.java", "BodyUseAPI": [], "Fixed commit": "50aad2010dec653f758178f6d32de24f630a0907", "Url": "https://api.github.com/repos/confluentinc/kafka", "Date": "2017-02-24T21:20:21Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((config.getInt(ProducerConfig.RETRIES_CONFIG)) == 0) { throw new org.apache.kafka.common.config.ConfigException(((\"Need to set '\" + (ProducerConfig.RETRIES_CONFIG)) + \"' to greater than zero inorder to use the idempotent producer.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8805/buggy-version/clients.src.main.java.org.apache.kafka.clients.producer.KafkaProducer.java", "BodyUseAPI": [], "Fixed commit": "50aad2010dec653f758178f6d32de24f630a0907", "Url": "https://api.github.com/repos/confluentinc/kafka", "Date": "2017-02-24T21:20:21Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getIntent().getFlags()) & (android.content.Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT)) != 0) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1624/buggy-version/app.src.main.java.org.hisp.dhis.android.trackercapture.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "258357780b29af1e29f38ad20513384cbf5b9163", "Url": "https://api.github.com/repos/dhis2/dhis2-android-trackercapture", "Date": "2016-05-26T15:41:52Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((erLigaP\u00e5Listen(alleLiga, rs.getString(\"liganavn\"))) == false) { alleLiga.add(visLigaDB(rs.getString(\"LIGANAVN\"))); java.lang.System.out.println((\"tilf\u00f8jede \" + (rs.getString(\"liganavn\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7807/buggy-version/src.data.LigaDatabase.java", "BodyUseAPI": ["data.LigaDatabase.visLigaDB(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.util.List<domain.Liga>.add(domain.Liga)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "2c47a58aab132b3c306d8084b1f36e4ba53a1d58", "Url": "https://api.github.com/repos/xxdedennisxx/Kampregisteringsprogram", "Date": "2017-01-20T10:54:57Z"},
{"Line": "=>1162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((comp0Val.getNamedElement()) instanceof org.osate.aadl2.Classifier) { org.osate.aadl2.Classifier comp = ((org.osate.aadl2.Classifier) (comp0Val.getNamedElement())); nodeStr += (((\"(\" + (comp.getName())) + \", \") + (prop.getName())) + \")\"; result = getPropExists(comp, prop); }else { assert (comp0Val.getNamedElement()) instanceof org.osate.aadl2.instance.ConnectionInstance; conn = ((org.osate.aadl2.instance.ConnectionInstance) (comp0Val.getNamedElement())); for (org.osate.aadl2.instance.ConnectionReference ref : conn.getConnectionReferences()) { result = getPropExists(ref, prop); assert result.isBool(); if (result.getBool()) { break; } } nodeStr += (((\"(\" + (conn.getName())) + \", \") + (prop.getName())) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5567/buggy-version/fm-workbench.resolute.com.rockwellcollins.atc.resolute.analysis.src.com.rockwellcollins.atc.resolute.analysis.ResoluteEvaluator.java", "BodyUseAPI": ["com.rockwellcollins.atc.resolute.analysis.values.ResoluteValue.getNamedElement()", "com.rockwellcollins.atc.resolute.analysis.values.ResoluteValue.getNamedElement()", "com.rockwellcollins.atc.resolute.analysis.values.ResoluteValue.getNamedElement()"], "Fixed commit": "2a440a6e336b096e06a39727ea62207dd255ed20", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2013-12-21T00:33:44Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((phone.length()) >= (com.eta.util.ApplicationConstants.PHONE_NUMBER_LENGTH)) { phone = com.eta.util.Utility.purgePhoneNumber(phone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5579/buggy-version/ETA.src.com.eta.ContactListActivity.java", "BodyUseAPI": ["com.eta.util.Utility.purgePhoneNumber(java.lang.String)"], "Fixed commit": "2d8bba4340ef336bb11a0d66cff6aa964f403fa1", "Url": "https://api.github.com/repos/ksweta/ETA", "Date": "2014-12-18T10:42:55Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (transferAccountId != null) { org.totschnig.myexpenses.model.Account transferAccount = org.totschnig.myexpenses.model.Account.getInstanceFromDbWithFallback(transferAccountId); if (transferAccount == null) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2895/buggy-version/myExpenses.src.main.java.org.totschnig.myexpenses.model.Transfer.java", "BodyUseAPI": ["org.totschnig.myexpenses.model.Account.getInstanceFromDbWithFallback(java.lang.Long)"], "Fixed commit": "5b106e62f95d1375876f5e886f7e79f4befa7c25", "Url": "https://api.github.com/repos/mtotschnig/MyExpenses", "Date": "2017-10-06T13:16:56Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getComponentCount()) > 0) getComponent(((getComponentCount()) - 1)).repaint();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7889/buggy-version/src.interface_plugin.GestionnaireDeContraintes.java", "BodyUseAPI": [], "Fixed commit": "4fcb7dffa2283d691a91b518491f48e439ea396f", "Url": "https://api.github.com/repos/mmarcot/ObsTAPQuery", "Date": "2014-06-28T09:31:43Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((extractionDirFilePath) != null) && ((extractionDirFileName) != null)) dir = new java.io.File(((extractionDirFilePath) + (extractionDirFileName)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3377/buggy-version/src.components.JarInstaller.java", "BodyUseAPI": [], "Fixed commit": "1298bdd23e4cc26f4f3b949750404936af8aaada", "Url": "https://api.github.com/repos/KieranSherman/installer", "Date": "2016-05-27T18:32:42Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tempJarFilePath) != null) tempJar = new java.io.File(tempJarFilePath);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3377/buggy-version/src.components.JarInstaller.java", "BodyUseAPI": [], "Fixed commit": "1298bdd23e4cc26f4f3b949750404936af8aaada", "Url": "https://api.github.com/repos/KieranSherman/installer", "Date": "2016-05-27T18:32:42Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastTextTime) == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5713/buggy-version/src.main.java.elec332.craftingtableiv.inventory.WindowCraftingTableIV.java", "BodyUseAPI": [], "Fixed commit": "64fbbad22582276455e2944cfc4cd974add021a7", "Url": "https://api.github.com/repos/Elecs-Mods/CraftingTable-IV", "Date": "2017-05-15T08:21:45Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.System.currentTimeMillis()) - (lastTextTime)) > 300) { updateRecipes(true); lastTextTime = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5713/buggy-version/src.main.java.elec332.craftingtableiv.inventory.WindowCraftingTableIV.java", "BodyUseAPI": [], "Fixed commit": "64fbbad22582276455e2944cfc4cd974add021a7", "Url": "https://api.github.com/repos/Elecs-Mods/CraftingTable-IV", "Date": "2017-05-15T08:21:45Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1504/buggy-version/src.com.kstenschke.dummytext.helpers.TextualHelper.java", "BodyUseAPI": [], "Fixed commit": "dfb6cd0cbfcfeaba74dde39408cebebf39476fce", "Url": "https://api.github.com/repos/kstenschke/dummytext-plugin", "Date": "2014-04-01T20:49:02Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (stackObject == null) { stackObject = game.getStack().getSpell(getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3837/buggy-version/Mage.src.mage.cards.CardImpl.java", "BodyUseAPI": [], "Fixed commit": "9dde5c2810892316b127b49068c4519b794e46d1", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2015-09-06T20:40:55Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isHeadLess())) addSequence(labeledSequence);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4479/buggy-version/src.plugins.adufour.hierarchicalkmeans.HierarchicalKMeans.java", "BodyUseAPI": [], "Fixed commit": "2ff21f3c6c98bf63929e23d28951ee270f4a7f83", "Url": "https://api.github.com/repos/adufour/Hierarchical-K-Means", "Date": "2015-05-28T15:17:30Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reviewsJsonStr == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2915/buggy-version/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchReviewsTask.java", "BodyUseAPI": [], "Fixed commit": "edc77394f613af040bd4cd30e789ab6e739b6626", "Url": "https://api.github.com/repos/Pilpin/Nanodegree-Popular-Movies", "Date": "2015-12-04T08:26:58Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trailersJsonStr == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2915/buggy-version/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchTrailersTask.java", "BodyUseAPI": [], "Fixed commit": "edc77394f613af040bd4cd30e789ab6e739b6626", "Url": "https://api.github.com/repos/Pilpin/Nanodegree-Popular-Movies", "Date": "2015-12-04T08:26:58Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fBreadcrumbContextProvider) != null) { fBreadcrumbContextProvider.dispose(); fBreadcrumbContextProvider = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6858/buggy-version/org.eclipse.debug.ui.ui.org.eclipse.debug.internal.ui.views.launch.LaunchViewBreadcrumb.java", "BodyUseAPI": [], "Fixed commit": "387831443806cd4ba8579eda090dbba05026d3df", "Url": "https://api.github.com/repos/eclipse/eclipse.platform.debug", "Date": "2015-05-14T09:17:15Z"},
{"Line": "=>818", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jahia.modules.modulemanager.flow.TemplatePackageRegistry.lookupById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (module != null) { moduleManager.stop(module.getBundleKey(), null); }else { org.osgi.framework.Bundle bundle = org.jahia.osgi.BundleUtils.getBundleBySymbolicName(moduleId, null); throw new org.jahia.services.modulemanager.ModuleManagementException(((bundle == null) || ((bundle.getState()) == (org.osgi.framework.Bundle.ACTIVE)) ? (\"Module '\" + moduleId) + \"' could not stopped as it was not found in the registry.\" : (\"Module '\" + moduleId) + \"' was already stopped\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2979/buggy-version/core.src.main.java.org.jahia.modules.modulemanager.flow.ModuleManagementFlowHandler.java", "BodyUseAPI": ["org.jahia.data.templates.JahiaTemplatesPackage.getBundleKey()", "org.jahia.services.modulemanager.ModuleManager.stop(module.getBundleKey(),<nulltype>)"], "Fixed commit": "46e09fa7f37ab3a243e0592195675cb98c122299", "Url": "https://api.github.com/repos/Jahia/module-manager", "Date": "2016-08-25T14:42:51Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mutations.size()) > 0) queue(mutations);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6040/buggy-version/core.src.main.java.org.apache.accumulo.core.client.impl.ConditionalWriterImpl.java", "BodyUseAPI": ["org.apache.accumulo.core.client.impl.ConditionalWriterImpl.1.queue(java.util.List<org.apache.accumulo.core.client.impl.ConditionalWriterImpl.QCMutation>)"], "Fixed commit": "61a4298c60c00bc9ae1db4ef02b5dca13f2f3c5b", "Url": "https://api.github.com/repos/ctubbsii/accumulo", "Date": "2013-11-07T03:13:03Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit.RetrofitError.getResponse()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((response.getStatus()) == (org.apache.http.HttpStatus.SC_FORBIDDEN)) || ((response.getStatus()) == (org.apache.http.HttpStatus.SC_UNAUTHORIZED))) { displayErrorMessage(R.string.error_access_denied); }else { java.lang.String reason = response.getReason(); java.lang.String message = ctx.getString(R.string.error_server_format, settings.getBaseUrl(), reason); displayErrorMessage(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6768/buggy-version/src.main.java.us.bmark.android.utils.JustDisplayToastErrorHandler.java", "BodyUseAPI": ["retrofit.client.Response.getReason()"], "Fixed commit": "bc45e8f944631d474a5d3adbdee23dc47a5fb573", "Url": "https://api.github.com/repos/chandu-android/Bookie-Android", "Date": "2014-01-01T22:51:08Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((main.AnimeIndex.colorProp.getProperty(\"Menu_color\")) != null) && (!(main.AnimeIndex.colorProp.getProperty(\"Menu_color\").equalsIgnoreCase(\"null\")))) mnElimina.setBackground(new java.awt.Color(java.lang.Integer.parseInt(main.AnimeIndex.colorProp.getProperty(\"Menu_color\"))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/688/buggy-version/src.main.AnimeIndex.java", "BodyUseAPI": [], "Fixed commit": "9f56f97b3445a027479f5e755aa5719cac91f309", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-08-30T15:49:17Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((main.AnimeIndex.colorProp.getProperty(\"Menu_color\")) != null) && (!(main.AnimeIndex.colorProp.getProperty(\"Menu_color\").equalsIgnoreCase(\"null\")))) menuBar.setBackground(new java.awt.Color(java.lang.Integer.parseInt(main.AnimeIndex.colorProp.getProperty(\"Menu_color\"))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/688/buggy-version/src.main.AnimeIndex.java", "BodyUseAPI": [], "Fixed commit": "9f56f97b3445a027479f5e755aa5719cac91f309", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-08-30T15:49:17Z"},
{"Line": "=>823", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((main.AnimeIndex.colorProp.getProperty(\"Menu_color\")) != null) && (!(main.AnimeIndex.colorProp.getProperty(\"Menu_color\").equalsIgnoreCase(\"null\")))) mnHelp.setBackground(new java.awt.Color(java.lang.Integer.parseInt(main.AnimeIndex.colorProp.getProperty(\"Menu_color\"))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/688/buggy-version/src.main.AnimeIndex.java", "BodyUseAPI": [], "Fixed commit": "9f56f97b3445a027479f5e755aa5719cac91f309", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-08-30T15:49:17Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((main.AnimeIndex.colorProp.getProperty(\"Menu_color\")) != null) && (!(main.AnimeIndex.colorProp.getProperty(\"Menu_color\").equalsIgnoreCase(\"null\")))) mnEliminaLista.setBackground(new java.awt.Color(java.lang.Integer.parseInt(main.AnimeIndex.colorProp.getProperty(\"Menu_color\"))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/688/buggy-version/src.main.AnimeIndex.java", "BodyUseAPI": [], "Fixed commit": "9f56f97b3445a027479f5e755aa5719cac91f309", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-08-30T15:49:17Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((teamService.isValidId(match.getId_home())) && (teamService.isValidId(match.getId_away()))) { matchService.addMatch(match); teamService.updateMatch(match); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1256/buggy-version/src.main.java.com.vilijan.tournament.controllers.PlayController.java", "BodyUseAPI": ["com.vilijan.tournament.services.MatchService.addMatch(com.vilijan.tournament.Match)", "com.vilijan.tournament.services.TeamService.updateMatch(com.vilijan.tournament.Match)"], "Fixed commit": "41acdb7144e81b1a95c673e2eb500fa496bcfd7d", "Url": "https://api.github.com/repos/Vilijan/SpringBootTournament", "Date": "2017-07-28T13:58:15Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ID.equalsIgnoreCase(\"[Button]\")) ((com.d4l3k.Link.Button) (gate)).Execute(); else if (ID.equalsIgnoreCase(\"[Clock]\")) ((com.d4l3k.Link.Clock) (gate)).Execute(); else if (ID.equalsIgnoreCase(\"[Counter]\")) ((com.d4l3k.Link.Counter) (gate)).Execute();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2532/buggy-version/src.com.d4l3k.Link.GateConfig.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "b88c3ddba0c66c28c0a45b3ce23eee2a69d0728a", "Url": "https://api.github.com/repos/d4l3k/Link", "Date": "2011-07-14T03:19:39Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.equalsIgnoreCase(\"[Inverse]\")) obj = new com.d4l3k.Link.DoubleInverse(event); else if (type.equalsIgnoreCase(\"[StringToggle]\")) obj = new com.d4l3k.Link.StringToggle(event); else if (type.equalsIgnoreCase(\"[LocAdd]\")) obj = new com.d4l3k.Link.LocationAdd(event); else if (type.equalsIgnoreCase(\"[MobSpawn]\")) obj = new com.d4l3k.Link.MobSpawn(event); else if (type.equalsIgnoreCase(\"[Button]\")) obj = new com.d4l3k.Link.Button(event); else if (type.equalsIgnoreCase(\"[Clock]\")) obj = new com.d4l3k.Link.Clock(event); else if (type.equalsIgnoreCase(\"[Counter]\")) obj = new com.d4l3k.Link.Counter(event);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2532/buggy-version/src.com.d4l3k.Link.GateConfig.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "b88c3ddba0c66c28c0a45b3ce23eee2a69d0728a", "Url": "https://api.github.com/repos/d4l3k/Link", "Date": "2011-07-14T03:19:39Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.equalsIgnoreCase(\"[Button]\")) obj = new com.d4l3k.Link.Button(); else if (type.equalsIgnoreCase(\"[Clock]\")) obj = new com.d4l3k.Link.Clock(); else if (type.equalsIgnoreCase(\"[Counter]\")) obj = new com.d4l3k.Link.Counter();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2532/buggy-version/src.com.d4l3k.Link.GateConfig.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "b88c3ddba0c66c28c0a45b3ce23eee2a69d0728a", "Url": "https://api.github.com/repos/d4l3k/Link", "Date": "2011-07-14T03:19:39Z"},
{"Line": "=>614", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getLocation().getBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((net.h31ix.anticheat.util.Utilities.isStair(block.getRelative(BlockFace.NORTH))) || (net.h31ix.anticheat.util.Utilities.isStair(block.getRelative(BlockFace.SOUTH)))) || (net.h31ix.anticheat.util.Utilities.isStair(block.getRelative(BlockFace.EAST)))) || (net.h31ix.anticheat.util.Utilities.isStair(block.getRelative(BlockFace.WEST)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8302/buggy-version/src.main.java.net.h31ix.anticheat.manage.Backend.java", "BodyUseAPI": [], "Fixed commit": "0ca74f2c1879aebaf73c1b9a1ea9c8133b22eefc", "Url": "https://api.github.com/repos/h31ix/AntiCheat", "Date": "2012-10-08T21:46:26Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (solve(x, (y + (move[i])))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6777/buggy-version/05Maze.Maze.java", "BodyUseAPI": [], "Fixed commit": "48785bdcf36a48a1f6a1e8d5a91d43ff8a37b739", "Url": "https://api.github.com/repos/KatherinePan3/MKS22X", "Date": "2016-03-01T07:19:28Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((npc) != null) denizen.getSaves().set(((((\"Listeners.\" + (player.getName())) + \".\") + (listenerId)) + \".Linked NPCID\"), npc.getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2356/buggy-version/src.main.java.net.aufdemrand.denizen.listeners.AbstractListener.java", "BodyUseAPI": [], "Fixed commit": "b2ee615b6a74a8ea8328f2ea89e0036f7dd6f44c", "Url": "https://api.github.com/repos/aufdemrand/Denizen", "Date": "2013-05-23T17:59:16Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (denizen.getSaves().contains(((path + listenerId) + \".Linked NPCID\"))) npc = net.aufdemrand.denizen.utilities.DenizenAPI.getDenizenNPC(net.citizensnpcs.api.CitizensAPI.getNPCRegistry().getById(denizen.getSaves().getInt(((path + listenerId) + \".Linked NPCID\"))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2356/buggy-version/src.main.java.net.aufdemrand.denizen.listeners.ListenerRegistry.java", "BodyUseAPI": ["net.aufdemrand.denizen.utilities.DenizenAPI.getDenizenNPC(net.citizensnpcs.api.CitizensAPI.getNPCRegistry().getById(denizen.getSaves().getInt(((path + listenerId) + \".Linked NPCID\"))))", "denizen.getSaves().getInt(java.lang.String)", "net.aufdemrand.denizen.Denizen.getSaves()", "net.citizensnpcs.api.CitizensAPI.getNPCRegistry().getById(denizen.getSaves().getInt(((path + listenerId) + \".Linked NPCID\")))"], "Fixed commit": "b2ee615b6a74a8ea8328f2ea89e0036f7dd6f44c", "Url": "https://api.github.com/repos/aufdemrand/Denizen", "Date": "2013-05-23T17:59:16Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((trade.getItem1().getType()) == (org.bukkit.Material.AIR)) && ((trade.getRewardItem().getType()) == (org.bukkit.Material.AIR))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2463/buggy-version/src.io.github.yannici.bedwars.Shop.NewItemShop.java", "BodyUseAPI": [], "Fixed commit": "5cd4fddf8b7a5d4fd9ae0f3984549e15028ac1db", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-08-03T21:33:54Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((packet.getTypeIdentifier()) == (Payload.ENCRYPTED_MESSAGE)) { if (((packet.getReceiverID()) == senderID) && ((((connection.EncryptedMessage) (packet.getPayload())).getMessageID()) == messageID)) { removePacket = packet; } }else { if (((packet.getReceiverID()) == senderID) && ((((connection.FileMessage) (packet.getPayload())).getMessageID()) == messageID)) { removePacket = packet; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3804/buggy-version/IntegrationProject.src.connection.TransportLayer.java", "BodyUseAPI": ["connection.Packet.getReceiverID()", "connection.Packet.getPayload()", "((connection.FileMessage) (packet.getPayload())).getMessageID()", "connection.Packet.getPayload()", "((connection.EncryptedMessage) (packet.getPayload())).getMessageID()", "connection.Packet.getReceiverID()"], "Fixed commit": "0b14249f3c3d6b76332c493ba5b497b37a3479d9", "Url": "https://api.github.com/repos/JustinPraas/IntegrationProject", "Date": "2017-04-12T23:48:00Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getBoolean(getResources().getString(R.string.download_mode_key),boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (preference) { if (org.fossasia.openevent.utils.NetworkUtils.haveWifiConnection(this)) { org.fossasia.openevent.OpenEventApp.postEventOnUIThread(new org.fossasia.openevent.events.DataDownloadEvent()); sharedPreferences.edit().putBoolean(ConstantStrings.IS_DOWNLOAD_DONE, true).apply(); }else if (org.fossasia.openevent.utils.NetworkUtils.haveMobileConnection(this)) { org.fossasia.openevent.OpenEventApp.postEventOnUIThread(new org.fossasia.openevent.events.DataDownloadEvent()); sharedPreferences.edit().putBoolean(ConstantStrings.IS_DOWNLOAD_DONE, true).apply(); }else { final android.support.design.widget.Snackbar snackbar = android.support.design.widget.Snackbar.make(mainFrame, R.string.internet_preference_warning, Snackbar.LENGTH_INDEFINITE); snackbar.setAction(R.string.yes, new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View view) { downloadFromAssets(); } }); snackbar.show(); } }else { org.fossasia.openevent.OpenEventApp.postEventOnUIThread(new org.fossasia.openevent.events.DataDownloadEvent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/259/buggy-version/android.app.src.main.java.org.fossasia.openevent.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "01247fc1b02fb091c1f1a89b4b2839220e918567", "Url": "https://api.github.com/repos/betterclever/open-event-android", "Date": "2017-03-07T10:16:55Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.patientview.utils.LegacySpringUtils.getPatientManager().get(patient.getNhsno(),patient.getUnitcode())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (existingPatientRecord != null) { org.patientview.utils.LegacySpringUtils.getPatientManager().save(org.patientview.patientview.XmlImportUtils.copyObject(existingPatientRecord, patient)); }else { org.patientview.utils.LegacySpringUtils.getPatientManager().save(patient); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8822/buggy-version/patientview-parent.patientview.src.main.java.org.patientview.service.impl.ImportManagerImpl.java", "BodyUseAPI": ["org.patientview.patientview.XmlImportUtils.copyObject(org.patientview.model.Patient,org.patientview.model.Patient)", "org.patientview.utils.LegacySpringUtils.getPatientManager().save(org.patientview.patientview.XmlImportUtils.copyObject(existingPatientRecord, patient))"], "Fixed commit": "6fd066da7c9af4d6066aeffc964194450400f9c9", "Url": "https://api.github.com/repos/robworth/patientview", "Date": "2013-12-09T15:43:08Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (is == null) { errorStr = globalContext.getString(R.string.unknown_sina_network_error); throw new org.qii.weiciyuan.support.error.WeiboException(errorStr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/526/buggy-version/src.org.qii.weiciyuan.support.http.JavaHttpUtility.java", "BodyUseAPI": [], "Fixed commit": "de1487443c60851b93369e5befab8a4e7b0086de", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-12-30T19:10:30Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (row == 180) { java.lang.System.out.println(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3740/buggy-version/Modern.utilities.src.main.java.org.bonej.utilities.ResultsInserter.java", "BodyUseAPI": [], "Fixed commit": "c982626f3d481b414106a4ddbd8ac2135983fae2", "Url": "https://api.github.com/repos/bonej-org/BoneJ2", "Date": "2016-06-08T13:24:56Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (w != v) { ret.remove(w); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5461/buggy-version/src.scc.Graph.java", "BodyUseAPI": ["java.util.Set<java.lang.Integer>.remove(int)"], "Fixed commit": "ca234ff147601e4a7fe68cf71b07a304c652e896", "Url": "https://api.github.com/repos/cloverrose/StronglyConnectedComponent", "Date": "2013-12-20T07:59:56Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((period.equals(\"am\")) && (hourInt == 12)) { return \"0000\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1332/buggy-version/src.backend.CommandParser.java", "BodyUseAPI": [], "Fixed commit": "aaf1176fc4394c7bd110a61e0c5cf317fabf26d4", "Url": "https://api.github.com/repos/cs2103aug2015-w15-2j/WhatToDo", "Date": "2015-10-21T06:17:20Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((period.equals(\"am\")) && (hourInt == 12)) { return \"00\" + minuteString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1332/buggy-version/src.backend.CommandParser.java", "BodyUseAPI": [], "Fixed commit": "aaf1176fc4394c7bd110a61e0c5cf317fabf26d4", "Url": "https://api.github.com/repos/cs2103aug2015-w15-2j/WhatToDo", "Date": "2015-10-21T06:17:20Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (visitor instanceof com.alibaba.druid.sql.dialect.postgresql.visitor.PGASTVisitor) { accept0(((com.alibaba.druid.sql.dialect.postgresql.visitor.PGASTVisitor) (visitor))); }else { super.accept0(visitor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1152/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.postgresql.ast.stmt.PGSelectQueryBlock.java", "BodyUseAPI": ["com.alibaba.druid.sql.ast.statement.SQLSelectQueryBlock.accept0(com.alibaba.druid.sql.visitor.SQLASTVisitor)"], "Fixed commit": "a7e7046ed8b1e2517b347e5ff2cb121b23b0efe9", "Url": "https://api.github.com/repos/FlakyTestDetection/druid", "Date": "2017-11-30T08:31:16Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (visitor instanceof com.alibaba.druid.sql.dialect.postgresql.visitor.PGASTVisitor) { accept0(((com.alibaba.druid.sql.dialect.postgresql.visitor.PGASTVisitor) (visitor))); }else { super.accept0(visitor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1152/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.postgresql.ast.stmt.PGSelectStatement.java", "BodyUseAPI": ["com.alibaba.druid.sql.ast.statement.SQLSelectStatement.accept0(com.alibaba.druid.sql.visitor.SQLASTVisitor)"], "Fixed commit": "a7e7046ed8b1e2517b347e5ff2cb121b23b0efe9", "Url": "https://api.github.com/repos/FlakyTestDetection/druid", "Date": "2017-11-30T08:31:16Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!foundGroovy) && (stackTraceElement.getFileName().endsWith(\".groovy\"))) { foundGroovy = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5988/buggy-version/grails-core.src.main.groovy.org.codehaus.groovy.grails.exceptions.DefaultStackTraceFilterer.java", "BodyUseAPI": [], "Fixed commit": "d9c20c2f63ea109c7edf64c7757adecb2d0e6ad5", "Url": "https://api.github.com/repos/grails/grails-core", "Date": "2011-06-30T08:09:06Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.isFile()) { java.lang.String fileName = file.getName(); fileName = fileName.substring(0, fileName.lastIndexOf(\".\")); challengeNames.add(fileName); challengeNamesToShow.add(fileName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1381/buggy-version/StudyManager.app.src.main.java.at.vocabdevelopment.studymanager.BrowseChallenges.java", "BodyUseAPI": ["java.io.File.getName()"], "Fixed commit": "72d408514f99fc3054e4f723bfb3ab07a8297c92", "Url": "https://api.github.com/repos/TNiedermair/free_team_11", "Date": "2017-05-31T13:37:08Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paused.get()) { final org.jtrfp.trcl.snd.AudioDriver driver = getActiveDriver(); driver.setSource(org.jtrfp.trcl.snd.SoundSystem.SILENCE); driver.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3949/buggy-version/src.main.java.org.jtrfp.trcl.snd.SoundSystem.java", "BodyUseAPI": [], "Fixed commit": "7222450aa87363e52a2ce1c84f8ae610efc7711e", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2015-06-30T11:08:44Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i >= (items.size())) { if ((inventory.getItem((i % 54))) != null) { this.items.add(inventory.getItem((i % 54))); } }else { if ((inventory.getItem((i % 54))) == null) { this.items.remove(i); }else { this.items.set(i, inventory.getItem((i % 54))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4028/buggy-version/lavasurvival.src.main.java.me.eddiep.minecraft.ls.system.bank.BankInventory.java", "BodyUseAPI": ["org.bukkit.inventory.Inventory.getItem(int)", "java.util.List<org.bukkit.inventory.ItemStack>.remove(int)", "org.bukkit.inventory.Inventory.getItem(int)", "org.bukkit.inventory.Inventory.getItem(int)", "org.bukkit.inventory.Inventory.getItem(int)", "java.util.List<org.bukkit.inventory.ItemStack>.add(inventory.getItem((i % 54)))", "java.util.List<org.bukkit.inventory.ItemStack>.set(int,inventory.getItem((i % 54)))"], "Fixed commit": "da63dc7b136f363b38bb1bb1aedd6792ee8a515b", "Url": "https://api.github.com/repos/pupnewfster/Lavasurvival", "Date": "2016-01-07T16:05:55Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((bankPath.getNext()) != null) && (!(bankPath.getNext().getArea().isVisible()))) { com.runemate.game.api.hybrid.local.Camera.concurrentlyTurnTo(bankPath.getNext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5708/buggy-version/src.scripts.mining.locations.Location.java", "BodyUseAPI": ["com.runemate.game.api.hybrid.local.Camera.concurrentlyTurnTo(bankPath.getNext())", "com.runemate.game.api.hybrid.location.navigation.Path.getNext()"], "Fixed commit": "de0a411b97acf52fdac73cd3d44ef686daaa5582", "Url": "https://api.github.com/repos/Kneckter/EPATH-Mining-All-In-One", "Date": "2016-01-06T20:45:51Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((minePath.getNext()) != null) && (!(minePath.getNext().getArea().isVisible()))) { com.runemate.game.api.hybrid.local.Camera.concurrentlyTurnTo(minePath.getNext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5708/buggy-version/src.scripts.mining.locations.Location.java", "BodyUseAPI": ["com.runemate.game.api.hybrid.local.Camera.concurrentlyTurnTo(minePath.getNext())", "com.runemate.game.api.hybrid.location.navigation.Path.getNext()"], "Fixed commit": "de0a411b97acf52fdac73cd3d44ef686daaa5582", "Url": "https://api.github.com/repos/Kneckter/EPATH-Mining-All-In-One", "Date": "2016-01-06T20:45:51Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCancelled()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3869/buggy-version/src.de.sopamo.triangula.android.game.PhysicsTask.java", "BodyUseAPI": [], "Fixed commit": "26acd3311b4cb039033605dc6d4662c48eab1436", "Url": "https://api.github.com/repos/papayafiction/triangula", "Date": "2014-10-01T18:18:33Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.liblevenshtein.CommandLineInterface.getOptionValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == path) { throw new java.lang.IllegalArgumentException(\"No dictionary specified\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/9158/buggy-version/src.main.java.com.github.liblevenshtein.CommandLineInterface.java", "BodyUseAPI": [], "Fixed commit": "1d74cad65c21b1f1284bc2a458966c89497d9dda", "Url": "https://api.github.com/repos/universal-automata/liblevenshtein-java-cli", "Date": "2016-05-01T00:02:47Z"},
{"Line": "=>5335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((receivedBatchIds) != null) && ((receivedBatchIds.size()) > 0)) { if (selRow > (-1)) { com.ut.dph.model.activityReportReceivedMessages selMessage = receivedBatchIds.get(selRow); java.lang.String[] batchIds = selMessage.getRecevedBatchIds().split(\",\"); for (java.lang.String batchId : batchIds) { transactionList = getReceivedBatchTransaction(java.lang.Integer.parseInt(batchId), userInfo.getId(), transactionList); } }else { for (com.ut.dph.model.activityReportReceivedMessages message : receivedBatchIds) { java.lang.String[] batchIds = message.getRecevedBatchIds().split(\",\"); for (java.lang.String batchId : batchIds) { transactionList = getReceivedBatchTransaction(java.lang.Integer.parseInt(batchId), userInfo.getId(), transactionList); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5133/buggy-version/src.main.java.com.ut.dph.controller.HealtheWebController.java", "BodyUseAPI": ["java.util.List<com.ut.dph.model.activityReportReceivedMessages>.get(java.lang.Integer)"], "Fixed commit": "e6345fd048556bf1f5a542de8487b319bdd7a5b0", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2016-07-08T18:10:10Z"},
{"Line": "=>717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getInputs().size()) == 0) { rewriteGeneric(p); }else { throw org.apache.calcite.util.Util.newInternal((((\"no '\" + visitMethodName) + \"' method found for class \") + (p.getClass().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/824/buggy-version/core.src.main.java.org.apache.calcite.sql2rel.RelStructuredTypeFlattener.java", "BodyUseAPI": ["org.apache.calcite.sql2rel.RelStructuredTypeFlattener.RewriteRelVisitor.rewriteGeneric(org.apache.calcite.rel.RelNode)", "p.getClass().getName()", "org.apache.calcite.util.Util.newInternal((((\"no '\" + visitMethodName) + \"' method found for class \") + (p.getClass().getName())))", "org.apache.calcite.rel.RelNode.getClass()"], "Fixed commit": "b34d3762c4439a883e4777f2e21bc3cebcc0e13b", "Url": "https://api.github.com/repos/julienledem/calcite", "Date": "2015-11-13T20:13:21Z"},
{"Line": "=>638", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openfaces.component.table.DataTable.getRowGrouping()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (rowGrouping != null) { java.util.List<org.openfaces.component.table.GroupingRule> groupingRules = rowGrouping.getGroupingRules(); for (org.openfaces.component.table.GroupingRule groupingRule : groupingRules) { result.add(getColumnById(groupingRule.getColumnId())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7461/buggy-version/openFaces.source.org.openfaces.component.table.DataTable.java", "BodyUseAPI": ["org.openfaces.component.table.RowGrouping.getGroupingRules()"], "Fixed commit": "b87d784528760679c2f4d652e0c8f5bab72cb426", "Url": "https://api.github.com/repos/OpenFaces-org/OpenFaces", "Date": "2015-02-23T09:39:38Z"},
{"Line": "=>613", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (compare.contains(keyword)) { delete = compare.substring(((compare.length()) - (keyword.length())), compare.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7732/buggy-version/src.notify.logic.parser.CommandParser.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.length()", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "b66a15fa81d81251c0be0038ac03921c6a3e2682", "Url": "https://api.github.com/repos/cs2103aug2015-w14-1j/main", "Date": "2015-11-09T10:02:07Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (current >= ((Constants.OFFSET_WEEK) + (Constants.OFFSET_DAY))) { current = Constants.OFFSET_RESET; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7732/buggy-version/src.notify.logic.parser.DateTimeParser.java", "BodyUseAPI": [], "Fixed commit": "b66a15fa81d81251c0be0038ac03921c6a3e2682", "Url": "https://api.github.com/repos/cs2103aug2015-w14-1j/main", "Date": "2015-11-09T10:02:07Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((value.getValueType()) == (JsonValue.ValueType.STRING)) { persons.add(serializers.javaxjson.JsonString.class.cast(value).getString()); }else { persons.add(value.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1890/buggy-version/tpc.src.serializers.javaxjson.JavaxJsonTransformer.java", "BodyUseAPI": ["serializers.javaxjson.JsonString.getString()", "serializers.javaxjson.JsonValue.toString()", "java.util.List<java.lang.String>.add(serializers.javaxjson.JsonString.class.cast(value).getString())", "java.lang.Class.cast(serializers.javaxjson.JsonValue)", "java.util.List<java.lang.String>.add(value.toString())"], "Fixed commit": "363b4a931f27ff5e50279edde4af3bed63ab3e9f", "Url": "https://api.github.com/repos/IUSR/jvm-serializers", "Date": "2017-07-26T01:42:44Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasEmptyLineAfter(ast))) { log(nextToken.getLineNo(), com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck.MSG_SHOULD_BE_SEPARATED, nextToken.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7034/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck.java", "BodyUseAPI": [], "Fixed commit": "f20249ce9babc02249056b1c07ea128c2d07084c", "Url": "https://api.github.com/repos/mkordas/checkstyle", "Date": "2015-05-02T13:27:07Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.length()) <= 20) { t.setText(s); }else { t.setText(((s.substring(0, 21)) + \"...\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1318/buggy-version/app.src.main.java.com.xenithturtle.texasim.cards.ScheduleCard.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "d0b35bd36e85f0955a8b62b6bc6eee49556586d2", "Url": "https://api.github.com/repos/st028/TexasIntramurals", "Date": "2014-08-22T19:13:13Z"},
{"Line": "=>1046", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lambdaTerm) { this.lPow = lPow; this.dlPow = dlPow; this.dl2Pow = dl2Pow; }else { this.lambda = 1.0; lPow = 1.0; dlPow = 0.0; dl2Pow = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5004/buggy-version/modules.potential.src.main.java.ffx.potential.nonbonded.GeneralizedKirkwood.java", "BodyUseAPI": [], "Fixed commit": "4314fc38760e23807709c9e94373d03cb98e1244", "Url": "https://api.github.com/repos/mjschnie/ffx", "Date": "2017-04-26T20:01:34Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (unit == null) { unit = java.util.concurrent.TimeUnit.MILLISECONDS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7714/buggy-version/src.main.java.com.leipeng.redis.server.service.util.Redis.java", "BodyUseAPI": [], "Fixed commit": "e9eb38e3bfcb44b7946038157dc3fb1a967a1736", "Url": "https://api.github.com/repos/WilliamLei/redis-server", "Date": "2016-07-22T10:43:57Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/617/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "60d2348d945034852f2619ea1f912dcc31abc06a", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:11Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/617/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "60d2348d945034852f2619ea1f912dcc31abc06a", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:11Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["screen.ScreenHandler.get().getActiveScreen().getLevel()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (level == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3322/buggy-version/src.main.java.entity.Entity.java", "BodyUseAPI": [], "Fixed commit": "1f33ade2efab3f13670d689fd1a8d3f05eee2e29", "Url": "https://api.github.com/repos/jarlah/Tile-Game", "Date": "2015-11-26T22:09:17Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(org.voltdb.CLIConfig)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (value != null) { kvMap.put(opt, value.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/649/buggy-version/src.frontend.org.voltdb.CLIConfig.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "152924a5bab82805e7569ecdac3e83e6c50ab8b6", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2017-12-15T18:52:40Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(new java.io.File(parentDir).exists())) { new java.io.File(parentDir).mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5141/buggy-version/src.main.java.com.tianyl.android.wechat.sync.UploadService.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "b10dab72e8134d174731573d33aa8834ccc459e8", "Url": "https://api.github.com/repos/tianyl1984/wechat_xposed", "Date": "2017-04-25T13:21:09Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (armies < 4) { return com.google.common.collect.ImmutableList.of(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2696/buggy-version/com.blevinstein.xade.FloodStrategy.java", "BodyUseAPI": [], "Fixed commit": "5a69c86477426b1beba1b676819ef90bab477d03", "Url": "https://api.github.com/repos/blevinstein/GameAI", "Date": "2014-10-27T02:59:01Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.wyldmods.kitchencraft.machines.KitchenCraftMachines.loadRF()) { cpw.mods.fml.common.registry.GameRegistry.registerTileEntity(org.wyldmods.kitchencraft.machines.common.tile.TileOvenRF.class, \"kc.oven.rf\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/642/buggy-version/Machines.src.main.java.org.wyldmods.kitchencraft.machines.common.block.KCBlocks.java", "BodyUseAPI": [], "Fixed commit": "fa957030eb547eb9fb3a2a7aa2d0411da88be0fc", "Url": "https://api.github.com/repos/wyldmods/KitchenCraft", "Date": "2014-10-14T02:04:58Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (minutes < 1) { se.setValue(0); }else { se.setValue(((bids) / minutes)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7922/buggy-version/src.server.analytics.AnalyticsServer.java", "BodyUseAPI": ["server.analytics.StatisticsEvent.setValue(long)"], "Fixed commit": "cff40584528f05128f0d841ee16c983f8132604f", "Url": "https://api.github.com/repos/rczerny/vs2012-13", "Date": "2012-11-27T09:03:20Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.InvocationTargetException.getCause()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (t instanceof java.lang.RuntimeException) { throw ((java.lang.RuntimeException) (t)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3425/buggy-version/src.main.java.act.event.bytecode.ReflectedSimpleEventListener.java", "BodyUseAPI": [], "Fixed commit": "304486a623f9f71f302658c76517c90f71828bb1", "Url": "https://api.github.com/repos/actframework/actframework", "Date": "2016-12-09T13:44:02Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.ctrip.apollo.core.enums.Env, java.lang.Long>.get(com.ctrip.apollo.core.enums.Env)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (failCnt >= (com.ctrip.apollo.portal.PortalSettings.HealthCheckTask.ENV_DIED_THREADHOLD)) { envStatusMark.put(env, false); logger.error(\"env turn to down [env:{}]\", env); }else { logger.warn(\"env health check fail first time. [env:{}]\", env); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2559/buggy-version/apollo-portal.src.main.java.com.ctrip.apollo.portal.PortalSettings.java", "BodyUseAPI": [], "Fixed commit": "2554359a050370a8759649d137de866fb8f5397b", "Url": "https://api.github.com/repos/lepdou/apollo", "Date": "2016-05-18T08:35:07Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.java.decompiler.modules.renamer.PoolInterceptor.getOldName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (oldClassName != null) { className = oldClassName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/563/buggy-version/src.org.jetbrains.java.decompiler.struct.consts.ConstantPool.java", "BodyUseAPI": [], "Fixed commit": "bfddced4e257b1259865151c54669f3eab095eb9", "Url": "https://api.github.com/repos/fesh0r/fernflower", "Date": "2016-01-21T06:06:45Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.silverpeas.core.admin.OrganisationController.getComponentInstLight(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(app.isHidden())) { item.addApp(app); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1678/buggy-version/aurora.look-war.src.main.java.org.silverpeas.looks.aurora.LookAuroraHelper.java", "BodyUseAPI": ["org.silverpeas.looks.aurora.BannerMainItem.addApp(com.stratelia.webactiv.beans.admin.ComponentInstLight)"], "Fixed commit": "f6a0dafe2abbe7757865bb97f84c2490668c445e", "Url": "https://api.github.com/repos/auroreallibe/Silverpeas-Looks", "Date": "2016-02-08T22:19:36Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded) { tds.TaskTree.increaseTaskListSize(); tds.TaskTree.pushAddToStorage(task); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4382/buggy-version/src.tds.TaskTree.java", "BodyUseAPI": [], "Fixed commit": "79a1663950eb0dded08356106dee800506e5acb8", "Url": "https://api.github.com/repos/cs2103aug2015-w14-3j/main", "Date": "2015-09-29T17:54:16Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRemoved) { tds.TaskTree.decreaseTaskListSize(); tds.TaskTree.pushRemoveToStorage(task); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4382/buggy-version/src.tds.TaskTree.java", "BodyUseAPI": [], "Fixed commit": "79a1663950eb0dded08356106dee800506e5acb8", "Url": "https://api.github.com/repos/cs2103aug2015-w14-3j/main", "Date": "2015-09-29T17:54:16Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(f.exists())) { try { f.createNewFile(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7406/buggy-version/app.src.main.java.com.example.ben.game.Game2.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "7893c08e2c2a06c4216e4dce333bd33f63044b7a", "Url": "https://api.github.com/repos/Ben-wu14/Game", "Date": "2016-10-03T06:30:29Z"},
{"Line": "=>1141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (op2Abs == 1) { result = op1; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3506/buggy-version/Implementierung.visual-dfa.src.main.java.dfa.analyses.ConstantBitsTransition.java", "BodyUseAPI": [], "Fixed commit": "84af0d99e1d5a30112266af3e594807fa848071d", "Url": "https://api.github.com/repos/ppati000/visualDFA", "Date": "2017-09-10T19:41:48Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(started)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5630/buggy-version/src.de.ImOlli.managers.FoodManager.java", "BodyUseAPI": [], "Fixed commit": "ad13d4c5e53ddd514f69b4ed04851ab3f0446e38", "Url": "https://api.github.com/repos/ImOlli/Snake", "Date": "2017-01-18T15:08:56Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dbtools.common.utils.StrUtils.isEmpty(issueKey)) || (!(keyStoryMap.containsKey(issueKey)))) { java.lang.System.out.printf(\"Can\\'t find story key: %s, %s\\n\", guidKey.getKey(), guidKey.getValue()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4646/buggy-version/jira2ea.src.main.java.jira.tool.jira.Jira2EA.java", "BodyUseAPI": [], "Fixed commit": "dac0e9fa3b43f42f3e6c7789e7ae7e2a7f853a9c", "Url": "https://api.github.com/repos/rickding/ToolDB", "Date": "2017-12-04T05:04:44Z"},
{"Line": "=>905", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<me.enerccio.sp.types.PythonObject>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof me.enerccio.sp.types.system.FutureObject) value = ((me.enerccio.sp.types.system.FutureObject) (value)).getValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8299/buggy-version/src.me.enerccio.sp.interpret.PythonInterpreter.java", "BodyUseAPI": [], "Fixed commit": "188f73d7b972928fee5460082c19b72bcfac9b78", "Url": "https://api.github.com/repos/kozec/SimplePython", "Date": "2015-08-22T23:06:09Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(found.contains(word))) { found.add(word); outValue += word + \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/741/buggy-version/basics.app.src.main.java.com.example.sebastianszczepaniak.cookbookspeak.StandardActivity.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "f01139584738ac7e7022a9ac8c9279130721a954", "Url": "https://api.github.com/repos/valenema/SmartCookbook", "Date": "2016-07-03T15:38:38Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (doc.getRecordVersion().isValid()) currentDocument.getRecordVersion().copyFrom(doc.getRecordVersion());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3739/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.http.command.put.OServerCommandPutDocument.java", "BodyUseAPI": ["currentDocument.getRecordVersion().copyFrom(doc.getRecordVersion())", "com.orientechnologies.orient.core.record.impl.ODocument.getRecordVersion()"], "Fixed commit": "565d505510f2df944de4d2271f357a4043607072", "Url": "https://api.github.com/repos/jdillon/orientdb", "Date": "2015-07-14T13:11:05Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fragments.length) > 1) { java.io.File destination = new java.io.File((((this.processBuilder.directory().getPath()) + \"/\") + (fragments[1]))); if (destination.isDirectory()) { this.processBuilder.directory(destination); }else { this.appendOutput(((fragments[1]) + \": No such file or directory\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5562/buggy-version/src.application.git_tool.commandline.CommandLine.java", "BodyUseAPI": ["application.git_tool.commandline.CommandLine.appendOutput(java.lang.String)"], "Fixed commit": "fbca517409ac16bb481afac342d125961a2898c1", "Url": "https://api.github.com/repos/cxan96/GIT-Tool", "Date": "2016-12-06T14:16:46Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (imageName != null) { org.osgi.framework.Bundle bundle = fr.liglab.adele.cilia.workbench.monitoring.Activator.getDefault().getBundle(); java.net.URL url = org.eclipse.core.runtime.FileLocator.find(bundle, new org.eclipse.core.runtime.Path(imageName), null); try { url = new java.net.URL((\"platform:/plugin/fr.liglab.adele.cilia.workbench.common/\" + imageName)); } catch (java.net.MalformedURLException e) { e.printStackTrace(); } org.eclipse.jface.resource.ImageDescriptor imageDesc = org.eclipse.jface.resource.ImageDescriptor.createFromURL(url); return imageDesc.createImage(); }else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6767/buggy-version/cilia-workbench-monitoring.src.fr.liglab.adele.cilia.workbench.monitoring.topologyview.providers.CiliaLabelProvider.java", "BodyUseAPI": ["org.eclipse.core.runtime.FileLocator.find(org.osgi.framework.Bundle,org.eclipse.core.runtime.Path,<nulltype>)"], "Fixed commit": "138c0d1d3e9efb773ff98525c447503984674cb1", "Url": "https://api.github.com/repos/cilia-workbench/cilia-workbench", "Date": "2011-09-28T10:03:34Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (io.kristal.shareplugin.utils.FileSystemTools.stringIsBlank(mPath)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2292/buggy-version/src.main.java.io.kristal.shareplugin.shareDataClass.ShareRemoteFile.java", "BodyUseAPI": [], "Fixed commit": "f887ccb5e6fe5d8bfad9aade3599c64c42e92b8d", "Url": "https://api.github.com/repos/Cobaltians-Plugins/Plugins-Share-Android", "Date": "2016-05-18T07:52:24Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (oTotal != 0) { logit = java.lang.Math.log(oTotal); beta[(j + 1)] = logit; }else { beta[(j + 1)] = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2665/buggy-version/MultipleLogisticRegression.java", "BodyUseAPI": [], "Fixed commit": "6015c1bfe0baa588a7659982b349ecd25aa1418b", "Url": "https://api.github.com/repos/rballinger/logistic-regression-java", "Date": "2015-04-08T19:06:38Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (inheritedvalue != null) { fr.imag.adele.apam.apamMavenPlugin.CheckObr.error(((\"Cannot redefine attribute \\\"\" + attr) + \"\\\"\")); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8113/buggy-version/plugins.apam-maven-plugin.src.main.java.fr.imag.adele.apam.apamMavenPlugin.CheckObr.java", "BodyUseAPI": [], "Fixed commit": "61812d098de256db1854d1d96167dc3743bfdea6", "Url": "https://api.github.com/repos/AdeleResearchGroup/ApAM", "Date": "2013-09-12T15:13:23Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((colors.size()) >= 2) buttons.get(((colors.size()) - 2)).updateMoveColorDownButton();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1638/buggy-version/freeplane.src.main.java.org.freeplane.features.edge.mindmapmode.ColorListEditorPanelBuilder.java", "BodyUseAPI": ["java.util.List<org.freeplane.features.edge.mindmapmode.ColorListEditorPanelBuilder.RowButtons>.get(int)", "org.freeplane.features.edge.mindmapmode.ColorListEditorPanelBuilder.RowButtons.updateMoveColorDownButton()", "java.util.List<java.awt.Color>.size()"], "Fixed commit": "7c51a227898a9b9b5b8b1f3afb71289ea3ee81e3", "Url": "https://api.github.com/repos/inglor/freeplane", "Date": "2017-08-19T08:10:30Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.broker.api.Connection.unpackData(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((response.getType()) == (com.broker.api.entities.TypesBrokerResponse.SERVICE_NOT_AVAILABLE)) { throw new com.broker.api.ServiceNotAvailableException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2544/buggy-version/api.src.main.java.com.broker.api.Connection.java", "BodyUseAPI": [], "Fixed commit": "028594ab772a4629f05311f786d01f41cbd6df92", "Url": "https://api.github.com/repos/LuisBurgos/broker", "Date": "2015-10-19T03:17:54Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tableConstraints == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8454/buggy-version/squidb-processor.src.com.yahoo.squidb.processor.plugins.defaults.UpsertPlugin.java", "BodyUseAPI": [], "Fixed commit": "0fff23d868a9a0dc1386ef568d31ffbef4bf3a3e", "Url": "https://api.github.com/repos/yahoo/squidb", "Date": "2017-01-13T18:47:38Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(io.vertigo.kernel.Home.getDefinitionSpace().containsKey(dynamicDefinitionKey.getName()))) { final io.vertigo.dynamo.impl.environment.kernel.model.DynamicDefinition subDefinition = definitionModelRepository.getDefinition(dynamicDefinitionKey); if (!(orderedList.contains(subDefinition))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1352/buggy-version/vertigo-dynamo-impl.src.main.java.io.vertigo.dynamo.impl.environment.kernel.impl.model.DynamicSolver.java", "BodyUseAPI": ["io.vertigo.dynamo.impl.environment.kernel.impl.model.DynamicDefinitionRepository.getDefinition(io.vertigo.dynamo.impl.environment.kernel.model.DynamicDefinitionKey)"], "Fixed commit": "93b2490b1dac9407df643bcd15ede1d5343cf7a2", "Url": "https://api.github.com/repos/KleeGroup/vertigo", "Date": "2014-08-08T09:15:34Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) != null) { userTournaments = tmBO.findUserTournaments(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7924/buggy-version/ChessClan.src.main.java.org.chessclan.presentationTier.frontControllers.TournamentsViewBean.java", "BodyUseAPI": [], "Fixed commit": "a0cbe5fde24bdcdd73965b4d41a6aa478d6e6fcd", "Url": "https://api.github.com/repos/gfduszynski/zpi", "Date": "2012-12-03T11:15:48Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(BurrowsWheeler.hasInput())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3181/buggy-version/algorithms-2.burrows.src.main.java.BurrowsWheeler.java", "BodyUseAPI": [], "Fixed commit": "a31a4d27f9e732a21854211879f920b2d573f211", "Url": "https://api.github.com/repos/theeban275/coursera-assignments", "Date": "2016-05-08T03:09:23Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"+\".equals(code)) { BurrowsWheeler.encode(); }else if (\"-\".equals(code)) { BurrowsWheeler.decode(); }else { java.lang.System.out.println(\"Usage: java BurrowsWheeler (+|-) < filename\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3181/buggy-version/algorithms-2.burrows.src.main.java.BurrowsWheeler.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "a31a4d27f9e732a21854211879f920b2d573f211", "Url": "https://api.github.com/repos/theeban275/coursera-assignments", "Date": "2016-05-08T03:09:23Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(BurrowsWheeler.hasInput())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3181/buggy-version/algorithms-2.burrows.src.main.java.BurrowsWheeler.java", "BodyUseAPI": [], "Fixed commit": "a31a4d27f9e732a21854211879f920b2d573f211", "Url": "https://api.github.com/repos/theeban275/coursera-assignments", "Date": "2016-05-08T03:09:23Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (in.getVersion().before(Version.V_1_5_0)) { in.readBoolean(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/720/buggy-version/src.main.java.org.elasticsearch.action.admin.indices.optimize.OptimizeRequest.java", "BodyUseAPI": ["org.elasticsearch.common.io.stream.StreamInput.readBoolean()"], "Fixed commit": "5fed9aa79268d80cd5b6e8f9f588474207414f7c", "Url": "https://api.github.com/repos/elastic/elasticsearch", "Date": "2015-02-12T01:23:58Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (out.getVersion().before(Version.V_1_5_0)) { out.writeBoolean(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/720/buggy-version/src.main.java.org.elasticsearch.action.admin.indices.optimize.OptimizeRequest.java", "BodyUseAPI": ["org.elasticsearch.common.io.stream.StreamOutput.writeBoolean(boolean)"], "Fixed commit": "5fed9aa79268d80cd5b6e8f9f588474207414f7c", "Url": "https://api.github.com/repos/elastic/elasticsearch", "Date": "2015-02-12T01:23:58Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (widthOfASingleTab > 0) { java.lang.String fullWidthLineOfTabs = \"\"; for (float size = 0; size < (text_output.getWidth()); size += widthOfASingleTab) fullWidthLineOfTabs += \"\\t\"; builder.append(fullWidthLineOfTabs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6938/buggy-version/src.main.java.com.chewielouie.textadventure_common.MainTextFormatter.java", "BodyUseAPI": [], "Fixed commit": "b85f79e9908e1ba4e6343f5a33dfa24c716034aa", "Url": "https://api.github.com/repos/julianchurchill/text-adventure", "Date": "2014-07-14T18:04:48Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["textBox.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (text.equals(\"\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5848/buggy-version/app.src.main.java.com.lifestats.RecordTab.java", "BodyUseAPI": [], "Fixed commit": "5813c1bb87cdd19e0eb8ea135f3c05cf501d4126", "Url": "https://api.github.com/repos/yizhang7210/LifeStats", "Date": "2015-01-11T15:41:13Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.qos.logback.classic.spi.ILoggingEvent.getFormattedMessage()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (logMessage.endsWith(te.light_jockey.misc.NewlineOrCarriageReturnLayout.ELLIPSIS)) { return prefix + logMessage; }else { return (prefix + logMessage) + (ch.qos.logback.core.CoreConstants.LINE_SEPARATOR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1479/buggy-version/src.main.groovy.te.light_jockey.misc.NewlineOrCarriageReturnLayout.java", "BodyUseAPI": [], "Fixed commit": "a78e8ead1b4483e3bdf80b9d8f1cef462192edb6", "Url": "https://api.github.com/repos/todd-elvers/light-jockey", "Date": "2016-02-16T00:34:57Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.curator.framework.CuratorFrameworkFactory.newClient(oldKafkaSpoutOffsetQuery.getZkServers(),int,int,org.apache.curator.retry.RetryOneTime)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((curatorFramework.checkExists().forPath(zkPath)) == null) { java.lang.System.out.printf(\"--zk-node '%s' is not exists.%n\", zkPath); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3049/buggy-version/external.storm-kafka-monitor.src.main.java.org.apache.storm.kafka.monitor.KafkaOffsetLagUtil.java", "BodyUseAPI": ["java.io.PrintStream.printf(java.lang.String,java.lang.String)"], "Fixed commit": "a59fe8bbf89eb55ff7bc89f9d3bab34bd18b63f9", "Url": "https://api.github.com/repos/jfenc91/storm", "Date": "2016-08-31T15:11:28Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((zkNode == null) || ((zkNode.length()) <= 1)) { org.apache.storm.kafka.monitor.KafkaOffsetLagUtil.printUsageAndExit(options, ((((org.apache.storm.kafka.monitor.KafkaOffsetLagUtil.OPTION_ZK_COMMITTED_NODE_LONG) + \" '\") + zkNode) + \"' is invalid.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3049/buggy-version/external.storm-kafka-monitor.src.main.java.org.apache.storm.kafka.monitor.KafkaOffsetLagUtil.java", "BodyUseAPI": ["org.apache.storm.kafka.monitor.KafkaOffsetLagUtil.printUsageAndExit(org.apache.commons.cli.Options,java.lang.String)"], "Fixed commit": "a59fe8bbf89eb55ff7bc89f9d3bab34bd18b63f9", "Url": "https://api.github.com/repos/jfenc91/storm", "Date": "2016-08-31T15:11:28Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBVSet == false) { bestValue = value; bestPoint.x = i; bestPoint.y = j; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2921/buggy-version/src.GroupAI.java", "BodyUseAPI": [], "Fixed commit": "debf378a0861d202e350386f09fd28a4a890b56d", "Url": "https://api.github.com/repos/AnthonyManis/AIproject", "Date": "2016-10-24T06:21:11Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.ParameterizedType.getActualTypeArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((subTypes[i]) instanceof java.lang.reflect.ParameterizedType) { parametersTypeString += \"_\" + (getParametersTypeString(graphQLObjectMapper, ((java.lang.reflect.ParameterizedType) (subTypes[i])))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4866/buggy-version/src.main.java.com.bretpatterson.schemagen.graphql.impl.SimpleTypeNamingStrategy.java", "BodyUseAPI": ["com.bretpatterson.schemagen.graphql.impl.SimpleTypeNamingStrategy.getParametersTypeString(com.bretpatterson.schemagen.graphql.IGraphQLObjectMapper,java.lang.reflect.Type)"], "Fixed commit": "b49fb222bcab78162ef61771ab9c2fdf8f000e79", "Url": "https://api.github.com/repos/bpatters/schemagen-graphql", "Date": "2016-02-27T23:44:30Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (checkIfInfo(type)) { string = lineOfContent; }else if (checkIfHint(type)) { string = lineOfContent; }else if (checkIfHeading(type)) { string = lineOfContent; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/348/buggy-version/myApp.app.src.main.java.tda367.myapplication.service.FileReader.java", "BodyUseAPI": ["tda367.myapplication.service.FileReader.checkIfHint(java.lang.String)", "tda367.myapplication.service.FileReader.checkIfHeading(java.lang.String)"], "Fixed commit": "8ce2811a1a293d781a5c2763df636b6f819a04da", "Url": "https://api.github.com/repos/hannacarlssoon/TreFika", "Date": "2017-05-15T12:11:31Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["command(org.geogit.api.plumbing.RevObjectParse.class).setObjectId(parentId).call(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(parent.isPresent())) { return com.google.common.base.Optional.absent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5565/buggy-version/src.core.src.main.java.org.geogit.api.plumbing.ResolveFeatureType.java", "BodyUseAPI": [], "Fixed commit": "f6f91a82aed4b5ecc5b527941aa5c5e325eb7b08", "Url": "https://api.github.com/repos/boundlessgeo/GeoGit", "Date": "2014-04-15T16:41:34Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f.toString().endsWith(fileExtension)) { long trashDate = getFileTrashDate(f, fileExtension, trashMinutes); if ((f.isFile()) && ((java.lang.System.currentTimeMillis()) > trashDate)) { f.delete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8348/buggy-version/src.main.java.com.carrotcreative.cream.cache.CacheManager.java", "BodyUseAPI": ["java.io.File.delete()", "java.io.File.isFile()", "com.carrotcreative.cream.cache.CacheManager.getFileTrashDate(java.io.File,java.lang.String,long)"], "Fixed commit": "4f1118ac4619591bbe945ad1030acbca2e8a89d2", "Url": "https://api.github.com/repos/carrot/cream", "Date": "2015-02-05T22:03:43Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((json.has(\"error\")) && (!(json.get(\"error\").isJsonNull()))) { java.lang.String state = json.get(\"error\").getAsString(); response.setState(state); response.setStatus(org.openqa.selenium.remote.ErrorCodes.toStatus(state)); response.setValue(convert(java.lang.Object.class, json.get(\"message\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3794/buggy-version/java.client.src.org.openqa.selenium.remote.JsonToBeanConverter.java", "BodyUseAPI": ["json.get(\"error\").getAsString()", "com.google.gson.JsonObject.get(java.lang.String)", "org.openqa.selenium.remote.JsonToBeanConverter.convert(java.lang.Class,json.get(\"message\"))", "org.openqa.selenium.remote.Response.setValue(java.lang.Object)", "com.google.gson.JsonObject.get(java.lang.String)"], "Fixed commit": "9b54a07f30d8d528617d9e6077627e7775e318a3", "Url": "https://api.github.com/repos/petruc/selenium", "Date": "2015-10-05T19:10:42Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.commandBuffer.hasNext()) { this.commandBuffer.nextCommand(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/781/buggy-version/src.com.willwinder.universalgcodesender.SerialCommunicator.java", "BodyUseAPI": ["com.willwinder.universalgcodesender.GcodeCommandBuffer.nextCommand()"], "Fixed commit": "36636b084ef88929eb10acf15293da368cd3e712", "Url": "https://api.github.com/repos/winder/Universal-G-Code-Sender", "Date": "2012-07-11T13:08:27Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.fileMode) == true) { throw new java.lang.Exception(\"Already sending a file.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/781/buggy-version/src.com.willwinder.universalgcodesender.SerialCommunicator.java", "BodyUseAPI": [], "Fixed commit": "36636b084ef88929eb10acf15293da368cd3e712", "Url": "https://api.github.com/repos/winder/Universal-G-Code-Sender", "Date": "2012-07-11T13:08:27Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1315/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "00c933233b3d1265b16beba3aeb172533380f4ab", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((forEach.getFolder()) != null) && ((forEach.getFolder().trim().length()) > 0)) { result = new step.datapool.file.FileDataPoolImpl(forEach); }else { throw new java.lang.RuntimeException(\"Either the attribute 'folder' or the attribute 'table' has to be specified.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7749/buggy-version/base-artefacts.src.main.java.step.datapool.DataPoolFactory.java", "BodyUseAPI": [], "Fixed commit": "3883662b0e90fb1fe4814bac3db88eae4f8439d4", "Url": "https://api.github.com/repos/exense/step", "Date": "2016-12-13T08:07:22Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((br) != null) { br.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7749/buggy-version/base-artefacts.src.main.java.step.datapool.file.FileReaderDataPool.java", "BodyUseAPI": [], "Fixed commit": "3883662b0e90fb1fe4814bac3db88eae4f8439d4", "Url": "https://api.github.com/repos/exense/step", "Date": "2016-12-13T08:07:22Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stmt instanceof org.mozilla.zest.core.v1.ZestAction) { handleAction(script, ((org.mozilla.zest.core.v1.ZestAction) (stmt)), lastResponse); }else if (stmt instanceof org.mozilla.zest.core.v1.ZestAssignment) { handleAssignment(script, ((org.mozilla.zest.core.v1.ZestAssignment) (stmt)), lastResponse); }else if (stmt instanceof org.mozilla.zest.core.v1.ZestLoop) { lastResponse = handleLoop(script, ((org.mozilla.zest.core.v1.ZestLoop<?>) (stmt)), lastResponse); }else if (stmt instanceof org.mozilla.zest.core.v1.ZestControlReturn) { org.mozilla.zest.core.v1.ZestControlReturn zr = ((org.mozilla.zest.core.v1.ZestControlReturn) (stmt)); result = this.variables.replaceInString(zr.getValue(), false); return null; }else if (stmt instanceof org.mozilla.zest.core.v1.ZestComment) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1300/buggy-version/src.org.mozilla.zest.impl.ZestBasicRunner.java", "BodyUseAPI": [], "Fixed commit": "4677c8241f528cf723b607ed7b8659c66e40fe0e", "Url": "https://api.github.com/repos/seccoale/zest", "Date": "2013-09-07T12:22:22Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.hawaiiframework.context.ApplicationContextHolder.getApplicationContext()) != null) { org.hawaiiframework.context.ApplicationContextHolder.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8353/buggy-version/hawaii-core.src.main.java.org.hawaiiframework.context.ApplicationContextBinderApplicationListener.java", "BodyUseAPI": [], "Fixed commit": "aa249ec8b06faff30e037fd2a8aae0e77aad4c52", "Url": "https://api.github.com/repos/hawaiifw/hawaii-framework", "Date": "2016-04-13T11:18:20Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (drawable instanceof me.PATHopan.sketch.drawable.SketchShapeBitmapDrawable) { android.graphics.Bitmap bitmap = ((me.PATHopan.sketch.drawable.SketchShapeBitmapDrawable) (drawable)).getBitmapDrawable().getBitmap(); pixelByteCount = (previewDrawableByteCount / (bitmap.getWidth())) / (bitmap.getHeight()); }else { pixelByteCount = (previewDrawableByteCount / (drawable.getIntrinsicWidth())) / (drawable.getIntrinsicHeight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2355/buggy-version/sample.src.main.java.me.PATHopan.sketchsample.widget.MyImageView.java", "BodyUseAPI": ["android.graphics.drawable.Drawable.getIntrinsicHeight()", "android.graphics.drawable.Drawable.getIntrinsicWidth()"], "Fixed commit": "554947157dda035b295d1b5997581a3bc8961e30", "Url": "https://api.github.com/repos/panpf/sketch", "Date": "2017-05-30T07:35:15Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((another.loyaltyCard) != null) this.loyaltyCard = another.loyaltyCard.duplicate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7507/buggy-version/basket.Customer.java", "BodyUseAPI": [], "Fixed commit": "28b6e675792605dd3c9eb88e58e296c4a6750916", "Url": "https://api.github.com/repos/philcrooks/Shopping-Basket", "Date": "2016-09-13T21:59:34Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((another.offer) != null) this.offer = another.offer.duplicate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7507/buggy-version/basket.Product.java", "BodyUseAPI": [], "Fixed commit": "28b6e675792605dd3c9eb88e58e296c4a6750916", "Url": "https://api.github.com/repos/philcrooks/Shopping-Basket", "Date": "2016-09-13T21:59:34Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTxActive()) return entity; else return pm.detachCopy(entity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6756/buggy-version/src.main.java.com.pratilipi.data.DataAccessorGaeImpl.java", "BodyUseAPI": [], "Fixed commit": "e1bfd40282e60d73fe690c083aecfbbc05618c7d", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-07-25T16:25:48Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isOperation()) || (isConstant())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3806/buggy-version/src.symboldiff.Expression.java", "BodyUseAPI": [], "Fixed commit": "1183d571c15843c68ff9d5a9ccf736a65c90d8b7", "Url": "https://api.github.com/repos/nvpanov/goptimum", "Date": "2012-03-28T08:17:32Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jacorb.orb.BufferManager.calcLog(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (log_curr >= (org.jacorb.orb.BufferManager.MIN_CACHE)) { if (log_curr > (maxManagedBufferSize)) { synchronized(this) { if (cdrStr && (((time) >= 0) && (((bufferMax) == null) || ((bufferMax.length) < (current.length))))) { bufferMax = current; } return; } } int expected = (1 << (log_curr + 1)) - 1; if ((current.length) != expected) { if (logger.isDebugEnabled()) { logger.debug((((((\"returnBuffer, log = \" + log_curr) + \" got length \") + (java.lang.Integer.toHexString(current.length))) + \" expected length \") + (java.lang.Integer.toHexString(expected)))); } }else { final java.util.Collection s = bufferPool[(log_curr - (org.jacorb.orb.BufferManager.MIN_CACHE))]; doReturnBuffer(s, current, threshold); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3807/buggy-version/src.org.jacorb.orb.BufferManager.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "6f284beb96b9a5b828a113886893b700b968dd9f", "Url": "https://api.github.com/repos/pmesnier/JacORB_from_JacORB", "Date": "2013-07-24T14:19:28Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((string.equals(\"epsilon\")) || (string.equals(\"lambda\"))) { return Print.Printer.checkIfLatexSpecial(string); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3020/buggy-version/src.main.java.Print.Printer.java", "BodyUseAPI": ["Print.Printer.checkIfLatexSpecial(java.lang.String)"], "Fixed commit": "42f66029936893e0e59d031ea7f060b3ac7bf6ce", "Url": "https://api.github.com/repos/Winis04/STUPS-Toolbox-2.0", "Date": "2017-05-15T08:05:46Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ex.getMessage()) != null) { return ex.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7396/buggy-version/src.main.java.net.kiennt.exception.handler.ShoppingCartExceptionHandler.java", "BodyUseAPI": ["java.lang.Throwable.getMessage()"], "Fixed commit": "656026667494d93cd6bcb1f45e8ba75c70387351", "Url": "https://api.github.com/repos/kiennt23/shoppingcart", "Date": "2016-11-13T14:15:49Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(base.endsWith(java.io.File.separator))) { base += java.io.File.separator; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5163/buggy-version/src.net.dean.jsadl.Reference.java", "BodyUseAPI": [], "Fixed commit": "8caba23a26e1bc6daf2c34a896dbc44ab7230d18", "Url": "https://api.github.com/repos/thatJavaNerd/JSaDL", "Date": "2013-08-29T17:32:54Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((activity.getResources().getConfiguration().orientation) == (android.content.res.Configuration.ORIENTATION_LANDSCAPE)) { com.sma.humanicons.adapters.KeyboardPagerAdapter.NO_OF_EMOTICONS_PER_PAGE = 36; }else { com.sma.humanicons.adapters.KeyboardPagerAdapter.NO_OF_EMOTICONS_PER_PAGE = 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/9005/buggy-version/app.src.main.java.com.sma.humanicons.adapters.KeyboardPagerAdapter.java", "BodyUseAPI": [], "Fixed commit": "6f2c337328c296ae64f7b677010ee95e3f8cc737", "Url": "https://api.github.com/repos/Matij/HumanIcons", "Date": "2015-10-11T13:51:59Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.elmakers.mine.bukkit.magic.Mage.getActiveWand()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (activeWand.isInventoryOpen()) { if (!(controller.isSpellDroppingEnabled())) { cancelEvent = true; boolean isInventoryFull = true; org.bukkit.inventory.PlayerInventory playerInventory = player.getInventory(); for (int i = 0; i < (com.elmakers.mine.bukkit.wand.Wand.PLAYER_INVENTORY_SIZE); i++) { org.bukkit.inventory.ItemStack item = playerInventory.getItem(i); if ((item == null) || ((item.getType()) == (org.bukkit.Material.AIR))) { isInventoryFull = false; break; } } if (isInventoryFull) { activeWand.addToInventory(droppedItem); } }else { controller.removeItemFromWand(activeWand, droppedItem); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/255/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.magic.listener.PlayerController.java", "BodyUseAPI": ["com.elmakers.mine.bukkit.magic.MagicController.removeItemFromWand(com.elmakers.mine.bukkit.wand.Wand,org.bukkit.inventory.ItemStack)", "com.elmakers.mine.bukkit.wand.Wand.addToInventory(org.bukkit.inventory.ItemStack)"], "Fixed commit": "c952f3fbaa07c5d6ed1e874842e307847da7b312", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2017-02-24T01:21:47Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInventoryFull) { activeWand.addToInventory(droppedItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/255/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.magic.listener.PlayerController.java", "BodyUseAPI": [], "Fixed commit": "c952f3fbaa07c5d6ed1e874842e307847da7b312", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2017-02-24T01:21:47Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isDormancyTrackingActive == null) { this.isDormancyTrackingActive = java.lang.Boolean.FALSE; }else { this.isDormancyTrackingActive = isDormancyTrackingActive; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7023/buggy-version/fineract-provider.src.main.java.org.apache.fineract.portfolio.savings.domain.SavingsProduct.java", "BodyUseAPI": [], "Fixed commit": "d7e7feb3615014c914053a67ab03fa29c90884a5", "Url": "https://api.github.com/repos/ad-os/incubator-fineract", "Date": "2016-06-22T01:50:23Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((nextTaskType.equals(PingTask.TYPE)) || (nextTaskType.equals(DnsLookupTask.TYPE))) || (nextTaskType.equals(TracerouteTask.TYPE))) || (nextTaskType.equals(UDPBurstTask.TYPE))) { return false; }else if ((getDataLimit()) == 0) { return true; }else if (((getDataLimit()) == ((50 * 1024) * 1024)) && (nextTaskType.equals(TCPThroughputTask.TYPE))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2235/buggy-version/android.src.com.mobiperf.BatteryCapPowerManager.java", "BodyUseAPI": ["java.lang.String.equals(TCPThroughputTask.TYPE)"], "Fixed commit": "b198a65ff27ec6a4c5ad94dde71ec30e95aa12a6", "Url": "https://api.github.com/repos/sanaerosen/MobiPerf", "Date": "2014-01-28T04:12:28Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.artemis.ComponentMapper<se.chalmers.avoidance.core.components.Size>.get(com.artemis.Entity)", "com.artemis.ComponentMapper<se.chalmers.avoidance.core.components.Transform>.get(com.artemis.Entity)", "se.chalmers.avoidance.core.components.Transform.getY()", "se.chalmers.avoidance.core.components.Size.getHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((playerTransform.getY()) + ((playerSize.getHeight()) / 2)) > wallY) && (((playerTransform.getY()) + ((playerSize.getHeight()) / 2)) < (wallY + wallHeight))) { newAngle = flipHorizontal(angle); if ((angle > ((java.lang.Math.PI) / 2)) && (angle < (((java.lang.Math.PI) * 3) / 2))) { playerTransform.setX((wallX + wallWidth)); }else { playerTransform.setX((wallX - (playerSize.getWidth()))); } }else { if ((playerTransform.getX()) > wallX) { if ((playerTransform.getY()) > wallY) { }else { } }else { if ((playerTransform.getY()) > wallY) { }else { } } newAngle = se.chalmers.avoidance.util.Utils.reverseAngle(angle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6133/buggy-version/src.se.chalmers.avoidance.core.systems.CollisionSystem.java", "BodyUseAPI": ["se.chalmers.avoidance.core.components.Transform.setX(float)", "se.chalmers.avoidance.core.components.Transform.getY()", "se.chalmers.avoidance.core.components.Size.getWidth()", "se.chalmers.avoidance.core.components.Transform.getX()", "se.chalmers.avoidance.core.components.Transform.setX((wallX - (playerSize.getWidth())))", "se.chalmers.avoidance.core.components.Transform.getY()"], "Fixed commit": "f1b87b2ff783dff7f8de1fcdeb2e395f9691f834", "Url": "https://api.github.com/repos/AftonTroll/Avoidance", "Date": "2012-09-30T16:35:20Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.getBoardInstance().getPiecePosition(chess.mvc.views.Piece)", "chess.mvc.views.PieceViewPanel.getSelectedPieces()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(selectCompositePiece.canMoveTo(current, this.position))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8610/buggy-version/src.chess.mvc.views.MouseHandler.java", "BodyUseAPI": [], "Fixed commit": "c6a2e661cdf666516c24c931c9f9490762a42309", "Url": "https://api.github.com/repos/michaelsunb/oosd-assignment", "Date": "2015-05-31T11:56:08Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.LinearLayout.indexOfChild(android.view.View)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index == 0) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5472/buggy-version/app.src.main.java.com.finaiized.recipmon.app.EditRecipeActivity.java", "BodyUseAPI": [], "Fixed commit": "afff98f616d224c56b0dbaf00f68796df8f16c6f", "Url": "https://api.github.com/repos/finaiized/Recipmon", "Date": "2014-07-07T03:05:50Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (returnType == null) { throw new java.lang.IllegalArgumentException((\"Failed to find leafref target: \" + strXPath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8093/buggy-version/code-generator.binding-type-provider.src.main.java.org.opendaylight.yangtools.sal.binding.yang.types.TypeProviderImpl.java", "BodyUseAPI": [], "Fixed commit": "6dea5d7a81c51f3838750215b7aa35aa7d190d86", "Url": "https://api.github.com/repos/opendaylight/yangtools", "Date": "2014-03-12T09:59:21Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((text.getVisibility()) != (android.view.View.VISIBLE)) { text.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4664/buggy-version/app.src.main.java.com.ffeichta.runnergy.gui.listener.LocationListenerCompare.java", "BodyUseAPI": ["android.widget.TextView.setVisibility(View.VISIBLE)"], "Fixed commit": "126d2d9b77692e1359a502c61a282623af8018b5", "Url": "https://api.github.com/repos/fafeichter/Runnergy", "Date": "2016-03-12T14:43:48Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kiteq.client.binding.BindingManager.getServerList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((serverUris == null) || (serverUris.isEmpty())) { org.kiteq.client.ClientManager.LOGGER.warn((\"Cannot found a living client handles \" + topic)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/538/buggy-version/kiteq-client.src.main.java.org.kiteq.client.ClientManager.java", "BodyUseAPI": [], "Fixed commit": "2ca7f0d4cb21d50deeed4e7f1684f1a0e383142e", "Url": "https://api.github.com/repos/blackbeans/kiteq-client-java", "Date": "2015-03-12T03:22:16Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request == (com.example.libnet.http.EnumRequest.GET)) || (request == (com.example.libnet.http.EnumRequest.DELETE))) { T body = mBody; if (body != null) { @java.lang.SuppressWarnings(\"unchecked\") java.util.HashMap<java.lang.String, java.lang.Object> params = mConfig.getConverterStrategy().bodyToParamsConverter(mBody); if (params != null) { for (java.util.Map.Entry<java.lang.String, java.lang.Object> entry : params.entrySet()) { putParams(entry.getKey(), java.lang.String.valueOf(entry.getValue())); } } mBody = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4316/buggy-version/libnet.src.main.java.com.example.libnet.BaseProtocol.java", "BodyUseAPI": [], "Fixed commit": "e7b66fbe0cd8db01ca7a3e6c2d7149e64cd0f0c8", "Url": "https://api.github.com/repos/KingerWu/OK", "Date": "2016-12-25T03:52:55Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.hobbits.leimao.freevip.util.GlobalValue.getIns(mContext).getUserInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (userInfo != null) mUserId = userInfo.getUser_id();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6511/buggy-version/LeimaoFreeVip.src.me.hobbits.leimao.freevip.ui.fragment.OfferWallFragment.java", "BodyUseAPI": ["me.hobbits.leimao.freevip.model.SignInSuccess.getUser_id()"], "Fixed commit": "be3d7a8f51a35de0f015e3474679865c6c581d81", "Url": "https://api.github.com/repos/MrLyp/hobbits", "Date": "2014-10-11T08:46:24Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getParty().getMember().size()) <= 1) { ch.simonsky.partysystem.api.PartyAPI.disbandParty(e.getParty()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7655/buggy-version/src.ch.simonsky.partysystem.listener.PartyInviteCloseListener.java", "BodyUseAPI": ["ch.simonsky.partysystem.api.PartyAPI.disbandParty(e.getParty())", "ch.simonsky.partysystem.events.PartyInviteCloseEvent.getParty()"], "Fixed commit": "3c99dc6cd51f27df25e581d125a1c2da112ac3df", "Url": "https://api.github.com/repos/SimonSkyTV/BungeePartyManager", "Date": "2017-05-14T19:25:48Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (group == null) group = \"Camel\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/987/buggy-version/components.camel-quartz2.src.main.java.org.apache.camel.component.quartz2.QuartzComponent.java", "BodyUseAPI": [], "Fixed commit": "494002614876af682de08d1e5a3bdcd52546ebcc", "Url": "https://api.github.com/repos/saltnlight5/camel", "Date": "2013-07-27T17:39:50Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prefixJobNameWithEndpointId) name = ((endpoint.getId()) + \"_\") + name;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/987/buggy-version/components.camel-quartz2.src.main.java.org.apache.camel.component.quartz2.QuartzComponent.java", "BodyUseAPI": [], "Fixed commit": "494002614876af682de08d1e5a3bdcd52546ebcc", "Url": "https://api.github.com/repos/saltnlight5/camel", "Date": "2013-07-27T17:39:50Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (fr.inria.diversify.util.DiversifyProperties.getProperty(\"Builder\").equals(\"maven\")) { fr.inria.diversify.util.maven.MavenDependencyResolver t = new fr.inria.diversify.util.maven.MavenDependencyResolver(); t.DependencyResolver(((fr.inria.diversify.util.DiversifyProperties.getProperty(\"project\")) + \"/pom.xml\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8613/buggy-version/src.main.java.fr.inria.diversify.DiversifyMain.java", "BodyUseAPI": [], "Fixed commit": "bcb3e5cdeef2376fc58e33d40b846f74be4ec54c", "Url": "https://api.github.com/repos/simonAllier/diversify-statements", "Date": "2013-12-13T14:06:10Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) settings.setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2064/buggy-version/app.src.main.java.com.heaven.core.ui.webview.MyWebViewClient.java", "BodyUseAPI": [], "Fixed commit": "98872aa1802a37f7053dad595e9cb38bbaa37a5f", "Url": "https://api.github.com/repos/heavenisme/BaseCore", "Date": "2016-11-24T09:51:40Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (byteStart < 4) { temp[byteStart] = ((byte) ((temp[byteStart]) << bitStart)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/9153/buggy-version/uia.message.src.main.java.uia.message.codec.IntegerLSBCodec.java", "BodyUseAPI": [], "Fixed commit": "3111c98f77cf9d967ecb600f2274aa627aafa1bd", "Url": "https://api.github.com/repos/gazer2kanlin/uia.message4j", "Date": "2014-11-12T08:40:54Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.invoke(T)", "java.lang.Class<? extends java.lang.Object>.getDeclaredField(com.sleepcamel.ifdtoutils.DTOClassGenerator.getFieldNameFromMethod(method.getName()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((recursively && (field.getType().equals(interfaceClass))) && (fieldValue != null)) { fieldValue = com.sleepcamel.ifdtoUtils.InterfaceDTOUtils.getFilledDto(interfaceClass, ((T) (fieldValue)), recursively); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5466/buggy-version/InterfaceDTOUtils.src.main.java.com.sleepcamel.ifdtoUtils.InterfaceDTOUtils.java", "BodyUseAPI": ["com.sleepcamel.ifdtoUtils.InterfaceDTOUtils.getFilledDto(java.lang.Class<T>,java.lang.Object,boolean)"], "Fixed commit": "7651615799067f8b4077134718499e771ec4cefe", "Url": "https://api.github.com/repos/guicamest/InterfaceToDTO", "Date": "2011-10-14T02:15:58Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.acarreos.creative.Fragments.VistaEnvio.FragmentUbicacion.tryParseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id < 0) { builder.include(marker.getPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3140/buggy-version/app.src.main.java.com.acarreos.creative.Fragments.VistaEnvio.FragmentUbicacion.java", "BodyUseAPI": [], "Fixed commit": "ad9a3af49d99025fc1a1fb80259ba9b88b3c74c0", "Url": "https://api.github.com/repos/enmaGit/acarreos-android", "Date": "2017-05-02T20:08:12Z"},
{"Line": "=>566", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["path.edges.getLast()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((edge0.getToVertex()) != (state.getVertex())) { state = state.getBackState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8590/buggy-version/opentripplanner-routing.src.main.java.org.opentripplanner.routing.impl.raptor.Raptor.java", "BodyUseAPI": ["org.opentripplanner.routing.core.State.getBackState()"], "Fixed commit": "8b7b09adf1cc14e6894145f2d87a2ac55d39b835", "Url": "https://api.github.com/repos/openplans/OpenTripPlanner", "Date": "2012-12-06T02:26:01Z"},
{"Line": "=>1137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mState) != (State.CANCELLED)) { mState = State.CANCELLED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5392/buggy-version/src.java.com.android.internal.telephony.gsm.GsmMmiCode.java", "BodyUseAPI": [], "Fixed commit": "7adce90de875a765d920ff55085d5b476ccdd8e5", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-opt-telephony", "Date": "2015-04-21T20:19:18Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContext.getAuthentication()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (authentication.getAuthorities().contains(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_DRIVER\"))) { map.addAttribute(\"role\", \"driver\"); }else if (authentication.getAuthorities().contains(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_CUSTOMER\"))) { map.addAttribute(\"role\", \"customer\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8771/buggy-version/src.main.java.com.teamd.taxi.controllers.ChangePasswordController.java", "BodyUseAPI": ["org.springframework.security.core.Authentication.getAuthorities()", "authentication.getAuthorities().contains(org.springframework.security.core.authority.SimpleGrantedAuthority)"], "Fixed commit": "1543a374327c57af019b78e776e4bf997ab0ae6d", "Url": "https://api.github.com/repos/NetCracker-TeamD/TaxiService", "Date": "2015-05-26T15:39:13Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (total > 0) { for (java.lang.Error error : qtyByError.keySet()) { long errorsAmount = evaluatedResourceDetailRepo.getQtyByError(error); qtyByError.put(error, ((100 * ((double) (errorsAmount))) / total)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1672/buggy-version/src.main.java.com.itba.EndpointQualityFormulae.java", "BodyUseAPI": ["java.util.Map<java.lang.Error, java.lang.Double>.put(java.lang.Error,double)"], "Fixed commit": "91ff4aeb35afa4c02d55ce95842ac9eb29ca4054", "Url": "https://api.github.com/repos/gromarion/pf", "Date": "2017-08-21T23:46:38Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openid4java.consumer.VerificationResult.getAuthResponse()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (authResponse instanceof org.openid4java.message.AuthSuccess) { org.openid4java.message.AuthSuccess authSuccess = ((org.openid4java.message.AuthSuccess) (authResponse)); return onSuccess(new hudson.plugins.openid.Identity(authSuccess)); }else { throw new hudson.model.Failure((\"Failed to login. Authentication failed with the following response: \" + authResponse)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2605/buggy-version/src.main.java.hudson.plugins.openid.OpenIdSession.java", "BodyUseAPI": [], "Fixed commit": "c8fc09e7f1439ac53546ba650847ebcb96baf19f", "Url": "https://api.github.com/repos/jenkinsci/openid-plugin", "Date": "2015-07-19T18:40:15Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((match.order) < (match2.order)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/134/buggy-version/jaxrs.resteasy-jaxrs.src.main.java.org.jboss.resteasy.core.interception.JaxrsInterceptorRegistry.java", "BodyUseAPI": [], "Fixed commit": "86a84608b7fd9b615332918474c7709baf0d712c", "Url": "https://api.github.com/repos/ronsigal/Resteasy", "Date": "2016-02-05T20:47:14Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((match2.order) < (match.order)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/134/buggy-version/jaxrs.resteasy-jaxrs.src.main.java.org.jboss.resteasy.core.interception.JaxrsInterceptorRegistry.java", "BodyUseAPI": [], "Fixed commit": "86a84608b7fd9b615332918474c7709baf0d712c", "Url": "https://api.github.com/repos/ronsigal/Resteasy", "Date": "2016-02-05T20:47:14Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shareTrailerItem) != null) shareTrailerItem.setVisible(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/224/buggy-version/app.src.main.java.com.popularmovies.fragments.MovieDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "3ab1ae08299e4b92d6f09d18620e319130abcc65", "Url": "https://api.github.com/repos/Kilyc2/PopularMovies", "Date": "2015-09-15T22:44:16Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((movieDetails) == null) || (!(movieDetails.hasTrailers()))) shareTrailerItem.setVisible(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/224/buggy-version/app.src.main.java.com.popularmovies.fragments.MovieDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "3ab1ae08299e4b92d6f09d18620e319130abcc65", "Url": "https://api.github.com/repos/Kilyc2/PopularMovies", "Date": "2015-09-15T22:44:16Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pindroid.activity.AddBookmark.getIntent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (intent.hasExtra(Constants.EXTRA_DESCRIPTION)) { bookmark.setDescription(intent.getStringExtra(Constants.EXTRA_DESCRIPTION)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4445/buggy-version/src.com.pindroid.activity.AddBookmark.java", "BodyUseAPI": ["android.content.Intent.getStringExtra(Constants.EXTRA_DESCRIPTION)", "com.pindroid.providers.BookmarkContent.Bookmark.setDescription(intent.getStringExtra(Constants.EXTRA_DESCRIPTION))"], "Fixed commit": "cd9c013f2982f25124d63cc9c8a5f9c5f9ca8f6c", "Url": "https://api.github.com/repos/maxpower47/PinDroid", "Date": "2012-08-24T15:46:42Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.fishShopGUI) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/300/buggy-version/src.main.java.me.elsiff.morefish.MoreFish.java", "BodyUseAPI": [], "Fixed commit": "6fcca8a40b99971873a588cd7e97ac887c2dfd20", "Url": "https://api.github.com/repos/elsiff/more-fish", "Date": "2017-02-17T05:53:20Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getContext()) == null) { setState(State.DONE); }else { if ((getContext().getContextType()) == (BSONContextType.JAVASCRIPT_WITH_SCOPE)) { backpatchSize(); setContext(getContext().getParentContext()); } setState(getNextState()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8796/buggy-version/bson.src.main.org.bson.BSONBinaryWriter.java", "BodyUseAPI": [], "Fixed commit": "3c393cb3227c309e5d0dabdca463b1365da3d0fb", "Url": "https://api.github.com/repos/jyemin/mongo-java-driver", "Date": "2014-05-29T18:47:13Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (port.isEmpty()) { port = \"30000\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3182/buggy-version/slick-game.src.slimpleslickgame.MainMenu.java", "BodyUseAPI": [], "Fixed commit": "7091c3e649b963817fda0ccf50ddb8cadd6cfd44", "Url": "https://api.github.com/repos/Jullekungfu/SpaceDefence", "Date": "2015-04-27T09:56:42Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (jsonQualification != null) { mQualificationSettings = new com.makina.ecrins.commons.settings.QualificationSettings(jsonQualification); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6886/buggy-version/commons.src.main.java.com.makina.ecrins.commons.settings.AbstractAppSettings.java", "BodyUseAPI": [], "Fixed commit": "7be07ac3c391801683f8d5bf0f670cc0362872a1", "Url": "https://api.github.com/repos/PnEcrins/GeoNature-mobile", "Date": "2017-05-23T12:54:36Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((uri.getQuery()) != null) { path += \"?\" + (uri.getQuery()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3886/buggy-version/src.main.java.com.whizzosoftware.hobson.api.plugin.http.AbstractHttpClientPlugin.java", "BodyUseAPI": ["java.net.URI.getQuery()"], "Fixed commit": "24116280e865ddab4efc67b3ea08771ec0a39e37", "Url": "https://api.github.com/repos/whizzosoftware/hobson-hub-api", "Date": "2014-12-18T00:27:59Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) initDrugListPagerFragment(); else { final android.support.v4.app.Fragment f = getSupportFragmentManager().findFragmentByTag(\"pager\"); if (f instanceof at.jclehner.rxdroid.DrugListActivity2.DrugListPagerFragment) ((at.jclehner.rxdroid.DrugListActivity2.DrugListPagerFragment) (f)).setDate(at.jclehner.rxdroid.Settings.getActiveDate(), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8681/buggy-version/src.main.java.at.jclehner.rxdroid.DrugListActivity2.java", "BodyUseAPI": [], "Fixed commit": "c4f914a9fb22e60404e09dc7162b176746d4645c", "Url": "https://api.github.com/repos/jclehner/rxdroid", "Date": "2015-06-24T20:11:33Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cursor.getCount()) == contactsCount) com.elorri.android.tieus.data.BoardData.onlyUntrackedPeople = true; else com.elorri.android.tieus.data.BoardData.onlyUntrackedPeople = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6112/buggy-version/app.src.main.java.com.elorri.android.tieus.data.BoardData.java", "BodyUseAPI": [], "Fixed commit": "610db89c750c13a8b080efce9f33399693684f4f", "Url": "https://api.github.com/repos/Elorri/TieUs", "Date": "2016-06-07T20:40:43Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.elorri.android.tieus.data.BoardData.onlyUntrackedPeople) cursor = com.elorri.android.tieus.db.MatrixCursors.getOneLineCursor(MatrixCursors.MessageQuery.PROJECTION, MatrixCursors.MessageQuery.VALUES, context.getResources().getString(R.string.only_untracked_people)); else cursor = com.elorri.android.tieus.data.BoardData.getTopCursors(context, db, com.elorri.android.tieus.extra.Status.getLastMessageIdx(context), now, selection, selectionArgs);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6112/buggy-version/app.src.main.java.com.elorri.android.tieus.data.BoardData.java", "BodyUseAPI": [], "Fixed commit": "610db89c750c13a8b080efce9f33399693684f4f", "Url": "https://api.github.com/repos/Elorri/TieUs", "Date": "2016-06-07T20:40:43Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((pCtx.isStrictTypeEnforcement()) && ((ctx.getTypeParameters().length) != 0)) && ((pCtx.getLastTypeParameters()) != null)) && ((pCtx.getLastTypeParameters().length) == (ctx.getTypeParameters().length))) { java.lang.reflect.TypeVariable[] typeVariables = ctx.getTypeParameters(); for (int i = 0; i < (typeVariables.length); i++) { typeArgs.put(typeVariables[i].getName(), ((java.lang.Class) (pCtx.getLastTypeParameters()[i]))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6910/buggy-version/src.main.java.org.mvel2.compiler.PropertyVerifier.java", "BodyUseAPI": ["org.mvel2.compiler.PropertyVerifier.getLastTypeParameters()", "java.util.Map<java.lang.String, java.lang.Class>.put(java.lang.String,((java.lang.Class) (pCtx.getLastTypeParameters()[i])))", "java.lang.Class.getTypeParameters()"], "Fixed commit": "79c9354cee83ce1f3212aa29da9b71ed8b46d556", "Url": "https://api.github.com/repos/mikebrock/mvel", "Date": "2011-06-18T22:26:55Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (is == null) { throw new java.lang.RuntimeException(\"Could not initialize JNIWrapper: missing shared object in Jar.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4883/buggy-version/roboRIO.src.edu.wpi.first.wpilibj.hal.JNIWrapper.java", "BodyUseAPI": [], "Fixed commit": "56a2ee9ebbc212a15236722dc6ea35efe7756229", "Url": "https://api.github.com/repos/flamingchickens1540/common-chicken-runtime-engine", "Date": "2015-09-02T00:24:35Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { trip = ((com.atoennis.fuellog.domain.Trip) (savedInstanceState.getSerializable(com.atoennis.fuellog.TripFormFragment.EXTRA_TRIP))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2455/buggy-version/src.com.atoennis.fuellog.TripFormFragment.java", "BodyUseAPI": ["android.os.Bundle.getSerializable(java.lang.String)"], "Fixed commit": "24f20858643e76e6d696001808ef3c70ce25467a", "Url": "https://api.github.com/repos/atoennis/FuelLog", "Date": "2013-09-27T01:24:51Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enabled) { virtualFrequency = source.getFrequency(); virtualSampleRate = source.getSampleRate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7044/buggy-version/app.src.main.java.com.mantz_it.rfanalyzer.AnalyzerSurface.java", "BodyUseAPI": [], "Fixed commit": "64e6b331b7f6cb69d9c2e8da1a5f20f1958989a0", "Url": "https://api.github.com/repos/demantz/RFAnalyzer", "Date": "2015-01-03T21:19:57Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gamepad2.dpad_left)) { if (running) { arm.setPower(com.qualcomm.robotcore.util.Range.clip(speed, (-1.0), 1.0)); }else if (!running) { if ((arm.getCurrentPosition()) > (arm.getTargetPosition())) { arm.setPower((-armPower)); }else if ((arm.getCurrentPosition()) < (arm.getTargetPosition())) { arm.setPower(armPower); }else { arm.setPower(0.0); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7976/buggy-version/FtcRobotController.src.main.java.com.qualcomm.ftcrobotcontroller.opmodes.customops.TeleOp.DriverOp.java", "BodyUseAPI": [], "Fixed commit": "32a8111b4b67befc8bb6a9a69fd7965f6d3d4cde", "Url": "https://api.github.com/repos/GoldfishPi/Riven", "Date": "2015-12-23T20:11:23Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parquetWriter) != null) { parquetWriter.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8927/buggy-version/kafka-connect-s3.src.main.java.io.confluent.connect.s3.format.parquet.ParquetRecordWriterProvider.java", "BodyUseAPI": [], "Fixed commit": "5aef716807fb23b2e7ae836e8223a10204e0b8ae", "Url": "https://api.github.com/repos/sailthru/kafka-connect-storage-cloud", "Date": "2017-11-29T19:47:07Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.somethingdreadful.MAL.database.DatabaseHelper.DBExists(activity)) net.somethingdreadful.MAL.database.DatabaseHelper.deleteDatabase(activity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7288/buggy-version/Atarashii.src.net.somethingdreadful.MAL.tasks.AuthenticationCheckTask.java", "BodyUseAPI": ["net.somethingdreadful.MAL.database.DatabaseHelper.deleteDatabase(android.app.Activity)"], "Fixed commit": "bde4c0c83b72cdb814829d1469e7a98271819f59", "Url": "https://api.github.com/repos/AnimeNeko/Atarashii", "Date": "2016-04-23T14:01:37Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scheduler) == null) { scheduler = rx.schedulers.Schedulers.computation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7369/buggy-version/eureka2-client.src.main.java.com.netflix.eureka2.client.resolver.DnsServerResolver.java", "BodyUseAPI": [], "Fixed commit": "a75fbbde97e4a74d98799d554fb521465734c227", "Url": "https://api.github.com/repos/Netflix/eureka", "Date": "2015-01-16T20:16:10Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5445/buggy-version/src.main.java.uk.co.epii.conservatives.fredericknorth.utilities.gui.ProgressTrackerJProgressBar.java", "BodyUseAPI": [], "Fixed commit": "c12b679e2a7798e6b18b8916991416188256f465", "Url": "https://api.github.com/repos/etothepii/fredericknorth", "Date": "2013-09-01T07:12:03Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message != null) { this.message = message; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5445/buggy-version/src.main.java.uk.co.epii.conservatives.fredericknorth.utilities.gui.ProgressTrackerJProgressBar.java", "BodyUseAPI": [], "Fixed commit": "c12b679e2a7798e6b18b8916991416188256f465", "Url": "https://api.github.com/repos/etothepii/fredericknorth", "Date": "2013-09-01T07:12:03Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((control.isWaterBoostOn()) && (((calendar.getTimeInMillis()) > (control.getWaterBoostOffTime())) && ((control.getWaterBoostOffTime()) > 0))) { control.toggleWaterBoostStatus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4967/buggy-version/src.opt.boilercontrol.uk.co.jaynne.Scheduler.java", "BodyUseAPI": ["uk.co.jaynne.ControlBroker.toggleWaterBoostStatus()"], "Fixed commit": "a3da9a82049f4dc90a6e9804f878dd5cce17ecc4", "Url": "https://api.github.com/repos/gulliverrr/hestia-engine-dev", "Date": "2014-10-27T01:21:21Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mView.isAdded()) { mView.getEmptyListTextView().setVisibility(((pObject.size()) == 0 ? android.view.View.VISIBLE : android.view.View.GONE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6414/buggy-version/app.src.main.java.ro.androidiasi.codecamp.favorites.FavoritesPresenter.java", "BodyUseAPI": ["mView.getEmptyListTextView().setVisibility(((pObject.size()) == 0 ? android.view.View.VISIBLE : android.view.View.GONE))", "ro.androidiasi.codecamp.favorites.FavoritesPresenter.1.getEmptyListTextView()"], "Fixed commit": "ef72a426cb774928369bbe3bb82aa2d928975151", "Url": "https://api.github.com/repos/AndroidIasi/CodeCamp", "Date": "2016-04-22T12:22:05Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFixProvider.findFixes(com.intellij.util.Function<com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFixProvider, java.util.List<com.intellij.codeInspection.LocalQuickFix>>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (providedFixes != null) { return providedFixes; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1360/buggy-version/java.java-impl.src.com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix.java", "BodyUseAPI": [], "Fixed commit": "a1ece222e044c9b7c7ea549bf855728dd768904a", "Url": "https://api.github.com/repos/jwren/intellij-community", "Date": "2015-07-16T08:04:48Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (str == null) return com.evanmclean.evlib.lang.Str.EMPTY;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7119/buggy-version/src.main.java.com.evanmclean.erudite.config.TitleMunger.java", "BodyUseAPI": [], "Fixed commit": "690fe1a3d475eb51b52e07301a58b8eabb34a25e", "Url": "https://api.github.com/repos/evmcl/erudite", "Date": "2016-10-28T04:24:45Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.child(mAuth.getCurrentUser().getUid()).child(\"HiredBy\").exists()) { catHiredBy = dataSnapshot.child(mAuth.getCurrentUser().getUid()).child(\"HiredBy\").getValue().toString(); mDatabaseUsers.child(catHiredBy).addListenerForSingleValueEvent(new com.google.firebase.database.ValueEventListener() { @java.lang.Override public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) { java.lang.String hiredName = dataSnapshot.child(\"UserName\").getValue().toString(); txt_hiredByName.setText(hiredName); } @java.lang.Override public void onCancelled(com.google.firebase.database.DatabaseError databaseError) { } }); }else { txt_hiredByName.setText(\"No One\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2540/buggy-version/app.src.main.java.com.example.hamziii.boolawa.ServceProviderShowHire.java", "BodyUseAPI": ["com.google.firebase.database.DataSnapshot.child(mAuth.getCurrentUser().getUid())", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "com.google.firebase.auth.FirebaseAuth.getCurrentUser()", "dataSnapshot.child(\"UserName\").getValue()", "mDatabaseUsers.child(catHiredBy).addListenerForSingleValueEvent(com.google.firebase.database.ValueEventListener)", "dataSnapshot.child(mAuth.getCurrentUser().getUid()).child(\"HiredBy\").getValue().toString()", "mAuth.getCurrentUser().getUid()", "dataSnapshot.child(mAuth.getCurrentUser().getUid()).child(\"HiredBy\").getValue()", "dataSnapshot.child(\"UserName\").getValue().toString()", "dataSnapshot.child(mAuth.getCurrentUser().getUid()).child(java.lang.String)"], "Fixed commit": "9961bbf21adf41ae9b941abe9da5326a1835c2b1", "Url": "https://api.github.com/repos/danihamzi/Boolawa", "Date": "2017-11-30T16:43:34Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selecteStock) == 0) { android.widget.Toast.makeText(this, \"\u8bf7\u9009\u62e9\u8865\u8d27\u6570\u91cf.\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/460/buggy-version/app.src.main.java.com.seekersoftvendingapp.ManagerPassageActivity.java", "BodyUseAPI": [], "Fixed commit": "9bba028f70aa44115a97c2c825801067c473eb19", "Url": "https://api.github.com/repos/frankjunqi/SeekerSoftVendingApp", "Date": "2016-12-23T01:43:06Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((submission_steps) == null) { submission_steps = getResources().getStringArray(R.array.submission_steps); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6058/buggy-version/app.src.main.java.com.github.codetanzania.ui.activity.BaseAppFragmentActivity.java", "BodyUseAPI": [], "Fixed commit": "92925ab4205a87cd7be436352887bf3e4a27f58e", "Url": "https://api.github.com/repos/CodeTanzania/open311-android", "Date": "2017-09-07T07:24:39Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lecho.lib.hellocharts.util.ChartUtils.dp2px(lecho.lib.hellocharts.renderer.PieChartRenderer,data.getSlicesSpacing())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sliceSpacing < 1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4847/buggy-version/hellocharts-library.src.lecho.lib.hellocharts.renderer.PieChartRenderer.java", "BodyUseAPI": [], "Fixed commit": "f19102dba1558d22fd1aba33463b8d18520cb325", "Url": "https://api.github.com/repos/lecho/hellocharts-android", "Date": "2015-05-10T18:13:09Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((envelope.version) == (org.ksoap2.serialization.SoapSerializationEnvelope.VER12)) { connection.setRequestProperty(\"Content-Type\", \"application/soap+xml\"); }else { connection.setRequestProperty(\"Content-Type\", \"text/xml\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1647/buggy-version/ksoap2-midp.src.main.java.org.ksoap2.transport.HttpTransport.java", "BodyUseAPI": [], "Fixed commit": "8f2a09e577675811701fb60f0a74d42559a8b082", "Url": "https://api.github.com/repos/simpligility/ksoap2-android", "Date": "2011-09-26T19:02:52Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((envelope.version) == (org.ksoap2.serialization.SoapSerializationEnvelope.VER12)) { connection.setRequestProperty(\"Content-Type\", \"application/soap+xml\"); }else { connection.setRequestProperty(\"Content-Type\", \"text/xml\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1647/buggy-version/ksoap2-j2se.src.main.java.org.ksoap2.transport.HttpTransportSE.java", "BodyUseAPI": [], "Fixed commit": "8f2a09e577675811701fb60f0a74d42559a8b082", "Url": "https://api.github.com/repos/simpligility/ksoap2-android", "Date": "2011-09-26T19:02:52Z"},
{"Line": "=>566", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["path.edges.getLast()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((edge0.getToVertex()) != (state.getVertex())) { state = state.getBackState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3169/buggy-version/opentripplanner-routing.src.main.java.org.opentripplanner.routing.impl.raptor.Raptor.java", "BodyUseAPI": ["org.opentripplanner.routing.core.State.getBackState()"], "Fixed commit": "80855937740d870b6ba0d94aee124bebf80947be", "Url": "https://api.github.com/repos/openplans/OpenTripPlanner", "Date": "2012-12-06T02:26:01Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (viewIdsToProcess != null) { this.timepointsToProcess = spim.fiji.spimdata.SpimData2.getAllTimePointsSorted(spimData, viewIdsToProcess); this.channelsToProcess = spim.fiji.spimdata.SpimData2.getAllChannelsSorted(spimData, viewIdsToProcess); if (spimData == null) { avgPixels = 0; maxNumViews = 0; }else { avgPixels = computeAvgImageSize(); maxNumViews = computeMaxNumViews(); } }else { this.timepointsToProcess = null; this.channelsToProcess = null; this.avgPixels = 0; this.maxNumViews = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5731/buggy-version/src.main.java.spim.fiji.plugin.fusion.Fusion.java", "BodyUseAPI": [], "Fixed commit": "d672df2d73f7172d454dc1a65e150bae883613b5", "Url": "https://api.github.com/repos/fiji/SPIM_Registration", "Date": "2015-03-18T18:06:29Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.debug) java.lang.System.out.println((((((\"[Current Stmt]\" + className) + \":\") + (s.getSourceLineNumber())) + \" \") + (s.getTheStmt())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1637/buggy-version/src.concolic.Execution.java", "BodyUseAPI": [], "Fixed commit": "a11ecc1fc1a30963799f028a5cc209e3b88ba8bf", "Url": "https://api.github.com/repos/Wenhao-Chen/ConcolicExecutionEngine", "Date": "2015-01-20T00:57:45Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["concolic.PathSummary.findExistingExpression(analysis.Expression)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (newP != null) right.add(newP);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1637/buggy-version/src.concolic.Execution.java", "BodyUseAPI": ["analysis.Expression.add(analysis.Expression)"], "Fixed commit": "a11ecc1fc1a30963799f028a5cc209e3b88ba8bf", "Url": "https://api.github.com/repos/Wenhao-Chen/ConcolicExecutionEngine", "Date": "2015-01-20T00:57:45Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (insertSucces) return item;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8745/buggy-version/src.info.bottiger.podcast.parser.FeedParserWrapper.java", "BodyUseAPI": [], "Fixed commit": "8f0f124b4275ad50be3d8441dd3129242c57ed01", "Url": "https://api.github.com/repos/bottiger/SoundWaves", "Date": "2013-02-16T09:59:46Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((passwordEncoder) == null) { this.passwordEncoder = new org.springframework.security.crypto.scrypt.SCryptPasswordEncoder(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2132/buggy-version/user.src.main.java.com.micor.user.config.WebSecurityConfiguration.java", "BodyUseAPI": [], "Fixed commit": "f86002675914cc7908a20b2d47c5e5ab2fc73b13", "Url": "https://api.github.com/repos/HwMuTou/CloudNote", "Date": "2017-08-29T07:45:21Z"},
{"Line": "=>1378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(BASIC_TOKEN_TYPE.equals(mAuthTokenType))) { mUsernameInput.setText(username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8566/buggy-version/src.com.owncloud.android.authentication.AuthenticatorActivity.java", "BodyUseAPI": [], "Fixed commit": "12cf2bbc2c856bdf9279a7e776e0d66901c8cfcc", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2017-09-27T10:34:04Z"},
{"Line": "=>1388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BASIC_TOKEN_TYPE.equals(mAuthTokenType)) { updateAccountAuthentication(); success = true; }else { success = updateAccount(username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8566/buggy-version/src.com.owncloud.android.authentication.AuthenticatorActivity.java", "BodyUseAPI": [], "Fixed commit": "12cf2bbc2c856bdf9279a7e776e0d66901c8cfcc", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2017-09-27T10:34:04Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (request.method.equals(\"GET\")) { map.put(\"Set-Cookie\", (\"index=\" + ((Games.games.size()) - 1))); Games.games.add(new TicTacToe()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3664/buggy-version/src.main.java.GameRoute.java", "BodyUseAPI": [], "Fixed commit": "e8e6efbcd4c1401996cb65dedb51c9204de59c07", "Url": "https://api.github.com/repos/aspalding/TicTacServer", "Date": "2014-08-28T21:17:57Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameData.getAnsweredQuestions().size()) >= (com.lfg.informatik.q11.quizzing4abi.app_states.ActiveQuestionState.maxAskedQuestions)) application.setState(new com.lfg.informatik.q11.quizzing4abi.app_states.GameResultsState(application));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3858/buggy-version/app.src.main.java.com.lfg.informatik.q11.quizzing4abi.app_states.ActiveQuestionState.java", "BodyUseAPI": [], "Fixed commit": "5912239c1516301f677ba9baa01251aecd0dcdee", "Url": "https://api.github.com/repos/Infoabiquiz/Quizzing4Abi", "Date": "2015-07-15T17:21:23Z"},
{"Line": "=>2943", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((handler.getExitValue()) != 0) { throw new java.lang.Exception((((\"Failed to start Solr using command: \" + startCmd) + \" Exception : \") + (handler.getException()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2099/buggy-version/solr.core.src.java.org.apache.solr.util.SolrCLI.java", "BodyUseAPI": ["org.apache.commons.exec.DefaultExecuteResultHandler.getException()"], "Fixed commit": "8bfe8c7b2400a6ae7d3c01d9cdb69558c1aceed5", "Url": "https://api.github.com/repos/apache/lucene-solr", "Date": "2017-04-03T20:45:54Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((me.A5H73Y.Parkour.Utilities.DatabaseMethods.getCourseId(courseName, false)) == 0) { me.A5H73Y.Parkour.Utilities.DatabaseMethods.insertCourse(courseName, me.A5H73Y.Parkour.Parkour.getParkourConfig().getCourseData().getString((courseName + \".Creator\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2764/buggy-version/src.main.java.me.A5H73Y.Parkour.Other.StartPlugin.java", "BodyUseAPI": ["me.A5H73Y.Parkour.Utilities.DatabaseMethods.insertCourse(java.lang.String,me.A5H73Y.Parkour.Parkour.getParkourConfig().getCourseData().getString((courseName + \".Creator\")))", "me.A5H73Y.Parkour.Parkour.getParkourConfig().getCourseData().getString(java.lang.String)"], "Fixed commit": "5c887fc185ec6a9beb4fdfda31979aec297eb79f", "Url": "https://api.github.com/repos/steve4744/Parkour", "Date": "2017-10-29T21:19:56Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((scale.getMode()) == (Scale.Mode.ASPECT_FIT_WIDTH)) { filters.add(java.lang.String.format(\"[%s] scale=%d:-1 [scale]\", filterId, scale.getWidth())); }else if ((scale.getMode()) == (Scale.Mode.ASPECT_FIT_HEIGHT)) { filters.add(java.lang.String.format(\"[%s] scale=-1:%d [scale]\", filterId, scale.getHeight())); }else if ((scale.getMode()) == (Scale.Mode.ASPECT_FIT_INSIDE)) { int min = java.lang.Math.min(scale.getWidth(), scale.getHeight()); filters.add(java.lang.String.format(\"[%s] scale=min(%d\\\\, iw):-1 [scale]\", filterId, min)); }else if ((scale.getMode()) == (Scale.Mode.NON_ASPECT_FILL)) { filters.add(java.lang.String.format(\"[%s] scale=%d:%d [scale]\", filterId, scale.getWidth(), scale.getHeight())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8139/buggy-version/src.main.java.edu.illinois.library.cantaloupe.processor.FfmpegProcessor.java", "BodyUseAPI": ["edu.illinois.library.cantaloupe.image.Scale.getHeight()", "edu.illinois.library.cantaloupe.image.Scale.getHeight()", "edu.illinois.library.cantaloupe.image.Scale.getMode()", "java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String,scale.getWidth())", "edu.illinois.library.cantaloupe.image.Scale.getHeight()", "edu.illinois.library.cantaloupe.image.Scale.getMode()", "java.lang.String.format(java.lang.String,java.lang.String,scale.getWidth(),scale.getHeight())", "edu.illinois.library.cantaloupe.image.Scale.getWidth()", "java.lang.Math.min(scale.getWidth(),scale.getHeight())", "edu.illinois.library.cantaloupe.image.Scale.getMode()", "edu.illinois.library.cantaloupe.image.Scale.getWidth()", "java.lang.String.format(java.lang.String,java.lang.String,scale.getHeight())", "java.util.List<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)", "edu.illinois.library.cantaloupe.image.Scale.getWidth()"], "Fixed commit": "a566dab6e9f76ee03fd11e3fd667c4b113fb68bd", "Url": "https://api.github.com/repos/medusa-project/cantaloupe", "Date": "2016-02-17T21:23:55Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((space != (org.verapdf.as.CharTable.ASCII_SPACE)) || (!(isDigit()))) { document.setSubsectionHeaderSpaceSeparated(java.lang.Boolean.FALSE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1889/buggy-version/src.main.java.org.verapdf.parser.PDFParser.java", "BodyUseAPI": [], "Fixed commit": "59d6c7b23c3f7188452ab8e6184d48920ab58c60", "Url": "https://api.github.com/repos/timurkamalov/veraPDF-parser", "Date": "2016-09-16T11:18:12Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (customBindings.containsKey(action)) { customBindings.get(action).put(inputDevice, keyCode); }else { java.util.HashMap<edu.chl.LifeOfAGoblin.model.InputDevice, java.lang.Integer> temp = new java.util.HashMap<>(); temp.put(inputDevice, keyCode); customBindings.put(action, temp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/505/buggy-version/src.main.java.edu.chl.LifeOfAGoblin.model.Profile.java", "BodyUseAPI": ["java.util.HashMap<edu.chl.LifeOfAGoblin.model.Actions, java.util.HashMap<edu.chl.LifeOfAGoblin.model.InputDevice, java.lang.Integer>>.put(edu.chl.LifeOfAGoblin.model.Actions,java.util.HashMap<edu.chl.LifeOfAGoblin.model.InputDevice, java.lang.Integer>)", "java.util.HashMap<edu.chl.LifeOfAGoblin.model.Actions, java.util.HashMap<edu.chl.LifeOfAGoblin.model.InputDevice, java.lang.Integer>>.get(edu.chl.LifeOfAGoblin.model.Actions)", "customBindings.get(action).put(edu.chl.LifeOfAGoblin.model.InputDevice,java.lang.Integer)"], "Fixed commit": "2b8f2c439b532f6664905f7b4c6ff3991fb65b22", "Url": "https://api.github.com/repos/Mrmiffo/LifeOfAGoblin", "Date": "2015-05-18T17:01:52Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mAuth.getCurrentUser().getDisplayName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (nameDisplay != null) displayname.setText(nameDisplay);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6315/buggy-version/app.src.main.java.com.example.salilthip.mystoryapp.UserMainActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "65c9fdbdf1512ad90c9bfca1d61ba39ae137b9d7", "Url": "https://api.github.com/repos/cookieung/MyStoryApp", "Date": "2017-05-17T16:27:51Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Array.get(java.lang.Object,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (element != null) { addValue(null, element.getClass(), element, builder, null, additionalFields); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/298/buggy-version/src.main.java.com.arangodb.velocypack.VPack.java", "BodyUseAPI": ["com.arangodb.velocypack.VPack.addValue(<nulltype>,java.lang.Class<? extends java.lang.Object>,java.lang.Object,com.arangodb.velocypack.VPackBuilder,<nulltype>,java.util.Map<java.lang.String, java.lang.Object>)", "java.lang.Object.getClass()"], "Fixed commit": "28b11a4e5d2efe3715fe93bc3d662c2d4521f94a", "Url": "https://api.github.com/repos/arangodb/arangodb-java-driver", "Date": "2017-01-09T08:58:47Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (composite.isDisposed()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6567/buggy-version/com.toedter.e4.demo.contacts.swt.src.com.toedter.e4.demo.contacts.swt.views.DetailComposite.java", "BodyUseAPI": [], "Fixed commit": "f6e96f4792ea89fa30dc2765930ecd2a3e5859d9", "Url": "https://api.github.com/repos/toedter/e4-rendering", "Date": "2012-07-05T04:09:42Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orctom.rmq.QueueStore.iter(com.orctom.rmq.Queue)", "java.lang.String.getBytes()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.util.Arrays.equals(offsetBytes, iterator.key())) { iterator.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3599/buggy-version/src.main.java.com.orctom.rmq.Queue.java", "BodyUseAPI": ["org.rocksdb.RocksIterator.next()"], "Fixed commit": "b973667193a0046d5f765190be8ba19818ceaa90", "Url": "https://api.github.com/repos/orctom/rmq", "Date": "2017-01-08T14:19:01Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nearTransitBonus) && (edgesNearTransit.contains(e))) { distance /= 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3790/buggy-version/opentripplanner-routing.src.main.java.org.opentripplanner.routing.impl.StreetVertexIndexServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "994b8abd55c5c9126e8f0989ef17dbbcf610b34e", "Url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner", "Date": "2011-08-07T15:49:44Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((pollPeriod) == null) || (pollPeriod.equals(Duration.PRACTICALLY_FOREVER))) { }else { brooklyn.util.task.ScheduledTask task = new brooklyn.util.task.ScheduledTask(brooklyn.util.collections.MutableMap.of(\"period\", pollPeriod), taskFactory); pollingTask = managementContext.getExecutionManager().submit(task); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5667/buggy-version/core.src.main.java.brooklyn.management.ha.HighAvailabilityManagerImpl.java", "BodyUseAPI": ["brooklyn.util.collections.MutableMap.of(java.lang.String,brooklyn.util.time.Duration)"], "Fixed commit": "b0f3f5f6d309d0ec95696b1a1d0db12ba79777ad", "Url": "https://api.github.com/repos/Nakomis/incubator-brooklyn", "Date": "2014-07-02T13:45:57Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fso.getParentId()) == null) fso.setParentId(persistenceManager.getId(folder));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5051/buggy-version/src.main.java.org.apache.chemistry.opencmis.utils.FilePersistenceLoader.java", "BodyUseAPI": ["org.apache.chemistry.opencmis.inmemory.storedobj.api.Folder.setParentId(persistenceManager.getId(folder))"], "Fixed commit": "a92d0bbd93c50d456293b6189db2be36aff3fc8f", "Url": "https://api.github.com/repos/MGDIS/lightweightCMISserver", "Date": "2015-10-28T08:46:19Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.erichseifert.gral.data.DataAccessor.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (foreignValue == null) { if (thisValue != null) { return false; } continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7248/buggy-version/gral-core.src.main.java.de.erichseifert.gral.data.DataAccessor.java", "BodyUseAPI": [], "Fixed commit": "c75970d2d0737f05a496044faf36a13609b9972e", "Url": "https://api.github.com/repos/eseifert/gral", "Date": "2015-04-11T18:44:29Z"},
{"Line": "=>684", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tasknote.shared.TaskObject.getDateHour()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (taskHour == (tasknote.shared.Constants.INVALID_VALUE_CONSTANT)) { taskHour = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6634/buggy-version/src.tasknote.logic.TaskNote.java", "BodyUseAPI": [], "Fixed commit": "6c58df3a95bc03b4d42ccf9295a1312b495e789f", "Url": "https://api.github.com/repos/CS2103JAN2016-W15-2J/main", "Date": "2016-03-30T07:55:23Z"},
{"Line": "=>687", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tasknote.shared.TaskObject.getDateMinute()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (taskMinute == (tasknote.shared.Constants.INVALID_VALUE_CONSTANT)) { taskMinute = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6634/buggy-version/src.tasknote.logic.TaskNote.java", "BodyUseAPI": [], "Fixed commit": "6c58df3a95bc03b4d42ccf9295a1312b495e789f", "Url": "https://api.github.com/repos/CS2103JAN2016-W15-2J/main", "Date": "2016-03-30T07:55:23Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAlive()) { java.util.Random r = new java.util.Random(); int temp = (r.nextInt()) % 8; if ((temp % 2) == 0) { p.attacked(getName(), 1); }else if (temp == 1) { p.attacked(getName(), 2); }else { java.lang.System.out.println(((\"Monster \" + (name)) + \" attacked but missed\")); } p.attacked(name, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/9197/buggy-version/src.model.object.Monster.java", "BodyUseAPI": [], "Fixed commit": "f8d6d9cf3966e41ec9fa8a6802152761556dd82e", "Url": "https://api.github.com/repos/sbyron15/Zuul-Game", "Date": "2012-11-20T19:24:38Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isSet) { this.setDefaultWidgetToQuestion(_question); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1731/buggy-version/Fugazi.src.org.fugazi.qls.ast.DefaultStyleHandler.java", "BodyUseAPI": [], "Fixed commit": "207f5d6cf0df77252252abf763a17923a610fd75", "Url": "https://api.github.com/repos/software-engineering-amsterdam/many-ql", "Date": "2015-03-17T12:38:07Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getOwner()) == null) { setDead(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5709/buggy-version/src.main.java.com.crowsofwar.avatar.common.entity.EntityFireball.java", "BodyUseAPI": [], "Fixed commit": "fe0312076162419c807cf405b26e5eccc4a7f1ff", "Url": "https://api.github.com/repos/CrowsOfWar/AvatarMod", "Date": "2017-07-05T15:41:59Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (plugin.getManager().params.isMw_enabled()) { sql += \" order by PlayerWorld.points\"; }else { sql += \" order by points\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4776/buggy-version/src.main.java.com.alternacraft.pvptitles.Backend.DatabaseManagerSQL.java", "BodyUseAPI": [], "Fixed commit": "bd97157bfe08bb7c78d0077ad2d34553b362144a", "Url": "https://api.github.com/repos/AlternaCraft/PvpTitles", "Date": "2017-04-28T22:59:34Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((partSales.getSalesType()) == (com.topsun.posclient.common.AppConstants.SALES_TYPE_EXECHANGE)) { if (items.get(i).getItemType().equals(AppConstants.ITEM_TYPE_RETURNED)) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/566/buggy-version/com.topsun.posclient.sales.core.src.com.topsun.posclient.sales.core.PartSalesPrintData.java", "BodyUseAPI": [], "Fixed commit": "a93bc3249518afaeb700ec5cf91e9695d317f5d3", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2014-06-26T07:57:19Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 0) { sb.setLength(((sb.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7352/buggy-version/src.main.java.co.cask.http.PatternPathRouterWithGroups.java", "BodyUseAPI": ["java.lang.StringBuilder.setLength(int)", "java.lang.StringBuilder.length()"], "Fixed commit": "126daa967675738f832e7b060e5113b0d60acf03", "Url": "https://api.github.com/repos/zhiPATHngli/netty-http", "Date": "2016-12-23T16:00:29Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(suggestedReplacements.contains(replacement))) { suggestedReplacements.add(replacement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5872/buggy-version/languagetool-core.src.main.java.org.languagetool.rules.RuleMatch.java", "BodyUseAPI": [], "Fixed commit": "1eda6485efbf005b2d3858ad0b9ac8e8aa42602c", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2016-06-27T13:34:38Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(content)) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/677/buggy-version/library.src.main.java.android.jiang.com.library.utils.HttpUtils.java", "BodyUseAPI": [], "Fixed commit": "a688ab89c9a59d0f34d597faa4b75b33fee0a41d", "Url": "https://api.github.com/repos/jiang111/OkHttpTaskUtils", "Date": "2016-04-08T02:58:08Z"},
{"Line": "=>1953", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (playerId == null) { threats = game.getBattlefield().getActivePermanents(filter, this.getId(), sourceId, game); }else { mage.filter.FilterPermanent filterCopy = filter.copy(); filterCopy.add(new mage.filter.predicate.other.PlayerIdPredicate(playerId)); threats = game.getBattlefield().getActivePermanents(filter, this.getId(), sourceId, game); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7208/buggy-version/Mage.Server.Plugins.Mage.Player.AI.src.main.java.mage.player.ai.ComputerPlayer.java", "BodyUseAPI": ["mage.filter.FilterPermanent.add(mage.filter.predicate.other.PlayerIdPredicate)"], "Fixed commit": "80d3e6bd9a4ffb6fcb090f03fc3059675535dc74", "Url": "https://api.github.com/repos/jlin14/mage", "Date": "2015-02-27T14:04:42Z"},
{"Line": "=>886", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.configuration.MemorySection.get(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (val != null) return val instanceof org.bukkit.configuration.ConfigurationSection ? ((org.bukkit.configuration.ConfigurationSection) (val)) : null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7942/buggy-version/src.main.java.org.bukkit.configuration.MemorySection.java", "BodyUseAPI": [], "Fixed commit": "8f1da44e0cb8a019aebfaba04dde66eea72dfe69", "Url": "https://api.github.com/repos/jsteenbeeke/Bukkit", "Date": "2011-12-16T17:23:53Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (leftOp != null) if (getAliasing().canHaveAliases(stmt, leftOp, abs)) getAliasing().computeAliases(d1, stmt, leftOp, res, getManager().getICFG().getMethodOf(stmt), abs);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2521/buggy-version/src.soot.jimple.infoflow.problems.rules.SourcePropagationRule.java", "BodyUseAPI": ["getAliasing().canHaveAliases(soot.jimple.Stmt,soot.Value,soot.jimple.infoflow.data.Abstraction)", "getAliasing().computeAliases(soot.jimple.infoflow.data.Abstraction,soot.jimple.Stmt,soot.Value,java.util.Set<soot.jimple.infoflow.data.Abstraction>,getManager().getICFG().getMethodOf(stmt),soot.jimple.infoflow.data.Abstraction)"], "Fixed commit": "b194895523652544d4f1763aff51fa0edb9a6c0d", "Url": "https://api.github.com/repos/secure-software-engineering/soot-infoflow", "Date": "2015-08-19T15:19:24Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source == (getZeroValue())) return (res == null) || (res.isEmpty()) ? java.util.Collections.<soot.jimple.infoflow.data.Abstraction>emptySet() : res;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2521/buggy-version/src.soot.jimple.infoflow.problems.InfoflowProblem.java", "BodyUseAPI": [], "Fixed commit": "b194895523652544d4f1763aff51fa0edb9a6c0d", "Url": "https://api.github.com/repos/secure-software-engineering/soot-infoflow", "Date": "2015-08-19T15:19:24Z"},
{"Line": "=>719", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (analyzer.level1.JimpleInjector.varTyping.getAfter(analyzer.level1.JimpleInjector.instantiation, ((analyzer.level1.Stmt) (pos)), l).isDynamic()) { analyzer.level1.JimpleInjector.unitStore_Before.insertElement(analyzer.level1.JimpleInjector.unitStore_Before.new analyzer.level1.storage.UnitStore.Element(assignSignature, pos)); if (analyzer.level1.JimpleInjector.cxTyping.get(analyzer.level1.JimpleInjector.instantiation, ((analyzer.level1.Stmt) (pos))).isDynamic()) { analyzer.level1.JimpleInjector.unitStore_Before.insertElement(analyzer.level1.JimpleInjector.unitStore_Before.new analyzer.level1.storage.UnitStore.Element(checkLocalPCExpr, pos)); } analyzer.level1.JimpleInjector.unitStore_Before.insertElement(analyzer.level1.JimpleInjector.unitStore_Before.new analyzer.level1.storage.UnitStore.Element(invoke, pos)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7472/buggy-version/DynamicAnalyzer.src.main.java.analyzer.level1.JimpleInjector.java", "BodyUseAPI": ["analyzer.level1.JimpleInjector.cxTyping.get(analyzer.level1.JimpleInjector.instantiation, ((analyzer.level1.Stmt) (pos))).isDynamic()", "de.unifreiburg.cs.proglang.jgs.instrumentation.CxTyping.get(de.unifreiburg.cs.proglang.jgs.instrumentation.Instantiation,analyzer.level1.Unit)"], "Fixed commit": "7518aed7c1beed8e734860debb49dcd1e2843334", "Url": "https://api.github.com/repos/mueller91/gradual-java", "Date": "2017-02-20T22:46:02Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(year.isEmpty())) && (!(month.isEmpty()))) && (!(day.isEmpty()))) { java.util.Calendar c = getCalendar(year, month, day); format = getReleaseDateFormat(c, ActivityExtras.MOVIE_DIALOG_RELEASE_DATE_FORMAT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6470/buggy-version/app.src.main.java.movienight.javi.com.movienight.dialogs.MovieDialog.MovieDialogFragment.java", "BodyUseAPI": ["movienight.javi.com.movienight.dialogs.MovieDialog.MovieDialogFragment.getCalendar(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "770786953293292241de63e1b75a250f50041fd8", "Url": "https://api.github.com/repos/JaviMera/MovieNight", "Date": "2016-11-03T16:59:56Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (code instanceof wyil.util.dfa.Code.Goto) { wyil.util.dfa.Code.Goto gto = ((wyil.util.dfa.Code.Goto) (stmt.code)); store = stores.get(gto.target); }else { if (((code instanceof wyil.util.dfa.Code.Fail) || (code instanceof wyil.util.dfa.Code.Return)) || (code instanceof wyil.util.dfa.Code.Throw)) { store = lastStore(); } store = propagate(i, stmt, store); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2290/buggy-version/src.wyil.util.dfa.BackwardFlowAnalysis.java", "BodyUseAPI": [], "Fixed commit": "87213c4cc8fd18b2a977880bf81047d9ca6323f4", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-11-03T05:59:02Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((value.getClassType()) != null) { return value.getClassType().name(); }else { return \"array\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4876/buggy-version/microbat.src.main.microbat.views.DebugFeedbackView.java", "BodyUseAPI": ["sav.strategies.dto.execute.value.ReferenceValue.getClassType()", "value.getClassType().name()"], "Fixed commit": "fdf57d6b537f5048e051f65a5b9b50ce4b7df9cd", "Url": "https://api.github.com/repos/sunjun-group/Ziyuan", "Date": "2015-12-04T05:46:39Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((songPath) == null) || (songPath.isEmpty())) { android.widget.Toast.makeText(this, \"Edite esta m\ufffdsica realizando Upload de Mp3!\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1124/buggy-version/LyricsApplication.src.com.example.lyricsapplication.ViewLyricsActivity.java", "BodyUseAPI": [], "Fixed commit": "cd12dba4a8e5daafe53343c312755f56fb750828", "Url": "https://api.github.com/repos/robertafernandes/banklyrics", "Date": "2014-05-10T17:50:37Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cars[pos].img.substring(0, 4).equals(\"http\")) return cars[pos].img; else return \"http:\" + (cars[pos].img);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4700/buggy-version/app.src.main.java.com.develop.searchmycarandroid.Cars.java", "BodyUseAPI": [], "Fixed commit": "49fe249d2fe520b2c30614ed24521d8429ea5a61", "Url": "https://api.github.com/repos/NIKsun/AutoMsk", "Date": "2015-09-18T17:10:23Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cars[pos].href.substring(0, 4).equals(\"http\")) return cars[pos].href; else return \"http://\" + (cars[pos].href);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4700/buggy-version/app.src.main.java.com.develop.searchmycarandroid.Cars.java", "BodyUseAPI": [], "Fixed commit": "49fe249d2fe520b2c30614ed24521d8429ea5a61", "Url": "https://api.github.com/repos/NIKsun/AutoMsk", "Date": "2015-09-18T17:10:23Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalNumGames == 0) return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5782/buggy-version/src.com.voracious.dragons.server.DBHandler.java", "BodyUseAPI": [], "Fixed commit": "914e0f58f97098934d908d9df39cc976fd9adcc3", "Url": "https://api.github.com/repos/VoraciousSoftworks/Here-There-Be-Dragons", "Date": "2013-04-19T03:12:49Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numberTuples == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5782/buggy-version/src.com.voracious.dragons.server.DBHandler.java", "BodyUseAPI": [], "Fixed commit": "914e0f58f97098934d908d9df39cc976fd9adcc3", "Url": "https://api.github.com/repos/VoraciousSoftworks/Here-There-Be-Dragons", "Date": "2013-04-19T03:12:49Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((h1.ip) == 0) || ((h2.ip) == 0)) { int i = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2321/buggy-version/src.topology.SwitchMapping.java", "BodyUseAPI": [], "Fixed commit": "f47241c88de44a50488948e3c51f4de5b2fc283d", "Url": "https://api.github.com/repos/Shrammer1/FinalProject", "Date": "2016-02-08T21:21:17Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (field instanceof org.tuleap.mylyn.task.internal.core.model.field.dynamic.TuleapSubmittedBy) { this.createGroupContent(((org.tuleap.mylyn.task.internal.core.model.field.dynamic.TuleapSubmittedBy) (field)), group); }else if (field instanceof org.tuleap.mylyn.task.internal.core.model.field.TuleapInteger) { this.createGroupContent(((org.tuleap.mylyn.task.internal.core.model.field.TuleapInteger) (field)), group); }else if (field instanceof org.tuleap.mylyn.task.internal.core.model.field.TuleapFloat) { this.createGroupContent(((org.tuleap.mylyn.task.internal.core.model.field.TuleapFloat) (field)), group); }else if (field instanceof org.tuleap.mylyn.task.internal.core.model.field.dynamic.TuleapComputedValue) { this.createGroupContent(((org.tuleap.mylyn.task.internal.core.model.field.dynamic.TuleapComputedValue) (field)), group); }else if (field instanceof org.tuleap.mylyn.task.internal.core.model.field.TuleapOpenList) { this.createGroupContent(((org.tuleap.mylyn.task.internal.core.model.field.TuleapOpenList) (field)), group); }else if (field instanceof org.tuleap.mylyn.task.internal.core.model.field.TuleapArtifactLink) { this.createGroupContent(((org.tuleap.mylyn.task.internal.core.model.field.TuleapArtifactLink) (field)), group); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8426/buggy-version/org.tuleap.mylyn.task.ui.src.org.tuleap.mylyn.task.internal.ui.wizards.query.TuleapCustomQueryPage.java", "BodyUseAPI": [], "Fixed commit": "94223be6f2aac622f725abc291de8f30c84be84f", "Url": "https://api.github.com/repos/sbegaudeau/mylyn.tasks", "Date": "2013-04-26T13:17:07Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.DitaSemia.Base.AdvancedKeyref.KeyRef.fromNode(org.DitaSemia.Oxygen.AuthorNodeWrapper)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(keyRef.isOutputclassFixed())) { documentController.setAttribute(KeyRef.ATTR_OUTPUTCLASS, new ro.sync.ecss.extensions.api.node.AttrValue(editKeyRefDialog.getOutputclass()), keyRefElement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5359/buggy-version/java.oxygen-extension-bundle.src.org.DitaSemia.Oxygen.AuthorOperations.EditKeyRef.java", "BodyUseAPI": [], "Fixed commit": "3899085369e10e07b26512f51fffd41dfd85524d", "Url": "https://api.github.com/repos/dita-semia/dita-semia-resolver", "Date": "2017-01-31T09:30:55Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(areTagsAdded)) { for (com.harsh.instatag.UserToBeTagged userToBeTagged : userToBeTaggedArrayList) { addTagView(getXWhileAddingTag(userToBeTagged.getX_co_ord()), getYWhileAddingTag(userToBeTagged.getY_co_ord()), userToBeTagged.getUser_unique_id()); } areTagsAdded = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2459/buggy-version/instatag.src.main.java.com.harsh.instatag.InstaTag.java", "BodyUseAPI": [], "Fixed commit": "ec0b4289098dc4d175fc821f165934506dd5aa8c", "Url": "https://api.github.com/repos/harsh159357/InstaTag", "Date": "2017-08-14T18:28:03Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rc.isActive()) { rc.move(toDest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3718/buggy-version/teams.origrestructured.Util.java", "BodyUseAPI": ["battlecode.common.RobotController.move(battlecode.common.Direction)"], "Fixed commit": "bb39f18063a7330dc7467cfc95743055b25ac5a6", "Url": "https://api.github.com/repos/skoppula/yummycode-2014", "Date": "2014-01-11T02:48:50Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(android.text.TextUtils.isEmpty(getIntent().getAction()))) { mNowAction = getIntent().getAction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4541/buggy-version/src.com.plmt.boommall.ui.activity.GoodsDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "bd89f08d890b3a262e4e32495c0c61a00caf4d68", "Url": "https://api.github.com/repos/xiguofeng/BoomMall", "Date": "2015-11-01T03:19:32Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isNull()) { this.SetType(Type.Null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6651/buggy-version/MatrixCalculator.src.main.java.com.softminds.matrixcalculator.Matrix.java", "BodyUseAPI": [], "Fixed commit": "2331cf59c3d7266733aa7f614e69db9b69e68934", "Url": "https://api.github.com/repos/coder3101/Matrix-Calculator-for-Android", "Date": "2017-07-09T16:40:42Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (outState != null) outState.putInt(it.wm.perdue.forms.RichiediCartaFragment.TAG_CARD, cardSpinner.getSelectedItemPosition());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2316/buggy-version/src.it.wm.perdue.forms.RichiediCartaFragment.java", "BodyUseAPI": ["android.os.Bundle.putInt(java.lang.String,cardSpinner.getSelectedItemPosition())"], "Fixed commit": "c98ea229122d10d8f38df55f8d4daa8a7df34157", "Url": "https://api.github.com/repos/eltazar/x2Android", "Date": "2013-03-18T16:08:35Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(org.walkmod.javalang.compiler.symbols.AnonymousClassUtil.isAnonymousClass(n))) || (org.walkmod.javalang.compiler.symbols.AnonymousClassUtil.needsSymbolData(n))) { org.walkmod.javalang.compiler.symbols.SymbolType st = ((org.walkmod.javalang.compiler.symbols.SymbolType) (n.getType().getSymbolData())); resolveConstructor(n, n.getArgs(), st, arg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7943/buggy-version/src.main.java.org.walkmod.javalang.compiler.types.TypeVisitorAdapter.java", "BodyUseAPI": ["org.walkmod.javalang.ast.expr.ObjectCreationExpr.getArgs()", "n.getType().getSymbolData()", "org.walkmod.javalang.ast.expr.ObjectCreationExpr.getType()", "org.walkmod.javalang.compiler.types.TypeVisitorAdapter<A>.resolveConstructor(org.walkmod.javalang.ast.expr.ObjectCreationExpr,n.getArgs(),org.walkmod.javalang.compiler.symbols.SymbolType,A)"], "Fixed commit": "864a032ac0449d6d479ecae9b1099144ca9ba420", "Url": "https://api.github.com/repos/cal101/javalang-compiler", "Date": "2017-06-01T07:09:23Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (request.getRequestURI().startsWith(((request.getContextPath()) + (javax.faces.application.ResourceHandler.RESOURCE_IDENTIFIER)))) { pFilterChain.doFilter(request, response); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4189/buggy-version/vocab.src.main.java.org.mlbran.vocab.beans.filter.LoginFilter.java", "BodyUseAPI": ["javax.servlet.FilterChain.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"], "Fixed commit": "10dfaa18f77aa9b35af6e6d0c0df68ec0c9a3679", "Url": "https://api.github.com/repos/mlbran/vocab", "Date": "2017-06-14T10:01:32Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((thePlayer.getItemInHand()) != null) itemInHandName = thePlayer.getItemInHand().getType().name().toLowerCase().replace(\"_\", \" \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1642/buggy-version/src.main.java.net.aufdemrand.denizen.commands.ArgumentHelper.java", "BodyUseAPI": ["thePlayer.getItemInHand().getType().name().toLowerCase()", "thePlayer.getItemInHand().getType()", "org.bukkit.entity.Player.getItemInHand()", "thePlayer.getItemInHand().getType().name().toLowerCase().replace(java.lang.String,java.lang.String)", "thePlayer.getItemInHand().getType().name()"], "Fixed commit": "110f6375192826e7c800a3302bfd25d0e83b6a88", "Url": "https://api.github.com/repos/aufdemrand/Denizen", "Date": "2012-09-16T06:14:07Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!flag) { eligibleReviewers.add(reviewer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2805/buggy-version/model.Conference.java", "BodyUseAPI": [], "Fixed commit": "96474af9a7a725e12f65056e11ebe67c3c39f132", "Url": "https://api.github.com/repos/BlueAccords/ConferenceProject", "Date": "2017-05-29T03:28:33Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (courseSrc != null) { org.rascalmpl.uri.FileURIResolver fileURIResolver = new org.rascalmpl.uri.FileURIResolver() { @java.lang.Override public java.lang.String scheme() { return \"courses\"; } @java.lang.Override protected java.lang.String getPath(java.net.URI uri) { java.lang.String path = uri.getPath(); return courseSrc + (path.startsWith(\"/\") ? path : \"/\" + path); } }; reg.registerInputOutput(fileURIResolver); }else { reg.registerInput(new org.rascalmpl.uri.ClassResourceInput(reg, \"courses\", getClass(), \"/org/rascalmpl/courses\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2014/buggy-version/src.org.rascalmpl.tutor.RascalTutor.java", "BodyUseAPI": [], "Fixed commit": "498e9c7e73d2bc589b79951d5e822e4e936a9e1b", "Url": "https://api.github.com/repos/cwi-swat/rascal", "Date": "2014-10-27T12:54:04Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buildSpeed) > 0) { float cost = com.badlogic.gdx.math.MathUtils.clamp(shipComponent.constructionManyearsRemaining, 0, buildSpeed); shipComponent.constructionManyearsRemaining -= cost; buildSpeed -= cost; if ((shipComponent.constructionManyearsRemaining) <= 0) { constructionSystem.complete(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3094/buggy-version/core.src.net.mostlyoriginal.game.system.ship.ProductionSimulationSystem.java", "BodyUseAPI": [], "Fixed commit": "26df450510a135d8aba463d9a5efba30802dec8b", "Url": "https://api.github.com/repos/DaanVanYperen/arktrail", "Date": "2014-09-11T18:45:59Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((time != null) && (!(time.equals(\"\")))) { d = edu.iastate.music.marching.attendance.util.Util.parseTimeOnly(time, train.appData().get().getTimeZone()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/483/buggy-version/src.main.edu.iastate.music.marching.attendance.servlets.DirectorServlet.java", "BodyUseAPI": ["edu.iastate.music.marching.attendance.util.Util.parseTimeOnly(java.lang.String,train.appData().get().getTimeZone())"], "Fixed commit": "0aec3576a96a4ef53188824303d0e344197f6d72", "Url": "https://api.github.com/repos/curtisullerich/attendance", "Date": "2013-10-30T01:37:02Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((d == null) && ((toUpdate.getType()) != (Absence.Type.Absence))) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/483/buggy-version/src.main.edu.iastate.music.marching.attendance.servlets.DirectorServlet.java", "BodyUseAPI": [], "Fixed commit": "0aec3576a96a4ef53188824303d0e344197f6d72", "Url": "https://api.github.com/repos/curtisullerich/attendance", "Date": "2013-10-30T01:37:02Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (oldVersion != null) { oldVersion.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2143/buggy-version/src.org.shellupdate.Updater.java", "BodyUseAPI": ["java.util.jar.JarFile.close()"], "Fixed commit": "250592126a8e7f947fa7434ec824b49b0a02a6a8", "Url": "https://api.github.com/repos/theKidOfArcrania/UpdateService", "Date": "2015-11-02T19:26:43Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(shellFile.exists())) { try (java.util.jar.JarOutputStream jos = new java.util.jar.JarOutputStream(new java.io.FileOutputStream(shellFile))) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2143/buggy-version/src.org.shellupdate.Shell.java", "BodyUseAPI": [], "Fixed commit": "250592126a8e7f947fa7434ec824b49b0a02a6a8", "Url": "https://api.github.com/repos/theKidOfArcrania/UpdateService", "Date": "2015-11-02T19:26:43Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(alreadyRefreshedSkills.contains(skill))) { skill.refresh(); alreadyRefreshedSkills.add(skill); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4648/buggy-version/src.main.java.org.dungeon.skill.SkillRotation.java", "BodyUseAPI": ["org.dungeon.skill.Skill.refresh()", "java.util.ArrayList<org.dungeon.skill.Skill>.add(org.dungeon.skill.Skill)"], "Fixed commit": "de4bf4ce9c312ddb1ab76929ab3e3abb1955f218", "Url": "https://api.github.com/repos/bernardosulzbach/dungeon", "Date": "2015-01-10T19:02:02Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((object.getClass().getName().equals(org.infoglue.cms.entities.management.impl.simple.CategoryImpl.class.getName())) || (object.getClass().getName().equals(org.infoglue.cms.entities.management.impl.simple.ContentTypeDefinitionImpl.class.getName()))) { org.infoglue.deliver.util.CacheController.clearCache(\"contentTypeCategoryKeysCache\"); }else if (object.getClass().getName().equals(org.infoglue.cms.entities.management.impl.simple.InterceptionPointImpl.class.getName())) { org.infoglue.deliver.util.CacheController.clearCache(\"interceptionPointCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"interceptorsCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"authorizationCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"personalAuthorizationCache\"); }else if (object.getClass().getName().equals(org.infoglue.cms.entities.management.impl.simple.InterceptorImpl.class.getName())) { org.infoglue.deliver.util.CacheController.clearCache(\"interceptionPointCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"interceptorsCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"authorizationCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"personalAuthorizationCache\"); }else if ((((object.getClass().getName().equals(org.infoglue.cms.entities.management.impl.simple.AccessRightImpl.class.getName())) || (object.getClass().getName().equals(org.infoglue.cms.entities.management.impl.simple.AccessRightRoleImpl.class.getName()))) || (object.getClass().getName().equals(org.infoglue.cms.entities.management.impl.simple.AccessRightGroupImpl.class.getName()))) || (object.getClass().getName().equals(org.infoglue.cms.entities.management.impl.simple.AccessRightUserImpl.class.getName()))) { org.infoglue.deliver.util.CacheController.clearCache(\"interceptionPointCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"interceptorsCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"authorizationCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"personalAuthorizationCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"componentContentsCache\"); }else if (object.getClass().getName().equals(org.infoglue.cms.entities.management.impl.simple.ContentTypeDefinitionImpl.class.getName())) { org.infoglue.deliver.util.CacheController.clearCache(\"contentTypeDefinitionCache\"); }else if (object.getClass().getName().equals(org.infoglue.cms.entities.content.impl.simple.ContentImpl.class.getName())) { try { org.infoglue.cms.entities.content.impl.simple.ContentImpl content = ((org.infoglue.cms.entities.content.impl.simple.ContentImpl) (object)); if (((content.getContentTypeDefinition()) == null) || (!(content.getContentTypeDefinition().getName().equalsIgnoreCase(\"Meta info\")))) { org.infoglue.deliver.util.CacheController.clearCache(\"componentContentsCache\"); } org.infoglue.deliver.util.CacheController.clearCacheForGroup(\"contentVersionCache\", (\"content_\" + (content.getId()))); org.infoglue.deliver.util.CacheController.clearCacheForGroup(\"childContentCache\", (\"content_\" + (content.getId()))); if ((content.getParentContent()) != null) org.infoglue.deliver.util.CacheController.clearCacheForGroup(\"childContentCache\", (\"content_\" + (content.getParentContent().getId()))); } catch (java.lang.Exception e) { org.infoglue.cms.controllers.kernel.impl.simple.CmsJDOCallback.logger.warn((\"Error in JDOCallback:\" + (e.getMessage())), e); } clearCache(org.infoglue.cms.entities.content.impl.simple.SmallContentImpl.class); clearCache(org.infoglue.cms.entities.content.impl.simple.SmallishContentImpl.class); clearCache(org.infoglue.cms.entities.content.impl.simple.MediumContentImpl.class); }else if (object.getClass().getName().equals(org.infoglue.cms.entities.content.impl.simple.ContentVersionImpl.class.getName())) { try { org.infoglue.cms.entities.content.impl.simple.ContentVersionImpl contentVersion = ((org.infoglue.cms.entities.content.impl.simple.ContentVersionImpl) (object)); if (((contentVersion.getOwningContent().getContentTypeDefinition()) == null) || (!(contentVersion.getOwningContent().getContentTypeDefinition().getName().equalsIgnoreCase(\"Meta info\")))) { org.infoglue.deliver.util.CacheController.clearCache(\"componentContentsCache\"); } org.infoglue.deliver.util.CacheController.clearCacheForGroup(\"registryCache\", (\"\" + ((\"org.infoglue.cms.entities.content.ContentVersion_\" + (getObjectIdentity(object))).hashCode()))); org.infoglue.deliver.util.CacheController.clearCacheForGroup(\"contentVersionCache\", (\"content_\" + (contentVersion.getOwningContent().getId()))); org.infoglue.deliver.util.CacheController.clearCacheForGroup(\"contentVersionCache\", (\"contentVersion_\" + (contentVersion.getId()))); } catch (java.lang.Exception e) { org.infoglue.cms.controllers.kernel.impl.simple.CmsJDOCallback.logger.warn((\"Error in JDOCallback:\" + (e.getMessage())), e); } clearCache(org.infoglue.cms.entities.content.impl.simple.SmallContentVersionImpl.class); clearCache(org.infoglue.cms.entities.content.impl.simple.SmallestContentVersionImpl.class); }else if (object.getClass().getName().equals(org.infoglue.cms.entities.management.impl.simple.RepositoryLanguageImpl.class.getName())) { org.infoglue.deliver.util.CacheController.clearCache(\"masterLanguageCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"repositoryLanguageListCache\"); }else if (object.getClass().getName().equals(org.infoglue.cms.entities.content.impl.simple.MediumDigitalAssetImpl.class.getName())) { org.infoglue.deliver.util.CacheController.clearCache(\"digitalAssetCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"cachedAssetFileList\"); clearCache(org.infoglue.cms.entities.content.impl.simple.SmallDigitalAssetImpl.class); clearCache(org.infoglue.cms.entities.content.impl.simple.DigitalAssetImpl.class); org.infoglue.cms.controllers.kernel.impl.simple.DigitalAssetController.deleteCachedDigitalAssets(((java.lang.Integer) (getObjectIdentity(object)))); }else if (object.getClass().getName().equals(org.infoglue.cms.entities.content.impl.simple.DigitalAssetImpl.class.getName())) { org.infoglue.deliver.util.CacheController.clearCache(\"digitalAssetCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"cachedAssetFileList\"); clearCache(org.infoglue.cms.entities.content.impl.simple.SmallDigitalAssetImpl.class); clearCache(org.infoglue.cms.entities.content.impl.simple.MediumDigitalAssetImpl.class); org.infoglue.cms.controllers.kernel.impl.simple.DigitalAssetController.deleteCachedDigitalAssets(((java.lang.Integer) (getObjectIdentity(object)))); }else if (object.getClass().getName().equals(org.infoglue.cms.entities.structure.impl.simple.SiteNodeImpl.class.getName())) { clearCache(org.infoglue.cms.entities.structure.impl.simple.SmallSiteNodeImpl.class); try { org.infoglue.cms.entities.structure.impl.simple.SiteNodeImpl siteNode = ((org.infoglue.cms.entities.structure.impl.simple.SiteNodeImpl) (object)); org.infoglue.deliver.util.CacheController.clearCacheForGroup(\"childSiteNodesCache\", (\"siteNode_\" + (siteNode.getId()))); if ((siteNode.getParentSiteNode()) != null) org.infoglue.deliver.util.CacheController.clearCacheForGroup(\"childSiteNodesCache\", (\"siteNode_\" + (siteNode.getParentSiteNode().getId()))); } catch (java.lang.Exception e) { org.infoglue.cms.controllers.kernel.impl.simple.CmsJDOCallback.logger.warn((\"Error in JDOCallback:\" + (e.getMessage())), e); } org.infoglue.deliver.util.CacheController.clearCache(\"parentSiteNodeCache\"); org.infoglue.deliver.util.CacheController.clearCacheForGroup(\"latestSiteNodeVersionCache\", (\"siteNode_\" + ((java.lang.Integer) (getObjectIdentity(object))))); org.infoglue.deliver.util.CacheController.clearCache(\"siteNodeCache\", (\"\" + ((java.lang.Integer) (getObjectIdentity(object))))); }else if (object.getClass().getName().equals(org.infoglue.cms.entities.structure.impl.simple.SiteNodeVersionImpl.class.getName())) { org.infoglue.deliver.util.CacheController.clearCacheForGroup(\"registryCache\", (\"\" + ((\"org.infoglue.cms.entities.structure.SiteNodeVersion_\" + (getObjectIdentity(object))).hashCode()))); clearCache(org.infoglue.cms.entities.structure.impl.simple.SmallSiteNodeVersionImpl.class); try { org.infoglue.cms.entities.structure.impl.simple.SiteNodeVersionImpl siteNodeVersion = ((org.infoglue.cms.entities.structure.impl.simple.SiteNodeVersionImpl) (object)); org.infoglue.deliver.util.CacheController.clearCacheForGroup(\"childSiteNodesCache\", (\"siteNode_\" + (siteNodeVersion.getOwningSiteNode().getId()))); if ((siteNodeVersion.getOwningSiteNode().getParentSiteNode()) != null) org.infoglue.deliver.util.CacheController.clearCacheForGroup(\"childSiteNodesCache\", (\"siteNode_\" + (siteNodeVersion.getOwningSiteNode().getParentSiteNode().getId()))); } catch (java.lang.Exception e) { org.infoglue.cms.controllers.kernel.impl.simple.CmsJDOCallback.logger.warn((\"Error in JDOCallback:\" + (e.getMessage())), e); } org.infoglue.deliver.util.CacheController.clearCache(\"parentSiteNodeCache\"); org.infoglue.cms.entities.structure.impl.simple.SiteNodeVersionImpl siteNodeVersion = ((org.infoglue.cms.entities.structure.impl.simple.SiteNodeVersionImpl) (object)); org.infoglue.deliver.util.CacheController.clearCacheForGroup(\"latestSiteNodeVersionCache\", (\"siteNode_\" + (siteNodeVersion.getOwningSiteNode().getId()))); }else if (object.getClass().getName().equals(org.infoglue.cms.entities.workflow.impl.simple.WorkflowDefinitionImpl.class.getName())) { org.infoglue.deliver.util.CacheController.clearCache(\"workflowCache\"); }else if (object.getClass().getName().equals(org.infoglue.cms.entities.management.impl.simple.SystemUserImpl.class.getName())) { org.infoglue.deliver.util.CacheController.clearCache(\"principalCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"componentContentsCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"principalPropertyValueCache\"); }else if (object.getClass().getName().equals(org.infoglue.cms.entities.management.impl.simple.GroupImpl.class.getName())) { org.infoglue.deliver.util.CacheController.clearCache(\"groupListCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"groupVOListCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"componentContentsCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"principalPropertyValueCache\"); }else if (object.getClass().getName().equals(org.infoglue.cms.entities.management.impl.simple.RoleImpl.class.getName())) { org.infoglue.deliver.util.CacheController.clearCache(\"roleListCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"roleVOListCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"componentContentsCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"principalPropertyValueCache\"); }else if (object.getClass().getName().equals(org.infoglue.cms.entities.management.impl.simple.SystemUserGroupImpl.class.getName())) { org.infoglue.deliver.util.CacheController.clearCache(\"groupListCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"groupVOListCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"componentContentsCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"principalPropertyValueCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"rolePropertiesCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"groupPropertiesCache\"); }else if (object.getClass().getName().equals(org.infoglue.cms.entities.management.impl.simple.SystemUserRoleImpl.class.getName())) { org.infoglue.deliver.util.CacheController.clearCache(\"roleListCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"roleVOListCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"componentContentsCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"principalPropertyValueCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"rolePropertiesCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"groupPropertiesCache\"); }else if (object.getClass().getName().equals(org.infoglue.cms.entities.management.impl.simple.UserPropertiesImpl.class.getName())) { org.infoglue.deliver.util.CacheController.clearCache(\"principalPropertyValueCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"relatedCategoriesCache\"); }else if (object.getClass().getName().equals(org.infoglue.cms.entities.management.impl.simple.GroupPropertiesImpl.class.getName())) { org.infoglue.deliver.util.CacheController.clearCache(\"principalPropertyValueCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"groupPropertiesCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"relatedCategoriesCache\"); }else if (object.getClass().getName().equals(org.infoglue.cms.entities.management.impl.simple.RolePropertiesImpl.class.getName())) { org.infoglue.deliver.util.CacheController.clearCache(\"principalPropertyValueCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"rolePropertiesCache\"); org.infoglue.deliver.util.CacheController.clearCache(\"relatedCategoriesCache\"); }else if (object.getClass().getName().equals(org.infoglue.cms.entities.management.impl.simple.AvailableServiceBindingImpl.class.getName())) { org.infoglue.deliver.util.CacheController.clearCache(\"availableServiceBindingCache\"); }else if (object.getClass().getName().equals(org.infoglue.cms.entities.management.impl.simple.LanguageImpl.class.getName())) { org.infoglue.deliver.util.CacheController.clearCache(\"languageCache\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7819/buggy-version/src.java.org.infoglue.cms.controllers.kernel.impl.simple.CmsJDOCallback.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Object.getClass()", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Object.getClass()", "java.lang.String.equals(java.lang.String)", "org.infoglue.deliver.util.CacheController.clearCacheForGroup(java.lang.String,java.lang.String)", "java.lang.Object.getClass()", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "org.infoglue.deliver.util.CacheController.clearCacheForGroup(java.lang.String,java.lang.String)", "java.lang.Class.getName()", "java.lang.String.equals(java.lang.String)", "java.lang.Object.getClass()", "java.lang.Object.getClass()", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getName()", "org.infoglue.cms.controllers.kernel.impl.simple.DigitalAssetController.deleteCachedDigitalAssets(java.lang.Object)", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Class<? extends java.lang.Object>.getName()", "org.infoglue.deliver.util.CacheController.clearCache(java.lang.String,java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "org.infoglue.deliver.util.CacheController.clearCacheForGroup(java.lang.String,java.lang.String)", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getName()", "org.infoglue.cms.controllers.kernel.impl.simple.CmsJDOCallback.getObjectIdentity(java.lang.Object)", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Class<? extends java.lang.Object>.getName()", "org.infoglue.cms.controllers.kernel.impl.simple.CmsJDOCallback.getObjectIdentity(java.lang.Object)", "java.lang.String.equals(java.lang.String)", "java.lang.String.hashCode()", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getName()", "org.infoglue.cms.controllers.kernel.impl.simple.CmsJDOCallback.getObjectIdentity(java.lang.Object)", "java.lang.Object.getClass()", "java.lang.Object.getClass()", "java.lang.String.equals(java.lang.String)", "java.lang.Object.getClass()", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "org.infoglue.cms.controllers.kernel.impl.simple.DigitalAssetController.deleteCachedDigitalAssets(java.lang.Object)", "java.lang.Object.getClass()", "java.lang.Object.getClass()", "java.lang.Object.getClass()", "org.infoglue.cms.controllers.kernel.impl.simple.CmsJDOCallback.getObjectIdentity(java.lang.Object)", "java.lang.String.equals(java.lang.String)", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Class<? extends java.lang.Object>.getName()", "org.infoglue.cms.controllers.kernel.impl.simple.CmsJDOCallback.getObjectIdentity(java.lang.Object)", "org.infoglue.cms.controllers.kernel.impl.simple.CmsJDOCallback.getObjectIdentity(java.lang.Object)", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Object.getClass()", "java.lang.Object.getClass()", "java.lang.Object.getClass()", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.String.equals(java.lang.String)", "java.lang.String.hashCode()", "java.lang.Object.getClass()", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getName()"], "Fixed commit": "21a933f20c7b010858dc8a2fe71fe9b2968bb8a9", "Url": "https://api.github.com/repos/johandahlgren/infoglue", "Date": "2012-10-11T09:05:37Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cursorForDate.isNull(cursorForDate.getColumnIndexOrThrow(ClassDBContract.SeatHistory.COLUMN_NAME_STUDENT_ID)))) { studentId = cursorForDate.getInt(cursorForDate.getColumnIndexOrThrow(ClassDBContract.SeatHistory.COLUMN_NAME_STUDENT_ID)); aSeats.add(new com.iceru.classinhand.Seat(seatId, findStudentById(studentId))); }else { aSeats.add(new com.iceru.classinhand.Seat(seatId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/9210/buggy-version/app.src.main.java.com.iceru.classinhand.ClassInHandApplication.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndexOrThrow(ClassDBContract.SeatHistory.COLUMN_NAME_STUDENT_ID)", "android.database.Cursor.getInt(cursorForDate.getColumnIndexOrThrow(ClassDBContract.SeatHistory.COLUMN_NAME_STUDENT_ID))"], "Fixed commit": "676de880ec9d088fbe936e2f331ac1e646f467d9", "Url": "https://api.github.com/repos/aiceru/ClassInHand", "Date": "2015-04-23T12:33:57Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m.noResult()) { processConcepts(m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1467/buggy-version/nars_java.nars.core.control.SequentialMemoryCycle.java", "BodyUseAPI": ["nars.core.control.SequentialMemoryCycle.processConcepts(nars.storage.Memory)"], "Fixed commit": "10be3f5f7b22d09fc4c41a634d2bb56a504f1712", "Url": "https://api.github.com/repos/opennars/opennars", "Date": "2014-08-25T00:22:15Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m.noResult()) { m.processNovelTask(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1467/buggy-version/nars_java.nars.core.control.SequentialMemoryCycle.java", "BodyUseAPI": ["nars.storage.Memory.processNovelTask()"], "Fixed commit": "10be3f5f7b22d09fc4c41a634d2bb56a504f1712", "Url": "https://api.github.com/repos/opennars/opennars", "Date": "2014-08-25T00:22:15Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isWhitelisted(properties))) { com.surevine.community.gateway.hooks.IssuesFederatorImportTransferHook.LOG.info(\"artifact rejected as Issue project is not whitelisted for inbound federation from destination.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5853/buggy-version/issues-federator-plugin.src.main.java.com.surevine.community.gateway.hooks.IssuesFederatorImportTransferHook.java", "BodyUseAPI": [], "Fixed commit": "20e87e99d3a940e8ad18a2f6b14af3cbd7274041", "Url": "https://api.github.com/repos/surevine/gateway", "Date": "2015-03-02T13:17:53Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tags.size()) > 0) tagHandler.tags(tags);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4834/buggy-version/newsplus.extensions.NewsblurExtension.src.com.noinnion.android.newsplus.extension.newsblurplus.NewsBlurPlus.java", "BodyUseAPI": ["com.noinnion.android.reader.api.internal.ITagListHandler.tags(java.util.List<com.noinnion.android.reader.api.provider.ITag>)"], "Fixed commit": "9d1836321610025fced0d4cedd420bdd2810e19a", "Url": "https://api.github.com/repos/asafge/newsblurplus", "Date": "2013-07-05T15:31:34Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((feeds.size()) > 0) subHandler.subscriptions(feeds);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4834/buggy-version/newsplus.extensions.NewsblurExtension.src.com.noinnion.android.newsplus.extension.newsblurplus.NewsBlurPlus.java", "BodyUseAPI": ["com.noinnion.android.reader.api.internal.ISubscriptionListHandler.subscriptions(java.util.List<com.noinnion.android.reader.api.provider.ISubscription>)"], "Fixed commit": "9d1836321610025fced0d4cedd420bdd2810e19a", "Url": "https://api.github.com/repos/asafge/newsblurplus", "Date": "2013-07-05T15:31:34Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (param instanceof java.lang.Iterable) { jg.writeArrayFieldStart(entry.getKey()); for (java.lang.Object object : ((java.lang.Iterable) (param))) { org.nuxeo.ecm.automation.client.jaxrs.spi.JsonMarshalling.write(jg, object); } jg.writeEndArray(); }else { if (param != null) { org.nuxeo.ecm.automation.client.jaxrs.spi.JsonMarshaller<?> marshaller = org.nuxeo.ecm.automation.client.jaxrs.spi.JsonMarshalling.getMarshaller(param.getClass()); if (marshaller != null) { jg.writeFieldName(entry.getKey()); try { marshaller.write(jg, param); } catch (java.lang.UnsupportedOperationException e) { jg.writeObject(param); } }else { jg.writeFieldName(entry.getKey()); jg.writeObject(param); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2420/buggy-version/nuxeo-features.nuxeo-automation.nuxeo-automation-client.src.main.java.org.nuxeo.ecm.automation.client.jaxrs.spi.JsonMarshalling.java", "BodyUseAPI": ["org.codehaus.jackson.JsonGenerator.writeObject(java.lang.Object)", "org.codehaus.jackson.JsonGenerator.writeObject(java.lang.Object)", "java.lang.Object.getClass()", "org.nuxeo.ecm.automation.client.jaxrs.spi.JsonMarshaller<?>.write(org.codehaus.jackson.JsonGenerator,java.lang.Object)", "org.nuxeo.ecm.automation.client.jaxrs.spi.JsonMarshalling.getMarshaller(java.lang.Class<? extends java.lang.Object>)"], "Fixed commit": "7fdbbb01bd4dbeff759b4c510a133f25a9175c4c", "Url": "https://api.github.com/repos/nuxeo/nuxeo", "Date": "2015-07-23T14:05:05Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.jackson.JsonNode.traverse()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((valueParser.getCodec()) == null) { valueParser.setCodec(new org.codehaus.jackson.map.ObjectMapper()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2420/buggy-version/nuxeo-features.nuxeo-automation.nuxeo-automation-io.src.main.java.org.nuxeo.ecm.automation.io.services.codec.ObjectCodecService.java", "BodyUseAPI": ["org.codehaus.jackson.JsonParser.setCodec(org.codehaus.jackson.map.ObjectMapper)"], "Fixed commit": "7fdbbb01bd4dbeff759b4c510a133f25a9175c4c", "Url": "https://api.github.com/repos/nuxeo/nuxeo", "Date": "2015-07-23T14:05:05Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.croudtrip.account.VehicleManager.getDefaultVehicleId(getActivity())) == (-3)) { rx.Subscription vListSubscription = vehicleResource.getVehicles().compose(new org.croudtrip.utils.DefaultTransformer<java.util.List<org.croudtrip.api.account.Vehicle>>()).subscribe(new rx.functions.Action1<java.util.List<org.croudtrip.api.account.Vehicle>>() { @java.lang.Override public void call(java.util.List<org.croudtrip.api.account.Vehicle> vehicles) { org.croudtrip.fragments.offer.OfferTripFragment.carArrayList.clear(); org.croudtrip.fragments.offer.OfferTripFragment.carIdsArray.clear(); if ((vehicles.size()) > 0) { for (int i = 0; i < (vehicles.size()); i++) { org.croudtrip.fragments.offer.OfferTripFragment.carArrayList.add(vehicles.get(i).getType()); org.croudtrip.fragments.offer.OfferTripFragment.carIdsArray.add(((int) (vehicles.get(i).getId()))); timber.log.Timber.i((((\"Added \" + (org.croudtrip.fragments.offer.OfferTripFragment.carArrayList.get(i))) + \" with id: \") + ((int) (vehicles.get(i).getId())))); org.croudtrip.fragments.offer.OfferTripFragment.numberOfCars = vehicles.size(); } myCarSelectDialogFragment.show(getFragmentManager(), \"Car Select\"); }else showCarPlateDialog(); } }, new rx.functions.Action1<java.lang.Throwable>() { @java.lang.Override public void call(java.lang.Throwable throwable) { retrofit.client.Response response = ((retrofit.RetrofitError) (throwable)).getResponse(); if ((response != null) && ((response.getStatus()) == 401)) { }else { timber.log.Timber.e((\"error\" + (throwable.getMessage()))); } timber.log.Timber.e((\"Couldn't get data\" + (throwable.getMessage()))); } }); subscriptions.add(vListSubscription); }else { if (currentLocation == null) { return; } final android.os.Bundle b = new android.os.Bundle(); b.putString(MyTripDriverFragment.ARG_ACTION, MyTripDriverFragment.ACTION_CREATE); b.putInt(\"maxDiversion\", java.lang.Integer.valueOf(((slider_diversion.getValue()) + \"\"))); b.putInt(\"pricePerKilometer\", java.lang.Integer.valueOf(((slider_price.getValue()) + \"\"))); b.putDouble(\"fromLat\", currentLocation.getLatitude()); b.putDouble(\"fromLng\", currentLocation.getLongitude()); b.putDouble(\"toLat\", destination.latitude); b.putDouble(\"toLng\", destination.longitude); final org.croudtrip.fragments.offer.MyTripDriverFragment myTripDriverFragment = new org.croudtrip.fragments.offer.MyTripDriverFragment(); b.putLong(\"vehicle_id\", org.croudtrip.account.VehicleManager.getDefaultVehicleId(getActivity())); myTripDriverFragment.setArguments(b); it.neokree.materialnavigationdrawer.MaterialNavigationDrawer drawer = ((it.neokree.materialnavigationdrawer.MaterialNavigationDrawer) (getActivity())); it.neokree.materialnavigationdrawer.elements.MaterialSection section = drawer.getSectionByTitle(getString(R.string.menu_offer_trip)); section.setTitle(getString(R.string.menu_my_trip)); drawer.setFragment(myTripDriverFragment, getString(R.string.menu_my_trip)); android.widget.Toast.makeText(getActivity().getApplicationContext(), R.string.offer_trip, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4996/buggy-version/client-android.src.main.java.org.croudtrip.fragments.offer.OfferTripFragment.java", "BodyUseAPI": [], "Fixed commit": "f790a53f060926af6f7c10da987dfe59df5ba94d", "Url": "https://api.github.com/repos/AMOS-2015/amos-ss15-proj2", "Date": "2015-07-11T13:46:00Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.logout)) { com.parse.ParseUser.logOut(); android.util.Log.i(\"onOptionsSelectedItem\", \"Log out\"); android.content.Intent i = new android.content.Intent(this, com.example.anastasia.fotinspiron_app.FacebookLoginActivity.class); startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4268/buggy-version/FotInspiron_App.app.src.main.java.com.example.anastasia.fotinspiron_app.UserList.java", "BodyUseAPI": [], "Fixed commit": "5a9b639740de147a781ebdabf38f35f1f87670a1", "Url": "https://api.github.com/repos/soupAgni/FotInspiron-", "Date": "2017-11-25T22:15:08Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (userInput == null) { java.lang.System.out.println(\"You did not enter anything. Please try again.\"); Nikita.Shuvalov.Main.checkIfVowel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6304/buggy-version/src.Nikita.Shuvalov.Main.java", "BodyUseAPI": [], "Fixed commit": "9ce23f2fe03e219722447b050322cea93d19f951", "Url": "https://api.github.com/repos/NikShuvalov/advanced-functions-lab", "Date": "2016-10-05T16:41:43Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(game3072.GameMain.GameIsOver())) { if ((game3072.GameMain.map[y][x]) == 0) { game3072.GameMain.map[y][x] = game3072.GameMain.startValue; }else { game3072.GameMain.map[y][x] *= 2; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/115/buggy-version/src.game3072.GameMain.java", "BodyUseAPI": [], "Fixed commit": "9b967c003b278abc92dfcd598ef033c757e6cc47", "Url": "https://api.github.com/repos/cvetomill/3072JavaGame", "Date": "2014-05-14T19:44:45Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.eclipse.core.runtime.Platform.isRunning())) { throw new java.lang.IllegalStateException(\"Platform not started yet.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6747/buggy-version/org.mondo.collaboration.security.lens.src.org.mondo.collaboration.security.lens.correspondence.EObjectCorrespondence.java", "BodyUseAPI": [], "Fixed commit": "e063d06a63a1f50337260300981e862c93c7d8cd", "Url": "https://api.github.com/repos/FTSRG/mondo-collab-framework", "Date": "2015-08-17T15:58:07Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentRound) != null) { java.lang.System.out.println((\"Warning: startRounds called more than once. We are already in round \" + (currentRound.get()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/424/buggy-version/turkserver.src.main.java.edu.harvard.econcs.turkserver.server.ExperimentControllerImpl.java", "BodyUseAPI": [], "Fixed commit": "c9e2c9a48c3ca0cf7e4525e84f337ce5b653a966", "Url": "https://api.github.com/repos/HarvardEconCS/TurkServer", "Date": "2013-03-20T20:47:56Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((model.getSelectedNeuralNetId()) == null) && ((model.getNeuralNet()) != null)) { model.setSelectedNeuralNetId(model.getNeuralNet().getNeuralNetMetaData().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5260/buggy-version/src.main.java.de.baleipzig.iris.ui.presenter.neuralnetconfig.NeuralNetConfigPresenter.java", "BodyUseAPI": ["de.baleipzig.iris.ui.viewmodel.neuralnetconfig.NeuralNetConfigViewModel.setSelectedNeuralNetId(model.getNeuralNet().getNeuralNetMetaData().getId())", "model.getNeuralNet().getNeuralNetMetaData().getId()", "model.getNeuralNet().getNeuralNetMetaData()", "de.baleipzig.iris.ui.viewmodel.neuralnetconfig.NeuralNetConfigViewModel.getNeuralNet()"], "Fixed commit": "20e6b39db3b7efa2118a7707ee559ddd389b3e89", "Url": "https://api.github.com/repos/fluoxa/Iris", "Date": "2016-11-14T20:30:23Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parametrizedType instanceof java.lang.reflect.WildcardType) { candidates.add(java.lang.Void.class); candidates.addAll(org.jsondoc.springmvc.scanner.AbstractSpringJSONDocScanner.buildJSONDocObjectsCandidates(candidates, ((java.lang.Class<?>) (((java.lang.reflect.ParameterizedType) (type)).getRawType())), parametrizedType)); }else if (parametrizedType instanceof java.lang.reflect.TypeVariable<?>) { candidates.add(java.lang.Void.class); candidates.addAll(org.jsondoc.springmvc.scanner.AbstractSpringJSONDocScanner.buildJSONDocObjectsCandidates(candidates, ((java.lang.Class<?>) (((java.lang.reflect.ParameterizedType) (type)).getRawType())), parametrizedType)); }else { candidates.addAll(org.jsondoc.springmvc.scanner.AbstractSpringJSONDocScanner.buildJSONDocObjectsCandidates(candidates, ((java.lang.Class<?>) (((java.lang.reflect.ParameterizedType) (parametrizedType)).getRawType())), parametrizedType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1843/buggy-version/jsondoc-springmvc.src.main.java.org.jsondoc.springmvc.scanner.AbstractSpringJSONDocScanner.java", "BodyUseAPI": ["java.util.Set<java.lang.Class<?>>.addAll(java.util.Set<java.lang.Class<?>>)", "java.util.Set<java.lang.Class<?>>.addAll(java.util.Set<java.lang.Class<?>>)", "org.jsondoc.springmvc.scanner.AbstractSpringJSONDocScanner.buildJSONDocObjectsCandidates(java.util.Set<java.lang.Class<?>>,java.lang.reflect.Type,java.lang.reflect.Type)", "java.util.Set<java.lang.Class<?>>.addAll(java.util.Set<java.lang.Class<?>>)", "org.jsondoc.springmvc.scanner.AbstractSpringJSONDocScanner.buildJSONDocObjectsCandidates(java.util.Set<java.lang.Class<?>>,java.lang.reflect.Type,java.lang.reflect.Type)", "org.jsondoc.springmvc.scanner.AbstractSpringJSONDocScanner.buildJSONDocObjectsCandidates(java.util.Set<java.lang.Class<?>>,java.lang.reflect.Type,java.lang.reflect.Type)"], "Fixed commit": "e7a39390d1f37dfaca10b69651e8ad44b5a23ddc", "Url": "https://api.github.com/repos/fabiomaffioletti/jsondoc", "Date": "2015-11-03T13:34:11Z"},
{"Line": "=>1859", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Object>.get(SibConstants.NUMBER.ZERO)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((mapUser.get(Parameters.ID_GOOGLE)) != null) && (!(mapUser.get(Parameters.ID_GOOGLE).equals(\"\")))) { simpleResponse = new com.siblinks.ws.response.SimpleResponse(com.siblinks.ws.util.SibConstants.FAILURE, request.getRequest_data_type(), request.getRequest_data_method(), \"Your Facebook's email is already registered on the Google account.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5272/buggy-version/SibLinksService.src.main.java.com.siblinks.ws.service.impl.UserServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "d664b02ed9f02fadeb713156d1278369f06c03d1", "Url": "https://api.github.com/repos/hungbadboy/WebApp", "Date": "2016-12-05T11:09:08Z"},
{"Line": "=>1867", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Object>.get(SibConstants.NUMBER.ZERO)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((mapUser.get(Parameters.ID_FACEBOOK)) == null) || (mapUser.get(Parameters.ID_FACEBOOK).equals(\"\"))) { simpleResponse = new com.siblinks.ws.response.SimpleResponse(com.siblinks.ws.util.SibConstants.FAILURE, request.getRequest_data_type(), request.getRequest_data_method(), \"Your Facebook's email is already registered on the Siblinks account.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5272/buggy-version/SibLinksService.src.main.java.com.siblinks.ws.service.impl.UserServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "d664b02ed9f02fadeb713156d1278369f06c03d1", "Url": "https://api.github.com/repos/hungbadboy/WebApp", "Date": "2016-12-05T11:09:08Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ranker_type.equals(\"numviews\")) { mark = \"hw1.1-\"; sds = _ranker.runquery(query_map.get(\"query\"), \"numviews\"); }else if (ranker_type.equals(\"linear\")) { mark = \"hw1.2-\"; sds = _ranker.runquery(query_map.get(\"query\"), \"linear\"); }else { queryResponse = ranker_type + \" not implemented.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4500/buggy-version/HW1.src.edu.nyu.cs.cs2580.QueryHandler.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "17f7ee0b0fb006ca1017370eb21a3fecd5e37afa", "Url": "https://api.github.com/repos/XiaoConstantine/WebSearchEngine", "Date": "2013-02-25T22:43:05Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((totalObservations) == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8657/buggy-version/Java.OpenmlWebapplication.src.org.openml.webapplication.models.AttributeStatistics.java", "BodyUseAPI": [], "Fixed commit": "43840d9832d97fe98f94c3d523d337f17adeb793", "Url": "https://api.github.com/repos/openml/OpenML", "Date": "2014-07-18T13:51:57Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((totalObservations) == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8657/buggy-version/Java.OpenmlWebapplication.src.org.openml.webapplication.models.AttributeStatistics.java", "BodyUseAPI": [], "Fixed commit": "43840d9832d97fe98f94c3d523d337f17adeb793", "Url": "https://api.github.com/repos/openml/OpenML", "Date": "2014-07-18T13:51:57Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) { dir.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4936/buggy-version/Pinboard.app.src.main.java.com.neat.pinboard.MainActivity.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "80dbb689b2c0af4adbba789dd16576800b78142d", "Url": "https://api.github.com/repos/kalacool/Pinboard-Android", "Date": "2015-03-29T10:04:24Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.stratos.autoscaler.applications.dependency.DependencyTree.getApplicationChildContextById(java.lang.String,context.getApplicationChildContextList())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (childContext != null) { return childContext; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1426/buggy-version/components.org.apache.stratos.autoscaler.src.main.java.org.apache.stratos.autoscaler.applications.dependency.DependencyTree.java", "BodyUseAPI": [], "Fixed commit": "7deb1127caadb088fd3900c7825975051771bc82", "Url": "https://api.github.com/repos/apache/stratos", "Date": "2015-05-14T07:32:52Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((board.getShipPlacing()) == (ship)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5143/buggy-version/src.com.cs311.battleship.board.ShipPlaceListener.java", "BodyUseAPI": [], "Fixed commit": "ac6aa9987a8aa51127adbc1185e7cc5a0763ce88", "Url": "https://api.github.com/repos/jjacobson/Battleship", "Date": "2017-02-23T05:13:06Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["drList.get((i * 8)).getStrList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Float.parseFloat(t[1])) < (java.lang.Float.parseFloat(list.get(0)))) { count++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7304/buggy-version/app.src.main.java.com.administrator.myapp.DBHelper_Tj_DATA.java", "BodyUseAPI": [], "Fixed commit": "ff271c030ce13b02ae4a0f2e6f8aa4dedd24315d", "Url": "https://api.github.com/repos/Zizi-And-Wazi/Maotai", "Date": "2017-11-19T14:35:00Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(name)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7823/buggy-version/src.main.java.eureka.json.ConfigReader.java", "BodyUseAPI": [], "Fixed commit": "8795cd48c20328ce65dc777d11ad5cf561ff1f25", "Url": "https://api.github.com/repos/AEnterprise/Eureka", "Date": "2015-03-23T14:05:47Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(orderedScore.contains(newScore))) { orderedScore.remove(orderedScore.last()); orderedScore.add(newScore); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2437/buggy-version/app.src.main.java.com.android.demineur.MainActivity.java", "BodyUseAPI": ["java.util.TreeSet<java.lang.String>.remove(java.lang.String)", "java.util.TreeSet<java.lang.String>.last()", "java.util.TreeSet<java.lang.String>.add(java.lang.String)"], "Fixed commit": "eeb9922f788599dccf7acc58b16dbae9c36ddc1f", "Url": "https://api.github.com/repos/anazeer/Demineur", "Date": "2016-02-05T21:56:34Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nr == 0) throw new suneido.SuException(\"socket Read failed\", e);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7596/buggy-version/src.main.java.suneido.runtime.builtin.SocketClient.java", "BodyUseAPI": [], "Fixed commit": "43312bcffa2ac7ef66b0925fb3393032e365f583", "Url": "https://api.github.com/repos/apmckinlay/jsuneido", "Date": "2015-12-18T01:26:43Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nr == 0) throw new suneido.SuException(\"socket Read lost connection or timeout\", e);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7596/buggy-version/src.main.java.suneido.runtime.builtin.SocketClient.java", "BodyUseAPI": [], "Fixed commit": "43312bcffa2ac7ef66b0925fb3393032e365f583", "Url": "https://api.github.com/repos/apmckinlay/jsuneido", "Date": "2015-12-18T01:26:43Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.drools.workbench.models.datamodel.oracle.OperatorsOracle.operatorRequiresList(operator)) { populateValueList(buf, type, fieldType, rowDataProvider.getTemplateKeyValue(value)); }else { buf.append(\" \"); constraintValueBuilder.buildLHSFieldValue(buf, type, fieldType, rowDataProvider.getTemplateKeyValue(value)); buf.append(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4622/buggy-version/drools-workbench-models.drools-workbench-models-guided-dtable.src.main.java.org.drools.workbench.models.guided.dtable.backend.util.GuidedDTBRDRLPersistence.java", "BodyUseAPI": [], "Fixed commit": "af7751d8e0e4fa3d3cd487dcfde6be0e7ba0e8e2", "Url": "https://api.github.com/repos/amitkhanchi/drools", "Date": "2015-03-23T20:27:05Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((key.equals(\"type\")) || (key.equals(\"status\"))) { renderedContent.put(key, content); }else { renderedContent.put(key, pegdownProcessor.markdownToHtml(content)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4412/buggy-version/src.main.java.org.jbake.parser.XMLParser.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,pegdownProcessor.markdownToHtml(content))"], "Fixed commit": "f0693b3d09e3f7b00e5a72e4b4610ac2cdf135be", "Url": "https://api.github.com/repos/spiewok/jbake", "Date": "2016-07-01T12:06:41Z"},
{"Line": "=>720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (params[0].equals('0')) { putReply(client, wol.ChatServer.NumericReplies.RPL_PAGE, \"1 :No such nick\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7958/buggy-version/src.wol.ChatServer.java", "BodyUseAPI": [], "Fixed commit": "70461487ff83b3d04667f156d5cd188711b0057f", "Url": "https://api.github.com/repos/Pelish/wol", "Date": "2012-05-06T20:53:32Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.resolve(org.exist.backup.BACKUP_PROPERTIES)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.nio.file.Files.exists(propFile)) { final java.util.Properties properties = new java.util.Properties(); try (final java.io.InputStream is = java.nio.file.Files.newInputStream(propFile)) { properties.load(is); } return properties; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2844/buggy-version/src.org.exist.backup.FileSystemBackupDescriptor.java", "BodyUseAPI": ["java.nio.file.Files.newInputStream(java.nio.file.Path)"], "Fixed commit": "93a7874d6eeff8350eb7a4418a45a4920e209dc9", "Url": "https://api.github.com/repos/jensopetersen/exist", "Date": "2015-09-01T19:32:57Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (charset.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4947/buggy-version/core.src.main.java.org.apache.cxf.helpers.HttpHeaderHelper.java", "BodyUseAPI": [], "Fixed commit": "59b87cad22c521fa2f4ec3e81812ba1629bd0041", "Url": "https://api.github.com/repos/rhstone/cxf", "Date": "2015-10-07T10:25:04Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.meta.ItemMeta.getLore()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (lore == null) lore = new java.util.ArrayList<java.lang.String>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1701/buggy-version/src.com.projectkorra.ProjectKorraItems.items.ItemDisplay.java", "BodyUseAPI": [], "Fixed commit": "ea5cf8d3ca32b5da9789bbfa0de031c769c72fb7", "Url": "https://api.github.com/repos/ProjectKorra/ProjectKorraItems", "Date": "2015-01-05T18:44:31Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (first.key.equals(key)) { if ((first.next) != null) first = first.next; else first = null; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4210/buggy-version/src.Search.LinkedListMapSearch.java", "BodyUseAPI": [], "Fixed commit": "19ba4252c7d6097ded236265dcd2f7c3e425cc2e", "Url": "https://api.github.com/repos/eziceice/Algorithms4", "Date": "2017-04-20T06:33:57Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.moparscape.elysium.entity.MobileEntity.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (curLoc == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8537/buggy-version/src.main.java.org.moparscape.elysium.entity.MobileEntity.java", "BodyUseAPI": [], "Fixed commit": "a93da9ab8be03ff7a8721acdc519c638914f4b91", "Url": "https://api.github.com/repos/MoparClassic/elysium-single-threaded", "Date": "2015-01-30T23:12:04Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultBytes) != null) { resultStr = new java.lang.String(resultBytes, java.nio.charset.Charset.forName(\"utf-8\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1394/buggy-version/src.main.java.com.tianyl.filmManage.util.RequestResult.java", "BodyUseAPI": [], "Fixed commit": "c1b28c1f0b37d68ea6f70b1622a358fff874b17b", "Url": "https://api.github.com/repos/tianyl1984/film-manage", "Date": "2016-10-07T13:30:07Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (map == null) return defaultSet;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6185/buggy-version/src.com.nastel.jkool.tnt4j.config.TrackerConfigStore.java", "BodyUseAPI": [], "Fixed commit": "93bca78bdb47f43cb05528f3fb5436852114d1b9", "Url": "https://api.github.com/repos/Nastel/TNT4J", "Date": "2014-05-14T19:20:44Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (engineUrl.equals(ai.grakn.factory.OrientDBInternalFactory.SPECIAL_IN_MEMORY)) engineUrl = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7203/buggy-version/grakn-orientdb-factory.src.main.java.ai.grakn.factory.OrientDBInternalFactory.java", "BodyUseAPI": [], "Fixed commit": "08d587d73238762cd1a28124a8deac83964fc35d", "Url": "https://api.github.com/repos/fppt/grakn", "Date": "2016-11-23T15:52:49Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(json.trim())) return java.util.Collections.emptySet();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1166/buggy-version/src.main.java.com.taobao.ewok.EwokZookeeper.java", "BodyUseAPI": [], "Fixed commit": "bce73d3a8d9e61b2e242f5aa5a07a578016cd8fd", "Url": "https://api.github.com/repos/killme2008/ewok", "Date": "2011-12-12T09:29:20Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hierarchyView.generator.ClassCircleViewGenerator.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (childrenSize > 0) { return new hierarchyView.RGB((((int) (red)) / childrenSize), (((int) (green)) / childrenSize), (((int) (blue)) / childrenSize)); }else { return new hierarchyView.RGB(0, 255, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5064/buggy-version/src.hierarchyView.generator.ClassCircleViewGenerator.java", "BodyUseAPI": [], "Fixed commit": "1ac455e6011fa84ff6cd0f180a3ae8802c4802cc", "Url": "https://api.github.com/repos/DelvalletQuentin/CodeToPic", "Date": "2017-02-08T21:52:48Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Display.impl.isScrollWheeling())) { fireActionEvent(x, y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6182/buggy-version/CodenameOne.src.com.codename1.ui.Button.java", "BodyUseAPI": [], "Fixed commit": "084da137daeb584193dfe0b9c4308f0c11b6deb7", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2017-01-12T17:42:51Z"},
{"Line": "=>1042", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["aurora.V1.core.GameSearch.searchSimilarGame(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(libraryUI.getStorage().getStoredLibrary().getGameNames().contains(array[0]))) { if (array != null) { nameOfGames.set(f, array[0]); gameImageNames.add(array[1]); }else { gameImageNames.add(null); } }else { nameOfGames.remove(f); executableGamePath.remove(f); f--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/955/buggy-version/src.aurora.V1.core.screen_logic.LibraryLogic.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.set(int,java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "823a2f9e549978d380010230e7316e4e14ddf060", "Url": "https://api.github.com/repos/sguergachi/AuroraGameHub", "Date": "2013-12-19T23:41:29Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(vm.execute())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6600/buggy-version/src.main.java.org.esaude.dmt.App.java", "BodyUseAPI": [], "Fixed commit": "1cf6d30708d56c70e4a97c990948893bb8f9f0cf", "Url": "https://api.github.com/repos/esaude/data-migration-system", "Date": "2014-09-30T09:28:24Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tile.getOwner()) != \"\") { if (java.util.UUID.fromString(tile.getOwner()).equals(player.getUniqueID())) { kMax++; if ((tile.getField(2)) == 1) { kMax = kMax + 2; if (player.isCreative()) kMax++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6661/buggy-version/src.main.java.gunn.modcurrency.mod.client.gui.GuiExchanger.java", "BodyUseAPI": ["java.util.UUID.fromString(tile.getOwner())", "gunn.modcurrency.mod.tileentity.TileExchanger.getOwner()", "java.util.UUID.equals(player.getUniqueID())", "gunn.modcurrency.mod.tileentity.TileExchanger.getField(int)"], "Fixed commit": "5097f8e2d86c1239dc7b357e41e4ea410257c420", "Url": "https://api.github.com/repos/BeardlessBrady/Currency-Mod", "Date": "2017-06-11T07:19:40Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tile.getOwner()) != \"\") { if (java.util.UUID.fromString(tile.getOwner()).equals(player.getUniqueID())) { kMax++; if ((tile.getField(2)) == 1) { kMax = kMax + 2; if (player.isCreative()) kMax++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6661/buggy-version/src.main.java.gunn.modcurrency.mod.client.gui.GuiVending.java", "BodyUseAPI": ["java.util.UUID.equals(player.getUniqueID())", "gunn.modcurrency.mod.tileentity.TileVending.getOwner()", "java.util.UUID.fromString(tile.getOwner())", "gunn.modcurrency.mod.tileentity.TileVending.getField(int)"], "Fixed commit": "5097f8e2d86c1239dc7b357e41e4ea410257c420", "Url": "https://api.github.com/repos/BeardlessBrady/Currency-Mod", "Date": "2017-06-11T07:19:40Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (method.contains(\",\")) { method = \"visits/log(datediff(curtime(),create_time)+1.01)\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6131/buggy-version/zhao_ren_db.src.zhao_ren_db.db_connector.java", "BodyUseAPI": [], "Fixed commit": "d7604a0e8250c91eb640c03f7e03e24862edf719", "Url": "https://api.github.com/repos/R3G3X/zhao.ren", "Date": "2016-08-22T07:32:09Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((gtfsTrip.trip_id) == null) || (gtfsTrip.trip_id.equals(\"\"))) { com.conveyal.datatools.editor.jobs.ProcessGtfsSnapshotExport.LOG.warn(\"Trip {} has no id for some reason (trip_id = {}). Skipping.\", trip, gtfsTrip.trip_id); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6337/buggy-version/src.main.java.com.conveyal.datatools.editor.jobs.ProcessGtfsSnapshotExport.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,com.conveyal.datatools.editor.models.transit.Trip,gtfsTrip.trip_id)"], "Fixed commit": "29edffacf5c65d9e87a832a5be39d36e4d1ca432", "Url": "https://api.github.com/repos/catalogueglobal/datatools-server", "Date": "2017-06-27T21:47:54Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.camel.util.ObjectHelper.isNotEmpty(ccfb.getDependsOn())) { factory2.addDependsOn(ccfb.getDependsOn()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8459/buggy-version/components.camel-blueprint.src.main.java.org.apache.camel.blueprint.handler.CamelNamespaceHandler.java", "BodyUseAPI": ["org.apache.camel.blueprint.CamelContextFactoryBean.getDependsOn()", "org.apache.aries.blueprint.mutable.MutableBeanMetadata.addDependsOn(ccfb.getDependsOn())"], "Fixed commit": "bd701e048650ffdf155b12d3febc4441119b6866", "Url": "https://api.github.com/repos/apache/camel", "Date": "2015-05-13T06:37:38Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((columnNames.get(columnName)) != null) { return get(columnNames.get(columnName)); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/1138/buggy-version/src.com.xingcloud.xa.session2.ra.impl.XRelation.java", "BodyUseAPI": ["com.xingcloud.xa.session2.ra.impl.XRelation.XRow.get(java.lang.Integer)", "java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Fixed commit": "8542390a853982b566bafeae49b12f7378239b67", "Url": "https://api.github.com/repos/fangjian601/XASession2", "Date": "2013-02-20T09:49:37Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((object) == null) { getObject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5431/buggy-version/src.main.java.com.couchbase.cblite.CBLBody.java", "BodyUseAPI": [], "Fixed commit": "77b3a31cc0dd5e6b3d65fb08bce09a5a95942e9e", "Url": "https://api.github.com/repos/couchbase/couchbase-lite-android-core", "Date": "2013-08-26T21:52:02Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((idList != null) && ((idList.size()) > 0)) { java.util.ArrayList<com.peaceworld.wikisms.model.UserTable> userList = userDao.getUsersById(idList); for (com.peaceworld.wikisms.model.UserTable user : userList) { result += (((user.getUserIdentifier()) + \":\") + (user.getUsername())) + \";\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4002/buggy-version/src.main.java.com.peaceworld.wikisms.controller.ws_rs.common.UserServices.java", "BodyUseAPI": ["com.peaceworld.wikisms.dao.UserDao.getUsersById(java.util.List<java.lang.Long>)"], "Fixed commit": "0dabad884a9b4168c7117b5a5cd5bbd838503343", "Url": "https://api.github.com/repos/rad-navid/wiki-payamak-web-app", "Date": "2015-03-10T20:33:13Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (newNode != null) { newNode.removeIncomingNode(nextConsecutiveNode); newNode.addIncomingNode(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4861/buggy-version/main.src.mockit.coverage.paths.Node.java", "BodyUseAPI": ["mockit.coverage.paths.Node.addIncomingNode(mockit.coverage.paths.Node)", "mockit.coverage.paths.Node.removeIncomingNode(mockit.coverage.paths.Node)"], "Fixed commit": "7fad4b2ac7a82bc90f9debb629a67e004f6ee780", "Url": "https://api.github.com/repos/neich/jmockit1", "Date": "2016-11-09T14:29:30Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["n.getIncomingNodes().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(prev instanceof mockit.coverage.paths.Node.Entry)) { if (!(prev.fuse(n))) { if ((nodes.lastElement()) == prev) { nodes.pop().setSimplified(); } nodes.push(n); }else { n.setSimplified(); } }else nodes.push(n);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4861/buggy-version/main.src.mockit.coverage.paths.PathBuilder.java", "BodyUseAPI": ["mockit.coverage.paths.Node.fuse(mockit.coverage.paths.Node)"], "Fixed commit": "7fad4b2ac7a82bc90f9debb629a67e004f6ee780", "Url": "https://api.github.com/repos/neich/jmockit1", "Date": "2016-11-09T14:29:30Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mockit.coverage.paths.PathBuilder.simplifyGraph(java.util.List<mockit.coverage.paths.Node>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((nodes.size()) == 1) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4861/buggy-version/main.src.mockit.coverage.paths.PathBuilder.java", "BodyUseAPI": [], "Fixed commit": "7fad4b2ac7a82bc90f9debb629a67e004f6ee780", "Url": "https://api.github.com/repos/neich/jmockit1", "Date": "2016-11-09T14:29:30Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event instanceof com.intellij.openapi.vfs.newvfs.events.VFilePropertyChangeEvent) && (((com.intellij.openapi.vfs.newvfs.events.VFilePropertyChangeEvent) (event)).getPropertyName().equals(\"name\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7431/buggy-version/intellij-plugin.src.main.java.me.tatarka.holdr.intellij.plugin.HoldrLayoutFilesListener.java", "BodyUseAPI": [], "Fixed commit": "6dbe76236812e89edbdd0e6ffa4ea890595253f7", "Url": "https://api.github.com/repos/evant/holdr", "Date": "2015-01-09T01:26:34Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.uibk.iis.robotprojectapp.ComDriver.getInstance().isConnected()) logText(org.uibk.iis.robotprojectapp.ComDriver.getInstance().comReadWrite(new byte[]{ 'o', 0, '\\r', '\\n' }));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6972/buggy-version/RobotProjectApp.src.org.uibk.iis.robotprojectapp.RobotWASDFragment.java", "BodyUseAPI": [], "Fixed commit": "d5c169e3b8cec2608aab661abff9ad8f09c3167f", "Url": "https://api.github.com/repos/Philipp-M/RobotProject", "Date": "2015-03-24T16:40:38Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.uibk.iis.robotprojectapp.ComDriver.getInstance().isConnected()) logText(org.uibk.iis.robotprojectapp.ComDriver.getInstance().comReadWrite(new byte[]{ 'o', ((byte) (255)), '\\r', '\\n' }));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6972/buggy-version/RobotProjectApp.src.org.uibk.iis.robotprojectapp.RobotWASDFragment.java", "BodyUseAPI": [], "Fixed commit": "d5c169e3b8cec2608aab661abff9ad8f09c3167f", "Url": "https://api.github.com/repos/Philipp-M/RobotProject", "Date": "2015-03-24T16:40:38Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((formulaDao.getFormula(formula.getFormulaID())) != null) { throw new dtu.cdio_final.shared.ServiceException(\"FormulaID already exsists\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/658/buggy-version/src.dtu.cdio_final.server.service.DataServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "1bc5f18a97f31294e55fd6a9d9e6aba11c6beccf", "Url": "https://api.github.com/repos/Quayed/CDIOFinal", "Date": "2015-06-18T14:38:07Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((materialDao.getMaterial(component.getMaterialID())) == null) { throw new dtu.cdio_final.shared.ServiceException(\"Material don't exist.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/658/buggy-version/src.dtu.cdio_final.server.service.DataServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "1bc5f18a97f31294e55fd6a9d9e6aba11c6beccf", "Url": "https://api.github.com/repos/Quayed/CDIOFinal", "Date": "2015-06-18T14:38:07Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.util.Set<org.jgll.grammar.Alternate>, org.jgll.grammar.HeadGrammarSlot>.get(filteredNonterminal.without(filteredAlternate))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (newNonterminal == null) { newNonterminal = rewrite(alternate, ((alternate.size()) - 1), filteredAlternate); rewriteRightEnds(newNonterminal, filteredAlternate); }else { alternate.setNonterminalAt(((alternate.size()) - 1), newNonterminal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4787/buggy-version/src.org.jgll.grammar.Grammar.java", "BodyUseAPI": ["org.jgll.grammar.Alternate.setNonterminalAt(((alternate.size()) - 1),org.jgll.grammar.HeadGrammarSlot)"], "Fixed commit": "0319e243ef0e2291a7ce68fcb69799eb6667209b", "Url": "https://api.github.com/repos/cwi-swat/jigll", "Date": "2013-05-16T11:23:48Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (authorizationHeader == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5213/buggy-version/components.webapp-authenticator-framework.org.wso2.carbon.webapp.authenticator.framework.src.main.java.org.wso2.carbon.webapp.authenticator.framework.authenticator.JWTAuthenticator.java", "BodyUseAPI": [], "Fixed commit": "ac5a7f4ab1c6ce25aee56fe0aab6ed4861c566fc", "Url": "https://api.github.com/repos/hasuniea/carbon-device-mgt", "Date": "2015-09-14T11:42:07Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5701/buggy-version/src.main.java.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "813fdf39102dfcf0e8a367dd2f8c5516b3f24f04", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((taskEntity.getFormKey()) != null) { getHistoryManager().recordTaskFormKeyChange(taskEntity.getId(), taskEntity.getFormKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/9239/buggy-version/modules.activiti-engine.src.main.java.org.activiti.engine.impl.persistence.entity.TaskEntityManagerImpl.java", "BodyUseAPI": ["getHistoryManager().recordTaskFormKeyChange(taskEntity.getId(),taskEntity.getFormKey())", "org.activiti.engine.impl.persistence.entity.TaskEntity.getId()", "org.activiti.engine.impl.persistence.entity.TaskEntity.getFormKey()"], "Fixed commit": "5a61b15a6405f4f60562c4efe7dd8abbd6cadded", "Url": "https://api.github.com/repos/vasiledirla/Activiti", "Date": "2016-02-25T15:44:13Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r == 0) S.error((\"\u96640\u9519\u8bef:\" + (this)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/4019/buggy-version/src.Arith.java", "BodyUseAPI": [], "Fixed commit": "d6c837ae7775e40b01712a97f3929ffdc8511f8d", "Url": "https://api.github.com/repos/fengzishiren/tinylang", "Date": "2014-09-21T09:47:40Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.StorageSupport.getServer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (s == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/8274/buggy-version/RestaurantManagementSystem.src.model.Restaurant.java", "BodyUseAPI": [], "Fixed commit": "4bb4f1a3fd0416c7141c14ef3bd9d7f5e65d7479", "Url": "https://api.github.com/repos/amsunderman/362", "Date": "2014-03-09T23:46:49Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(session.isOpen())) { cn.internetware.support.haixinyuan.syncclient.service.SyncService.LOGGER.warn(\"checkConnection: session is not open.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2302/buggy-version/syncclient.src.main.java.cn.internetware.support.haixinyuan.syncclient.service.SyncService.java", "BodyUseAPI": [], "Fixed commit": "1076d9bcb2818b63f80b28329978e8323c632008", "Url": "https://api.github.com/repos/ricolcs/sdkclient", "Date": "2017-06-14T02:49:27Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.adrienbrault.idea.symfony2plugin.routing.RouteHelper.getRouteNameTarget(element.getProject(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (routeNameTarget == null) { return new de.espend.idea.php.drupal.annotation.ResolveResult[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7305/buggy-version/src.de.espend.idea.php.drupal.annotation.ContentEntityTypeAnnotation.java", "BodyUseAPI": [], "Fixed commit": "1de0aafa15620f30c49ab7102db11b3d7b72b06d", "Url": "https://api.github.com/repos/Haehnchen/idea-php-drupal-symfony2-bridge", "Date": "2017-09-18T15:33:28Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((dt.getMonthOfYear()) >= 8) && ((dt.getMonthOfYear()) < 12)) { sem = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6473/buggy-version/app.src.main.java.com.example.sriramhariharan.cyfallsapp2016.Grades.java", "BodyUseAPI": [], "Fixed commit": "107ac716c3640fa09d6ba4acfb72e778f34c398f", "Url": "https://api.github.com/repos/MZX102208/CyFallsApp", "Date": "2017-01-07T00:44:36Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((dt.getMonthOfYear()) >= 1) && ((dt.getMonthOfYear()) < 8)) { sem = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6473/buggy-version/app.src.main.java.com.example.sriramhariharan.cyfallsapp2016.Grades.java", "BodyUseAPI": [], "Fixed commit": "107ac716c3640fa09d6ba4acfb72e778f34c398f", "Url": "https://api.github.com/repos/MZX102208/CyFallsApp", "Date": "2017-01-07T00:44:36Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((dt.getMonthOfYear()) >= 8) && ((dt.getMonthOfYear()) < 12)) { sem = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6473/buggy-version/app.src.main.java.com.example.sriramhariharan.cyfallsapp2016.Login.java", "BodyUseAPI": [], "Fixed commit": "107ac716c3640fa09d6ba4acfb72e778f34c398f", "Url": "https://api.github.com/repos/MZX102208/CyFallsApp", "Date": "2017-01-07T00:44:36Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((dt.getMonthOfYear()) >= 1) && ((dt.getMonthOfYear()) < 8)) { sem = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6473/buggy-version/app.src.main.java.com.example.sriramhariharan.cyfallsapp2016.Login.java", "BodyUseAPI": [], "Fixed commit": "107ac716c3640fa09d6ba4acfb72e778f34c398f", "Url": "https://api.github.com/repos/MZX102208/CyFallsApp", "Date": "2017-01-07T00:44:36Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((dt.getMonthOfYear()) >= 8) && ((dt.getMonthOfYear()) < 12)) { sem = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6473/buggy-version/app.src.main.java.com.example.sriramhariharan.cyfallsapp2016.BackgroundService.java", "BodyUseAPI": [], "Fixed commit": "107ac716c3640fa09d6ba4acfb72e778f34c398f", "Url": "https://api.github.com/repos/MZX102208/CyFallsApp", "Date": "2017-01-07T00:44:36Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((dt.getMonthOfYear()) >= 1) && ((dt.getMonthOfYear()) < 8)) { sem = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6473/buggy-version/app.src.main.java.com.example.sriramhariharan.cyfallsapp2016.BackgroundService.java", "BodyUseAPI": [], "Fixed commit": "107ac716c3640fa09d6ba4acfb72e778f34c398f", "Url": "https://api.github.com/repos/MZX102208/CyFallsApp", "Date": "2017-01-07T00:44:36Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/2253/buggy-version/src.codeu.chat.util.Tokenizer.java", "BodyUseAPI": [], "Fixed commit": "cf08546435e5749c51822f9f3238720730e28f13", "Url": "https://api.github.com/repos/lee-tammy/CodeU-Summer-2017", "Date": "2017-06-25T05:39:55Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.insert(DBHelper.USERS_TABLE.NAME,<nulltype>,android.content.ContentValues)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dbInsert < 0) { return com.theratio.utilities.User.RegisterResult.UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/6694/buggy-version/ShopWithFriends.app.src.main.java.com.theratio.utilities.User.java", "BodyUseAPI": [], "Fixed commit": "f9e8d5078d5ad9f02433eb31bf6b6f819d4c3f67", "Url": "https://api.github.com/repos/GodTamIt/shop_with_friends", "Date": "2015-03-04T13:43:39Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFactory().Core().clone(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (meth.getSimpleName().equals(\"getClass\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/589/buggy-version/src.main.java.bcu.transformer.processors.GhostClassCreator.java", "BodyUseAPI": [], "Fixed commit": "8499007cca9716777219f09ab4fcfd76528c2344", "Url": "https://api.github.com/repos/Spirals-Team/casper", "Date": "2016-12-08T21:29:31Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFactory().Core().clone(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (meth.getSimpleName().equals(\"notifyAll\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/589/buggy-version/src.main.java.bcu.transformer.processors.GhostClassCreator.java", "BodyUseAPI": [], "Fixed commit": "8499007cca9716777219f09ab4fcfd76528c2344", "Url": "https://api.github.com/repos/Spirals-Team/casper", "Date": "2016-12-08T21:29:31Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFactory().Core().clone(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (meth.getSimpleName().equals(\"notify\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/589/buggy-version/src.main.java.bcu.transformer.processors.GhostClassCreator.java", "BodyUseAPI": [], "Fixed commit": "8499007cca9716777219f09ab4fcfd76528c2344", "Url": "https://api.github.com/repos/Spirals-Team/casper", "Date": "2016-12-08T21:29:31Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFactory().Core().clone(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (meth.getSimpleName().equals(\"wait\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/589/buggy-version/src.main.java.bcu.transformer.processors.GhostClassCreator.java", "BodyUseAPI": [], "Fixed commit": "8499007cca9716777219f09ab4fcfd76528c2344", "Url": "https://api.github.com/repos/Spirals-Team/casper", "Date": "2016-12-08T21:29:31Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((dt.getDate()) < 10) realDate = \"0\" + realDate;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3831/buggy-version/src.SearchPanel.java", "BodyUseAPI": [], "Fixed commit": "2ea4f3d6a00cce9f55069f9329cbf065bf9aed46", "Url": "https://api.github.com/repos/luoyang9/Movie-Theatre-Project", "Date": "2015-04-29T13:37:34Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state.getLeaderId()) != 0) { java.lang.System.out.println((\"Leader selected?=\" + true)); }else { java.lang.System.out.println((\"Leader selected?=\" + false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/533/buggy-version/src.gash.router.server.edges.EdgeMonitor.java", "BodyUseAPI": [], "Fixed commit": "f232b12e864f6fb65678f68d3ae56b0e25354776", "Url": "https://api.github.com/repos/virajnilakh/DistributedFileStorageAndSharing", "Date": "2017-04-12T21:20:34Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (vtg.isValid()) { java.lang.System.out.println(\"----- VTG Sentence -----\"); if ((latestPosition) == null) { latestPosition = new de.tuberlin.amos.ws17.swit.gps.GpsPosition(555, 666, null); } latestPosition.setSpeed(vtg.getSpeedKmh()); velocity = vtg.getSpeedKmh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5684/buggy-version/src.main.java.de.tuberlin.amos.ws17.swit.gps.GpsPortReader.java", "BodyUseAPI": ["de.tuberlin.amos.ws17.swit.gps.VTGSentence.getSpeedKmh()", "de.tuberlin.amos.ws17.swit.gps.GpsPosition.setSpeed(vtg.getSpeedKmh())", "de.tuberlin.amos.ws17.swit.gps.VTGSentence.getSpeedKmh()"], "Fixed commit": "d246b59e3029fe7b58c085300b51240554b0c7f3", "Url": "https://api.github.com/repos/cfengler/amos-ws17-proj2", "Date": "2017-12-13T14:53:19Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((entity.getAuthors()) != null) && (entity.getAuthors().isEmpty())) { entity.setAuthors(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/7670/buggy-version/backendRest.src.main.java.by.givebook.services.impl.library.WorkServiceImpl.java", "BodyUseAPI": ["by.givebook.entities.library.Work.setAuthors(<nulltype>)"], "Fixed commit": "5c5ac8ad18bb5276c250e5d3cc1e541f63ed0791", "Url": "https://api.github.com/repos/adronex/GiveBook", "Date": "2016-04-19T11:26:59Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getOpacity()) < 1) { g.setComposite(java.awt.AlphaComposite.getInstance(java.awt.AlphaComposite.SRC_OVER, ((float) (getOpacity())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/5829/buggy-version/src.org.openstreetmap.josm.gui.layer.Layer.java", "BodyUseAPI": [], "Fixed commit": "fb21b4a121def03db31e270f7d1a69ad1bbbe8cc", "Url": "https://api.github.com/repos/michaelzangl/josm", "Date": "2016-06-22T09:50:27Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Math.abs(i)) + (java.lang.Math.abs(k))) == 2) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/640/buggy-version/percolation.Percolation.java", "BodyUseAPI": [], "Fixed commit": "c9efe3147db505cd0576e375fc47399f438eb868", "Url": "https://api.github.com/repos/hunglun/algs1", "Date": "2017-12-08T11:51:14Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index > 0) { url = url.substring(0, index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/9203/buggy-version/app.src.main.java.us.bojie.appstorebo.common.http.CommonparamsInterceptor.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "f6bff1542f29a1dbbb7d385acb64e93c603888af", "Url": "https://api.github.com/repos/jbj88817/AppStoreBo-android", "Date": "2017-05-01T00:32:09Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doBootstrap) { ExtractRelation er = new ExtractRelation(); er.findRelations(sentences, first, second); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V138/3899/buggy-version/RunQuery.src.QueryRetreiver.java", "BodyUseAPI": [], "Fixed commit": "5b782c37e5e1fdcdf90bc67222c77a6ac83dc8e2", "Url": "https://api.github.com/repos/mittalanshul/cs341", "Date": "2013-04-24T06:38:30Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kNoAPP.Clara.aspects.Environment.getQueuedEnvironment()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (que != null) que.load(); else if (Data.MAIN.getFileConfig().getBoolean(\"Enable.MySQL_Bungee\")) com.kNoAPP.Clara.aspects.Server.getThisServer().setOnline(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1713/buggy-version/src.com.kNoAPP.Clara.Clara.java", "BodyUseAPI": ["com.kNoAPP.Clara.aspects.Environment.load()"], "Fixed commit": "61d6c68f3f7a6da294f1d0699e9cf7e5a1182531", "Url": "https://api.github.com/repos/kNoAPP/C.L.A.R.A", "Date": "2017-12-18T22:16:34Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((rf.getType()) == (com.atlassian.stash.repository.RefChangeType.ADD)) && (rf.getToHash().equals(GitUtils.NULL_SHA1))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/355/buggy-version/src.main.java.com.isroot.stash.plugin.YaccHook.java", "BodyUseAPI": [], "Fixed commit": "861d331fe6d514c501beb96cbe92c27c0feff153", "Url": "https://api.github.com/repos/bbaetz/yet-another-commit-checker", "Date": "2015-06-30T02:54:04Z"},
{"Line": "=>537", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (sourceView != null) { sourceView.getLocationInWindow(clearLocation); clearLocation[0] += (sourceView.getWidth()) / 2; clearLocation[1] += (sourceView.getHeight()) / 2; }else { clearLocation[0] = (mDisplayForeground.getWidth()) / 2; clearLocation[1] = (mDisplayForeground.getHeight()) / 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3226/buggy-version/mobile.src.main.java.com.android2.calculator3.BasicCalculator.java", "BodyUseAPI": ["android.view.View.getLocationInWindow(int[])", "android.view.View.getWidth()", "android.view.View.getHeight()"], "Fixed commit": "53dea8a13f4842da4d813d4309697ce0caf91fd6", "Url": "https://api.github.com/repos/Xlythe/Calculator", "Date": "2015-08-26T23:30:08Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRootView) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3226/buggy-version/FloatingView.src.main.java.com.xlythe.floatingview.FloatingView.java", "BodyUseAPI": [], "Fixed commit": "53dea8a13f4842da4d813d4309697ce0caf91fd6", "Url": "https://api.github.com/repos/Xlythe/Calculator", "Date": "2015-08-26T23:30:08Z"},
{"Line": "=>3303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.datastax.driver.core.ResultSet.one()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (theRow1 == null) { sum += aggColValue; count = 1; average = sum / count; min = aggColValue; max = aggColValue; }else { java.util.Map<java.lang.String, java.lang.String> myMap1 = new java.util.HashMap<java.lang.String, java.lang.String>(); java.util.Map<java.lang.String, java.lang.String> myMap2 = new java.util.HashMap<java.lang.String, java.lang.String>(); if (!override) { if (left) { myMap1.putAll(oldReverseRow.getMap(\"list_item1\", java.lang.String.class, java.lang.String.class)); myMap2.putAll(newReverseRow.getMap(\"list_item1\", java.lang.String.class, java.lang.String.class)); }else { myMap1.putAll(oldReverseRow.getMap(\"list_item2\", java.lang.String.class, java.lang.String.class)); myMap2.putAll(newReverseRow.getMap(\"list_item2\", java.lang.String.class, java.lang.String.class)); } }else { if (left) { myMap1.putAll(getReverseJoinUpdatedOldRow_changeJoinKey().getMap(\"list_item1\", java.lang.String.class, java.lang.String.class)); myMap2.putAll(newReverseRow.getMap(\"list_item1\", java.lang.String.class, java.lang.String.class)); }else { myMap1.putAll(getReverseJoinUpdatedOldRow_changeJoinKey().getMap(\"list_item2\", java.lang.String.class, java.lang.String.class)); myMap2.putAll(newReverseRow.getMap(\"list_item2\", java.lang.String.class, java.lang.String.class)); } } int prev_count = myMap1.keySet().size(); count = myMap2.keySet().size(); if (count > prev_count) sum = (theRow1.getInt(\"sum\")) + aggColValue; else sum = ((theRow1.getInt(\"sum\")) - aggColValue_old) + aggColValue; average = sum / count; if (aggColValue < (theRow1.getFloat(\"min\"))) { min = aggColValue; }else { min = theRow1.getFloat(\"min\"); } if (aggColValue > (theRow1.getFloat(\"max\"))) { max = aggColValue; }else { max = theRow1.getFloat(\"max\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3267/buggy-version/src.java.ViewManager.ViewManager.java", "BodyUseAPI": ["com.datastax.driver.core.Row.getInt(java.lang.String)", "com.datastax.driver.core.Row.getFloat(java.lang.String)", "com.datastax.driver.core.Row.getFloat(java.lang.String)", "com.datastax.driver.core.Row.getFloat(java.lang.String)", "com.datastax.driver.core.Row.getFloat(java.lang.String)", "com.datastax.driver.core.Row.getInt(java.lang.String)"], "Fixed commit": "a2c76dfbdfe98c4255cd570c909f13960d24deec", "Url": "https://api.github.com/repos/abdelrahmanbadawy/Cassandra-VMS", "Date": "2015-08-18T10:45:48Z"},
{"Line": "=>3435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (left) { myMap1.putAll(oldReverseRow.getMap(\"list_item1\", java.lang.String.class, java.lang.String.class)); myMap2.putAll(getReverseJoinUpdatedOldRow_changeJoinKey().getMap(\"list_item1\", java.lang.String.class, java.lang.String.class)); }else { myMap1.putAll(oldReverseRow.getMap(\"list_item2\", java.lang.String.class, java.lang.String.class)); myMap2.putAll(getReverseJoinUpdatedOldRow_changeJoinKey().getMap(\"list_item2\", java.lang.String.class, java.lang.String.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3267/buggy-version/src.java.ViewManager.ViewManager.java", "BodyUseAPI": [], "Fixed commit": "a2c76dfbdfe98c4255cd570c909f13960d24deec", "Url": "https://api.github.com/repos/abdelrahmanbadawy/Cassandra-VMS", "Date": "2015-08-18T10:45:48Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (brain.getDictionary().getVerbs().isEmpty()) java.lang.System.out.println(\"Empty map\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4538/buggy-version/src.main.java.com.academicprojects.model.Chatbot.java", "BodyUseAPI": [], "Fixed commit": "13637b18778081b39c0414d63942764cd5ca0b02", "Url": "https://api.github.com/repos/Izzzu/Chatbot", "Date": "2015-02-08T20:07:34Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node instanceof com.ui4j.webkit.dom.WebKitDocument) { node = ((com.ui4j.webkit.dom.WebKitDocument) (node)).getBody().getParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1892/buggy-version/ui4j-webkit.src.main.java.com.ui4j.webkit.spi.W3CEventRegistrar.java", "BodyUseAPI": [], "Fixed commit": "ce148d42b6dcd49ffe79258dfee603eed0f77340", "Url": "https://api.github.com/repos/ui4j/ui4j", "Date": "2014-10-11T17:11:54Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node instanceof com.ui4j.webkit.dom.WebKitDocument) { node = ((com.ui4j.webkit.dom.WebKitDocument) (node)).getBody().getParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1892/buggy-version/ui4j-webkit.src.main.java.com.ui4j.webkit.spi.W3CEventRegistrar.java", "BodyUseAPI": [], "Fixed commit": "ce148d42b6dcd49ffe79258dfee603eed0f77340", "Url": "https://api.github.com/repos/ui4j/ui4j", "Date": "2014-10-11T17:11:54Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i.getGuard()) != null) { builder.append(\"}\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3616/buggy-version/compilers.java.src.main.java.org.thingml.compilers.java.JavaThingImplCompiler.java", "BodyUseAPI": [], "Fixed commit": "5f3fdc1921b661193609aabc1fc50400939f71a6", "Url": "https://api.github.com/repos/AlexandreRio/ThingML", "Date": "2016-04-29T08:33:22Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.willjake.hamlet.game.GameState.LEVEL_CHANGING) == (gameState)) { }else if ((me.willjake.hamlet.game.GameState.MENU) == (gameState)) { }else if ((me.willjake.hamlet.game.GameState.END) == (gameState)) { }else if ((me.willjake.hamlet.game.GameState.CREDITS) == (gameState)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3367/buggy-version/src.main.java.me.willjake.hamlet.render.Display.java", "BodyUseAPI": [], "Fixed commit": "2849893a3b74e7254a5d550d7f6d14a69e18e613", "Url": "https://api.github.com/repos/n9Mtq4/HamletProject", "Date": "2017-03-28T02:44:34Z"},
{"Line": "=>1044", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LunaChat.manager.getChannel(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (channel.isGlobalChannel()) { sendResourceMessage(sender, com.github.ucchyocean.lc.LunaChatCommand.PREERR, \"errmsgCannotOffGlobalBroadcast\"); }else { channel.setBroadcast(false); sendResourceMessage(sender, com.github.ucchyocean.lc.LunaChatCommand.PREINFO, \"cmdmsgOption\", \"broadcast\", \"false\"); setOption = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3064/buggy-version/src.main.java.com.github.ucchyocean.lc.LunaChatCommand.java", "BodyUseAPI": ["com.github.ucchyocean.lc.Channel.setBroadcast(boolean)"], "Fixed commit": "b8b5f50635330157354a794c6cf0eda657c0887a", "Url": "https://api.github.com/repos/ucchyocean/LunaChat", "Date": "2013-07-06T07:40:23Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (graphIsEnvelope) { envelopeResource.addProperty(WONMSG.CONTAINS_SIGNATURE_PROPERTY, sigNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4687/buggy-version/webofneeds.won-cryptography.src.main.java.won.protocol.message.processor.impl.WonMessageSignerVerifier.java", "BodyUseAPI": [], "Fixed commit": "cb6731a567b183ebcacf555fc7f50eca1a26da3a", "Url": "https://api.github.com/repos/researchstudio-sat/webofneeds", "Date": "2016-08-04T07:33:48Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mstiles92.plugins.hardcoredeathban.data.PlayerData.get(java.util.UUID)", "org.bukkit.Bukkit.getPlayer(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (((playerData == null) && (player != null)) && (player.isOnline())) { playerData = com.mstiles92.plugins.hardcoredeathban.data.PlayerData.get(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4582/buggy-version/src.main.java.com.mstiles92.plugins.hardcoredeathban.util.Utils.java", "BodyUseAPI": ["com.mstiles92.plugins.hardcoredeathban.data.PlayerData.get(org.bukkit.entity.Player)"], "Fixed commit": "4cf9ae4d389976e4a78fdaf466564e0556514736", "Url": "https://api.github.com/repos/mrlolethan/HardcoreDeathBan", "Date": "2015-04-08T15:24:08Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["compiler.firm.optimization.visitor.ConstantFoldingVisitor.getTargetValue(conversion.getOp())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (target.isNegative()) { newTargetValue = firm.TargetValue.getUnknown(); }else { newTargetValue = target.convertTo(conversion.getMode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/288/buggy-version/Compiler.src.compiler.firm.optimization.visitor.ConstantFoldingVisitor.java", "BodyUseAPI": ["firm.TargetValue.convertTo(conversion.getMode())"], "Fixed commit": "16eaff8b74a66efdeb004f0a5993fd35a87aae2c", "Url": "https://api.github.com/repos/replimoc/compiler", "Date": "2015-02-11T17:16:00Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.norwand.game.management.gamedata.GameData.get().player.info.health) > (com.norwand.game.management.gamedata.GameData.get().player.info.maxhealth)) com.norwand.game.management.gamedata.GameData.get().player.info.health = com.norwand.game.management.gamedata.GameData.get().player.info.maxhealth;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2623/buggy-version/core.src.com.norwand.game.management.gamedata.items.Consumable.HealthPot.java", "BodyUseAPI": [], "Fixed commit": "630339876408b50100fef41ae0733e626eeb9e68", "Url": "https://api.github.com/repos/Darkxell/Les-Chroniques-de-Norwand", "Date": "2016-03-24T23:56:10Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (supports16bit) pixelType = pixelTypeChoice.getSelectedIndex(); else pixelType = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1924/buggy-version/src.main.java.spim.process.fusion.boundingbox.ManualBoundingBox.java", "BodyUseAPI": [], "Fixed commit": "5a0f386fb93d53cfcc23e9935d0c7ab11b0eaebf", "Url": "https://api.github.com/repos/fiji/spimreconstruction", "Date": "2014-04-22T12:29:08Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (supports16bit) { pixelTypeChoice = ((java.awt.Choice) (choices.get(0))); imgTypeChoice = ((java.awt.Choice) (choices.get(1))); }else { pixelTypeChoice = null; imgTypeChoice = ((java.awt.Choice) (choices.get(0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1924/buggy-version/src.main.java.spim.process.fusion.boundingbox.ManualBoundingBox.java", "BodyUseAPI": [], "Fixed commit": "5a0f386fb93d53cfcc23e9935d0c7ab11b0eaebf", "Url": "https://api.github.com/repos/fiji/spimreconstruction", "Date": "2014-04-22T12:29:08Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getPDPModel().getParcelState(com.github.rinde.rinsim.core.model.pdp.Parcel)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (state == (com.github.rinde.rinsim.core.model.pdp.PDPModel.ParcelState.PICKING_UP)) { if (!(isPickingUp(p))) { routeList.removeAll(java.util.Collections.singleton(p)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3926/buggy-version/pdptw.src.main.java.com.github.rinde.rinsim.pdptw.common.RouteFollowingVehicle.java", "BodyUseAPI": [], "Fixed commit": "cabec6b7c7148b0388cb79b265ac45f37bcd907f", "Url": "https://api.github.com/repos/rinde/RinSim", "Date": "2015-08-06T09:11:26Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileListViewPager.getChildCount()) == 0) return new android.support.v4.app.Fragment();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/832/buggy-version/src.nkfust.selab.android.explorer.layout.model.TabFragment.java", "BodyUseAPI": [], "Fixed commit": "45b1223f0c55b17570815e6b55b4cabaaf5e7be1", "Url": "https://api.github.com/repos/BDLin/android.explorer_layout", "Date": "2015-05-07T06:10:08Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(operationParametersSet)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1255/buggy-version/src.main.java.operations.FilterOperation.java", "BodyUseAPI": [], "Fixed commit": "d9aa39979f2e7a751c12b6f8c27db3536236fcb5", "Url": "https://api.github.com/repos/paulbakker65/Contextproject2015", "Date": "2015-05-18T11:04:40Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tmpClassFile.exists()) && (tmpClassFile.canRead())) && (tmpClassFile.canExecute())) { if (className.contains(\".\")) { java.lang.String pkgName = className.replaceAll(\"(?m)\\\\.[a-zA-Z0-9_\\\\u4e00-\\\\u9fa5$]+$\", \"\"); result = load(tmpClassFile.getAbsolutePath(), className, pkgName); }else result = load(tmpClassFile.getAbsolutePath(), className); if (result != null) return result; }else throw new java.io.FileNotFoundException(((tmpClassFile.getAbsolutePath()) + \"\u4e0d\u5b58\u5728\u6216\u65e0\u6743\u8bbf\u95ee!\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2350/buggy-version/Algorithms.tk.dcmmc.workspace.LoadAnyClasses.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "LoadAnyClasses.Loader.load(java.lang.String,java.lang.String)", "java.io.File.getAbsolutePath()", "LoadAnyClasses.Loader.load(java.lang.String,java.lang.String,java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "e00b244290a571c58497b9fef5135d3443042196", "Url": "https://api.github.com/repos/DCMMC/Java-Algorithms-Learning", "Date": "2017-07-23T11:06:18Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ftn.project.eObrazovanje.model.Document.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (filename.contains(\".png\")) { response.setContentType(\"image/png\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4016/buggy-version/src.main.java.ftn.project.eObrazovanje.web.controller.DocumentController.java", "BodyUseAPI": [], "Fixed commit": "59c04c003f087695551890c4baefa0bdef14772e", "Url": "https://api.github.com/repos/sblagojcic/eObrazovanje", "Date": "2017-06-11T22:10:38Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mItemClickListener) != null) { mItemClickListener.onItemClick(viewHolder, mDatas.get(position), position, viewType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3063/buggy-version/BaseAdapter.src.main.java.com.othershe.baseadapter.base.MultiBaseAdapter.java", "BodyUseAPI": [], "Fixed commit": "eec3edc0d61e8618c6091e7943264f9ef64ad80a", "Url": "https://api.github.com/repos/SheHuan/RecyclerViewAdapter", "Date": "2016-09-18T09:42:58Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLoadMoreListener) != null) { mLoadMoreListener.onLoadMore(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3063/buggy-version/BaseAdapter.src.main.java.com.othershe.baseadapter.base.BaseAdapter.java", "BodyUseAPI": [], "Fixed commit": "eec3edc0d61e8618c6091e7943264f9ef64ad80a", "Url": "https://api.github.com/repos/SheHuan/RecyclerViewAdapter", "Date": "2016-09-18T09:42:58Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLoadMoreListener) != null) { mLoadMoreListener.onLoadMore(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3063/buggy-version/BaseAdapter.src.main.java.com.othershe.baseadapter.base.BaseAdapter.java", "BodyUseAPI": [], "Fixed commit": "eec3edc0d61e8618c6091e7943264f9ef64ad80a", "Url": "https://api.github.com/repos/SheHuan/RecyclerViewAdapter", "Date": "2016-09-18T09:42:58Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mItemClickListener) != null) { mItemClickListener.onItemClick(viewHolder, mDatas.get(position), position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3063/buggy-version/BaseAdapter.src.main.java.com.othershe.baseadapter.base.CommonBaseAdapter.java", "BodyUseAPI": [], "Fixed commit": "eec3edc0d61e8618c6091e7943264f9ef64ad80a", "Url": "https://api.github.com/repos/SheHuan/RecyclerViewAdapter", "Date": "2016-09-18T09:42:58Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(mNote.getNoteId()))) { contentStruct.put(\"NoteId\", mNote.getNoteId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3701/buggy-version/app.src.main.java.com.leanote.android.ui.note.service.NoteUploadService.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,mNote.getNoteId())", "com.leanote.android.model.NoteInfo.getNoteId()"], "Fixed commit": "e42199b2c57ec0c5484039be96c6cea5a8ac789a", "Url": "https://api.github.com/repos/xingstarx/leanote-android", "Date": "2016-09-03T16:09:20Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mNote.getUsn()) != 0) { contentStruct.put(\"Usn\", mNote.getUsn()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3701/buggy-version/app.src.main.java.com.leanote.android.ui.note.service.NoteUploadService.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,mNote.getUsn())", "com.leanote.android.model.NoteInfo.getUsn()"], "Fixed commit": "e42199b2c57ec0c5484039be96c6cea5a8ac789a", "Url": "https://api.github.com/repos/xingstarx/leanote-android", "Date": "2016-09-03T16:09:20Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == input) { input = \"nothing\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/379/buggy-version/src.main.java.de.codecentric.springbootsample.HomeController.java", "BodyUseAPI": [], "Fixed commit": "532aa81e872b527d34b8a46f4a0bd525fd761fbd", "Url": "https://api.github.com/repos/john-deng/springboot-sample-app", "Date": "2016-11-03T10:40:47Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.Activity.getSystemService(Context.LOCATION_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (locationManager != null) { current = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER); if (current == null) { current = locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4656/buggy-version/Projects.TLDR.src.com.tldr.TasksFragment.java", "BodyUseAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER)", "android.location.LocationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER)"], "Fixed commit": "a8ed7d5c41519716545a152ada2dc39012c43ad1", "Url": "https://api.github.com/repos/t-obi/tldr", "Date": "2013-06-11T07:34:11Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (current != null) { android.location.Location.distanceBetween(current.getLatitude(), current.getLongitude(), t.getGeoLat(), t.getGeoLon(), distance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4656/buggy-version/Projects.TLDR.src.com.tldr.TasksFragment.java", "BodyUseAPI": ["android.location.Location.getLongitude()", "android.location.Location.getLatitude()", "android.location.Location.distanceBetween(current.getLatitude(),current.getLongitude(),t.getGeoLat(),t.getGeoLon(),float[])"], "Fixed commit": "a8ed7d5c41519716545a152ada2dc39012c43ad1", "Url": "https://api.github.com/repos/t-obi/tldr", "Date": "2013-06-11T07:34:11Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(response.isCommitted())) { response.sendRedirect(getIdentityURL()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4980/buggy-version/modules.federation.src.main.java.org.picketlink.identity.federation.web.filters.IDPFilter.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)"], "Fixed commit": "76203778ead8f8e0f8797523a901b9d5a16b2df1", "Url": "https://api.github.com/repos/girirajsharma/picketlink", "Date": "2014-12-23T20:54:53Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isOpen)) { try { this.file = new java.io.File((((mud.utils.Log.DATA_DIR) + \"logs/\") + (this.filename))); this.output = new java.io.PrintWriter(file); } catch (java.io.FileNotFoundException fnfe) { try { this.file.createNewFile(); this.output = new java.io.PrintWriter(file); } catch (java.io.IOException e) { java.lang.System.out.println((\"Bath path: \" + (file))); e.printStackTrace(); } } this.isOpen = true; }else { java.lang.System.out.println(\"Game> Log File already open, debug coding.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3538/buggy-version/MUDServer.src.mud.utils.Log.java", "BodyUseAPI": [], "Fixed commit": "c32d385f5e590c80938ec97abe8d4ab155fdbed0", "Url": "https://api.github.com/repos/jnharton/mud-server", "Date": "2013-02-04T15:48:53Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nasa.jpf.vm.StackFrame.popDouble()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (v1 == 0) { return ti.createAndThrowException(\"java.lang.ArithmeticException\", \"division by zero\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2781/buggy-version/src.main.gov.nasa.jpf.jvm.bytecode.DDIV.java", "BodyUseAPI": [], "Fixed commit": "da240c34ca50386ef70629efae851fc10e4ee9c4", "Url": "https://api.github.com/repos/star-finder/jpf-core", "Date": "2017-10-06T06:56:45Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nasa.jpf.vm.StackFrame.popFloat()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (v1 == 0) { return ti.createAndThrowException(\"java.lang.ArithmeticException\", \"division by zero\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2781/buggy-version/src.main.gov.nasa.jpf.jvm.bytecode.FDIV.java", "BodyUseAPI": [], "Fixed commit": "da240c34ca50386ef70629efae851fc10e4ee9c4", "Url": "https://api.github.com/repos/star-finder/jpf-core", "Date": "2017-10-06T06:56:45Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsAutoChangeMonthRow) { if ((mCurrentSelectMonth) != month) { mCurrentRowsIsSix = (com.jeek.calendar.widget.calendar.CalendarUtils.getMonthRows(year, month)) == 6; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3872/buggy-version/calendar.src.main.java.com.jeek.calendar.widget.calendar.schedule.ScheduleLayout.java", "BodyUseAPI": [], "Fixed commit": "e24cf2f10a7f6f36421705b74d41cf9b4339e6a8", "Url": "https://api.github.com/repos/PATHojianglaile/Calendar", "Date": "2017-04-07T02:55:48Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((init.size()) == 0) return org.objectweb.asm.Type.DOUBLE_TYPE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2996/buggy-version/src.io.lambdacloud.node.matrix.MatrixInitNode.java", "BodyUseAPI": [], "Fixed commit": "0bcc0f526752037a83c037e7db7f6b35b1bdc311", "Url": "https://api.github.com/repos/yuemingl/ExprEngine", "Date": "2016-08-15T06:44:44Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Global.num) == 1) { player.sendMessage(HelloTorch.config.getString(java.lang.Integer.toString(block.getTypeId()), (\"You placed a \" + (block.getType().toString())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4330/buggy-version/src.me.feltlizard.hellotorch.HelloTorchBlockListener.java", "BodyUseAPI": [], "Fixed commit": "869a2602e2f6bda02eea2ee6177e4c170a84a59a", "Url": "https://api.github.com/repos/FeltLizard/HelloTorch", "Date": "2011-09-12T05:53:31Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldRemindIntervention()) handleInterventionReminder(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3958/buggy-version/project.app.src.main.java.org.policetracks.android.services.ServiceLocator.java", "BodyUseAPI": [], "Fixed commit": "a8f89b7c9adc80a3d587124f845c3926bdc55e6b", "Url": "https://api.github.com/repos/TNOCS/android", "Date": "2017-09-15T07:37:47Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.devland.esperandro.annotations.SharedPreferences.name()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cacheAnnotation != null) && (preferencesName.equals(\"\"))) { warner.emitError(\"Caching cannot be used on default SharedPreferences\", interfaze); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2394/buggy-version/processor.src.main.java.de.devland.esperandro.processor.EsperandroAnnotationProcessor.java", "BodyUseAPI": [], "Fixed commit": "e2121a97741a4e7d2357cb89732b4935a7f1ed6e", "Url": "https://api.github.com/repos/dkunzler/esperandro", "Date": "2016-01-01T13:57:39Z"},
{"Line": "=>2705", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((folder.exists()) && (folder.isDirectory())) for (java.io.File file : folder.listFiles()) { file.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2851/buggy-version/src.main.java.pl.betoncraft.betonquest.config.ConfigUpdater.java", "BodyUseAPI": ["java.io.File.listFiles()"], "Fixed commit": "fdce955123b12303bced3fe933d813ad613e2448", "Url": "https://api.github.com/repos/Co0sh/BetonQuest", "Date": "2016-05-15T09:23:40Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["webit.generator.util.dbaccess.DatabaseAccesser.TableCache.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pktableRaw == null) { webit.generator.util.Logger.error((((((\"Foreign pk table not found: \" + pktable) + \", for \") + fktable) + '.') + fkcol)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4748/buggy-version/generator-core.src.main.java.webit.generator.util.dbaccess.DatabaseAccesser.java", "BodyUseAPI": [], "Fixed commit": "3abe497d2c01d69ef66e7f8a454c357e3f8802df", "Url": "https://api.github.com/repos/zqq90/webit-generator", "Date": "2014-10-08T10:03:17Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["webit.generator.util.dbaccess.DatabaseAccesser.TableCache.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fktableRaw == null) { webit.generator.util.Logger.error((((((\"Foreign fk table not found: \" + fktable) + \", for \") + fktable) + '.') + fkcol)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4748/buggy-version/generator-core.src.main.java.webit.generator.util.dbaccess.DatabaseAccesser.java", "BodyUseAPI": [], "Fixed commit": "3abe497d2c01d69ef66e7f8a454c357e3f8802df", "Url": "https://api.github.com/repos/zqq90/webit-generator", "Date": "2014-10-08T10:03:17Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(context).getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.util.regex.Pattern.compile(\"\\\\d+\").matcher(itemsExpiryTime).matches())) { itemsExpiryTime = \"180\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1293/buggy-version/app.src.main.java.fr.vpm.audiorss.persistence.AsyncMaintenance.java", "BodyUseAPI": [], "Fixed commit": "689d8b790f03aec8940b4d14fd3e826347d3b8ad", "Url": "https://api.github.com/repos/vpmalley/radiofeedz", "Date": "2015-01-03T22:10:27Z"},
{"Line": "=>812", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["x.getExpr().getAttribute(com.alibaba.druid.sql.visitor.SQLEvalVisitor.EVAL_VALUE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (val == null) { x.putAttribute(com.alibaba.druid.sql.visitor.SQLEvalVisitor.EVAL_VALUE, com.alibaba.druid.sql.visitor.SQLEvalVisitor.EVAL_VALUE_NULL); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3580/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.java", "BodyUseAPI": [], "Fixed commit": "9f8d33dbdb67d1e7dd8ce8c181bf1aa7dddd5a6e", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2014-06-01T02:45:10Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(getString(R.string.SETTINGS_DOWNLOADFOLDER),android.os.Environment.getExternalStorageDirectory().toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (settingsPath.equals(\"\")) settingsPath = android.os.Environment.getExternalStorageDirectory().toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3370/buggy-version/app.src.main.java.systems.byteswap.publicstream.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "81e88e264ce1d1416bea735110c830cd9e5e62d6", "Url": "https://api.github.com/repos/benjaminaigner/AustrianPublicStream", "Date": "2016-01-25T15:05:14Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((techFilter.getTitleContains()) == null) || (techFilter.getTitleContains().isEmpty())) && (((techFilter.getRecommendationIs()) == null) || (techFilter.getRecommendationIs().isEmpty()))) { filteredList.addAll(completeList); }else { verifyFilters(techFilter, completeList, filteredList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3262/buggy-version/src.main.java.com.ciandt.techgallery.service.TechnologyServiceImpl.java", "BodyUseAPI": ["com.ciandt.techgallery.service.TechnologyServiceImpl.verifyFilters(com.ciandt.techgallery.service.model.TechnologyFilter,java.util.List<com.ciandt.techgallery.persistence.model.Technology>,java.util.List<com.ciandt.techgallery.persistence.model.Technology>)"], "Fixed commit": "5e4db587918fc0d8ace70840219d6da2a946ef92", "Url": "https://api.github.com/repos/ciandt-dev/tech-gallery", "Date": "2015-10-09T17:43:02Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(perspectives.containsKey(type))) { com.vypersw.finances.client.content.ContentContainerPresenter presenter = presenterProvider.get(); presenter.updateTitle(type.getName()); presenter.setType(type); perspectives.put(type, presenter); openSlots.add(presenter); setInSlot(com.vypersw.finances.client.application.ApplicationPresenter.SLOT_content, presenter); }else { com.vypersw.finances.client.content.ContentContainerPresenter presenter = perspectives.get(type); setInSlot(com.vypersw.finances.client.application.ApplicationPresenter.SLOT_content, presenter); openSlots.remove(presenter); openSlots.add(presenter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/68/buggy-version/FinancesWeb.src.main.java.com.vypersw.finances.client.application.ApplicationPresenter.java", "BodyUseAPI": ["com.vypersw.finances.client.content.ContentContainerPresenter.setType(com.vypersw.finances.client.content.ContentType)", "com.vypersw.finances.client.content.ContentType.getName()", "java.util.Map<com.vypersw.finances.client.content.ContentType, com.vypersw.finances.client.content.ContentContainerPresenter>.put(com.vypersw.finances.client.content.ContentType,com.vypersw.finances.client.content.ContentContainerPresenter)", "java.util.Map<com.vypersw.finances.client.content.ContentType, com.vypersw.finances.client.content.ContentContainerPresenter>.get(com.vypersw.finances.client.content.ContentType)", "com.vypersw.finances.client.content.ContentContainerPresenter.updateTitle(type.getName())"], "Fixed commit": "b0224197a824f212e3880a47214fca4b6592ca13", "Url": "https://api.github.com/repos/DP94/Finances", "Date": "2017-04-04T19:54:59Z"},
{"Line": "=>747", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.objectweb.asm.tree.AbstractInsnNode.getOpcode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (opcode == trimAtOpcode) { trimAtOpcode = -1; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/705/buggy-version/src.main.java.org.spongepowered.asm.mixin.transformer.MixinTransformer.java", "BodyUseAPI": [], "Fixed commit": "b43159fd6be189e79fd10b87b2ed2b1c00376f50", "Url": "https://api.github.com/repos/SpongePowered/Mixin", "Date": "2015-02-21T14:37:09Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.nostra13.universalimageloader.core.ImageLoader.getInstance().getDiskCache().get(urls[mNowPosition]).getAbsolutePath()) != null) { me.edanel.fulishe.Utils.ImagePagerActivity.saveImageToGallery(this, com.nostra13.universalimageloader.core.ImageLoader.getInstance().getDiskCache().get(urls[mNowPosition]).getAbsolutePath()); android.widget.Toast.makeText(this, \"\u56fe\u7247\u4fdd\u5b58\u6210\u529f\", Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(this, \"\u56fe\u7247\u7f13\u5b58\u8bfb\u53d6\u5931\u8d25\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1452/buggy-version/app.src.main.java.me.edanel.fulishe.Utils.ImagePagerActivity.java", "BodyUseAPI": ["com.nostra13.universalimageloader.core.ImageLoader.getInstance().getDiskCache().get(java.lang.String)", "com.nostra13.universalimageloader.core.ImageLoader.getInstance().getDiskCache().get(urls[mNowPosition]).getAbsolutePath()", "me.edanel.fulishe.Utils.ImagePagerActivity.saveImageToGallery(me.edanel.fulishe.Utils.ImagePagerActivity,com.nostra13.universalimageloader.core.ImageLoader.getInstance().getDiskCache().get(urls[mNowPosition]).getAbsolutePath())"], "Fixed commit": "6369fed19bd379ca4029c053c8a5b61e71b6d5b6", "Url": "https://api.github.com/repos/edanel/dbMeizi", "Date": "2015-03-29T12:39:23Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isChanged) { tempPoints.clear(); tempPoints.add(sortPoints[k]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1732/buggy-version/algs.src.clients.Fast.java", "BodyUseAPI": [], "Fixed commit": "4e65a8e686b03f62665b3706e71559502a1d88dd", "Url": "https://api.github.com/repos/nightelf/algs1", "Date": "2014-02-28T08:59:51Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.alex.parkinsonsdiseaseapp.Circle.numCorrect) <= (com.example.alex.parkinsonsdiseaseapp.Circle.TARGET)) { com.example.alex.parkinsonsdiseaseapp.Circle.distances.add(output); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3141/buggy-version/app.src.main.java.com.example.alex.parkinsonsdiseaseapp.Circle.java", "BodyUseAPI": [], "Fixed commit": "02b778794996f9be5f9b8fa080555856a28e2293", "Url": "https://api.github.com/repos/malexcauthen/ParkinsonsDiseaseApp", "Date": "2016-04-17T05:24:35Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (property.getValueString().contains(\"color\")) { view.setBackgroundColor(((java.lang.Integer) (com.dvc.xml.AssetsResUtils.getAssetValue(view.getContext(), property.getValueString())))); }else { if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.JELLY_BEAN)) view.setBackground(com.dvc.xml.com.dvc.xml.AssetsResUtils.getAssetDrawable(view.getContext(), property.getValueString())); else view.setBackgroundDrawable(com.dvc.xml.com.dvc.xml.AssetsResUtils.getAssetDrawable(view.getContext(), property.getValueString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3275/buggy-version/xmlconvert.src.main.java.com.dvc.xml.XmlDynamicUtils.java", "BodyUseAPI": ["android.view.View.setBackground(com.dvc.xml.com.dvc.xml.AssetsResUtils.getAssetDrawable(view.getContext(), property.getValueString()))", "com.dvc.xml.XmlDynamicProperty.getValueString()", "android.view.View.setBackgroundDrawable(com.dvc.xml.com.dvc.xml.AssetsResUtils.getAssetDrawable(view.getContext(), property.getValueString()))", "android.view.View.setBackgroundColor(((java.lang.Integer) (com.dvc.xml.AssetsResUtils.getAssetValue(view.getContext(), property.getValueString()))))", "com.dvc.xml.com.dvc.xml.AssetsResUtils.getAssetDrawable(view.getContext(),property.getValueString())", "com.dvc.xml.XmlDynamicProperty.getValueString()", "com.dvc.xml.AssetsResUtils.getAssetValue(view.getContext(),property.getValueString())", "com.dvc.xml.com.dvc.xml.AssetsResUtils.getAssetDrawable(view.getContext(),property.getValueString())", "com.dvc.xml.XmlDynamicProperty.getValueString()"], "Fixed commit": "d55d5df2fe5cd804cf5fdaa01b874e031052cdf2", "Url": "https://api.github.com/repos/dvc890/Xml2View_android", "Date": "2017-08-15T02:59:32Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(datFile.exists())) { datFile.mkdirs(); datFile.createNewFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3301/buggy-version/src.main.java.de.robotricker.transportpipes.manager.saving.SavingManager.java", "BodyUseAPI": ["java.io.File.mkdirs()", "java.io.File.createNewFile()"], "Fixed commit": "1f750dad408f955eb5e630aa1cfbe80e475e8aa0", "Url": "https://api.github.com/repos/RoboTricker/Transport-Pipes", "Date": "2017-04-11T11:15:43Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (reason != null) this.spawner = reason == (org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.SPAWNER); else this.spawner = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1246/buggy-version/ExperienceMod.src.com.comphenix.xp.lookup.MobQuery.java", "BodyUseAPI": [], "Fixed commit": "9a1a60acffb625200845c16cee0e220f9c00c7c6", "Url": "https://api.github.com/repos/aadnk/ExperienceMod", "Date": "2012-06-14T08:16:34Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mState) == (jonasz.pamula.therealsnake.board.Board.STATE_PAUSED)) { mState = jonasz.pamula.therealsnake.board.Board.STATE_READY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1035/buggy-version/src.jonasz.pamula.therealsnake.board.Board.java", "BodyUseAPI": [], "Fixed commit": "472d87db0d44eca6a81b9fba879456ffe564427c", "Url": "https://api.github.com/repos/jonasz/Analog_Snake", "Date": "2013-09-21T15:01:10Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mState) == (jonasz.pamula.therealsnake.board.Board.STATE_RUNNING)) { mState = jonasz.pamula.therealsnake.board.Board.STATE_PAUSED; mSnake.pause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1035/buggy-version/src.jonasz.pamula.therealsnake.board.Board.java", "BodyUseAPI": [], "Fixed commit": "472d87db0d44eca6a81b9fba879456ffe564427c", "Url": "https://api.github.com/repos/jonasz/Analog_Snake", "Date": "2013-09-21T15:01:10Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dateStr.length()) > 10) { dateStr = dateStr.substring(0, 10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4474/buggy-version/src.com.ppm.integration.agilesdk.connector.jira.model.JIRAEntity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "a618ee507a39ddd6cc0643a2affe36ce8bd5c8d2", "Url": "https://api.github.com/repos/MicroFocus/ppm-jira-connector", "Date": "2017-02-06T09:07:08Z"},
{"Line": "=>1652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (documentOffset == 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1612/buggy-version/plugins.org.python.pydev.core.src.org.python.pydev.core.docutils.PySelection.java", "BodyUseAPI": [], "Fixed commit": "3ffd7147dc9b2120d1c2b4d0822f40df093d38bb", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2011-04-26T22:36:35Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timing.duration) <= 0) return onFinish;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1084/buggy-version/src.main.java.jkanvas.groups.RenderGroup.java", "BodyUseAPI": [], "Fixed commit": "4e2c287bb5cd4d802ba900e32749bf1b31ed4737", "Url": "https://api.github.com/repos/JosuaKrause/Kanvas", "Date": "2013-12-02T22:52:53Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!terminatingSpaceReached) { bytesConsumed = (in.getBytePosition((((int) (bufferLength)) - 1))) - startBytes; }else { bytesConsumed = (in.getBytePosition(bufferPosn)) - startBytes; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1275/buggy-version/wordcount.src.main.java.com.geneix.bottle.WordReader.java", "BodyUseAPI": [], "Fixed commit": "318181cda17c37f073c5339f5a811ce3e09afbf1", "Url": "https://api.github.com/repos/eastlondoner/bottle", "Date": "2014-10-20T18:45:40Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (txtLength > 0) { terminatingSpaceReached = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1275/buggy-version/wordcount.src.main.java.com.geneix.bottle.WordReader.java", "BodyUseAPI": [], "Fixed commit": "318181cda17c37f073c5339f5a811ce3e09afbf1", "Url": "https://api.github.com/repos/eastlondoner/bottle", "Date": "2014-10-20T18:45:40Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldIgnore) { sb.append(timeFormat.charAt(i)); i++; continue; }else if (timeFormat.startsWith(com.onehook.widget.CountDownTimerTextView.DAY_PLACEHOLDER, i)) { sb.append(\"%1$d\"); i += 2; }else if (timeFormat.startsWith(com.onehook.widget.CountDownTimerTextView.HOUR_PLACEHOLDER, i)) { sb.append(\"%2$02d\"); i += 2; }else if (timeFormat.startsWith(com.onehook.widget.CountDownTimerTextView.MINUTE_PLACEHOLDER, i)) { sb.append(\"%3$02d\"); i += 2; }else if (timeFormat.startsWith(com.onehook.widget.CountDownTimerTextView.SECOND_PLACEHOLDER, i)) { sb.append(\"%4$02d\"); i += 2; }else { sb.append(timeFormat.charAt(i)); i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/211/buggy-version/onehookinclibrary.src.main.java.com.onehook.widget.CountDownTimerTextView.java", "BodyUseAPI": [], "Fixed commit": "3e43c8601cea60158c9fb8e58c65a6e6eebf74a1", "Url": "https://api.github.com/repos/oneHook/oneHookLibraryAndroid", "Date": "2017-06-06T20:59:00Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (trueGraph == null) { trueGraph = new edu.cmu.tetrad.graph.EdgeListGraph(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/530/buggy-version/tetrad-gui.src.main.java.edu.cmu.tetradapp.editor.SimulationEditor.java", "BodyUseAPI": [], "Fixed commit": "a7c63569720aa8c4a3cdcf04d6e3ca82de6ae3ae", "Url": "https://api.github.com/repos/cmu-phil/tetrad", "Date": "2016-08-26T13:25:20Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((simulation.getSimulation().getNumDataSets()) > 0) { trueGraph = simulation.getSimulation().getTrueGraph(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/530/buggy-version/tetrad-gui.src.main.java.edu.cmu.tetradapp.editor.SimulationEditor.java", "BodyUseAPI": ["edu.cmu.tetradapp.model.Simulation.getSimulation()", "simulation.getSimulation().getTrueGraph(int)"], "Fixed commit": "a7c63569720aa8c4a3cdcf04d6e3ca82de6ae3ae", "Url": "https://api.github.com/repos/cmu-phil/tetrad", "Date": "2016-08-26T13:25:20Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((argument.length()) == 0) { return argument; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/5040/buggy-version/ProjectItinerary.src.itinerary.main.Parser.java", "BodyUseAPI": [], "Fixed commit": "7a7463b5d31b082f1df0ab1d3aba8d74c71a4504", "Url": "https://api.github.com/repos/cs2103jan2015-w14-2j/main", "Date": "2015-03-16T07:13:01Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((line.indexOf('*')) > 0) { java.util.LinkedList<java.lang.String> remove = new java.util.LinkedList<java.lang.String>(); java.lang.String starter = line.replace(\"import \", \"\").replace(\".*;\", \"\"); for (java.lang.String imp : newImports) { java.lang.String impStart = imp.substring(0, imp.lastIndexOf('.')); if (impStart.equals(starter)) remove.add(imp); } newImports.removeAll(remove); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2320/buggy-version/src.main.java.net.minecraftforge.srg2source.rangeapplier.RangeApplier.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "742730dad18fe85b4c61b89255be05e2eda82581", "Url": "https://api.github.com/repos/MinecraftForge/Srg2Source", "Date": "2014-03-07T21:09:05Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (oldClass.equals(newClass)) { newImports.remove(newClass); }else { data.delete(lastIndex, (nextIndex + 1)); nextIndex = data.indexOf(\"\\n\", lastIndex); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2320/buggy-version/src.main.java.net.minecraftforge.srg2source.rangeapplier.RangeApplier.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.remove(java.lang.String)"], "Fixed commit": "742730dad18fe85b4c61b89255be05e2eda82581", "Url": "https://api.github.com/repos/MinecraftForge/Srg2Source", "Date": "2014-03-07T21:09:05Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDead) NotFound = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1244/buggy-version/cs48.project.game.Space_Blasters.Game.java", "BodyUseAPI": [], "Fixed commit": "3b3ac1b5f51fa941e6cb9854e85303dc60105b92", "Url": "https://api.github.com/repos/vivekpatel42/cs48-project-spaceblasters", "Date": "2015-06-01T06:12:32Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.inner().tags()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tags == null) { tags = new java.util.HashMap<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3062/buggy-version/azure-mgmt-resources.src.main.java.com.microsoft.azure.management.resources.implementation.ResourceGroupImpl.java", "BodyUseAPI": [], "Fixed commit": "d43c771dac45dfc49a1f66bf904bc4af8eca2efd", "Url": "https://api.github.com/repos/anudeepsharma/azure-sdk-for-java", "Date": "2017-04-12T22:59:59Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cannon.timer) <= (-(cannon.reloadTime))) { cannon.barrel = 0; cannon.timer = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2533/buggy-version/core.src.aurumvorax.arcturus.artemis.systems.WeaponsUpdate.java", "BodyUseAPI": [], "Fixed commit": "086a1c9402e8c50126f65e3ecae9d28aeb0a7613", "Url": "https://api.github.com/repos/aurumvorax/Arcturus", "Date": "2017-12-13T21:33:34Z"},
{"Line": "=>852", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSerialBufferWaiting) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1775/buggy-version/sdk.src.main.java.com.integreight.onesheeld.sdk.OneSheeldDevice.java", "BodyUseAPI": [], "Fixed commit": "44d40863c7dac156afc8bcfd99777530522a6f43", "Url": "https://api.github.com/repos/Integreight/1Sheeld-Android-SDK", "Date": "2015-11-08T13:03:20Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["activation.getLanguageConnectionContext().getDataSetProcessorType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type == (CompilerContext.DataSetProcessorType.FORCED_SPARK)) useSpark = true; else if (type == (CompilerContext.DataSetProcessorType.FORCED_CONTROL)) useSpark = false; else { com.splicemachine.db.iapi.sql.compile.CompilerContext.DataSetProcessorType queryForcedType = com.splicemachine.derby.impl.sql.execute.operations.ExplainOperation.queryHintedForcedType(opPlanMap); if (queryForcedType != null) { if (queryForcedType == (CompilerContext.DataSetProcessorType.FORCED_SPARK)) useSpark = true; else if (queryForcedType == (CompilerContext.DataSetProcessorType.FORCED_CONTROL)) useSpark = false; }else if (!useSpark) useSpark = com.splicemachine.db.impl.ast.PlanPrinter.shouldUseSpark(opPlanMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3372/buggy-version/splice_machine.src.main.java.com.splicemachine.derby.impl.sql.execute.operations.ExplainOperation.java", "BodyUseAPI": [], "Fixed commit": "ffa0e3a874e501cfa5d345c8521a594bdbd4162a", "Url": "https://api.github.com/repos/splicemachine/spliceengine", "Date": "2017-07-05T18:48:14Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSlot(0).getStack()) != null) { recipes.setInventorySlotContents((slotIndex - 10), getSlot(0).getStack().copy()); detectAndSendChanges(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2953/buggy-version/backpack.inventory.container.ContainerWorkbenchBackpack.java", "BodyUseAPI": [], "Fixed commit": "28bc7c61c3ad1bed351f5766e3850d69d23a9f93", "Url": "https://api.github.com/repos/Eydamos/Minecraft-Backpack-Mod", "Date": "2014-04-09T21:33:20Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameBoard.getCurrentState()) == (com.hutchdesign.colortrap.model.State.GAME_OVER)) { handleGameOver(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/5071/buggy-version/src.com.hutchdesign.colortrap.view.ColorTrap.java", "BodyUseAPI": [], "Fixed commit": "869268ab27255ad77c6c7dcc7181d50968e3cbeb", "Url": "https://api.github.com/repos/alliecurry/color-trap", "Date": "2014-01-09T03:18:29Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(eventsRestfulService.isComplete())) { java.lang.Thread.sleep(3000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4620/buggy-version/app.src.main.java.com.ayoprez.castro.presenter.SplashPresenterImpl.java", "BodyUseAPI": [], "Fixed commit": "2aa9d4b59f02ab5ba7bb6bf2539a2eaa2fdcd70c", "Url": "https://api.github.com/repos/AyoPrez/NotificationApp", "Date": "2016-12-11T18:39:48Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (labelObject != null) { java.lang.String labelValue = ((java.lang.String) (labelObject.get(\"value\"))); java.lang.String labelLang = ((java.lang.String) (labelObject.get(\"xml:lang\"))); tmpAutosuggest.setLabel(labelValue); tmpAutosuggest.setLanguage(labelLang); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1379/buggy-version/api.src.main.java.v1.utils.retcat.Retcat_LabelingSystem.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(java.lang.String)", "org.json.simple.JSONObject.get(java.lang.String)"], "Fixed commit": "cbc2a4561c9b930bc68ec085d92fa51578ffc23b", "Url": "https://api.github.com/repos/mainzed/labelingsystem-server", "Date": "2016-09-28T11:43:43Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((value.representation()) == (PrimitiveValue.Representation.LONG)) { buffer.putByte(0, ((byte) (value.longValue()))); }else { buffer.putByte(0, value.byteArrayValue()[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1856/buggy-version/sbe-tool.src.main.java.uk.co.real_logic.sbe.ir.IrUtil.java", "BodyUseAPI": ["org.agrona.MutableDirectBuffer.putByte(int,((byte) (value.longValue())))", "org.agrona.MutableDirectBuffer.putByte(int,value.byteArrayValue()[0])", "uk.co.real_logic.sbe.PrimitiveValue.longValue()", "uk.co.real_logic.sbe.PrimitiveValue.byteArrayValue()"], "Fixed commit": "5641707580eadf002c3267ee596765a1f4f4efc6", "Url": "https://api.github.com/repos/ZackPierce/simple-binary-encoding", "Date": "2017-06-21T16:19:42Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cruzroja.creuroja.MainActivity.getSystemService(com.cruzroja.creuroja.CONNECTIVITY_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((manager.getActiveNetworkInfo()) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/392/buggy-version/src.com.cruzroja.creuroja.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ddbbc9819e98cdf16ca1b211bff196c3da2763bc", "Url": "https://api.github.com/repos/darthsuicune/CreuRoja", "Date": "2013-04-25T10:37:32Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isConnected()) { getSupportLoaderManager().restartLoader(com.cruzroja.creuroja.MainActivity.LOADER_CONNECTION, null, this); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/392/buggy-version/src.com.cruzroja.creuroja.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ddbbc9819e98cdf16ca1b211bff196c3da2763bc", "Url": "https://api.github.com/repos/darthsuicune/CreuRoja", "Date": "2013-04-25T10:37:32Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, model.TaxonNode>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (currentTaxonNode == null) { java.lang.System.out.println((\"Couldn't find node:\" + currentTaxonId)); }else { for (int i = 1; i <= numberOfDatasets; i++) { int currentSampleReadCount = ((int) (java.lang.Double.parseDouble(lineSplit[i]))); sampleList.get((i - 1)).getTaxa2CountMap().put(currentTaxonNode, currentSampleReadCount); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2791/buggy-version/src.sampleParser.TaxonId2CountCSVParser.java", "BodyUseAPI": ["sampleList.get((i - 1)).getTaxa2CountMap().put(model.TaxonNode,int)"], "Fixed commit": "f04ad2e1d23e10a135fffb758d2c9d69e98e95b2", "Url": "https://api.github.com/repos/jmueller95/CORNETTO", "Date": "2017-07-16T11:22:12Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, model.TaxonNode>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (currentTaxonNode == null) { java.lang.System.out.println((\"Couldn't find node:\" + currentTaxonId)); }else { java.util.HashMap<model.TaxonNode, java.lang.Integer> taxa2CountMap = sample.getTaxa2CountMap(); if (taxa2CountMap.containsKey(currentTaxonNode)) { taxa2CountMap.put(currentTaxonNode, ((taxa2CountMap.get(currentTaxonNode)) + 1)); }else { taxa2CountMap.put(currentTaxonNode, 1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2791/buggy-version/src.sampleParser.ReadName2TaxIdCSVParser.java", "BodyUseAPI": ["java.util.HashMap<model.TaxonNode, java.lang.Integer>.get(model.TaxonNode)", "java.util.HashMap<model.TaxonNode, java.lang.Integer>.containsKey(model.TaxonNode)", "java.util.HashMap<model.TaxonNode, java.lang.Integer>.put(model.TaxonNode,int)", "java.util.HashMap<model.TaxonNode, java.lang.Integer>.put(model.TaxonNode,((taxa2CountMap.get(currentTaxonNode)) + 1))"], "Fixed commit": "f04ad2e1d23e10a135fffb758d2c9d69e98e95b2", "Url": "https://api.github.com/repos/jmueller95/CORNETTO", "Date": "2017-07-16T11:22:12Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(movieItemList.isEmpty())) getMovieDetails(movieItemList.get(0).getmImdbId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/5052/buggy-version/movie.app.src.main.java.com.example.wwang.movie.activity.MainActivity.java", "BodyUseAPI": ["com.example.wwang.movie.activity.MainActivity.2.getMovieDetails(movieItemList.get(0).getmImdbId())", "movieItemList.get(0).getmImdbId()", "java.util.List<com.example.wwang.movie.model.MovieItem>.get(int)"], "Fixed commit": "e26f0e7afcfc93d31af3d066f34e6ac5edf4bdcb", "Url": "https://api.github.com/repos/willwangwp/movie", "Date": "2015-06-19T03:54:14Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hex.drf.Job.isRunning(self())) { model = doScoring(model, fr, ktrees, tid, tstats, true, (!(hasValidation())), build_tree_one_node); assert (!(importance)) || ((_treeMeasuresOnOOB.npredictors()) == (_treeMeasuresOnSOOB[0].npredictors())) : \"Missing some tree votes in variable importance voting?!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1340/buggy-version/src.main.java.hex.drf.DRF.java", "BodyUseAPI": [], "Fixed commit": "9740438ce737f502cbf47c8676361a9a0f232ed3", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2014-07-24T19:20:34Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hex.gbm.Job.isRunning(self())) { model = doScoring(model, fr, ktrees, tid, tstats, true, false, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1340/buggy-version/src.main.java.hex.gbm.GBM.java", "BodyUseAPI": [], "Fixed commit": "9740438ce737f502cbf47c8676361a9a0f232ed3", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2014-07-24T19:20:34Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (saveFile.hasLocation()) { log(((\"Writing to \" + (saveFile)) + \" failed.\")); }else { log(\"User choose no file.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4220/buggy-version/src.kth.csc.umbra.view.Despectatio.java", "BodyUseAPI": [], "Fixed commit": "1c002e48539d9e5819701d9135eb2928d945a8c5", "Url": "https://api.github.com/repos/maxnordlund/Project-Umbra", "Date": "2011-04-28T22:08:24Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (saveFile.hasLocation()) { log(((\"Writing to \" + (saveFile)) + \" failed.\")); }else { log(\"User choose no file.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4220/buggy-version/src.kth.vs.proto.Despectatio.java", "BodyUseAPI": [], "Fixed commit": "1c002e48539d9e5819701d9135eb2928d945a8c5", "Url": "https://api.github.com/repos/maxnordlund/Project-Umbra", "Date": "2011-04-28T22:08:24Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((location) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4220/buggy-version/src.kth.csc.umbra.model.LimaProcurator.java", "BodyUseAPI": [], "Fixed commit": "1c002e48539d9e5819701d9135eb2928d945a8c5", "Url": "https://api.github.com/repos/maxnordlund/Project-Umbra", "Date": "2011-04-28T22:08:24Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (collided != null) { if ((!(activated)) && ((collided.getClass()) == (edu.chl.LifeOfAGoblin.model.character.Player.class))) { spawn(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3307/buggy-version/src.main.java.edu.chl.LifeOfAGoblin.model.gameObject.SpawnPoint.java", "BodyUseAPI": ["edu.chl.LifeOfAGoblin.model.ICollidable.getClass()"], "Fixed commit": "2b5e444a8084f4eb98d6859211e24673c2f96942", "Url": "https://api.github.com/repos/Mrmiffo/LifeOfAGoblin", "Date": "2015-05-31T18:57:52Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (collided != null) { if ((!(activated)) && ((collided.getClass()) == (edu.chl.LifeOfAGoblin.model.character.Player.class))) { updateProgress(this.level, this.number); this.activate(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3307/buggy-version/src.main.java.edu.chl.LifeOfAGoblin.model.gameObject.Checkpoint.java", "BodyUseAPI": ["edu.chl.LifeOfAGoblin.model.ICollidable.getClass()"], "Fixed commit": "2b5e444a8084f4eb98d6859211e24673c2f96942", "Url": "https://api.github.com/repos/Mrmiffo/LifeOfAGoblin", "Date": "2015-05-31T18:57:52Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((location.getText()) != null) { d.put(HubLocation.PROP_LOCATION_STRING, location.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2744/buggy-version/src.main.java.com.whizzosoftware.hobson.bootstrap.api.hub.OSGIHubManager.java", "BodyUseAPI": ["java.util.Dictionary.put(HubLocation.PROP_LOCATION_STRING,location.getText())", "com.whizzosoftware.hobson.bootstrap.api.hub.HubLocation.getText()"], "Fixed commit": "e7dd7c47bdefa16358f9d7cc84fbdb46371df879", "Url": "https://api.github.com/repos/whizzosoftware/hobson-hub-core", "Date": "2015-01-29T21:59:00Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.bytten.metazelda.Room.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (parent == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3055/buggy-version/src.net.bytten.metazelda.generators.DungeonGenerator.java", "BodyUseAPI": [], "Fixed commit": "e70a12331951af5390eeb2706e6b9005ce53180d", "Url": "https://api.github.com/repos/tcoxon/metazelda", "Date": "2017-03-15T22:11:05Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (len != 1) { c.salle = groupsalle[(len - 1)]; for (int i = 0; i < (len - 1); i++) c.group += \"_\" + (groupsalle[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4779/buggy-version/OPAM_Server.src.com.loic.agenda.outil.NetAnt.java", "BodyUseAPI": [], "Fixed commit": "992205229dfc77b968afe7dfd422a3a94af17be4", "Url": "https://api.github.com/repos/xdzhou/OPAM-INT", "Date": "2013-11-24T17:12:58Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (matcher.find()) this.tf = java.lang.Integer.parseInt(matcher.group(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3227/buggy-version/src.InvertedIndex.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "57635e11978181421365526135c6c5e879a00971", "Url": "https://api.github.com/repos/avinav/map-reduce-tutorial", "Date": "2015-10-31T09:54:07Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (prospectiveURL.startsWith(\"(\")) { prospectiveURL = prospectiveURL.substring(1, ((prospectiveURL.length()) - 1)); if (prospectiveURL.endsWith(\")\")) prospectiveURL = prospectiveURL.substring(0, ((prospectiveURL.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1533/buggy-version/contrib.src.main.java.org.archive.modules.extractor.ExtractorPDFContent.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "85e7a5ee789f364e5f158f0f7a3072db3c3974c3", "Url": "https://api.github.com/repos/internetarchive/heritrix3", "Date": "2014-05-12T23:52:32Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((prospectiveURL.startsWith(\"(\")) && (alternateURL.endsWith(\")\"))) alternateURL = alternateURL.substring(0, ((alternateURL.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1533/buggy-version/contrib.src.main.java.org.archive.modules.extractor.ExtractorPDFContent.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "85e7a5ee789f364e5f158f0f7a3072db3c3974c3", "Url": "https://api.github.com/repos/internetarchive/heritrix3", "Date": "2014-05-12T23:52:32Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((wind[0]) == 0) && ((wind[1]) == 0)) { wind[0] = speedmin; wind[1] = speedmax; }else { if (speedmin < (wind[0])) { wind[0] = speedmin; } if (speedmax > (wind[1])) { wind[1] = speedmax; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3565/buggy-version/app.src.main.java.proovitoo.ilmarakendus.XmlParser.java", "BodyUseAPI": [], "Fixed commit": "bcbbe5be066c9d28c9929d533a371a0de40b8096", "Url": "https://api.github.com/repos/kelian/Ilmataat", "Date": "2016-04-16T08:25:31Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((engine.Application.gameFrame) != null) Application.gameFrame.setLocation(100, 350);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3633/buggy-version/src.server.Server.java", "BodyUseAPI": [], "Fixed commit": "2a3df9e84e1b9be50d6063f2ad2ca742e3a7c29d", "Url": "https://api.github.com/repos/m15399/GameDevGame", "Date": "2016-02-26T21:58:51Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((requestData.getPayload()) != null) && (requestData.getPayload().containsKey(\"team\"))) { com.proftaak.pts4.database.tables.Team team = com.proftaak.pts4.database.EbeanEx.find(com.proftaak.pts4.database.tables.Team.class, requestData.getPayload().get(\"team\")); if (team != null) { com.proftaak.pts4.controllers.TeamController.determineScopeRoles(requestData, team); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4196/buggy-version/backend.src.main.java.com.proftaak.pts4.controllers.ProjectController.java", "BodyUseAPI": ["requestData.getPayload().get(java.lang.String)", "com.proftaak.pts4.controllers.TeamController.determineScopeRoles(com.proftaak.pts4.core.rest.RequestData,com.proftaak.pts4.database.tables.Team)", "com.proftaak.pts4.core.rest.RequestData.getPayload()", "com.proftaak.pts4.database.EbeanEx.find(java.lang.Class,requestData.getPayload().get(\"team\"))"], "Fixed commit": "ec990010f695de58b59794187600a58ef0a5c5c6", "Url": "https://api.github.com/repos/Bonemind/PTS4", "Date": "2015-04-07T08:43:09Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((json_result) != null) { if (json_result.equals(\"1\")) { android.widget.Toast.makeText(this, \"Successfully Booked\", Toast.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(this, \"Unable to book, Contact Admin\", Toast.LENGTH_LONG).show(); } finish(); }else { android.widget.Toast.makeText(this, \"Unable to schedule ride. Please try again later\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2732/buggy-version/app.src.main.java.com.wareproz.mac.gravy.ScheduleRide.java", "BodyUseAPI": [], "Fixed commit": "e42c4767f07314d395af2c538f9add475d495b21", "Url": "https://api.github.com/repos/chumylee/gravy_rider", "Date": "2017-09-13T14:22:25Z"},
{"Line": "=>849", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (view == null) { throw new java.lang.NullPointerException(((\"Find view failed: id=\" + (java.lang.Integer.toHexString(id))) + \". Wrong view id used.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2612/buggy-version/light-android-annotation.src.main.java.com.wq.android.lightannotation.LightBinder.java", "BodyUseAPI": [], "Fixed commit": "da6f83b047e1aca81ca11530dad04acbd29a3307", "Url": "https://api.github.com/repos/kim-wang-bj/LightAndroidAnnotation", "Date": "2016-08-11T01:33:39Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cardListFragment) == null) { if (uploadMenuIsOpen) { uploadMenuIsOpen = false; bottomMenu.setVisibility(View.GONE); return; } if (!(exitFlag)) { exitFlag = true; com.example.pc.shacus.Util.CommonUtils.getUtilInstance().showToast(this, \"\u518d\u70b9\u51fb\u4e00\u6b21\u8fd4\u56de\u952e\u9000\u51fa\u5e94\u7528\"); handler.postDelayed(runnable, 3000); }else { finish(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1978/buggy-version/app.src.main.java.com.example.pc.shacus.Activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c4d25de59a03338d3a15a37e18e53a417abff380", "Url": "https://api.github.com/repos/LeonidasCl/shacus", "Date": "2017-05-08T14:35:53Z"},
{"Line": "=>662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cardListFragment) != null) { display_big_image_layout = cardListFragment.getDisplay_big_image_layout(); if ((display_big_image_layout.getVisibility()) == (android.view.View.VISIBLE)) { display_big_image_layout.setVisibility(View.GONE); navibar.setVisibility(View.VISIBLE); }else { if (uploadMenuIsOpen) { uploadMenuIsOpen = false; bottomMenu.setVisibility(View.GONE); return; } if (!(exitFlag)) { exitFlag = true; com.example.pc.shacus.Util.CommonUtils.getUtilInstance().showToast(this, \"\u518d\u70b9\u51fb\u4e00\u6b21\u8fd4\u56de\u952e\u9000\u51fa\u5e94\u7528\"); handler.postDelayed(runnable, 3000); }else { finish(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1978/buggy-version/app.src.main.java.com.example.pc.shacus.Activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c4d25de59a03338d3a15a37e18e53a417abff380", "Url": "https://api.github.com/repos/LeonidasCl/shacus", "Date": "2017-05-08T14:35:53Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(model.containsAttribute(\"project\"))) { model.addAttribute(\"project\", project); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2313/buggy-version/src.main.java.com.instateams.controller.ProjectController.java", "BodyUseAPI": ["org.springframework.ui.Model.addAttribute(java.lang.String,com.instateams.model.Project)"], "Fixed commit": "551e2bbc3f3ac4571ea12744198a428e00f12717", "Url": "https://api.github.com/repos/lgaleazzi/spring-instateams", "Date": "2017-11-01T21:23:31Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.ibatis.session.SqlSession.selectList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((postList.size()) > 0) result = sqlSession.update(\"com.tessoft.nearhere.taxi.admin.updatePostAsFinished\", postList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3029/buggy-version/randomMsgServer.src.main.java.com.dy.common.ScheduledTasks.java", "BodyUseAPI": ["org.apache.ibatis.session.SqlSession.update(java.lang.String,java.util.List<com.nearhere.domain.Post>)"], "Fixed commit": "b28f0741412738d23f50991460726c08b8d1346e", "Url": "https://api.github.com/repos/kim2509/publicChatServer", "Date": "2015-04-27T12:50:26Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rns.tiffeat.web.dao.api.OrderDao.getCustomerQuickOrder(customerOrder.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((order.getPrice()) != null) { customerOrder.setPrice(order.getPrice()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/920/buggy-version/tiffinapp.src.main.java.com.rns.tiffeat.web.bo.impl.CustomerBoImpl.java", "BodyUseAPI": ["com.rns.tiffeat.web.bo.domain.CustomerOrder.setPrice(order.getPrice())", "com.rns.tiffeat.web.dao.domain.Order.getPrice()"], "Fixed commit": "38057d61dce3fc6e46c0d42ee0d62afce1fdef04", "Url": "https://api.github.com/repos/ajaxkulkarni/dabbaweb", "Date": "2016-01-24T18:47:30Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((customerOrder.getMeal()) != null) { customerOrder.setPrice(customerOrder.getMeal().getPrice()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/920/buggy-version/tiffinapp.src.main.java.com.rns.tiffeat.web.util.DataToBusinessConverters.java", "BodyUseAPI": ["com.rns.tiffeat.web.bo.domain.CustomerOrder.getMeal()", "com.rns.tiffeat.web.bo.domain.CustomerOrder.setPrice(customerOrder.getMeal().getPrice())", "customerOrder.getMeal().getPrice()"], "Fixed commit": "38057d61dce3fc6e46c0d42ee0d62afce1fdef04", "Url": "https://api.github.com/repos/ajaxkulkarni/dabbaweb", "Date": "2016-01-24T18:47:30Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((propagatePermissions) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/997/buggy-version/src.main.java.org.jbei.ice.lib.folder.Folder.java", "BodyUseAPI": [], "Fixed commit": "8c0c5fbc6ec1a4996c86f9af0638a7a6fd12a0b9", "Url": "https://api.github.com/repos/JBEI/ice", "Date": "2014-10-27T21:09:41Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mPayerCostList.isEmpty())) { payerCost = mPayerCostList.get(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3587/buggy-version/sdk.src.main.java.com.mercadopago.adapters.ReviewPaymentAdapter.java", "BodyUseAPI": ["java.util.List<com.mercadopago.model.PayerCost>.get(int)"], "Fixed commit": "a4b6d72fb1349edc2b7d40a04cd5dcff1b11ffd1", "Url": "https://api.github.com/repos/mercadopago/px-android", "Date": "2016-11-24T17:43:54Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mCardInfoList.isEmpty())) { cardInfo = mCardInfoList.get(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3587/buggy-version/sdk.src.main.java.com.mercadopago.adapters.ReviewPaymentAdapter.java", "BodyUseAPI": ["java.util.List<com.mercadopago.model.CardInfo>.get(int)"], "Fixed commit": "a4b6d72fb1349edc2b7d40a04cd5dcff1b11ffd1", "Url": "https://api.github.com/repos/mercadopago/px-android", "Date": "2016-11-24T17:43:54Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.getElementsByClass(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((xg1s.text().length()) != 0) { comment_count = xg1s.text().substring(\"\u56de\".length()); }else { comment_count = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1725/buggy-version/app.src.main.java.org.qinshuihepan.bbs.ui.MyPostsActivity.java", "BodyUseAPI": ["xg1s.text().substring(int)", "org.jsoup.select.Elements.text()"], "Fixed commit": "25485ae7fb0e60211cd45bf22ff0c1b6b882df5d", "Url": "https://api.github.com/repos/fenjuly/Qshp", "Date": "2014-10-01T11:48:05Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((posts.size()) == 1) { posts.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1725/buggy-version/app.src.main.java.org.qinshuihepan.bbs.ui.MyPostsActivity.java", "BodyUseAPI": ["java.util.ArrayList<org.qinshuihepan.bbs.model.BasePost>.clear()"], "Fixed commit": "25485ae7fb0e60211cd45bf22ff0c1b6b882df5d", "Url": "https://api.github.com/repos/fenjuly/Qshp", "Date": "2014-10-01T11:48:05Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((proxyLabelImage) != null) { newApp.setImage(proxyLabelImage); }else { newApp.setImage(new com.emeraldElves.alcohollabelproject.UserInterface.ProxyLabelImage(\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3705/buggy-version/src.main.java.com.emeraldElves.alcohollabelproject.UserInterface.NewApplicationController.java", "BodyUseAPI": [], "Fixed commit": "f5057acd5445b0baed19cbdb9b7d1e0bde7fc41c", "Url": "https://api.github.com/repos/CS3733/AlcoholLabelProject", "Date": "2017-04-19T09:54:22Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (it.hasNext()) { it.next(); }else { throw new java.lang.IllegalStateException(\"MrX has no initial move yet.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/919/buggy-version/ScotlYard.src.kj.scotlyard.game.util.MrXTracker.java", "BodyUseAPI": ["java.util.Iterator<kj.scotlyard.game.model.Move>.next()"], "Fixed commit": "9a87f0559973d54f54ec7afd70fa692c3a5b9ed0", "Url": "https://api.github.com/repos/jakob190590/ScotlYard", "Date": "2012-05-09T20:30:05Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.bordertech.wcomponents.WDecoratedLabel.getBody()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (labelBody instanceof com.github.bordertech.wcomponents.WText) { java.lang.String bodyText; bodyText = ((com.github.bordertech.wcomponents.WText) (labelBody)).getText(); if (bodyText != null) { image.setAlternativeText(bodyText); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1540/buggy-version/corpdir-srv-web-ui-lib.src.main.java.com.github.bordertech.wcomponents.lib.util.ViewUtil.java", "BodyUseAPI": [], "Fixed commit": "c536acf7e4c31593dc0e907fd77151529e2cd9f9", "Url": "https://api.github.com/repos/jonathanaustin/corporate-directory-server", "Date": "2017-09-28T03:08:00Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (project != null) { if ((project.getParent()) instanceof jenkins.scm.api.SCMSourceOwner) { jenkins.scm.api.SCMSourceOwner owner = ((jenkins.scm.api.SCMSourceOwner) (project.getParent())); for (jenkins.scm.api.SCMSource source : owner.getSCMSources()) { if (source instanceof org.jenkinsci.plugins.github_branch_source.GitHubSCMSource) { return true; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4540/buggy-version/src.main.java.org.jenkinsci.plugins.github_branch_source.PullRequestGHEventSubscriber.java", "BodyUseAPI": ["hudson.model.Job<?, ?>.getParent()", "hudson.model.Job<?, ?>.getParent()"], "Fixed commit": "b47708064302e418e0466625dca3930917a17381", "Url": "https://api.github.com/repos/recena/github-branch-source-plugin", "Date": "2016-02-26T13:00:41Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3368/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.exec.OperatorUtils.java", "BodyUseAPI": [], "Fixed commit": "08fc1a87514029468039ebe722077d2728100820", "Url": "https://api.github.com/repos/WANdisco/amplab-hive", "Date": "2014-12-02T06:11:47Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (op == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3368/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.parse.TezCompiler.java", "BodyUseAPI": [], "Fixed commit": "08fc1a87514029468039ebe722077d2728100820", "Url": "https://api.github.com/repos/WANdisco/amplab-hive", "Date": "2014-12-02T06:11:47Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(e.isShiftDown())) { smudgeBrush.setSource(sourceImage, x, y, strengthParam.getValueAsPercentage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3992/buggy-version/src.main.java.pixelitor.tools.SmudgeTool.java", "BodyUseAPI": [], "Fixed commit": "3c49c17c096b2c7d085c932ad364adc59b3004da", "Url": "https://api.github.com/repos/lbalazscs/Pixelitor", "Date": "2015-05-14T12:43:55Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (restStem.isEmpty()) i = 0; else i = (restStem.length()) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1296/buggy-version/src.utils.Stemmer.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "0a175edf0a461f2b48b8bd1a65f1429b0337c860", "Url": "https://api.github.com/repos/J-Ahlers/Information-Retrieval", "Date": "2015-06-11T19:47:29Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((camera) == null) { ((android.app.Activity) (context)).finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/5037/buggy-version/collect_app.src.main.java.org.odk.collect.android.views.CameraPreview.java", "BodyUseAPI": [], "Fixed commit": "c36087fc7cccaecf0b6a38bafb8bab51347db6f0", "Url": "https://api.github.com/repos/grzesiek2010/collect", "Date": "2017-05-22T07:01:42Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) word.append(\"\ufffd\".toUpperCase()); else word.append(\"\ufffd\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/603/buggy-version/MissingWords.core.src.com.me.missingwords.listeners.InputButtonListener.java", "BodyUseAPI": [], "Fixed commit": "6d3701e68293ee0e8b47d53770f9c1eabe2d71ce", "Url": "https://api.github.com/repos/adrianoubk/Missing_Words", "Date": "2014-12-16T11:21:40Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) word.append(\"\ufffd\".toUpperCase()); else word.append(\"\ufffd\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/603/buggy-version/MissingWords.core.src.com.me.missingwords.listeners.InputButtonListener.java", "BodyUseAPI": [], "Fixed commit": "6d3701e68293ee0e8b47d53770f9c1eabe2d71ce", "Url": "https://api.github.com/repos/adrianoubk/Missing_Words", "Date": "2014-12-16T11:21:40Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (num >= 9) { ++counter; if (counter <= 4) cell.setTile(holeTile); }else counter = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/603/buggy-version/MissingWords.core.src.com.me.missingwords.actors.World.java", "BodyUseAPI": [], "Fixed commit": "6d3701e68293ee0e8b47d53770f9c1eabe2d71ce", "Url": "https://api.github.com/repos/adrianoubk/Missing_Words", "Date": "2014-12-16T11:21:40Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.nio.file.Path, org.eclipse.flux.watcher.core.spi.Project>.get(java.nio.file.Path)", "org.eclipse.flux.watcher.fs.JDKProjectWatchService.cast(java.nio.file.WatchEvent<?>)", "java.nio.file.Path.resolve(java.nio.file.Path)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((project.hasResource(resourcePath.toString())) && ((pathEvent.kind()) == (java.nio.file.StandardWatchEventKinds.ENTRY_CREATE))) { repositoryEventType = PROJECT_RESOURCE_MODIFIED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3362/buggy-version/org.eclipse.flux.watcher.src.main.java.org.eclipse.flux.watcher.fs.JDKProjectWatchService.java", "BodyUseAPI": [], "Fixed commit": "ef5ea49508ffe4814c1bafc86af5c534065cec06", "Url": "https://api.github.com/repos/fjodorver/flux", "Date": "2016-08-18T14:23:37Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((template) != null) { template.preamble(proc, env); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4447/buggy-version/src.main.java.com.epimorphics.dclib.templates.CompositeTemplate.java", "BodyUseAPI": [], "Fixed commit": "3b855eb92c8f34eee70b8661a61b4e1108d9da63", "Url": "https://api.github.com/repos/epimorphics/dclib", "Date": "2016-02-16T13:41:00Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pgei.getOperatorKind().equals(OperatorKind.IS_A)) { dv = ei1.getDataValue(); }else { dv = se.cambio.cds.util.ElementInstanceCollectionUtil.resolvePredicate(ei1.getDataValue(), pgei.getOperatorKind(), guide, date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1113/buggy-version/cds.cds-core.src.main.java.se.cambio.cds.util.ElementInstanceCollectionUtil.java", "BodyUseAPI": ["se.cambio.cds.model.facade.execution.vo.PredicateGeneratedElementInstance.getOperatorKind()", "se.cambio.cds.util.ElementInstanceCollectionUtil.resolvePredicate(ei1.getDataValue(),pgei.getOperatorKind(),se.cambio.cds.gdl.model.Guide,java.util.Calendar)"], "Fixed commit": "a4cce660cced4fdf0fcbdef4d3501dac5a43159f", "Url": "https://api.github.com/repos/openEHR/gdl-tools", "Date": "2013-12-19T17:29:19Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((method.getModifiers()) & (java.lang.reflect.Modifier.PUBLIC)) == 0) || (method.isBridge())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4835/buggy-version/src.main.java.org.springframework.classify.util.MethodInvokerUtils.java", "BodyUseAPI": [], "Fixed commit": "9fc70990af26277c4571a131598c8657bcd5ae1c", "Url": "https://api.github.com/repos/bountych/spring-retry", "Date": "2015-04-02T05:40:53Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUI()) != null) { ((com.vaadin.navigator.View) (getSelectedTab())).enter(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4186/buggy-version/clubeek-ui.src.main.java.com.clubeek.ui.LayoutTabSheet.java", "BodyUseAPI": [], "Fixed commit": "01f416bd259badf597687148f40d1b4035a89a38", "Url": "https://api.github.com/repos/marek-svarc/sportal", "Date": "2015-07-03T12:57:28Z"},
{"Line": "=>1055", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (commaSeparatedList.isEmpty()) { return new java.util.ArrayList<>(); }else { java.util.List<java.lang.String> items = java.util.Arrays.asList(commaSeparatedList.split(\"\\\\s*,\\\\s*\")); return items; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4650/buggy-version/src.com.owncloud.android.ui.activity.Preferences.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.util.Arrays.asList(java.lang.String[])"], "Fixed commit": "2af94f800f7faac22557c15f4182234d3f91f02a", "Url": "https://api.github.com/repos/jpg-developer/android", "Date": "2016-01-02T23:26:01Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (x != null) str = ((java.lang.String) (x.get(exchange)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/653/buggy-version/src.com.xrtb.pojo.BidResponse.java", "BodyUseAPI": ["java.util.Map.get(java.lang.String)"], "Fixed commit": "409f5d54f622b7ca30330d393980acba7c302b93", "Url": "https://api.github.com/repos/benmfaul/XRTB", "Date": "2015-12-07T01:34:39Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lval) != null) qvalue = new java.util.TreeSet(lval); else { qvalue = new java.util.TreeSet(); qvalue.add(svalue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/653/buggy-version/src.com.xrtb.common.Node.java", "BodyUseAPI": [], "Fixed commit": "409f5d54f622b7ca30330d393980acba7c302b93", "Url": "https://api.github.com/repos/benmfaul/XRTB", "Date": "2015-12-07T01:34:39Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != listener) { listener.onStart(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3688/buggy-version/max-android-core.app.src.main.java.com.magnet.max.android.attachment.Attachment.java", "BodyUseAPI": ["com.magnet.max.android.attachment.Attachment.AttachmentTrasferLister.onStart(com.magnet.max.android.attachment.Attachment<T>)"], "Fixed commit": "3719ea97bb106230d9750d85e4b8ec2d1f59cedf", "Url": "https://api.github.com/repos/magnetsystems/max-android", "Date": "2015-11-25T00:12:12Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (status)) { status = com.magnet.max.android.attachment.Attachment.Status.INIT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3688/buggy-version/max-android-core.app.src.main.java.com.magnet.max.android.attachment.Attachment.java", "BodyUseAPI": [], "Fixed commit": "3719ea97bb106230d9750d85e4b8ec2d1f59cedf", "Url": "https://api.github.com/repos/magnetsystems/max-android", "Date": "2015-11-25T00:12:12Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.lwjgl.opengl.GL11.glIsEnabled(GL11.GL_FOG)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!fog) org.lwjgl.opengl.GL11.glEnable(GL11.GL_FOG);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/266/buggy-version/src.main.java.de.teamlapen.vampirism.client.render.RenderHandler.java", "BodyUseAPI": [], "Fixed commit": "694c0d93ec1681660a449f8d99081fb6b193a18d", "Url": "https://api.github.com/repos/TeamLapen/Vampirism", "Date": "2015-06-16T22:12:35Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.lwjgl.opengl.GL11.glIsEnabled(GL11.GL_FOG)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!fog) org.lwjgl.opengl.GL11.glDisable(GL11.GL_FOG);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/266/buggy-version/src.main.java.de.teamlapen.vampirism.client.render.RenderHandler.java", "BodyUseAPI": [], "Fixed commit": "694c0d93ec1681660a449f8d99081fb6b193a18d", "Url": "https://api.github.com/repos/TeamLapen/Vampirism", "Date": "2015-06-16T22:12:35Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["currentRoom.inv.getItem(command.getSecondWord())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (item.isFlashlight()) { java.lang.System.out.println(\"Use it wisely, it won't last very long!\"); }else if (item.isSpecial()) { if (item.getName().equalsIgnoreCase(\"boltcutter\")) { java.lang.System.out.println(\"This might be usefull for escaping\"); }else if (item.getName().equalsIgnoreCase(\"blueprints\")) { java.lang.System.out.println(\"The blueprints could be useful for finding new places to go,\"); java.lang.System.out.println(\"just don't wander around for too long\"); } }else if (item.isKey()) { java.lang.System.out.println(\"Look for a locked door\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1972/buggy-version/src.Game.java", "BodyUseAPI": ["Item.isSpecial()", "item.getName().equalsIgnoreCase(java.lang.String)", "Item.getName()", "Item.isKey()", "Item.getName()", "item.getName().equalsIgnoreCase(java.lang.String)"], "Fixed commit": "4ace45102799406cc2e02652bdb1e12a412e2603", "Url": "https://api.github.com/repos/Nekaerth/Zuul", "Date": "2016-10-26T17:40:59Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Props.wsidDomain.equals(localName)) { param.wsidDomain = cleanContentAsString(null); }else if (Props.defaultAuthType.equals(localName)) { java.lang.String str = cleanContentAsString(null); if (str != null) { param.defaultAuthType = com.github.obase.webc.AuthType.valueOf(str); } }else if (Props.refererDomain.equals(localName)) { param.refererDomain = cleanContentAsString(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2579/buggy-version/obase-webc.src.main.java.com.github.obase.webc.config.WebcConfigParser.java", "BodyUseAPI": ["Props.refererDomain.equals(java.lang.String)", "Props.defaultAuthType.equals(java.lang.String)"], "Fixed commit": "c46708fef05bb4905b87f21461bbdf08e93284e8", "Url": "https://api.github.com/repos/obase/java", "Date": "2017-08-30T10:18:59Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ua.externalcourse.service.OrderService.loadOrderById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(BookingStatus.NEW.equals(order.getBookingStatus()))) { return (REDIRECT_PREFIX) + (ADMIN_ORDERS_PAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2874/buggy-version/src.main.java.ua.externalcourse.controller.impl.AdminOrdersController.java", "BodyUseAPI": [], "Fixed commit": "5b698bfba836f16e2ccd572fa5583146b0f663b1", "Url": "https://api.github.com/repos/KSWest/HotelBookingService", "Date": "2017-09-26T22:26:28Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (javaHome == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3874/buggy-version/JavaLang.src.main.java.com.besaba.revonline.snippetide.lang.java.JavaLanguage.java", "BodyUseAPI": [], "Fixed commit": "599c317fd1a67fc2955667de162550e550ed6a1e", "Url": "https://api.github.com/repos/marcoacierno/SnippetIDE", "Date": "2015-07-12T22:10:22Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((cu.getPackage()) != null) { className = ((cu.getPackage().getName().toString()) + \".\") + (cd.getName()); }else { className = cd.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4281/buggy-version/src.main.java.org.creativelabs.ImportList.java", "BodyUseAPI": [], "Fixed commit": "42474a271db842eb3cba58313df10b79f5da8f41", "Url": "https://api.github.com/repos/VictorDenisov/seams", "Date": "2011-03-26T14:32:47Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (constraints == null) this.setConstraints(new java.util.ArrayList<internal.parser.containers.Constraint>());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2705/buggy-version/src.internal.tree.WorldTreeFactory.java", "BodyUseAPI": [], "Fixed commit": "02f551a6fb2cac586e41c3d7dd89bb4a8a6819f2", "Url": "https://api.github.com/repos/okennedy/worldtree", "Date": "2013-07-26T01:54:20Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((builder.length()) != 0) { builder.delete(((builder.length()) - 2), builder.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2198/buggy-version/src.main.java.seedu.address.model.person.UserPerson.java", "BodyUseAPI": ["java.lang.StringBuilder.length()", "java.lang.StringBuilder.delete(int,int)", "java.lang.StringBuilder.length()"], "Fixed commit": "6dd5a7269902dba820ff57494b0f52fe9718749b", "Url": "https://api.github.com/repos/CS2103AUG2017-F11-B2/main", "Date": "2017-11-02T16:37:48Z"},
{"Line": "=>1078", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (customFilter) { $selectElement.html(optionsHtml.toSafeHtml().asString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1494/buggy-version/plugin.src.main.java.com.arcbees.chosen.client.ChosenImpl.java", "BodyUseAPI": [], "Fixed commit": "99e94514ca877f11f7c2afef82cba01f272ac3c7", "Url": "https://api.github.com/repos/VEDAGroup/gwtchosen", "Date": "2014-04-02T15:02:59Z"},
{"Line": "=>1359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(customFilter)) { resultsFilter = new com.arcbees.chosen.client.ChosenImpl.ClientResultsFilter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1494/buggy-version/plugin.src.main.java.com.arcbees.chosen.client.ChosenImpl.java", "BodyUseAPI": [], "Fixed commit": "99e94514ca877f11f7c2afef82cba01f272ac3c7", "Url": "https://api.github.com/repos/VEDAGroup/gwtchosen", "Date": "2014-04-02T15:02:59Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { mAwesomePager.setCurrentItem(savedInstanceState.getInt(\"currentItem\", 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/517/buggy-version/PhotoClient.app.src.main.java.ru.ifmo.md.extratask1.photoclient.MainActivity.java", "BodyUseAPI": ["android.support.v4.view.ViewPager.setCurrentItem(savedInstanceState.getInt(\"currentItem\", 0))", "android.os.Bundle.getInt(java.lang.String,int)"], "Fixed commit": "cc475a3d227f4b1c64ea769d742748b111993276", "Url": "https://api.github.com/repos/serejke/extratask1", "Date": "2015-01-18T20:54:38Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progressDialog) != null) { progressDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/517/buggy-version/PhotoClient.app.src.main.java.ru.ifmo.md.extratask1.photoclient.FullScreenImageActivity.java", "BodyUseAPI": [], "Fixed commit": "cc475a3d227f4b1c64ea769d742748b111993276", "Url": "https://api.github.com/repos/serejke/extratask1", "Date": "2015-01-18T20:54:38Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.avpptr.umweltzone.models.LowEmissionZone.getRecentLowEmissionZone(android.support.v4.app.FragmentActivity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(lowEmissionZone.containsGeometryInformation())) { de.avpptr.umweltzone.map.ZoneNotDrawableDialog dialog = de.avpptr.umweltzone.map.ZoneNotDrawableDialog.newInstance(lowEmissionZone); dialog.show(fragmentManager, ZoneNotDrawableDialog.FRAGMENT_TAG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/719/buggy-version/Umweltzone.src.main.java.de.avpptr.umweltzone.map.MapFragment.java", "BodyUseAPI": ["de.avpptr.umweltzone.map.ZoneNotDrawableDialog.newInstance(de.avpptr.umweltzone.models.LowEmissionZone)"], "Fixed commit": "95270d2f67b707f3563d22f42fb4f206827f3cd7", "Url": "https://api.github.com/repos/johnjohndoe/Umweltzone", "Date": "2016-07-15T17:07:11Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, java.lang.Integer>.get(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tail == null) { tail = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1690/buggy-version/discoursedb-annotation-io-brat.src.main.java.edu.cmu.cs.lti.discoursedb.annotation.brat.util.UtilService.java", "BodyUseAPI": [], "Fixed commit": "78c76753c80432f92d3273ae91ecf37b84c0cd76", "Url": "https://api.github.com/repos/DiscourseDB/discoursedb-core", "Date": "2017-07-11T20:47:42Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (returnvariable == null) { edu.syr.bytecast.jimple.beans.jimpleBean.Unit returnstmt = soot.jimple.Jimple.v().newReturnVoidStmt(); units.add(returnstmt); }else { edu.syr.bytecast.jimple.beans.jimpleBean.Unit returnstmt = soot.jimple.Jimple.v().newReturnStmt(returnvariable.getVariable()); units.add(returnstmt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3911/buggy-version/bytecast-jimple.src.edu.syr.bytecast.jimple.beans.jimpleBean.JimpleMethod.java", "BodyUseAPI": ["edu.syr.bytecast.jimple.beans.jimpleBean.JimpleVariable.getVariable()", "soot.jimple.Jimple.v().newReturnStmt(returnvariable.getVariable())"], "Fixed commit": "d6790cf1f992bac4c6a247d143283c07f1bf00e9", "Url": "https://api.github.com/repos/dopl/bytecast-jimple", "Date": "2013-04-13T18:38:12Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Splay.SplayTreeImpl<T>.getRoot()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(node.getData().equals(this.root.getData()))) { splay(((BST.Node<T>) (node))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3250/buggy-version/Java.Splay.SplayTreeImpl.java", "BodyUseAPI": [], "Fixed commit": "05149af2759001b6b7ce689412289c53e1504c4f", "Url": "https://api.github.com/repos/IonesioJunior/Data-Structures", "Date": "2017-04-15T22:33:09Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.Orient.instance().getProfiler()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (prof != null) if (((java.lang.Boolean) (iNewValue))) prof.startRecording(); else prof.stopRecording();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4833/buggy-version/core.src.main.java.com.orientechnologies.orient.core.config.OGlobalConfiguration.java", "BodyUseAPI": ["com.orientechnologies.common.profiler.OProfiler.startRecording()", "com.orientechnologies.common.profiler.OProfiler.stopRecording()"], "Fixed commit": "e12e6f00579bd31cdb90faad2f0b6f5e01f6e439", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-12-08T16:51:44Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contextStats) != null) { contextStats.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/121/buggy-version/src.main.java.org.mondemand.Client.java", "BodyUseAPI": [], "Fixed commit": "cfe593e1a9f49e0b0b2d41c25265b681615b3ee1", "Url": "https://api.github.com/repos/lun-li/mondemand-java", "Date": "2015-03-20T19:45:33Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentPosition.getStateMachineNode().getNodeType().equals(SchemaStateMachineNode.Type.ANY)) { return; }else { verifyCurrentPositionIsAtElement((\"Started element \" + elemQName)); if ((currentPosition.getStateMachineNode().getPossibleNextStates()) != null) { final java.lang.String elemName = getLeafNodeName(currentPosition.getStateMachineNode()); throw new java.lang.IllegalStateException(((\"Element \" + elemName) + \" has null children! Exactly one is expected.\")); }else if (!(currentPosition.getStateMachineNode().getPossibleNextStates().isEmpty())) { final java.lang.String elemName = getLeafNodeName(currentPosition.getStateMachineNode()); throw new java.lang.IllegalStateException(((\"Element \" + elemName) + \" has zero children! Exactly one is expected.\")); }else if ((currentPosition.getStateMachineNode().getPossibleNextStates().size()) > 1) { final java.lang.String elemName = getLeafNodeName(currentPosition.getStateMachineNode()); throw new java.lang.IllegalStateException(((((\"Element \" + elemName) + \" has \") + (currentPosition.getStateMachineNode().getPossibleNextStates().size())) + \" children! Only one was expected.\")); } final mpigott.avro.xml.XmlSchemaDocumentNode childNode = createTreeNode(currentPosition, currentPosition.getStateMachineNode().getPossibleNextStates().get(0)); final mpigott.avro.xml.XmlSchemaDocumentPathNode childPath = createDocumentPathNode(XmlSchemaDocumentPathNode.Direction.CHILD, currentPath, childNode); currentPosition.getChildren().add(childNode); currentPosition = childNode; currentPath.setNextNode(0, childPath); currentPath = childPath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3722/buggy-version/avro-to-xml.src.main.java.mpigott.avro.xml.XmlToAvroPathCreator.java", "BodyUseAPI": ["currentPosition.getStateMachineNode().getPossibleNextStates().get(int)", "currentPosition.getStateMachineNode().getPossibleNextStates().isEmpty()", "mpigott.avro.xml.XmlToAvroPathCreator.getLeafNodeName(currentPosition.getStateMachineNode())", "mpigott.avro.xml.XmlSchemaDocumentNode.getStateMachineNode()", "currentPosition.getStateMachineNode().getPossibleNextStates().size()", "mpigott.avro.xml.XmlSchemaDocumentNode.getStateMachineNode()", "mpigott.avro.xml.XmlSchemaDocumentNode.getStateMachineNode()", "mpigott.avro.xml.XmlToAvroPathCreator.createTreeNode(mpigott.avro.xml.XmlSchemaDocumentNode,currentPosition.getStateMachineNode().getPossibleNextStates().get(0))", "mpigott.avro.xml.XmlSchemaDocumentNode.getStateMachineNode()", "currentPosition.getStateMachineNode().getPossibleNextStates()", "mpigott.avro.xml.XmlSchemaDocumentNode.getStateMachineNode()", "currentPosition.getStateMachineNode().getPossibleNextStates().size()", "mpigott.avro.xml.XmlToAvroPathCreator.getLeafNodeName(currentPosition.getStateMachineNode())", "mpigott.avro.xml.XmlSchemaDocumentNode.getStateMachineNode()", "currentPosition.getStateMachineNode().getPossibleNextStates()", "mpigott.avro.xml.XmlSchemaDocumentNode.getStateMachineNode()", "mpigott.avro.xml.XmlSchemaDocumentNode.getStateMachineNode()", "mpigott.avro.xml.XmlSchemaDocumentNode.getChildren()", "mpigott.avro.xml.XmlToAvroPathCreator.getLeafNodeName(currentPosition.getStateMachineNode())", "currentPosition.getStateMachineNode().getPossibleNextStates()", "currentPosition.getStateMachineNode().getPossibleNextStates()", "currentPosition.getStateMachineNode().getPossibleNextStates()", "currentPosition.getChildren().add(mpigott.avro.xml.XmlSchemaDocumentNode)"], "Fixed commit": "aae8f003ab565ebb3b2fd70f6aa39be4599b5789", "Url": "https://api.github.com/repos/mikepigott/xml-to-avro", "Date": "2014-07-27T15:57:57Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((field.getType()) != (int.class)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/481/buggy-version/WheelViewSample.src.main.java.com.lukedeighton.wheelsample.MaterialColor.java", "BodyUseAPI": [], "Fixed commit": "e56ac28ebcfb746cbf5d8a24d84a5f5c0d0bfe39", "Url": "https://api.github.com/repos/henrychuangtw/WheelView", "Date": "2016-05-15T10:56:04Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.idea.svn.SvnUtil.getUrl(org.jetbrains.idea.svn.SvnVcs,java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (fileUrl != null) { org.tmatesoft.svn.core.wc.SVNInfo info = svn.getInfo(vFile); if (info != null) { java.io.File wcRoot = info.getWorkingCopyRoot(); if (wcRoot != null) { com.intellij.openapi.vfs.VirtualFile rootVf = org.jetbrains.idea.svn.SvnUtil.getVirtualFile(wcRoot.getPath()); org.tmatesoft.svn.core.SVNURL branch = org.jetbrains.idea.svn.SvnUtil.getBranchForUrl(svn, rootVf, fileUrl.toString()); return new zielu.svntoolbox.FileStatus(fileUrl, branch); }else { return new zielu.svntoolbox.FileStatus(fileUrl); } }else { return new zielu.svntoolbox.FileStatus(fileUrl); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4830/buggy-version/SVNToolBox.src.zielu.svntoolbox.FileStatusCalculator.java", "BodyUseAPI": ["org.jetbrains.idea.svn.SvnUtil.getBranchForUrl(org.jetbrains.idea.svn.SvnVcs,com.intellij.openapi.vfs.VirtualFile,fileUrl.toString())", "org.tmatesoft.svn.core.SVNURL.toString()"], "Fixed commit": "4946628c7a40f6c41c940bb50138254210289e55", "Url": "https://api.github.com/repos/zielu/SVNToolBox", "Date": "2013-12-02T19:01:47Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstTest) { firstTest = false; startRun(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2641/buggy-version/jsystem-core-projects.jsystemCore.src.main.java.jsystem.extensions.report.difido.AbstractHtmlReporter.java", "BodyUseAPI": [], "Fixed commit": "68eed5b2e56d130b8848269e13a87412af1840d8", "Url": "https://api.github.com/repos/Top-Q/jsystem", "Date": "2016-06-06T07:55:45Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((java.lang.Double.compare(delta, 0.0)) < 0) delta = 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/739/buggy-version/3-Baseball.src.BaseballElimination.java", "BodyUseAPI": [], "Fixed commit": "df85d5f3d2f77909e323fe1762c08c942ab5eef5", "Url": "https://api.github.com/repos/sakhnik/coursera_algo2", "Date": "2017-11-09T05:45:45Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.alpharogroup.wicket.base.util.ComponentFinder.getPage(org.apache.wicket.request.IRequestHandler)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (page != null) { return page; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/777/buggy-version/jaulp.wicket.base.src.main.java.de.alpharogroup.wicket.base.util.ComponentFinder.java", "BodyUseAPI": [], "Fixed commit": "9dc481f1dca23b6dd023f8c42a112fdbcff30dcc", "Url": "https://api.github.com/repos/astrapi69/jaulp-wicket", "Date": "2015-05-14T08:19:46Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.wicket.request.cycle.RequestCycle.get().getActiveRequestHandler()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (requestHandler instanceof org.apache.wicket.core.request.handler.RequestSettingRequestHandler) { org.apache.wicket.core.request.handler.RequestSettingRequestHandler requestSettingRequestHandler = ((org.apache.wicket.core.request.handler.RequestSettingRequestHandler) (requestHandler)); return de.alpharogroup.wicket.base.util.ComponentFinder.getPage(requestSettingRequestHandler.getDelegateHandler()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/777/buggy-version/jaulp.wicket.base.src.main.java.de.alpharogroup.wicket.base.util.ComponentFinder.java", "BodyUseAPI": [], "Fixed commit": "9dc481f1dca23b6dd023f8c42a112fdbcff30dcc", "Url": "https://api.github.com/repos/astrapi69/jaulp-wicket", "Date": "2015-05-14T08:19:46Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p2p) != null) { org.xcolab.view.pages.proposals.utils.context.ProposalsContextUtil.getClients(request).getProposalPhaseClient().invalidateProposal2PhaseCache(proposalWrapper.getProposalId(), p2p.getContestPhaseId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2270/buggy-version/view.src.main.java.org.xcolab.view.pages.proposals.utils.edit.ProposalUpdateHelper.java", "BodyUseAPI": [], "Fixed commit": "a5ce25c250da7d1e5cbee336c97016091e0169e2", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2017-05-25T00:01:15Z"},
{"Line": "=>781", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(renameManifestPackage)) { commands.add(\"--rename-manifest-package\"); commands.add(renameManifestPackage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/810/buggy-version/src.main.java.com.jayway.maven.plugins.android.phase09package.ApkMojo.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "4cd0f039a40b3704764601f1b09288977fbc4e67", "Url": "https://api.github.com/repos/fabriziogiudici/maven-android-plugin", "Date": "2011-05-05T20:55:47Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.pModel.partyplayer.get(p.username)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pp.health) != (p.getHealth())) { pp.health = p.getHealth(); isChanged = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3743/buggy-version/ca.a01.b02.partypeople.server.PlayerTickHandler.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.getHealth()"], "Fixed commit": "b461099381ddad8cea2b3087f20580a56620a3b2", "Url": "https://api.github.com/repos/amki/partypeople", "Date": "2013-03-05T03:27:33Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Abstract.DefCallExpression.getDefinition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((constructor.getThisClass()) != null) { type = Pi(\"\\\\this\", ClassCall(constructor.getThisClass()), type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3561/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.typechecking.TypeCheckingDefCall.java", "BodyUseAPI": ["com.jetbrains.jetpad.vclang.typechecking.TypeCheckingDefCall.ClassCall(constructor.getThisClass())", "com.jetbrains.jetpad.vclang.typechecking.Constructor.getThisClass()", "com.jetbrains.jetpad.vclang.typechecking.TypeCheckingDefCall.Pi(java.lang.String,ClassCall(constructor.getThisClass()),com.jetbrains.jetpad.vclang.typechecking.Expression)"], "Fixed commit": "1c5a6b1157f6af20745dab4d3799ab398c1716c6", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2015-11-10T14:02:31Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Abstract.DefCallExpression.getDefinition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((constructor.getPatterns()) != null) { parameters = expandConstructorParameters(constructor, myLocalContext); }else { parameters = constructor.getDataType().getParameters(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3561/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.typechecking.TypeCheckingDefCall.java", "BodyUseAPI": ["com.jetbrains.jetpad.vclang.typechecking.Constructor.getDataType()", "com.jetbrains.jetpad.vclang.typechecking.TypeCheckingDefCall.expandConstructorParameters(com.jetbrains.jetpad.vclang.typechecking.Constructor,java.util.List<com.jetbrains.jetpad.vclang.typechecking.Binding>)", "constructor.getDataType().getParameters()"], "Fixed commit": "1c5a6b1157f6af20745dab4d3799ab398c1716c6", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2015-11-10T14:02:31Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (colIdx < (_ncols)) ++(_nempty[colIdx]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/101/buggy-version/h2o-core.src.main.java.water.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "8511114a6ef6444938fb75e9ac9d5d7b7fe088d5", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-02-17T04:09:44Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.InputStream.read(byte[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (s < 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4669/buggy-version/retz-client.src.main.java.io.github.retz.web.Client.java", "BodyUseAPI": [], "Fixed commit": "1f131712c98d27296a277ee2ed2a962ee5ee277a", "Url": "https://api.github.com/repos/retz/retz", "Date": "2016-09-01T09:05:56Z"},
{"Line": "=>611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.eclipse.ocl.examples.eventmanager.framework.RegistrationManagerTableBased.isInDisjunctiveNormalForm(result))) { if (result instanceof org.eclipse.ocl.examples.eventmanager.filters.OrFilter) { java.util.Set<org.eclipse.ocl.examples.eventmanager.filters.EventFilter> oldO = result.getOperands(); org.eclipse.ocl.examples.eventmanager.framework.LogicalOperationFilterImpl orfilter = new org.eclipse.ocl.examples.eventmanager.filters.OrFilter(); for (org.eclipse.ocl.examples.eventmanager.filters.EventFilter f : oldO) { if (!(f instanceof org.eclipse.ocl.examples.eventmanager.filters.LogicalOperationFilter)) { orfilter.addOperand(EventManagerFactory.eINSTANCE.createAndFilterFor(f)); }else { orfilter.addOperand(f); } } result = orfilter; if (!(org.eclipse.ocl.examples.eventmanager.framework.RegistrationManagerTableBased.isInDisjunctiveNormalForm(result))) { throw new java.lang.IllegalStateException(\"Could not create disjunctiv normalform\"); } }else { throw new java.lang.IllegalStateException(\"Could not create disjunctiv normalform\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4355/buggy-version/examples.org.eclipse.ocl.examples.eventmanager.src.org.eclipse.ocl.examples.eventmanager.framework.RegistrationManagerTableBased.java", "BodyUseAPI": ["org.eclipse.ocl.examples.eventmanager.framework.LogicalOperationFilterImpl.getOperands()"], "Fixed commit": "742ba4bf4c06fd53907e9697bfa68dc36fb634fb", "Url": "https://api.github.com/repos/FURCAS-dev/FURCAS", "Date": "2011-03-25T14:36:06Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { tab.setIcon(R.drawable.list_by_time); }else { tab.setIcon(R.drawable.list_by_place); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4579/buggy-version/GDSConHand.src.com.winjune.wifiindoor.activity.EventViewerActivity.java", "BodyUseAPI": [], "Fixed commit": "e5ba6c51f9cb029297947557ce41f4fe9a24034a", "Url": "https://api.github.com/repos/winjunetech/GDSConHandAndroid", "Date": "2014-04-22T08:47:24Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gate) == null) { gate = bullet.createStarGate(); model.game.Wormhole.setSpecWall(this, gate.getColor()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1460/buggy-version/src.model.cells.SpecWall.java", "BodyUseAPI": [], "Fixed commit": "9f252d364fc97406e11d9f3d5ca2dc55849d1e3b", "Url": "https://api.github.com/repos/gabensdisciples/projlab", "Date": "2016-05-09T16:30:42Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMostOuterScope) { isAccessibleFromPublic = hasPublicModifier; }else { final com.puppycrawl.tools.checkstyle.api.DetailAST parentClassAst = ast.getParent().getParent(); if (((parentClassAst.getType()) == (com.puppycrawl.tools.checkstyle.api.TokenTypes.INTERFACE_DEF)) || hasPublicModifier) { isAccessibleFromPublic = com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck.isClassPublic(parentClassAst); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1295/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck.java", "BodyUseAPI": [], "Fixed commit": "bad81c81c2be3e67099c512e4e0aada291323566", "Url": "https://api.github.com/repos/Vladlis/checkstyle", "Date": "2015-09-05T14:43:57Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.leanix.pivotal.burndown.models.IterationHistory.getHeader()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((currentDataPoint.size()) < (header.size())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1210/buggy-version/src.main.java.net.leanix.pivotal.burndown.BusinessLogic.java", "BodyUseAPI": [], "Fixed commit": "1e298b560bc5678044d52a2de9c2d96eabac3db1", "Url": "https://api.github.com/repos/leanix/docker-pivotal-burndown", "Date": "2016-10-18T07:14:24Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.length) != 0) { clusters = ((int) ((data.length) / ((reservedRegion.getSectorsPerCluster()) * (reservedRegion.getBytesPerSector())))); if (((data.length) % ((reservedRegion.getSectorsPerCluster()) * (reservedRegion.getBytesPerSector()))) != 0) clusters += 1; }else { clusters = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1678/buggy-version/src.main.java.com.felhr.usbmassstorageforandroid.filesystems.fat32.FATHandler.java", "BodyUseAPI": [], "Fixed commit": "ec9294e54e5b9c5439c2dee7f48956f21b9eea40", "Url": "https://api.github.com/repos/felHR85/Pincho-Usb-Mass-Storage-for-Android", "Date": "2015-07-14T20:50:45Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resource.amount) <= 0) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2004/buggy-version/src.main.java.net.minecraftforge.fluids.capability.templates.FluidHandlerConcatenate.java", "BodyUseAPI": [], "Fixed commit": "5de1897d8fc1123609c7aaecc908d2d2a9053ba7", "Url": "https://api.github.com/repos/mezz/MinecraftForge", "Date": "2016-05-28T18:25:00Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resource == null) || ((resource.amount) <= 0)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2004/buggy-version/src.main.java.net.minecraftforge.fluids.capability.templates.FluidHandlerConcatenate.java", "BodyUseAPI": [], "Fixed commit": "5de1897d8fc1123609c7aaecc908d2d2a9053ba7", "Url": "https://api.github.com/repos/mezz/MinecraftForge", "Date": "2016-05-28T18:25:00Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<field.resource.Resources, java.lang.Integer>.entrySet()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (set.isEmpty()) { result += \"nothing \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/692/buggy-version/src.ki.TradeRequest.java", "BodyUseAPI": [], "Fixed commit": "6405694e38ddca48b5332df14f25e42c58c483aa", "Url": "https://api.github.com/repos/Titanium-Team/GameOfGraphs-NextGeneration", "Date": "2016-09-06T17:48:17Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (set.isEmpty()) { result += \"nothing \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/692/buggy-version/src.ki.TradeRequest.java", "BodyUseAPI": [], "Fixed commit": "6405694e38ddca48b5332df14f25e42c58c483aa", "Url": "https://api.github.com/repos/Titanium-Team/GameOfGraphs-NextGeneration", "Date": "2016-09-06T17:48:17Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mCurrentPage) == (-1)) && ((mViewPager) != null)) mCurrentPage = mViewPager.getCurrentItem();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1103/buggy-version/library.src.com.viewpagerindicator.TitlePageIndicator.java", "BodyUseAPI": [], "Fixed commit": "c2716ca1a38cad523ab2eb3ae0074b8071068f6b", "Url": "https://api.github.com/repos/hank-cp/Android-ViewPagerIndicator", "Date": "2012-01-27T18:20:50Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.ucsb.eucalyptus.msgs.MetricDimensionsValuesType.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (usageValue == null) { com.eucalyptus.cluster.callback.DescribeSensorCallback.LOG.debug(\"Event received with null 'value', skipping for reporting\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/148/buggy-version/clc.modules.cluster-manager.src.main.java.com.eucalyptus.cluster.callback.DescribeSensorCallback.java", "BodyUseAPI": [], "Fixed commit": "c3e8ece4c94bd0370b63cf9b6544f7f809508718", "Url": "https://api.github.com/repos/eucalyptus/eucalyptus", "Date": "2013-05-23T01:12:27Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.ucsb.eucalyptus.msgs.MetricDimensionsValuesType.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentValue == null) { com.eucalyptus.cluster.callback.DescribeSensorCallback.LOG.debug(\"Event received with null 'value', skipping for cloudwatch\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/148/buggy-version/clc.modules.cluster-manager.src.main.java.com.eucalyptus.cluster.callback.DescribeSensorCallback.java", "BodyUseAPI": [], "Fixed commit": "c3e8ece4c94bd0370b63cf9b6544f7f809508718", "Url": "https://api.github.com/repos/eucalyptus/eucalyptus", "Date": "2013-05-23T01:12:27Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.ObjectInputStream.readObject()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (loadedObject == null) { throw new java.lang.ClassNotFoundException(\"Class found but loaded object was null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3156/buggy-version/SimpleUI.src.tools.IO.java", "BodyUseAPI": [], "Fixed commit": "234de29adbfaf5560c70cc6a99740e7dfd821795", "Url": "https://api.github.com/repos/bitstars/SimpleUi", "Date": "2013-09-12T08:45:20Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((boss.getStateMachine().getCurrentState()) == (com.advergame.bubble.entities.Boss.WALKING_STATE)) { if (((boss.getVelocityX()) > 0) && ((boss.getX()) < (com.advergame.bubble.ai.controllers.Boss1Controller.X2))) { boss.setVelocity(com.advergame.bubble.ai.controllers.Boss1Controller.SPEED, 0); }else if (((boss.getVelocityX()) > 0) && ((boss.getX()) >= (com.advergame.bubble.ai.controllers.Boss1Controller.X2))) { boss.setVelocity((-(com.advergame.bubble.ai.controllers.Boss1Controller.SPEED)), 0); }else if (((boss.getVelocityX()) < 0) && ((boss.getX()) > (com.advergame.bubble.ai.controllers.Boss1Controller.X1))) { boss.setVelocity((-(com.advergame.bubble.ai.controllers.Boss1Controller.SPEED)), 0); }else { boss.setVelocity(com.advergame.bubble.ai.controllers.Boss1Controller.SPEED, 0); } }else { boss.setVelocity(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2688/buggy-version/core.src.com.advergame.bubble.ai.controllers.Boss1Controller.java", "BodyUseAPI": ["com.advergame.bubble.entities.Boss.getVelocityX()", "com.advergame.bubble.entities.Boss.setVelocity(float,int)", "com.advergame.bubble.entities.Boss.setVelocity(float,int)", "com.advergame.bubble.entities.Boss.setVelocity(float,int)", "com.advergame.bubble.entities.Boss.getVelocityX()", "com.advergame.bubble.entities.Boss.getX()", "com.advergame.bubble.entities.Boss.getVelocityX()", "com.advergame.bubble.entities.Boss.getX()", "com.advergame.bubble.entities.Boss.getX()", "com.advergame.bubble.entities.Boss.setVelocity(float,int)", "com.advergame.bubble.entities.Boss.setVelocity(int,int)"], "Fixed commit": "86b1a35820b25766f8408c7bcbdbaeab6fcb8e5d", "Url": "https://api.github.com/repos/doc97/LilyPop", "Date": "2017-10-22T09:41:31Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasExtension(\"GL_EXT_texture_compression_s3tc\")) { caps.add(Caps.TextureCompressionS3TC); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/741/buggy-version/jme3-lwjgl.src.main.java.com.jme3.renderer.lwjgl.LwjglRenderer.java", "BodyUseAPI": [], "Fixed commit": "15f35fc5c610e317013498a17afc913ca8be7129", "Url": "https://api.github.com/repos/phr00t/jmonkeyengine", "Date": "2014-11-06T04:13:15Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"exit\".equals(e.getActionCommand())) { java.lang.System.exit(0); }else { optionPane.setValue(btnString1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/77/buggy-version/StudyGroupFinder.src.gui.LogInDialog.java", "BodyUseAPI": [], "Fixed commit": "e11c63cf1ec36558d4108e82ff2742a47df7811c", "Url": "https://api.github.com/repos/mckgamer/CSE-110-StudyGroupFinder", "Date": "2011-10-25T08:17:04Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pathLength <= (Constants.MESSAGE_SETDIR_TEXTFILEEXT.length())) { filePathName = filePathName.concat((\"/\" + (main.Constants.setDirFileName))); }else { java.lang.String lastFourChar = filePathName.substring((pathLength - 4), pathLength); if (!(lastFourChar.equalsIgnoreCase(Constants.MESSAGE_SETDIR_TEXTFILEEXT))) { filePathName = filePathName.concat((\"/\" + (main.Constants.setDirFileName))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4772/buggy-version/W10-4J.Storage.Storage.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "171b7d7c73a57d619405afd5e34afeacc00c091c", "Url": "https://api.github.com/repos/cs2103jan2016-w10-4j/main", "Date": "2016-04-07T11:30:11Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.bulldozer.tourofall.service.UserService.getUserByUserId(int)", "net.bulldozer.tourofall.service.QnAService.getQuestionById(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((question.getUser().getId()) == (user.getId())) { answer.setUser(question.getUser()); }else { answer.setUser(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2380/buggy-version/tourofall.src.main.java.net.bulldozer.tourofall.controller.QnAController.java", "BodyUseAPI": ["net.bulldozer.tourofall.model.Answer.setUser(net.bulldozer.tourofall.model.User)", "net.bulldozer.tourofall.model.Answer.setUser(question.getUser())", "net.bulldozer.tourofall.model.Question.getUser()"], "Fixed commit": "fd42f39356d00cdce05e9ce675faf549fbc1c085", "Url": "https://api.github.com/repos/kangmingyu/tourofall", "Date": "2017-05-03T01:41:59Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.ednovo.gooru.client.gin.AppClientFactory.getCurrentPlaceToken().equalsIgnoreCase(PlaceTokens.EDIT_CLASSPAGE)) { getClasspage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2543/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.classpages.edit.EditClasspagePresenter.java", "BodyUseAPI": [], "Fixed commit": "e3ab7a15f82c850644ca56efb77d874d996c4520", "Url": "https://api.github.com/repos/chandrasekharv/Gooru-Web", "Date": "2014-06-05T08:26:47Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getProperties()) != null) && ((getProperties().size()) > 0)) { java.lang.String rows = ((java.lang.String) (getProperties().get(com.ss.speedtransfer.model.QueryDefinition.ROWS_TO_PREVIEW))); if ((rows == null) || ((rows.trim().length()) == 0)) return com.ss.speedtransfer.model.QueryDefinition.DEFAULT_ROWS_TO_PREVIEW; try { return java.lang.Integer.parseInt(rows); } catch (java.lang.NumberFormatException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/899/buggy-version/SpeedTransfer.src.com.ss.speedtransfer.model.QueryDefinition.java", "BodyUseAPI": [], "Fixed commit": "b9557328516532d33b79fdfb85c37c6846670df7", "Url": "https://api.github.com/repos/davva1966/SpeedTransfer", "Date": "2015-05-18T05:32:42Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(_filename)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4678/buggy-version/src.main.java.com.github.lordrex34.config.util.PropertiesParser.java", "BodyUseAPI": [], "Fixed commit": "765cca47fece26f591dd8286deb7d9b4cdc8ef03", "Url": "https://api.github.com/repos/lordrex34/commons-annotation-config", "Date": "2017-11-16T19:01:29Z"},
{"Line": "=>2244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((last - first) < 0) { last = first + (key.substring(first).indexOf(' ')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2449/buggy-version/components.formats-gpl.src.loci.formats.in.NativeND2Reader.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.indexOf(char)"], "Fixed commit": "69165af9906a2e2196684c8c281bd7282a701a6f", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-03-28T03:01:11Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numToDiv != null) { answer = numToDiv / answer; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2465/buggy-version/src.com.syouth.parser.ExpressionParser.java", "BodyUseAPI": [], "Fixed commit": "9a9ac34b60260164aeaf76d11668877d5dd3ab56", "Url": "https://api.github.com/repos/s0nicyouth/expression_parser", "Date": "2015-11-10T23:20:56Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(mDataList[position].getArtworkMrl())) holder.binding.setCover(org.videolan.vlc.gui.helpers.UiTools.getDefaultCover(mDataList[position]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2436/buggy-version/vlc-android.src.org.videolan.vlc.gui.SearchResultAdapter.java", "BodyUseAPI": ["org.videolan.vlc.databinding.SearchItemBinding.setCover(org.videolan.vlc.gui.helpers.UiTools.getDefaultCover(mDataList[position]))", "org.videolan.vlc.gui.helpers.UiTools.getDefaultCover(mDataList[position])"], "Fixed commit": "91c3c3165290806f81a64b3e05820e2ba2923ccf", "Url": "https://api.github.com/repos/GeoffreyMetais/vlc-android", "Date": "2017-01-31T15:26:55Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (permissionsGranted) { updateServer(); getImage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/219/buggy-version/DBMeter.app.src.main.java.com.example.makeze.dbmeter.mainMapActivity.java", "BodyUseAPI": [], "Fixed commit": "34d61e5d91009b3ea2a307fd19a16f08abc25545", "Url": "https://api.github.com/repos/hasan-li/Signal-Map", "Date": "2017-01-04T09:59:37Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getTransmitterNetwork(false)) != null) && ((getTransmitterNetwork(false).getSize()) > 0)) { double last = lastWrite; if (last != (getSaveShare())) { mekanism.common.util.MekanismUtils.saveChunk(tile()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1402/buggy-version/common.mekanism.common.multipart.PartUniversalCable.java", "BodyUseAPI": [], "Fixed commit": "27199c972123f5d60e6b1c17b77edb416f5aee3c", "Url": "https://api.github.com/repos/aidancbrady/Mekanism", "Date": "2014-02-14T22:45:51Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.deal.client.model.Deals.getInstance().getDeals()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((listItems.size()) < ((usedListItemIndex) + (deals.size()))) { for (int i = listItems.size(); i <= ((usedListItemIndex) + (deals.size())); i++) { listItems.add(new me.deal.client.view.main.ListItemWidget()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2432/buggy-version/src.me.deal.client.view.main.ListWidget.java", "BodyUseAPI": ["java.util.ArrayList<me.deal.shared.Deal>.size()", "java.util.ArrayList<me.deal.client.view.main.ListItemWidget>.size()", "java.util.ArrayList<me.deal.client.view.main.ListItemWidget>.add(me.deal.client.view.main.ListItemWidget)"], "Fixed commit": "144185f6eee47ea501e8f7fa942e9c2aa9210f16", "Url": "https://api.github.com/repos/WebMashup/DealMe", "Date": "2012-06-06T06:32:45Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cleanDispatcherLists.contains(dispatcherListName))) { codeBuilderForMethods.append(\"\\t\\tfinal Iterator<Dispatcher> \").append(dispatcherListIteratorName).append(\" = \").append(dispatcherListName).append(\".iterator();\\n\").append(\"\\t\\twhile (\").append(dispatcherListIteratorName).append(\".hasNext()) {\\n\").append(\"\\t\\t\\tif (\").append(dispatcherListIteratorName).append(\".next().mSubscriber == subscriber) {\\n\").append(\"\\t\\t\\t\\t\").append(dispatcherListIteratorName).append(\".remove();\\n\").append(\"\\t\\t\\t}\\n\").append(\"\\t\\t}\\n\"); cleanDispatcherLists.add(dispatcherListName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2262/buggy-version/FlashBusGenerator.src.main.java.com.msagi.flashbus.generator.FlashBusBuilder.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.util.HashSet<java.lang.String>.add(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "b5b204b0ec037dd8a2d2823c95488662b09f2455", "Url": "https://api.github.com/repos/msagi/FlashBus", "Date": "2015-11-24T18:18:06Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.xebia.confluence2wordpress.wp.WordpressClient.invoke(java.lang.String,java.util.Vector<java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((map.get(\"description\")) != null) { body.append(((java.lang.String) (map.get(\"description\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3738/buggy-version/src.main.java.fr.xebia.confluence2wordpress.wp.WordpressClient.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "61dbf5ce185d525c4ea571f8daea4e6839505429", "Url": "https://api.github.com/repos/adutra/confluence2wordpress", "Date": "2011-09-02T16:18:46Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.xebia.confluence2wordpress.wp.WordpressClient.invoke(java.lang.String,java.util.Vector<java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((map.get(\"mt_text_more\")) != null) { body.append(\"<!--more-->\"); body.append(((java.lang.String) (map.get(\"mt_text_more\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3738/buggy-version/src.main.java.fr.xebia.confluence2wordpress.wp.WordpressClient.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.StringBuilder.append(java.lang.Object)"], "Fixed commit": "61dbf5ce185d525c4ea571f8daea4e6839505429", "Url": "https://api.github.com/repos/adutra/confluence2wordpress", "Date": "2011-09-02T16:18:46Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getTranslationsLayout().getChildCount()) > 0) { this.getTranslationsLayout().removeAllViews(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/17/buggy-version/app.src.main.java.com.peevs.dictpick.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "44fb0d1c48cc21db1fc690ab04b50ecf0052e82f", "Url": "https://api.github.com/repos/zarrro/dictpick", "Date": "2015-11-11T21:34:05Z"},
{"Line": "=>1895", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((network.getBroadcastUri()) != null) nic.setBroadcastUri(network.getBroadcastUri()); else nic.setBroadcastUri(BroadcastDomainType.Vlan.toUri(ip.getVlanTag()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1755/buggy-version/server.src.com.cloud.network.IpAddressManagerImpl.java", "BodyUseAPI": ["com.cloud.vm.NicProfile.setBroadcastUri(network.getBroadcastUri())", "com.cloud.network.Network.getBroadcastUri()"], "Fixed commit": "958312de4cdf1c6e79f9b1f119b91568baf7ba90", "Url": "https://api.github.com/repos/apache/cloudstack", "Date": "2013-11-07T10:07:24Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.ServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (((username != null) && (username != \"\")) && (rb.containsKey(username))) { if (rb.getString(username).equals(password)) { session.setAttribute(\"login\", \"true\"); chain.doFilter(req, resp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1300/buggy-version/shashikanth.J2EE.WebApp6.src.com.val.Filters.AuthenticationFilter.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.util.ResourceBundle.getString(java.lang.String)"], "Fixed commit": "699545f29690c5aaabb221b14fc5833d4111fab1", "Url": "https://api.github.com/repos/sudhakarDharwada/JavaTraining2014", "Date": "2014-06-10T10:53:37Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["scouter.lang.value.Value.toJavaObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(value instanceof java.lang.Number)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3020/buggy-version/src.main.java.scouter.plugin.server.influxdb.InfluxdbPlugin.java", "BodyUseAPI": [], "Fixed commit": "754817c27c2050ecd1341558c6815bc1f118959a", "Url": "https://api.github.com/repos/scouter-project/scouter-plugin-server-influxdb", "Date": "2016-05-31T14:13:49Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Main.user.returnBook(Main.lib, id)) java.lang.System.out.println(((\"You returned \" + id) + \". Thank you.\")); else java.lang.System.out.println(\"Book not found.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1505/buggy-version/src.Main.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "7a68237370fa852deadd0bdcd785a628c0f3cc90", "Url": "https://api.github.com/repos/antonrufino/Young-Blood-Exer-3-Library-Information-System", "Date": "2016-04-02T13:46:58Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == (rule.getBody().size())) { sb.append(\".\"); }else { sb.delete(((sb.length()) - 1), sb.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/331/buggy-version/src.org.jgll.grammar.GrammarBuilder.java", "BodyUseAPI": [], "Fixed commit": "a404f58663e616411bad892c474a4c269563c24f", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2014-03-04T18:48:06Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (url.contains(\"~ANDROIDAPP~\")) { url = url.replace(\"?\", \"&\").replace(\"~ANDROIDAPP~\", \"?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4758/buggy-version/app.src.main.java.com.github.kolandroid.kol.android.controllers.web.WebController.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "0c3fa5332b8b13b421762ac14bee34469b74d7cf", "Url": "https://api.github.com/repos/Kasekopf/kolandroid", "Date": "2015-10-03T22:14:34Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hhua.android.producthunt.adapters.NotificationsArrayAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (notification.getType().equals(\"User\")) { intent = new android.content.Intent(getContext(), com.hhua.android.producthunt.activities.UserActivity.class); intent.putExtra(User.USER_ID_MESSAGE, notification.getReferenceId()); }else { intent = new android.content.Intent(getContext(), com.hhua.android.producthunt.activities.DetailsActivity.class); intent.putExtra(Post.POST_ID_MESSAGE, notification.getReferenceId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4161/buggy-version/app.src.main.java.com.hhua.android.producthunt.fragments.NotificationsFragment.java", "BodyUseAPI": ["android.content.Intent.putExtra(User.USER_ID_MESSAGE,notification.getReferenceId())", "android.content.Intent.putExtra(Post.POST_ID_MESSAGE,notification.getReferenceId())", "com.hhua.android.producthunt.models.Notification.getReferenceId()", "com.hhua.android.producthunt.models.Notification.getReferenceId()"], "Fixed commit": "70869f83ec0819c035d6512679921d6cf3d65e38", "Url": "https://api.github.com/repos/hhua/product-hunt-android", "Date": "2016-01-09T05:26:08Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (check == 1) { android.content.Intent intent = new android.content.Intent(this, ca.uwaterloo.ece.ece651projectclient.GameActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2988/buggy-version/client.app.src.main.java.ca.uwaterloo.ece.ece651projectclient.SelectGameActivity.java", "BodyUseAPI": [], "Fixed commit": "846ea00d94588dd5e9934571d2f66bf43a7f2b1c", "Url": "https://api.github.com/repos/yaronm/ece651_project", "Date": "2017-11-26T16:06:04Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editNoOfPlayers.getText().toString()", "ca.uwaterloo.ece.ece651projectclient.SelectGameActivity.findViewById(R.id.editOtherNames)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((android.text.TextUtils.isEmpty(value)) && (!(android.text.TextUtils.isEmpty(editOtherNames.getText().toString())))) { application.getBlackboard().othersNames().set(names); check = 1; }else if ((!(android.text.TextUtils.isEmpty(value))) && (android.text.TextUtils.isEmpty(editOtherNames.getText().toString()))) { application.getBlackboard().numberOfPlayers().set(java.lang.Integer.parseInt(value)); check = 1; }else if ((!(android.text.TextUtils.isEmpty(value))) && (!(android.text.TextUtils.isEmpty(editOtherNames.getText().toString())))) { android.widget.Toast toast = android.widget.Toast.makeText(getApplicationContext(), \"Enter either other users of number of players\", Toast.LENGTH_SHORT); toast.setGravity(Gravity.CENTER_VERTICAL, 0, 0); toast.show(); }else if ((android.text.TextUtils.isEmpty(value)) && (android.text.TextUtils.isEmpty(editOtherNames.getText().toString()))) { android.widget.Toast toast = android.widget.Toast.makeText(getApplicationContext(), \"Enter either other users of number of players\", Toast.LENGTH_SHORT); toast.setGravity(Gravity.CENTER_VERTICAL, 0, 0); toast.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2988/buggy-version/client.app.src.main.java.ca.uwaterloo.ece.ece651projectclient.SelectGameActivity.java", "BodyUseAPI": ["android.text.TextUtils.isEmpty(java.lang.String)", "android.text.TextUtils.isEmpty(java.lang.String)", "android.text.TextUtils.isEmpty(java.lang.String)", "android.text.TextUtils.isEmpty(editOtherNames.getText().toString())", "application.getBlackboard().numberOfPlayers().set(int)", "editOtherNames.getText().toString()", "android.text.TextUtils.isEmpty(editOtherNames.getText().toString())", "android.widget.EditText.getText()", "android.text.TextUtils.isEmpty(editOtherNames.getText().toString())", "editOtherNames.getText().toString()", "android.widget.EditText.getText()", "android.widget.EditText.getText()", "editOtherNames.getText().toString()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "846ea00d94588dd5e9934571d2f66bf43a7f2b1c", "Url": "https://api.github.com/repos/yaronm/ece651_project", "Date": "2017-11-26T16:06:04Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((showDivider) && (!(gradientDivider))) webLayoutMinimumHeight -= dividerHeight;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4831/buggy-version/library.src.main.java.com.thefinestartist.finestwebview.FinestWebViewActivity.java", "BodyUseAPI": [], "Fixed commit": "5a707df87c0ce61d4b4caba52e68005444db313b", "Url": "https://api.github.com/repos/TheFinestArtist/FinestWebView-Android", "Date": "2016-01-26T15:52:41Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (dbc != null) { if (dbc.isClosed()) { throw new java.lang.IllegalArgumentException(\"DB connection is closed.\"); } }else { throw new java.lang.NullPointerException(\"dbc is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/475/buggy-version/src.main.java.com.bolyartech.forge.server.db.DbUtils.java", "BodyUseAPI": ["java.sql.Connection.isClosed()"], "Fixed commit": "5d2951a1396c36f8bea541648a04a5b6a6da7f7d", "Url": "https://api.github.com/repos/ogrebgr/forge-server-http", "Date": "2016-12-22T15:54:38Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((layer2_802Algorithms.Anna.count) > 1) { AIFSN_AC01 = AnnaConfig.FAIR_AC1_AIFSN; CWmin_AC01 = AnnaConfig.FAIR_AC1_CWMIN; CWmax_AC01 = AnnaConfig.FAIR_AC1_CWMAX; AIFSN_AC02 = AnnaConfig.FAIR_AC2_AIFSN; CWmin_AC02 = AnnaConfig.FAIR_AC2_CWMIN; CWmax_AC02 = AnnaConfig.FAIR_AC1_CWMAX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/301/buggy-version/src.main.java.layer2_802Algorithms.Anna.java", "BodyUseAPI": [], "Fixed commit": "9880c23287218646ed12fee51207b99b1f926b13", "Url": "https://api.github.com/repos/trichner/Jemula802", "Date": "2014-12-11T19:52:08Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ajoutnom) tmp += str.charAt(i);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2759/buggy-version/src.main.java.fr.univaix.iut.pokebattle.smartcell.PokeAskOwnerCell.java", "BodyUseAPI": [], "Fixed commit": "b48804888a123a9dc92e9bade641f915eba7e6dc", "Url": "https://api.github.com/repos/Mouii/PokeBotDemo", "Date": "2014-03-31T08:05:39Z"},
{"Line": "=>840", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jbidwatcher.auction.server.ebay.ebayAuction.findSequence(T.s(\"ebayServer.sellerInfoPrequel\"),T.s(\"ebayServer.seller\"),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (sellerInfo != null) { sellerName = sellerInfo.get(2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2033/buggy-version/src.com.jbidwatcher.auction.server.ebay.ebayAuction.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)"], "Fixed commit": "8911017a6a1cc785a17331150428bffa141c32d2", "Url": "https://api.github.com/repos/cyberfox/jbidwatcher", "Date": "2011-06-09T16:04:32Z"},
{"Line": "=>844", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (sellerName == null) { sellerName = mDocument.getNextContentAfterRegex(T.s(\"ebayServer.seller\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2033/buggy-version/src.com.jbidwatcher.auction.server.ebay.ebayAuction.java", "BodyUseAPI": [], "Fixed commit": "8911017a6a1cc785a17331150428bffa141c32d2", "Url": "https://api.github.com/repos/cyberfox/jbidwatcher", "Date": "2011-06-09T16:04:32Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eionet.meta.VersionManager.loadElm(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isBlank(elm.getCheckedoutCopyID()))) { dataService.handleElementTypeChange(elmID, elm.getCheckedoutCopyID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1127/buggy-version/src.main.java.eionet.meta.VersionManager.java", "BodyUseAPI": ["eionet.meta.service.IDataService.handleElementTypeChange(java.lang.String,elm.getCheckedoutCopyID())", "eionet.meta.DataElement.getCheckedoutCopyID()"], "Fixed commit": "ebed684ee48118854694537d58e9d192b0ebf0b1", "Url": "https://api.github.com/repos/eea/eionet.datadict", "Date": "2016-08-05T11:41:10Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (user.containsNonNullValue(com.todoroo.astrid.adapter.UpdateAdapter.USER_PICTURE)) { java.lang.String pictureUrl = user.getPictureUrl(com.todoroo.astrid.adapter.UpdateAdapter.USER_PICTURE, RemoteModel.PICTURE_THUMB); pictureView.setUrl(pictureUrl); }else { pictureView.setUrl(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/703/buggy-version/astrid.src.com.todoroo.astrid.adapter.UpdateAdapter.java", "BodyUseAPI": ["com.todoroo.astrid.data.User.getPictureUrl(com.todoroo.andlib.data.Property.StringProperty,RemoteModel.PICTURE_THUMB)"], "Fixed commit": "3668fda47b14ecb98f95a248904e75360413e39b", "Url": "https://api.github.com/repos/sbosley/astrid", "Date": "2013-03-29T22:13:53Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((index.size()) > 0) { updateItem(java.lang.Integer.parseInt(((Loading.id_lootList.get(((int) (index.get(tag))))) + \"\")), ((java.lang.Integer.parseInt(((Loading.i_countList.get(((int) (index.get(tag))))) + \"\"))) - 1)); updatePlayerMoney(java.lang.Integer.parseInt(((Loading.i_priceList.get(((int) (index.get(tag))))) + \"\"))); itemFrameCounts[tag].setText((((Loading.i_countList.get(((int) (index.get(tag))))) + \"\") + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/597/buggy-version/app.src.main.java.com.example.alucardc.idlegame.Inventory.java", "BodyUseAPI": ["Loading.i_countList.get(java.lang.Object)", "Loading.i_priceList.get(java.lang.Object)", "java.util.ArrayList.get(int)", "java.util.ArrayList.get(int)", "com.example.alucardc.idlegame.Inventory.2.updateItem(int,((java.lang.Integer.parseInt(((Loading.i_countList.get(((int) (index.get(tag))))) + \"\"))) - 1))", "Loading.i_countList.get(java.lang.Object)", "java.util.ArrayList.get(int)", "java.lang.Integer.parseInt(((Loading.id_lootList.get(((int) (index.get(tag))))) + \"\"))", "itemFrameCounts[tag].setText((((Loading.i_countList.get(((int) (index.get(tag))))) + \"\") + \"\"))", "Loading.id_lootList.get(java.lang.Object)", "java.lang.Integer.parseInt(((Loading.i_countList.get(((int) (index.get(tag))))) + \"\"))", "java.lang.Integer.parseInt(((Loading.i_priceList.get(((int) (index.get(tag))))) + \"\"))", "java.util.ArrayList.get(int)", "com.example.alucardc.idlegame.Inventory.2.updatePlayerMoney(int)"], "Fixed commit": "cc51df9827a71f05f5867ef0aca8c9620e650ce9", "Url": "https://api.github.com/repos/Archmono/IdleGame", "Date": "2017-12-20T11:49:29Z"},
{"Line": "=>1419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchProgress.getVisibility()) != (android.view.View.VISIBLE)) { mLeftAction.setVisibility(View.VISIBLE); }else { mLeftAction.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3984/buggy-version/library.src.main.java.com.arlib.floatingsearchview.FloatingSearchView.java", "BodyUseAPI": [], "Fixed commit": "269ca722225d659dfc21b343a14fb7017afe247e", "Url": "https://api.github.com/repos/arimorty/floatingsearchview", "Date": "2016-07-21T02:55:56Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ah.listAnt.get(id).getState()) instanceof anthill.model.states.Egg) { ah.listAnt.get(id).state = new anthill.model.states.Maggot(); this.random = new java.util.Random(); java.lang.Double weight = 6 + ((random.nextDouble()) * 1.7); ah.listAnt.get(id).setWeight(weight); ah.setMaggot(1); ah.setEgg((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2913/buggy-version/src.anthill.observer.Observer.java", "BodyUseAPI": ["anthill.model.Anthill.setEgg(int)", "ah.listAnt.get(int)", "anthill.model.Anthill.setMaggot(int)", "ah.listAnt.get(id).setWeight(java.lang.Double)", "ah.listAnt.get(int)"], "Fixed commit": "e89d0e403a3c579e6928604e92f749753d0b5993", "Url": "https://api.github.com/repos/KillianOBI1/Monot_Vorotnikov", "Date": "2017-12-07T09:57:05Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ah.listAnt.get(id).getState()) instanceof anthill.model.states.Maggot) { ah.listAnt.get(id).state = new anthill.model.states.Chrysalis(); ah.setMaggot((-1)); ah.setChrysalis(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2913/buggy-version/src.anthill.observer.Observer.java", "BodyUseAPI": ["ah.listAnt.get(int)", "anthill.model.Anthill.setChrysalis(int)", "anthill.model.Anthill.setMaggot(int)"], "Fixed commit": "e89d0e403a3c579e6928604e92f749753d0b5993", "Url": "https://api.github.com/repos/KillianOBI1/Monot_Vorotnikov", "Date": "2017-12-07T09:57:05Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subtypeCMB_Main_viewer.getCombo().isDisposed()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2605/buggy-version/org.bbaw.bts.ui.corpus.src.org.bbaw.bts.ui.corpus.parts.PassportEditorPart.java", "BodyUseAPI": [], "Fixed commit": "965da32760f864aafedc716a8a793b5875176c8b", "Url": "https://api.github.com/repos/cplutte/bts", "Date": "2017-01-11T11:08:56Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.image) != null) { g.drawImage(image, 25, 5, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/930/buggy-version/ToDoManager.src.todomanager.ImagePanel.java", "BodyUseAPI": [], "Fixed commit": "d97d151d18b3f5a6004d5dd7a9b21cdd29481ed5", "Url": "https://api.github.com/repos/Leandia/GUI-programming", "Date": "2013-02-26T12:50:52Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nuxeo.elasticsearch.ElasticSearchComponent.getConfig()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((config.getIndexStorageType()) != null) { sBuilder.put(\"index.store.type\", config.getIndexStorageType()); if (config.getIndexStorageType().equals(\"memory\")) { sBuilder.put(\"gateway.type\", \"none\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4690/buggy-version/nuxeo-elastic-search-core.src.main.java.org.nuxeo.elasticsearch.ElasticSearchComponent.java", "BodyUseAPI": ["org.elasticsearch.common.settings.ImmutableSettings.Builder.put(java.lang.String,config.getIndexStorageType())", "org.nuxeo.elasticsearch.config.NuxeoElasticSearchConfig.getIndexStorageType()", "config.getIndexStorageType().equals(java.lang.String)", "org.nuxeo.elasticsearch.config.NuxeoElasticSearchConfig.getIndexStorageType()"], "Fixed commit": "eb3869e8301b409271fd3ad1d6361180144b71ce", "Url": "https://api.github.com/repos/nuxeo/nuxeo-elasticsearch", "Date": "2014-03-31T12:46:35Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.player) instanceof net.minecraft.entity.player.EntityPlayerMP) { cooking.addXp(((net.minecraft.entity.player.EntityPlayerMP) (event.player)), avi.mod.skrim.skills.cooking.SkillCooking.getXp(\"angel_cake\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4273/buggy-version/src.main.java.avi.mod.skrim.skills.cooking.SkillCooking.java", "BodyUseAPI": ["avi.mod.skrim.skills.cooking.SkillCooking.addXp(((net.minecraft.entity.player.EntityPlayerMP) (event.player)),int)"], "Fixed commit": "8e5506dd3274adc202d883f84d413b43688c3907", "Url": "https://api.github.com/repos/admirallightningbolt/skrim", "Date": "2017-02-20T06:11:49Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (values == null) { values = new java.util.ArrayList<experiments.Triple>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1983/buggy-version/AutoQuestionAnswer.src.experiments.GroundedAutoQuestion.java", "BodyUseAPI": [], "Fixed commit": "1ad277b9e296d5aa21e195163f3eb6b3f4b7076b", "Url": "https://api.github.com/repos/PriyankaKhante/grounded_language_learning", "Date": "2015-11-05T00:30:00Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bottomSheetDialog.isShowing()) { bottomSheetDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3283/buggy-version/collect_app.src.main.java.org.odk.collect.android.activities.AppListActivity.java", "BodyUseAPI": ["android.support.design.widget.BottomSheetDialog.dismiss()"], "Fixed commit": "51d3c1f1d6f2203ce9227bc24bf1fe5c26d76f05", "Url": "https://api.github.com/repos/shobhitagarwal1612/collect", "Date": "2017-07-25T13:35:02Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((writeCache) != null) try { ((com.orientechnologies.orient.core.storage.cache.local.OWOWCache) (writeCache)).unregisterMBean(); } catch (java.lang.Exception e) { com.orientechnologies.common.log.OLogManager.instance().error(this, \"MBean for write cache cannot be unregistered\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1411/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.paginated.OLocalPaginatedStorage.java", "BodyUseAPI": [], "Fixed commit": "922693d6b72cf44da17fb2328f884580d3df66bf", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-12-01T18:54:00Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (writeCache == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1411/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.cache.local.O2QCache.java", "BodyUseAPI": [], "Fixed commit": "922693d6b72cf44da17fb2328f884580d3df66bf", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-12-01T18:54:00Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (positionalParams != null) { setNamedParams(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4226/buggy-version/jsonrpc-ws-android.src.main.java.fi.vtt.nubomedia.jsonrpcwsandroid.JsonRpcRequest.java", "BodyUseAPI": [], "Fixed commit": "18dba00021a7ffe73b800c50c05d56dcb2b8ed04", "Url": "https://api.github.com/repos/nubomedia-vtt/jsonrpc-ws-android", "Date": "2015-12-18T07:57:04Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (namedParams != null) { setPositionalParams(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4226/buggy-version/jsonrpc-ws-android.src.main.java.fi.vtt.nubomedia.jsonrpcwsandroid.JsonRpcRequest.java", "BodyUseAPI": [], "Fixed commit": "18dba00021a7ffe73b800c50c05d56dcb2b8ed04", "Url": "https://api.github.com/repos/nubomedia-vtt/jsonrpc-ws-android", "Date": "2015-12-18T07:57:04Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.optaplanner.examples.coachshuttlegathering.domain.Shuttle.getDestination()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (destination != null) { if ((destination instanceof org.optaplanner.examples.coachshuttlegathering.domain.BusStop) && ((((org.optaplanner.examples.coachshuttlegathering.domain.BusStop) (destination)).getBus()) instanceof org.optaplanner.examples.coachshuttlegathering.domain.Shuttle)) { destinationTransportTimeToHub = null; }else { destinationTransportTimeToHub = (destination == null) ? null : destination.getTransportTimeToHub(); } }else { destinationTransportTimeToHub = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4134/buggy-version/optaplanner-examples.src.main.java.org.optaplanner.examples.coachshuttlegathering.domain.solver.TransportTimeToHubUpdatingVariableListener.java", "BodyUseAPI": ["org.optaplanner.examples.coachshuttlegathering.domain.StopOrHub.getTransportTimeToHub()"], "Fixed commit": "b0f1a999de4d2971daabb005c7acc7a5980871b4", "Url": "https://api.github.com/repos/kiegroup/optaplanner", "Date": "2015-04-06T19:31:45Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.optaplanner.examples.coachshuttlegathering.domain.BusStop.getNextStop()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (next == null) { next = bus.getDestination(); if ((next instanceof org.optaplanner.examples.coachshuttlegathering.domain.BusStop) && ((((org.optaplanner.examples.coachshuttlegathering.domain.BusStop) (next)).getBus()) instanceof org.optaplanner.examples.coachshuttlegathering.domain.Shuttle)) { transportTimeToHub = null; }else { transportTimeToHub = (next == null) ? null : next.getTransportTimeToHub(); } }else { transportTimeToHub = next.getTransportTimeToHub(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4134/buggy-version/optaplanner-examples.src.main.java.org.optaplanner.examples.coachshuttlegathering.domain.solver.TransportTimeToHubUpdatingVariableListener.java", "BodyUseAPI": ["org.optaplanner.examples.coachshuttlegathering.domain.StopOrHub.getTransportTimeToHub()"], "Fixed commit": "b0f1a999de4d2971daabb005c7acc7a5980871b4", "Url": "https://api.github.com/repos/kiegroup/optaplanner", "Date": "2015-04-06T19:31:45Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((iconUrl != null) && (!(iconUrl.isEmpty()))) { builder.addImage(iconUrl, shortName, url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1897/buggy-version/src.main.java.uk.co.mdjcox.sagetv.catchup.server.podcasts.CategoryPodcast.java", "BodyUseAPI": ["uk.co.mdjcox.utils.RssBuilder.addImage(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "d91bf6e253eca05cae82dedf197d301f296d26ee", "Url": "https://api.github.com/repos/michaeldjcox/sagetvcatchup", "Date": "2014-11-04T22:35:11Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gamification.api.manager.ActionProcessor.getUserAction(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userActionList.isEmpty()) { com.gamification.api.manager.ActionProcessor.logger.debug(\"No Previous action available but occurrence is one SO perforing transaction\"); requestStatus = performTransactions(challenge, userCode); }else { com.gamification.api.manager.ActionProcessor.logger.debug(\"Occurance is one and Already Transaction is available No need of Transaction\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2737/buggy-version/src.com.gamification.api.manager.ActionProcessor.java", "BodyUseAPI": [], "Fixed commit": "0de73b9fd9dd46f52cdfe3659ecac5dfb03dd756", "Url": "https://api.github.com/repos/sellasaveup/GamificationAPI", "Date": "2015-09-05T11:00:27Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exclude) { boundaryTypes.remove(\"gene\"); boundaryTypes.remove(\"pseudogene\"); }else { boundaryTypes.add(\"gene\"); boundaryTypes.add(\"pseudogene\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2168/buggy-version/src.main.java.org.genedb.crawl.controller.RegionsController.java", "BodyUseAPI": [], "Fixed commit": "a0ba4f045b82d4c4b399f411e068687c21e20118", "Url": "https://api.github.com/repos/sanger-pathogens/crawl2", "Date": "2011-09-12T16:02:36Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["realm.where(me.calebjones.pubgtrackerforandroid.data.models.User.class).equalTo(\"currentUser\", true).findFirst()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (currentUser != null) { currentUser.setCurrentUser(false); realm.copyToRealmOrUpdate(currentUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3289/buggy-version/app.src.main.java.me.calebjones.pubgtrackerforandroid.data.DataSaver.java", "BodyUseAPI": ["me.calebjones.pubgtrackerforandroid.data.models.User.setCurrentUser(boolean)", "io.realm.Realm.copyToRealmOrUpdate(me.calebjones.pubgtrackerforandroid.data.models.User)"], "Fixed commit": "49b24028886b0bcf5f28938283051a6a8c6fc738", "Url": "https://api.github.com/repos/ItsCalebJones/PUBGTrackerforAndroid", "Date": "2017-09-07T05:14:10Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((onibusMarker) != null) onibusMarker.setVisible(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2807/buggy-version/app.src.main.java.orbus.example.computeiro.orbus.PesquisarActivity.java", "BodyUseAPI": [], "Fixed commit": "b01ca1f5c11528b1292717c2465af2efbd7508b0", "Url": "https://api.github.com/repos/Rogielgit/Orbus", "Date": "2016-11-12T01:32:07Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tinkerpop.frames.FramedGraph<com.tinkerpop.blueprints.TransactionalGraph>.getVertex(long,java.lang.Class<T>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (obj == null) { throw new amberdb.NoSuchObjectException(objectId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3725/buggy-version/src.amberdb.AmberSession.java", "BodyUseAPI": [], "Fixed commit": "e440bdc326d7a2782f8d3177dea401af9627126a", "Url": "https://api.github.com/repos/nla/amberdb", "Date": "2014-08-07T03:44:48Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.jwm.j3dfw.production.Lights.log.isDebugEnabled()) { com.jwm.j3dfw.production.Lights.log.debug(\"setupLighting\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4537/buggy-version/src.main.java.com.jwm.j3dfw.production.Lights.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "ce907fc2085e1d7afea2c7a0b395b7822bf8f69b", "Url": "https://api.github.com/repos/jeffwmair/j3dfw", "Date": "2015-05-25T02:01:50Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(worldObj.isRemote)) { if ((name.toLowerCase().trim().endsWith(\"shia labeouf\")) && ((nextDoIt) == 0)) { nextDoIt = 40; worldObj.playSound(null, pos, BotaniaSoundEvents.doit, SoundCategory.BLOCKS, 1.0F, 1.0F); } for (int i = 0; i < (getSizeInventory()); i++) { net.minecraft.item.ItemStack stackAt = getItemHandler().getStackInSlot(i); if ((stackAt != null) && ((stackAt.getItem()) == (net.minecraft.item.Item.getItemFromBlock(ModBlocks.tinyPotato)))) { player.addChatComponentMessage(new net.minecraft.util.text.TextComponentString(\"Don't talk to me or my son ever again.\")); return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1754/buggy-version/src.main.java.vazkii.botania.common.block.tile.TileTinyPotato.java", "BodyUseAPI": [], "Fixed commit": "97d98bd01c6f1490e9642a5b431d55ad9986b1f3", "Url": "https://api.github.com/repos/Vazkii/Botania", "Date": "2016-10-22T21:55:46Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(worldObj.isRemote)) { isCrafting.value = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4614/buggy-version/src.main.java.com.brandon3055.draconicevolution.blocks.tileentity.TileFusionCraftingCore.java", "BodyUseAPI": [], "Fixed commit": "1cd002f804c6ad74c311af5e07b11236fc8c642c", "Url": "https://api.github.com/repos/brandon3055/Draconic-Evolution", "Date": "2017-04-06T03:46:51Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.gla.dcs.tp3.w.ui.Month.daysInMonth(displayDate.getMonth(),displayDate.getYear())", "javax.swing.JComboBox.getSelectedIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (oldDaySelected >= daysInMonth) { oldDaySelected = daysInMonth - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/505/buggy-version/src.uk.ac.gla.dcs.tp3.w.ui.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "ab964779604b9b6faaca8ee7aafb6adf3e338f72", "Url": "https://api.github.com/repos/TeamW/Sports-Elimination-TP3", "Date": "2013-02-19T08:05:15Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.compareTo(java.util.Calendar)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (compare == 0) compare = this.getName().compareTo(another.getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3842/buggy-version/app.src.main.java.edu.mel06002byui.expirationtracker.Grocery.java", "BodyUseAPI": [], "Fixed commit": "858e576b580f2e5deb4216043f65ba5c55052e88", "Url": "https://api.github.com/repos/jmmmel/ExpirationTracker", "Date": "2015-03-23T14:16:51Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((compareGrocery.getName().equals(this.getName())) && (compareGrocery.dateAsString().equals(this.dateAsString()))) isSame = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3842/buggy-version/app.src.main.java.edu.mel06002byui.expirationtracker.Grocery.java", "BodyUseAPI": [], "Fixed commit": "858e576b580f2e5deb4216043f65ba5c55052e88", "Url": "https://api.github.com/repos/jmmmel/ExpirationTracker", "Date": "2015-03-23T14:16:51Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (real_denominator == 1L) { c.fReal = org.matheclipse.core.expression.AbstractIntegerSym.valueOf(real_numerator); }else { c.fReal = org.matheclipse.core.expression.AbstractFractionSym.valueOf(real_numerator, real_denominator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/636/buggy-version/symja_android_library.matheclipse-core.src.main.java.org.matheclipse.core.expression.ComplexSym.java", "BodyUseAPI": ["org.matheclipse.core.expression.AbstractFractionSym.valueOf(long,long)"], "Fixed commit": "219ce7f99fefae3dc90ec2d3cf8b991a9582bcf9", "Url": "https://api.github.com/repos/axkr/symja_android_library", "Date": "2017-01-13T16:33:07Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (imag_denominator == 1L) { c.fImaginary = org.matheclipse.core.expression.AbstractIntegerSym.valueOf(imag_numerator); }else { c.fImaginary = org.matheclipse.core.expression.AbstractFractionSym.valueOf(imag_numerator, imag_denominator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/636/buggy-version/symja_android_library.matheclipse-core.src.main.java.org.matheclipse.core.expression.ComplexSym.java", "BodyUseAPI": ["org.matheclipse.core.expression.AbstractFractionSym.valueOf(long,long)"], "Fixed commit": "219ce7f99fefae3dc90ec2d3cf8b991a9582bcf9", "Url": "https://api.github.com/repos/axkr/symja_android_library", "Date": "2017-01-13T16:33:07Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(passField.getText().toString().isEmpty())) { uniqueId = (uniqueId + \":\") + (passField.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2485/buggy-version/src.com.example.nfcproject.MainActivity.java", "BodyUseAPI": ["passField.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "3333b1338144bcfc3ff773d52ea5dbbb5ad2c8dd", "Url": "https://api.github.com/repos/NetworkingProject/nfc-project", "Date": "2013-08-02T15:16:30Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.contains(\":\")) { ssid = result.split(\":\")[0]; if ((result.split(\":\").length) > 0) password = result.split(\":\")[1]; }else ssid = result;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2485/buggy-version/src.com.example.nfcproject.MainActivity.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "3333b1338144bcfc3ff773d52ea5dbbb5ad2c8dd", "Url": "https://api.github.com/repos/NetworkingProject/nfc-project", "Date": "2013-08-02T15:16:30Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.plugins.simpleclearcase.LoadRuleDateMap.getBuiltTime(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((entry.getValue()) == null) && (compareDate != null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4442/buggy-version/src.main.java.jenkins.plugins.simpleclearcase.LoadRuleDateMap.java", "BodyUseAPI": [], "Fixed commit": "ecc4335212e1ca22572854658976fc517dda7fcd", "Url": "https://api.github.com/repos/sata/simpleclearcase-plugin", "Date": "2012-03-13T13:29:31Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["securbank.models.User.getLoginAttempt()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (attempt == null) attempt = new securbank.models.LoginAttempt(user, 0, org.joda.time.LocalDateTime.now());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1368/buggy-version/src.main.java.securbank.services.AuthenticationServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "5db575087dd17e58a801975d800d393fb77bf681", "Url": "https://api.github.com/repos/ayush2k/securbank", "Date": "2016-10-24T22:46:38Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rs.getLong(\"MANUFACTURER_ID\")) != 0) { com.pj.magic.model.Manufacturer manufacturer = new com.pj.magic.model.Manufacturer(); manufacturer.setId(rs.getLong(\"MANUFACTURER_ID\")); manufacturer.setName(rs.getString(\"MANUFACTURER_NAME\")); product.setManufacturer(manufacturer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1371/buggy-version/src.main.java.com.pj.magic.dao.impl.SalesRequisitionItemDaoImpl.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)", "com.pj.magic.model.Manufacturer.setName(java.lang.String)", "com.pj.magic.model.Manufacturer.setId(long)", "java.sql.ResultSet.getLong(java.lang.String)"], "Fixed commit": "a0c00fbf6c8a429e54d99f6f5e40b4f25cd5c54b", "Url": "https://api.github.com/repos/pendelhaven3/magic", "Date": "2015-02-11T06:24:38Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getProduct().getManufacturer()) != null) { manufacturers.add(item.getProduct().getManufacturer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1371/buggy-version/src.main.java.com.pj.magic.model.SalesRequisition.java", "BodyUseAPI": ["java.util.Set<com.pj.magic.model.Manufacturer>.add(item.getProduct().getManufacturer())", "item.getProduct().getManufacturer()", "com.pj.magic.model.SalesRequisitionItem.getProduct()"], "Fixed commit": "a0c00fbf6c8a429e54d99f6f5e40b4f25cd5c54b", "Url": "https://api.github.com/repos/pendelhaven3/magic", "Date": "2015-02-11T06:24:38Z"},
{"Line": "=>803", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((extId.getUrl()) != null) extId.getUrl().setErrors(new java.util.ArrayList<java.lang.String>());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2258/buggy-version/orcid-web.src.main.java.org.orcid.frontend.web.controllers.FundingsController.java", "BodyUseAPI": ["org.orcid.pojo.ajaxForm.FundingExternalIdentifierForm.getUrl()", "extId.getUrl().setErrors(java.util.ArrayList<java.lang.String>)"], "Fixed commit": "95d1adc4a3d0e9616b34c14a345aa93d483d66a4", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2015-08-14T22:55:23Z"},
{"Line": "=>801", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((extId.getType()) != null) extId.getType().setErrors(new java.util.ArrayList<java.lang.String>());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2258/buggy-version/orcid-web.src.main.java.org.orcid.frontend.web.controllers.FundingsController.java", "BodyUseAPI": ["org.orcid.pojo.ajaxForm.FundingExternalIdentifierForm.getType()", "extId.getType().setErrors(java.util.ArrayList<java.lang.String>)"], "Fixed commit": "95d1adc4a3d0e9616b34c14a345aa93d483d66a4", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2015-08-14T22:55:23Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((invoicePO.getIsDefault()) == (FIConstants.IsDefault.True.getShortValue())) { hasDefault = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2945/buggy-version/src.main.java.com.changyi.fi.component.invoice.service.InvoiceServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "b6504ce06b333722551e12bb0309a5c723d5ec47", "Url": "https://api.github.com/repos/finley007/Suishoushu", "Date": "2017-11-13T09:54:52Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((invoiceList.size()) == 0) { newPo.setIsDefault(FIConstants.IsDefault.True.getShortValue()); }else if (hasDefault) { newPo.setIsDefault(FIConstants.IsDefault.False.getShortValue()); }else { newPo.setIsDefault(invoice.getIsDefault()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2945/buggy-version/src.main.java.com.changyi.fi.component.invoice.service.InvoiceServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "b6504ce06b333722551e12bb0309a5c723d5ec47", "Url": "https://api.github.com/repos/finley007/Suishoushu", "Date": "2017-11-13T09:54:52Z"},
{"Line": "=>1192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (viewType.equals(\"help\")) { guiController.showHelpView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1731/buggy-version/src.tareas.controller.TareasController.java", "BodyUseAPI": [], "Fixed commit": "ae4e2d7e5b2c1bb78c2817d8451f8b0eb3bcacc1", "Url": "https://api.github.com/repos/cs2103aug2014-W09-3j/main", "Date": "2014-10-28T07:54:48Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mNewUserCreated) { android.util.Log.d(com.iic.mokojin.activities.AddPlayerActivity.LOG_TAG, \"refresh data\"); mPeopleListStore.refreshData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3557/buggy-version/app.src.main.java.com.iic.mokojin.activities.AddPlayerActivity.java", "BodyUseAPI": [], "Fixed commit": "85ceb2c10881a24848eb3659adf83e357ad11f77", "Url": "https://api.github.com/repos/rot-13/mokojin", "Date": "2015-03-31T13:12:54Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((annotationSetSection.getAnnotations(annotationSetKey).size()) > 0) { writer.writeInt(annotationSetSection.getItemOffset(annotationSetKey)); }else { writer.writeInt(org.jf.dexlib2.writer.DexWriter.NO_OFFSET); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2689/buggy-version/dexlib2.src.main.java.org.jf.dexlib2.writer.DexWriter.java", "BodyUseAPI": ["org.jf.dexlib2.writer.AnnotationSetSection<AnnotationKey, AnnotationSetKey>.getItemOffset(AnnotationSetKey)", "org.jf.dexlib2.writer.DexDataWriter.writeInt(annotationSetSection.getItemOffset(annotationSetKey))"], "Fixed commit": "2973f7a4afe08520a15d89459419151d6e39ed9e", "Url": "https://api.github.com/repos/JesusFreke/smali", "Date": "2013-06-01T20:06:04Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(promise.isDone())) { promise.trySuccess(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4320/buggy-version/src.main.java.com.corundumstudio.socketio.handler.EncoderHandler.java", "BodyUseAPI": ["io.netty.channel.ChannelPromise.trySuccess()"], "Fixed commit": "5b181aa6cc2cad0948ce17782e6f5733abf1a58a", "Url": "https://api.github.com/repos/robymus/netty-socketio", "Date": "2017-08-09T08:15:52Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msg.what) == (com.linhh.ptrrv.android_pulltorefreshrecyclerview.MainActivity.MSG_CODE_LOADMORE)) { if ((mAdapter.getItemCount()) == ((com.linhh.ptrrv.android_pulltorefreshrecyclerview.MainActivity.DEFAULT_ITEM_SIZE) + (com.linhh.ptrrv.android_pulltorefreshrecyclerview.MainActivity.ITEM_SIZE_OFFSET))) { android.widget.Toast.makeText(this, R.string.nomoredata, Toast.LENGTH_SHORT).show(); mPtrrv.onFinishLoading(false, false); }else { mAdapter.setCount(((com.linhh.ptrrv.android_pulltorefreshrecyclerview.MainActivity.DEFAULT_ITEM_SIZE) + (com.linhh.ptrrv.android_pulltorefreshrecyclerview.MainActivity.ITEM_SIZE_OFFSET))); mAdapter.notifyDataSetChanged(); mPtrrv.onFinishLoading(true, false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/151/buggy-version/app.src.main.java.com.linhh.ptrrv.android_pulltorefreshrecyclerview.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a74aa0462629028d8c64559dcc01a5837904a5bd", "Url": "https://api.github.com/repos/HomHomLin/Android-PullToRefreshRecyclerView", "Date": "2015-11-13T03:36:44Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((talk2me.solomin.com.talk2me.MainActivity.firebase.getAuth()) == null) { android.util.Log.d(TAG, \"Tried to get location, but firebase is not authorized\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1518/buggy-version/app.src.main.java.talk2me.solomin.com.talk2me.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0b1c49159ee87ebce432159277b238c1264ead56", "Url": "https://api.github.com/repos/jpbrabec/Talk2Me", "Date": "2015-10-18T13:41:55Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (current != null) { current.getContentPane().getUnselectedStyle().setPaddingUnit(new byte[]{ com.codename1.ui.plaf.Style.UNIT_TYPE_PIXELS, com.codename1.ui.plaf.Style.UNIT_TYPE_PIXELS, com.codename1.ui.plaf.Style.UNIT_TYPE_PIXELS, com.codename1.ui.plaf.Style.UNIT_TYPE_PIXELS }); current.getContentPane().getUnselectedStyle().setPadding(Component.BOTTOM, com.codename1.impl.ios.IOSImplementation.nativeInstance.getVKBHeight()); current.revalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/5065/buggy-version/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java", "BodyUseAPI": ["com.codename1.ui.Form.getContentPane()", "com.codename1.ui.Form.getContentPane()", "current.getContentPane().getUnselectedStyle().setPaddingUnit(byte[])", "com.codename1.ui.Form.revalidate()", "current.getContentPane().getUnselectedStyle()", "current.getContentPane().getUnselectedStyle()", "current.getContentPane().getUnselectedStyle().setPadding(Component.BOTTOM,com.codename1.impl.ios.IOSImplementation.nativeInstance.getVKBHeight())"], "Fixed commit": "c548d24bdd0851e0ffc8d8635bd22506865a2116", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2015-11-13T21:57:58Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getBlock().getState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((com.niccholaspage.nICs.nICsBlockListener.plugin.getBlockFrontOfSign(sign).getData()) > 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/232/buggy-version/src.com.niccholaspage.nICs.nICsBlockListener.java", "BodyUseAPI": [], "Fixed commit": "f52784f92b713f5417d4610d1a6c5a21167b9244", "Url": "https://api.github.com/repos/niccholaspage/nICs", "Date": "2011-04-12T21:37:54Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((block == null) || ((net.minecraft.item.Item.getItemFromBlock(block.getBlock())) == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1167/buggy-version/src.main.java.cyano.basemetals.items.ItemMetalCrackHammer.java", "BodyUseAPI": [], "Fixed commit": "38e837f5331fe79a9846142a4e4ecd34fc81c17a", "Url": "https://api.github.com/repos/cyanobacterium/BaseMetals", "Date": "2015-02-07T14:48:57Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (questionnaire.engine.DeusExMachina.currentMoment.gameOver()) { questionnaire.CoreFX.newGame(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4876/buggy-version/src.questionnaire.engine.DeusExMachina.java", "BodyUseAPI": [], "Fixed commit": "9491434aef03ca3a77c007e2f5eafbff551969c8", "Url": "https://api.github.com/repos/aliasvchera/questionnaire", "Date": "2017-06-27T21:58:49Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((versions.size()) == 0) { versions.add(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3823/buggy-version/app.src.main.java.me.anon.lib.helper.MigrationHelper.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.add(int)"], "Fixed commit": "84c8e44bd0491d43eaf88c37820c490ffae7d75a", "Url": "https://api.github.com/repos/7LPdWcaW/GrowTracker-Android", "Date": "2016-08-23T17:33:34Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (json.getAsJsonObject().get(\"type\").getAsString().equals(\"Feed\")) { action = g.fromJson(jsonObj, me.anon.model.Water.class); }else if (json.getAsJsonObject().get(\"type\").getAsString().equals(\"Action\")) { action = g.fromJson(jsonObj, me.anon.model.EmptyAction.class); }else if (json.getAsJsonObject().get(\"type\").getAsString().equals(\"Note\")) { action = g.fromJson(jsonObj, me.anon.model.NoteAction.class); }else if (json.getAsJsonObject().get(\"type\").getAsString().equals(\"StageChange\")) { action = g.fromJson(jsonObj, me.anon.model.StageChange.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3823/buggy-version/app.src.main.java.me.anon.lib.helper.GsonHelper.java", "BodyUseAPI": ["json.getAsJsonObject().get(\"type\").getAsString()", "json.getAsJsonObject().get(java.lang.String)", "json.getAsJsonObject().get(\"type\").getAsString()", "json.getAsJsonObject().get(\"type\").getAsString()", "json.getAsJsonObject().get(java.lang.String)", "json.getAsJsonObject().get(java.lang.String)", "com.google.gson.JsonElement.getAsJsonObject()", "json.getAsJsonObject().get(\"type\").getAsString().equals(java.lang.String)", "json.getAsJsonObject().get(\"type\").getAsString().equals(java.lang.String)", "json.getAsJsonObject().get(\"type\").getAsString().equals(java.lang.String)", "com.google.gson.JsonElement.getAsJsonObject()", "com.google.gson.JsonElement.getAsJsonObject()"], "Fixed commit": "84c8e44bd0491d43eaf88c37820c490ffae7d75a", "Url": "https://api.github.com/repos/7LPdWcaW/GrowTracker-Android", "Date": "2016-08-23T17:33:34Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(mProductCursor.getColumnIndex(StoCountContract.ProductEntry.THUMBNAIL_IMAGE))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (imageUrl.isEmpty()) { com.bumptech.glide.Glide.with(this.mContext).load(R.mipmap.no_image).fitCenter().into(holder.dataImageView); }else { com.bumptech.glide.Glide.with(this.mContext).load(imageUrl).fitCenter().into(holder.dataImageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3941/buggy-version/StoCount.app.src.main.java.com.hengtan.nanodegreeapp.stocount.ProductListActivity.java", "BodyUseAPI": ["com.bumptech.glide.Glide.with(this.mContext).load(imageUrl).fitCenter()", "com.bumptech.glide.Glide.with(this.mContext).load(java.lang.String)", "com.bumptech.glide.Glide.with(this.mContext).load(imageUrl).fitCenter().into(android.widget.ImageView)"], "Fixed commit": "ebcaa0ec1962f1ce931bcbb0c93fcfe5327e61f1", "Url": "https://api.github.com/repos/theeheng/CapstoneProject", "Date": "2015-12-03T23:49:23Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((beans.size()) >= (com.crtb.tunnelmonitor.common.Constant.SERVER_ALLOW_TEST_LINE_MAX)) { showText(((\"\u6700\u591a\u53ea\u80fd\u6709\" + (com.crtb.tunnelmonitor.common.Constant.SERVER_ALLOW_TEST_LINE_MAX)) + \"\u6761\u6d4b\u7ebf\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3043/buggy-version/CRTBTunnelMonitor.src.com.crtb.tunnelmonitor.widget.CrtbExcavationLayout.java", "BodyUseAPI": ["com.crtb.tunnelmonitor.widget.CrtbExcavationLayout.showText(((\"\u6700\u591a\u53ea\u80fd\u6709\" + (com.crtb.tunnelmonitor.common.Constant.SERVER_ALLOW_TEST_LINE_MAX)) + \"\u6761\u6d4b\u7ebf\"))"], "Fixed commit": "817261b940bb628e579d8afc57e48a50716abd58", "Url": "https://api.github.com/repos/2014-2/001", "Date": "2014-09-29T07:38:37Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.getData().getTotal()) <= (com.ps.app.ui.activity.MessageActivity.DEFAULT_LIST_SIZE)) { recycler.setLoadMoreEnable(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2426/buggy-version/app.src.main.java.com.ps.app.ui.activity.MessageActivity.java", "BodyUseAPI": [], "Fixed commit": "1d34b77fd86839828f30011041f4236ec0e2c13b", "Url": "https://api.github.com/repos/PATHoqi05/App", "Date": "2016-05-17T14:50:53Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.getData().getTotal()) <= (com.ps.app.ui.fragment.AssetsSeizedFragment.DEFAULT_LIST_SIZE)) { recycler.setLoadMoreEnable(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2426/buggy-version/app.src.main.java.com.ps.app.ui.fragment.AssetsSeizedFragment.java", "BodyUseAPI": [], "Fixed commit": "1d34b77fd86839828f30011041f4236ec0e2c13b", "Url": "https://api.github.com/repos/PATHoqi05/App", "Date": "2016-05-17T14:50:53Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.getData().getTotal()) <= (com.ps.app.ui.fragment.WarrantyStaffFragment.DEFAULT_LIST_SIZE)) { recycler.setLoadMoreEnable(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2426/buggy-version/app.src.main.java.com.ps.app.ui.fragment.WarrantyStaffFragment.java", "BodyUseAPI": [], "Fixed commit": "1d34b77fd86839828f30011041f4236ec0e2c13b", "Url": "https://api.github.com/repos/PATHoqi05/App", "Date": "2016-05-17T14:50:53Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((params.getReferencePath()) != null) { subsite = org.opencms.main.OpenCms.getADEManager().lookupConfiguration(cms, cms.getRequestContext().addSiteRoot(params.getReferencePath())).getBasePath(); subsite = cms.getRequestContext().removeSiteRoot(subsite); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4247/buggy-version/src.org.opencms.search.galleries.CmsGallerySearchIndex.java", "BodyUseAPI": ["org.opencms.search.galleries.CmsGallerySearchParameters.getReferencePath()", "cms.getRequestContext().addSiteRoot(params.getReferencePath())", "org.opencms.main.OpenCms.getADEManager().lookupConfiguration(org.opencms.file.CmsObject,cms.getRequestContext().addSiteRoot(params.getReferencePath()))", "org.opencms.main.OpenCms.getADEManager().lookupConfiguration(cms, cms.getRequestContext().addSiteRoot(params.getReferencePath())).getBasePath()"], "Fixed commit": "8c42bc3a0abe5072247d3b3f76bec5f13b639ee5", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2011-08-29T12:51:40Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.getMode()) == (org.opencms.ade.galleries.shared.I_CmsGalleryProviderConstants.GalleryMode.view)) { result.setScope(CmsGallerySearchScope.siteShared); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4247/buggy-version/src.org.opencms.ade.galleries.CmsGalleryService.java", "BodyUseAPI": [], "Fixed commit": "8c42bc3a0abe5072247d3b3f76bec5f13b639ee5", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2011-08-29T12:51:40Z"},
{"Line": "=>594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jme3.scene.Spatial.getWorldBound()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (bound != null) { result = bound.getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3953/buggy-version/src.main.java.maud.model.cgm.SelectedSpatial.java", "BodyUseAPI": ["com.jme3.bounding.BoundingVolume.getType()"], "Fixed commit": "55e9a551d68a4334cd0e3024b1d00093e9bd3abc", "Url": "https://api.github.com/repos/stephengold/Maud", "Date": "2017-12-20T19:05:45Z"},
{"Line": "=>654", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageUploadFilePathCallbackOld) != null) imageUploadFilePathCallbackOld.onReceiveValue(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4189/buggy-version/app.src.main.java.com.github.dfa.diaspora_android.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2996c63981b97417f8bbbf67820e2c54b60e769a", "Url": "https://api.github.com/repos/gsantner/dandelion", "Date": "2016-09-20T18:41:25Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((unlockedLevel) < level) unlockedLevel = level;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3017/buggy-version/src.pro.oneredpixel.deflektorclassic.Deflektor.java", "BodyUseAPI": [], "Fixed commit": "51e0cc11758dbb56c53e91586e44bc2598d4bcbd", "Url": "https://api.github.com/repos/tsapree/DeflektorClassic", "Date": "2013-05-20T07:11:52Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sort) != null) { for (org.springframework.data.domain.Sort.Order order : sort) { final java.lang.String sortProperty = order.getProperty(); if (entityInformation.isGlobalIndexRangeKeyProperty(sortProperty)) { allowedSortProperties.add(sortProperty); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2756/buggy-version/src.main.java.org.socialsignin.spring.data.dynamodb.repository.query.AbstractDynamoDBQueryCriteria.java", "BodyUseAPI": [], "Fixed commit": "99092ed00f35b6312278bf23677e13705a6c0aa7", "Url": "https://api.github.com/repos/alex-arana/spring-data-dynamodb", "Date": "2016-11-20T11:42:41Z"},
{"Line": "=>1092", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lev.getNameExp()) != null) { s = lev.getNameExp().getExpression(sqlQuery); alias = sqlQuery.addSelect(s, null); if (!(sqlQuery.getDialect().allowsSelectNotInGroupBy())) { sqlQuery.addGroupBy(s, alias); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/373/buggy-version/src.main.mondrian.rolap.SqlMemberSource.java", "BodyUseAPI": ["mondrian.rolap.RolapLevel.getNameExp()", "lev.getNameExp().getExpression(mondrian.rolap.SqlQuery)"], "Fixed commit": "c6f00764cfdef671c4b711904f20a3fbcdc3161d", "Url": "https://api.github.com/repos/woodcarver/mondrian", "Date": "2016-01-21T10:06:47Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mUsedIn.contains(pattern))) { mUsedIn.add(pattern); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1207/buggy-version/StashCache.app.src.main.java.com.geekeclectic.android.stashcache.StashEmbellishment.java", "BodyUseAPI": ["java.util.ArrayList<com.geekeclectic.android.stashcache.StashPattern>.add(com.geekeclectic.android.stashcache.StashPattern)"], "Fixed commit": "2abc04cbf8c6b6ecb2ab3e705e98553a3c2bd47e", "Url": "https://api.github.com/repos/sylkai/stash_cache", "Date": "2015-04-17T19:59:56Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (move == (-1)) { move = 0; while (field.isColumnFull(move)) { move++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4318/buggy-version/src.bot.BotStarter.java", "BodyUseAPI": [], "Fixed commit": "693e605757fcac4cf138c72e08427d20e1a01f6d", "Url": "https://api.github.com/repos/kappines/FourInARow", "Date": "2016-11-01T19:02:52Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nuxeo.ecm.core.transientstore.api.TransientStoreService.getStore(java.lang.String)", "org.nuxeo.ecm.platform.rendition.lazy.AbstractLazyCachableRenditionProvider.buildRenditionKey(org.nuxeo.ecm.core.api.DocumentModel,org.nuxeo.ecm.platform.rendition.service.RenditionDefinition)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ts.isCompleted(key)) { ts.release(key); }else { org.nuxeo.ecm.core.work.api.Work work = getRenditionWork(key, doc, def); java.lang.String workId = work.getId(); org.nuxeo.ecm.core.work.api.WorkManager wm = org.nuxeo.runtime.api.Framework.getService(org.nuxeo.ecm.core.work.api.WorkManager.class); if ((wm.find(workId, null)) == null) { wm.schedule(work, Scheduling.IF_NOT_SCHEDULED); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2420/buggy-version/nuxeo-features.nuxeo-platform-rendition.nuxeo-platform-rendition-core.src.main.java.org.nuxeo.ecm.platform.rendition.lazy.AbstractLazyCachableRenditionProvider.java", "BodyUseAPI": ["org.nuxeo.ecm.platform.rendition.lazy.AbstractLazyCachableRenditionProvider.getRenditionWork(java.lang.String,org.nuxeo.ecm.core.api.DocumentModel,org.nuxeo.ecm.platform.rendition.service.RenditionDefinition)", "org.nuxeo.ecm.core.transientstore.api.TransientStore.release(java.lang.String)"], "Fixed commit": "511e0bb3854fe75eefafae97f953a45341731386", "Url": "https://api.github.com/repos/ron1/nuxeo", "Date": "2016-10-30T21:28:26Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (poly == 0) { throw new java.lang.IllegalArgumentException(\"0 polynomial\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1476/buggy-version/core.src.main.java.com.google.zxing.qrcode.encoder.MatrixUtil.java", "BodyUseAPI": [], "Fixed commit": "4050f5c2f3102be625e614fbe7bda6ef262fa799", "Url": "https://api.github.com/repos/Akylas/zxing", "Date": "2014-04-22T21:20:58Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x.length) == 0) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1476/buggy-version/core.src.main.java.com.google.zxing.maxicode.decoder.DecodedBitStreamParser.java", "BodyUseAPI": [], "Fixed commit": "4050f5c2f3102be625e614fbe7bda6ef262fa799", "Url": "https://api.github.com/repos/Akylas/zxing", "Date": "2014-04-22T21:20:58Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(barcodeFile.delete())) { android.util.Log.w(com.google.zxing.client.android.encode.EncodeActivity.TAG, (\"Could not delete \" + barcodeFile)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1476/buggy-version/android.src.com.google.zxing.client.android.encode.EncodeActivity.java", "BodyUseAPI": ["android.util.Log.w(java.lang.String,java.lang.String)"], "Fixed commit": "4050f5c2f3102be625e614fbe7bda6ef262fa799", "Url": "https://api.github.com/repos/Akylas/zxing", "Date": "2014-04-22T21:20:58Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((pos.y) >= 0) && ((pos.y) <= maxY)) { editSession.setBlockFast(pos, block); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3615/buggy-version/core.src.main.java.com.sk89q.worldedit.command.ClipboardCommands.java", "BodyUseAPI": ["com.sk89q.worldedit.EditSession.setBlockFast(com.sk89q.worldedit.Vector,com.sk89q.worldedit.blocks.BaseBlock)"], "Fixed commit": "0054e432ae08da29f2bc479f3d806abe6a55a295", "Url": "https://api.github.com/repos/boy0001/FastAsyncWorldedit", "Date": "2016-10-20T13:54:02Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sentenceLength - substringStart) > 0) { titleCheck = currentSentence.substring((sentenceLength - substringStart), sentenceLength); for (java.lang.String title : titleArray) { if (titleCheck.equals(title)) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/5046/buggy-version/TLDR.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "7fb889a7f42e3ba387f1c29d221ca848d976e4d7", "Url": "https://api.github.com/repos/rayluo00/TLDR-Summary", "Date": "2016-12-15T09:31:38Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sentenceLength == 0) { period_or_quote = '\\u0000'; }else { period_or_quote = currentSentence.charAt((sentenceLength - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/5046/buggy-version/TLDR.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "7fb889a7f42e3ba387f1c29d221ca848d976e4d7", "Url": "https://api.github.com/repos/rayluo00/TLDR-Summary", "Date": "2016-12-15T09:31:38Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currLine.matches(\".*\\\\w+\\\\.\\\\w+\\\\).*\")) { entry[getFieldIndex(\"Bearbeitungshinweis\")] = \"WARNING! Original: \" + currLine; warningsCount++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1859/buggy-version/SutsilvanDictConverter.src.TSVMapper.java", "BodyUseAPI": [], "Fixed commit": "09749371df42774a938c94e9188f97d071e5f7de", "Url": "https://api.github.com/repos/bkis/SutsilvanDictData", "Date": "2015-02-17T11:09:02Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((he.getStatusCode()) == (HttpStatus.CONFLICT)) { ite = new gov.nih.nci.ctrp.importtrials.exception.ImportTrialException(java.lang.String.format(\"Resource already found at URL : %s %s\", reSTParams.getUrl(), he.getResponseBodyAsString())); break; }else if ((he.getStatusCode()) == (HttpStatus.BAD_REQUEST)) { ite = new gov.nih.nci.ctrp.importtrials.exception.ImportTrialException(he.getResponseBodyAsString()); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3249/buggy-version/src.main.java.gov.nih.nci.ctrp.importtrials.service.RestClientServiceImpl.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,reSTParams.getUrl(),he.getResponseBodyAsString())", "org.springframework.web.client.HttpClientErrorException.getResponseBodyAsString()", "org.springframework.web.client.HttpClientErrorException.getResponseBodyAsString()", "org.springframework.web.client.HttpClientErrorException.getStatusCode()"], "Fixed commit": "c3562af3cdc70948c671176214c8da6716a50de6", "Url": "https://api.github.com/repos/BIAD/ctrp_import_ct_api", "Date": "2017-04-07T17:57:41Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vehicleData.height) != null) { vd.height = us.dot.its.jpo.ode.plugin.j2735.oss.OssHeight.genericHeight(vehicleData.height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1292/buggy-version/jpo-ode-plugins.src.main.java.us.dot.its.jpo.ode.plugin.j2735.oss.OssVehicleData.java", "BodyUseAPI": ["us.dot.its.jpo.ode.plugin.j2735.oss.OssHeight.genericHeight(vehicleData.height)"], "Fixed commit": "2421a85a526c7fc332cfd89d39e589a57da633de", "Url": "https://api.github.com/repos/mvs5465/jpo-ode", "Date": "2016-12-29T15:59:47Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vehicleData.mass) != null) { vd.mass = us.dot.its.jpo.ode.plugin.j2735.oss.OssMassOrWeight.genericMass(vehicleData.mass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1292/buggy-version/jpo-ode-plugins.src.main.java.us.dot.its.jpo.ode.plugin.j2735.oss.OssVehicleData.java", "BodyUseAPI": ["us.dot.its.jpo.ode.plugin.j2735.oss.OssMassOrWeight.genericMass(vehicleData.mass)"], "Fixed commit": "2421a85a526c7fc332cfd89d39e589a57da633de", "Url": "https://api.github.com/repos/mvs5465/jpo-ode", "Date": "2016-12-29T15:59:47Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vehicleData.trailerWeight) != null) { vd.trailerWeight = us.dot.its.jpo.ode.plugin.j2735.oss.OssMassOrWeight.genericWeight(vehicleData.trailerWeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1292/buggy-version/jpo-ode-plugins.src.main.java.us.dot.its.jpo.ode.plugin.j2735.oss.OssVehicleData.java", "BodyUseAPI": ["us.dot.its.jpo.ode.plugin.j2735.oss.OssMassOrWeight.genericWeight(vehicleData.trailerWeight)"], "Fixed commit": "2421a85a526c7fc332cfd89d39e589a57da633de", "Url": "https://api.github.com/repos/mvs5465/jpo-ode", "Date": "2016-12-29T15:59:47Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vehicleData.bumpers) != null) { vd.bumpers = us.dot.its.jpo.ode.plugin.j2735.oss.OssBumperHeights.genericBumperHeights(vehicleData.bumpers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1292/buggy-version/jpo-ode-plugins.src.main.java.us.dot.its.jpo.ode.plugin.j2735.oss.OssVehicleData.java", "BodyUseAPI": ["us.dot.its.jpo.ode.plugin.j2735.oss.OssBumperHeights.genericBumperHeights(vehicleData.bumpers)"], "Fixed commit": "2421a85a526c7fc332cfd89d39e589a57da633de", "Url": "https://api.github.com/repos/mvs5465/jpo-ode", "Date": "2016-12-29T15:59:47Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((realmResults) != null) { io.realm.RealmBasedRecyclerViewAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1745/buggy-version/library.src.main.java.io.realm.RealmBasedRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "ff63ee772959e7f46a807e9f4809b7b17fd87e80", "Url": "https://api.github.com/repos/m2f/realm-recyclerview", "Date": "2016-08-15T08:52:02Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInEditMode())) { mGPUImage = new jp.co.cyberagent.android.gpuimage.GPUImage(getContext()); mGPUImage.setGLSurfaceView(mGLSurfaceView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/189/buggy-version/library.src.jp.co.cyberagent.android.gpuimage.GPUImageView.java", "BodyUseAPI": [], "Fixed commit": "8a0b6a3de2af3f5f46ad05dcab2f5445af5739df", "Url": "https://api.github.com/repos/jonan/android-gpuimage", "Date": "2015-10-04T10:42:03Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (temp > 0) temp = temp * ((java.lang.Math.log10(temp)) / (java.lang.Math.log10(2)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4425/buggy-version/src.features.gui.explorer.PreprocessPanel.java", "BodyUseAPI": ["java.lang.Math.log10(double)"], "Fixed commit": "054aa4e8d62bf9c26555d23079c96fe273753e01", "Url": "https://api.github.com/repos/thevalparekh/personal", "Date": "2013-03-19T16:29:26Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((monakhv.samlib.log.Log.logger) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1372/buggy-version/samlib-core.src.main.java.monakhv.samlib.log.Log.java", "BodyUseAPI": [], "Fixed commit": "31d393352f1615ad6bc477e2d2c1041e1b092d2d", "Url": "https://api.github.com/repos/monakhv/samlib-Info", "Date": "2016-06-01T08:42:23Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editDeckName.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (deckNames.contains(deckName)) { android.widget.Toast.makeText(getApplicationContext(), ((\"A deck \\\"\" + deckName) + \"\\\" already exists!\"), Toast.LENGTH_SHORT).show(); }else { de.melvil.stacksrs.model.Deck newDeck = new de.melvil.stacksrs.model.Deck(deckName, \"\", \"\"); newDeck.addNewCard(new de.melvil.stacksrs.model.Card(\"default\", \"default\", 10)); newDeck.saveDeck(); reloadDeckList(); dialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1867/buggy-version/app.src.main.java.de.melvil.stacksrs.view.DeckListActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(getApplicationContext(), ((\"A deck \\\"\" + deckName) + \"\\\" already exists!\"), Toast.LENGTH_SHORT).show()", "android.widget.Toast.makeText(getApplicationContext(),java.lang.String,Toast.LENGTH_SHORT)"], "Fixed commit": "8d27badf84f8419e9567c26b4d864660e0631cc5", "Url": "https://api.github.com/repos/MelvilQ/stacksrs", "Date": "2017-06-03T15:37:02Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.settings.inputmethod.InputMethodAndLanguageSettings.findPreference(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (pointerSettingsCategory != null) { pointerSettingsCategory.removePreference(mStylusGestures); pointerSettingsCategory.removePreference(mStylusIconEnabled); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3124/buggy-version/src.com.android.settings.inputmethod.InputMethodAndLanguageSettings.java", "BodyUseAPI": ["android.preference.PreferenceCategory.removePreference(android.preference.CheckBoxPreference)", "android.preference.PreferenceCategory.removePreference(android.preference.PreferenceScreen)"], "Fixed commit": "ee5c01bb1633f409f51be3494891e4cfe901f55f", "Url": "https://api.github.com/repos/Dirty-Unicorns-Galaxysmtd/packages_apps_Settings", "Date": "2014-02-23T20:44:26Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActivePointerId) == (com.yalantis.pulltomakesoup.PullToRefreshView.INVALID_POINTER)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3164/buggy-version/library.src.main.java.com.yalantis.pulltomakesoup.PullToRefreshView.java", "BodyUseAPI": [], "Fixed commit": "77a2ddc9a173e430038be16bd92bca6d915173f2", "Url": "https://api.github.com/repos/Yalantis/pull-to-make-soup", "Date": "2017-03-14T12:13:04Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yalantis.pulltomakesoup.PullToRefreshView.getMotionEventY(android.view.MotionEvent,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (y == (-1)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3164/buggy-version/library.src.main.java.com.yalantis.pulltomakesoup.PullToRefreshView.java", "BodyUseAPI": [], "Fixed commit": "77a2ddc9a173e430038be16bd92bca6d915173f2", "Url": "https://api.github.com/repos/Yalantis/pull-to-make-soup", "Date": "2017-03-14T12:13:04Z"},
{"Line": "=>576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mhag.getGame()) == 3) file.append(\"trig\"); else if ((mhag.getGame()) == 4) file.append(\"4\"); else if ((mhag.getGame()) == 5) file.append(\"gen\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4699/buggy-version/mhag.src.main.java.org.mhag.model.Set.java", "BodyUseAPI": ["org.mhag.model.Mhag.getGame()", "org.mhag.model.Mhag.getGame()"], "Fixed commit": "9b6c5ce31262a61fdfd1c3422c09bfdfcdf0b975", "Url": "https://api.github.com/repos/bronwen-cassidy/mhag-info", "Date": "2016-09-09T17:15:43Z"},
{"Line": "=>933", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((org.jboss.pressgang.ccms.contentspec.InitialContent) (level.getFirstSpecNode())).getNumberOfSpecTopics()) <= 1) { log.error(java.lang.String.format(ProcessorConstants.ERROR_SECTION_NO_TOPICS_OR_INITIAL_CONTENT_MSG, level.getLineNumber(), level.getText())); valid = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4947/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.processor.ContentSpecValidator.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.contentspec.utils.logging.ErrorLogger.error(java.lang.String)", "org.jboss.pressgang.ccms.contentspec.Level.getText()", "org.jboss.pressgang.ccms.contentspec.Level.getLineNumber()", "java.lang.String.format(ProcessorConstants.ERROR_SECTION_NO_TOPICS_OR_INITIAL_CONTENT_MSG,level.getLineNumber(),level.getText())"], "Fixed commit": "326e61a27fef383e66ff3a177a0664ea777a7b90", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpecProcessor", "Date": "2014-02-11T23:46:10Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.body().getTracksSearch().getItems().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.getAlbum().getImages()) != null) albumUrl = item.getAlbum().getImages().get(0).getUrl();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3383/buggy-version/app.src.main.java.com.example.brittanyhsu.bhspotify.SearchableActivity.java", "BodyUseAPI": ["item.getAlbum().getImages().get(0).getUrl()", "com.example.brittanyhsu.bhspotify.Models.ItemSearch.getAlbum()", "item.getAlbum().getImages().get(int)", "item.getAlbum().getImages()"], "Fixed commit": "fdb12915024c5b53eae2d822d9e53393030fb93b", "Url": "https://api.github.com/repos/hsubrittany/ListenToMe", "Date": "2017-08-08T01:06:58Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["maze.logic.Dragon.getY()", "maze.logic.Dragon.getX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((dragon.getX()) == lastPositionX) && ((dragon.getY()) == lastPositionY)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4542/buggy-version/logic.Maze.java", "BodyUseAPI": [], "Fixed commit": "011f270ced0dc875cb2070335df037e7bc515b38", "Url": "https://api.github.com/repos/renatoabreu11/LPOO-Maze", "Date": "2016-02-25T13:13:34Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.android.calendar.DeleteEventsActivity.DEBUG) { android.util.Log.i(com.android.calendar.DeleteEventsActivity.TAG, (((((\"position , firstVisiblePosition, actualPosition : \" + position) + \" \") + firstVisiblePosition) + \" \") + actualPosition)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1431/buggy-version/src.com.android.calendar.DeleteEventsActivity.java", "BodyUseAPI": [], "Fixed commit": "476b55527a1d92fe689dd5debd85ac0a00fb3a1b", "Url": "https://api.github.com/repos/CyanogenMod/android_packages_apps_Calendar", "Date": "2015-01-24T11:28:52Z"},
{"Line": "=>923", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (obj instanceof java.lang.Boolean) { return java.lang.String.valueOf(obj); }else { org.collectionspace.services.common.document.DocumentUtils.logger.warn(((((\"Could not convert value of property \" + propertyPath) + \" in document \") + (docModel.getPathAsString())) + \" to a String.\")); org.collectionspace.services.common.document.DocumentUtils.logger.warn(\"This may be due to a new, as-yet-unhandled datatype returned from the repository\"); return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/5100/buggy-version/services.common.src.main.java.org.collectionspace.services.common.document.DocumentUtils.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.Object)"], "Fixed commit": "04b6f0e01c0fbe2c75a2800e3b5dc6b5e06fe531", "Url": "https://api.github.com/repos/cspace-deployment/services", "Date": "2013-07-30T00:46:59Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((numbers.size()) == 0) { numbers.add(number); }else { int i = 0; for (int num : numbers) { if (num > number) { break; } i++; } numbers.add(i, number); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1348/buggy-version/src.main.java.com.example.exercises.numbersort.NumberSort.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.add(int)", "java.util.List<java.lang.Integer>.add(int,int)"], "Fixed commit": "d0f77a42a7f18e998a3da5c9ac31499a117598bc", "Url": "https://api.github.com/repos/pjheenan/exercises", "Date": "2015-01-28T10:37:44Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cubeDesc.getDictionaryBuilderClass(col)) != null) { isReducerLocalBuildDict = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/124/buggy-version/engine-mr.src.main.java.org.apache.kylin.engine.mr.steps.FactDistinctColumnsReducer.java", "BodyUseAPI": [], "Fixed commit": "cf1aa6ce0ea42c8ebc684c68b2d6958382af0f0f", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2016-12-26T12:44:12Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dynamic_light_preference.equals(\"dynamic-light-theme-enabled\")) { sensorManager.registerListener(this, lightSensor, SensorManager.SENSOR_DELAY_NORMAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4406/buggy-version/app.src.main.java.com.example.cwood.qualtraxhuburn.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8e844655fcf82947888a043c58e918721dc18d8f", "Url": "https://api.github.com/repos/Qualtrax/QualtraxHuburnApp", "Date": "2015-07-07T13:06:59Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.Job<?, ?>.getLastBuild()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (lastBuild != null) { buildList.add(lastBuild); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3215/buggy-version/src.main.java.hudson.plugins.claim.AbstractClaimBuildAction.java", "BodyUseAPI": ["java.util.List<hudson.model.AbstractBuild>.add(hudson.model.AbstractBuild<?, ?>)"], "Fixed commit": "7745eac4881c1187ad8d4b810b58371c4f7d952e", "Url": "https://api.github.com/repos/asgoyal/claim-plugin", "Date": "2013-01-22T22:19:13Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (export != null) { compiler.DynamicVar dynamic = lookup(export, dynamics); if (dynamic == null) throw new java.lang.Error((\"cannot find dyanamic \" + export)); else newExports[dynamic.getIndex()] = export; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2536/buggy-version/src.ast.actors.Act.java", "BodyUseAPI": ["ast.actors.Act.lookup(java.lang.String,list.List<compiler.DynamicVar>)"], "Fixed commit": "fe164db58188a280f58e924e296e595ddf6b8d87", "Url": "https://api.github.com/repos/TonyClark/ESL", "Date": "2016-02-25T08:53:13Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(node.getDeclaringClass().equals(classNode))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4058/buggy-version/src.main.org.codehaus.groovy.classgen.Verifier.java", "BodyUseAPI": [], "Fixed commit": "f9c23312802c15a056d58215ee461b61ac087ad7", "Url": "https://api.github.com/repos/groovy/groovy-core", "Date": "2013-01-18T12:12:38Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["redis.clients.jedis.Jedis.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((key != null) && (!(\"\".equals(key)))) { if (key.equals(lockCacheKey)) { jedis.del(type); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1588/buggy-version/src.com.lanhun.distributedLock.DistributeLock.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "93f0d01c00116c84a00046e50cb512dacd57013d", "Url": "https://api.github.com/repos/shanjunmei/DistributedLock", "Date": "2016-07-04T08:33:39Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mListOptions.get(position)) == (ca.josephroque.bowlingcompanion.Constants.NAV_OPTION_GAME_DETAILS)) { viewHolder.mImageViewIcon.setVisibility(View.VISIBLE); viewHolder.mImageViewIcon.setImageResource(R.drawable.ic_action_pin); }else if ((mListOptions.get(position)) == (ca.josephroque.bowlingcompanion.Constants.NAV_OPTION_STATS)) { viewHolder.mImageViewIcon.setVisibility(View.VISIBLE); viewHolder.mImageViewIcon.setImageResource(R.drawable.ic_action_stats); }else { viewHolder.mImageViewIcon.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2765/buggy-version/BC-Free.app.src.main.java.ca.josephroque.bowlingcompanion.adapter.DrawerAdapter.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)"], "Fixed commit": "22a06d467c2119adb447efb2d69f7deccdf978f5", "Url": "https://api.github.com/repos/josephroqueca/bowling-companion", "Date": "2015-03-30T05:05:07Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((property.getValue().length()) > 0) { findNameAndTitle = true; label += property.getValue(); return label; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1485/buggy-version/plugins.org.xwiki.eclipse.ui.src.main.java.org.xwiki.eclipse.ui.adapters.XWikiEclipseObjectSummaryAdapter.java", "BodyUseAPI": ["org.xwiki.eclipse.model.XWikiEclipseObjectProperty.getValue()"], "Fixed commit": "b3d021347213ed1ca29d2dfc9624a9e0867f5c44", "Url": "https://api.github.com/repos/junhan/xwiki-eclipse", "Date": "2011-07-28T17:12:07Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index == (-1)) { index = strLower.indexOf(userName); usesNick = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2826/buggy-version/src.main.java.com.LilG.Bridge.java", "BodyUseAPI": [], "Fixed commit": "8fc663a9ae192322208dad8100d389a3df3e24c4", "Url": "https://api.github.com/repos/lilggamegenius/dIRCord", "Date": "2017-06-30T07:21:36Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((table != null) && (!(table.isEmpty()))) { java.lang.String[] row = table.split(\"],\\\\[\"); for (int i = 0; i < (row.length); i++) { java.lang.String[] col = row[i].split(\",(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)\", (-1)); for (int j = 0; j < (col.length); j++) { if ((col[j]) != null) { col[j] = col[j].replaceAll(\"^\\\"|\\\"$\", \"\"); } res.append(((col[j]) + \" \\t\")); } res.append(\" \\n\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/641/buggy-version/kylin.src.main.java.org.apache.zeppelin.kylin.KylinInterpreter.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "cadaa2b9877da39d96db6b2e06f4169c9f604caf", "Url": "https://api.github.com/repos/jinxliu/zeppelin", "Date": "2017-10-27T07:03:26Z"},
{"Line": "=>549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultCount != null) && ((responseList.size()) == resultCount)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1322/buggy-version/src.main.java.com.pratilipi.data.DataAccessorGaeImpl.java", "BodyUseAPI": [], "Fixed commit": "80f67d0bf6ff0e4b90d942152e4b57ff1302eab6", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2017-01-31T12:01:14Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (consumeUpdates) { consumerOperationStreamExecutorService.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3784/buggy-version/src.main.java.com.ldbc.driver.runtime.WorkloadRunner.java", "BodyUseAPI": [], "Fixed commit": "3891560981f5f901295f16bc91f22984a5602fb5", "Url": "https://api.github.com/repos/anilpacaci/ldbc_driver", "Date": "2017-03-22T02:50:08Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.getType().equals(Constants.RetroStrings.APPLICATION_TYPE))) { if ((this.getColor()) == oldColor) { this.setColor(newColor); int offset = ((java.lang.Integer) (this.getGameElement().getTileSet().getProperties().get(\"firstgid\"))) - 1; this.getGameElement().setTileId((newColor + offset)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4525/buggy-version/core.src.com.retroMachines.util.lambda.Vertex.java", "BodyUseAPI": [], "Fixed commit": "10daad673f35bbb86ee6b7aa49347d62a0a88878", "Url": "https://api.github.com/repos/Die-anonymen-PSEler/game", "Date": "2015-03-03T11:20:35Z"},
{"Line": "=>1190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sampleBean.getDomain().getId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (domainSampleId == null) { if (sampleId == 0) return sampleBean; else { gov.nih.nci.cananolab.restful.sample.SampleBO.logger.error(\"Sample in session doesn't seem to be valid\"); return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/346/buggy-version/software.cananolab-webapp.src.gov.nih.nci.cananolab.restful.sample.SampleBO.java", "BodyUseAPI": [], "Fixed commit": "f8aa88ee82395a6514c26415c05f0bc2e58b4c48", "Url": "https://api.github.com/repos/CBIIT/cananolab", "Date": "2014-08-27T17:29:55Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getActiveInstance().getDescriptor(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (descriptor != null) { return ((hudson.plugins.emailext.plugins.trigger.FailureTrigger) (descriptor.createDefault())); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/172/buggy-version/src.main.java.hudson.plugins.emailext.plugins.trigger.FailureTrigger.java", "BodyUseAPI": ["hudson.plugins.emailext.plugins.trigger.FailureTrigger.DescriptorImpl.createDefault()"], "Fixed commit": "2e38d1d2f6d197e7b4bfe4e33d06846d20427850", "Url": "https://api.github.com/repos/ialbors/email-ext-plugin", "Date": "2017-05-04T18:18:45Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.alexw.departments.MapsFragment.userFocus) == null) { mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(Constants.PATHOPHYSILOGY_COORDINATES, 17)); }else mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(com.example.alexw.departments.MapsFragment.userFocus, 17));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/686/buggy-version/app.src.main.java.com.example.alexw.departments.MapsFragment.java", "BodyUseAPI": [], "Fixed commit": "5e39122d32b53a4fe399435890f06e7cf8dde762", "Url": "https://api.github.com/repos/AlexWalker28/Departments", "Date": "2017-08-25T14:38:10Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ftEntry.inode.unregisterIndexBlock()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (indexBlockData != null) { for (int i = 0; i < (indexBlockData.length); i += 2) { int block = SysLib.bytes2short(indexBlockData, i); if (block >= 0) { if (!(superBlock.returnBlock(block))) { SysLib.cerr((\"ERROR: failed to return block: \" + block)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4941/buggy-version/src.FileSystem.java", "BodyUseAPI": ["SysLib.bytes2short(byte[],int)"], "Fixed commit": "5fc7a8a7d1b06e0bce6773d5d6a81de074d0c0a5", "Url": "https://api.github.com/repos/castle8080/CSS430-FinalProject", "Date": "2017-05-28T20:17:32Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!foundFlag) { getPairedDeviceListener.getError(WearableDeviceError.CAN_NOT_GET_PAIRED_DEVICE, mContext.getString(R.string.can_not_get_paired_device)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1607/buggy-version/sdk.src.main.java.com.eleks.securedatastorage.sdk.androidwatch.AndroidWatchSecureData.java", "BodyUseAPI": [], "Fixed commit": "2b62afcc7a6a3aa5665a7db1fcf7bff37ee54607", "Url": "https://api.github.com/repos/eleks/rnd-android-wear-authentication", "Date": "2015-07-03T13:29:55Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((layer.getName()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/1817/buggy-version/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.internal.ui.GeometryWidget.java", "BodyUseAPI": [], "Fixed commit": "7a0117fbe2e10d31b6ec5fdbe73f2f93da67b531", "Url": "https://api.github.com/repos/mapplus/spatial_statistics_for_geotools_udig", "Date": "2015-12-07T04:34:45Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTwoPane)) { android.support.v4.widget.DrawerLayout drawer = ((android.support.v4.widget.DrawerLayout) (findViewById(R.id.drawer_layout))); if (drawer.isDrawerOpen(GravityCompat.START)) drawer.closeDrawer(GravityCompat.START); else super.onBackPressed(); }else super.onBackPressed();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/668/buggy-version/app.src.main.java.com.rocdev.guardianreader.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5952ff52f7b6d17634ab5e1b53fe78cd7ace8acf", "Url": "https://api.github.com/repos/pieeet/GuardianReader", "Date": "2017-06-02T17:18:21Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((object.getIsActive()) != null) { resource.setIsActive(object.getIsActive()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/4148/buggy-version/gem-backend.src.main.java.ve.com.gem.resources.assembler.ChargeResourceAssembler.java", "BodyUseAPI": ["ve.com.gem.resources.ChargeResource.setIsActive(object.getIsActive())", "ve.com.gem.entities.Charge.getIsActive()"], "Fixed commit": "104193163918c0d01e7e41c6c167906fd0696af1", "Url": "https://api.github.com/repos/gomezCarlos/gem-backend", "Date": "2016-09-27T14:00:46Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((rotations.get(i)) != null) { tiles[i].rotate(((rotations.get(i)) * 90)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/2661/buggy-version/src.SideButtons.java", "BodyUseAPI": [], "Fixed commit": "d9c68f1987a9c63414f49e9bd3fd8e0159bf9668", "Url": "https://api.github.com/repos/JayCBishop/IZZI", "Date": "2016-05-09T18:22:50Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(baseFolder.exists())) { baseFolder.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/5024/buggy-version/src.me.PsionicTemplar.templarIndustries.ConfigObject.java", "BodyUseAPI": [], "Fixed commit": "67b0f691d3ab51c9c5e9b065b8125e008bc94f6d", "Url": "https://api.github.com/repos/PsionicTemplar/Templar_Industries", "Date": "2017-12-19T08:53:02Z"},
{"Line": "=>918", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getParams().FSReceiptItemDiscountEnabled) { if ((price > 0) && ((amount - price) > 0)) { printDiscount((amount - price), vatInfo, \"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V139/3899/buggy-version/Source.Core.src.com.shtrih.jpos.fiscalprinter.receipt.FSSalesReceipt.java", "BodyUseAPI": [], "Fixed commit": "fcf4b2ebc2d6599bacf4919646361aeae076940f", "Url": "https://api.github.com/repos/shtrih-m/javapos_shtrih", "Date": "2017-05-23T10:24:38Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (file != null) { java.lang.String lowerCasePath = file.getPath().toLowerCase(); int index = lowerCasePath.indexOf(lowerCaseSuffix); if (index != (-1)) { dirs.add(new java.io.File(file.getPath().substring(0, index))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6890/buggy-version/androidx.src.main.java.me.panpf.androidx.os.storage.Storagex.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.util.List<java.io.File>.add(java.io.File)", "java.io.File.getPath()", "java.lang.String.toLowerCase()", "java.io.File.getPath()"], "Fixed commit": "e22173027c2e9e49c5631dd99377faea2c423688", "Url": "https://api.github.com/repos/panpf/androidx", "Date": "2018-10-12T08:57:33Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((etienned.lecteuropus.Utils.bytesToInt(transitData, 44, 12)) == 4088) { offset = 8; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1304/buggy-version/app.src.main.java.etienned.lecteuropus.Trip.java", "BodyUseAPI": [], "Fixed commit": "4711909edaa5c832415e10a517dc74325025ba03", "Url": "https://api.github.com/repos/FelixINX/LecteurOPUS", "Date": "2018-03-19T22:37:23Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scene.GamePlayScene.STAGE) > (-1)) { gameOverRun(); showScoreBoard(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2611/buggy-version/src.GameCanvas.java", "BodyUseAPI": [], "Fixed commit": "e98bd7a73c2c2681c3442d843b979ea39683eea2", "Url": "https://api.github.com/repos/Yukishiori/BestGameofCI", "Date": "2018-02-08T16:26:13Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gtPlusPlus.xmod.gregtech.common.tileentities.machines.multi.processing.advanced.GregtechMetaTileEntity_Adv_EBF.mUsingPollutionOutputs) { for (net.minecraftforge.fluids.FluidStack pollutionFluidStack : gtPlusPlus.xmod.gregtech.common.tileentities.machines.multi.processing.advanced.GregtechMetaTileEntity_Adv_EBF.mPollutionFluidStacks) { if (tLiquid.isFluidEqual(pollutionFluidStack)) { isOutputPollution = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1458/buggy-version/src.Java.gtPlusPlus.xmod.gregtech.common.tileentities.machines.multi.processing.advanced.GregtechMetaTileEntity_Adv_EBF.java", "BodyUseAPI": [], "Fixed commit": "65e67777ba698135097bb9f2584a606ee1815c33", "Url": "https://api.github.com/repos/draknyte1/GTplusplus", "Date": "2018-08-22T15:25:51Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (container != null) { android.util.Log.e(CustomWebViewClient.TAG, (\"downloadVideo\" + (container.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4939/buggy-version/videodetector.src.main.java.com.videodetector.DownloaderWebView.java", "BodyUseAPI": ["android.util.Log.e(CustomWebViewClient.TAG,(\"downloadVideo\" + (container.toString())))", "CustomWebViewClient.MediaContainer.toString()"], "Fixed commit": "1c9919db959c19c25050524c3864c57a380a737f", "Url": "https://api.github.com/repos/fgustovo/Custom-WebView", "Date": "2018-10-28T08:50:29Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (intent != null) { android.os.Bundle extras = intent.getExtras(); if (extras != null) { this.url = extras.getString(\"url\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4939/buggy-version/videodetector.src.main.java.com.videodetector.clipboard.FloatingWindowService.java", "BodyUseAPI": ["android.content.Intent.getExtras()"], "Fixed commit": "1c9919db959c19c25050524c3864c57a380a737f", "Url": "https://api.github.com/repos/fgustovo/Custom-WebView", "Date": "2018-10-28T08:50:29Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFirstLoc)) { cn.shomes.tfblue.util.DialogUtils.showProgressDialog(activity); cn.shomes.tfblue.util.http.HttpQueryUtils.getNearCar(((mLatitude) + \"\"), ((mLongitude) + \"\"), cn.shomes.tfblue.util.TimeUtils.TimestampToString(new java.sql.Timestamp(((cn.shomes.tfblue.util.TimeUtils.currentTimeMillis()) - ((30 * 60) * 1000)))), null, itemGL, itemDZLD, itemZDMLC, itemYSZ, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4794/buggy-version/app.src.main.java.cn.shomes.tfblue.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "8dce260c89a757c5baf33876321df1b89cb42f8b", "Url": "https://api.github.com/repos/kayoxu/TFBlue", "Date": "2018-10-17T10:52:08Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getHand()) == (org.bukkit.inventory.EquipmentSlot.OFF_HAND)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3119/buggy-version/NeoInstruments.src.me.neoblade298.neoinstruments.Main.java", "BodyUseAPI": [], "Fixed commit": "5de5a63bcf13fd5ddd65beb17ad1cb652d99c696", "Url": "https://api.github.com/repos/Alexz1008/MLMCPlugins", "Date": "2018-10-19T22:40:01Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.guoziwei.klinelib.chart.KLineView.getLastData()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (hisData != null) { klineData(hisData.getClose(), hisData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1027/buggy-version/klinelib.src.main.java.com.guoziwei.klinelib.chart.KLineView.java", "BodyUseAPI": ["com.guoziwei.klinelib.model.HisData.getClose()", "com.guoziwei.klinelib.chart.KLineView.klineData(hisData.getClose(),com.guoziwei.klinelib.model.HisData)"], "Fixed commit": "e3b6d7118e6f2a3aa65775b5be24fbb4a9f10186", "Url": "https://api.github.com/repos/hottech-jxd/missionwallet", "Date": "2018-10-22T10:44:12Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seventh.game.weapons.Weapon.getClipSize()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clipSize != 0) { return ((double) (weapon.getBulletsInClip())) / clipSize; }else { if ((weapon.getBulletsInClip()) > 0) { score += 0.1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/878/buggy-version/src.seventh.ai.basic.actions.evaluators.Evaluators.java", "BodyUseAPI": [], "Fixed commit": "a5bfdee26af8c2e2150d27e38e59f90b4cc051c1", "Url": "https://api.github.com/repos/tonysparks/seventh", "Date": "2018-04-12T02:23:37Z"},
{"Line": "=>3758", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.epad.epadws.epaddb.EpadDatabaseOperations.getAIM(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (oldAim == null) { epadDatabaseOperations.deleteAIM(username, aim.aimID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1728/buggy-version/src.main.java.edu.stanford.epad.epadws.queries.DefaultEpadOperations.java", "BodyUseAPI": [], "Fixed commit": "7f9ae746d504082bd0cb0d519b7bc6ecb908bafc", "Url": "https://api.github.com/repos/RubinLab/epad-ws", "Date": "2018-02-22T19:28:31Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((sort.getDirection()) == (SortBy.Direction.ASC)) && ((sort.getKey()) == (com.zimbra.cs.index.SortBy.Key.UNREAD))) { orderBy.append(\" DESC\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1258/buggy-version/store.src.java.com.zimbra.cs.db.DbSearch.java", "BodyUseAPI": [], "Fixed commit": "f567ae9f70c345bd32aebf8a73a50fa898305f68", "Url": "https://api.github.com/repos/Zimbra/zm-mailbox", "Date": "2018-07-23T06:08:40Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) com.androiderstack.utility.Utils.playSound(context);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2093/buggy-version/app.src.main.java.com.androiderstack.reciever.ProfileChangerReceiver.java", "BodyUseAPI": [], "Fixed commit": "a905b9a813ea4748ea40280193a478afe8b7fba6", "Url": "https://api.github.com/repos/vishalchhodwani1992/SmartContact", "Date": "2018-07-24T18:34:41Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) com.androiderstack.utility.Utils.stopSound(context);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2093/buggy-version/app.src.main.java.com.androiderstack.reciever.ProfileChangerReceiver.java", "BodyUseAPI": [], "Fixed commit": "a905b9a813ea4748ea40280193a478afe8b7fba6", "Url": "https://api.github.com/repos/vishalchhodwani1992/SmartContact", "Date": "2018-07-24T18:34:41Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) com.androiderstack.utility.Utils.stopSound(context);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2093/buggy-version/app.src.main.java.com.androiderstack.reciever.ProfileChangerReceiver.java", "BodyUseAPI": [], "Fixed commit": "a905b9a813ea4748ea40280193a478afe8b7fba6", "Url": "https://api.github.com/repos/vishalchhodwani1992/SmartContact", "Date": "2018-07-24T18:34:41Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(ret.getMessage()))) { android.widget.Toast.makeText(mContext, ret.getMessage(), Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(mContext, ret.getDesc(), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9776/buggy-version/app.src.main.java.com.yanxiu.gphone.faceshow.login.LoginActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(android.content.Context,ret.getDesc(),Toast.LENGTH_SHORT)", "com.yanxiu.gphone.faceshow.http.login.SignInResponse.getMessage()", "android.widget.Toast.makeText(android.content.Context,ret.getMessage(),Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(mContext, ret.getMessage(), Toast.LENGTH_SHORT).show()", "com.yanxiu.gphone.faceshow.http.login.SignInResponse.getDesc()", "android.widget.Toast.makeText(mContext, ret.getDesc(), Toast.LENGTH_SHORT).show()"], "Fixed commit": "cd207cbfd42a56ce96903d4117225f5e8ab2fdda", "Url": "https://api.github.com/repos/caileiYanxiu/FaceShow_Android", "Date": "2018-07-31T08:32:13Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hour) < 10) { hourShow = \"0\" + hourShow; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4602/buggy-version/app.src.main.java.cmpe275eat.takeoutapp.Checkout.java", "BodyUseAPI": [], "Fixed commit": "428841540e98a8f8200c6f5bf3c9ba3ef2cff65f", "Url": "https://api.github.com/repos/Adamkzh/takeoutApp", "Date": "2018-05-21T03:30:56Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.mineblock.mbcore.CoreUtils.connect(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (out == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7556/buggy-version/src.main.java.it.mineblock.mbcore.CoreUtils.java", "BodyUseAPI": [], "Fixed commit": "750c6c0c425464518d8745f4342ee4ebb7358ad1", "Url": "https://api.github.com/repos/LoreSchaeffer/MBCore", "Date": "2018-04-13T10:43:54Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ingredient.getRecipe()) != null) { ingredientCommand.setRecipeId(ingredient.getRecipe().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1521/buggy-version/src.main.java.science.mengxin.spring5app.converters.IngredientToIngredientCommand.java", "BodyUseAPI": ["science.mengxin.spring5app.commands.IngredientCommand.setRecipeId(ingredient.getRecipe().getId())", "science.mengxin.spring5app.domain.Ingredient.getRecipe()", "ingredient.getRecipe().getId()"], "Fixed commit": "227bc85ab24f03e1393a3768520cbc4eed42019d", "Url": "https://api.github.com/repos/xmeng1/spring5-app", "Date": "2018-05-16T20:12:24Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gotNewPermission || gotOldPermission)) { throw new java.lang.SecurityException((\"Application is not granted permission: \" + newPermission)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4439/buggy-version/clover-android-sdk.src.main.java.com.clover.sdk.cashdrawer.CashDrawers.java", "BodyUseAPI": [], "Fixed commit": "299667d3c95b1cc19e61442451967e980bdce6dc", "Url": "https://api.github.com/repos/clover/clover-android-sdk", "Date": "2018-07-02T20:59:02Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["usernameET.getText().toString()", "passwordET.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((username.equals(\"admin\")) || (password.equals(\"pass\"))) { startActivity(new android.content.Intent(this, com.example.nasir.myparking.AdminHomepage.class)); }else { android.widget.Toast.makeText(this, \"invalid\", Toast.LENGTH_SHORT).show(); passwordET.setFocusable(true); passwordET.setError(\"Password and/or username is wrong...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4654/buggy-version/app.src.main.java.com.example.nasir.myparking.Login.java", "BodyUseAPI": [], "Fixed commit": "f709a20c7cad24421a998bbd8b12c6727008e90f", "Url": "https://api.github.com/repos/sgohari/MyParkingProject", "Date": "2018-08-13T04:49:57Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!msgLogged) { if (servers == null) { tools.descartes.teastore.registryclient.StartupCallbackTask.LOG.info(((\"Registry not online. \" + (myService)) + \" is waiting for it to come online\")); }else { tools.descartes.teastore.registryclient.StartupCallbackTask.LOG.info(((((requestedService.getServiceName()) + \" not online. \") + (myService)) + \" is waiting for it to come online\")); } msgLogged = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4065/buggy-version/utilities.tools.descartes.teastore.registryclient.src.main.java.tools.descartes.teastore.registryclient.StartupCallbackTask.java", "BodyUseAPI": [], "Fixed commit": "68a5d7b267336426c7aba67459ef10ff01c349b6", "Url": "https://api.github.com/repos/DescartesResearch/TeaStore", "Date": "2018-04-26T13:25:24Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((io.shardingsphere.core.constant.SQLType.TCL) == (sqlStatement.getType())) { channelRelease(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1763/buggy-version/sharding-proxy.src.main.java.io.shardingsphere.proxy.backend.netty.NettyBackendHandler.java", "BodyUseAPI": [], "Fixed commit": "1e7b72aafb02211a6e6946b12c9f928e9809b328", "Url": "https://api.github.com/repos/sharding-sphere/sharding-sphere", "Date": "2018-08-07T12:28:31Z"},
{"Line": "=>557", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tile) != null) && ((Block.REGISTRY.getNameForObject(tile)) != null)) { str = Block.REGISTRY.getNameForObject(tile).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4637/buggy-version/src.main.java.weather2.entity.EntityMovingBlock.java", "BodyUseAPI": ["Block.REGISTRY.getNameForObject(net.minecraft.block.Block)", "Block.REGISTRY.getNameForObject(tile).toString()"], "Fixed commit": "ce576a6e60376cadd4b5cc0b665f713a78012398", "Url": "https://api.github.com/repos/Corosauce/weather2", "Date": "2018-05-28T04:35:59Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextBucketsSize > (java.lang.Integer.MAX_VALUE)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9912/buggy-version/processing.src.main.java.io.druid.query.groupby.epinephelinae.ByteBufferHashTable.java", "BodyUseAPI": [], "Fixed commit": "ea6824d31fd06a696fc82b3d51590f05b476bc4f", "Url": "https://api.github.com/repos/implydata/druid", "Date": "2017-11-17T16:19:16Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.Double.isNaN(sim)) { delfos.common.Global.showWarning(((((((\"Similarity of items \" + (profile.getIdItem())) + \" and \") + (neighbor.getIdNeighbor())) + \" was \") + (sim.toString())) + \" set to 0\")); sim = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5936/buggy-version/src.main.java.delfos.rs.collaborativefiltering.knn.modelbased.DAOKnnModelBasedDatabaseModel.java", "BodyUseAPI": ["delfos.common.Global.showWarning(((((((\"Similarity of items \" + (profile.getIdItem())) + \" and \") + (neighbor.getIdNeighbor())) + \" was \") + (sim.toString())) + \" set to 0\"))", "java.lang.Double.toString()"], "Fixed commit": "780766114216c006fdca907a9ad22d2066f86a11", "Url": "https://api.github.com/repos/jcastro-inf/delfos", "Date": "2018-07-26T15:17:25Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((program) == null) { program = createProgram(texture); program = com.nucleus.assets.AssetManager.getInstance().getProgram(renderer.getGLES(), program); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8696/buggy-version/src.main.java.com.graphicsengine.spritemesh.SpriteMesh.java", "BodyUseAPI": [], "Fixed commit": "49d4ff3840d853a8e29b94047c7405ea14932f9a", "Url": "https://api.github.com/repos/rsahlin/graphics-engine", "Date": "2018-05-21T08:00:16Z"},
{"Line": "=>1329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<edu.mit.csail.sdg.alloy4compiler.ast.Expr, kodkod.ast.Expression>.get(edu.mit.csail.sdg.alloy4compiler.ast.Sig)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(e instanceof kodkod.ast.Relation)) return; else r = ((kodkod.ast.Relation) (e));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4042/buggy-version/electrum.src.main.java.edu.mit.csail.sdg.alloy4compiler.translator.A4Solution.java", "BodyUseAPI": [], "Fixed commit": "df0172375c6ae462c3bf76a7e8945b4744f06e52", "Url": "https://api.github.com/repos/haslab/Electrum", "Date": "2018-05-25T13:21:38Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((particle.getId()) != 0) && ((particle.getId()) != 1)) energy += (0.5 * (particle.getMass())) * ((java.lang.Math.pow(particle.getVelocity().getX(), 2)) + (java.lang.Math.pow(particle.getVelocity().getY(), 2)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4314/buggy-version/src.main.java.ar.edu.itba.ss.managers.SimulationManager.java", "BodyUseAPI": ["ar.edu.itba.ss.entities.Particle.getVelocity()", "particle.getVelocity().getY()", "java.lang.Math.pow(particle.getVelocity().getY(),int)", "ar.edu.itba.ss.entities.Particle.getVelocity()", "ar.edu.itba.ss.entities.Particle.getMass()", "java.lang.Math.pow(particle.getVelocity().getX(),int)", "particle.getVelocity().getX()"], "Fixed commit": "8cd4328460a297d7fcceb91006c1e237912d2ae1", "Url": "https://api.github.com/repos/jfrojo/ss-tp-5", "Date": "2018-10-10T23:18:23Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastEntries.size()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7293/buggy-version/app.src.main.java.com.station.weather.piscos.weatherstation.HistoryActivity.java", "BodyUseAPI": [], "Fixed commit": "4d14c1ec22900a397029ad1ef4117277e545241a", "Url": "https://api.github.com/repos/migruiz/androidweather", "Date": "2018-09-17T09:02:19Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["be.kdg.integratieproject2.data.implementations.UserRepository.findByEmailIgnoreCase(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((user.getPictureId()) == null) throw new be.kdg.integratieproject2.bussiness.exceptions.ObjectNotFoundException(\"null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4061/buggy-version/src.main.java.be.kdg.integratieproject2.bussiness.Implementations.PictureServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "98c17738f556c228389cdaac3a9986930710bef5", "Url": "https://api.github.com/repos/remzGrges/springIP", "Date": "2018-03-20T13:20:01Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((constants.wallet) != null) { constants.wallet.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1427/buggy-version/app.src.main.java.com.dcrandroid.MainActivity.java", "BodyUseAPI": ["constants.wallet.shutdown()"], "Fixed commit": "f17d6e2d5a5fbc3af53b4067444863b3605cb905", "Url": "https://api.github.com/repos/C-ollins/dcrandroid", "Date": "2018-04-23T23:37:27Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.util.Pair<model.Transaction.TRANSACTIONFIELD, dialogs.ValidationComponent>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fieldtype == (model.Transaction.TRANSACTIONFIELD.JOB_WAGE)) { java.lang.Object hours = m_transaction.get(TRANSACTIONFIELD.JOB_HOURS); java.lang.Object wage = m_transaction.get(TRANSACTIONFIELD.JOB_WAGE); if ((hours != null) && (wage != null)) { value = ((double) (wage)) * ((double) (hours)); }else { value = 0.0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9092/buggy-version/src.dialogs.AddEditTransaction.java", "BodyUseAPI": [], "Fixed commit": "3379d05690ee7c2f6b37d664ef931caf904b6441", "Url": "https://api.github.com/repos/anaisools/BoekhoudingApp", "Date": "2018-08-27T18:47:44Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((trackedWarList.size()) != 0) msg.append(trackedWarList.get(((trackedWarList.size()) - 1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7533/buggy-version/src.main.java.net.motobot.DiscordBot.Commands.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "java.lang.StringBuilder.append(java.lang.String)", "java.util.List<java.lang.String>.size()"], "Fixed commit": "602390f985dd407938460444b67d245e81634d7e", "Url": "https://api.github.com/repos/motoki317/DiscordBot", "Date": "2018-03-19T08:48:43Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.neotys.neoload.model.readers.loadrunner.WebCustomRequest.toElement(com.neotys.neoload.model.readers.loadrunner.LoadRunnerVUVisitor,com.neotys.neoload.model.readers.loadrunner.MethodCall,com.neotys.neoload.model.parsers.CPP14Parser.MethodcallContext)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (page == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9703/buggy-version/models-readers.loadrunner-reader.src.main.java.com.neotys.neoload.model.readers.loadrunner.method.WebcustomrequestMethod.java", "BodyUseAPI": [], "Fixed commit": "fbecb690a2f7d61d77ecd85bab96a60a1c1b657a", "Url": "https://api.github.com/repos/Neotys-Labs/neoload-models", "Date": "2018-10-02T21:18:01Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recipeList) == null) { rAdapter = new murphy.christopher.bakingapp.adapter.RecipesAdapter(); }else { rAdapter = new murphy.christopher.bakingapp.adapter.RecipesAdapter(recipeList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/731/buggy-version/app.src.main.java.murphy.christopher.bakingapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c39b4be0ba94b735f907c07667999385129a11ca", "Url": "https://api.github.com/repos/chmurphy1/BakingApp", "Date": "2018-10-11T02:45:16Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.web.context.request.ServletRequestAttributes.getRequest()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((request.getCookies()) == null) { response.sendRedirect(\"/auth/login\"); }else { for (javax.servlet.http.Cookie cookie : request.getCookies()) { if (cookie.getName().equals(\"token\")) { token = cookie.getValue(); } } java.lang.String username; if ((token == null) || ((username = accountService.verifyToken(token)) == null)) { response.sendRedirect(\"/auth/login\"); }else { request.setAttribute(\"username\", username); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2753/buggy-version/src.main.java.cn.liangjiateng.common.AspectHandler.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getCookies()", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "1c0fe227889f803653dd36362ffc745e0d24baa6", "Url": "https://api.github.com/repos/toxicaker/blog", "Date": "2018-07-16T04:50:36Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getInfoList.size()) >= (settings.getIntValue(\"usrLimit\"))) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2398/buggy-version/EWSaClient.src.ewsa.client.EarthQuakeCheck.java", "BodyUseAPI": [], "Fixed commit": "43839fd3215d1482d8c7f3ea047b55f52f2931f9", "Url": "https://api.github.com/repos/nicholasmarasco95/EWSaeratos", "Date": "2018-05-22T21:57:42Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((queues.RRQueue) (nextQueue)).getSize()) > 0) { ((queues.RRQueue) (nextQueue)).stopExecution(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9558/buggy-version/src.queues.RRQueue.java", "BodyUseAPI": ["java.lang.Object.stopExecution()"], "Fixed commit": "ba5479bb517df2d1012d3f5e93e50441c15e19db", "Url": "https://api.github.com/repos/imsudonym/Scheduler-App", "Date": "2018-06-01T10:02:28Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((queues.RRQueue) (nextQueue)).getSize()) > 0) { ((queues.RRQueue) (nextQueue)).stopExecution(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9558/buggy-version/src.queues.RRQueue.java", "BodyUseAPI": ["java.lang.Object.stopExecution()"], "Fixed commit": "ba5479bb517df2d1012d3f5e93e50441c15e19db", "Url": "https://api.github.com/repos/imsudonym/Scheduler-App", "Date": "2018-06-01T10:02:28Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((first.hash) == (second.hash)) { return new io.usethesource.vallang.util.WeakReferenceTrieCache.CollisionNode(first.hash, new io.usethesource.vallang.util.WeakReferenceTrieCache.LeafNode[]{ first, second }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6098/buggy-version/src.main.java.io.usethesource.vallang.util.WeakReferenceTrieCache.java", "BodyUseAPI": [], "Fixed commit": "b27fbf3791521bf0d82a286b7bf73248828d134a", "Url": "https://api.github.com/repos/usethesource/vallang", "Date": "2018-06-14T14:35:29Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.usethesource.vallang.util.WeakReferenceTrieCache.CollisionNode<T>.grow(io.usethesource.vallang.util.WeakReferenceTrieCache.SingleLeafNode<T>,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parent.compareAndSet(this, newNode)) { return key; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6098/buggy-version/src.main.java.io.usethesource.vallang.util.WeakReferenceTrieCache.java", "BodyUseAPI": [], "Fixed commit": "b27fbf3791521bf0d82a286b7bf73248828d134a", "Url": "https://api.github.com/repos/usethesource/vallang", "Date": "2018-06-14T14:35:29Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["g16arimaa.ArimaaPanel.getPiece(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (piece != null) { if (((piece.getStrength()) > strength) && ((piece.getColor()) != color)) { strong_enemy = true; }else if ((piece.getColor()) == color) { friend = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9048/buggy-version/src.g16arimaa.ArimaaPanel.java", "BodyUseAPI": ["g16arimaa.Piece.getColor()", "g16arimaa.Piece.getColor()", "g16arimaa.Piece.getStrength()"], "Fixed commit": "5910a9ca0bfac511010ef7ea9a688fbd542906d1", "Url": "https://api.github.com/repos/DavidPRichardson/g16arimaa", "Date": "2018-05-25T17:10:30Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getGui()) instanceof micdoodle8.mods.galacticraft.core.client.gui.screen.GuiCelestialSelection) { if (net.minecraft.client.settings.GameSettings.isKeyDown(micdoodle8.mods.galacticraft.core.tick.KeyHandlerClient.galaxyMap)) { event.setGui(new com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection(true, null, net.minecraftforge.server.permission.PermissionAPI.hasPermission(com.mjr.mjrlegendslib.util.MCUtilities.getMinecraft().player, Constants.PERMISSION_CREATE_STATION))); }else { event.setGui(new com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection(false, null, net.minecraftforge.server.permission.PermissionAPI.hasPermission(com.mjr.mjrlegendslib.util.MCUtilities.getMinecraft().player, Constants.PERMISSION_CREATE_STATION))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3872/buggy-version/src.main.java.com.mjr.extraplanets.client.handlers.MainHandlerClient.java", "BodyUseAPI": ["net.minecraftforge.client.event.GuiOpenEvent.setGui(com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection)", "net.minecraftforge.client.event.GuiOpenEvent.setGui(com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection)"], "Fixed commit": "f4a1633917f764d5e21339c49f16a2de7a679096", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-02-02T15:46:42Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLastKnownLocation) != null) { mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(new com.google.android.gms.maps.model.LatLng(mLastKnownLocation.getLatitude(), mLastKnownLocation.getLongitude()), com.example.mis.polygons.MapsActivity.DEFAULT_ZOOM)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7725/buggy-version/app.src.main.java.com.example.mis.polygons.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "2c3a3ceb692d24a54ad66180fc24c7c8aa2d3abf", "Url": "https://api.github.com/repos/JaniTomati/mis-2018-exercise-2-maps-polygons", "Date": "2018-04-26T21:33:09Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (secs >= 60) { secs = secs % 60; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6253/buggy-version/app.src.main.java.com.geekynehal.stopwatch.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1535e1ac7292e1c3bb55c91a97e499afdbf5931c", "Url": "https://api.github.com/repos/geekyNehal/StopWatch", "Date": "2018-09-19T18:20:40Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getIntersectingObjects(server.ShipActor.class).size()) == 0) { isGoodToGo = true; }else if ((dad) == null) dad = getIntersectingObjects(server.ShipActor.class).get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9289/buggy-version/src.server.SpaceLaser.java", "BodyUseAPI": ["server.SpaceLaser.getIntersectingObjects(java.lang.Class)", "getIntersectingObjects(server.ShipActor.class).get(int)"], "Fixed commit": "8831e1cdef626827372a18020f2b50f3a67c9a26", "Url": "https://api.github.com/repos/MrMayComputerScience/asteroids-whatever-you-want", "Date": "2018-03-06T18:52:36Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((gameWorld) != null) && ((role) != null)) { send(\"Role plz\"); gameWorld.setRole(getRole()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9289/buggy-version/src.client.GameClient.java", "BodyUseAPI": [], "Fixed commit": "8831e1cdef626827372a18020f2b50f3a67c9a26", "Url": "https://api.github.com/repos/MrMayComputerScience/asteroids-whatever-you-want", "Date": "2018-03-06T18:52:36Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cookies == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6662/buggy-version/session.src.main.java.com.ychp.session.utils.CookieUtils.java", "BodyUseAPI": [], "Fixed commit": "aa698493c9122512cbe1dc8c9dfc1cfb48741143", "Url": "https://api.github.com/repos/ychp/mblog", "Date": "2018-08-16T08:06:25Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cookies == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6662/buggy-version/session.src.main.java.com.ychp.session.utils.CookieUtils.java", "BodyUseAPI": [], "Fixed commit": "aa698493c9122512cbe1dc8c9dfc1cfb48741143", "Url": "https://api.github.com/repos/ychp/mblog", "Date": "2018-08-16T08:06:25Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.math.BigInteger.modPow(java.math.BigInteger,java.math.BigInteger)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((bigInt.compareTo(src)) == 0) throw new java.lang.IllegalArgumentException(\"could not encrypt\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/499/buggy-version/src.de.jcm.security.rsa.RSAPublicKey.java", "BodyUseAPI": [], "Fixed commit": "0f73f4509580f7240cc79f81ebe3a47de88439fa", "Url": "https://api.github.com/repos/JnCrMx/JCMLib", "Date": "2018-02-14T15:23:21Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == null) { throw new java.lang.IllegalArgumentException(\"SERVICE_ACCOUNT_KEY missing from environment!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1412/buggy-version/src.main.java.com.wingit.analysisserver.Utils.java", "BodyUseAPI": [], "Fixed commit": "8197814d069bde038428fc69e1f58bfcd4a46012", "Url": "https://api.github.com/repos/WingItOttawa/AnalysisServer", "Date": "2018-07-06T17:21:08Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (str == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6396/buggy-version/src.studio.visualdust.product.Randomer.structure.LinedFile.java", "BodyUseAPI": [], "Fixed commit": "82e480580bceb9a1f5d47e4b7784a31f05002083", "Url": "https://api.github.com/repos/visualDust/Randomer", "Date": "2018-09-21T08:34:02Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((endPoint.indexOf(\"/mtaapi-sandbox\")) > (-1)) { urlMetadata = endPoint; int mtaStartIdx = urlMetadata.indexOf(\"/mtaapi-sandbox\"); if (mtaEndIdx > (-1)) { urlMetadata = endPoint.substring(mtaStartIdx, mtaEndIdx); }else { urlMetadata = urlMetadata.substring(mtaStartIdx, urlMetadata.length()); } }else { int mtaStartIdx = endPoint.indexOf(\"/mta/api\"); if (mtaEndIdx > (-1)) { urlMetadata = endPoint.substring(mtaStartIdx, mtaEndIdx); urlMetadata = urlMetadata.replace(\"/mta\", \"/mtaapi\"); }else { urlMetadata = endPoint.replace(\"/mta\", \"/mtaapi\"); urlMetadata = urlMetadata.substring(mtaStartIdx, urlMetadata.length()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2342/buggy-version/src.main.java.com.birumerah.deli.helper.RestExecutor.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "65ddc9703f0f03d2b589a530f9183460904af59f", "Url": "https://api.github.com/repos/kangwawan/dni-backend", "Date": "2018-09-18T14:44:41Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"slice\".equals(name)) { return new org.mozilla.javascript.IdFunctionObject(new org.structr.core.script.SliceFunctionCall(actionContext, entity, scriptingContext), null, 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4403/buggy-version/structr-core.src.main.java.org.structr.core.script.StructrScriptable.java", "BodyUseAPI": [], "Fixed commit": "8a42d023c83fa18cbcfefbc37c3f238fe7438ae3", "Url": "https://api.github.com/repos/structr/structr", "Date": "2018-03-20T09:31:58Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (name.startsWith(\"carved-gh-\")) { java.lang.String cloneId = name.split(\"-\")[2]; if (clones.contains(cloneId)) { java.io.File file2 = new java.io.File((((((outputPath + (java.io.File.separator)) + \"so-\") + groupId) + (java.io.File.separator)) + name)); org.apache.commons.io.FileUtils.copyFile(file, file2); } }else if (name.startsWith(\"so-\")) { java.io.File file2 = new java.io.File((((((outputPath + (java.io.File.separator)) + \"so-\") + groupId) + (java.io.File.separator)) + name)); org.apache.commons.io.FileUtils.copyFile(file, file2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8698/buggy-version/SO-Integration.src.edu.ucla.cs.timestamp.FilterClonesByTimestamp.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "f04a188c974bad30d18233e7e6f4cf6b5bce9dbc", "Url": "https://api.github.com/repos/husttroy/Integration-Study", "Date": "2018-08-09T03:36:30Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((title != null) && (message != null)) { app.learnkannada.com.learnkannadakannadakali.firebaseMessaging.FirebaseNotificationService.showAndAddNotification(this, title, message, url, dateReceived); app.learnkannada.com.learnkannadakannadakali.utils.Logger.e(app.learnkannada.com.learnkannadakannadakali.firebaseMessaging.FirebaseNotificationService.TAG, \"method onmessage received called\"); app.learnkannada.com.learnkannadakannadakali.utils.Logger.e(app.learnkannada.com.learnkannadakannadakali.firebaseMessaging.FirebaseNotificationService.TAG, (\"Processed new notification with title: \" + title)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/465/buggy-version/app.src.main.java.app.learnkannada.com.learnkannadakannadakali.firebaseMessaging.FirebaseNotificationService.java", "BodyUseAPI": ["app.learnkannada.com.learnkannadakannadakali.utils.Logger.e(java.lang.String,java.lang.String)", "app.learnkannada.com.learnkannadakannadakali.firebaseMessaging.FirebaseNotificationService.showAndAddNotification(app.learnkannada.com.learnkannadakannadakali.firebaseMessaging.FirebaseNotificationService,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "fa11f4a9713f2f4669b01be0267853f5f9150520", "Url": "https://api.github.com/repos/varunam/LearnKannada_KannadaKali", "Date": "2018-10-19T05:13:27Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentCheckpoint) + 1) == (checkpoints.size())) { java.lang.System.out.println(\"enemy reached end of maze\"); }else { (currentCheckpoint)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1520/buggy-version/2DTD.src.data.Enemy.java", "BodyUseAPI": [], "Fixed commit": "4dc81a96a420c03713812c142eab756121a9ee68", "Url": "https://api.github.com/repos/JohannAtGithub/2DTD", "Date": "2018-02-25T17:52:49Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (connection instanceof com.mysql.jdbc.MySQLConnection) { com.mysql.jdbc.MySQLConnection mySqlConnection = ((com.mysql.jdbc.MySQLConnection) (connection)); isValid = com.ctrip.platform.dal.dao.helper.MySqlConnectionHelper.isValid(mySqlConnection, com.ctrip.platform.dal.dao.datasource.DataSourceValidator.DEFAULT_VALIDATE_TIMEOUT_IN_SECONDS); }else { isValid = connection.isValid(com.ctrip.platform.dal.dao.datasource.DataSourceValidator.DEFAULT_VALIDATE_TIMEOUT_IN_SECONDS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4146/buggy-version/dal-client.src.main.java.com.ctrip.platform.dal.dao.datasource.DataSourceValidator.java", "BodyUseAPI": ["java.sql.Connection.isValid(int)"], "Fixed commit": "951c688df9fbdc3d9476384a94dd0c66ba8a87cb", "Url": "https://api.github.com/repos/ctripcorp/dal", "Date": "2018-01-15T08:02:14Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kaleta.accountant.frontend.Configuration.getSelectedYear()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(Service.SCHEMA.checkGroupExists(year, classId, groupId))) return getBodyPanelInstance();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5458/buggy-version/accountant-desktop.src.main.java.org.kaleta.accountant.frontend.core.accounting.AccountingOverview.java", "BodyUseAPI": [], "Fixed commit": "71bfdc5aa6239765c2fb006b7d1bd16a1e9f4da1", "Url": "https://api.github.com/repos/KaProjects/Accountant", "Date": "2018-10-13T15:02:33Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((relatvePath == null) || ((relatvePath.length()) == 0)) { profile.profileProject = null; }else { if ((profile.profileProject) == null) { profile.profileProject = new eu.geopaparazzi.library.profiles.objects.ProfileProjects(); } profile.profileProject.setRelativePath(relatvePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3504/buggy-version/geopaparazzi_core.src.main.java.eu.geopaparazzi.core.profiles.gui.ProfileSettingsActivity.java", "BodyUseAPI": ["profile.profileProject.setRelativePath(java.lang.String)"], "Fixed commit": "5ad3e868f2dcc9daff04296d18de6c6383412def", "Url": "https://api.github.com/repos/GeoAnalytic-code/geopaparazzi", "Date": "2018-05-12T11:45:07Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.length) < ((1.5 * width) * height)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/68/buggy-version/android.src.main.java.org.reactnative.camera.RNCameraView.java", "BodyUseAPI": [], "Fixed commit": "42154eac41910e3745bc36b439ac217c6eb4d81c", "Url": "https://api.github.com/repos/syadykin/react-native-camera", "Date": "2018-08-09T11:07:58Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (xPercent > 0) { mVibrator.vibrate(((int) (java.lang.Math.abs(((100 * xPercent) / 3))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4057/buggy-version/app.src.main.java.ejunkins.rovercontroller.MainActivity.java", "BodyUseAPI": ["java.lang.Math.abs(float)", "android.os.Vibrator.vibrate(float)"], "Fixed commit": "24f39f70a7bfd9fa74f7596e11fc47341d561238", "Url": "https://api.github.com/repos/imvm/osr-android-app", "Date": "2018-08-22T14:30:53Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (yPercent > 0) { mVibrator.vibrate(((int) (java.lang.Math.abs(((100 * yPercent) / 3))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4057/buggy-version/app.src.main.java.ejunkins.rovercontroller.MainActivity.java", "BodyUseAPI": ["java.lang.Math.abs(float)", "android.os.Vibrator.vibrate(float)"], "Fixed commit": "24f39f70a7bfd9fa74f7596e11fc47341d561238", "Url": "https://api.github.com/repos/imvm/osr-android-app", "Date": "2018-08-22T14:30:53Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (foreground) stopNotification();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5690/buggy-version/app.src.main.java.souch.smp.MusicService.java", "BodyUseAPI": [], "Fixed commit": "b506db64a5d779f63b5d199735837abda0cb9bfd", "Url": "https://api.github.com/repos/TaoK/SMP", "Date": "2018-01-22T22:45:20Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.Integer, java.lang.Character>.get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((tmp.getId) != (pc.getId())) tmp.getBody().setTransform(tmp.getX(), tmp.getY(), 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3012/buggy-version/core.src.com.groupe.roomgame.screens.GameScreen.java", "BodyUseAPI": ["tmp.getBody().setTransform(tmp.getX(),tmp.getY(),int)", "java.lang.Character.getBody()", "java.lang.Character.getX()", "java.lang.Character.getY()"], "Fixed commit": "ac1cc3ab04d04384fa170b5ef0369e20ae8cb7a5", "Url": "https://api.github.com/repos/domdew23/Multiplayer-Room-Game", "Date": "2018-05-10T22:48:28Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mSearchQuery.equals(event.searchTerm))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/377/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.plugins.PluginBrowserViewModel.java", "BodyUseAPI": [], "Fixed commit": "4c33b04dda4bf775b62509c3bd8da4d20d696ff3", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2018-02-09T04:35:19Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source == null) return org.jppf.process.AbstractProcessLauncher.NO_OPTIONS;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3141/buggy-version/common.src.java.org.jppf.process.AbstractProcessLauncher.java", "BodyUseAPI": [], "Fixed commit": "6ef163a9de3b859c9080175d5bbd78cf490e51ff", "Url": "https://api.github.com/repos/jppf-grid/JPPF", "Date": "2018-05-18T04:07:38Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONArray.toArray()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(java.util.Arrays.asList(array).contains(bookName))) { files.add(bookName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1837/buggy-version/cliente.ClientThreadHandler.java", "BodyUseAPI": ["org.json.simple.JSONArray.add(java.lang.String)"], "Fixed commit": "9fe86c877b12b972a2dc24bfdc3a86fd276de469", "Url": "https://api.github.com/repos/gonzalez0fer/Client-Server-Downloader-Java", "Date": "2018-02-28T03:39:23Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((displayKeyHandler) != null) { displayKeyHandler.keyTyped(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5522/buggy-version/src.main.java.de.me.edgelord.sjgl.display.DisplayManager.java", "BodyUseAPI": [], "Fixed commit": "8361494a50116a382c6c0b3a00d8c8a38e0d2d43", "Url": "https://api.github.com/repos/edgelord314/salty-engine", "Date": "2018-07-13T20:47:36Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((displayKeyHandler) != null) { displayKeyHandler.keyPressed(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5522/buggy-version/src.main.java.de.me.edgelord.sjgl.display.DisplayManager.java", "BodyUseAPI": [], "Fixed commit": "8361494a50116a382c6c0b3a00d8c8a38e0d2d43", "Url": "https://api.github.com/repos/edgelord314/salty-engine", "Date": "2018-07-13T20:47:36Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((displayKeyHandler) != null) { displayKeyHandler.keyReleased(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5522/buggy-version/src.main.java.de.me.edgelord.sjgl.display.DisplayManager.java", "BodyUseAPI": [], "Fixed commit": "8361494a50116a382c6c0b3a00d8c8a38e0d2d43", "Url": "https://api.github.com/repos/edgelord314/salty-engine", "Date": "2018-07-13T20:47:36Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.Object, java.lang.Object>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((name != null) && (name.startsWith(\"redis.\"))) { name = name.substring(6); }else { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3/buggy-version/src.main.java.org.mybatis.caches.redis.RedisConfigurationBuilder.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "57d84e8341cb47a92dc6c88f51036ff759029607", "Url": "https://api.github.com/repos/harawata/redis-cache", "Date": "2018-01-16T02:30:33Z"},
{"Line": "=>1542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(current_step_box.isEnabled())) { current_step_box = ((android.widget.TextView) (findViewById(R.id.quotientInDivision))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6071/buggy-version/app.src.main.java.tutoringproject.behaviors.QuestionActivity.java", "BodyUseAPI": [], "Fixed commit": "1cb31676110d6974191f6f37f2ac1079f4a3649b", "Url": "https://api.github.com/repos/ScazLab/nao_tutoring_behavior_tablet_app_with_gradle", "Date": "2018-02-02T02:29:38Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subjectStatement instanceof org.keycloak.dom.saml.v1.assertion.SAML11AttributeStatementType) { org.keycloak.dom.saml.v1.assertion.SAML11AttributeStatementType attributeStatement = ((org.keycloak.dom.saml.v1.assertion.SAML11AttributeStatementType) (subjectStatement)); for (org.keycloak.dom.saml.v1.assertion.SAML11AttributeType attribute : attributeStatement.get()) { if ((\"nameidenfier\".equalsIgnoreCase(attribute.getAttributeName())) || (JBossSAMLURIConstants.CLAIMS_NAME_IDENTIFIER.get().equalsIgnoreCase(attribute.getAttributeName()))) { if (!(attribute.get().isEmpty())) { return attribute.get().get(0).toString(); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3319/buggy-version/src.main.java.com.quest.keycloak.broker.wsfed.SAML11RequestedToken.java", "BodyUseAPI": [], "Fixed commit": "8a312ae90b3ecfc14627988a07d25f6cea2f97e9", "Url": "https://api.github.com/repos/SebZal/keycloak-wsfed", "Date": "2018-03-28T10:37:01Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((em) != null) { java.lang.System.out.println(\"Neuss :D\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2702/buggy-version/src.main.java.ch.yanicksenn.heroku.Launcher.java", "BodyUseAPI": [], "Fixed commit": "4674526a3f8db99f71d50606bf8c486f1d003cee", "Url": "https://api.github.com/repos/yanicksenn/heroku-blog", "Date": "2018-04-06T11:42:28Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(s.isEmpty())) { retrofit2.Call<com.ibra.moviesseries.retrofit.show.ShowList> call = com.ibra.moviesseries.data.api.ApiClinet.getApiClient().create(com.ibra.moviesseries.data.api.ApiInterface.class).serach(s); call.enqueue(new retrofit2.Callback<com.ibra.moviesseries.retrofit.show.ShowList>() { @java.lang.Override public void onResponse(retrofit2.Call<com.ibra.moviesseries.retrofit.show.ShowList> call, retrofit2.Response<com.ibra.moviesseries.retrofit.show.ShowList> response) { if (response.isSuccessful()) { android.util.Log.d(com.ibra.moviesseries.ui.SearchActivity.TAG, \"response is done\"); showList = response.body().getShowList(); searchAdapter.notifiy(showList); } } @java.lang.Override public void onFailure(retrofit2.Call<com.ibra.moviesseries.retrofit.show.ShowList> call, java.lang.Throwable t) { } }); }else { searchAdapter.notifiy(new java.util.ArrayList<com.ibra.moviesseries.retrofit.show.Show>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5717/buggy-version/app.src.main.java.com.ibra.moviesseries.ui.SearchActivity.java", "BodyUseAPI": ["com.ibra.moviesseries.data.api.ApiClinet.getApiClient().create(com.ibra.moviesseries.data.api.ApiInterface.class).serach(java.lang.String)"], "Fixed commit": "2bf947020a8bac269c0eefa66bdd76e7f3dd08c3", "Url": "https://api.github.com/repos/ibrahimothman/Movies-Series", "Date": "2018-08-05T11:50:24Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["exchangeRateInfo2.getExchangeRates().get(java.time.LocalDate)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (exchangeRate == null) { com.github.taxbeans.currency.RBNZHistoricalExchangeRatesReader.logger.info(\"Assuming {} is a public holiday since no exchange rate is available\", date); exchangeRate = com.github.taxbeans.currency.RBNZHistoricalExchangeRatesReader.getNZDtoForeignRate(date.minusDays(1), foreignCurrency); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/358/buggy-version/taxbeans-forms.src.main.java.com.github.taxbeans.currency.RBNZHistoricalExchangeRatesReader.java", "BodyUseAPI": [], "Fixed commit": "b72bb4712f97409c8d1336bfe7e88e5da5cbb925", "Url": "https://api.github.com/repos/taxbeans/taxbeans", "Date": "2018-04-28T06:37:39Z"},
{"Line": "=>1292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sKey.isnil())) sVal = t.get(sKey);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3883/buggy-version/src.main.java.com.theincgi.advancedMacros.gui.elements.ColorTextArea.java", "BodyUseAPI": ["org.luaj.vm2_v3_0_1.LuaTable.get(org.luaj.vm2_v3_0_1.LuaValue)"], "Fixed commit": "54b6d60147f74d7c6198fea0d4f9658090fe33d7", "Url": "https://api.github.com/repos/TheIncgi/AdvancedMacros-1.12.2", "Date": "2018-08-16T17:12:37Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6421/buggy-version/APV.src.main.java.com.arranger.apv.APV.java", "BodyUseAPI": [], "Fixed commit": "401d7419dd7c5524b076b25fd9248dbfae80fcfb", "Url": "https://api.github.com/repos/mimelator/apv", "Date": "2018-04-23T22:52:26Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (avatar == null) this.avatar = \"Undefined\"; else this.avatar = avatar;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7188/buggy-version/src.entity.Attendance.java", "BodyUseAPI": [], "Fixed commit": "52b0f67427219b690716c4d655e0ddde7757de7e", "Url": "https://api.github.com/repos/aaaahoang123/javafxbillmodule", "Date": "2018-03-23T03:54:13Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rollNumber == null) this.rollNumber = \"Undefined\"; else this.rollNumber = rollNumber;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7188/buggy-version/src.entity.Attendance.java", "BodyUseAPI": [], "Fixed commit": "52b0f67427219b690716c4d655e0ddde7757de7e", "Url": "https://api.github.com/repos/aaaahoang123/javafxbillmodule", "Date": "2018-03-23T03:54:13Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == null) this.id = \"Undefined\"; else this.id = id;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7188/buggy-version/src.entity.Attendance.java", "BodyUseAPI": [], "Fixed commit": "52b0f67427219b690716c4d655e0ddde7757de7e", "Url": "https://api.github.com/repos/aaaahoang123/javafxbillmodule", "Date": "2018-03-23T03:54:13Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ch) == '.') { temp.append(ch); readChar(); if (!(java.lang.Character.isDigit(ch))) { setFirst(); lexicalException(); } while (java.lang.Character.isDigit(ch)) { temp.append(ch); readChar(); } setFirst(); if ((java.lang.Character.isAlphabetic(ch)) && ((java.lang.Character.toLowerCase(ch)) != 'e')) lexicalException(); if ((java.lang.Character.toLowerCase(ch)) != 'e') { tokens.add(new Lexical.Token(temp.toString(), Type.NUMBER, lines)); temp.delete(0, temp.length()); continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7006/buggy-version/src.Lexical.Scan.java", "BodyUseAPI": [], "Fixed commit": "bfe43684407d2e008608ab9eb78987531cd103ef", "Url": "https://api.github.com/repos/ZZAster/C-like-Compiler", "Date": "2018-10-24T08:57:50Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalDistance == 0.0F) { android.util.Log.w(com.onlylemi.mapview.library.graphics.implementation.LocationUser.TAG, \"Total distance to traverse is 0, will not move user\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7933/buggy-version/library.src.main.java.com.onlylemi.mapview.library.graphics.implementation.LocationUser.java", "BodyUseAPI": [], "Fixed commit": "53e5db5f5f73ab51193333721a8cdc4e6ebd5356", "Url": "https://api.github.com/repos/patnym/MapView", "Date": "2018-01-18T14:32:47Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.reflect.Modifier.isFinal(var.getAccessedVariable().getModifiers())) throw new org.codehaus.groovy.syntax.RuntimeParserException(((\"The variable [\" + (var.getName())) + \"] may be uninitialized\"), var);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4304/buggy-version/src.main.java.org.codehaus.groovy.classgen.Verifier.java", "BodyUseAPI": ["org.codehaus.groovy.ast.expr.VariableExpression.getName()"], "Fixed commit": "ef4a7985d6cb4333dc78d2f02ab9822098a28640", "Url": "https://api.github.com/repos/keeganwitt/groovy", "Date": "2018-02-13T07:18:39Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playing) { for (com.jme3.phonon.PhononSoundPlayer player : PLAYERS) { player.loop(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2565/buggy-version/src.main.java.com.jme3.phonon.PhononRenderer.java", "BodyUseAPI": [], "Fixed commit": "f7eddb680db1906198d750b2d0c9910f46fc3ac2", "Url": "https://api.github.com/repos/jmePhonon/jmePhonon", "Date": "2018-09-17T11:39:29Z"},
{"Line": "=>634", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bcdlog.server.data.Users.getInstance().get(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (user != null) { albumModel = com.bcdlog.server.data.Albums.getInstance().get(user.getReceptionAlbumId()); }else { throw new com.bcdlog.shared.model.UserException(\"User not found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/51/buggy-version/fwk.src.main.java.com.bcdlog.server.manager.ResourceManager.java", "BodyUseAPI": ["com.bcdlog.server.data.Albums.getInstance().get(user.getReceptionAlbumId())", "com.bcdlog.shared.model.UserModel.getReceptionAlbumId()"], "Fixed commit": "547b8f0ba9cadbab2e8fd1b00e1853c0f7d3da10", "Url": "https://api.github.com/repos/BertrandClarke/sites", "Date": "2018-04-14T05:44:17Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getBlock().getRelative(BlockFace.DOWN).getType()) == (java.lang.Enum.valueOf(org.bukkit.Material.class, \"LEGACY_ANVIL\"))) e.setCancelled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2164/buggy-version/src.fr.lulucraft321.hiderails.listeners.BlockPhysicEvent.java", "BodyUseAPI": ["org.bukkit.event.block.BlockPhysicsEvent.setCancelled(boolean)"], "Fixed commit": "87e33391c6308b2c23a4c1ed08a6a213a87e1182", "Url": "https://api.github.com/repos/lulucraft/HideRails", "Date": "2018-07-28T22:48:07Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getBlock().getRelative(BlockFace.DOWN).getType()) == (java.lang.Enum.valueOf(org.bukkit.Material.class, \"ANVIL\"))) e.setCancelled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2164/buggy-version/src.fr.lulucraft321.hiderails.listeners.BlockPhysicEvent.java", "BodyUseAPI": ["org.bukkit.event.block.BlockPhysicsEvent.setCancelled(boolean)"], "Fixed commit": "87e33391c6308b2c23a4c1ed08a6a213a87e1182", "Url": "https://api.github.com/repos/lulucraft/HideRails", "Date": "2018-07-28T22:48:07Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == 0) { java.lang.String[] preCloseStr = new java.lang.String[]{ allPoints.get(0).toString(), (baseValue) + \"\", \"0\", (baseValue) + \"\", (baseValue) + \"\" }; bean = createBean(preCloseStr); }else { com.volume.candle.ticker.bean.MinutesBean preOneBean = mMaps.get(allPoints.get((i - 1)).toString()); java.lang.String[] preOneStr = (preOneBean != null) ? new java.lang.String[]{ time + \"\", (preOneBean.cjprice) + \"\", (preOneBean.cjnum) + \"\", (preOneBean.avprice) + \"\", (preOneBean.openprice) + \"\" } : null; bean = createBean(preOneStr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2401/buggy-version/app.src.main.java.com.volume.candle.ticker.tools.MinutesDataParse.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.get(int)", "java.lang.Long.toString()", "java.util.Map<java.lang.String, com.volume.candle.ticker.bean.MinutesBean>.get(java.lang.String)"], "Fixed commit": "5a6126d7a03d11594a8b7c3be729fc0f2e79937e", "Url": "https://api.github.com/repos/PATHngping/canvolclient", "Date": "2018-09-28T08:46:14Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.parser) != null) { this.parser.parse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9238/buggy-version/src.de.naoth.xabsleditor.parser.XParser.java", "BodyUseAPI": [], "Fixed commit": "c89d50c523a1c767345f45bfa481d7fb4cb35b02", "Url": "https://api.github.com/repos/BerlinUnited/xabsleditor", "Date": "2018-03-09T10:59:51Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((end_time.length()) > 13) { this.end_time = end_time.substring(0, 13); }else { this.end_time = end_time; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2320/buggy-version/app.src.main.java.com.tomato.tuantt.tomatoapp.model.OrderData.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "1e846ea59ce64f1a10fbd677e7eec4b486b31159", "Url": "https://api.github.com/repos/tranthanhtuan269/tomatoAndroid", "Date": "2018-10-22T13:08:06Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((start_time.length()) > 13) { this.start_time = start_time.substring(0, 13); }else { this.start_time = start_time; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2320/buggy-version/app.src.main.java.com.tomato.tuantt.tomatoapp.model.OrderData.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "1e846ea59ce64f1a10fbd677e7eec4b486b31159", "Url": "https://api.github.com/repos/tranthanhtuan269/tomatoAndroid", "Date": "2018-10-22T13:08:06Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((archiveOut) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6652/buggy-version/src.common-messagelog.src.main.java.ee.ria.xroad.common.messagelog.archive.LogArchiveWriter.java", "BodyUseAPI": [], "Fixed commit": "e12d541516536e202f6269da5900ff27d4124629", "Url": "https://api.github.com/repos/nordic-institute/X-Road", "Date": "2018-08-22T13:42:06Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.userName) == \"Derp\") { timeBeforeShoot = 2; }else { timeBeforeShoot = engine.entities.Tank.TIME_BETWEEN_SHOTS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3891/buggy-version/src.engine.entities.Tank.java", "BodyUseAPI": [], "Fixed commit": "ff17b79870b981d062ddd2f97bfb5f79f18c84b6", "Url": "https://api.github.com/repos/TheAIBot/panzer-3000", "Date": "2018-01-17T09:52:30Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["yc.configuration.getConfigurationSection(\"targets\").getKeys(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((targets.isEmpty()) == false) { for (java.lang.String i : targets) { p = new org.bukkit.permissions.Permission((\"pos.promote.\" + i)); pm.addPermission(p); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8251/buggy-version/PromoteOneself.src.me.PromoteOneselfPackage.PromoteOneself.Classes.PromoteOneselfMainClass.java", "BodyUseAPI": [], "Fixed commit": "109779cf4758496a55cd2a20983060b6f716889e", "Url": "https://api.github.com/repos/aappleton8/PromoteOneself", "Date": "2018-03-21T20:25:04Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (page.isEditorAreaVisible()) { page.openEditor(new org.gumtree.gumnix.sics.internal.ui.editors.SicsEditorInput(org.gumtree.gumnix.sics.core.SicsCore.getSicsController()), SicsUIConstants.ID_EDITOR_SICS_CONTROL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8179/buggy-version/framework.sics.org.gumtree.gumnix.sics.ui.src.org.gumtree.gumnix.sics.internal.ui.navigator.InstrumentContentProvider.java", "BodyUseAPI": ["org.eclipse.ui.IWorkbenchPage.openEditor(org.gumtree.gumnix.sics.internal.ui.editors.SicsEditorInput,SicsUIConstants.ID_EDITOR_SICS_CONTROL)"], "Fixed commit": "3500a9d991ed57c961f9507fd056c2c37197ea17", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2018-02-28T23:10:13Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((time % (DataStore.AUTOSAVE_SECONDS)) != 0) { done = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/507/buggy-version/app.src.main.java.trc3543.trcscoutingapp.AutoSaveThread.java", "BodyUseAPI": [], "Fixed commit": "d1ae5820060d6e8a17576c4d2f8e34c9a258201c", "Url": "https://api.github.com/repos/DrDab/TrcScoutingApp", "Date": "2018-01-28T00:56:25Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, Clases.Usuario>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ll.getProfesor()) == false) { listModel.addElement(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8670/buggy-version/PatronesSW.src.Interfaces.InterfazAsignacionTfg.java", "BodyUseAPI": [], "Fixed commit": "5471909e1fb91ca8b78952388fc6d418b4a4ab46", "Url": "https://api.github.com/repos/guillermo132/PatronesJava", "Date": "2018-01-11T20:06:14Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.JarURLConnection.getEntryName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(jarConnectionEntryName.endsWith(\"/\"))) { jarConnectionEntryName += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2595/buggy-version/src.main.java.net.sourceforge.tess4j.util.LoadLibs.java", "BodyUseAPI": [], "Fixed commit": "e4f4a3d87d9db8ae816a166c85379a8083043376", "Url": "https://api.github.com/repos/nguyenq/tess4j", "Date": "2018-05-02T20:41:09Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.Town.villagers.Villager.getRole()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (villagerCount.containsKey(role)) { villagerCount.put(role, ((villagerCount.get(role)) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8293/buggy-version/src.game.Town.Town.java", "BodyUseAPI": ["java.util.HashMap<game.Town.villagers.VILLAGER_ROLES, java.lang.Integer>.get(game.Town.villagers.VILLAGER_ROLES)", "java.util.HashMap<game.Town.villagers.VILLAGER_ROLES, java.lang.Integer>.put(game.Town.villagers.VILLAGER_ROLES,((villagerCount.get(role)) - 1))"], "Fixed commit": "249ac8a1acaf7eab0320b036391a4a69ac61388f", "Url": "https://api.github.com/repos/acherry125/Worship", "Date": "2018-04-17T00:26:37Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (title) { sentence = \"Title: \" + sentence; title = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7080/buggy-version/src.main.java.com.PATHopeng.SentimentProcessor.java", "BodyUseAPI": [], "Fixed commit": "ef30b6586c35f64c2503ab2d5c8e2fd8655fdab5", "Url": "https://api.github.com/repos/XNYu/SentimentAnalyzer_Baidu", "Date": "2018-08-01T02:50:37Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(compoundDate.isDatePartMissing())) { try { java.time.LocalDate.of(java.lang.Integer.parseInt(compoundDate.getYear()), java.lang.Integer.parseInt(compoundDate.getMonth()), java.lang.Integer.parseInt(compoundDate.getDay())); } catch (java.lang.Exception e) { return false; } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5422/buggy-version/src.main.java.uk.gov.dft.bluebadge.webapp.citizen.controllers.validator.ValidCompoundDateValidator.java", "BodyUseAPI": ["java.lang.Integer.parseInt(compoundDate.getMonth())", "java.lang.Integer.parseInt(compoundDate.getDay())", "java.lang.Integer.parseInt(compoundDate.getYear())", "uk.gov.dft.bluebadge.webapp.citizen.model.component.CompoundDate.getYear()", "java.time.LocalDate.of(int,int,int)", "uk.gov.dft.bluebadge.webapp.citizen.model.component.CompoundDate.getDay()", "uk.gov.dft.bluebadge.webapp.citizen.model.component.CompoundDate.getMonth()"], "Fixed commit": "046688e39bc44ed20817df20550f6a936f3e6668", "Url": "https://api.github.com/repos/dft-bluebadge/citizen-webapp", "Date": "2018-09-28T09:30:52Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (end != 0) { attrSelector += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3184/buggy-version/src.main.java.com.hulu.ftl.formats.XMLFormat.java", "BodyUseAPI": [], "Fixed commit": "25637eb6f6400ddb7dd1f453a78b1e9969f53fd9", "Url": "https://api.github.com/repos/trevorgrayson/ftl", "Date": "2018-10-11T23:34:20Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Chess.Model.Moves.Move.differenceOnXCoordinate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (differenceOnXCoordinate > 1) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3848/buggy-version/src.main.java.Chess.Model.ChessPieces.Pawn.java", "BodyUseAPI": [], "Fixed commit": "db883ee532f54270b2c13b5a5954af51206a8865", "Url": "https://api.github.com/repos/chess-team/Chess", "Date": "2018-05-07T17:43:11Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Chess.Model.Moves.Move.differenceOnYCoordinate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (differenceOnYCoordinate != 1) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3848/buggy-version/src.main.java.Chess.Model.ChessPieces.Pawn.java", "BodyUseAPI": [], "Fixed commit": "db883ee532f54270b2c13b5a5954af51206a8865", "Url": "https://api.github.com/repos/chess-team/Chess", "Date": "2018-05-07T17:43:11Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (javax.swing.SwingUtilities.isEventDispatchThread()) { onEDT.run(); }else { try { javax.swing.SwingUtilities.invokeAndWait(onEDT); } catch (java.lang.reflect.InvocationTargetException | java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7854/buggy-version/src.main.java.ca.hedlund.desktopicons.DesktopIcons.java", "BodyUseAPI": [], "Fixed commit": "087be1742bd9bd1d98033b1e3a0a0532c4bc1bf9", "Url": "https://api.github.com/repos/ghedlund/desktopicons", "Date": "2018-02-05T13:43:42Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (javax.swing.SwingUtilities.isEventDispatchThread()) { onEDT.run(); }else { try { javax.swing.SwingUtilities.invokeAndWait(onEDT); } catch (java.lang.reflect.InvocationTargetException | java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7854/buggy-version/src.main.java.ca.hedlund.desktopicons.DesktopIcons.java", "BodyUseAPI": [], "Fixed commit": "087be1742bd9bd1d98033b1e3a0a0532c4bc1bf9", "Url": "https://api.github.com/repos/ghedlund/desktopicons", "Date": "2018-02-05T13:43:42Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (javax.swing.SwingUtilities.isEventDispatchThread()) { onEDT.run(); }else { try { javax.swing.SwingUtilities.invokeAndWait(onEDT); } catch (java.lang.reflect.InvocationTargetException | java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7854/buggy-version/src.main.java.ca.hedlund.desktopicons.DesktopIcons.java", "BodyUseAPI": [], "Fixed commit": "087be1742bd9bd1d98033b1e3a0a0532c4bc1bf9", "Url": "https://api.github.com/repos/ghedlund/desktopicons", "Date": "2018-02-05T13:43:42Z"},
{"Line": "=>586", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((trackViewModel.getTrackWithPoints().getValue().getTrackPoints().size()) > 1) { trackViewModel.saveToCloud(); android.content.Intent intent = com.awolity.trakr.view.detail.TrackDetailActivity.getStarterIntent(this, trackId); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4553/buggy-version/app.src.main.java.com.awolity.trakr.view.main.MainActivity.java", "BodyUseAPI": ["com.awolity.trakr.viewmodel.TrackViewModel.saveToCloud()"], "Fixed commit": "ae405987cfc0519e8111b289641b9f0bd26eba10", "Url": "https://api.github.com/repos/vokod/Trakr", "Date": "2018-06-12T14:28:38Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (inputstream != null) { propval = new java.util.Scanner(inputstream).useDelimiter(\"\\\\A\").next(); inputstream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5659/buggy-version/rootbeerlib.src.main.java.com.tab.ui.check.RootBeer.java", "BodyUseAPI": ["java.util.Scanner.next()", "java.util.Scanner.useDelimiter(java.lang.String)", "java.io.InputStream.close()"], "Fixed commit": "13916a4cef612d63937806eb2195ab57688bd8f0", "Url": "https://api.github.com/repos/atlantis0/rootbeer", "Date": "2018-08-03T09:32:26Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dashboardAddress) == null) { dashboardAddress = com.stackimpact.agent.Agent.SAAS_DASHBOARD_ADDRESS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6012/buggy-version/src.com.stackimpact.agent.Agent.java", "BodyUseAPI": [], "Fixed commit": "35dbde1675cdb3543d73d495c9e10f815dc456cb", "Url": "https://api.github.com/repos/stackimpact/stackimpact-java", "Date": "2018-09-13T14:38:04Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ImageView.getDrawable()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (oldDrawable instanceof android.graphics.drawable.LayerDrawable) { android.graphics.drawable.LayerDrawable oldLayerDrawable = ((android.graphics.drawable.LayerDrawable) (oldDrawable)); placeholder = oldLayerDrawable.getDrawable(0); }else { placeholder = imageView.getDrawable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4452/buggy-version/dali.src.main.java.at.favre.lib.dali.builder.blur.BlurBuilder.java", "BodyUseAPI": [], "Fixed commit": "af4d2845384c020f02511fc3a4f27af546eec64e", "Url": "https://api.github.com/repos/buptfarmer/Dali", "Date": "2018-04-19T13:37:23Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { return java.lang.Integer.compare(o1.state.getLayerIndex(), o2.state.getLayerIndex()); }else { if ((o1.state.getLayerIndex()) > (o2.state.getLayerIndex())) return 1; else if ((o1.state.getLayerIndex()) == (o2.state.getLayerIndex())) return 0; else return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5748/buggy-version/app.src.main.java.com.paulvarry.intra42.ui.Galaxy.java", "BodyUseAPI": [], "Fixed commit": "596be4adeafb294a6c0f928acfef503b7df3a41c", "Url": "https://api.github.com/repos/pvarry/intra42", "Date": "2018-05-18T15:00:39Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (until == null) { return errorServices.setMessage(\"No Number No Fun\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8334/buggy-version/week-09.day-01.REST.src.main.java.com.greenfoxacademy.rest.controllers.MainRestController.java", "BodyUseAPI": [], "Fixed commit": "56f5712349bc866f1e6a07c69d9e63fbaf7a92ec", "Url": "https://api.github.com/repos/green-fox-academy/Ldaruu", "Date": "2018-10-02T12:17:59Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(bindings.containsKey(key.getType()))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2068/buggy-version/src.main.java.io.github.hedgehog1029.frame.dispatcher.bindings.BindingList.java", "BodyUseAPI": [], "Fixed commit": "02bd66d6c1ec1d82509e54ff69942ded312eecc3", "Url": "https://api.github.com/repos/hedgehog1029/Frame", "Date": "2018-06-14T18:37:38Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lineageInfo.isPresent()) { lineageInfo.get().setSource(file.getSourceData(), newWorkUnit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8407/buggy-version/gobblin-data-management.src.main.java.org.apache.gobblin.data.management.copy.splitter.DistcpFileSplitter.java", "BodyUseAPI": ["lineageInfo.get().setSource(file.getSourceData(),org.apache.gobblin.configuration.WorkUnitState)", "com.google.common.base.Optional<org.apache.gobblin.metrics.event.lineage.LineageInfo>.get()"], "Fixed commit": "ac498873686a95c54e584acc228683afbfdf218d", "Url": "https://api.github.com/repos/cshen98/incubator-gobblin", "Date": "2018-10-05T01:40:26Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.cadrian.macchiato.interpreter.Context.eval(indexedExpression.getIndex())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (index == null) { throw new net.cadrian.macchiato.interpreter.InterpreterException(\"Cannot use inexistent index\", indexedExpression.position()); }else { throw new net.cadrian.macchiato.interpreter.InterpreterException(((\"Cannot use \" + (index.getClass().getSimpleName())) + \" as index\"), indexedExpression.position()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/206/buggy-version/Macchiato.src.java.net.cadrian.macchiato.interpreter.AssignmentVisitor.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getSimpleName()", "java.lang.Object.getClass()"], "Fixed commit": "b71dee051ea2eb63582605b6faf8909d800bb9f2", "Url": "https://api.github.com/repos/cadrian/macchiato", "Date": "2018-04-28T21:34:59Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i != (-1)) { fileName = fileName.substring(0, i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5283/buggy-version/src.com.delfin.jarexp.frame.search.ClassFileSearcher.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "d40db15fe93d57e6c663fc641aaa59a9a5c4876f", "Url": "https://api.github.com/repos/okiktev/jarexp", "Date": "2018-10-06T20:21:02Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dos.getTripped())) dos.setTripped(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/751/buggy-version/MetroData_Container.MetroData_Container.MetroData_Services.src.main.java.com.incture.metrodata.service.ContainerService.java", "BodyUseAPI": ["com.incture.metrodata.entity.DeliveryHeaderDo.setTripped(boolean)"], "Fixed commit": "2fe14be4e6660a3c758594f120353a0b89701836", "Url": "https://api.github.com/repos/amit48sabat/MetrodataNew", "Date": "2018-06-01T06:29:16Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bestBlock.getCumulativeDifficulty().equals(BigInteger.ZERO)) { bestBlock.setCumulativeDifficulty(this.repository.getBlockStore().getTotalDifficulty()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7671/buggy-version/modAionImpl.src.org.aion.zero.impl.AionHub.java", "BodyUseAPI": ["org.aion.zero.impl.types.AionBlock.setCumulativeDifficulty(this.repository.getBlockStore().getTotalDifficulty())"], "Fixed commit": "464b474acfe83dc886bd45895c8eba5166387b0d", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-06-13T16:21:21Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aion.zero.impl.config.CfgAion.getGenesis()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (genesis.getCumulativeDifficulty().equals(BigInteger.ZERO)) { genesis.setCumulativeDifficulty(genesis.getDifficultyBI()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7671/buggy-version/modAionImpl.src.org.aion.zero.impl.AionHub.java", "BodyUseAPI": ["org.aion.zero.impl.AionGenesis.getDifficultyBI()", "org.aion.zero.impl.AionGenesis.setCumulativeDifficulty(genesis.getDifficultyBI())"], "Fixed commit": "464b474acfe83dc886bd45895c8eba5166387b0d", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-06-13T16:21:21Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 5) { dataFormat = \"-c\"; }else { dataFormat = args[3]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7756/buggy-version/ner.src.main.java.edu.illinois.cs.cogcomp.ner.NerTagger.java", "BodyUseAPI": [], "Fixed commit": "31568485bd75e7d70ebe5c837c646c4fa2c1a9fa", "Url": "https://api.github.com/repos/mssammon/illinois-cogcomp-nlp-1", "Date": "2018-08-02T20:51:34Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.elmakers.mine.bukkit.wand.Wand.isSkill(itemStack)) { removeDrops.add(itemStack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9077/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.magic.listener.EntityController.java", "BodyUseAPI": ["java.util.List<org.bukkit.inventory.ItemStack>.add(org.bukkit.inventory.ItemStack)"], "Fixed commit": "72898accfae80c65e7d5e31339ee9cf2430a3cda", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2018-04-01T00:51:33Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tNode.children) != null) && ((tNode.children.size()) > 0)) { n.addAll(tNode.children.getValues()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8928/buggy-version/core.src.main.java.zemberek.core.collections.Trie.java", "BodyUseAPI": ["java.util.List<zemberek.core.collections.Trie.Node<T>>.addAll(tNode.children.getValues())", "zemberek.core.collections.IntMap<zemberek.core.collections.Trie.Node<T>>.getValues()"], "Fixed commit": "c39ff373cdd0094e3f01c45fa590f9bd2a574c47", "Url": "https://api.github.com/repos/burakisikli/zemberek-nlp", "Date": "2018-10-06T20:06:55Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((variants.length) != 0) { for (int i = 0; i < (variants.length); i++) { items.add(new net.minecraft.item.ItemStack(this, 1, i)); } }else { items.add(new net.minecraft.item.ItemStack(this, 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/264/buggy-version/src.main.java.gamehunt.gcore.items.BasicItem.java", "BodyUseAPI": [], "Fixed commit": "b641460d1be9691b9f9d7edb6acaed46abc807bc", "Url": "https://api.github.com/repos/gamehunt/GCore", "Date": "2018-09-22T12:10:42Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fragmentOptions.getOptionDefinition(name).getValidator().getOptionDescription()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (optionDescription == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7026/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.store.sys.ExtendedOptionIterator.java", "BodyUseAPI": [], "Fixed commit": "6bcaa7a6ff79ee4a1fb3df0c59026b572f57924f", "Url": "https://api.github.com/repos/kkhatua/drill", "Date": "2018-08-17T00:55:07Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bindingResult.hasErrors()) { model.addAttribute(\"role\", roleService.findByName(\"EMP\")); model.addAttribute(\"currentlogin\", currentLogin); return \"admin/editemployee\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6411/buggy-version/mediatheque-group3.src.main.java.com.mickaelbrenoit.web.controller.AdminController.java", "BodyUseAPI": [], "Fixed commit": "a7bdfba4de7faff41f55b50a6b53fad21837c035", "Url": "https://api.github.com/repos/MickaelBRENOIT/Mediatheque", "Date": "2018-01-21T21:28:32Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.HackerGamingCZ.HackerTools.HackerTools.getPlugin().getPlayerManager().getPlayer(e.getPlayer())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (htPlayer.getPlayer().isDead()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1067/buggy-version/src.main.java.cz.HackerGamingCZ.HackerTools.listeners.VoidDamage.java", "BodyUseAPI": [], "Fixed commit": "c906b6a784d505de9e4f2282576498d425a661b7", "Url": "https://api.github.com/repos/TomasCZE7/HackerTools", "Date": "2018-06-11T19:04:27Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bson.Document.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/328/buggy-version/src.main.java.com.mgackowski.mongoutil.DefaultDenormalizer.java", "BodyUseAPI": [], "Fixed commit": "73e760f44529fe106106c28346c12de43de225d8", "Url": "https://api.github.com/repos/mgackowski/mongodb-denormalizer", "Date": "2018-02-21T12:34:50Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (array == null) { throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/196/buggy-version/tehreer-android.src.main.java.com.mta.tehreer.internal.collections.JByteArrayIntList.java", "BodyUseAPI": [], "Fixed commit": "0e47b07ad70ee9d09e1cf04ab72c4ccee4f79419", "Url": "https://api.github.com/repos/mta452/Tehreer-Android", "Date": "2018-08-06T15:50:53Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gridsum.datadivertor.service.impl.DateUtil.dateToString(com.gridsum.datadivertor.service.impl.DateUtil.cst2gmt(batchInfo.getNextBatchEndTime()),DateUtil.SDF_DATETIME)", "com.gridsum.datadivertor.service.impl.DateUtil.dateToString(com.gridsum.datadivertor.service.impl.DateUtil.cst2gmt(dts.getFetchEndTime()),DateUtil.SDF_DATETIME)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fetchEndTime.equals(gmtNextBatchEndTime)) { this.parquetService.close(parquetInfo); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3024/buggy-version/src.main.java.com.gridsum.datadivertor.service.impl.QueryInfoCoreProcessServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "6c7905a326137ac7ab7ef52c8aafc8b8b6f03ab0", "Url": "https://api.github.com/repos/gridsum/IQD-divertor", "Date": "2018-04-17T07:08:52Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.oscarehr.common.dao.PropertyDao.checkByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((p != null) && ((p.getValue()) != null)) { itemsToRemove = p.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7857/buggy-version/src.main.java.org.oscarehr.managers.PreventionManager.java", "BodyUseAPI": ["org.oscarehr.common.model.Property.getValue()"], "Fixed commit": "c3beb3279c15e85d73844a35fc41ad80b98c809b", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2015-12-01T16:33:27Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(com.kymjs.common.StringUtils.isEmpty())) && (!(city.equals(com.ruitukeji.zwbs.common.KJActivityStack.create().topActivity().getString(R.string.locateFailure))))) { httpParams.put(\"city\", city); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1629/buggy-version/ZWBS-Android.app.src.main.java.com.ruitukeji.zwbs.main.GetOrderPresenter.java", "BodyUseAPI": ["com.kymjs.rxvolley.client.HttpParams.put(java.lang.String,java.lang.String)"], "Fixed commit": "e69b1d35dc747e4659edacd15f435a50bd8bf18e", "Url": "https://api.github.com/repos/921668753/wztx-driver-andriod", "Date": "2018-02-01T02:16:52Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (layoutSensitive) { this.parser = org.spoofax.jsglr2.JSGLR2.layoutSensitive(parseTable); }else { this.parser = org.spoofax.jsglr2.JSGLR2.standard(parseTable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1266/buggy-version/org.metaborg.spoofax.core.src.main.java.org.metaborg.spoofax.core.syntax.JSGLR2I.java", "BodyUseAPI": [], "Fixed commit": "0fa0f872ce359b0b61d2b2214c2488df722231ed", "Url": "https://api.github.com/repos/metaborg/spoofax", "Date": "2018-02-01T15:47:38Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.donateTime) != null) { object.put(\"donateTime\", getDisplayDate(this.donateTime)); }else { object.put(\"donateTime\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7898/buggy-version/giveitforward.src.main.java.giveitforward.models.Request.java", "BodyUseAPI": [], "Fixed commit": "c0d01edb4d0d3c50c1ba987fad9d541fb43bf3a2", "Url": "https://api.github.com/repos/GiveItForward/Server", "Date": "2018-02-21T04:24:36Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source.peekChar()) == ' ') { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1880/buggy-version/Chapter3.src.wci.frontend.java.JavaScanner.java", "BodyUseAPI": [], "Fixed commit": "657858f45dfea84361deb546de756db6536716c9", "Url": "https://api.github.com/repos/Andruxa0125/Compilers", "Date": "2018-09-11T03:11:38Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getDeclaringClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.lang.reflect.Modifier.isPublic(klass.getModifiers()))) { fm = new org.nutz.lang.reflect.FastMethodFactory.FallbackFastMethod(method); org.nutz.lang.reflect.FastMethodFactory.cache.put(className, fm); return fm; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/721/buggy-version/src.org.nutz.lang.reflect.FastMethodFactory.java", "BodyUseAPI": [], "Fixed commit": "afbb1aa6f335bcd916f15821b5d0006cdb21262b", "Url": "https://api.github.com/repos/FlakyTestDetection/nutz", "Date": "2018-01-12T07:45:06Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (totalTime == null) { totalTime = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6917/buggy-version/app.src.main.java.com.example.a96jsa.chronos_app.DatabaseHelper.java", "BodyUseAPI": [], "Fixed commit": "6db3ab377f5f7d70ddae338677b8b6c55aed885b", "Url": "https://api.github.com/repos/96jsalinas/Chronos_app", "Date": "2018-05-02T13:50:09Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isIgnore) { invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9334/buggy-version/wheelview.src.main.java.com.contrarywind.view.WheelView.java", "BodyUseAPI": [], "Fixed commit": "d6884097a29598e41d20ad8a052f77121e65d0f6", "Url": "https://api.github.com/repos/Bigkoo/Android-PickerView", "Date": "2018-03-31T09:14:37Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (userInfo == null) { chain.doFilter(request, response); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4685/buggy-version/src.main.java.com.peoplesoft.pt.custom.filter.PortalServletFilter.java", "BodyUseAPI": [], "Fixed commit": "22d0e152f62f3ebd72e5db7ffc08f7b9c23fd589", "Url": "https://api.github.com/repos/bloodmc/PortalServletFilter", "Date": "2018-05-14T17:46:47Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CommonDataKeys.EDITOR.getData(com.intellij.openapi.actionSystem.DataContext)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (editor == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5908/buggy-version/camel-idea-plugin.src.main.java.org.apache.camel.idea.refereance.CamelBeanReferenceRenameHandler.java", "BodyUseAPI": [], "Fixed commit": "91ecb1a894effd9228988bf74bf9243b9640caaa", "Url": "https://api.github.com/repos/fharms/camel-idea-plugin", "Date": "2018-03-03T10:58:34Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((preparedStatementBulkData.size()) < 1) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7484/buggy-version/src.me.mrCookieSlime.Slimefun.MySQL.Components.Table.java", "BodyUseAPI": [], "Fixed commit": "d89fb42b360457f3962c05b4ea6ad7cc61155f8c", "Url": "https://api.github.com/repos/freethemice/Slimefun4-1", "Date": "2018-09-28T18:18:15Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mEditTxt.getText().length()) > 0) { editTxtColorFlasher.start(); resTxtColorFlasher.start(); textClearer.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2310/buggy-version/app.src.main.java.com.example.harinie.calculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "993544530e60835d032b644ff83a5c6ca0439731", "Url": "https://api.github.com/repos/HarinieR/Calculator", "Date": "2018-08-12T06:43:10Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((alignmentRecord.getMapq()) != null) alignmentBuilder.setMappingQuality(alignmentRecord.getMapq());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9484/buggy-version/convert-ga4gh.src.main.java.org.bdgenomics.convert.ga4gh.AlignmentRecordToReadAlignment.java", "BodyUseAPI": ["LinearAlignment.Builder.setMappingQuality(alignmentRecord.getMapq())", "org.bdgenomics.formats.avro.AlignmentRecord.getMapq()"], "Fixed commit": "03f40d901095a7171246c5cb5bce34cb7e2d737f", "Url": "https://api.github.com/repos/heuermh/bdg-convert", "Date": "2018-02-27T20:22:22Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (threads.classes.DirectoryWatcherNew.lob_preventDuplicates.wasFileCreated(iob_file.toPath())) { threads.classes.DirectoryWatcherNew.lob_preventDuplicates.removeCreated(iob_file.toPath()); }else { models.classes.MappedFile lob_mappedFile = cache.FileMapperCache.getFileMapperCache().get(iob_file.toPath()); lob_mappedFile.setVersion(((lob_mappedFile.getVersion()) + 1)); threads.classes.ThreadManager.addCommandToFileManager(iob_file, FileManagerConstants.GC_UPLOAD_TO_SERVER, true, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7066/buggy-version/src.main.java.threads.classes.DirectoryWatcherNew.java", "BodyUseAPI": ["java.io.File.toPath()", "cache.FileMapperCache.getFileMapperCache().get(java.nio.file.Path)", "models.classes.PreventDuplicateOperation.removeCreated(java.nio.file.Path)", "java.io.File.toPath()", "threads.classes.ThreadManager.addCommandToFileManager(java.io.File,FileManagerConstants.GC_UPLOAD_TO_SERVER,boolean,boolean)"], "Fixed commit": "84113193e08ad3235f9124c1a9a6727bae95d4b9", "Url": "https://api.github.com/repos/Alexander-Lukacs/VFS_GUI", "Date": "2018-03-15T16:50:08Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["accounts.AccountManager.getAccount(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (account == null) { throw new org.springframework.orm.ObjectRetrievalFailureException(rewards.internal.account.Account.class, entityId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2240/buggy-version/lab.40-security.src.main.java.accounts.web.AccountController.java", "BodyUseAPI": [], "Fixed commit": "4c544db4572eb1d8089a6ff46f9448b7f625e24f", "Url": "https://api.github.com/repos/platform-acceleration-lab/core-spring-code", "Date": "2018-08-10T21:42:53Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (idx < 0) idx += 9;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6977/buggy-version/src.nuclear.slitherge.ui.TextureLoader.java", "BodyUseAPI": [], "Fixed commit": "cb1bc420c5b9545555304bf7f241e1bd6f763a3b", "Url": "https://api.github.com/repos/NuclearManD/JavaSlitherEngine", "Date": "2018-07-07T07:02:37Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getStmt()) == null) { if (!(currentBB.isHasJumpInst())) { currentBB.setJumpInst(new com.evensgn.emcompiler.frontend.IRJump(currentBB, stepBB)); } }else { node.getStmt().accept(this); if (!(currentBB.isHasJumpInst())) { currentBB.setJumpInst(new com.evensgn.emcompiler.frontend.IRJump(currentBB, stepBB)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4771/buggy-version/src.com.evensgn.emcompiler.frontend.IRBuilder.java", "BodyUseAPI": ["node.getStmt().accept(com.evensgn.emcompiler.frontend.IRBuilder)", "com.evensgn.emcompiler.frontend.ForStmtNode.getStmt()"], "Fixed commit": "d6e258baa7984f87746857e5813452299a712912", "Url": "https://api.github.com/repos/Evensgn/EM-Compiler", "Date": "2018-06-05T22:00:24Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) > 8) { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/971/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "95a0ea29c98f720a864211bbe3bc73349c4ade0e", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-sethmaxwl", "Date": "2018-10-05T13:41:36Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.seminor.murase.makoto.murasemakoto.MainActivity.findViewById(R.id.text_score)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((txtScore.getText()) == \"^[0-9]$\") { newScore = (java.lang.Integer.parseInt(txtScore.getText().toString())) + score; }else { newScore = score; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3015/buggy-version/app.src.main.java.com.example.seminor.murase.makoto.murasemakoto.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.getText()", "txtScore.getText().toString()", "java.lang.Integer.parseInt(txtScore.getText().toString())"], "Fixed commit": "b3db8892cda138ca354518b4ebd2ba83e36294e0", "Url": "https://api.github.com/repos/testsobal01/Intern180828", "Date": "2018-09-12T02:10:18Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (wheel.isPowered()) { wheel.getBody().applyForceToCenter(wheel.getBody().getWorldVector(baseVector), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/447/buggy-version/core.src.com.topdowncar.game.entities.Car.java", "BodyUseAPI": ["com.topdowncar.game.entities.Wheel.getBody()", "wheel.getBody().getWorldVector(com.badlogic.gdx.math.Vector2)", "wheel.getBody().applyForceToCenter(wheel.getBody().getWorldVector(baseVector),boolean)", "com.topdowncar.game.entities.Wheel.getBody()"], "Fixed commit": "974ec93ecb90e26b7059e1d3d9096c28ccf70198", "Url": "https://api.github.com/repos/bnovakovic/Box2d-Top-Down-Car-with-Drift", "Date": "2018-06-08T21:51:40Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((externalReference.getCodes()) != null) { externalReferenceDto.setCodes(mapCodeDtos(externalReference.getCodes(), false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9357/buggy-version/src.main.java.fi.vm.yti.codelist.intake.service.BaseService.java", "BodyUseAPI": ["fi.vm.yti.codelist.common.dto.ExternalReferenceDTO.setCodes(java.util.Set<fi.vm.yti.codelist.common.dto.CodeDTO>)", "fi.vm.yti.codelist.common.model.ExternalReference.getCodes()", "fi.vm.yti.codelist.intake.service.BaseService.mapCodeDtos(externalReference.getCodes(),boolean)"], "Fixed commit": "36e0967868d7ccacc9ca090cf3908e4c578bebd5", "Url": "https://api.github.com/repos/VRK-YTI/yti-codelist-content-intake-service", "Date": "2018-03-12T23:57:09Z"},
{"Line": "=>762", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERSANCTIONED.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode())) && ((waterConnectionDetails.getCloseConnectionType()) != null)) && (waterConnectionDetails.getCloseConnectionType().equals(org.egov.wtms.application.service.TEMPERARYCLOSECODE))) waterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.WORKFLOW_RECONNCTIONINITIATED, org.egov.wtms.application.service.MODULETYPE)); else if ((org.egov.wtms.application.service.WORKFLOW_RECONNCTIONINITIATED.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode())) && (waterConnectionDetails.getCloseConnectionType().equals(org.egov.wtms.application.service.TEMPERARYCLOSECODE))) waterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS__RECONNCTIONINPROGRESS, org.egov.wtms.application.service.MODULETYPE)); else if (((workFlowAction.equals(org.egov.wtms.application.service.APPROVEWORKFLOWACTION)) && (org.egov.wtms.application.service.APPLICATION_STATUS__RECONNCTIONINPROGRESS.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode()))) && (waterConnectionDetails.getCloseConnectionType().equals(org.egov.wtms.application.service.TEMPERARYCLOSECODE))) waterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS_RECONNDIGSIGNPENDING, org.egov.wtms.application.service.MODULETYPE)); else if (((workFlowAction.equals(org.egov.wtms.application.service.SIGNWORKFLOWACTION)) && (org.egov.wtms.application.service.APPLICATION_STATUS_RECONNDIGSIGNPENDING.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode()))) && (waterConnectionDetails.getCloseConnectionType().equals(org.egov.wtms.application.service.TEMPERARYCLOSECODE))) waterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS__RECONNCTIONSANCTIONED, org.egov.wtms.application.service.MODULETYPE));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2897/buggy-version/egov.egov-wtms.src.main.java.org.egov.wtms.application.service.WaterConnectionDetailsService.java", "BodyUseAPI": ["waterConnectionDetails.getCloseConnectionType().equals(org.egov.wtms.application.service.TEMPERARYCLOSECODE)", "org.egov.wtms.application.entity.WaterConnectionDetails.getStatus()", "org.egov.wtms.application.entity.WaterConnectionDetails.getCloseConnectionType()", "waterConnectionDetails.getStatus().getCode()", "org.egov.wtms.application.entity.WaterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS__RECONNCTIONINPROGRESS, org.egov.wtms.application.service.MODULETYPE))", "org.egov.wtms.application.entity.WaterConnectionDetails.getStatus()", "org.egov.wtms.application.service.WORKFLOW_RECONNCTIONINITIATED.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode())", "org.egov.wtms.application.entity.WaterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.WORKFLOW_RECONNCTIONINITIATED, org.egov.wtms.application.service.MODULETYPE))", "waterConnectionDetails.getCloseConnectionType().equals(org.egov.wtms.application.service.TEMPERARYCLOSECODE)", "org.egov.wtms.application.service.APPLICATION_STATUS_RECONNDIGSIGNPENDING.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode())", "waterConnectionDetails.getCloseConnectionType().equals(org.egov.wtms.application.service.TEMPERARYCLOSECODE)", "waterConnectionDetails.getStatus().getCode()", "waterConnectionDetails.getStatus().getCode()", "org.egov.wtms.application.entity.WaterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS__RECONNCTIONSANCTIONED, org.egov.wtms.application.service.MODULETYPE))", "org.egov.wtms.application.entity.WaterConnectionDetails.getCloseConnectionType()", "org.egov.wtms.application.service.APPLICATION_STATUS__RECONNCTIONINPROGRESS.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode())", "org.egov.wtms.application.entity.WaterConnectionDetails.getCloseConnectionType()", "org.egov.wtms.application.entity.WaterConnectionDetails.getStatus()", "org.egov.wtms.application.entity.WaterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS_RECONNDIGSIGNPENDING, org.egov.wtms.application.service.MODULETYPE))"], "Fixed commit": "48b5c346cbbef601c272b0feb943489f9fc5e969", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2018-04-12T08:30:17Z"},
{"Line": "=>736", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.egov.wtms.application.service.APPLICATION_STATUS_SANCTIONED.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode())) && ((waterConnectionDetails.getCloseConnectionType()) != null)) waterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERINITIATED, org.egov.wtms.application.service.MODULETYPE)); else if (((!(\"closeredit\".equals(mode))) && (org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERINITIATED.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode()))) && ((waterConnectionDetails.getCloseConnectionType()) != null)) waterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERINPROGRESS, org.egov.wtms.application.service.MODULETYPE)); else if (((workFlowAction.equals(org.egov.wtms.application.service.APPROVEWORKFLOWACTION)) && (org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERINPROGRESS.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode()))) && ((waterConnectionDetails.getCloseConnectionType()) != null)) waterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERDIGSIGNPENDING, org.egov.wtms.application.service.MODULETYPE)); else if (((workFlowAction.equals(org.egov.wtms.application.service.SIGNWORKFLOWACTION)) && (org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERDIGSIGNPENDING.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode()))) && ((waterConnectionDetails.getCloseConnectionType()) != null)) waterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERSANCTIONED, org.egov.wtms.application.service.MODULETYPE));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2897/buggy-version/egov.egov-wtms.src.main.java.org.egov.wtms.application.service.WaterConnectionDetailsService.java", "BodyUseAPI": ["org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERINITIATED.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode())", "waterConnectionDetails.getStatus().getCode()", "org.egov.wtms.application.entity.WaterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERDIGSIGNPENDING, org.egov.wtms.application.service.MODULETYPE))", "org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERINPROGRESS.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode())", "org.egov.wtms.application.entity.WaterConnectionDetails.getCloseConnectionType()", "org.egov.wtms.application.entity.WaterConnectionDetails.getStatus()", "org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERDIGSIGNPENDING.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode())", "org.egov.wtms.application.entity.WaterConnectionDetails.getStatus()", "org.egov.wtms.application.entity.WaterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERINITIATED, org.egov.wtms.application.service.MODULETYPE))", "org.egov.wtms.application.entity.WaterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERINPROGRESS, org.egov.wtms.application.service.MODULETYPE))", "waterConnectionDetails.getStatus().getCode()", "org.egov.wtms.application.entity.WaterConnectionDetails.getCloseConnectionType()", "waterConnectionDetails.getStatus().getCode()", "org.egov.wtms.application.entity.WaterConnectionDetails.getStatus()", "org.egov.wtms.application.entity.WaterConnectionDetails.getCloseConnectionType()", "org.egov.wtms.application.entity.WaterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERSANCTIONED, org.egov.wtms.application.service.MODULETYPE))"], "Fixed commit": "48b5c346cbbef601c272b0feb943489f9fc5e969", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2018-04-12T08:30:17Z"},
{"Line": "=>1149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cordova.inappbrowser.InAppBrowser.InAppBrowserClient.getString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (allowed != null) { allowedSchemes = allowed.split(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2602/buggy-version/src.android.InAppBrowser.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "945c7e38a37bc5aafbe7e5a991e6a967de502898", "Url": "https://api.github.com/repos/JorgeCoke/cordova-plugin-inappbrowser", "Date": "2018-08-22T16:40:52Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (parent != null) { if (java.nio.file.Files.notExists(parent)) { java.nio.file.Files.createDirectories(parent); } java.nio.file.Files.copy(srcInputStream, destPath, java.nio.file.StandardCopyOption.REPLACE_EXISTING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8435/buggy-version/compiler.ballerina-lang.src.main.java.org.wso2.ballerinalang.compiler.ZipUtils.java", "BodyUseAPI": ["java.nio.file.Files.createDirectories(java.nio.file.Path)", "java.nio.file.Files.notExists(java.nio.file.Path)"], "Fixed commit": "3cd83df2cbe9a77f4a073b354edc987bc561fbef", "Url": "https://api.github.com/repos/NatashaWso2/ballerina", "Date": "2018-03-18T10:15:02Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (picURL != null) { activeUser.setProfileImagePath(picURL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5742/buggy-version/src.main.java.model.MainModel.java", "BodyUseAPI": ["model.User.setProfileImagePath(java.lang.String)"], "Fixed commit": "c5003c7fcef18cd7dfdc35346036c0da188d1e72", "Url": "https://api.github.com/repos/JonathanKore/Basta_gruppen_LTD", "Date": "2018-10-21T20:55:12Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRewardedVideoAd) != null) mRewardedVideoAd.destroy(activity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2579/buggy-version/advertise_admob.src.main.java.com.joycastle.advertise.admob.AMAdvertiseHelper.java", "BodyUseAPI": [], "Fixed commit": "631753fb0a01f1fd8a94f7800dc40878c8cb41b8", "Url": "https://api.github.com/repos/ietstudio/GamePlugin-Android", "Date": "2018-08-27T03:31:22Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRewardedVideoAd) != null) mRewardedVideoAd.pause(activity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2579/buggy-version/advertise_admob.src.main.java.com.joycastle.advertise.admob.AMAdvertiseHelper.java", "BodyUseAPI": [], "Fixed commit": "631753fb0a01f1fd8a94f7800dc40878c8cb41b8", "Url": "https://api.github.com/repos/ietstudio/GamePlugin-Android", "Date": "2018-08-27T03:31:22Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRewardedVideoAd) != null) mRewardedVideoAd.resume(activity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2579/buggy-version/advertise_admob.src.main.java.com.joycastle.advertise.admob.AMAdvertiseHelper.java", "BodyUseAPI": [], "Fixed commit": "631753fb0a01f1fd8a94f7800dc40878c8cb41b8", "Url": "https://api.github.com/repos/ietstudio/GamePlugin-Android", "Date": "2018-08-27T03:31:22Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (model != null) { mDepartureTV.setText(java.lang.String.format(java.util.Locale.getDefault(), \"Departure Date: %s\", model.getDatetime())); mSourceTV.setText(model.getSource()); mDestTV.setText(model.getDestination()); int seatsAvailable = getAvailableSeats(model); mSeatsAvailable.setText(java.lang.String.format(java.util.Locale.getDefault(), \"Seats Available: %d\", seatsAvailable)); }else { android.widget.Toast.makeText(this, \"Some error occured!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2896/buggy-version/app.src.main.java.in.co.chicmic.flyoverairways.activities.ChooseFlightActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "in.co.chicmic.flyoverairways.activities.ChooseFlightActivity.getAvailableSeats(in.co.chicmic.flyoverairways.dataModels.FlightDataModel)", "in.co.chicmic.flyoverairways.dataModels.FlightDataModel.getDatetime()", "android.widget.TextView.setText(model.getDestination())", "in.co.chicmic.flyoverairways.dataModels.FlightDataModel.getDestination()", "java.lang.String.format(java.util.Locale,java.lang.String,model.getDatetime())", "android.widget.TextView.setText(model.getSource())", "in.co.chicmic.flyoverairways.dataModels.FlightDataModel.getSource()"], "Fixed commit": "f5cbf287e52a45a4b740e933d438143dc8a9b0ec", "Url": "https://api.github.com/repos/sonutiwari/FlyOverAirways", "Date": "2018-09-08T15:50:05Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (commentTmp.contains(\")\")) { commentTmp = commentTmp.substring(0, commentTmp.lastIndexOf(\")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6471/buggy-version/generator-web.src.main.java.com.softdev.system.generator.util.TableParseUtil.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "e68c2921b38a1c8786d31d8ea6a10c91a34e4592", "Url": "https://api.github.com/repos/moshowgame/SpringBootCodeGenerator", "Date": "2018-09-27T13:41:58Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["newLocationModel.mapboxNavigation().options()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(options.enableOffRouteDetection())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4133/buggy-version/libandroid-navigation.src.main.java.com.mapbox.services.android.navigation.v5.navigation.NavigationHelper.java", "BodyUseAPI": [], "Fixed commit": "f7ccce6ef4897d0e3ec640ba9877fc8a3e8f80cc", "Url": "https://api.github.com/repos/mapbox/mapbox-navigation-android", "Date": "2018-03-19T19:31:08Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jdk.vm.ci.meta.ResolvedJavaField.getJavaKind()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((fieldKind == (jdk.vm.ci.meta.JavaKind.Object)) && (!(field.getType().equals(kind.toBoxedJavaClass())))) { com.oracle.svm.reflect.hosted.ReflectionSubstitutionType.throwIllegalArgumentException(graphKit, (((\"cannot write field of type \" + (targetField.getJavaKind())) + \" with Field.\") + (method.getName()))); }else { value = com.oracle.svm.reflect.hosted.ReflectionSubstitutionType.doImplicitCast(graphKit, kind, fieldKind, value); graphKit.append(new org.graalvm.compiler.nodes.java.StoreFieldNode(receiver, targetField, value)); graphKit.createReturn(null, jdk.vm.ci.meta.JavaKind.Void); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9194/buggy-version/substratevm.src.com.oracle.svm.reflect.src.com.oracle.svm.reflect.hosted.ReflectionSubstitutionType.java", "BodyUseAPI": ["com.oracle.svm.reflect.hosted.ReflectionSubstitutionType.doImplicitCast(com.oracle.svm.hosted.phases.HostedGraphKit,jdk.vm.ci.meta.JavaKind,jdk.vm.ci.meta.JavaKind,org.graalvm.compiler.nodes.ValueNode)"], "Fixed commit": "0642b4f26e904fb2e3f59278667e042d5f7ecd51", "Url": "https://api.github.com/repos/oracle/graal", "Date": "2018-04-19T21:07:41Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["leaveRequestRepository.findById(id).get()", "isd.internship.ala.controllers.TokenService.isAdmin(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((foundLeaveRequest.getStatus().getId().equals(1)) && isAdmin) foundLeaveRequest.getUser().setAvailDays(((foundLeaveRequest.getUser().getAvailDays()) + requestedDays));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6858/buggy-version/backend.src.main.java.isd.internship.ala.controllers.LeaveRequestController.java", "BodyUseAPI": ["isd.internship.ala.controllers.LeaveRequest.getUser()", "foundLeaveRequest.getUser().getAvailDays()", "foundLeaveRequest.getUser().setAvailDays(((foundLeaveRequest.getUser().getAvailDays()) + requestedDays))", "isd.internship.ala.controllers.LeaveRequest.getUser()"], "Fixed commit": "64b0901a5954c86a785685db628ead4ff96affa4", "Url": "https://api.github.com/repos/isd-soft/annual-leave-assistant", "Date": "2018-07-13T09:37:54Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["leaveRequestRepository.findById(id).get()", "isd.internship.ala.controllers.TokenService.isAdmin(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((foundLeaveRequest.getStatus().getId().equals(1)) && isAdmin) foundLeaveRequest.getUser().setAvailDays(((foundLeaveRequest.getUser().getAvailDays()) - requestedDays));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6858/buggy-version/backend.src.main.java.isd.internship.ala.controllers.LeaveRequestController.java", "BodyUseAPI": ["isd.internship.ala.controllers.LeaveRequest.getUser()", "foundLeaveRequest.getUser().getAvailDays()", "isd.internship.ala.controllers.LeaveRequest.getUser()", "foundLeaveRequest.getUser().setAvailDays(((foundLeaveRequest.getUser().getAvailDays()) - requestedDays))"], "Fixed commit": "64b0901a5954c86a785685db628ead4ff96affa4", "Url": "https://api.github.com/repos/isd-soft/annual-leave-assistant", "Date": "2018-07-13T09:37:54Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entryOut.getMethod()) != (java.util.zip.ZipEntry.DEFLATED)) { entryOut.setMethod(java.util.zip.ZipEntry.DEFLATED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8883/buggy-version/stringfog-gradle-plugin.src.main.java.com.github.megatronking.stringfog.plugin.StringFogClassInjector.java", "BodyUseAPI": ["java.util.zip.ZipEntry.setMethod(int)"], "Fixed commit": "fe513c6189de8ee4392c6daf012bdfa31e4e2958", "Url": "https://api.github.com/repos/MegatronKing/StringFog", "Date": "2018-07-25T08:53:56Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(packageName.equals(com.mpeter.xrandomtweaks.xposed.CurrentApp.getPackageName()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/752/buggy-version/app.src.main.java.com.mpeter.xrandomtweaks.xposed.ModuleSettings.java", "BodyUseAPI": [], "Fixed commit": "aa8024c5a7cc3d7b8c330fea8fcd20597c0d82f6", "Url": "https://api.github.com/repos/MPeti1/xRandomTweaks", "Date": "2018-09-16T12:05:29Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["yasp.group.service.DataAccess.getAllLicenseSummaries()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((list.get(i).getSummary()) == id) { result.add(dao.getLicenseById(list.get(i).getLicense())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6040/buggy-version/license-tldr.src.main.java.yasp.group.service.Service.java", "BodyUseAPI": ["list.get(i).getLicense()", "java.util.List<yasp.group.service.LicenseSummary>.get(int)", "java.util.List<yasp.group.service.License>.add(dao.getLicenseById(list.get(i).getLicense()))", "yasp.group.service.DataAccess.getLicenseById(list.get(i).getLicense())"], "Fixed commit": "ad0b988fb75b6f4b900742745203da85ed8d429b", "Url": "https://api.github.com/repos/Hanicef/license-tldr", "Date": "2018-05-18T09:21:24Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["yasp.group.service.DataAccess.getAllLicenseSummaries()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((list.get(i).getLicense()) == id) { result.add(dao.getSummaryById(list.get(i).getSummary())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6040/buggy-version/license-tldr.src.main.java.yasp.group.service.Service.java", "BodyUseAPI": ["java.util.List<yasp.group.service.LicenseSummary>.get(int)", "yasp.group.service.DataAccess.getSummaryById(list.get(i).getSummary())", "java.util.List<yasp.group.service.Summary>.add(dao.getSummaryById(list.get(i).getSummary()))", "list.get(i).getSummary()"], "Fixed commit": "ad0b988fb75b6f4b900742745203da85ed8d429b", "Url": "https://api.github.com/repos/Hanicef/license-tldr", "Date": "2018-05-18T09:21:24Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((headerBytes.length) - headerByteLength) > 0) { requestBody = com.hibegin.common.util.BytesUtil.subBytes(headerBytes, headerByteLength, ((headerBytes.length) - headerByteLength)); }else { requestBody = new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/644/buggy-version/src.main.java.com.hibegin.http.server.impl.HttpRequestDecoderImpl.java", "BodyUseAPI": ["com.hibegin.common.util.BytesUtil.subBytes(byte[],int,int)"], "Fixed commit": "1106a3f6caec703a869601d0653cf9a9c5c6ef37", "Url": "https://api.github.com/repos/94fzb/simplewebserver", "Date": "2018-05-20T04:43:40Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.util.SparseArray<java.util.concurrent.Future>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (future != null) { future.cancel(true); futures.remove(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1274/buggy-version/speedlib.src.main.java.com.workdawn.speedlib.load.RequestTaskQueue.java", "BodyUseAPI": ["java.util.concurrent.Future.cancel(boolean)"], "Fixed commit": "3da941e4e7dbb2e97cea1ddd1fa7c3bb7b286e48", "Url": "https://api.github.com/repos/workdawn/Speed", "Date": "2018-05-19T03:02:06Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getErrorCode()) == (APISecurityConstants.API_AUTH_MISSING_CREDENTIALS)) { java.lang.String errorDescription = ((((org.wso2.carbon.apimgt.gateway.handlers.security.APISecurityConstants.getFailureMessageDetailDescription(e.getErrorCode(), e.getMessage())) + \"'\") + (authorizationHeader)) + \" : Bearer ACCESS_TOKEN\") + \"'\"; errorDetail.setText(errorDescription); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9629/buggy-version/components.apimgt.org.wso2.carbon.apimgt.gateway.src.main.java.org.wso2.carbon.apimgt.gateway.handlers.security.APIAuthenticationHandler.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.gateway.handlers.security.APISecurityException.getMessage()", "org.wso2.carbon.apimgt.gateway.handlers.security.APISecurityException.getErrorCode()", "org.wso2.carbon.apimgt.gateway.handlers.security.APISecurityConstants.getFailureMessageDetailDescription(e.getErrorCode(),e.getMessage())"], "Fixed commit": "13fc3179b33290195b96fe871ec3081495b27833", "Url": "https://api.github.com/repos/wso2/carbon-apimgt", "Date": "2018-10-11T05:52:05Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Package.getImplementationVersion()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (jomVersion != null) { if ((jomVersion.compareTo(minVersion)) < 0) { txt_info.append(((((((ERROR_HEADER) + \"JOM library version is below 0.2.0.2.\") + (NEW_LINE)) + \"Please update your library to continue, current version is: \") + jomVersion) + (NEW_LINE))); return; } }else { txt_info.append((((WARNING_HEADER) + \"JOM library version could not be detected. Correct functioning is not guaranteed.\") + (NEW_LINE))); txt_info.append(NEW_LINE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8502/buggy-version/Net2Plan-GUI.Net2Plan-GUI-Exec.src.main.java.com.net2plan.gui.utils.SolverCheckPanel.java", "BodyUseAPI": ["java.lang.String.compareTo(java.lang.String)", "javax.swing.JTextArea.append(java.lang.String)"], "Fixed commit": "b6613efd6a809d45dd481c9782e84f85f027ef4e", "Url": "https://api.github.com/repos/girtel/Net2Plan", "Date": "2018-10-02T08:15:47Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) startMainFragment();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1746/buggy-version/app.src.main.java.com.example.ahmedhamdy.prayertimes.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4f7d6e06eb4d40cdf7cfaf2d995186dd1555558a", "Url": "https://api.github.com/repos/ahmedgomaa27/PrayerTimes", "Date": "2018-02-10T11:57:15Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((leaseCandidate) != null) { deactivate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7849/buggy-version/hazelcast.src.main.java.com.obsidiandynamics.blackstrom.hazelcast.queue.DefaultSubscriber.java", "BodyUseAPI": [], "Fixed commit": "04755562a6b0f6202f886e1468d712e4f63f376d", "Url": "https://api.github.com/repos/obsidiandynamics/blackstrom", "Date": "2018-03-24T08:10:05Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cburch.logisim.tools.LibraryTools.getCircuitFromLibs(proj.getLogisimFile(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (circ != null) circ.Annotate(ClearExistingLabels, reporter, inLibrary);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2767/buggy-version/src.com.cburch.logisim.circuit.Circuit.java", "BodyUseAPI": ["com.cburch.logisim.circuit.Circuit.Annotate(boolean,com.bfh.logisim.fpgagui.FPGAReport,boolean)"], "Fixed commit": "c108b0d388aee85400e87cbf17f8e473e470d25c", "Url": "https://api.github.com/repos/reds-heig/logisim-evolution", "Date": "2018-10-20T22:29:10Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((parameters.qPts) < 2) || ((parameters.qPts) > (dataPoints.length))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/250/buggy-version/Decide.src.main.java.DD2480.decide.CMVHandler.java", "BodyUseAPI": [], "Fixed commit": "80e5c8c2925799f669ad974424fadcde8496b17d", "Url": "https://api.github.com/repos/fkam/DD2480-decide", "Date": "2018-03-15T20:48:41Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((parameters.quads) > 3) || ((parameters.quads) < 1)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/250/buggy-version/Decide.src.main.java.DD2480.decide.CMVHandler.java", "BodyUseAPI": [], "Fixed commit": "80e5c8c2925799f669ad974424fadcde8496b17d", "Url": "https://api.github.com/repos/fkam/DD2480-decide", "Date": "2018-03-15T20:48:41Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me.melijn.jda.commands.music.SPlayCommand.isConnectedOrConnecting(event, event.getGuild(), event.getMember().getVoiceState().getChannel())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2479/buggy-version/src.main.java.me.melijn.jda.commands.music.SummonCommand.java", "BodyUseAPI": [], "Fixed commit": "75fed61ff8392595d7db7b1bccf82ab5febbe45b", "Url": "https://api.github.com/repos/ToxicMushroom/Melijn", "Date": "2018-10-07T14:55:27Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTablet()) { android.support.v4.app.Fragment masterListFragment = new com.zandernickle.fallproject_pt1.MasterListFragment(); masterListFragment.setArguments(mBundle); com.zandernickle.fallproject_pt1.ReusableUtil.loadFragment(mFragmentManager, R.id.fl_fragment_placeholder_tablet_left, masterListFragment, \"TEST\", false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/350/buggy-version/app.src.main.java.com.zandernickle.fallproject_pt1.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "12350eee489878a726087ba969f167d36ef9f37f", "Url": "https://api.github.com/repos/znickle24/FallProject", "Date": "2018-10-16T22:57:58Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) { context.startForegroundService(eventService); }else { context.startService(eventService); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5662/buggy-version/app.src.main.java.io.github.mattlavallee.budgetbeaver.service.ReminderEventReceiver.java", "BodyUseAPI": [], "Fixed commit": "c78b7be1bf43ca40b697bb190595271c314fc37f", "Url": "https://api.github.com/repos/mattlavallee/budget-beaver", "Date": "2018-07-24T00:56:07Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(org.apache.commons.lang3.ArrayUtils.contains(excludeAttrs, GenericModel.ATTR_ID_VALUE))) { excludeAttrs = ((java.lang.String[]) (org.apache.commons.lang3.ArrayUtils.add(excludeAttrs, new java.lang.String[]{ GenericModel.ATTR_ID_VALUE }))); com.github.cimela.e.restaurant.base.model.ModelUtils.copyProperties(model, this, excludeAttrs); this.id = java.lang.String.valueOf(model.getId()); }else { com.github.cimela.e.restaurant.base.model.ModelUtils.copyProperties(model, this, excludeAttrs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/922/buggy-version/framework.model.src.main.java.com.github.cimela.e.restaurant.base.model.GenericModelVO.java", "BodyUseAPI": [], "Fixed commit": "a16aa79bd2866baf6bfbe8b4dc234097ec4d8095", "Url": "https://api.github.com/repos/cimela/e-restaurant", "Date": "2018-08-31T03:35:46Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m_history.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/864/buggy-version/src.campaignencyclopedia.display.NavigationPath.java", "BodyUseAPI": [], "Fixed commit": "c5ce6a22ef3fabaf451809ee6915757c77897188", "Url": "https://api.github.com/repos/KeithDeRuiter/Campaign-Encyclopedia", "Date": "2018-08-14T02:49:01Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (dp == null) { if (show_details) { details.add(this.getHttpDetails(\"Unexpected null datapoint encountered in set.\", dp)); } net.opentsdb.tsd.PutDataPointRpc.LOG.warn(\"Datapoint null was encountered in set.\"); net.opentsdb.tsd.PutDataPointRpc.illegal_arguments.incrementAndGet(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2379/buggy-version/src.tsd.PutDataPointRpc.java", "BodyUseAPI": ["net.opentsdb.tsd.PutDataPointRpc.getHttpDetails(java.lang.String,net.opentsdb.core.IncomingDataPoint)", "java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.Object>>.add(java.util.HashMap<java.lang.String, java.lang.Object>)"], "Fixed commit": "dab993b721ce70fa38e5e6245e2f6e34a4aedbf5", "Url": "https://api.github.com/repos/GreatSnoopy/opentsdb", "Date": "2018-09-19T08:38:07Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cell instanceof org.openl.rules.table.FormattedCell) { return ((org.openl.rules.table.FormattedCell) (cell)).getFormattedValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4892/buggy-version/STUDIO.org.openl.rules.tableeditor.src.org.openl.rules.table.xls.formatters.XlsDataFormatterFactory.java", "BodyUseAPI": [], "Fixed commit": "db77a1e04d85d4f22ea1c639a87caf2af1435508", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2018-04-09T09:44:39Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rule.debug) { logFileWrapper.debug(\"[PARSE] No item matches defined, skipped parsing item match\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3405/buggy-version/src.main.java.com.codetaylor.mc.dropt.modules.dropt.rule.parser.ParserRuleMatchItems.java", "BodyUseAPI": [], "Fixed commit": "6fe0fa4a5ebca2584a4a22a61f06a2dea0ce282d", "Url": "https://api.github.com/repos/codetaylor/dropt", "Date": "2018-01-10T01:40:32Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debug) { logFile.debug(\"[MATCH] [!!] Unable to find heldItemMainHand match\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3405/buggy-version/src.main.java.com.codetaylor.mc.dropt.modules.dropt.rule.data.RuleMatchHarvester.java", "BodyUseAPI": [], "Fixed commit": "6fe0fa4a5ebca2584a4a22a61f06a2dea0ce282d", "Url": "https://api.github.com/repos/codetaylor/dropt", "Date": "2018-01-10T01:40:32Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debug) { logFile.debug(\"[MATCH] [!!] Harvester is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3405/buggy-version/src.main.java.com.codetaylor.mc.dropt.modules.dropt.rule.data.RuleMatchHarvester.java", "BodyUseAPI": [], "Fixed commit": "6fe0fa4a5ebca2584a4a22a61f06a2dea0ce282d", "Url": "https://api.github.com/repos/codetaylor/dropt", "Date": "2018-01-10T01:40:32Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!trailingSlash) { templateStr = templateStr.substring(0, ((templateStr.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3596/buggy-version/lighter-annotations.src.main.java.fun.connor.lighter.processor.model.Route.java", "BodyUseAPI": [], "Fixed commit": "cbcc81254dc06761b1b01372c14d4ba1c074feae", "Url": "https://api.github.com/repos/Spaceman1701/lighter", "Date": "2018-10-29T19:14:27Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (detectedLanguageObj != null) { languageDetectedCode = detectedLanguageObj.get(\"code\"); languageDetectedName = detectedLanguageObj.get(\"name\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2122/buggy-version/languagetool-http-client.src.main.java.org.languagetool.remote.RemoteLanguageTool.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "31fd5bfb1fc8dc5dc0f0eaaa6f6b386e6db20812", "Url": "https://api.github.com/repos/fabrichter/languagetool", "Date": "2018-08-15T12:39:56Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hankerzheng.tddleet.UnionFind.find(int)", "com.hankerzheng.tddleet.UnionFind.find(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parentA != parentB) { status[parentA] += status[parentB]; status[parentB] = parentA; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3425/buggy-version/src.main.java.com.hankerzheng.tddleet.UnionFind.java", "BodyUseAPI": [], "Fixed commit": "e98f9579ab276d76c8ae01ab5b1fe0a30ee95f7f", "Url": "https://api.github.com/repos/HankerZheng/TDD-LeetCode-Problems", "Date": "2018-01-16T09:28:42Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.mit.broad.genome.utils.SystemUtils.isMac()) { java.awt.Taskbar.getTaskbar().setIconImage(image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3127/buggy-version/src.main.java9.org.broad.gsea.ui.DesktopIntegration.java", "BodyUseAPI": [], "Fixed commit": "db648bb70f09eccefa403670fbbe1ec087418f9c", "Url": "https://api.github.com/repos/GSEA-MSigDB/gsea-desktop", "Date": "2018-08-30T01:41:22Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((onDownPosition.getNumber()) <= 9) && ((onDownPosition.getLetter()) <= 9)) && ((onDownPosition.getLetter()) >= 1)) && ((onDownPosition.getNumber()) >= 1)) { if (((isAmITeamA()) && (isTeamATurn())) || ((!(isAmITeamA())) && (!(isTeamATurn())))) { if (!(firedPositionsTemp.contains(onDownPosition))) firedPositionsTemp.add(onDownPosition); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5175/buggy-version/app.src.main.java.com.example.brunocoelho.navalbattle.Game.NavalBattleGame.java", "BodyUseAPI": ["java.util.ArrayList<com.example.brunocoelho.navalbattle.Game.Models.Position>.contains(com.example.brunocoelho.navalbattle.Game.Models.Position)", "java.util.ArrayList<com.example.brunocoelho.navalbattle.Game.Models.Position>.add(com.example.brunocoelho.navalbattle.Game.Models.Position)"], "Fixed commit": "04289c5f0402d944332760c588fd8c2fcd9e0ce1", "Url": "https://api.github.com/repos/brunocoelho1997/NavalBattleGame", "Date": "2018-08-01T18:58:44Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPresenter()) != null) getPresenter().setUI(this); else dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7673/buggy-version/mvprxdialog.src.main.java.com.kivsw.mvprxdialog.BaseMvpFragment.java", "BodyUseAPI": [], "Fixed commit": "9622e87026fd01e75040d60056a171dc6ac662b0", "Url": "https://api.github.com/repos/IvanKovalchuk/MvpRxDialogSample", "Date": "2018-06-05T13:12:46Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPresenter()) != null) getPresenter().removeUI();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7673/buggy-version/mvprxdialog.src.main.java.com.kivsw.mvprxdialog.BaseMvpFragment.java", "BodyUseAPI": [], "Fixed commit": "9622e87026fd01e75040d60056a171dc6ac662b0", "Url": "https://api.github.com/repos/IvanKovalchuk/MvpRxDialogSample", "Date": "2018-06-05T13:12:46Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.lastRecycledId) != (this.recycleId)) { throw new java.lang.IllegalStateException(\"recycled already\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7575/buggy-version/common.src.main.java.io.netty.util.Recycler.java", "BodyUseAPI": [], "Fixed commit": "bd893315164998a45cc12edb1ef21d91e4fe262d", "Url": "https://api.github.com/repos/zhaojigang/netty", "Date": "2018-08-24T13:05:01Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getBishND(year)) < 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7598/buggy-version/Ex_204_Anlagen.src.Anlage.java", "BodyUseAPI": [], "Fixed commit": "7f53081f810cd2c60656d97627eb2ca4c47b9e83", "Url": "https://api.github.com/repos/neukoc16/Ex_204_Anlag", "Date": "2018-10-09T08:27:16Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getBishND(year)) > (nutzungsdauer)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7598/buggy-version/Ex_204_Anlagen.src.Anlage.java", "BodyUseAPI": [], "Fixed commit": "7f53081f810cd2c60656d97627eb2ca4c47b9e83", "Url": "https://api.github.com/repos/neukoc16/Ex_204_Anlag", "Date": "2018-10-09T08:27:16Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentMessage.getText().toString().isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7122/buggy-version/app.src.main.java.com.example.erez0_000.ex1.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "43511f832e31a3a31e81e992d3e9dd64548011c0", "Url": "https://api.github.com/repos/erezKaufman/HUJI.COURSE.POSTPC_EX1", "Date": "2018-04-20T13:26:00Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["target.getPageParameters().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((mailServerSize != null) && ((mailServerSize.toString()) != null)) { params.add(com.evolveum.midpoint.web.page.admin.configuration.PageSystemConfiguration.SERVER_LIST_SIZE, mailServerSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8984/buggy-version/gui.admin-gui.src.main.java.com.evolveum.midpoint.web.page.admin.configuration.PageSystemConfiguration.java", "BodyUseAPI": ["org.apache.wicket.request.mapper.parameter.PageParameters.add(java.lang.String,org.apache.wicket.util.string.StringValue)"], "Fixed commit": "07f39659bd3fe6245d49720773e324fe77c8fead", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2018-02-28T12:50:11Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tags == null) { return mappedTags; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4863/buggy-version/src.main.java.com.deepoove.swagger.diff.compare.SpecificationDiff.java", "BodyUseAPI": [], "Fixed commit": "a7521eea49e225091d2c85f2839781698a84c313", "Url": "https://api.github.com/repos/emm035/swagger-diff", "Date": "2018-09-11T14:35:03Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (initialDbVersion.startsWith(org.craftercms.studio.impl.v2.dal.DataSourceInitializerImpl.DB_VERSION_3_0_X)) { attribute.setValue(org.apache.commons.lang3.StringUtils.lowerCase(((siteId + \"_\") + name))); }else { attribute.setValue(org.apache.commons.lang3.StringUtils.lowerCase(name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8464/buggy-version/src.main.java.org.craftercms.studio.impl.v2.dal.DataSourceInitializerImpl.java", "BodyUseAPI": [], "Fixed commit": "a77e8b0a790f158738e1cf7514668c0d8af74919", "Url": "https://api.github.com/repos/craftercms/studio", "Date": "2018-09-07T18:25:18Z"},
{"Line": "=>655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dialog_salesOrder.SalesOrder_ReturnForm.tbl_ReturnList.getRowCount()) == 0) dialog_salesOrder.SalesOrder_ReturnForm.txt_ReturnSONo.setText(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2219/buggy-version/src.dialog_salesOrder.SalesOrder_ReturnForm.java", "BodyUseAPI": [], "Fixed commit": "863b1777900c288925f2d5a8704e579e5240b77d", "Url": "https://api.github.com/repos/rochiey/ICMCommercial", "Date": "2018-05-20T06:02:12Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (userId != null) android.util.Log.i(\"ADYO_USER_ID\", userId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4891/buggy-version/adyoandroidsdk.src.main.java.za.co.adyo.android.requests.PlacementRequestParams.java", "BodyUseAPI": [], "Fixed commit": "b64977a284315ffa61433535c143b66b9c9a7fe8", "Url": "https://api.github.com/repos/AdyoOrg/adyo-android", "Date": "2018-08-13T13:51:58Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((req.getSortBy()) == null) { if (!(org.apache.commons.lang3.StringUtils.isBlank(req.getQ()))) { req.setSortBy(DatasetSearchRequest.SortBy.RELEVANCE); }else { req.setSortBy(DatasetSearchRequest.SortBy.KEY); } }else if (((req.getSortBy()) == (DatasetSearchRequest.SortBy.RELEVANCE)) && (org.apache.commons.lang3.StringUtils.isBlank(req.getQ()))) { req.setQ(null); req.setSortBy(DatasetSearchRequest.SortBy.KEY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5160/buggy-version/colplus-dao.src.main.java.org.col.db.dao.DatasetDao.java", "BodyUseAPI": ["org.col.api.search.DatasetSearchRequest.setQ(<nulltype>)", "org.col.api.search.DatasetSearchRequest.getQ()", "org.col.api.search.DatasetSearchRequest.getQ()", "org.col.api.search.DatasetSearchRequest.setSortBy(DatasetSearchRequest.SortBy.RELEVANCE)", "org.col.api.search.DatasetSearchRequest.setSortBy(DatasetSearchRequest.SortBy.KEY)", "org.apache.commons.lang3.StringUtils.isBlank(req.getQ())", "org.col.api.search.DatasetSearchRequest.setSortBy(DatasetSearchRequest.SortBy.KEY)", "org.apache.commons.lang3.StringUtils.isBlank(req.getQ())", "org.col.api.search.DatasetSearchRequest.getSortBy()"], "Fixed commit": "e4a7f3e042486ccaed874c7db7f5c7898ee6d4d1", "Url": "https://api.github.com/repos/Sp2000/colplus-backend", "Date": "2018-09-19T15:13:47Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.stepik.topstepikcourses.StepikCourseStatistic.getCourseListFromStepik()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (numberOfTopCourses > (courseList.size())) { numberOfTopCourses = courseList.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7592/buggy-version/src.main.java.org.stepik.topstepikcourses.StepikCourseStatistic.java", "BodyUseAPI": ["java.util.List<org.stepik.topstepikcourses.dto.Course>.size()"], "Fixed commit": "dd5dce66261a1a40166c345da2cc85b146164507", "Url": "https://api.github.com/repos/MouseSan/TopStepikCourses", "Date": "2018-05-06T21:07:01Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((let.isEmpty()) || (let.equals(\" \")))) wordsSet.add(let.trim());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5957/buggy-version/src.main.java.com.epam.homework.Task4.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "ed094139498a51e991e35426396174a096b9278c", "Url": "https://api.github.com/repos/TarasKobzar/epam-core-04-2018", "Date": "2018-04-21T08:20:30Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.code()) == 200) { fr.stevenfrancony.invaders.managers.ManagerSharedPreferences.setCurrentUsername(getApplicationContext(), headerResponse.getUsername()); mUsername.setText((((getString(R.string.menuUsername)) + \" \") + (headerResponse.getUsername()))); mPoints.setText((((getString(R.string.menuPoints)) + \" \") + (java.lang.Long.toString(headerResponse.getPoints())))); mMineralsInfos.setTitle((((getString(R.string.menuMinerals)) + \" \") + (java.lang.Integer.toString(headerResponse.getMinerals())))); mGasInfos.setTitle((((getString(R.string.menuGas)) + \" \") + (java.lang.Integer.toString(headerResponse.getGas())))); }else { getHeaderInfos(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4983/buggy-version/app.src.main.java.fr.stevenfrancony.invaders.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "73c07f1a74710e2ffa0aca6fed76d4c1c4722546", "Url": "https://api.github.com/repos/WestFR/Invaders-Android", "Date": "2018-05-15T09:49:27Z"},
{"Line": "=>946", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (childFacet.isLocalFacet()) { navigateContextualFacet(childFacet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9741/buggy-version/schema-compiler.src.main.java.org.opentravel.schemacompiler.visitor.ModelNavigator.java", "BodyUseAPI": ["org.opentravel.schemacompiler.visitor.ModelNavigator.navigateContextualFacet(org.opentravel.schemacompiler.model.TLContextualFacet)"], "Fixed commit": "cb5d169d7acfdbf94f9246a7f2c7649694ef458a", "Url": "https://api.github.com/repos/OpenTravel/OTM-DE-Compiler", "Date": "2018-07-19T12:12:01Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.identity.user.store.configuration.UserStoreConfigAdminService.getUniqueIDFromUserDTO(org.wso2.carbon.identity.user.store.configuration.dto.PropertyDTO[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (uniqueID == null) { throw new org.wso2.carbon.identity.user.store.configuration.utils.IdentityUserStoreMgtException(\"UniqueID property is not provided.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/234/buggy-version/components.user-store.org.wso2.carbon.identity.user.store.configuration.src.main.java.org.wso2.carbon.identity.user.store.configuration.UserStoreConfigAdminService.java", "BodyUseAPI": [], "Fixed commit": "42dc6c57931b59fbe170554eb89e837ca0f8bfcd", "Url": "https://api.github.com/repos/wso2/carbon-identity-framework", "Date": "2018-03-01T08:57:48Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tupleMap.get(\"phoClE/D\")) == null) eCut = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/370/buggy-version/analysis.src.main.java.org.hps.analysis.tuple.WABTupleDriver.java", "BodyUseAPI": [], "Fixed commit": "b1b2ac842988b0d2266714325059daa081f4cf9e", "Url": "https://api.github.com/repos/JeffersonLab/hps-java", "Date": "2018-02-01T09:35:18Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tupleMap.get(\"eleP/D\")) == null) eCut = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/370/buggy-version/analysis.src.main.java.org.hps.analysis.tuple.WABTupleDriver.java", "BodyUseAPI": [], "Fixed commit": "b1b2ac842988b0d2266714325059daa081f4cf9e", "Url": "https://api.github.com/repos/JeffersonLab/hps-java", "Date": "2018-02-01T09:35:18Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eCut == true) eCut = (((tupleMap.get(\"eleP/D\")) + (tupleMap.get(\"phoClE/D\"))) > ((tupleMinECut) * (ebeam))) && (((tupleMap.get(\"eleP/D\")) + (tupleMap.get(\"phoClE/D\"))) < ((tupleMaxECut) * (ebeam)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/370/buggy-version/analysis.src.main.java.org.hps.analysis.tuple.WABTupleDriver.java", "BodyUseAPI": [], "Fixed commit": "b1b2ac842988b0d2266714325059daa081f4cf9e", "Url": "https://api.github.com/repos/JeffersonLab/hps-java", "Date": "2018-02-01T09:35:18Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRequest) instanceof org.apache.httpcore.HttpEntityEnclosingRequest) { org.apache.httpcore.HttpEntityEnclosingRequest request = ((org.apache.httpcore.HttpEntityEnclosingRequest) (mRequest)); org.apache.httpcore.HttpEntity entity = request.getEntity(); if (entity == null) return null; return new com.yanzhenjie.andserver.http.StandardRequest.EntityToBody(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4484/buggy-version/api.src.main.java.com.yanzhenjie.andserver.http.StandardRequest.java", "BodyUseAPI": [], "Fixed commit": "4bad646a11c1dd446e1597f62e340c259a346659", "Url": "https://api.github.com/repos/yanzhenjie/AndServer", "Date": "2018-10-23T09:11:26Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MaxMB > 1) MaxMB = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5045/buggy-version/src.main.java.com.github.junrar.unpack.ppm.ModelPPM.java", "BodyUseAPI": [], "Fixed commit": "3ba451c5774f846228c98a6e231234ac1c0f048e", "Url": "https://api.github.com/repos/sethchhim/junrar", "Date": "2018-07-15T02:32:07Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPresenter) != null) mPresenter.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6211/buggy-version/app.src.main.java.thhsu.chloe.jeeva.JobDetails.JobDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "e34401b516123459dbb9f3b457d0978a91dd62dd", "Url": "https://api.github.com/repos/chloe722/Jeeva", "Date": "2018-05-08T15:25:41Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPresenter) != null) mPresenter.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6211/buggy-version/app.src.main.java.thhsu.chloe.jeeva.JobDetails.JobDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "e34401b516123459dbb9f3b457d0978a91dd62dd", "Url": "https://api.github.com/repos/chloe722/Jeeva", "Date": "2018-05-08T15:25:41Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.anuke.mindustry.entities.TileEntity.tile(((tile.x) + (point.x)),((tile.y) + (point.y)))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (other == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/169/buggy-version/core.src.io.anuke.mindustry.entities.TileEntity.java", "BodyUseAPI": [], "Fixed commit": "c9a53aed7bf193b2502aa96adc318e71ceb0d709", "Url": "https://api.github.com/repos/Bombbird2001/Mindustry", "Date": "2018-09-19T21:36:58Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scope.isDefined(ctx.ID().getText())) { t1 = scope.getType(ctx.ID().getText()); }else { t1 = globalScope.getType(ctx.ID().getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4843/buggy-version/src.checker.Checker.java", "BodyUseAPI": ["ctx.ID().getText()", "checker.Scope.getType(ctx.ID().getText())", "checker.Scope.getType(ctx.ID().getText())", "checker.VarAssignContext.ID()", "ctx.ID().getText()", "checker.VarAssignContext.ID()"], "Fixed commit": "1e2b56b54642fbb4bb8586a8be5cd5d68725c3c7", "Url": "https://api.github.com/repos/fabian43267/FinalProject", "Date": "2018-07-05T15:28:50Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.scu.my_shop.dao.ImageMapper.selectByPrimaryKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (image == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6808/buggy-version/src.main.java.edu.scu.my_shop.service.FileService.java", "BodyUseAPI": [], "Fixed commit": "676b5b3d5d383b544b85d388435e6b979560de6e", "Url": "https://api.github.com/repos/lazyZhou1997/MyShop", "Date": "2018-03-19T13:23:14Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((++tries) == 100) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9116/buggy-version/core.src.com.tann.dice.gameplay.fightLog.Spellbook.java", "BodyUseAPI": [], "Fixed commit": "71a840c88bc47dce13bd4aff710c945b86d638d4", "Url": "https://api.github.com/repos/ColourTann/Dicegeon", "Date": "2018-09-15T22:17:53Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(org.apache.commons.io.FilenameUtils.getExtension(file.getName()).equals(\".csv\"))) { file.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6624/buggy-version/ElectiSim.src.main.java.org.upmc.electisim.output.StateFileWriter.java", "BodyUseAPI": [], "Fixed commit": "740cf02655b59dd66944911ef75dd35e01f54da1", "Url": "https://api.github.com/repos/Redchards/VIC", "Date": "2018-04-20T22:30:22Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.PersonAttribute.getAttributeType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((attributeType.getPersonAttributeTypeId()) == 29) { model.addAttribute(\"dohId\", pa.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2154/buggy-version/omod.src.main.java.org.openmrs.module.billing.web.controller.main.BillableServiceBillListForOrderController.java", "BodyUseAPI": [], "Fixed commit": "fa1b87891574ff2cc32f6320f2ef4045f29d1e58", "Url": "https://api.github.com/repos/hispindia/his-billing", "Date": "2018-01-08T11:49:07Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.PersonAttribute.getAttributeType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((attributeType.getPersonAttributeTypeId()) == 29) { model.addAttribute(\"dohId\", pa.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2154/buggy-version/omod.src.main.java.org.openmrs.module.billing.web.controller.main.BillableServiceBillListController.java", "BodyUseAPI": [], "Fixed commit": "fa1b87891574ff2cc32f6320f2ef4045f29d1e58", "Url": "https://api.github.com/repos/hispindia/his-billing", "Date": "2018-01-08T11:49:07Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SettingsManager.data.getString(((player.getName()) + \".advice of valks\")).replace(\"[\", \"\").replace(\"]\", \"\").split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((temp.length) > 1) { for (int i = 0; i < (temp.length); i++) { try { adviceOfValks.add(java.lang.Integer.parseInt(temp[i])); } catch (java.lang.Exception e) { org.bukkit.Bukkit.getLogger().severe((((\"Error in loading \" + (player.getName())) + \"'s\") + \" failstack.\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5370/buggy-version/src.main.java.org.pixeltime.enchantmentsenhance.event.blacksmith.SecretBook.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.util.List<java.lang.Integer>.add(int)"], "Fixed commit": "ab142604f5f3e062c91eddb3fbbd373997f3812d", "Url": "https://api.github.com/repos/25/EnchantmentsEnhance", "Date": "2018-05-26T01:23:29Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(movementService.checkEmployeeExists(movementRequest))) transferEmployee(movementRequest);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4284/buggy-version/hr.hr-employee-movement.src.main.java.org.egov.eis.repository.MovementRepository.java", "BodyUseAPI": ["org.egov.eis.repository.MovementRepository.transferEmployee(org.egov.eis.repository.MovementRequest)"], "Fixed commit": "19b40bbb5e7e9827dadded7a140a9ea807760994", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2018-09-12T08:57:23Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResources().getString(R.string.hockey_key)) == 32) { net.hockeyapp.android.CrashManager.register(this, getResources().getString(R.string.hockey_key), new com.pushapp.press.HomeActivity.MyCrashManagerListener()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1179/buggy-version/app.src.main.java.com.pushapp.press.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "0d772435ecb3555896ae519453a5722f39f1dacb", "Url": "https://api.github.com/repos/PushOCCRP/Push-Android", "Date": "2018-05-21T05:56:30Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getParameter(\"rotation\")) == null) { rotation = false; }else if (request.getParameter(\"rotation\").contains(\"on\")) { rotation = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2247/buggy-version/src.main.java.servlet.BuildServlet.java", "BodyUseAPI": ["request.getParameter(\"rotation\").contains(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "c08bd95a6c26bc4e7cd79ef09d8defc9e2b5e3ce", "Url": "https://api.github.com/repos/MosaicsCollageGenerator/Sprint1Mosaicss", "Date": "2018-04-16T02:56:02Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getParameter(\"border\")) == null) { border = false; }else if (request.getParameter(\"border\").contains(\"on\")) { border = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2247/buggy-version/src.main.java.servlet.BuildServlet.java", "BodyUseAPI": ["request.getParameter(\"border\").contains(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "c08bd95a6c26bc4e7cd79ef09d8defc9e2b5e3ce", "Url": "https://api.github.com/repos/MosaicsCollageGenerator/Sprint1Mosaicss", "Date": "2018-04-16T02:56:02Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<UnVerifyUserListResponse.Data>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(item.getProfilePic())) { aQuery.id(holder.binding.profilePic).image(R.mipmap.ic_launcher_round); }else { aQuery.id(holder.binding.profilePic).image(item.getProfilePic(), true, true, 60, R.mipmap.ic_launcher_round); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/214/buggy-version/app.src.main.java.com.stufeed.android.view.adapter.VerificationListAdapter.java", "BodyUseAPI": ["UnVerifyUserListResponse.Data.getProfilePic()", "aQuery.id(holder.binding.profilePic).image(item.getProfilePic(),boolean,boolean,int,R.mipmap.ic_launcher_round)"], "Fixed commit": "8809ca6b6940c379eee378c5ca9f80510295ac24", "Url": "https://api.github.com/repos/deepak-gehlot/Stufeed_App", "Date": "2018-07-25T07:57:49Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((headerBytes.length) - headerByteLength) > 0) { requestBody = com.hibegin.common.util.BytesUtil.subBytes(headerBytes, headerByteLength, ((headerBytes.length) - headerByteLength)); }else { requestBody = new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6184/buggy-version/src.main.java.com.hibegin.http.server.impl.HttpRequestDecoderImpl.java", "BodyUseAPI": ["com.hibegin.common.util.BytesUtil.subBytes(byte[],int,int)"], "Fixed commit": "8f05f9595e93b48ac113187732215168adf6ea0d", "Url": "https://api.github.com/repos/94fzb/simplewebserver", "Date": "2018-05-20T04:43:40Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (unoSurface.checkIsASelection()) { this.game.sendAction(new edu.up.cs301.Uno.actionMsg.PlaceCardAction(this, unoSurface.getCardIndex())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6265/buggy-version/app.src.main.java.edu.up.cs301.Uno.UnoHumanPlayer.java", "BodyUseAPI": ["edu.up.cs301.Uno.UnoGameView.getCardIndex()", "this.game.sendAction(edu.up.cs301.Uno.actionMsg.PlaceCardAction)"], "Fixed commit": "10b8462e4e700d43ad351674e22b40e69ae00039", "Url": "https://api.github.com/repos/mfredenberg/UnoGame1", "Date": "2018-04-13T00:36:05Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((build.getBranch()) != null) { Loggers.SERVER.info((\"buildFinished: branch name=\" + (build.getBranch().getName()))); Loggers.SERVER.info((\"buildFinished: branch displayName=\" + (build.getBranch().getDisplayName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3927/buggy-version/autopin-server.src.main.java.com.github.ocroquette.teamcity.autopin.AutopinBuildServerListener.java", "BodyUseAPI": ["build.getBranch().getDisplayName()", "Loggers.SERVER.info((\"buildFinished: branch name=\" + (build.getBranch().getName())))", "com.github.ocroquette.teamcity.autopin.SRunningBuild.getBranch()", "Loggers.SERVER.info((\"buildFinished: branch displayName=\" + (build.getBranch().getDisplayName())))", "com.github.ocroquette.teamcity.autopin.SRunningBuild.getBranch()", "build.getBranch().getName()"], "Fixed commit": "2fb276fd068830f2e4ccb626165359b42f8c62b9", "Url": "https://api.github.com/repos/ocroquette/teamcity-autopin", "Date": "2018-02-18T23:26:19Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["put.getURI().getPort()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (port > 0) { org.apache.commons.httpclient.protocol.Protocol.registerProtocol(\"https\", new org.apache.commons.httpclient.protocol.Protocol(\"https\", new org.jivesoftware.sparkimpl.updater.EasySSLProtocolSocketFactory(), put.getURI().getPort())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7822/buggy-version/plugins.fileupload.src.main.java.org.jivesoftware.spark.plugin.fileupload.ChatRoomDecorator.java", "BodyUseAPI": [], "Fixed commit": "70f6c74d6d34573094e8743ed1ab27c236016178", "Url": "https://api.github.com/repos/dnsdhrj/Spark", "Date": "2018-02-27T06:07:32Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date.equals(\"\")) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7944/buggy-version/src.main.java.com.plht.eshandle55.service.EsService.java", "BodyUseAPI": [], "Fixed commit": "ca8a81bc787657e6cb4566c52987da63db1e6ee6", "Url": "https://api.github.com/repos/shenchenyang/eshandle55", "Date": "2018-07-07T18:39:19Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) { try { return android.support.v4.content.FileProvider.getUriForFile(context, ((com.mauriciotogneri.fileexplorer.BuildConfig.APPLICATION_ID) + \".provider\"), file); } catch (java.lang.Exception e) { return android.net.Uri.fromFile(file); } }else { return android.net.Uri.fromFile(file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7749/buggy-version/app.src.main.java.com.mauriciotogneri.fileexplorer.models.FileInfo.java", "BodyUseAPI": [], "Fixed commit": "f06cf262aaf40bdd82fc3a51c19b272c3eaa57f1", "Url": "https://api.github.com/repos/mauriciotogneri/fileexplorer", "Date": "2018-05-11T18:40:16Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["scanner.CMinusScanner.getNextToken()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((num.getTokenType()) != (Token.TokenType.NUMBER)) { throw new parser.ParseException(\"Number\", linenum, num); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/548/buggy-version/parser.CMinusParser.java", "BodyUseAPI": [], "Fixed commit": "0d32cbb16760bce1b2d1bd2a512dd3312f30a36c", "Url": "https://api.github.com/repos/CalebLBaker/CMinusCompiler", "Date": "2018-03-23T03:43:15Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isCaseSensitive())) value = value.toLowerCase(java.util.Locale.ROOT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3282/buggy-version/airline-core.src.main.java.com.github.rvesse.airline.types.numerics.abbreviated.AbbreviatedNumericTypeConverter.java", "BodyUseAPI": [], "Fixed commit": "c7c6664dac930aa41b2f9652d368333d14f67677", "Url": "https://api.github.com/repos/rvesse/airline", "Date": "2018-08-31T13:20:25Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!hasAchievement) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3046/buggy-version/src.model.Answer.java", "BodyUseAPI": [], "Fixed commit": "5421be9f90515c36161e5b0e91a3afa206162ba7", "Url": "https://api.github.com/repos/aniltrue/ScenarioEditor", "Date": "2018-01-01T15:58:30Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (answer != null) { java.lang.Object[] newRow; javax.swing.table.DefaultTableModel model = ((javax.swing.table.DefaultTableModel) (answers.getModel())); if (!(answer.hasAchievement())) newRow = new java.lang.Object[]{ counter, answer.getText(), \"\" + (answer.getNextQuestionID()), \"\", \"0\" }; else newRow = new java.lang.Object[]{ counter, answer.getText(), \"\" + (answer.getNextQuestionID()), answer.getAchievement().getText(), \"\" + (answer.getAchievement().getPoint()) }; model.insertRow(counter, newRow); (counter)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3046/buggy-version/src.gui.QuestionPanel.java", "BodyUseAPI": ["model.Answer.getNextQuestionID()", "model.Answer.getText()", "model.Answer.hasAchievement()", "model.Answer.getAchievement()", "model.Answer.getAchievement()", "model.Answer.getNextQuestionID()", "model.Answer.getText()", "answer.getAchievement().getText()", "answer.getAchievement().getPoint()"], "Fixed commit": "5421be9f90515c36161e5b0e91a3afa206162ba7", "Url": "https://api.github.com/repos/aniltrue/ScenarioEditor", "Date": "2018-01-01T15:58:30Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.code()) == 404) { throw new fr.inria.jtravis.Http404Exception(response.message()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8388/buggy-version/src.main.java.fr.inria.jtravis.helpers.AbstractHelper.java", "BodyUseAPI": ["okhttp3.Response.message()"], "Fixed commit": "ce882589a5b52f552ed291157d049b8cee1f25bc", "Url": "https://api.github.com/repos/fermadeiral/jtravis", "Date": "2018-04-18T08:49:56Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((webSiteRepository.getWebsite(webSiteLink)) != null) { webSiteRepository.getWebsite(webSiteLink).update(); }else { throw new java.sql.SQLException(\"this site isnt in dataBase\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3663/buggy-version/src.main.java.cli.RssService.java", "BodyUseAPI": ["webSiteRepository.getWebsite(webSiteLink).update()", "webSiteRepository.WebSiteRepository.getWebsite(java.lang.String)"], "Fixed commit": "2c421f144d9f9912aa657f28a894c4cfc7690b46", "Url": "https://api.github.com/repos/jimbo-nimbo/Project1RSSFeed", "Date": "2018-07-21T05:08:12Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bnt.getText().length()) == 1) { returnDateStr = (dateStr + \"0\") + (bnt.getText()); }else { returnDateStr = dateStr + (bnt.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3050/buggy-version/src.main.java.LogApp.Extends.CalendarPanel.java", "BodyUseAPI": ["javax.swing.JLabel.getText()", "javax.swing.JLabel.getText()"], "Fixed commit": "50af8e33e674301abf38bbc19c95b6d766687cd6", "Url": "https://api.github.com/repos/xuxueyang/LogApp", "Date": "2018-04-04T00:56:19Z"},
{"Line": "=>688", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((turnLaneLayout.getVisibility()) == (GONE)) { turnLaneAdapter.addTurnLanes(turnLanes, maneuverViewModifier); showTurnLanes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4169/buggy-version/libandroid-navigation-ui.src.main.java.com.mapbox.services.android.navigation.ui.v5.instruction.InstructionView.java", "BodyUseAPI": [], "Fixed commit": "51561f6e75d336561adecbc0652178f58f6fe180", "Url": "https://api.github.com/repos/mapbox/mapbox-navigation-android", "Date": "2018-03-02T19:53:09Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_OK)) { java.lang.String TaskName = data.getStringExtra(\"Task Name\"); java.lang.String Description = data.getStringExtra(\"Description\"); android.widget.TextView DescriptionView = ((android.widget.TextView) (findViewById(R.id.Description))); android.widget.TextView TaskNameView = ((android.widget.TextView) (findViewById(R.id.TaskName))); TaskNameView.setText(TaskName); if ((Description.length()) > 0) { DescriptionView.setText(Description); }else { DescriptionView.setText(\"No Description\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2199/buggy-version/app.src.main.java.com.cmput301w18t05.taskzilla.ViewTaskActivity.java", "BodyUseAPI": [], "Fixed commit": "5c041be0d1e4ae6bfa331070b5f8f64839666a25", "Url": "https://api.github.com/repos/CMPUT301W18T05/Taskzilla", "Date": "2018-03-16T06:41:00Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gregtech.api.util.GT_Recipe.GT_Recipe_Map.findRecipe(getBaseMetaTileEntity(),gregtech.common.tileentities.machines.steam.GT_MetaTileEntity_Macerator_Steel,boolean,V[1],<nulltype>,<nulltype>,getAllInputs())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(tRecipe.isRecipeInputEqual(true, new net.minecraftforge.fluids.FluidStack[]{ getFillableStack() }, getAllInputs()))) return FOUND_RECIPE_BUT_DID_NOT_MEET_REQUIREMENTS;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8208/buggy-version/src.main.java.gregtech.common.tileentities.machines.steam.GT_MetaTileEntity_Macerator_Steel.java", "BodyUseAPI": [], "Fixed commit": "e617fcd4c30c88f68c8f202f6b638ac7e156aa99", "Url": "https://api.github.com/repos/IdealIndustrial/GT5Unofficial", "Date": "2018-06-13T10:32:04Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gregtech.api.util.GT_Recipe.GT_Recipe_Map.findRecipe(getBaseMetaTileEntity(),gregtech.common.tileentities.machines.steam.GT_MetaTileEntity_Macerator_Bronze,boolean,V[1],<nulltype>,<nulltype>,getAllInputs())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(tRecipe.isRecipeInputEqual(true, new net.minecraftforge.fluids.FluidStack[]{ getFillableStack() }, getAllInputs()))) return FOUND_RECIPE_BUT_DID_NOT_MEET_REQUIREMENTS;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8208/buggy-version/src.main.java.gregtech.common.tileentities.machines.steam.GT_MetaTileEntity_Macerator_Bronze.java", "BodyUseAPI": [], "Fixed commit": "e617fcd4c30c88f68c8f202f6b638ac7e156aa99", "Url": "https://api.github.com/repos/IdealIndustrial/GT5Unofficial", "Date": "2018-06-13T10:32:04Z"},
{"Line": "=>3819", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (remoteVersionCurrentToken > localVersionCurrentToken) return true; else if (remoteVersionCurrentToken < localVersionCurrentToken) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6449/buggy-version/src.course_generator.frmMain.java", "BodyUseAPI": [], "Fixed commit": "3b2b20dc58074148f6e0e678d0bd861550dbe1f1", "Url": "https://api.github.com/repos/FJBDev/Course_Generator", "Date": "2018-07-23T17:43:17Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((usernameUpdate.getText().equals(this.username)) == false) { clearRead(); username = usernameUpdate.getText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9005/buggy-version/src.Work1.Controller.java", "BodyUseAPI": ["Work1.TextField.getText()"], "Fixed commit": "7b0ff031ddb7e5f9c67c29ea660cd2ad9ecc64e6", "Url": "https://api.github.com/repos/NAre5/guiTEST", "Date": "2018-10-21T14:18:46Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rating < 1) || (rating > 5)) { android.support.design.widget.Snackbar.make(view, \"Rating must be between 1 and 5\", Snackbar.LENGTH_LONG).setAction(\"Action\", null).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5758/buggy-version/app.src.main.java.team7202.myfoodjournal.DefaultActivity.java", "BodyUseAPI": [], "Fixed commit": "716d35fe38a2ab2fcaeaf476250692d7ed973e44", "Url": "https://api.github.com/repos/asherbig/MyFoodJournal", "Date": "2018-03-28T18:47:59Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(authorizeService.isAdmin(context))) { throw new org.dspace.app.rest.exception.RESTAuthorizationException(\"The EPerson collection endpoint is reserved to system administrators\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7638/buggy-version/dspace-spring-rest.src.main.java.org.dspace.app.rest.repository.EPersonRestRepository.java", "BodyUseAPI": [], "Fixed commit": "f807cc38a31416ae2338f0aad5ea3b50f9688a0d", "Url": "https://api.github.com/repos/ppmdo/DSpace", "Date": "2018-05-31T05:59:21Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.constructor) == null) { try { this.constructor = this.managedClass.getConstructor(((java.lang.Class<?>[]) (null))); } catch (java.lang.NoSuchMethodException e) { throw new java.lang.IllegalStateException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4804/buggy-version/dev.com.ibm.ws.managedobject.src.com.ibm.ws.managedobject.internal.ManagedObjectFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "e8e31b9923a12715fcdc8e2ef13344b0ee9e657a", "Url": "https://api.github.com/repos/ebreijo/open-liberty", "Date": "2018-06-05T12:36:21Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player1.getName().compareTo(player2.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nameCompare != 0) { return nameCompare; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8008/buggy-version/src.zur.koeln.kickertool.tournament.PlayerTournamentStatisticsImpl.java", "BodyUseAPI": [], "Fixed commit": "ea9b2b59d931a5c626113dc11e8b358d5d3a3c71", "Url": "https://api.github.com/repos/Joschbosch/kickertool", "Date": "2018-09-20T08:58:28Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lyndeson.inventory.domain.sales.SalesInvoice.getCylinderIncomingReceipt()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (java.util.Objects.nonNull(existingCylinderIncomingReceipt)) { throw new lyndeson.inventory.exceptions.GeneralException(((((\"Sales Invoice \" + (salesInvoice.getUuid())) + \" is already been resolved (CIR \") + (existingCylinderIncomingReceipt.getUuid())) + \").\"), org.springframework.http.HttpStatus.PRECONDITION_FAILED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/106/buggy-version/src.main.java.lyndeson.inventory.service.sales.impl.CylinderIncomingReceiptServiceImpl.java", "BodyUseAPI": ["lyndeson.inventory.domain.sales.CylinderIncomingReceipt.getUuid()"], "Fixed commit": "e040c3fdadf0b7ce2fa449b5400cd512eabc1551", "Url": "https://api.github.com/repos/migsarmiento/LyndesonInventory", "Date": "2018-03-07T07:13:18Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8678/buggy-version/dkpro-tc-core.src.main.java.org.dkpro.tc.core.util.TcFlexTable.java", "BodyUseAPI": [], "Fixed commit": "51281d5ab376cdbf18731711152ad29a57b814c1", "Url": "https://api.github.com/repos/dkpro/dkpro-tc", "Date": "2018-02-07T19:54:19Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLoadingCacheAds) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8614/buggy-version/resana.src.main.java.io.resana.NativeAdProvider.java", "BodyUseAPI": [], "Fixed commit": "4b8f0e34e3c843ba35d87399733d19aebd6a8bc2", "Url": "https://api.github.com/repos/oddrun/resana-android-sdk", "Date": "2018-09-30T09:51:13Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.kepler.queue.impl.QueueExecutorImpl.ACTIVED) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5003/buggy-version/src.main.java.com.kepler.queue.impl.QueueExecutorImpl.java", "BodyUseAPI": [], "Fixed commit": "e73bedd122b41486a5b2f7d38baa6cd75fe16e7f", "Url": "https://api.github.com/repos/Kepler-Framework/Kepler-All", "Date": "2018-04-20T14:27:21Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((aston.team15.jumazy.controller.GameSound.getMusicPlaying()) == false) { aston.team15.jumazy.controller.GameSound.playMenuMusic(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/987/buggy-version/core.src.aston.team15.jumazy.view.MainMenuScreen.java", "BodyUseAPI": [], "Fixed commit": "9738b6130f884b1eecdf6e39677385d944b94777", "Url": "https://api.github.com/repos/Kirimson/Jumazy", "Date": "2018-03-12T14:26:34Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((bird.imageView.getY()) < (-50)) || ((bird.imageView.getY()) > 720)) { Config.GameFlag = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6613/buggy-version/src.flappybirds.GamePlay.java", "BodyUseAPI": [], "Fixed commit": "904741ecfe7f4add69cc4b2432aa1b1b4e17e915", "Url": "https://api.github.com/repos/mushi1002/Flappybirds-game-using-javafx", "Date": "2018-10-14T13:59:49Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (reservation != null) { workout.setReservationId(reservation.getId()); workout.setCheckedIn(reservation.isCheckedIn()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7815/buggy-version/app.src.main.java.com.ninetwozero.iksu.utils.WorkoutServiceHelper.java", "BodyUseAPI": ["com.ninetwozero.iksu.models.Workout.setReservationId(reservation.getId())", "com.ninetwozero.iksu.models.WorkoutReservation.getId()", "com.ninetwozero.iksu.models.Workout.setCheckedIn(reservation.isCheckedIn())", "com.ninetwozero.iksu.models.WorkoutReservation.isCheckedIn()"], "Fixed commit": "b8543a66b052620a4ce87ffb12f9957483d1da6e", "Url": "https://api.github.com/repos/ninetwozero/iksu-android", "Date": "2018-01-31T15:37:31Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x > (this.x)) { x = this.x; }else if (x < 1) { x = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/880/buggy-version/src.uk.ac.reading.cs2ja16.viskantasjuodenas.robotManager.RobotArena.java", "BodyUseAPI": [], "Fixed commit": "1d726f1c5ac42bc60422e225754667bbab1f9fe7", "Url": "https://api.github.com/repos/Whiskey022/RobotSim", "Date": "2018-01-13T11:08:20Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y > (this.y)) { y = this.y; }else if (y < 1) { y = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/880/buggy-version/src.uk.ac.reading.cs2ja16.viskantasjuodenas.robotManager.RobotArena.java", "BodyUseAPI": [], "Fixed commit": "1d726f1c5ac42bc60422e225754667bbab1f9fe7", "Url": "https://api.github.com/repos/Whiskey022/RobotSim", "Date": "2018-01-13T11:08:20Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sensorDataList.isEmpty()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3471/buggy-version/app.src.main.java.com.marekulip.droidsor.DroidsorService.java", "BodyUseAPI": [], "Fixed commit": "79b6f420bfa372bed09f896f3dbbed9ffd42bd6f", "Url": "https://api.github.com/repos/MarekUlip/Droidsor", "Date": "2018-04-12T23:13:24Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kz.desh.snowballs.server.entity.PlayerEntity.getActionEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((kz.desh.snowballs.server.entity.action.ActionType.FREE) == (actionEntity.getType())) { return createResponse(kz.desh.snowballs.server.commands.skill.FAIL_STATUS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/506/buggy-version/src.main.java.kz.desh.snowballs.server.commands.skill.CancelStudySkillCommand.java", "BodyUseAPI": [], "Fixed commit": "f6d16ec7a49a2f16a46aca80a31ef1f3cb2f5599", "Url": "https://api.github.com/repos/danousman/snowballs", "Date": "2018-10-15T09:40:29Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.middaydreams.stargraph.repository.LevelScoreRepository.findAllByUseridAndModeAndCatagoryAndLevel(com.middaydreams.stargraph.model.Users,java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ls == null) { return levelScoreRepository.save(score); }else return levelScoreRepository.update(scores, xp, mode, category, level);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3721/buggy-version/src.main.java.com.middaydreams.stargraph.controller.StarGarphController.java", "BodyUseAPI": [], "Fixed commit": "7685aa94cc231b597197f1dd25c09e55182df1bc", "Url": "https://api.github.com/repos/majbah08/stargraph", "Date": "2018-08-07T00:14:24Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files == null) { java.lang.System.out.println(\"FOLDER NULL?!\"); throw new java.lang.Exception(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4517/buggy-version/core.src.main.se.tevej.game.view.BuildingEntityRendereable.java", "BodyUseAPI": [], "Fixed commit": "5b6ae59cfbbf00fe8462916c6d92695c304c775f", "Url": "https://api.github.com/repos/Tevej/DayInGothenburgInTime", "Date": "2018-09-28T18:01:53Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((column.get_ID()) > 0) setFieldLength(column.getAD_Column().getFieldLength());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6080/buggy-version/base.src.org.adempiere.model.MBrowseField.java", "BodyUseAPI": [], "Fixed commit": "f144e01f4717e6116d03f2e94d342e6015d062f0", "Url": "https://api.github.com/repos/e-Evolution/adempiere", "Date": "2018-06-12T17:39:18Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dev.sagar.smsblocker.tech.beans.SMS.getSeen()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((holder.ivState) == null) && isSeen) { log.debug(methodName, \"Somethings weird...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8601/buggy-version/app.src.main.java.dev.sagar.smsblocker.ux.adapters.RVChatAdapter.java", "BodyUseAPI": [], "Fixed commit": "e6402c4198b8ba8bc00f643571263d4bd063e9a8", "Url": "https://api.github.com/repos/sagarpawardev/SMSBlocker", "Date": "2018-05-25T17:52:49Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(url)) { xyz.dcme.library.util.LogUtils.e(xyz.dcme.agg.ui.postdetail.PostDetailPresenter.TAG, \"start -> null url.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8031/buggy-version/app.src.main.java.xyz.dcme.agg.ui.postdetail.PostDetailPresenter.java", "BodyUseAPI": [], "Fixed commit": "bdf44f2dc6415b1c4fef1e62e967442567c4d216", "Url": "https://api.github.com/repos/caoshen/agg", "Date": "2018-04-30T09:26:44Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getProperty(\"mcmc.evaluation.threshold\")) != null) { threshold = java.lang.Double.parseDouble(java.lang.System.getProperty(\"mcmc.evaluation.threshold\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3072/buggy-version/src.dr.app.checkpoint.BeastCheckpointer.java", "BodyUseAPI": [], "Fixed commit": "d49d4102a4e40af891ec1412363799a7f5c63c72", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2018-02-21T14:47:51Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ferfig.popularmovies.MovieDetails.getIntent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((receivedIntent != null) && (receivedIntent.hasExtra(Utils.SINGLE_MOVIE_DETAILS_OBJECT))) { mMovieDetails = receivedIntent.getParcelableExtra(Utils.SINGLE_MOVIE_DETAILS_OBJECT); android.util.Log.w(Utils.APP_TAG, \"DetailActivity: onCreate without savedInstanceState\"); checkIfMovieIsFavorite(); getDetailsFromMovieDB(); }else { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1161/buggy-version/app.src.main.java.com.ferfig.popularmovies.MovieDetails.java", "BodyUseAPI": ["android.content.Intent.getParcelableExtra(Utils.SINGLE_MOVIE_DETAILS_OBJECT)"], "Fixed commit": "dcd791c6155848d6dce4e86fbf30a0eb18086ef8", "Url": "https://api.github.com/repos/FerFig/popular-movies-stage-2", "Date": "2018-03-11T05:05:14Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (redisUrl == null) { redisUrl = \"redis://localhost:6379\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2319/buggy-version/src.main.java.net.n8dgr8.gdcr.universe.configuration.LocalRedisConfig.java", "BodyUseAPI": [], "Fixed commit": "a84789513382ec71b3d3bff3ec4e2e3935338657", "Url": "https://api.github.com/repos/n8dgr8/gdcr_universe", "Date": "2018-05-27T21:32:30Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((redisUri.getUserInfo()) != null) { jedisConnectionFactory.setPassword(redisUri.getUserInfo().split(\":\", 2)[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2319/buggy-version/src.main.java.net.n8dgr8.gdcr.universe.configuration.LocalRedisConfig.java", "BodyUseAPI": ["org.springframework.data.redis.connection.jedis.JedisConnectionFactory.setPassword(java.lang.String)", "java.lang.String.split(java.lang.String,int)", "java.net.URI.getUserInfo()"], "Fixed commit": "a84789513382ec71b3d3bff3ec4e2e3935338657", "Url": "https://api.github.com/repos/n8dgr8/gdcr_universe", "Date": "2018-05-27T21:32:30Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (read != (data.length)) { throw new java.lang.Exception(\"ERROR! Bad message\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3295/buggy-version/Message.java", "BodyUseAPI": [], "Fixed commit": "5bfabf0e232cef207ce832de99ef2bee78ce898f", "Url": "https://api.github.com/repos/shweelan/binomial-graph-simulation", "Date": "2018-05-07T06:15:58Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (read < 0) { throw new java.io.EOFException(); }else if (read != (bn.Message.HEADER_LENGTH)) { throw new java.lang.Exception(\"ERROR! Bad message header\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3295/buggy-version/Message.java", "BodyUseAPI": [], "Fixed commit": "5bfabf0e232cef207ce832de99ef2bee78ce898f", "Url": "https://api.github.com/repos/shweelan/binomial-graph-simulation", "Date": "2018-05-07T06:15:58Z"},
{"Line": "=>848", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportFragmentManager().getBackStackEntryCount()) > 1) { getSupportFragmentManager().popBackStack(); }else { super.onBackPressed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8974/buggy-version/mobicomkitui.src.main.java.com.applozic.mobicomkit.uiwidgets.conversation.activity.ConversationActivity.java", "BodyUseAPI": [], "Fixed commit": "db77538e3ba9b7f83f67b609b2de57db0422f589", "Url": "https://api.github.com/repos/AppLozic/Applozic-Android-SDK", "Date": "2018-08-16T09:14:34Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (wireType != null) { setCraftPermission(wireType.getCraftPermission()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1134/buggy-version/src.main.java.de.robotricker.electricwires.utils.ductdetails.WireDetails.java", "BodyUseAPI": ["de.robotricker.electricwires.duct.wire.utils.WireType.getCraftPermission()", "de.robotricker.electricwires.utils.ductdetails.WireDetails.setCraftPermission(wireType.getCraftPermission())"], "Fixed commit": "c0da3dc308ccf87a6e81746767b4f035f0c1b007", "Url": "https://api.github.com/repos/RoboTricker/ElectricWires", "Date": "2018-03-10T17:32:27Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MessageProtos.Message.toByteArray()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((buffer.capacity()) < ((bytes.length) + 4)) { buffer = java.nio.ByteBuffer.allocate(((bytes.length) + 4)); attachment.buffer = buffer; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9313/buggy-version/src.main.java.com.simiyutin.javaii.server.tcp_async.TCPAsyncServer.java", "BodyUseAPI": ["java.nio.ByteBuffer.allocate(int)"], "Fixed commit": "30008ccbb8d8d912af9d64a290c5db2f068b7cfd", "Url": "https://api.github.com/repos/simiyutin/javaii-servers-benchmarks", "Date": "2018-02-20T21:16:49Z"},
{"Line": "=>588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((letters.get(1).freq) * 10) >= (letters.get(0).freq)) { firstTouchSaved2 = letters.get(1).text.charAt(0); }else { firstTouchSaved2 = '*'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/109/buggy-version/app.src.main.java.com.example.fansy.audiokeyboard.MainActivity.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.util.ArrayList<com.example.fansy.audiokeyboard.MainActivity.Word>.get(int)"], "Fixed commit": "f9cff9f42667b0f841acecf407d2f8beea313aac", "Url": "https://api.github.com/repos/wangtong2015/AudioKeyboard", "Date": "2017-12-29T09:06:16Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((firstTouchSaved2) != '*') { nowCh2 = firstTouchSaved2; playMedia((\"ios11_\" + (voiceSpeed)), ((firstTouchSaved2) - 'a'), true); readList += firstTouchSaved2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/109/buggy-version/app.src.main.java.com.example.fansy.audiokeyboard.MainActivity.java", "BodyUseAPI": ["com.example.fansy.audiokeyboard.MainActivity.playMedia(java.lang.String,int,boolean)"], "Fixed commit": "f9cff9f42667b0f841acecf407d2f8beea313aac", "Url": "https://api.github.com/repos/wangtong2015/AudioKeyboard", "Date": "2017-12-29T09:06:16Z"},
{"Line": "=>782", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offsetDelta < 0) { if (type == (Opcodes.F_SAME)) { return; }else { throw new java.lang.IllegalStateException(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3524/buggy-version/asm.src.main.java.org.objectweb.asm.MethodWriter.java", "BodyUseAPI": [], "Fixed commit": "156079819b6c3d5cfef287595593c9b824e4d260", "Url": "https://api.github.com/repos/JetBrains/intellij-deps-asm", "Date": "2018-01-20T10:11:37Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(enemy.isActive())) { board.incrementScore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8948/buggy-version/src.main.java.spaceranger.PlayerProjectile.java", "BodyUseAPI": [], "Fixed commit": "54e20ec45d80eae0c900f3805f35aca53d4722b4", "Url": "https://api.github.com/repos/mes32/space-ranger-2", "Date": "2018-04-25T00:37:47Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xtandemParameters.getParentMonoisotopicMassIsotopeError()) { parentMonoisotopicMassIsotopeErrorCmb.setSelectedIndex(0); }else { parentMonoisotopicMassIsotopeErrorCmb.setSelectedIndex(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7421/buggy-version/src.main.java.com.compomics.util.gui.parameters.identification.algorithm.XTandemParametersDialog.java", "BodyUseAPI": [], "Fixed commit": "8163ee20e6ac16533e18a7925e087c6da1a1fa10", "Url": "https://api.github.com/repos/compomics/compomics-utilities", "Date": "2018-01-10T12:08:18Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mitchellbosecke.pebble.lexer.TokenStream.current()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(endblock.test(Token.Type.NAME, \"endblock\"))) throw new com.mitchellbosecke.pebble.error.ParserException(null, \"endblock tag should be present with block tag starting line number \", token.getLineNumber(), stream.getFilename());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1359/buggy-version/src.main.java.com.mitchellbosecke.pebble.tokenParser.BlockTokenParser.java", "BodyUseAPI": [], "Fixed commit": "4a4e03912bfc8f70dc40170712d2b973696cf6e1", "Url": "https://api.github.com/repos/PebbleTemplates/pebble", "Date": "2018-04-14T19:07:13Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((instrNum) == 0) { java.lang.System.out.println((((temp[0]) + \"**\") + (temp[1]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5550/buggy-version/CCacheSim.java", "BodyUseAPI": [], "Fixed commit": "be9afc834b944a1333bf444ccd2c874d7f4459b9", "Url": "https://api.github.com/repos/CCrainys/CCachesim", "Date": "2018-04-11T17:34:13Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((main.java.Liabilities.OSAPLoans) < 0) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1242/buggy-version/src.main.java.Liabilities.java", "BodyUseAPI": [], "Fixed commit": "253f45b73ea8c8b3d27e3ce9bd287f472c16ae73", "Url": "https://api.github.com/repos/colinchan15/Prism", "Date": "2018-08-31T19:04:51Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((resObj == null) || (org.elastos.service.StrKit.isBlank((resObj + \"\")))) || ((resObj + \"\").equalsIgnoreCase(\"null\"))) { return com.alibaba.fastjson.JSON.toJSONString(new org.elastos.entity.ReturnMsgEntity().setResult(\"0.0\").setStatus(retCodeConfiguration.SUCC())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6572/buggy-version/base.api.src.main.java.org.elastos.service.ElaService.java", "BodyUseAPI": [], "Fixed commit": "40dbe84fa8f5f397be60501c3b43c7e9ae876e34", "Url": "https://api.github.com/repos/elastos/Elastos.ORG.Wallet.Service", "Date": "2018-09-21T08:31:04Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((tags.length()) > 0) author = tags.getJSONObject(0).getString(\"webTitle\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1625/buggy-version/app.src.main.java.com.danieldogeanu.android.newsapp.QueryUtils.java", "BodyUseAPI": ["org.json.JSONArray.getJSONObject(int)", "tags.getJSONObject(0).getString(java.lang.String)"], "Fixed commit": "bcd0a8377210420fc6ac35d238c779041240f7a1", "Url": "https://api.github.com/repos/danieldogeanu/NewsApp", "Date": "2018-05-13T19:38:42Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(task.getLocation().getAddress().equals(\"\"))) { location.setText(((task.getLocation().getAddress().substring(0, 10)) + \"...\")); }else { location.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5580/buggy-version/app.src.main.java.cmput301w18t22.com.tenner.ui.activity.TaskDetailActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(((task.getLocation().getAddress().substring(0, 10)) + \"...\"))", "task.getLocation().getAddress().substring(int,int)", "cmput301w18t22.com.tenner.classes.Task.getLocation()", "task.getLocation().getAddress()"], "Fixed commit": "1203790ddb90f8bf7c5261b285b210f72f79ef8c", "Url": "https://api.github.com/repos/CMPUT301W18T22/Tenner", "Date": "2018-04-09T21:52:55Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ch.njol.skript.bukkitutil.BukkitUnsafe.preferMaterialMap) { if ((id.length()) > 9) { assert (ch.njol.skript.bukkitutil.BukkitUnsafe.materialMap) != null; return ch.njol.skript.bukkitutil.BukkitUnsafe.materialMap.get(id.substring(10)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6581/buggy-version/src.main.java.ch.njol.skript.bukkitutil.BukkitUnsafe.java", "BodyUseAPI": [], "Fixed commit": "6780962dbcef9385ac4a0639094e4db7505faf70", "Url": "https://api.github.com/repos/SkriptLang/Skript", "Date": "2018-09-13T12:58:26Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((step) == 0) { setIntroductionFragment(); }else { setQuestionFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9176/buggy-version/app.src.main.java.com.example.android.tretyakovgalleryquiz.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f80167a0c468573abccd7fd34bcea4aaf74d21fb", "Url": "https://api.github.com/repos/kazakovaNet/TretyakovGalleryQuiz", "Date": "2018-01-31T09:13:00Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(termWeek.getText().toString().trim())) { showError(termWeekLayout, \"\u8bf7\u8f93\u5165\u5468\u6570\"); return; }else if ((java.lang.Integer.valueOf(termWeek.getText().toString().trim())) <= 0) { showError(termWeekLayout, \"\u5468\u6570\u6700\u5c0f\u4e3a1\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5672/buggy-version/app.src.main.java.com.shikeclass.app.activity.AdjustTermActivity.java", "BodyUseAPI": ["java.lang.Integer.valueOf(termWeek.getText().toString().trim())", "termWeek.getText().toString()", "termWeek.getText().toString().trim()", "android.support.design.widget.TextInputEditText.getText()"], "Fixed commit": "07eeac51d46f00bbddf60746d3f2853904640f91", "Url": "https://api.github.com/repos/CalvinLv/TimeClass", "Date": "2018-03-26T14:56:08Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NodeList.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tagsElement == null) { return patient; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4774/buggy-version/src.main.java.at.medunigraz.imi.bst.n2c2.dao.PatientDAO.java", "BodyUseAPI": [], "Fixed commit": "6bac2d7a7319a142fb2868a9f94ea4b82d89afad", "Url": "https://api.github.com/repos/bst-mug/n2c2", "Date": "2018-05-07T16:00:45Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.auth.api.signin.GoogleSignInResult.getSignInAccount()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((acct.getGivenName()) != null) && (!(acct.getGivenName().equalsIgnoreCase(\"null\")))) intent.putExtra(\"Name\", acct.getGivenName()); else intent.putExtra(\"Name\", acct.getDisplayName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3835/buggy-version/IntelliCal.app.src.main.java.com.example.rishab.intellical.LoginActivity.java", "BodyUseAPI": ["com.google.android.gms.auth.api.signin.GoogleSignInAccount.getDisplayName()", "com.google.android.gms.auth.api.signin.GoogleSignInAccount.getGivenName()", "android.content.Intent.putExtra(java.lang.String,acct.getDisplayName())", "android.content.Intent.putExtra(java.lang.String,acct.getGivenName())"], "Fixed commit": "ee662fb2fce1b1ca4266f29d67f31b9dbfbe76c1", "Url": "https://api.github.com/repos/gold1617/IntelliCal", "Date": "2018-09-27T06:43:42Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.inventory.Slot.getStack()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(mergeItemStack(items, panel.getSlots(), inventorySlots.size(), false))) { return net.minecraft.item.ItemStack.EMPTY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1975/buggy-version/src.main.java.worldcontrolteam.worldcontrol.container.ContainerInfoPanel.java", "BodyUseAPI": [], "Fixed commit": "f2593dbcf9d6f05bbc563a87336e7e5fc7c56085", "Url": "https://api.github.com/repos/World-Control-Team/World-Control", "Date": "2018-07-26T18:43:17Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.identity.sso.saml.cache.SAMLSSOParticipantCache.getInstance().getValueFromCache(org.wso2.carbon.identity.sso.saml.cache.SAMLSSOParticipantCacheKey)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((cacheEntry.getSessionInfoData()) != null) { cacheEntry.getSessionInfoData().removeServiceProvider(issuer); if (org.wso2.carbon.identity.sso.saml.session.SSOSessionPersistenceManager.log.isDebugEnabled()) { org.wso2.carbon.identity.sso.saml.session.SSOSessionPersistenceManager.log.debug((\"Removed service provider from session info data with name \" + issuer)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6966/buggy-version/components.org.wso2.carbon.identity.sso.saml.src.main.java.org.wso2.carbon.identity.sso.saml.session.SSOSessionPersistenceManager.java", "BodyUseAPI": ["cacheEntry.getSessionInfoData().removeServiceProvider(java.lang.String)", "org.wso2.carbon.identity.sso.saml.cache.SAMLSSOParticipantCacheEntry.getSessionInfoData()"], "Fixed commit": "e249486106ffe6c7fc647b4cb56b0425021910fd", "Url": "https://api.github.com/repos/sachiniWettasinghe/identity-inbound-auth-saml", "Date": "2018-10-08T04:30:46Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (org.bukkit.Material.AIR)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6554/buggy-version/src.main.java.net.glowstone.inventory.GlowPlayerInventory.java", "BodyUseAPI": [], "Fixed commit": "c319f8064636d2a584ae19e20f4911d74348f81e", "Url": "https://api.github.com/repos/Pr0methean/Glowstone", "Date": "2018-01-04T06:42:10Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (statementDescriptor != null) { additionalParamsMap.put(com.stripe.android.model.SourceParams.FIELD_STATEMENT_DESCRIPTOR, statementDescriptor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6341/buggy-version/stripe.src.main.java.com.stripe.android.model.SourceParams.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)"], "Fixed commit": "e9dd27cccdc5a7cc6069ed242a3908a3fba55a8f", "Url": "https://api.github.com/repos/stripe/stripe-android", "Date": "2018-05-16T17:51:14Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(additionalParamsMap.isEmpty())) { params.setApiParameterMap(additionalParamsMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6341/buggy-version/stripe.src.main.java.com.stripe.android.model.SourceParams.java", "BodyUseAPI": ["com.stripe.android.model.SourceParams.setApiParameterMap(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "e9dd27cccdc5a7cc6069ed242a3908a3fba55a8f", "Url": "https://api.github.com/repos/stripe/stripe-android", "Date": "2018-05-16T17:51:14Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) < 8) { res = res.substring(0, res.length()); }else { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/31/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "76c9620c4fed52befcc02f70d5d82ba741c9cf79", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-LukeHalasy", "Date": "2018-10-02T19:07:53Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.util.Arrays.stream(results).filter(( i) -> i < (MIN_VALIDPOINTS)).count()) > 0) { return Grade.NDG5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/151/buggy-version/src.Results.Results.java", "BodyUseAPI": [], "Fixed commit": "78b8758511e60875fdf65ce1563a5253f0affde5", "Url": "https://api.github.com/repos/97hilfel/PRSWE2-A1-MVC", "Date": "2018-04-08T16:33:51Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.util.Arrays.stream(results).filter(( i) -> i == (-1)).count()) > 0) { return Grade.INV; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/151/buggy-version/src.Results.Results.java", "BodyUseAPI": [], "Fixed commit": "78b8758511e60875fdf65ce1563a5253f0affde5", "Url": "https://api.github.com/repos/97hilfel/PRSWE2-A1-MVC", "Date": "2018-04-08T16:33:51Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ScalarFieldND.Default.getValueRange(usf.saav.scalarfield.ScalarField2D)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((valueRange[0]) == 0) && ((valueRange[1]) == 0)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1251/buggy-version/src.usf.saav.alma.app.interactive.AlmaCT.java", "BodyUseAPI": [], "Fixed commit": "60b526b3790f4c2c6039598569665a0f5055c2b6", "Url": "https://api.github.com/repos/leong1016/Topological-Data-Analysis-for-MaNGA", "Date": "2018-10-31T19:02:21Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsonElement.getAsJsonObject().get(\"character\")) != null) { personCastCredit.character = jsonElement.getAsJsonObject().get(\"character\").getAsString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6443/buggy-version/src.main.java.com.uwetrottmann.tmdb2.TmdbHelper.java", "BodyUseAPI": ["com.google.gson.JsonElement.getAsJsonObject()", "jsonElement.getAsJsonObject().get(\"character\").getAsString()", "jsonElement.getAsJsonObject().get(java.lang.String)"], "Fixed commit": "f794376faa8df7be3e385bbe66c45fc703a005a2", "Url": "https://api.github.com/repos/JeremyQuagmire/tmdb-java", "Date": "2018-10-15T18:05:41Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsonElement.getAsJsonObject().get(\"credit_id\")) != null) { personCastCredit.credit_id = jsonElement.getAsJsonObject().get(\"credit_id\").getAsString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6443/buggy-version/src.main.java.com.uwetrottmann.tmdb2.TmdbHelper.java", "BodyUseAPI": ["com.google.gson.JsonElement.getAsJsonObject()", "jsonElement.getAsJsonObject().get(\"credit_id\").getAsString()", "jsonElement.getAsJsonObject().get(java.lang.String)"], "Fixed commit": "f794376faa8df7be3e385bbe66c45fc703a005a2", "Url": "https://api.github.com/repos/JeremyQuagmire/tmdb-java", "Date": "2018-10-15T18:05:41Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.aaron.myappp2.model.Story.getPage(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (page.isFinalPage()) { choice1Button.setVisibility(View.INVISIBLE); choice2Button.setText(R.string.play_again_button_text); }else { loadButtons(page); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1581/buggy-version/app.src.main.java.com.example.aaron.myappp2.ui.StoryActivity.java", "BodyUseAPI": ["com.example.aaron.myappp2.ui.StoryActivity.loadButtons(com.example.aaron.myappp2.model.Page)"], "Fixed commit": "f9d3013e184c1cf6a60f1f613a8aea711d7ff1bc", "Url": "https://api.github.com/repos/tim2464/MyAppP2", "Date": "2018-02-16T14:08:46Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ml.shifu.shifu.core.binning.UpdateBinningInfoReducer.computePosRate(long[],long[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(java.lang.Double.isNaN(binPosRate[i]))) { if ((java.lang.Double.compare(max, binPosRate[i])) < 0) { max = binPosRate[i]; } if ((java.lang.Double.compare(min, binPosRate[i])) > 0) { min = binPosRate[i]; } sum += (binPosRate[i]) * ((binCountPos[i]) + (binCountNeg[i])); squaredSum += ((binPosRate[i]) * (binPosRate[i])) * ((binCountPos[i]) + (binCountNeg[i])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3257/buggy-version/src.main.java.ml.shifu.shifu.core.binning.UpdateBinningInfoReducer.java", "BodyUseAPI": ["java.lang.Double.compare(double,double)", "java.lang.Double.compare(double,double)"], "Fixed commit": "529af30b0c62c3106f6ddf74fd7acd34ac0978c3", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2015-06-01T07:23:11Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (leafNode == (root)) { root = null; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8633/buggy-version/Datastructures.src.kar.ds.tree.BinaryTree.java", "BodyUseAPI": [], "Fixed commit": "f50864189225c483a3eab2b2fc11b7f5caf1cfea", "Url": "https://api.github.com/repos/KarthikBhuvanagiri/data-structures", "Date": "2018-05-23T17:07:59Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resolved) != null) { i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6054/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.naming.reference.LongUnresolvedReference.java", "BodyUseAPI": [], "Fixed commit": "4ff7667b64a33f4b80dc7b3a561b9153804cba1d", "Url": "https://api.github.com/repos/JetBrains/Arend", "Date": "2018-09-04T17:02:29Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["server.getPlayerList().getPlayerByUUID(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (player == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/241/buggy-version/src.main.java.net.wizardsoflua.permissions.Permissions.java", "BodyUseAPI": [], "Fixed commit": "66580acb6e16236dbafadd906209291950767b73", "Url": "https://api.github.com/repos/wizards-of-lua/wizards-of-lua", "Date": "2018-04-04T19:19:12Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((context.location) == (org.codehaus.groovy.eclipse.codeassist.requestor.ContentAssistLocation.STATEMENT)) && (field.getDeclaringClass().equals(VariableScope.CLASS_CLASS_NODE))) { completion = org.eclipse.jdt.core.compiler.CharOperation.concat(\"this.\".toCharArray(), completion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7664/buggy-version/ide.org.codehaus.groovy.eclipse.codeassist.completion.src.org.codehaus.groovy.eclipse.codeassist.proposals.GroovyFieldProposal.java", "BodyUseAPI": [], "Fixed commit": "28b5235a1bb3f8bcb95e736c9c81d61a7e4213e7", "Url": "https://api.github.com/repos/groovy/groovy-eclipse", "Date": "2018-02-17T15:27:49Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.parse.ParseUser.getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user != null) startActivity(new android.content.Intent(this, codepath.com.instagram.HomeActivity.class));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7580/buggy-version/app.src.main.java.codepath.com.instagram.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6c654d739f716b42e80dbf54c8daf09ed8a6b876", "Url": "https://api.github.com/repos/alex-goodman/Instagram", "Date": "2018-07-11T18:50:21Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.k12nt.k12netframe.utils.webConnection.K12NetHttpClient.getCookieList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cookies != null) { for (org.apache.http.cookie.Cookie cookie : cookies) { if (cookie.getName().contains(\"NotCompletedPollCount\")) { java.lang.String cookieString = (((cookie.getName()) + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\") + \"; Domain=\") + (cookie.getDomain()); cookieManager.setCookie(cookie.getDomain(), cookieString); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4554/buggy-version/app.src.main.java.com.k12nt.k12netframe.async_tasks.LoginAsyncTask.java", "BodyUseAPI": [], "Fixed commit": "f6c24111358908834e08dd48e3f225521f8d1024", "Url": "https://api.github.com/repos/K12net/K12NET-Mobile-Android", "Date": "2018-07-30T13:11:31Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isExitNull) str = str.replace(\"{exit_number}\", \"UNKNOWN\"); else str = str.replace(\"{exit_number}\", _numerals[exitNumber]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5484/buggy-version/openrouteservice.src.main.java.heigit.ors.routing.instructions.InstructionTranslator.java", "BodyUseAPI": [], "Fixed commit": "32cc3eca9fab09c8ff7e299dfb330a65ed66fc88", "Url": "https://api.github.com/repos/GIScience/openrouteservice", "Date": "2018-02-07T14:37:55Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (bookJSON.has(\"publishedDate\")) mEditionYearField.setText(bookJSON.getString(\"publishedDate\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8246/buggy-version/app.src.main.java.mad24.polito.it.ManualInsertActivity.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "android.widget.EditText.setText(bookJSON.getString(\"publishedDate\"))"], "Fixed commit": "d3f0cd45720211cc56bf62193ecb7a147a835203", "Url": "https://api.github.com/repos/SunSince90/Libre", "Date": "2018-05-15T14:42:47Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_offset_column) != null) sb.append(sep).append(\"offset(\").append(_offset_column).append(\")\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4188/buggy-version/h2o-algos.src.main.java.hex.coxph.CoxPHModel.java", "BodyUseAPI": [], "Fixed commit": "3057fdbc2e5f919d6c5596168bb0442453369f43", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2018-05-15T04:09:16Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((_offset_column) != null) && (_offset_column.equals(col))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4188/buggy-version/h2o-algos.src.main.java.hex.coxph.CoxPHModel.java", "BodyUseAPI": [], "Fixed commit": "3057fdbc2e5f919d6c5596168bb0442453369f43", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2018-05-15T04:09:16Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inter instanceof org.audiveris.omr.sig.inter.BarlineInter) { org.audiveris.omr.sig.inter.BarlineInter b = ((org.audiveris.omr.sig.inter.BarlineInter) (inter)); if ((b.getArea()) == null) { b.setArea(new java.awt.geom.Area(b.getBounds())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3346/buggy-version/src.main.org.audiveris.omr.sig.ui.InterController.java", "BodyUseAPI": [], "Fixed commit": "f8aa1209d58f9eec660e523283006fca09e19f71", "Url": "https://api.github.com/repos/Audiveris/audiveris", "Date": "2018-04-19T11:04:04Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.poratu.idea.plugins.tomcat.conf.TomcatRunConfiguration.getEnvOptions()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((envOptions != null) && (!(\"\".equals(envOptions.trim())))) { runnerSetting.getEnvOptions().setText(envOptions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6651/buggy-version/src.com.poratu.idea.plugins.tomcat.conf.TomcatSettingsEditor.java", "BodyUseAPI": ["runnerSetting.getEnvOptions().setText(java.lang.String)"], "Fixed commit": "2272635a2dabd3911917bcb7a22c1ad19ef4e9ae", "Url": "https://api.github.com/repos/zengkid/SmartTomcat", "Date": "2018-04-09T14:06:33Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((variables == null) || (variables.trim().equals(\"\"))) return map;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6651/buggy-version/src.com.poratu.idea.plugins.tomcat.conf.AppCommandLineState.java", "BodyUseAPI": [], "Fixed commit": "2272635a2dabd3911917bcb7a22c1ad19ef4e9ae", "Url": "https://api.github.com/repos/zengkid/SmartTomcat", "Date": "2018-04-09T14:06:33Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((lastException) == null) || (!(java.util.Objects.equals(lastException.getMessage(), ex.getMessage())))) { mailService.sendAdminNotification((\"Uncaught exception: \" + ex)); lastException = ex; return \"redirect:/?error\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7852/buggy-version/src.main.java.ee.pardiralli.exceptions.PardiralliExceptionHandler.java", "BodyUseAPI": ["ee.pardiralli.service.MailService.sendAdminNotification(java.lang.String)"], "Fixed commit": "1b75b6d8d1bcc6629ffba879c167d64f6c5db122", "Url": "https://api.github.com/repos/pardiralli-dev/pardiralli", "Date": "2018-04-24T15:43:16Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index <= 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/583/buggy-version/src.main.java.edu.lu.uni.serval.bug.fixer.AbstractFixer.java", "BodyUseAPI": [], "Fixed commit": "b7047fb1c31fa437caa406f50cb276bfce8f3c75", "Url": "https://api.github.com/repos/fixminer/fixminerAPR", "Date": "2018-09-19T09:51:17Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.squareup.javapoet.ClassName.bestGuess(((eraseGenericIfNecessary(superType).toString()) + (StateSaver.SUFFIX)))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(rawType.toString().equals(rawType.reflectionName()))) { rawType = com.squareup.javapoet.ClassName.bestGuess(rawType.reflectionName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9178/buggy-version/processor.src.main.java.com.evernote.android.state.StateProcessor.java", "BodyUseAPI": ["com.squareup.javapoet.ClassName.bestGuess(rawType.reflectionName())", "com.squareup.javapoet.ClassName.reflectionName()"], "Fixed commit": "125f3070a17d906687ad5d6378ca3b694d94bb16", "Url": "https://api.github.com/repos/evernote/android-state", "Date": "2018-03-19T00:51:18Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<Classifier.Recognition>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/497/buggy-version/OpenCV.app.src.main.java.com.example.charles.opencv.AI.AI.java", "BodyUseAPI": [], "Fixed commit": "40a5c5a033d450461c5036e5b945a6eb1617f566", "Url": "https://api.github.com/repos/lowejosh/team3432-capstone", "Date": "2018-10-23T15:12:57Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (top.slantech.voicebirds.BuildConfig.DEBUG) model.setIsOpen((-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5289/buggy-version/app.src.main.java.top.slantech.voicebirds.comon.UIHelper.java", "BodyUseAPI": [], "Fixed commit": "4b9c54796ffd7181ca20ee34605f47478763df13", "Url": "https://api.github.com/repos/yz1309/voicebirds", "Date": "2018-03-29T10:14:07Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkIsSupportBackClose()) com.jude.swipbackhelper.SwipeBackHelper.onDestroy(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5289/buggy-version/app.src.main.java.top.slantech.voicebirds.ui.activity.base.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "4b9c54796ffd7181ca20ee34605f47478763df13", "Url": "https://api.github.com/repos/yz1309/voicebirds", "Date": "2018-03-29T10:14:07Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(mCommonParams)) return query;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4189/buggy-version/core.src.main.java.com.joey.cheetah.core.net.ApiCommonParamsInterceptor.java", "BodyUseAPI": [], "Fixed commit": "84f12d5ae8d971eca75c0bc926076d08afb012a1", "Url": "https://api.github.com/repos/JoeSteven/Cheetah", "Date": "2018-08-27T07:09:09Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["selectedFile.getAbsolutePath().lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (i > 0) { extension = selectedFile.getAbsolutePath().substring((i + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2687/buggy-version/src.com.thomasp.main.controller.AnalyserController.java", "BodyUseAPI": ["selectedFile.getAbsolutePath().substring(int)"], "Fixed commit": "37f0fcc694475af335c8e3a9bc9c97111c0643e7", "Url": "https://api.github.com/repos/ThomasPritchard/ProfanityDetector", "Date": "2018-07-31T11:58:44Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(model.checkWordMapValidity())) { view.createErrorDialog(\"Swear Word File Not Found\", \"You must provide a valid swear word file in order to continue\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2687/buggy-version/src.com.thomasp.main.controller.AnalyserController.java", "BodyUseAPI": [], "Fixed commit": "37f0fcc694475af335c8e3a9bc9c97111c0643e7", "Url": "https://api.github.com/repos/ThomasPritchard/ProfanityDetector", "Date": "2018-07-31T11:58:44Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileText) == null) { view.createInformationDialog(\"Chosen File Incompatible\", \"The file you are choosing is either incompatible or empty. Please try another file\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2687/buggy-version/src.com.thomasp.main.controller.AnalyserController.java", "BodyUseAPI": [], "Fixed commit": "37f0fcc694475af335c8e3a9bc9c97111c0643e7", "Url": "https://api.github.com/repos/ThomasPritchard/ProfanityDetector", "Date": "2018-07-31T11:58:44Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(extension.equals(\"txt\"))) { view.createInformationDialog(\"Chosen File Incompatible\", \"Please try another file\"); return; }else if (selectedFile != null) { fileText = com.thomasp.main.model.FileManager.loadSongFileIntoString(selectedFile.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2687/buggy-version/src.com.thomasp.main.controller.AnalyserController.java", "BodyUseAPI": [], "Fixed commit": "37f0fcc694475af335c8e3a9bc9c97111c0643e7", "Url": "https://api.github.com/repos/ThomasPritchard/ProfanityDetector", "Date": "2018-07-31T11:58:44Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.centurylink.mdw.cli.Checkpoint.getDbConnection()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(conn.getAutoCommit())) conn.commit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4636/buggy-version/mdw-common.src.com.centurylink.mdw.cli.Checkpoint.java", "BodyUseAPI": ["java.sql.Connection.commit()"], "Fixed commit": "2e3a3faac6de43cd79bdab90a30a5ab1b0c99a5f", "Url": "https://api.github.com/repos/CenturyLinkCloud/mdw", "Date": "2018-03-23T15:21:11Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.centurylink.mdw.cli.Checkpoint.getDbConnection()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(conn.getAutoCommit())) conn.commit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4636/buggy-version/mdw-common.src.com.centurylink.mdw.cli.Checkpoint.java", "BodyUseAPI": ["java.sql.Connection.commit()"], "Fixed commit": "2e3a3faac6de43cd79bdab90a30a5ab1b0c99a5f", "Url": "https://api.github.com/repos/CenturyLinkCloud/mdw", "Date": "2018-03-23T15:21:11Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.centurylink.mdw.cli.Checkpoint.getDbConnection()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(conn.getAutoCommit())) conn.commit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4636/buggy-version/mdw-common.src.com.centurylink.mdw.cli.Checkpoint.java", "BodyUseAPI": ["java.sql.Connection.commit()"], "Fixed commit": "2e3a3faac6de43cd79bdab90a30a5ab1b0c99a5f", "Url": "https://api.github.com/repos/CenturyLinkCloud/mdw", "Date": "2018-03-23T15:21:11Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.centurylink.mdw.cli.Checkpoint.getDbConnection()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(conn.getAutoCommit())) conn.commit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4636/buggy-version/mdw-common.src.com.centurylink.mdw.cli.Checkpoint.java", "BodyUseAPI": ["java.sql.Connection.commit()"], "Fixed commit": "2e3a3faac6de43cd79bdab90a30a5ab1b0c99a5f", "Url": "https://api.github.com/repos/CenturyLinkCloud/mdw", "Date": "2018-03-23T15:21:11Z"},
{"Line": "=>1986", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["boa.types.Ast.Statement.getExpression()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(exp.isInitialized())) return stmt;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3942/buggy-version/src.java.boa.functions.BoaNormalFormIntrinsics.java", "BodyUseAPI": [], "Fixed commit": "13f235f86b79cb3c743732332f1bd581a1e69200", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2018-06-06T17:56:58Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mViewDragHelper) == null) { mViewDragHelper = android.support.v4.widget.ViewDragHelper.create(parent, mDragCallback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1610/buggy-version/fabulousfilter.src.main.java.com.allattentionhere.fabulousfilter.viewpagerbottomsheet.ViewPagerBottomSheetBehavior.java", "BodyUseAPI": [], "Fixed commit": "6518bc8071ffeda9f0838ec2e70768bd0595d4ea", "Url": "https://api.github.com/repos/codegarage-tech/cg-as", "Date": "2018-01-29T04:51:25Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(imgName.endsWith(\":latest\"))) imgName += \":latest\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2254/buggy-version/src.main.java.org.hobbit.sdk.utils.commandreactions.ContainerCommandsReaction.java", "BodyUseAPI": [], "Fixed commit": "2d57cd7a0ebc05fba3d4904390d13c9f5d47f4de", "Url": "https://api.github.com/repos/hobbit-project/java-sdk", "Date": "2018-10-30T16:05:41Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pathParameter instanceof com.jetbrains.php.lang.psi.elements.StringLiteralExpression) { java.lang.String path = ((com.jetbrains.php.lang.psi.elements.StringLiteralExpression) (pathParameter)).getContents(); final java.lang.String errorViewNotFoundTemplate = \"View file for \\\"%name%\\\" not found.\"; final com.nvlad.yii2support.views.inspections.MissedViewLocalQuickFix quickFix = new com.nvlad.yii2support.views.inspections.MissedViewLocalQuickFix(path); final java.lang.String descriptionTemplate = errorViewNotFoundTemplate.replace(\"%name%\", path); final com.intellij.psi.PsiElement stringPart = pathParameter.findElementAt(1); if (stringPart != null) { problemsHolder.registerProblem(stringPart, descriptionTemplate, quickFix); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5939/buggy-version/src.com.nvlad.yii2support.views.inspections.MissedViewInspection.java", "BodyUseAPI": ["com.intellij.psi.PsiElement.findElementAt(int)"], "Fixed commit": "b341f083d9565af60805923723a3b5ff218ce1f2", "Url": "https://api.github.com/repos/nvlad/yii2support", "Date": "2018-02-13T20:53:38Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(manager.isProviderEnabled(LocationManager.GPS_PROVIDER))) android.widget.Toast.makeText(getApplicationContext(), \"GPS is disabled. Please turn it on\", Toast.LENGTH_SHORT).show(); else { android.widget.Toast.makeText(getApplicationContext(), \"Scanning..\", Toast.LENGTH_SHORT).show(); scanWifiList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2516/buggy-version/app.src.main.java.com.example.killua.wifiinfo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c0a5853a984038ccf05f63ea8f90542663bcf01c", "Url": "https://api.github.com/repos/VinitraMk/WifiInfo", "Date": "2018-04-04T20:57:59Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["amirz.adaptivestune.math.Parabola.root(double,double,double)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((intersect.length) == 2) { boolean firstBetween = between(intersect[0], minMeasuredBoost, maxMeasuredBoost); boolean secondBetween = between(intersect[1], minMeasuredBoost, maxMeasuredBoost); if (firstBetween && (!secondBetween)) { android.util.Log.d(amirz.adaptivestune.Algorithm.TAG, (\"Parabola fitting result 1: boost = \" + (intersect[0]))); return intersect[0]; } if ((!firstBetween) && secondBetween) { android.util.Log.d(amirz.adaptivestune.Algorithm.TAG, (\"Parabola fitting result 2: boost = \" + (intersect[1]))); return intersect[1]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2875/buggy-version/app.src.main.java.amirz.adaptivestune.Algorithm.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)", "amirz.adaptivestune.Algorithm.between(double,int,int)", "amirz.adaptivestune.Algorithm.between(double,int,int)"], "Fixed commit": "794c8f6d47dfaca72c9336324974b5202dc49c17", "Url": "https://api.github.com/repos/amirzaidi/AdaptiveStune", "Date": "2018-07-29T14:02:16Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(online)) { connect(); this.online = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1475/buggy-version/src.main.java.io.ebeaninternal.server.cluster.socket.SocketClient.java", "BodyUseAPI": [], "Fixed commit": "170d1b6f6da8a98fbc6cedbf7879cae22bd6187e", "Url": "https://api.github.com/repos/FOCONIS/ebean-cluster", "Date": "2018-03-23T19:26:33Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.yawlfoundation.yawl.editor.ui.properties.data.VariableRow.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rowValue == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8088/buggy-version/source.org.yawlfoundation.yawl.worklet.dialog.DataContextTablePanel.java", "BodyUseAPI": [], "Fixed commit": "1f6d1e357c83c1b90f84d203cd52349892ab858d", "Url": "https://api.github.com/repos/yawlfoundation/editor", "Date": "2018-05-31T08:42:34Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<com.codecool.klondike.Move>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((lastMove.previousPile.getPileType()) == (Pile.PileType.TABLEAU)) && (!(lastMove.previousPile.isEmpty()))) { lastMove.previousPile.getTopCard().flip(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6695/buggy-version/src.com.codecool.klondike.MoveHistory.java", "BodyUseAPI": ["lastMove.previousPile.getTopCard()", "lastMove.previousPile.getTopCard().flip()"], "Fixed commit": "1e0a0db5c86d61058e4f231c33e9f8838919dbb4", "Url": "https://api.github.com/repos/CodecoolBPoop/oop-java-klondike-solitaire-orangutan", "Date": "2018-06-28T10:30:00Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mISBNField.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(isbn)) { mISBNField.setError(getResources().getString(R.string.required)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3534/buggy-version/app.src.main.java.mad24.polito.it.ManualInsertActivity.java", "BodyUseAPI": [], "Fixed commit": "75940045b40d7ae5b172e6957118c24d30d307aa", "Url": "https://api.github.com/repos/SunSince90/Libre", "Date": "2018-04-19T17:48:30Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readTree(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(org.springframework.util.StringUtils.isEmpty(jsonNode.findValue(\"errcode\")))) throw new java.lang.RuntimeException(\"\u83b7\u53d6\u6570\u636e\u5931\u8d25\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3031/buggy-version/src.main.java.org.alittlebitch.fitness.tcm.controller.UserContoller.java", "BodyUseAPI": [], "Fixed commit": "12f783ec7545cdf054fffafa225871d015197371", "Url": "https://api.github.com/repos/shield-project/fitness-testing", "Date": "2018-09-14T09:04:18Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.apache.commons.lang3.StringUtils.isNotEmpty(s3_InputRegion)) || (org.apache.commons.lang3.StringUtils.isNotEmpty(s3_OutputRegion))) { if (org.apache.commons.lang3.StringUtils.isNotEmpty(s3_InputRegion)) { org.yeastrc.spectral_storage.scan_file_processor.s3_aws_interface.S3_AWS_InterfaceObjectHolder.getSingletonInstance().setS3_InputRegion(s3_InputRegion); } if (org.apache.commons.lang3.StringUtils.isNotEmpty(s3_OutputRegion)) { org.yeastrc.spectral_storage.scan_file_processor.s3_aws_interface.S3_AWS_InterfaceObjectHolder.getSingletonInstance().setS3_OutputRegion(s3_OutputRegion); } org.yeastrc.spectral_storage.scan_file_processor.s3_aws_interface.S3_AWS_InterfaceObjectHolder.getSingletonInstance().init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8458/buggy-version/Scan_File_Processor_Importer.src_main.org.yeastrc.spectral_storage.scan_file_processor.program.Scan_File_Processor_MainProgram.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.isNotEmpty(java.lang.String)", "org.apache.commons.lang3.StringUtils.isNotEmpty(java.lang.String)", "org.yeastrc.spectral_storage.scan_file_processor.s3_aws_interface.S3_AWS_InterfaceObjectHolder.getSingletonInstance().setS3_InputRegion(java.lang.String)", "org.yeastrc.spectral_storage.scan_file_processor.s3_aws_interface.S3_AWS_InterfaceObjectHolder.getSingletonInstance().setS3_OutputRegion(java.lang.String)"], "Fixed commit": "c49f79512ee0e68eaa1b48c112a354ab60ea7e7d", "Url": "https://api.github.com/repos/yeastrc/Spectral_Storage_Service", "Date": "2018-02-28T19:26:59Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (task.isRecurring()) { recurringService.deleteRecurringJob(user, task); com.walmart.labs.service.TaskService.logger.info(\"Recurring job deleted successfully!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4901/buggy-version/app.src.main.java.com.walmart.labs.service.TaskService.java", "BodyUseAPI": ["com.walmart.labs.service.RecurringService.deleteRecurringJob(com.walmart.labs.domain.User,com.walmart.labs.domain.Task)"], "Fixed commit": "136032924eafb2066f3d0aafb79e695212b723ba", "Url": "https://api.github.com/repos/cdadv/replenisher-task-management-backend", "Date": "2018-04-29T22:47:12Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GameWorld.Game.tilesTilWall()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (wall == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4456/buggy-version/GameWorld.src.GameWorld.Game.java", "BodyUseAPI": [], "Fixed commit": "44d3d16f5883a8d5bba48eba6b900f95824931b5", "Url": "https://api.github.com/repos/xavierbroadhead/AdventureGame", "Date": "2018-10-15T03:56:29Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(allData.isEmpty())) { for (fr.inria.spirals.repairnator.serializer.engines.SerializerEngine engine : this.getEngines()) { engine.serialize(allData, this.getType()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/834/buggy-version/repairnator.repairnator-pipeline.src.main.java.fr.inria.spirals.repairnator.serializer.PatchesSerializer.java", "BodyUseAPI": ["fr.inria.spirals.repairnator.serializer.engines.SerializerEngine.serialize(java.util.List<fr.inria.spirals.repairnator.serializer.engines.SerializedData>,this.getType())"], "Fixed commit": "2a0810a51466eb685d09856fefa2d853843db2db", "Url": "https://api.github.com/repos/fermadeiral/repairnator", "Date": "2018-05-15T17:51:40Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.exist.xquery.functions.fn.LOG.isTraceEnabled()) { org.exist.xquery.functions.fn.FunExactlyOne.logger.trace(((\"fn:exactly-one called with a sequence containing \" + (result.getItemCount())) + \" items\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2995/buggy-version/src.org.exist.xquery.functions.fn.FunExactlyOne.java", "BodyUseAPI": [], "Fixed commit": "20d657b6c541f9feb2224187ed61c97f71041720", "Url": "https://api.github.com/repos/eXist-db/exist", "Date": "2018-07-12T13:33:25Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.exist.xquery.functions.fn.LOG.isTraceEnabled()) { org.exist.xquery.functions.fn.FunError.logger.trace(((errorDesc + \": \") + (errorCode.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2995/buggy-version/src.org.exist.xquery.functions.fn.FunError.java", "BodyUseAPI": [], "Fixed commit": "20d657b6c541f9feb2224187ed61c97f71041720", "Url": "https://api.github.com/repos/eXist-db/exist", "Date": "2018-07-12T13:33:25Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(((((((((accessionFilePath) + \"/\") + (institutionCode)) + \"/\") + (org.recap.ReCAPConstants.ACCESSION_RECONCILATION_FILE_NAME)) + (institutionCode)) + (simpleDateFormat.format(new java.util.Date()))) + \".csv\"))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (filePath.toFile().exists()) { noOfLinesInFile = java.nio.file.Files.readAllLines(filePath).size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3010/buggy-version/src.main.java.org.recap.camel.accessionreconciliation.AccessionReconciliationProcessor.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.nio.file.Files.readAllLines(java.nio.file.Path)"], "Fixed commit": "abc56e337e99915203fe1e8f08951d313cf87edb", "Url": "https://api.github.com/repos/ResearchCollectionsAndPreservation/scsb-circ", "Date": "2018-06-07T13:23:38Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.http.ResponseEntity<java.util.Map>.getBody()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((body.size()) > 0) { java.nio.file.Files.write(filePath, barcodesAndCustomerCodesForReportFileBytes, java.nio.file.StandardOpenOption.APPEND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3010/buggy-version/src.main.java.org.recap.camel.accessionreconciliation.AccessionReconciliationProcessor.java", "BodyUseAPI": [], "Fixed commit": "abc56e337e99915203fe1e8f08951d313cf87edb", "Url": "https://api.github.com/repos/ResearchCollectionsAndPreservation/scsb-circ", "Date": "2018-06-07T13:23:38Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bootstrapView.getText().toString().equals(\"\")) { throw new java.lang.Exception(\"Bootstrap IP was empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5186/buggy-version/app.src.main.java.nl.tudelft.cs4160.trustchain_android.main.ChangeBootstrapActivity.java", "BodyUseAPI": [], "Fixed commit": "5dfc8062f3b9594083c385c357c3caea3a761bc9", "Url": "https://api.github.com/repos/Tribler/trustchain-android", "Date": "2018-06-06T14:17:58Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url.startsWith(\"about:\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/929/buggy-version/cn.ieclipse.smartqq.src.cn.ieclipse.smartim.console.TabComposite.java", "BodyUseAPI": [], "Fixed commit": "31292af58d0837e493f7b1bea794e82942189c0f", "Url": "https://api.github.com/repos/Jamling/SmartQQ4Eclipse", "Date": "2018-04-09T09:06:56Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minDuration.equals(duration)) && (duration.equals(maxDuration))) { return duration; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/10/buggy-version/Harmony.src.main.java.org.agohr.harmony.composer.harmonywalk.NextDuration.java", "BodyUseAPI": [], "Fixed commit": "fad56ad7e75785557cd05b86e01e99375ff0dbe2", "Url": "https://api.github.com/repos/AlbertGohr/efficient-algorithms", "Date": "2018-08-26T16:41:15Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((scale.down(pitch).getMidiValue()) < (minPitch.getMidiValue())) && ((maxPitch.getMidiValue()) < (scale.up(pitch).getMidiValue()))) { return pitch; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/10/buggy-version/Harmony.src.main.java.org.agohr.harmony.composer.harmonywalk.NextPitch.java", "BodyUseAPI": [], "Fixed commit": "fad56ad7e75785557cd05b86e01e99375ff0dbe2", "Url": "https://api.github.com/repos/AlbertGohr/efficient-algorithms", "Date": "2018-08-26T16:41:15Z"},
{"Line": "=>1403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(batchIdList.isEmpty())) { findBatches.add(org.hibernate.criterion.Restrictions.in(\"id\", batchIdList)); }else { findBatches.add(org.hibernate.criterion.Restrictions.eq(\"orgId\", orgId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9646/buggy-version/src.main.java.com.ut.dph.dao.impl.transactionInDAOImpl.java", "BodyUseAPI": ["org.hibernate.criterion.Restrictions.in(java.lang.String,java.util.List<java.lang.Integer>)", "org.hibernate.Criteria.add(org.hibernate.criterion.Restrictions.in(\"id\", batchIdList))"], "Fixed commit": "7a69022bd510a95c06da82c504883f94528fbd33", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2018-03-04T15:28:07Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getWorld().getBlockAt(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (block.getType().equals(Material.AIR)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6490/buggy-version/src.main.java.javamal.Main.java", "BodyUseAPI": [], "Fixed commit": "8e3c4ab4c5337f2b41f06a1883795fba5a2cfea7", "Url": "https://api.github.com/repos/minecraft-codingmath/plugin_javamal", "Date": "2018-02-22T07:07:53Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getCookies()) != null) { for (javax.servlet.http.Cookie cookie : request.getCookies()) { if (paramName.equalsIgnoreCase(cookie.getName())) { result = cookie.getValue(); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3938/buggy-version/muscida-spring-redis.src.main.java.xyz.proteanbear.muscida.RedisAuthorityAccountHandler.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Fixed commit": "17ffeb56754e212b7f334ff1a4c7c5d71a34c192", "Url": "https://api.github.com/repos/ProteanBear/ursa-major", "Date": "2018-10-26T07:29:39Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(hasChanged_)) && ((textbox_.getText()) != (org.rstudio.studio.client.common.rstudioapi.ui.AskSecretDialog.secretPlaceholder_))) { hasChanged_ = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4425/buggy-version/src.gwt.src.org.rstudio.studio.client.common.rstudioapi.ui.AskSecretDialog.java", "BodyUseAPI": [], "Fixed commit": "e78311e5fa59b5fc54216cd710b729aeac072592", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2018-02-14T01:03:16Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (days > 0) { buf.append(days).append('d'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2486/buggy-version/src.main.java.org.gitlab4j.api.utils.DurationUtils.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(int)"], "Fixed commit": "81cc979193e5b907b4fe27402a2554468be24fdd", "Url": "https://api.github.com/repos/gmessner/gitlab4j-api", "Date": "2018-01-07T17:44:27Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nikr.eve.jeveasset.gui.tabs.tracker.EveKitTrackImportUpdateTask.getLifeStart()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lifeStart == null) { returnValue = net.nikr.eve.jeveasset.gui.tabs.tracker.EveKitTrackImportUpdateTask.ReturnValue.ERROR; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1372/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.tabs.tracker.EveKitTrackImportUpdateTask.java", "BodyUseAPI": [], "Fixed commit": "6fa89f6b0f6460d93a14d07725922add2dd128d8", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2018-01-25T10:32:24Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list == null) || ((list.size()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7061/buggy-version/app.src.main.java.com.onezero.launcher.launcher.activity.Launcher.java", "BodyUseAPI": [], "Fixed commit": "0a1e3eac99ac0a49790927500e4e674409f6f532", "Url": "https://api.github.com/repos/10-lw/Launcher", "Date": "2018-08-29T08:17:48Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Spec.STGroup.getInstanceOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (st == null) { st = group.getInstanceOf(\"Metamodel\"); if (st == null) throw new java.lang.RuntimeException(\"Template Folder Not Found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8915/buggy-version/src.Spec.ProcessSpec.java", "BodyUseAPI": [], "Fixed commit": "82ba29d648d7aa48019a62d6d795d579bd69a30e", "Url": "https://api.github.com/repos/pablofcastro/PhilStone", "Date": "2018-03-12T12:16:52Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((order.length) < 3) { java.lang.System.out.println(((socket.getInetAddress()) + \" has entered an incomplete direct message command\")); }else { chatServer.Server.sendString(order[2], this, order[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5590/buggy-version/src.chatServer.Connection.java", "BodyUseAPI": ["chatServer.Server.sendString(java.lang.String,chatServer.Connection,java.lang.String)"], "Fixed commit": "a56e1215b75ac8b94ac3682fb246ca1adfb1da94", "Url": "https://api.github.com/repos/kanitkameh/ChatKam", "Date": "2018-01-13T18:28:15Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (CMS.sys_state) { operations.loadCourses(); }else { java.lang.System.out.println(\"Turn system on first.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6895/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "3ee46c8511c8d55751a4e3d17f05facd7a0a5f26", "Url": "https://api.github.com/repos/sjrahimian/course_management_sys", "Date": "2018-04-08T05:41:47Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((schools[(i - 1)]) != null) retStr += (((\"School \" + i) + \": \") + (schools[(i - 1)])) + \"\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4630/buggy-version/User.java", "BodyUseAPI": [], "Fixed commit": "23bbcbee560e51f5e764b19437ec9e174b6de91a", "Url": "https://api.github.com/repos/Kryptikz/rambook", "Date": "2018-02-16T18:49:22Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.saveit.model.ModelManager.getCurrentDirectory()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (directory == 0) { return javafx.collections.FXCollections.unmodifiableObservableList(javafx.collections.FXCollections.emptyObservableList()); }else { return javafx.collections.FXCollections.unmodifiableObservableList(filteredIssues.get(getCurrentDirectory()).getObservableSolutions()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9762/buggy-version/src.main.java.seedu.saveit.model.ModelManager.java", "BodyUseAPI": [], "Fixed commit": "b43c5d2b5cd71692045d175666e55d4d0b2d7068", "Url": "https://api.github.com/repos/CS2103-AY1819S1-T12-4/main", "Date": "2018-10-27T09:02:24Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mango.contentproviderandresolverdemo.ArticlesAdapter.getArticlesByPos(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (a == null) { return -1; }else { return a.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/845/buggy-version/app.src.main.java.com.mango.contentproviderandresolverdemo.MainActivity.java", "BodyUseAPI": ["com.mango.contentproviderandresolverdemo.Article.getId()"], "Fixed commit": "ea3fe3d4c1bb6f65c8af660e10729c095cabb3bd", "Url": "https://api.github.com/repos/4apple/ContentProviderAndResolverDemo", "Date": "2018-04-22T23:03:36Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (convertView == null) { convertView = inflater.inflate(R.layout.item, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/845/buggy-version/app.src.main.java.com.mango.contentproviderandresolverdemo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ea3fe3d4c1bb6f65c8af660e10729c095cabb3bd", "Url": "https://api.github.com/repos/4apple/ContentProviderAndResolverDemo", "Date": "2018-04-22T23:03:36Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((client.getChat(contact)) == null) { client.addChat(new chainmail.Blockchain(contact)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4091/buggy-version/src.chainmail.IClient.java", "BodyUseAPI": ["chainmail.Client.addChat(chainmail.Blockchain)"], "Fixed commit": "98120d7b1d0801c710f8fd0162a3a164dadacad0", "Url": "https://api.github.com/repos/akshayrkapadia/ChainMail", "Date": "2018-10-07T00:29:18Z"},
{"Line": "=>1253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.getElementById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (content == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4166/buggy-version/src.com.judy.momoplayer.util.Util.java", "BodyUseAPI": [], "Fixed commit": "b7f74a44f6884ab07cded14c80ce6568b08b4f21", "Url": "https://api.github.com/repos/junehappylove/june.music.mm", "Date": "2018-07-16T08:19:23Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.isOp()) { is.addUnsafeEnchantment(Enchantment.DIG_SPEED, 10); is.addUnsafeEnchantment(Enchantment.LURE, 10); is.addUnsafeEnchantment(Enchantment.DURABILITY, 10); is.addUnsafeEnchantment(Enchantment.ARROW_INFINITE, 10); lores.add(\"\u00a77\u52b9\u7387\u5f37\u5316 \u2169\"); lores.add(\"\u00a77\u8010\u4e45\u529b \u2169\"); }else { is.addUnsafeEnchantment(Enchantment.DIG_SPEED, 6); is.addUnsafeEnchantment(Enchantment.LURE, 6); is.addUnsafeEnchantment(Enchantment.DURABILITY, 0); is.addUnsafeEnchantment(Enchantment.ARROW_INFINITE, 0); lores.add(\"\u00a77\u52b9\u7387\u5f37\u5316 \u2165\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9302/buggy-version/src.main.java.com.mycompany.premisesevent.ItemControl.java", "BodyUseAPI": [], "Fixed commit": "33e0611510a48b1ed7a7622afe80cf3791120e77", "Url": "https://api.github.com/repos/kumaisu/PremisesEvent", "Date": "2018-05-13T20:31:22Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.image.BufferedImage.getRGB(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (vertexColour == -9079435) { java.lang.System.err.println(v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/223/buggy-version/src.uk.ac.cam.cl.waytotheclinic.VertexFinder.java", "BodyUseAPI": [], "Fixed commit": "ff572e589435a964bb194e3425366efdb78df25a", "Url": "https://api.github.com/repos/nikihowe/waytotheclinic", "Date": "2018-03-01T19:10:55Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.image.BufferedImage.getRGB(int,int)", "java.util.HashMap<java.lang.String, java.lang.String>.get(uk.ac.cam.cl.waytotheclinic.RoomType.getColour(uk.ac.cam.cl.waytotheclinic.VertexFinder.lineImages.get(v.getZ()).getRGB(v.getX(), v.getY())))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(uk.ac.cam.cl.waytotheclinic.RoomType.isGrey(vertexColour))) && (!(v.getLabels().contains(colour)))) { v.addLabel(colour); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/223/buggy-version/src.uk.ac.cam.cl.waytotheclinic.VertexFinder.java", "BodyUseAPI": ["uk.ac.cam.cl.waytotheclinic.Vertex.addLabel(java.lang.String)"], "Fixed commit": "ff572e589435a964bb194e3425366efdb78df25a", "Url": "https://api.github.com/repos/nikihowe/waytotheclinic", "Date": "2018-03-01T19:10:55Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (entity != null) { ((MxCompiler.SemanticCheck.ClassEntity) (entity)).setScope(currentScope); visit(((MxCompiler.SemanticCheck.FunctionEntity) (entity)).body().stmts()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4955/buggy-version/src.MxCompiler.SemanticCheck.ASTSymbolVisitor.java", "BodyUseAPI": [], "Fixed commit": "1b08ccfef2c77d188c54fea8e1b311c3da76645a", "Url": "https://api.github.com/repos/TimerChen/MxCompiler", "Date": "2018-05-03T20:15:03Z"},
{"Line": "=>1565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedGoalCellY == 0) { selectedGoalCellY = previousGoalCellX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5060/buggy-version/src.mobemu.utils.HCMM.java", "BodyUseAPI": [], "Fixed commit": "223a3c518b5b9225e29064c44760468708bc0a4b", "Url": "https://api.github.com/repos/raduciobanu/mobemu", "Date": "2018-06-06T14:17:41Z"},
{"Line": "=>1561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedGoalCellX == 0) { selectedGoalCellX = previousGoalCellX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5060/buggy-version/src.mobemu.utils.HCMM.java", "BodyUseAPI": [], "Fixed commit": "223a3c518b5b9225e29064c44760468708bc0a4b", "Url": "https://api.github.com/repos/raduciobanu/mobemu", "Date": "2018-06-06T14:17:41Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (listener == null) { child.setOnClickListener(null); }else { child.setOnClickListener(new com.tylersuehr.chips.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { listener.onChipClicked(com.tylersuehr.chips.ChipView.this); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7726/buggy-version/library.src.main.java.com.tylersuehr.chips.ChipView.java", "BodyUseAPI": ["android.view.View.setOnClickListener(com.tylersuehr.chips.OnClickListener)", "com.tylersuehr.chips.ChipView.OnChipClickListener.onChipClicked(com.tylersuehr.chips.ChipView)"], "Fixed commit": "f8e14bd0b701293b554b75020f56c02be2ea19d6", "Url": "https://api.github.com/repos/tylersuehr7/chips-input-layout", "Date": "2018-04-05T20:22:10Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mTaskListAdapter.isEmpty()) { mEmptyStateTextView.setVisibility(View.VISIBLE); mEmptyStateTextView.setText(\"No task lists, add a new one!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2107/buggy-version/app.src.main.java.com.example.guyerez.todotiger.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d20d8c71a7f7a7b1f722ee66a66ecf054dc90534", "Url": "https://api.github.com/repos/GuyDev1/TodoTiger", "Date": "2018-09-27T09:19:59Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getSunCycleLastAnnounceMarker()) != min1) { setSunCycleLastAnnounceMarker(min1); ure.areas.UCell pcell = cellAt(commander.player().areaX(), commander.player().areaY()); if (pcell != null) if ((pcell.sunBrightness()) > 0.1F) commander.printScroll(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5947/buggy-version/src.main.java.ure.areas.UArea.java", "BodyUseAPI": ["ure.areas.UArea.setSunCycleLastAnnounceMarker(int)"], "Fixed commit": "1d17bf41d272534dec2c6f3708348c8d2b796793", "Url": "https://api.github.com/repos/gilmore606/ure", "Date": "2018-07-15T21:45:59Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (cn.hutool.core.util.ArrayUtil.isNotEmpty(names)) { for (java.lang.String name : names) { try { this.putOnce(name, jsonObject.getObj(name)); } catch (java.lang.Exception ignore) { } } }else { this.putAll(jsonObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3158/buggy-version/hutool-json.src.main.java.cn.hutool.json.JSONObject.java", "BodyUseAPI": [], "Fixed commit": "79a6bb23727462df631f251d9b57bb5307060f4e", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2018-08-05T08:29:45Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.alibaba.nacos.naming.boot.RunningConfig.getServerPort()) <= 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5455/buggy-version/naming.src.main.java.com.alibaba.nacos.naming.core.DistroMapper.java", "BodyUseAPI": [], "Fixed commit": "0c034d5ee3dfb1c80448c83328d407610cfc1c0c", "Url": "https://api.github.com/repos/alibaba/nacos", "Date": "2018-10-17T12:26:15Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isUsingSupportFragments)) { com.developerxy.traffic.compiler.utils.MessagerUtils.displayMessage(javax.tools.Diagnostic.Kind.ERROR, \"MapTo was used on a mix of support and non support fragments.\", element); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7475/buggy-version/Traffic-compiler.src.main.java.com.developerxy.traffic.compiler.extractors.RouteBindingExtractor.java", "BodyUseAPI": [], "Fixed commit": "7e26c14628d42680869ba5dfa1956d0d174e4fe2", "Url": "https://api.github.com/repos/DeveloperXY/Traffic", "Date": "2018-08-12T14:14:24Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isUsingSupportFragments) { com.developerxy.traffic.compiler.utils.MessagerUtils.displayMessage(javax.tools.Diagnostic.Kind.ERROR, \"MapTo was used on a mix of support and non support fragments.\", element); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7475/buggy-version/Traffic-compiler.src.main.java.com.developerxy.traffic.compiler.extractors.RouteBindingExtractor.java", "BodyUseAPI": [], "Fixed commit": "7e26c14628d42680869ba5dfa1956d0d174e4fe2", "Url": "https://api.github.com/repos/DeveloperXY/Traffic", "Date": "2018-08-12T14:14:24Z"},
{"Line": "=>1280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mo.countObservers()) == 0) it.remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8074/buggy-version/mars.mips.hardware.Memory.java", "BodyUseAPI": [], "Fixed commit": "3cd881214657ed3793d6b4f450392691c251d041", "Url": "https://api.github.com/repos/JarrettBillingsley/MARS_Assembler", "Date": "2018-08-02T23:15:06Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(params.getContentChanges().isEmpty())) { org.springframework.lsp.simplelanguageserver.document.TextDocument.log.warn(\"Change event with bad version ignored: {}\", params); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5128/buggy-version/server.simple-language-server.src.main.java.org.springframework.lsp.simplelanguageserver.document.TextDocument.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,org.eclipse.lsp4j.DidChangeTextDocumentParams)"], "Fixed commit": "ca5f5ac56e96d2a7f6606981c0b33e115035dc90", "Url": "https://api.github.com/repos/kdvolder/bootiful-language-server", "Date": "2018-04-13T20:27:28Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((temp) == 0) { getChildren().removeAll(cbo_aantalSpelers, btn_confirm); getChildren().addAll(cbo_aantalSpelers, lbl_foutMelding, btn_confirm); temp += 1; }else { getChildren().removeAll(cbo_aantalSpelers, lbl_foutMelding, btn_confirm); getChildren().addAll(cbo_aantalSpelers, lbl_foutMelding, btn_confirm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2765/buggy-version/Project_GroepA2.src.gui.keuzeStage.java", "BodyUseAPI": [], "Fixed commit": "e8b5af36b10e50092033772dc74c55219a237098", "Url": "https://api.github.com/repos/yannoliv/Projecten", "Date": "2018-04-20T12:10:21Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isSuccessful) { formatedLogBuilder.append(compileLog.replace(\"\\n\", \"\\n\\n\")); formatedLogBuilder.append(\"\\nCompile Error, Time = 0 ms, Memory = 0 KB, Score = 0.\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7227/buggy-version/judger.src.main.java.org.verwandlung.voj.judger.application.ApplicationDispatcher.java", "BodyUseAPI": [], "Fixed commit": "a57319e2561ff84bfd8e76ef75339bc2bcd0e62b", "Url": "https://api.github.com/repos/hzxie/voj", "Date": "2018-02-21T13:06:57Z"},
{"Line": "=>633", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (fractWeb != null) { openWebpage(fractWeb); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4261/buggy-version/src.edu.udc.ProjectGUI.java", "BodyUseAPI": [], "Fixed commit": "ecbf4ada46f1bb1e3dcb7bac172bcd393f3ced86", "Url": "https://api.github.com/repos/MichaelKennedy1983/DiversityProject", "Date": "2018-04-23T03:31:29Z"},
{"Line": "=>1781", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getContentType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (ct != null) { java.util.regex.Matcher m = com.jdcloud.JDApiBase.regexMatch(ct, \"(?i)charset=([\\\\w-]+)\"); if (m.find()) resCharset = m.group(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8382/buggy-version/jdcloud.src.com.jdcloud.JDApiBase.java", "BodyUseAPI": ["com.jdcloud.JDApiBase.regexMatch(java.lang.String,java.lang.String)"], "Fixed commit": "2cd92841d4e0ad86d70f6468288d0b22793f3454", "Url": "https://api.github.com/repos/skyshore2001/jdcloud-java", "Date": "2018-09-11T10:25:37Z"},
{"Line": "=>896", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.TraceImporter.getCellString(row.getCell(xlsD.getChargenLinkCol()))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (lotDoublettes.contains(key)) { exceptions.add(new java.lang.Exception(((((\"[\" + (i + 1)) + \"] Unclear to which lot the ingredients should be connected - same Lot number (\") + key) + \") is used for different products.\\nTry to make use of the Line Number as connection key.\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2311/buggy-version/de.bund.bfr.knime.openkrise.db.src.de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.TraceImporter.java", "BodyUseAPI": ["java.util.List<java.lang.Exception>.add(java.lang.Exception)"], "Fixed commit": "bbf9acfae0345f17d84d55f662557433579ae59b", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2018-01-08T13:01:26Z"},
{"Line": "=>836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lotNumber2ID.containsKey(d.getLot().getNumber())) { if ((lotNumber2ID.get(d.getLot().getNumber()).intValue()) != (d.getLot().getId().intValue())) { lotDoublettes.add(d.getLot().getNumber()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2311/buggy-version/de.bund.bfr.knime.openkrise.db.src.de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.TraceImporter.java", "BodyUseAPI": ["d.getLot().getNumber()", "d.getLot().getNumber()", "d.getLot().getId().intValue()", "de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.Delivery.getLot()", "de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.Delivery.getLot()", "java.lang.Integer.intValue()", "de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.Delivery.getLot()", "java.util.HashSet<java.lang.String>.add(d.getLot().getNumber())", "java.util.HashMap<java.lang.String, java.lang.Integer>.get(d.getLot().getNumber())", "d.getLot().getId()"], "Fixed commit": "bbf9acfae0345f17d84d55f662557433579ae59b", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2018-01-08T13:01:26Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((timeDueOn.getStartTime().isAfter(java.time.LocalDateTime.now())) && (timeDueOn.getTimeDueOn().isBefore(java.time.LocalDateTime.now()))) && ((timeDueOn.getTemperature()) < (((double) (currentTemperature)) + overshootDegrees))) && (timeDueOn.getTimeDueOn().plus(minimumActivePeriodMinutes).isBefore(java.time.LocalDateTime.now()))) && (!(heating.getBoiler().isHeating()))) { uk.me.steev.java.heating.controller.HeatingProcessor.logger.info(\"Warming up, will overshoot, stay off\"); }else if (((timeDueOn.getTemperature()) > ((double) (currentTemperature))) && (timeDueOn.getTimeDueOn().isBefore(java.time.LocalDateTime.now()))) { uk.me.steev.java.heating.controller.HeatingProcessor.logger.debug((((((((\"Current temperature \" + currentTemperature) + \" is below desired temperature \") + (timeDueOn.getTemperature())) + \" in an event starting at \") + (timeDueOn.getStartTime())) + \" warming up from \") + (timeDueOn.getTimeDueOn()))); java.time.Duration newProportionalTime = java.time.Duration.ofSeconds(((long) ((((timeDueOn.getTemperature()) - currentTemperature) * (proportionalHeatingIntervalMinutes.toMinutes())) * 60))); if ((timeDueOn.getStartTime().isAfter(java.time.LocalDateTime.now())) && (timeDueOn.getTimeDueOn().isBefore(java.time.LocalDateTime.now()))) { uk.me.steev.java.heating.controller.HeatingProcessor.logger.debug(\"Warm-up period, stay on until desired temp period starts\"); newProportionalTime = proportionalHeatingIntervalMinutes; }else if ((newProportionalTime.compareTo(minimumActivePeriodMinutes)) < 0) { newProportionalTime = minimumActivePeriodMinutes; }else if ((newProportionalTime.compareTo(proportionalHeatingIntervalMinutes)) > 0) { newProportionalTime = proportionalHeatingIntervalMinutes; } heating.setProportion((((float) (newProportionalTime.getSeconds())) / 60)); if (heating.getBoiler().isHeating()) { java.time.LocalDateTime timeHeatingOn = heating.getBoiler().getTimeHeatingOn(); uk.me.steev.java.heating.controller.HeatingProcessor.logger.debug((((\"Heating is on - came on at \" + timeHeatingOn) + \" and proportion is \") + newProportionalTime)); if ((timeHeatingOn.plus(newProportionalTime).compareTo(java.time.LocalDateTime.now())) < 0) { heating.getBoiler().stopHeating(); heating.getScheduledExecutor().schedule(this, newProportionalTime.toMillis(), java.util.concurrent.TimeUnit.MILLISECONDS); } }else { java.time.LocalDateTime timeHeatingOff = heating.getBoiler().getTimeHeatingOff(); uk.me.steev.java.heating.controller.HeatingProcessor.logger.debug((((\"Heating is off - went off at \" + timeHeatingOff) + \" and proportion is \") + newProportionalTime)); if ((timeHeatingOff.plus(proportionalHeatingIntervalMinutes.minus(newProportionalTime)).compareTo(java.time.LocalDateTime.now())) < 0) { heating.getBoiler().startHeating(); heating.getScheduledExecutor().schedule(this, newProportionalTime.toMillis(), java.util.concurrent.TimeUnit.MILLISECONDS); } } }else { uk.me.steev.java.heating.controller.HeatingProcessor.logger.debug(\"No current demand for heating\"); if (heating.getBoiler().isHeating()) { uk.me.steev.java.heating.controller.HeatingProcessor.logger.debug(\"Boiler is on, turn off\"); heating.getBoiler().stopHeating(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3192/buggy-version/src.uk.me.steev.java.heating.controller.HeatingProcessor.java", "BodyUseAPI": ["heating.getBoiler().startHeating()", "uk.me.steev.java.heating.controller.Heating.setProportion(float)", "heating.getBoiler().getTimeHeatingOn()", "heating.getBoiler().isHeating()", "uk.me.steev.java.heating.controller.TemperatureEvent.getTemperature()", "uk.me.steev.java.heating.controller.TemperatureEvent.getTemperature()", "uk.me.steev.java.heating.controller.TemperatureEvent.getStartTime()", "java.time.Duration.ofSeconds(((long) ((((timeDueOn.getTemperature()) - currentTemperature) * (proportionalHeatingIntervalMinutes.toMinutes())) * 60)))", "uk.me.steev.java.heating.controller.Heating.getBoiler()", "uk.me.steev.java.heating.controller.TemperatureEvent.getTimeDueOn()", "heating.getBoiler().stopHeating()", "heating.getBoiler().stopHeating()", "heating.getScheduledExecutor().schedule(uk.me.steev.java.heating.controller.HeatingProcessor,long,java.util.concurrent.TimeUnit)", "uk.me.steev.java.heating.controller.TemperatureEvent.getStartTime()", "heating.getBoiler().isHeating()", "uk.me.steev.java.heating.controller.Heating.getBoiler()", "uk.me.steev.java.heating.controller.Heating.getScheduledExecutor()", "uk.me.steev.java.heating.controller.TemperatureEvent.getTemperature()", "java.time.Duration.compareTo(java.time.Duration)", "timeDueOn.getTimeDueOn().isBefore(java.time.LocalDateTime)", "uk.me.steev.java.heating.controller.Heating.getBoiler()", "timeDueOn.getStartTime().isAfter(java.time.LocalDateTime)", "uk.me.steev.java.heating.controller.Heating.getBoiler()", "uk.me.steev.java.heating.controller.Heating.getBoiler()", "org.apache.logging.log4j.Logger.debug((((((((\"Current temperature \" + currentTemperature) + \" is below desired temperature \") + (timeDueOn.getTemperature())) + \" in an event starting at \") + (timeDueOn.getStartTime())) + \" warming up from \") + (timeDueOn.getTimeDueOn())))", "timeDueOn.getTimeDueOn().isBefore(java.time.LocalDateTime)", "heating.getBoiler().getTimeHeatingOff()", "uk.me.steev.java.heating.controller.TemperatureEvent.getTimeDueOn()", "heating.getScheduledExecutor().schedule(uk.me.steev.java.heating.controller.HeatingProcessor,long,java.util.concurrent.TimeUnit)", "uk.me.steev.java.heating.controller.Heating.getScheduledExecutor()", "uk.me.steev.java.heating.controller.Heating.getBoiler()", "uk.me.steev.java.heating.controller.TemperatureEvent.getTimeDueOn()", "uk.me.steev.java.heating.controller.Heating.getBoiler()"], "Fixed commit": "f4aacfc5bcdab46754656d47e55f5dc5d0144256", "Url": "https://api.github.com/repos/daviessm/heating-java", "Date": "2018-01-04T21:09:17Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Logger.localNameToStr.containsKey(Logger.currentLocalName)) { java.lang.String str1 = Logger.localNameToStr.get(Logger.currentLocalName).toString(); java.lang.String str2 = Logger.currentLocalStr.toString(); if (Logger.equalsLocalStrings(str1, str2)) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1221/buggy-version/src.Logger.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.util.HashMap<java.lang.String, java.lang.StringBuilder>.get(java.lang.String)"], "Fixed commit": "129ecd8f213b121667883e76022dbbd36e1ebf8d", "Url": "https://api.github.com/repos/SaarSch/pav_Project", "Date": "2018-07-26T10:02:21Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ie.demo.domain.User.getUsername()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((userMapper.userExists(username)) == 0) { result = userMapper.register(u); }else { result = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8199/buggy-version/springBootDemo.src.main.java.ie.demo.service.impl.UserServiceImpl.java", "BodyUseAPI": ["ie.demo.mapper.UserMapper.register(ie.demo.domain.User)"], "Fixed commit": "d938313598a3824e20a937591576c8e5f266be77", "Url": "https://api.github.com/repos/dannoonan/SystemsAnalysisDesignProject", "Date": "2018-10-30T17:47:02Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsBadge) { noteBlockHolder.getImageView().setImportantForAccessibility(View.IMPORTANT_FOR_ACCESSIBILITY_NO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8953/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.notifications.blocks.NoteBlock.java", "BodyUseAPI": [], "Fixed commit": "b116810527e77f95d8a5f83c6b04af3350ed7a5a", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2018-03-14T12:54:15Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isActive) { citizen.setActiveCase(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6479/buggy-version/SensumUdred_Persistence.src.persistence.DataCase.java", "BodyUseAPI": [], "Fixed commit": "56370e286dca7b0db32fe0e84400640ae23b2038", "Url": "https://api.github.com/repos/Frede175/Gruppe13", "Date": "2018-05-01T11:19:17Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((geoLocation) != null) { newTask = new ca.ualbert.cs.tasko.Task(taskRequester.getId(), taskName, description, photos, geoLocation); }else { newTask = new ca.ualbert.cs.tasko.Task(taskRequester.getId(), taskName, description, photos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3218/buggy-version/app.src.main.java.ca.ualbert.cs.tasko.AddTaskActivity.java", "BodyUseAPI": [], "Fixed commit": "a745119f8f221e8943a88edc9bd2034426f79fdc", "Url": "https://api.github.com/repos/CMPUT301W18T14/PraiseTheSun", "Date": "2018-04-07T01:09:40Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMovieArrayList) != null) { mMoviesPresenter.setMovieList(mMovieArrayList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6146/buggy-version/app.src.main.java.com.android.udacity.popularmovies.Model.ConnectNetwork.java", "BodyUseAPI": [], "Fixed commit": "be6d4d27a5e1ff9f2226e02946b9b0d92226aef4", "Url": "https://api.github.com/repos/eberthfelipe/Popular-Movies", "Date": "2018-09-11T04:39:28Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entityItemPickupEvent.getEntityPlayer()) instanceof net.minecraftforge.common.util.FakePlayer) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6668/buggy-version/src.main.java.techreborn.events.TRRecipeHandler.java", "BodyUseAPI": [], "Fixed commit": "f7008d9c873b09f91dc9f2b94b9949e31d1e6637", "Url": "https://api.github.com/repos/Dimmerworld/TechReborn", "Date": "2018-02-13T17:44:46Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nextLineCheck.hasNextLine()) { nextLineChecker = nextLineCheck.nextLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7022/buggy-version/Enamel.src.enamel.ScenarioParser.java", "BodyUseAPI": ["java.util.Scanner.nextLine()"], "Fixed commit": "8cb7a9ac0ad4e158e67f4a59492058f0317f701f", "Url": "https://api.github.com/repos/connorAhearn/Braille_Project", "Date": "2018-02-23T20:53:25Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(clazz.isArray())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1817/buggy-version/src.main.java.nawaman.nullable.NullObjects.java", "BodyUseAPI": [], "Fixed commit": "1035871d755e0a7ff52e96c3b7554c0fbdb36787", "Url": "https://api.github.com/repos/NawaMan/NullableJ", "Date": "2018-02-09T06:10:26Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eu.hyvar.evolution.util.HyEvolutionUtil.getValidTemporalElement(feature.getTypes(), new java.util.Date()).getType().equals(HyFeatureTypeEnum.OPTIONAL)) { optionalIntervalList = new java.util.ArrayList<java.util.List<java.lang.Integer>>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3030/buggy-version/plugins.eu.hyvar.reconfigurator.input.src.eu.hyvar.reconfigurator.input.exporter.HyVarRecExporter.java", "BodyUseAPI": [], "Fixed commit": "4b698d4ceae25739b9ad245a8f6027d85ab2be35", "Url": "https://api.github.com/repos/DarwinSPL/DarwinSPL", "Date": "2018-03-09T21:44:43Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { android.view.Window w = getWindow(); w.setFlags(WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS, WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3027/buggy-version/app.src.main.java.com.mahausch.perfectweekend.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "ed8d52ffc192aaf823ff50e2412e7d8ef6515783", "Url": "https://api.github.com/repos/Barrick89/PerfectWeekend", "Date": "2018-03-28T19:21:53Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((gameThread) != null) && ((rmiGameClient) != null)) { gameThread.stop(); rmiGameClient = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3037/buggy-version/src.logic.administration.Administration.java", "BodyUseAPI": [], "Fixed commit": "8ad7399802d07bcb3aea1c45fc11fe6b69ca79a4", "Url": "https://api.github.com/repos/Spacegod007/Highway2Hell", "Date": "2018-01-22T08:42:41Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((helperWorkspacePointers) == null) { helperWorkspacePointers = new java.util.HashMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6793/buggy-version/deeplearning4j.deeplearning4j-nn.src.main.java.org.deeplearning4j.nn.workspace.LayerWorkspaceMgr.java", "BodyUseAPI": [], "Fixed commit": "5286dfba677f8c6edd81d001e2f9a3e4f2a4f306", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2018-09-05T01:48:40Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.amazonaws.services.s3.model.S3ObjectSummary.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(organismKey.equals(com.erquiaga.organism.lambdas.ORGANISM_FOLDER))) { organismKey = organismKey.substring(0, ((organismKey.length()) - 5)); organismKey = organismKey.substring(com.erquiaga.organism.lambdas.ORGANISM_FOLDER.length(), organismKey.length()); organismList.add(organismKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5497/buggy-version/OrganismService.src.main.java.com.erquiaga.organism.lambdas.ListOrganisms.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "8e1c5de44bbe73c8d17b8d5e64e3a5ad4edc5c12", "Url": "https://api.github.com/repos/BrendanErquiaga/Hazi", "Date": "2018-08-07T00:03:15Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (file != null) { java.lang.String lowerCasePath = file.getPath().toLowerCase(); int index = lowerCasePath.indexOf(lowerCaseSuffix); if (index != (-1)) { dirs.add(new java.io.File(file.getPath().substring(0, index))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6890/buggy-version/androidx.src.main.java.me.panpf.androidx.os.storage.Storagex.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.util.List<java.io.File>.add(java.io.File)", "java.io.File.getPath()", "java.lang.String.toLowerCase()", "java.io.File.getPath()"], "Fixed commit": "e22173027c2e9e49c5631dd99377faea2c423688", "Url": "https://api.github.com/repos/panpf/androidx", "Date": "2018-10-12T08:57:33Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((etienned.lecteuropus.Utils.bytesToInt(transitData, 44, 12)) == 4088) { offset = 8; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1304/buggy-version/app.src.main.java.etienned.lecteuropus.Trip.java", "BodyUseAPI": [], "Fixed commit": "4711909edaa5c832415e10a517dc74325025ba03", "Url": "https://api.github.com/repos/FelixINX/LecteurOPUS", "Date": "2018-03-19T22:37:23Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scene.GamePlayScene.STAGE) > (-1)) { gameOverRun(); showScoreBoard(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2611/buggy-version/src.GameCanvas.java", "BodyUseAPI": [], "Fixed commit": "e98bd7a73c2c2681c3442d843b979ea39683eea2", "Url": "https://api.github.com/repos/Yukishiori/BestGameofCI", "Date": "2018-02-08T16:26:13Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gtPlusPlus.xmod.gregtech.common.tileentities.machines.multi.processing.advanced.GregtechMetaTileEntity_Adv_EBF.mUsingPollutionOutputs) { for (net.minecraftforge.fluids.FluidStack pollutionFluidStack : gtPlusPlus.xmod.gregtech.common.tileentities.machines.multi.processing.advanced.GregtechMetaTileEntity_Adv_EBF.mPollutionFluidStacks) { if (tLiquid.isFluidEqual(pollutionFluidStack)) { isOutputPollution = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1458/buggy-version/src.Java.gtPlusPlus.xmod.gregtech.common.tileentities.machines.multi.processing.advanced.GregtechMetaTileEntity_Adv_EBF.java", "BodyUseAPI": [], "Fixed commit": "65e67777ba698135097bb9f2584a606ee1815c33", "Url": "https://api.github.com/repos/draknyte1/GTplusplus", "Date": "2018-08-22T15:25:51Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (container != null) { android.util.Log.e(CustomWebViewClient.TAG, (\"downloadVideo\" + (container.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4939/buggy-version/videodetector.src.main.java.com.videodetector.DownloaderWebView.java", "BodyUseAPI": ["android.util.Log.e(CustomWebViewClient.TAG,(\"downloadVideo\" + (container.toString())))", "CustomWebViewClient.MediaContainer.toString()"], "Fixed commit": "1c9919db959c19c25050524c3864c57a380a737f", "Url": "https://api.github.com/repos/fgustovo/Custom-WebView", "Date": "2018-10-28T08:50:29Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (intent != null) { android.os.Bundle extras = intent.getExtras(); if (extras != null) { this.url = extras.getString(\"url\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4939/buggy-version/videodetector.src.main.java.com.videodetector.clipboard.FloatingWindowService.java", "BodyUseAPI": ["android.content.Intent.getExtras()"], "Fixed commit": "1c9919db959c19c25050524c3864c57a380a737f", "Url": "https://api.github.com/repos/fgustovo/Custom-WebView", "Date": "2018-10-28T08:50:29Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFirstLoc)) { cn.shomes.tfblue.util.DialogUtils.showProgressDialog(activity); cn.shomes.tfblue.util.http.HttpQueryUtils.getNearCar(((mLatitude) + \"\"), ((mLongitude) + \"\"), cn.shomes.tfblue.util.TimeUtils.TimestampToString(new java.sql.Timestamp(((cn.shomes.tfblue.util.TimeUtils.currentTimeMillis()) - ((30 * 60) * 1000)))), null, itemGL, itemDZLD, itemZDMLC, itemYSZ, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4794/buggy-version/app.src.main.java.cn.shomes.tfblue.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "8dce260c89a757c5baf33876321df1b89cb42f8b", "Url": "https://api.github.com/repos/kayoxu/TFBlue", "Date": "2018-10-17T10:52:08Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getHand()) == (org.bukkit.inventory.EquipmentSlot.OFF_HAND)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3119/buggy-version/NeoInstruments.src.me.neoblade298.neoinstruments.Main.java", "BodyUseAPI": [], "Fixed commit": "5de5a63bcf13fd5ddd65beb17ad1cb652d99c696", "Url": "https://api.github.com/repos/Alexz1008/MLMCPlugins", "Date": "2018-10-19T22:40:01Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.guoziwei.klinelib.chart.KLineView.getLastData()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (hisData != null) { klineData(hisData.getClose(), hisData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1027/buggy-version/klinelib.src.main.java.com.guoziwei.klinelib.chart.KLineView.java", "BodyUseAPI": ["com.guoziwei.klinelib.model.HisData.getClose()", "com.guoziwei.klinelib.chart.KLineView.klineData(hisData.getClose(),com.guoziwei.klinelib.model.HisData)"], "Fixed commit": "e3b6d7118e6f2a3aa65775b5be24fbb4a9f10186", "Url": "https://api.github.com/repos/hottech-jxd/missionwallet", "Date": "2018-10-22T10:44:12Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seventh.game.weapons.Weapon.getClipSize()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clipSize != 0) { return ((double) (weapon.getBulletsInClip())) / clipSize; }else { if ((weapon.getBulletsInClip()) > 0) { score += 0.1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/878/buggy-version/src.seventh.ai.basic.actions.evaluators.Evaluators.java", "BodyUseAPI": [], "Fixed commit": "a5bfdee26af8c2e2150d27e38e59f90b4cc051c1", "Url": "https://api.github.com/repos/tonysparks/seventh", "Date": "2018-04-12T02:23:37Z"},
{"Line": "=>3758", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.epad.epadws.epaddb.EpadDatabaseOperations.getAIM(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (oldAim == null) { epadDatabaseOperations.deleteAIM(username, aim.aimID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1728/buggy-version/src.main.java.edu.stanford.epad.epadws.queries.DefaultEpadOperations.java", "BodyUseAPI": [], "Fixed commit": "7f9ae746d504082bd0cb0d519b7bc6ecb908bafc", "Url": "https://api.github.com/repos/RubinLab/epad-ws", "Date": "2018-02-22T19:28:31Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((sort.getDirection()) == (SortBy.Direction.ASC)) && ((sort.getKey()) == (com.zimbra.cs.index.SortBy.Key.UNREAD))) { orderBy.append(\" DESC\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1258/buggy-version/store.src.java.com.zimbra.cs.db.DbSearch.java", "BodyUseAPI": [], "Fixed commit": "f567ae9f70c345bd32aebf8a73a50fa898305f68", "Url": "https://api.github.com/repos/Zimbra/zm-mailbox", "Date": "2018-07-23T06:08:40Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) com.androiderstack.utility.Utils.playSound(context);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2093/buggy-version/app.src.main.java.com.androiderstack.reciever.ProfileChangerReceiver.java", "BodyUseAPI": [], "Fixed commit": "a905b9a813ea4748ea40280193a478afe8b7fba6", "Url": "https://api.github.com/repos/vishalchhodwani1992/SmartContact", "Date": "2018-07-24T18:34:41Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) com.androiderstack.utility.Utils.stopSound(context);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2093/buggy-version/app.src.main.java.com.androiderstack.reciever.ProfileChangerReceiver.java", "BodyUseAPI": [], "Fixed commit": "a905b9a813ea4748ea40280193a478afe8b7fba6", "Url": "https://api.github.com/repos/vishalchhodwani1992/SmartContact", "Date": "2018-07-24T18:34:41Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) com.androiderstack.utility.Utils.stopSound(context);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2093/buggy-version/app.src.main.java.com.androiderstack.reciever.ProfileChangerReceiver.java", "BodyUseAPI": [], "Fixed commit": "a905b9a813ea4748ea40280193a478afe8b7fba6", "Url": "https://api.github.com/repos/vishalchhodwani1992/SmartContact", "Date": "2018-07-24T18:34:41Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(ret.getMessage()))) { android.widget.Toast.makeText(mContext, ret.getMessage(), Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(mContext, ret.getDesc(), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9776/buggy-version/app.src.main.java.com.yanxiu.gphone.faceshow.login.LoginActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(android.content.Context,ret.getDesc(),Toast.LENGTH_SHORT)", "com.yanxiu.gphone.faceshow.http.login.SignInResponse.getMessage()", "android.widget.Toast.makeText(android.content.Context,ret.getMessage(),Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(mContext, ret.getMessage(), Toast.LENGTH_SHORT).show()", "com.yanxiu.gphone.faceshow.http.login.SignInResponse.getDesc()", "android.widget.Toast.makeText(mContext, ret.getDesc(), Toast.LENGTH_SHORT).show()"], "Fixed commit": "cd207cbfd42a56ce96903d4117225f5e8ab2fdda", "Url": "https://api.github.com/repos/caileiYanxiu/FaceShow_Android", "Date": "2018-07-31T08:32:13Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hour) < 10) { hourShow = \"0\" + hourShow; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4602/buggy-version/app.src.main.java.cmpe275eat.takeoutapp.Checkout.java", "BodyUseAPI": [], "Fixed commit": "428841540e98a8f8200c6f5bf3c9ba3ef2cff65f", "Url": "https://api.github.com/repos/Adamkzh/takeoutApp", "Date": "2018-05-21T03:30:56Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.mineblock.mbcore.CoreUtils.connect(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (out == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7556/buggy-version/src.main.java.it.mineblock.mbcore.CoreUtils.java", "BodyUseAPI": [], "Fixed commit": "750c6c0c425464518d8745f4342ee4ebb7358ad1", "Url": "https://api.github.com/repos/LoreSchaeffer/MBCore", "Date": "2018-04-13T10:43:54Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ingredient.getRecipe()) != null) { ingredientCommand.setRecipeId(ingredient.getRecipe().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1521/buggy-version/src.main.java.science.mengxin.spring5app.converters.IngredientToIngredientCommand.java", "BodyUseAPI": ["science.mengxin.spring5app.commands.IngredientCommand.setRecipeId(ingredient.getRecipe().getId())", "science.mengxin.spring5app.domain.Ingredient.getRecipe()", "ingredient.getRecipe().getId()"], "Fixed commit": "227bc85ab24f03e1393a3768520cbc4eed42019d", "Url": "https://api.github.com/repos/xmeng1/spring5-app", "Date": "2018-05-16T20:12:24Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gotNewPermission || gotOldPermission)) { throw new java.lang.SecurityException((\"Application is not granted permission: \" + newPermission)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4439/buggy-version/clover-android-sdk.src.main.java.com.clover.sdk.cashdrawer.CashDrawers.java", "BodyUseAPI": [], "Fixed commit": "299667d3c95b1cc19e61442451967e980bdce6dc", "Url": "https://api.github.com/repos/clover/clover-android-sdk", "Date": "2018-07-02T20:59:02Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["usernameET.getText().toString()", "passwordET.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((username.equals(\"admin\")) || (password.equals(\"pass\"))) { startActivity(new android.content.Intent(this, com.example.nasir.myparking.AdminHomepage.class)); }else { android.widget.Toast.makeText(this, \"invalid\", Toast.LENGTH_SHORT).show(); passwordET.setFocusable(true); passwordET.setError(\"Password and/or username is wrong...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4654/buggy-version/app.src.main.java.com.example.nasir.myparking.Login.java", "BodyUseAPI": [], "Fixed commit": "f709a20c7cad24421a998bbd8b12c6727008e90f", "Url": "https://api.github.com/repos/sgohari/MyParkingProject", "Date": "2018-08-13T04:49:57Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!msgLogged) { if (servers == null) { tools.descartes.teastore.registryclient.StartupCallbackTask.LOG.info(((\"Registry not online. \" + (myService)) + \" is waiting for it to come online\")); }else { tools.descartes.teastore.registryclient.StartupCallbackTask.LOG.info(((((requestedService.getServiceName()) + \" not online. \") + (myService)) + \" is waiting for it to come online\")); } msgLogged = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4065/buggy-version/utilities.tools.descartes.teastore.registryclient.src.main.java.tools.descartes.teastore.registryclient.StartupCallbackTask.java", "BodyUseAPI": [], "Fixed commit": "68a5d7b267336426c7aba67459ef10ff01c349b6", "Url": "https://api.github.com/repos/DescartesResearch/TeaStore", "Date": "2018-04-26T13:25:24Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((io.shardingsphere.core.constant.SQLType.TCL) == (sqlStatement.getType())) { channelRelease(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1763/buggy-version/sharding-proxy.src.main.java.io.shardingsphere.proxy.backend.netty.NettyBackendHandler.java", "BodyUseAPI": [], "Fixed commit": "1e7b72aafb02211a6e6946b12c9f928e9809b328", "Url": "https://api.github.com/repos/sharding-sphere/sharding-sphere", "Date": "2018-08-07T12:28:31Z"},
{"Line": "=>557", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tile) != null) && ((Block.REGISTRY.getNameForObject(tile)) != null)) { str = Block.REGISTRY.getNameForObject(tile).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4637/buggy-version/src.main.java.weather2.entity.EntityMovingBlock.java", "BodyUseAPI": ["Block.REGISTRY.getNameForObject(net.minecraft.block.Block)", "Block.REGISTRY.getNameForObject(tile).toString()"], "Fixed commit": "ce576a6e60376cadd4b5cc0b665f713a78012398", "Url": "https://api.github.com/repos/Corosauce/weather2", "Date": "2018-05-28T04:35:59Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextBucketsSize > (java.lang.Integer.MAX_VALUE)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9912/buggy-version/processing.src.main.java.io.druid.query.groupby.epinephelinae.ByteBufferHashTable.java", "BodyUseAPI": [], "Fixed commit": "ea6824d31fd06a696fc82b3d51590f05b476bc4f", "Url": "https://api.github.com/repos/implydata/druid", "Date": "2017-11-17T16:19:16Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.Double.isNaN(sim)) { delfos.common.Global.showWarning(((((((\"Similarity of items \" + (profile.getIdItem())) + \" and \") + (neighbor.getIdNeighbor())) + \" was \") + (sim.toString())) + \" set to 0\")); sim = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5936/buggy-version/src.main.java.delfos.rs.collaborativefiltering.knn.modelbased.DAOKnnModelBasedDatabaseModel.java", "BodyUseAPI": ["delfos.common.Global.showWarning(((((((\"Similarity of items \" + (profile.getIdItem())) + \" and \") + (neighbor.getIdNeighbor())) + \" was \") + (sim.toString())) + \" set to 0\"))", "java.lang.Double.toString()"], "Fixed commit": "780766114216c006fdca907a9ad22d2066f86a11", "Url": "https://api.github.com/repos/jcastro-inf/delfos", "Date": "2018-07-26T15:17:25Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((program) == null) { program = createProgram(texture); program = com.nucleus.assets.AssetManager.getInstance().getProgram(renderer.getGLES(), program); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8696/buggy-version/src.main.java.com.graphicsengine.spritemesh.SpriteMesh.java", "BodyUseAPI": [], "Fixed commit": "49d4ff3840d853a8e29b94047c7405ea14932f9a", "Url": "https://api.github.com/repos/rsahlin/graphics-engine", "Date": "2018-05-21T08:00:16Z"},
{"Line": "=>1329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<edu.mit.csail.sdg.alloy4compiler.ast.Expr, kodkod.ast.Expression>.get(edu.mit.csail.sdg.alloy4compiler.ast.Sig)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(e instanceof kodkod.ast.Relation)) return; else r = ((kodkod.ast.Relation) (e));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4042/buggy-version/electrum.src.main.java.edu.mit.csail.sdg.alloy4compiler.translator.A4Solution.java", "BodyUseAPI": [], "Fixed commit": "df0172375c6ae462c3bf76a7e8945b4744f06e52", "Url": "https://api.github.com/repos/haslab/Electrum", "Date": "2018-05-25T13:21:38Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((particle.getId()) != 0) && ((particle.getId()) != 1)) energy += (0.5 * (particle.getMass())) * ((java.lang.Math.pow(particle.getVelocity().getX(), 2)) + (java.lang.Math.pow(particle.getVelocity().getY(), 2)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4314/buggy-version/src.main.java.ar.edu.itba.ss.managers.SimulationManager.java", "BodyUseAPI": ["ar.edu.itba.ss.entities.Particle.getVelocity()", "particle.getVelocity().getY()", "java.lang.Math.pow(particle.getVelocity().getY(),int)", "ar.edu.itba.ss.entities.Particle.getVelocity()", "ar.edu.itba.ss.entities.Particle.getMass()", "java.lang.Math.pow(particle.getVelocity().getX(),int)", "particle.getVelocity().getX()"], "Fixed commit": "8cd4328460a297d7fcceb91006c1e237912d2ae1", "Url": "https://api.github.com/repos/jfrojo/ss-tp-5", "Date": "2018-10-10T23:18:23Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastEntries.size()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7293/buggy-version/app.src.main.java.com.station.weather.piscos.weatherstation.HistoryActivity.java", "BodyUseAPI": [], "Fixed commit": "4d14c1ec22900a397029ad1ef4117277e545241a", "Url": "https://api.github.com/repos/migruiz/androidweather", "Date": "2018-09-17T09:02:19Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["be.kdg.integratieproject2.data.implementations.UserRepository.findByEmailIgnoreCase(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((user.getPictureId()) == null) throw new be.kdg.integratieproject2.bussiness.exceptions.ObjectNotFoundException(\"null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4061/buggy-version/src.main.java.be.kdg.integratieproject2.bussiness.Implementations.PictureServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "98c17738f556c228389cdaac3a9986930710bef5", "Url": "https://api.github.com/repos/remzGrges/springIP", "Date": "2018-03-20T13:20:01Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((constants.wallet) != null) { constants.wallet.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1427/buggy-version/app.src.main.java.com.dcrandroid.MainActivity.java", "BodyUseAPI": ["constants.wallet.shutdown()"], "Fixed commit": "f17d6e2d5a5fbc3af53b4067444863b3605cb905", "Url": "https://api.github.com/repos/C-ollins/dcrandroid", "Date": "2018-04-23T23:37:27Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.util.Pair<model.Transaction.TRANSACTIONFIELD, dialogs.ValidationComponent>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fieldtype == (model.Transaction.TRANSACTIONFIELD.JOB_WAGE)) { java.lang.Object hours = m_transaction.get(TRANSACTIONFIELD.JOB_HOURS); java.lang.Object wage = m_transaction.get(TRANSACTIONFIELD.JOB_WAGE); if ((hours != null) && (wage != null)) { value = ((double) (wage)) * ((double) (hours)); }else { value = 0.0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9092/buggy-version/src.dialogs.AddEditTransaction.java", "BodyUseAPI": [], "Fixed commit": "3379d05690ee7c2f6b37d664ef931caf904b6441", "Url": "https://api.github.com/repos/anaisools/BoekhoudingApp", "Date": "2018-08-27T18:47:44Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((trackedWarList.size()) != 0) msg.append(trackedWarList.get(((trackedWarList.size()) - 1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7533/buggy-version/src.main.java.net.motobot.DiscordBot.Commands.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "java.lang.StringBuilder.append(java.lang.String)", "java.util.List<java.lang.String>.size()"], "Fixed commit": "602390f985dd407938460444b67d245e81634d7e", "Url": "https://api.github.com/repos/motoki317/DiscordBot", "Date": "2018-03-19T08:48:43Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.neotys.neoload.model.readers.loadrunner.WebCustomRequest.toElement(com.neotys.neoload.model.readers.loadrunner.LoadRunnerVUVisitor,com.neotys.neoload.model.readers.loadrunner.MethodCall,com.neotys.neoload.model.parsers.CPP14Parser.MethodcallContext)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (page == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9703/buggy-version/models-readers.loadrunner-reader.src.main.java.com.neotys.neoload.model.readers.loadrunner.method.WebcustomrequestMethod.java", "BodyUseAPI": [], "Fixed commit": "fbecb690a2f7d61d77ecd85bab96a60a1c1b657a", "Url": "https://api.github.com/repos/Neotys-Labs/neoload-models", "Date": "2018-10-02T21:18:01Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recipeList) == null) { rAdapter = new murphy.christopher.bakingapp.adapter.RecipesAdapter(); }else { rAdapter = new murphy.christopher.bakingapp.adapter.RecipesAdapter(recipeList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/731/buggy-version/app.src.main.java.murphy.christopher.bakingapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c39b4be0ba94b735f907c07667999385129a11ca", "Url": "https://api.github.com/repos/chmurphy1/BakingApp", "Date": "2018-10-11T02:45:16Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.web.context.request.ServletRequestAttributes.getRequest()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((request.getCookies()) == null) { response.sendRedirect(\"/auth/login\"); }else { for (javax.servlet.http.Cookie cookie : request.getCookies()) { if (cookie.getName().equals(\"token\")) { token = cookie.getValue(); } } java.lang.String username; if ((token == null) || ((username = accountService.verifyToken(token)) == null)) { response.sendRedirect(\"/auth/login\"); }else { request.setAttribute(\"username\", username); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2753/buggy-version/src.main.java.cn.liangjiateng.common.AspectHandler.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getCookies()", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "1c0fe227889f803653dd36362ffc745e0d24baa6", "Url": "https://api.github.com/repos/toxicaker/blog", "Date": "2018-07-16T04:50:36Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getInfoList.size()) >= (settings.getIntValue(\"usrLimit\"))) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2398/buggy-version/EWSaClient.src.ewsa.client.EarthQuakeCheck.java", "BodyUseAPI": [], "Fixed commit": "43839fd3215d1482d8c7f3ea047b55f52f2931f9", "Url": "https://api.github.com/repos/nicholasmarasco95/EWSaeratos", "Date": "2018-05-22T21:57:42Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((queues.RRQueue) (nextQueue)).getSize()) > 0) { ((queues.RRQueue) (nextQueue)).stopExecution(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9558/buggy-version/src.queues.RRQueue.java", "BodyUseAPI": ["java.lang.Object.stopExecution()"], "Fixed commit": "ba5479bb517df2d1012d3f5e93e50441c15e19db", "Url": "https://api.github.com/repos/imsudonym/Scheduler-App", "Date": "2018-06-01T10:02:28Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((queues.RRQueue) (nextQueue)).getSize()) > 0) { ((queues.RRQueue) (nextQueue)).stopExecution(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9558/buggy-version/src.queues.RRQueue.java", "BodyUseAPI": ["java.lang.Object.stopExecution()"], "Fixed commit": "ba5479bb517df2d1012d3f5e93e50441c15e19db", "Url": "https://api.github.com/repos/imsudonym/Scheduler-App", "Date": "2018-06-01T10:02:28Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((first.hash) == (second.hash)) { return new io.usethesource.vallang.util.WeakReferenceTrieCache.CollisionNode(first.hash, new io.usethesource.vallang.util.WeakReferenceTrieCache.LeafNode[]{ first, second }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6098/buggy-version/src.main.java.io.usethesource.vallang.util.WeakReferenceTrieCache.java", "BodyUseAPI": [], "Fixed commit": "b27fbf3791521bf0d82a286b7bf73248828d134a", "Url": "https://api.github.com/repos/usethesource/vallang", "Date": "2018-06-14T14:35:29Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.usethesource.vallang.util.WeakReferenceTrieCache.CollisionNode<T>.grow(io.usethesource.vallang.util.WeakReferenceTrieCache.SingleLeafNode<T>,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parent.compareAndSet(this, newNode)) { return key; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6098/buggy-version/src.main.java.io.usethesource.vallang.util.WeakReferenceTrieCache.java", "BodyUseAPI": [], "Fixed commit": "b27fbf3791521bf0d82a286b7bf73248828d134a", "Url": "https://api.github.com/repos/usethesource/vallang", "Date": "2018-06-14T14:35:29Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["g16arimaa.ArimaaPanel.getPiece(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (piece != null) { if (((piece.getStrength()) > strength) && ((piece.getColor()) != color)) { strong_enemy = true; }else if ((piece.getColor()) == color) { friend = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9048/buggy-version/src.g16arimaa.ArimaaPanel.java", "BodyUseAPI": ["g16arimaa.Piece.getColor()", "g16arimaa.Piece.getColor()", "g16arimaa.Piece.getStrength()"], "Fixed commit": "5910a9ca0bfac511010ef7ea9a688fbd542906d1", "Url": "https://api.github.com/repos/DavidPRichardson/g16arimaa", "Date": "2018-05-25T17:10:30Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getGui()) instanceof micdoodle8.mods.galacticraft.core.client.gui.screen.GuiCelestialSelection) { if (net.minecraft.client.settings.GameSettings.isKeyDown(micdoodle8.mods.galacticraft.core.tick.KeyHandlerClient.galaxyMap)) { event.setGui(new com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection(true, null, net.minecraftforge.server.permission.PermissionAPI.hasPermission(com.mjr.mjrlegendslib.util.MCUtilities.getMinecraft().player, Constants.PERMISSION_CREATE_STATION))); }else { event.setGui(new com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection(false, null, net.minecraftforge.server.permission.PermissionAPI.hasPermission(com.mjr.mjrlegendslib.util.MCUtilities.getMinecraft().player, Constants.PERMISSION_CREATE_STATION))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3872/buggy-version/src.main.java.com.mjr.extraplanets.client.handlers.MainHandlerClient.java", "BodyUseAPI": ["net.minecraftforge.client.event.GuiOpenEvent.setGui(com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection)", "net.minecraftforge.client.event.GuiOpenEvent.setGui(com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection)"], "Fixed commit": "f4a1633917f764d5e21339c49f16a2de7a679096", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-02-02T15:46:42Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLastKnownLocation) != null) { mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(new com.google.android.gms.maps.model.LatLng(mLastKnownLocation.getLatitude(), mLastKnownLocation.getLongitude()), com.example.mis.polygons.MapsActivity.DEFAULT_ZOOM)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7725/buggy-version/app.src.main.java.com.example.mis.polygons.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "2c3a3ceb692d24a54ad66180fc24c7c8aa2d3abf", "Url": "https://api.github.com/repos/JaniTomati/mis-2018-exercise-2-maps-polygons", "Date": "2018-04-26T21:33:09Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (secs >= 60) { secs = secs % 60; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6253/buggy-version/app.src.main.java.com.geekynehal.stopwatch.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1535e1ac7292e1c3bb55c91a97e499afdbf5931c", "Url": "https://api.github.com/repos/geekyNehal/StopWatch", "Date": "2018-09-19T18:20:40Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getIntersectingObjects(server.ShipActor.class).size()) == 0) { isGoodToGo = true; }else if ((dad) == null) dad = getIntersectingObjects(server.ShipActor.class).get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9289/buggy-version/src.server.SpaceLaser.java", "BodyUseAPI": ["server.SpaceLaser.getIntersectingObjects(java.lang.Class)", "getIntersectingObjects(server.ShipActor.class).get(int)"], "Fixed commit": "8831e1cdef626827372a18020f2b50f3a67c9a26", "Url": "https://api.github.com/repos/MrMayComputerScience/asteroids-whatever-you-want", "Date": "2018-03-06T18:52:36Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((gameWorld) != null) && ((role) != null)) { send(\"Role plz\"); gameWorld.setRole(getRole()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9289/buggy-version/src.client.GameClient.java", "BodyUseAPI": [], "Fixed commit": "8831e1cdef626827372a18020f2b50f3a67c9a26", "Url": "https://api.github.com/repos/MrMayComputerScience/asteroids-whatever-you-want", "Date": "2018-03-06T18:52:36Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cookies == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6662/buggy-version/session.src.main.java.com.ychp.session.utils.CookieUtils.java", "BodyUseAPI": [], "Fixed commit": "aa698493c9122512cbe1dc8c9dfc1cfb48741143", "Url": "https://api.github.com/repos/ychp/mblog", "Date": "2018-08-16T08:06:25Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cookies == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6662/buggy-version/session.src.main.java.com.ychp.session.utils.CookieUtils.java", "BodyUseAPI": [], "Fixed commit": "aa698493c9122512cbe1dc8c9dfc1cfb48741143", "Url": "https://api.github.com/repos/ychp/mblog", "Date": "2018-08-16T08:06:25Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.math.BigInteger.modPow(java.math.BigInteger,java.math.BigInteger)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((bigInt.compareTo(src)) == 0) throw new java.lang.IllegalArgumentException(\"could not encrypt\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/499/buggy-version/src.de.jcm.security.rsa.RSAPublicKey.java", "BodyUseAPI": [], "Fixed commit": "0f73f4509580f7240cc79f81ebe3a47de88439fa", "Url": "https://api.github.com/repos/JnCrMx/JCMLib", "Date": "2018-02-14T15:23:21Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == null) { throw new java.lang.IllegalArgumentException(\"SERVICE_ACCOUNT_KEY missing from environment!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1412/buggy-version/src.main.java.com.wingit.analysisserver.Utils.java", "BodyUseAPI": [], "Fixed commit": "8197814d069bde038428fc69e1f58bfcd4a46012", "Url": "https://api.github.com/repos/WingItOttawa/AnalysisServer", "Date": "2018-07-06T17:21:08Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (str == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6396/buggy-version/src.studio.visualdust.product.Randomer.structure.LinedFile.java", "BodyUseAPI": [], "Fixed commit": "82e480580bceb9a1f5d47e4b7784a31f05002083", "Url": "https://api.github.com/repos/visualDust/Randomer", "Date": "2018-09-21T08:34:02Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((endPoint.indexOf(\"/mtaapi-sandbox\")) > (-1)) { urlMetadata = endPoint; int mtaStartIdx = urlMetadata.indexOf(\"/mtaapi-sandbox\"); if (mtaEndIdx > (-1)) { urlMetadata = endPoint.substring(mtaStartIdx, mtaEndIdx); }else { urlMetadata = urlMetadata.substring(mtaStartIdx, urlMetadata.length()); } }else { int mtaStartIdx = endPoint.indexOf(\"/mta/api\"); if (mtaEndIdx > (-1)) { urlMetadata = endPoint.substring(mtaStartIdx, mtaEndIdx); urlMetadata = urlMetadata.replace(\"/mta\", \"/mtaapi\"); }else { urlMetadata = endPoint.replace(\"/mta\", \"/mtaapi\"); urlMetadata = urlMetadata.substring(mtaStartIdx, urlMetadata.length()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2342/buggy-version/src.main.java.com.birumerah.deli.helper.RestExecutor.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "65ddc9703f0f03d2b589a530f9183460904af59f", "Url": "https://api.github.com/repos/kangwawan/dni-backend", "Date": "2018-09-18T14:44:41Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"slice\".equals(name)) { return new org.mozilla.javascript.IdFunctionObject(new org.structr.core.script.SliceFunctionCall(actionContext, entity, scriptingContext), null, 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4403/buggy-version/structr-core.src.main.java.org.structr.core.script.StructrScriptable.java", "BodyUseAPI": [], "Fixed commit": "8a42d023c83fa18cbcfefbc37c3f238fe7438ae3", "Url": "https://api.github.com/repos/structr/structr", "Date": "2018-03-20T09:31:58Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (name.startsWith(\"carved-gh-\")) { java.lang.String cloneId = name.split(\"-\")[2]; if (clones.contains(cloneId)) { java.io.File file2 = new java.io.File((((((outputPath + (java.io.File.separator)) + \"so-\") + groupId) + (java.io.File.separator)) + name)); org.apache.commons.io.FileUtils.copyFile(file, file2); } }else if (name.startsWith(\"so-\")) { java.io.File file2 = new java.io.File((((((outputPath + (java.io.File.separator)) + \"so-\") + groupId) + (java.io.File.separator)) + name)); org.apache.commons.io.FileUtils.copyFile(file, file2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8698/buggy-version/SO-Integration.src.edu.ucla.cs.timestamp.FilterClonesByTimestamp.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "f04a188c974bad30d18233e7e6f4cf6b5bce9dbc", "Url": "https://api.github.com/repos/husttroy/Integration-Study", "Date": "2018-08-09T03:36:30Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((title != null) && (message != null)) { app.learnkannada.com.learnkannadakannadakali.firebaseMessaging.FirebaseNotificationService.showAndAddNotification(this, title, message, url, dateReceived); app.learnkannada.com.learnkannadakannadakali.utils.Logger.e(app.learnkannada.com.learnkannadakannadakali.firebaseMessaging.FirebaseNotificationService.TAG, \"method onmessage received called\"); app.learnkannada.com.learnkannadakannadakali.utils.Logger.e(app.learnkannada.com.learnkannadakannadakali.firebaseMessaging.FirebaseNotificationService.TAG, (\"Processed new notification with title: \" + title)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/465/buggy-version/app.src.main.java.app.learnkannada.com.learnkannadakannadakali.firebaseMessaging.FirebaseNotificationService.java", "BodyUseAPI": ["app.learnkannada.com.learnkannadakannadakali.utils.Logger.e(java.lang.String,java.lang.String)", "app.learnkannada.com.learnkannadakannadakali.firebaseMessaging.FirebaseNotificationService.showAndAddNotification(app.learnkannada.com.learnkannadakannadakali.firebaseMessaging.FirebaseNotificationService,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "fa11f4a9713f2f4669b01be0267853f5f9150520", "Url": "https://api.github.com/repos/varunam/LearnKannada_KannadaKali", "Date": "2018-10-19T05:13:27Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentCheckpoint) + 1) == (checkpoints.size())) { java.lang.System.out.println(\"enemy reached end of maze\"); }else { (currentCheckpoint)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1520/buggy-version/2DTD.src.data.Enemy.java", "BodyUseAPI": [], "Fixed commit": "4dc81a96a420c03713812c142eab756121a9ee68", "Url": "https://api.github.com/repos/JohannAtGithub/2DTD", "Date": "2018-02-25T17:52:49Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (connection instanceof com.mysql.jdbc.MySQLConnection) { com.mysql.jdbc.MySQLConnection mySqlConnection = ((com.mysql.jdbc.MySQLConnection) (connection)); isValid = com.ctrip.platform.dal.dao.helper.MySqlConnectionHelper.isValid(mySqlConnection, com.ctrip.platform.dal.dao.datasource.DataSourceValidator.DEFAULT_VALIDATE_TIMEOUT_IN_SECONDS); }else { isValid = connection.isValid(com.ctrip.platform.dal.dao.datasource.DataSourceValidator.DEFAULT_VALIDATE_TIMEOUT_IN_SECONDS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4146/buggy-version/dal-client.src.main.java.com.ctrip.platform.dal.dao.datasource.DataSourceValidator.java", "BodyUseAPI": ["java.sql.Connection.isValid(int)"], "Fixed commit": "951c688df9fbdc3d9476384a94dd0c66ba8a87cb", "Url": "https://api.github.com/repos/ctripcorp/dal", "Date": "2018-01-15T08:02:14Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kaleta.accountant.frontend.Configuration.getSelectedYear()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(Service.SCHEMA.checkGroupExists(year, classId, groupId))) return getBodyPanelInstance();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5458/buggy-version/accountant-desktop.src.main.java.org.kaleta.accountant.frontend.core.accounting.AccountingOverview.java", "BodyUseAPI": [], "Fixed commit": "71bfdc5aa6239765c2fb006b7d1bd16a1e9f4da1", "Url": "https://api.github.com/repos/KaProjects/Accountant", "Date": "2018-10-13T15:02:33Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((relatvePath == null) || ((relatvePath.length()) == 0)) { profile.profileProject = null; }else { if ((profile.profileProject) == null) { profile.profileProject = new eu.geopaparazzi.library.profiles.objects.ProfileProjects(); } profile.profileProject.setRelativePath(relatvePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3504/buggy-version/geopaparazzi_core.src.main.java.eu.geopaparazzi.core.profiles.gui.ProfileSettingsActivity.java", "BodyUseAPI": ["profile.profileProject.setRelativePath(java.lang.String)"], "Fixed commit": "5ad3e868f2dcc9daff04296d18de6c6383412def", "Url": "https://api.github.com/repos/GeoAnalytic-code/geopaparazzi", "Date": "2018-05-12T11:45:07Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.length) < ((1.5 * width) * height)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/68/buggy-version/android.src.main.java.org.reactnative.camera.RNCameraView.java", "BodyUseAPI": [], "Fixed commit": "42154eac41910e3745bc36b439ac217c6eb4d81c", "Url": "https://api.github.com/repos/syadykin/react-native-camera", "Date": "2018-08-09T11:07:58Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (xPercent > 0) { mVibrator.vibrate(((int) (java.lang.Math.abs(((100 * xPercent) / 3))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4057/buggy-version/app.src.main.java.ejunkins.rovercontroller.MainActivity.java", "BodyUseAPI": ["java.lang.Math.abs(float)", "android.os.Vibrator.vibrate(float)"], "Fixed commit": "24f39f70a7bfd9fa74f7596e11fc47341d561238", "Url": "https://api.github.com/repos/imvm/osr-android-app", "Date": "2018-08-22T14:30:53Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (yPercent > 0) { mVibrator.vibrate(((int) (java.lang.Math.abs(((100 * yPercent) / 3))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4057/buggy-version/app.src.main.java.ejunkins.rovercontroller.MainActivity.java", "BodyUseAPI": ["java.lang.Math.abs(float)", "android.os.Vibrator.vibrate(float)"], "Fixed commit": "24f39f70a7bfd9fa74f7596e11fc47341d561238", "Url": "https://api.github.com/repos/imvm/osr-android-app", "Date": "2018-08-22T14:30:53Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (foreground) stopNotification();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5690/buggy-version/app.src.main.java.souch.smp.MusicService.java", "BodyUseAPI": [], "Fixed commit": "b506db64a5d779f63b5d199735837abda0cb9bfd", "Url": "https://api.github.com/repos/TaoK/SMP", "Date": "2018-01-22T22:45:20Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.Integer, java.lang.Character>.get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((tmp.getId) != (pc.getId())) tmp.getBody().setTransform(tmp.getX(), tmp.getY(), 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3012/buggy-version/core.src.com.groupe.roomgame.screens.GameScreen.java", "BodyUseAPI": ["tmp.getBody().setTransform(tmp.getX(),tmp.getY(),int)", "java.lang.Character.getBody()", "java.lang.Character.getX()", "java.lang.Character.getY()"], "Fixed commit": "ac1cc3ab04d04384fa170b5ef0369e20ae8cb7a5", "Url": "https://api.github.com/repos/domdew23/Multiplayer-Room-Game", "Date": "2018-05-10T22:48:28Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mSearchQuery.equals(event.searchTerm))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/377/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.plugins.PluginBrowserViewModel.java", "BodyUseAPI": [], "Fixed commit": "4c33b04dda4bf775b62509c3bd8da4d20d696ff3", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2018-02-09T04:35:19Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source == null) return org.jppf.process.AbstractProcessLauncher.NO_OPTIONS;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3141/buggy-version/common.src.java.org.jppf.process.AbstractProcessLauncher.java", "BodyUseAPI": [], "Fixed commit": "6ef163a9de3b859c9080175d5bbd78cf490e51ff", "Url": "https://api.github.com/repos/jppf-grid/JPPF", "Date": "2018-05-18T04:07:38Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONArray.toArray()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(java.util.Arrays.asList(array).contains(bookName))) { files.add(bookName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1837/buggy-version/cliente.ClientThreadHandler.java", "BodyUseAPI": ["org.json.simple.JSONArray.add(java.lang.String)"], "Fixed commit": "9fe86c877b12b972a2dc24bfdc3a86fd276de469", "Url": "https://api.github.com/repos/gonzalez0fer/Client-Server-Downloader-Java", "Date": "2018-02-28T03:39:23Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((displayKeyHandler) != null) { displayKeyHandler.keyTyped(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5522/buggy-version/src.main.java.de.me.edgelord.sjgl.display.DisplayManager.java", "BodyUseAPI": [], "Fixed commit": "8361494a50116a382c6c0b3a00d8c8a38e0d2d43", "Url": "https://api.github.com/repos/edgelord314/salty-engine", "Date": "2018-07-13T20:47:36Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((displayKeyHandler) != null) { displayKeyHandler.keyPressed(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5522/buggy-version/src.main.java.de.me.edgelord.sjgl.display.DisplayManager.java", "BodyUseAPI": [], "Fixed commit": "8361494a50116a382c6c0b3a00d8c8a38e0d2d43", "Url": "https://api.github.com/repos/edgelord314/salty-engine", "Date": "2018-07-13T20:47:36Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((displayKeyHandler) != null) { displayKeyHandler.keyReleased(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5522/buggy-version/src.main.java.de.me.edgelord.sjgl.display.DisplayManager.java", "BodyUseAPI": [], "Fixed commit": "8361494a50116a382c6c0b3a00d8c8a38e0d2d43", "Url": "https://api.github.com/repos/edgelord314/salty-engine", "Date": "2018-07-13T20:47:36Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.Object, java.lang.Object>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((name != null) && (name.startsWith(\"redis.\"))) { name = name.substring(6); }else { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3/buggy-version/src.main.java.org.mybatis.caches.redis.RedisConfigurationBuilder.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "57d84e8341cb47a92dc6c88f51036ff759029607", "Url": "https://api.github.com/repos/harawata/redis-cache", "Date": "2018-01-16T02:30:33Z"},
{"Line": "=>1542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(current_step_box.isEnabled())) { current_step_box = ((android.widget.TextView) (findViewById(R.id.quotientInDivision))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6071/buggy-version/app.src.main.java.tutoringproject.behaviors.QuestionActivity.java", "BodyUseAPI": [], "Fixed commit": "1cb31676110d6974191f6f37f2ac1079f4a3649b", "Url": "https://api.github.com/repos/ScazLab/nao_tutoring_behavior_tablet_app_with_gradle", "Date": "2018-02-02T02:29:38Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subjectStatement instanceof org.keycloak.dom.saml.v1.assertion.SAML11AttributeStatementType) { org.keycloak.dom.saml.v1.assertion.SAML11AttributeStatementType attributeStatement = ((org.keycloak.dom.saml.v1.assertion.SAML11AttributeStatementType) (subjectStatement)); for (org.keycloak.dom.saml.v1.assertion.SAML11AttributeType attribute : attributeStatement.get()) { if ((\"nameidenfier\".equalsIgnoreCase(attribute.getAttributeName())) || (JBossSAMLURIConstants.CLAIMS_NAME_IDENTIFIER.get().equalsIgnoreCase(attribute.getAttributeName()))) { if (!(attribute.get().isEmpty())) { return attribute.get().get(0).toString(); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3319/buggy-version/src.main.java.com.quest.keycloak.broker.wsfed.SAML11RequestedToken.java", "BodyUseAPI": [], "Fixed commit": "8a312ae90b3ecfc14627988a07d25f6cea2f97e9", "Url": "https://api.github.com/repos/SebZal/keycloak-wsfed", "Date": "2018-03-28T10:37:01Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((em) != null) { java.lang.System.out.println(\"Neuss :D\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2702/buggy-version/src.main.java.ch.yanicksenn.heroku.Launcher.java", "BodyUseAPI": [], "Fixed commit": "4674526a3f8db99f71d50606bf8c486f1d003cee", "Url": "https://api.github.com/repos/yanicksenn/heroku-blog", "Date": "2018-04-06T11:42:28Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(s.isEmpty())) { retrofit2.Call<com.ibra.moviesseries.retrofit.show.ShowList> call = com.ibra.moviesseries.data.api.ApiClinet.getApiClient().create(com.ibra.moviesseries.data.api.ApiInterface.class).serach(s); call.enqueue(new retrofit2.Callback<com.ibra.moviesseries.retrofit.show.ShowList>() { @java.lang.Override public void onResponse(retrofit2.Call<com.ibra.moviesseries.retrofit.show.ShowList> call, retrofit2.Response<com.ibra.moviesseries.retrofit.show.ShowList> response) { if (response.isSuccessful()) { android.util.Log.d(com.ibra.moviesseries.ui.SearchActivity.TAG, \"response is done\"); showList = response.body().getShowList(); searchAdapter.notifiy(showList); } } @java.lang.Override public void onFailure(retrofit2.Call<com.ibra.moviesseries.retrofit.show.ShowList> call, java.lang.Throwable t) { } }); }else { searchAdapter.notifiy(new java.util.ArrayList<com.ibra.moviesseries.retrofit.show.Show>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5717/buggy-version/app.src.main.java.com.ibra.moviesseries.ui.SearchActivity.java", "BodyUseAPI": ["com.ibra.moviesseries.data.api.ApiClinet.getApiClient().create(com.ibra.moviesseries.data.api.ApiInterface.class).serach(java.lang.String)"], "Fixed commit": "2bf947020a8bac269c0eefa66bdd76e7f3dd08c3", "Url": "https://api.github.com/repos/ibrahimothman/Movies-Series", "Date": "2018-08-05T11:50:24Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["exchangeRateInfo2.getExchangeRates().get(java.time.LocalDate)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (exchangeRate == null) { com.github.taxbeans.currency.RBNZHistoricalExchangeRatesReader.logger.info(\"Assuming {} is a public holiday since no exchange rate is available\", date); exchangeRate = com.github.taxbeans.currency.RBNZHistoricalExchangeRatesReader.getNZDtoForeignRate(date.minusDays(1), foreignCurrency); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/358/buggy-version/taxbeans-forms.src.main.java.com.github.taxbeans.currency.RBNZHistoricalExchangeRatesReader.java", "BodyUseAPI": [], "Fixed commit": "b72bb4712f97409c8d1336bfe7e88e5da5cbb925", "Url": "https://api.github.com/repos/taxbeans/taxbeans", "Date": "2018-04-28T06:37:39Z"},
{"Line": "=>1292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sKey.isnil())) sVal = t.get(sKey);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3883/buggy-version/src.main.java.com.theincgi.advancedMacros.gui.elements.ColorTextArea.java", "BodyUseAPI": ["org.luaj.vm2_v3_0_1.LuaTable.get(org.luaj.vm2_v3_0_1.LuaValue)"], "Fixed commit": "54b6d60147f74d7c6198fea0d4f9658090fe33d7", "Url": "https://api.github.com/repos/TheIncgi/AdvancedMacros-1.12.2", "Date": "2018-08-16T17:12:37Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6421/buggy-version/APV.src.main.java.com.arranger.apv.APV.java", "BodyUseAPI": [], "Fixed commit": "401d7419dd7c5524b076b25fd9248dbfae80fcfb", "Url": "https://api.github.com/repos/mimelator/apv", "Date": "2018-04-23T22:52:26Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (avatar == null) this.avatar = \"Undefined\"; else this.avatar = avatar;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7188/buggy-version/src.entity.Attendance.java", "BodyUseAPI": [], "Fixed commit": "52b0f67427219b690716c4d655e0ddde7757de7e", "Url": "https://api.github.com/repos/aaaahoang123/javafxbillmodule", "Date": "2018-03-23T03:54:13Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rollNumber == null) this.rollNumber = \"Undefined\"; else this.rollNumber = rollNumber;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7188/buggy-version/src.entity.Attendance.java", "BodyUseAPI": [], "Fixed commit": "52b0f67427219b690716c4d655e0ddde7757de7e", "Url": "https://api.github.com/repos/aaaahoang123/javafxbillmodule", "Date": "2018-03-23T03:54:13Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == null) this.id = \"Undefined\"; else this.id = id;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7188/buggy-version/src.entity.Attendance.java", "BodyUseAPI": [], "Fixed commit": "52b0f67427219b690716c4d655e0ddde7757de7e", "Url": "https://api.github.com/repos/aaaahoang123/javafxbillmodule", "Date": "2018-03-23T03:54:13Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ch) == '.') { temp.append(ch); readChar(); if (!(java.lang.Character.isDigit(ch))) { setFirst(); lexicalException(); } while (java.lang.Character.isDigit(ch)) { temp.append(ch); readChar(); } setFirst(); if ((java.lang.Character.isAlphabetic(ch)) && ((java.lang.Character.toLowerCase(ch)) != 'e')) lexicalException(); if ((java.lang.Character.toLowerCase(ch)) != 'e') { tokens.add(new Lexical.Token(temp.toString(), Type.NUMBER, lines)); temp.delete(0, temp.length()); continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7006/buggy-version/src.Lexical.Scan.java", "BodyUseAPI": [], "Fixed commit": "bfe43684407d2e008608ab9eb78987531cd103ef", "Url": "https://api.github.com/repos/ZZAster/C-like-Compiler", "Date": "2018-10-24T08:57:50Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalDistance == 0.0F) { android.util.Log.w(com.onlylemi.mapview.library.graphics.implementation.LocationUser.TAG, \"Total distance to traverse is 0, will not move user\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7933/buggy-version/library.src.main.java.com.onlylemi.mapview.library.graphics.implementation.LocationUser.java", "BodyUseAPI": [], "Fixed commit": "53e5db5f5f73ab51193333721a8cdc4e6ebd5356", "Url": "https://api.github.com/repos/patnym/MapView", "Date": "2018-01-18T14:32:47Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.reflect.Modifier.isFinal(var.getAccessedVariable().getModifiers())) throw new org.codehaus.groovy.syntax.RuntimeParserException(((\"The variable [\" + (var.getName())) + \"] may be uninitialized\"), var);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4304/buggy-version/src.main.java.org.codehaus.groovy.classgen.Verifier.java", "BodyUseAPI": ["org.codehaus.groovy.ast.expr.VariableExpression.getName()"], "Fixed commit": "ef4a7985d6cb4333dc78d2f02ab9822098a28640", "Url": "https://api.github.com/repos/keeganwitt/groovy", "Date": "2018-02-13T07:18:39Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playing) { for (com.jme3.phonon.PhononSoundPlayer player : PLAYERS) { player.loop(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2565/buggy-version/src.main.java.com.jme3.phonon.PhononRenderer.java", "BodyUseAPI": [], "Fixed commit": "f7eddb680db1906198d750b2d0c9910f46fc3ac2", "Url": "https://api.github.com/repos/jmePhonon/jmePhonon", "Date": "2018-09-17T11:39:29Z"},
{"Line": "=>634", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bcdlog.server.data.Users.getInstance().get(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (user != null) { albumModel = com.bcdlog.server.data.Albums.getInstance().get(user.getReceptionAlbumId()); }else { throw new com.bcdlog.shared.model.UserException(\"User not found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/51/buggy-version/fwk.src.main.java.com.bcdlog.server.manager.ResourceManager.java", "BodyUseAPI": ["com.bcdlog.server.data.Albums.getInstance().get(user.getReceptionAlbumId())", "com.bcdlog.shared.model.UserModel.getReceptionAlbumId()"], "Fixed commit": "547b8f0ba9cadbab2e8fd1b00e1853c0f7d3da10", "Url": "https://api.github.com/repos/BertrandClarke/sites", "Date": "2018-04-14T05:44:17Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getBlock().getRelative(BlockFace.DOWN).getType()) == (java.lang.Enum.valueOf(org.bukkit.Material.class, \"LEGACY_ANVIL\"))) e.setCancelled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2164/buggy-version/src.fr.lulucraft321.hiderails.listeners.BlockPhysicEvent.java", "BodyUseAPI": ["org.bukkit.event.block.BlockPhysicsEvent.setCancelled(boolean)"], "Fixed commit": "87e33391c6308b2c23a4c1ed08a6a213a87e1182", "Url": "https://api.github.com/repos/lulucraft/HideRails", "Date": "2018-07-28T22:48:07Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getBlock().getRelative(BlockFace.DOWN).getType()) == (java.lang.Enum.valueOf(org.bukkit.Material.class, \"ANVIL\"))) e.setCancelled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2164/buggy-version/src.fr.lulucraft321.hiderails.listeners.BlockPhysicEvent.java", "BodyUseAPI": ["org.bukkit.event.block.BlockPhysicsEvent.setCancelled(boolean)"], "Fixed commit": "87e33391c6308b2c23a4c1ed08a6a213a87e1182", "Url": "https://api.github.com/repos/lulucraft/HideRails", "Date": "2018-07-28T22:48:07Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == 0) { java.lang.String[] preCloseStr = new java.lang.String[]{ allPoints.get(0).toString(), (baseValue) + \"\", \"0\", (baseValue) + \"\", (baseValue) + \"\" }; bean = createBean(preCloseStr); }else { com.volume.candle.ticker.bean.MinutesBean preOneBean = mMaps.get(allPoints.get((i - 1)).toString()); java.lang.String[] preOneStr = (preOneBean != null) ? new java.lang.String[]{ time + \"\", (preOneBean.cjprice) + \"\", (preOneBean.cjnum) + \"\", (preOneBean.avprice) + \"\", (preOneBean.openprice) + \"\" } : null; bean = createBean(preOneStr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2401/buggy-version/app.src.main.java.com.volume.candle.ticker.tools.MinutesDataParse.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.get(int)", "java.lang.Long.toString()", "java.util.Map<java.lang.String, com.volume.candle.ticker.bean.MinutesBean>.get(java.lang.String)"], "Fixed commit": "5a6126d7a03d11594a8b7c3be729fc0f2e79937e", "Url": "https://api.github.com/repos/PATHngping/canvolclient", "Date": "2018-09-28T08:46:14Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.parser) != null) { this.parser.parse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9238/buggy-version/src.de.naoth.xabsleditor.parser.XParser.java", "BodyUseAPI": [], "Fixed commit": "c89d50c523a1c767345f45bfa481d7fb4cb35b02", "Url": "https://api.github.com/repos/BerlinUnited/xabsleditor", "Date": "2018-03-09T10:59:51Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((end_time.length()) > 13) { this.end_time = end_time.substring(0, 13); }else { this.end_time = end_time; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2320/buggy-version/app.src.main.java.com.tomato.tuantt.tomatoapp.model.OrderData.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "1e846ea59ce64f1a10fbd677e7eec4b486b31159", "Url": "https://api.github.com/repos/tranthanhtuan269/tomatoAndroid", "Date": "2018-10-22T13:08:06Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((start_time.length()) > 13) { this.start_time = start_time.substring(0, 13); }else { this.start_time = start_time; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2320/buggy-version/app.src.main.java.com.tomato.tuantt.tomatoapp.model.OrderData.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "1e846ea59ce64f1a10fbd677e7eec4b486b31159", "Url": "https://api.github.com/repos/tranthanhtuan269/tomatoAndroid", "Date": "2018-10-22T13:08:06Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((archiveOut) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6652/buggy-version/src.common-messagelog.src.main.java.ee.ria.xroad.common.messagelog.archive.LogArchiveWriter.java", "BodyUseAPI": [], "Fixed commit": "e12d541516536e202f6269da5900ff27d4124629", "Url": "https://api.github.com/repos/nordic-institute/X-Road", "Date": "2018-08-22T13:42:06Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.userName) == \"Derp\") { timeBeforeShoot = 2; }else { timeBeforeShoot = engine.entities.Tank.TIME_BETWEEN_SHOTS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3891/buggy-version/src.engine.entities.Tank.java", "BodyUseAPI": [], "Fixed commit": "ff17b79870b981d062ddd2f97bfb5f79f18c84b6", "Url": "https://api.github.com/repos/TheAIBot/panzer-3000", "Date": "2018-01-17T09:52:30Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["yc.configuration.getConfigurationSection(\"targets\").getKeys(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((targets.isEmpty()) == false) { for (java.lang.String i : targets) { p = new org.bukkit.permissions.Permission((\"pos.promote.\" + i)); pm.addPermission(p); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8251/buggy-version/PromoteOneself.src.me.PromoteOneselfPackage.PromoteOneself.Classes.PromoteOneselfMainClass.java", "BodyUseAPI": [], "Fixed commit": "109779cf4758496a55cd2a20983060b6f716889e", "Url": "https://api.github.com/repos/aappleton8/PromoteOneself", "Date": "2018-03-21T20:25:04Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (page.isEditorAreaVisible()) { page.openEditor(new org.gumtree.gumnix.sics.internal.ui.editors.SicsEditorInput(org.gumtree.gumnix.sics.core.SicsCore.getSicsController()), SicsUIConstants.ID_EDITOR_SICS_CONTROL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8179/buggy-version/framework.sics.org.gumtree.gumnix.sics.ui.src.org.gumtree.gumnix.sics.internal.ui.navigator.InstrumentContentProvider.java", "BodyUseAPI": ["org.eclipse.ui.IWorkbenchPage.openEditor(org.gumtree.gumnix.sics.internal.ui.editors.SicsEditorInput,SicsUIConstants.ID_EDITOR_SICS_CONTROL)"], "Fixed commit": "3500a9d991ed57c961f9507fd056c2c37197ea17", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2018-02-28T23:10:13Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((time % (DataStore.AUTOSAVE_SECONDS)) != 0) { done = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/507/buggy-version/app.src.main.java.trc3543.trcscoutingapp.AutoSaveThread.java", "BodyUseAPI": [], "Fixed commit": "d1ae5820060d6e8a17576c4d2f8e34c9a258201c", "Url": "https://api.github.com/repos/DrDab/TrcScoutingApp", "Date": "2018-01-28T00:56:25Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, Clases.Usuario>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ll.getProfesor()) == false) { listModel.addElement(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8670/buggy-version/PatronesSW.src.Interfaces.InterfazAsignacionTfg.java", "BodyUseAPI": [], "Fixed commit": "5471909e1fb91ca8b78952388fc6d418b4a4ab46", "Url": "https://api.github.com/repos/guillermo132/PatronesJava", "Date": "2018-01-11T20:06:14Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.JarURLConnection.getEntryName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(jarConnectionEntryName.endsWith(\"/\"))) { jarConnectionEntryName += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2595/buggy-version/src.main.java.net.sourceforge.tess4j.util.LoadLibs.java", "BodyUseAPI": [], "Fixed commit": "e4f4a3d87d9db8ae816a166c85379a8083043376", "Url": "https://api.github.com/repos/nguyenq/tess4j", "Date": "2018-05-02T20:41:09Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.Town.villagers.Villager.getRole()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (villagerCount.containsKey(role)) { villagerCount.put(role, ((villagerCount.get(role)) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8293/buggy-version/src.game.Town.Town.java", "BodyUseAPI": ["java.util.HashMap<game.Town.villagers.VILLAGER_ROLES, java.lang.Integer>.get(game.Town.villagers.VILLAGER_ROLES)", "java.util.HashMap<game.Town.villagers.VILLAGER_ROLES, java.lang.Integer>.put(game.Town.villagers.VILLAGER_ROLES,((villagerCount.get(role)) - 1))"], "Fixed commit": "249ac8a1acaf7eab0320b036391a4a69ac61388f", "Url": "https://api.github.com/repos/acherry125/Worship", "Date": "2018-04-17T00:26:37Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (title) { sentence = \"Title: \" + sentence; title = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7080/buggy-version/src.main.java.com.PATHopeng.SentimentProcessor.java", "BodyUseAPI": [], "Fixed commit": "ef30b6586c35f64c2503ab2d5c8e2fd8655fdab5", "Url": "https://api.github.com/repos/XNYu/SentimentAnalyzer_Baidu", "Date": "2018-08-01T02:50:37Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(compoundDate.isDatePartMissing())) { try { java.time.LocalDate.of(java.lang.Integer.parseInt(compoundDate.getYear()), java.lang.Integer.parseInt(compoundDate.getMonth()), java.lang.Integer.parseInt(compoundDate.getDay())); } catch (java.lang.Exception e) { return false; } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5422/buggy-version/src.main.java.uk.gov.dft.bluebadge.webapp.citizen.controllers.validator.ValidCompoundDateValidator.java", "BodyUseAPI": ["java.lang.Integer.parseInt(compoundDate.getMonth())", "java.lang.Integer.parseInt(compoundDate.getDay())", "java.lang.Integer.parseInt(compoundDate.getYear())", "uk.gov.dft.bluebadge.webapp.citizen.model.component.CompoundDate.getYear()", "java.time.LocalDate.of(int,int,int)", "uk.gov.dft.bluebadge.webapp.citizen.model.component.CompoundDate.getDay()", "uk.gov.dft.bluebadge.webapp.citizen.model.component.CompoundDate.getMonth()"], "Fixed commit": "046688e39bc44ed20817df20550f6a936f3e6668", "Url": "https://api.github.com/repos/dft-bluebadge/citizen-webapp", "Date": "2018-09-28T09:30:52Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (end != 0) { attrSelector += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3184/buggy-version/src.main.java.com.hulu.ftl.formats.XMLFormat.java", "BodyUseAPI": [], "Fixed commit": "25637eb6f6400ddb7dd1f453a78b1e9969f53fd9", "Url": "https://api.github.com/repos/trevorgrayson/ftl", "Date": "2018-10-11T23:34:20Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Chess.Model.Moves.Move.differenceOnXCoordinate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (differenceOnXCoordinate > 1) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3848/buggy-version/src.main.java.Chess.Model.ChessPieces.Pawn.java", "BodyUseAPI": [], "Fixed commit": "db883ee532f54270b2c13b5a5954af51206a8865", "Url": "https://api.github.com/repos/chess-team/Chess", "Date": "2018-05-07T17:43:11Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Chess.Model.Moves.Move.differenceOnYCoordinate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (differenceOnYCoordinate != 1) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3848/buggy-version/src.main.java.Chess.Model.ChessPieces.Pawn.java", "BodyUseAPI": [], "Fixed commit": "db883ee532f54270b2c13b5a5954af51206a8865", "Url": "https://api.github.com/repos/chess-team/Chess", "Date": "2018-05-07T17:43:11Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (javax.swing.SwingUtilities.isEventDispatchThread()) { onEDT.run(); }else { try { javax.swing.SwingUtilities.invokeAndWait(onEDT); } catch (java.lang.reflect.InvocationTargetException | java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7854/buggy-version/src.main.java.ca.hedlund.desktopicons.DesktopIcons.java", "BodyUseAPI": [], "Fixed commit": "087be1742bd9bd1d98033b1e3a0a0532c4bc1bf9", "Url": "https://api.github.com/repos/ghedlund/desktopicons", "Date": "2018-02-05T13:43:42Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (javax.swing.SwingUtilities.isEventDispatchThread()) { onEDT.run(); }else { try { javax.swing.SwingUtilities.invokeAndWait(onEDT); } catch (java.lang.reflect.InvocationTargetException | java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7854/buggy-version/src.main.java.ca.hedlund.desktopicons.DesktopIcons.java", "BodyUseAPI": [], "Fixed commit": "087be1742bd9bd1d98033b1e3a0a0532c4bc1bf9", "Url": "https://api.github.com/repos/ghedlund/desktopicons", "Date": "2018-02-05T13:43:42Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (javax.swing.SwingUtilities.isEventDispatchThread()) { onEDT.run(); }else { try { javax.swing.SwingUtilities.invokeAndWait(onEDT); } catch (java.lang.reflect.InvocationTargetException | java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7854/buggy-version/src.main.java.ca.hedlund.desktopicons.DesktopIcons.java", "BodyUseAPI": [], "Fixed commit": "087be1742bd9bd1d98033b1e3a0a0532c4bc1bf9", "Url": "https://api.github.com/repos/ghedlund/desktopicons", "Date": "2018-02-05T13:43:42Z"},
{"Line": "=>586", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((trackViewModel.getTrackWithPoints().getValue().getTrackPoints().size()) > 1) { trackViewModel.saveToCloud(); android.content.Intent intent = com.awolity.trakr.view.detail.TrackDetailActivity.getStarterIntent(this, trackId); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4553/buggy-version/app.src.main.java.com.awolity.trakr.view.main.MainActivity.java", "BodyUseAPI": ["com.awolity.trakr.viewmodel.TrackViewModel.saveToCloud()"], "Fixed commit": "ae405987cfc0519e8111b289641b9f0bd26eba10", "Url": "https://api.github.com/repos/vokod/Trakr", "Date": "2018-06-12T14:28:38Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (inputstream != null) { propval = new java.util.Scanner(inputstream).useDelimiter(\"\\\\A\").next(); inputstream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5659/buggy-version/rootbeerlib.src.main.java.com.tab.ui.check.RootBeer.java", "BodyUseAPI": ["java.util.Scanner.next()", "java.util.Scanner.useDelimiter(java.lang.String)", "java.io.InputStream.close()"], "Fixed commit": "13916a4cef612d63937806eb2195ab57688bd8f0", "Url": "https://api.github.com/repos/atlantis0/rootbeer", "Date": "2018-08-03T09:32:26Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dashboardAddress) == null) { dashboardAddress = com.stackimpact.agent.Agent.SAAS_DASHBOARD_ADDRESS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6012/buggy-version/src.com.stackimpact.agent.Agent.java", "BodyUseAPI": [], "Fixed commit": "35dbde1675cdb3543d73d495c9e10f815dc456cb", "Url": "https://api.github.com/repos/stackimpact/stackimpact-java", "Date": "2018-09-13T14:38:04Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ImageView.getDrawable()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (oldDrawable instanceof android.graphics.drawable.LayerDrawable) { android.graphics.drawable.LayerDrawable oldLayerDrawable = ((android.graphics.drawable.LayerDrawable) (oldDrawable)); placeholder = oldLayerDrawable.getDrawable(0); }else { placeholder = imageView.getDrawable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4452/buggy-version/dali.src.main.java.at.favre.lib.dali.builder.blur.BlurBuilder.java", "BodyUseAPI": [], "Fixed commit": "af4d2845384c020f02511fc3a4f27af546eec64e", "Url": "https://api.github.com/repos/buptfarmer/Dali", "Date": "2018-04-19T13:37:23Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { return java.lang.Integer.compare(o1.state.getLayerIndex(), o2.state.getLayerIndex()); }else { if ((o1.state.getLayerIndex()) > (o2.state.getLayerIndex())) return 1; else if ((o1.state.getLayerIndex()) == (o2.state.getLayerIndex())) return 0; else return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5748/buggy-version/app.src.main.java.com.paulvarry.intra42.ui.Galaxy.java", "BodyUseAPI": [], "Fixed commit": "596be4adeafb294a6c0f928acfef503b7df3a41c", "Url": "https://api.github.com/repos/pvarry/intra42", "Date": "2018-05-18T15:00:39Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (until == null) { return errorServices.setMessage(\"No Number No Fun\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8334/buggy-version/week-09.day-01.REST.src.main.java.com.greenfoxacademy.rest.controllers.MainRestController.java", "BodyUseAPI": [], "Fixed commit": "56f5712349bc866f1e6a07c69d9e63fbaf7a92ec", "Url": "https://api.github.com/repos/green-fox-academy/Ldaruu", "Date": "2018-10-02T12:17:59Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(bindings.containsKey(key.getType()))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2068/buggy-version/src.main.java.io.github.hedgehog1029.frame.dispatcher.bindings.BindingList.java", "BodyUseAPI": [], "Fixed commit": "02bd66d6c1ec1d82509e54ff69942ded312eecc3", "Url": "https://api.github.com/repos/hedgehog1029/Frame", "Date": "2018-06-14T18:37:38Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lineageInfo.isPresent()) { lineageInfo.get().setSource(file.getSourceData(), newWorkUnit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8407/buggy-version/gobblin-data-management.src.main.java.org.apache.gobblin.data.management.copy.splitter.DistcpFileSplitter.java", "BodyUseAPI": ["lineageInfo.get().setSource(file.getSourceData(),org.apache.gobblin.configuration.WorkUnitState)", "com.google.common.base.Optional<org.apache.gobblin.metrics.event.lineage.LineageInfo>.get()"], "Fixed commit": "ac498873686a95c54e584acc228683afbfdf218d", "Url": "https://api.github.com/repos/cshen98/incubator-gobblin", "Date": "2018-10-05T01:40:26Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.cadrian.macchiato.interpreter.Context.eval(indexedExpression.getIndex())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (index == null) { throw new net.cadrian.macchiato.interpreter.InterpreterException(\"Cannot use inexistent index\", indexedExpression.position()); }else { throw new net.cadrian.macchiato.interpreter.InterpreterException(((\"Cannot use \" + (index.getClass().getSimpleName())) + \" as index\"), indexedExpression.position()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/206/buggy-version/Macchiato.src.java.net.cadrian.macchiato.interpreter.AssignmentVisitor.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getSimpleName()", "java.lang.Object.getClass()"], "Fixed commit": "b71dee051ea2eb63582605b6faf8909d800bb9f2", "Url": "https://api.github.com/repos/cadrian/macchiato", "Date": "2018-04-28T21:34:59Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i != (-1)) { fileName = fileName.substring(0, i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5283/buggy-version/src.com.delfin.jarexp.frame.search.ClassFileSearcher.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "d40db15fe93d57e6c663fc641aaa59a9a5c4876f", "Url": "https://api.github.com/repos/okiktev/jarexp", "Date": "2018-10-06T20:21:02Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dos.getTripped())) dos.setTripped(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/751/buggy-version/MetroData_Container.MetroData_Container.MetroData_Services.src.main.java.com.incture.metrodata.service.ContainerService.java", "BodyUseAPI": ["com.incture.metrodata.entity.DeliveryHeaderDo.setTripped(boolean)"], "Fixed commit": "2fe14be4e6660a3c758594f120353a0b89701836", "Url": "https://api.github.com/repos/amit48sabat/MetrodataNew", "Date": "2018-06-01T06:29:16Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bestBlock.getCumulativeDifficulty().equals(BigInteger.ZERO)) { bestBlock.setCumulativeDifficulty(this.repository.getBlockStore().getTotalDifficulty()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7671/buggy-version/modAionImpl.src.org.aion.zero.impl.AionHub.java", "BodyUseAPI": ["org.aion.zero.impl.types.AionBlock.setCumulativeDifficulty(this.repository.getBlockStore().getTotalDifficulty())"], "Fixed commit": "464b474acfe83dc886bd45895c8eba5166387b0d", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-06-13T16:21:21Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aion.zero.impl.config.CfgAion.getGenesis()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (genesis.getCumulativeDifficulty().equals(BigInteger.ZERO)) { genesis.setCumulativeDifficulty(genesis.getDifficultyBI()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7671/buggy-version/modAionImpl.src.org.aion.zero.impl.AionHub.java", "BodyUseAPI": ["org.aion.zero.impl.AionGenesis.getDifficultyBI()", "org.aion.zero.impl.AionGenesis.setCumulativeDifficulty(genesis.getDifficultyBI())"], "Fixed commit": "464b474acfe83dc886bd45895c8eba5166387b0d", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-06-13T16:21:21Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 5) { dataFormat = \"-c\"; }else { dataFormat = args[3]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7756/buggy-version/ner.src.main.java.edu.illinois.cs.cogcomp.ner.NerTagger.java", "BodyUseAPI": [], "Fixed commit": "31568485bd75e7d70ebe5c837c646c4fa2c1a9fa", "Url": "https://api.github.com/repos/mssammon/illinois-cogcomp-nlp-1", "Date": "2018-08-02T20:51:34Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.elmakers.mine.bukkit.wand.Wand.isSkill(itemStack)) { removeDrops.add(itemStack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9077/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.magic.listener.EntityController.java", "BodyUseAPI": ["java.util.List<org.bukkit.inventory.ItemStack>.add(org.bukkit.inventory.ItemStack)"], "Fixed commit": "72898accfae80c65e7d5e31339ee9cf2430a3cda", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2018-04-01T00:51:33Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tNode.children) != null) && ((tNode.children.size()) > 0)) { n.addAll(tNode.children.getValues()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8928/buggy-version/core.src.main.java.zemberek.core.collections.Trie.java", "BodyUseAPI": ["java.util.List<zemberek.core.collections.Trie.Node<T>>.addAll(tNode.children.getValues())", "zemberek.core.collections.IntMap<zemberek.core.collections.Trie.Node<T>>.getValues()"], "Fixed commit": "c39ff373cdd0094e3f01c45fa590f9bd2a574c47", "Url": "https://api.github.com/repos/burakisikli/zemberek-nlp", "Date": "2018-10-06T20:06:55Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((variants.length) != 0) { for (int i = 0; i < (variants.length); i++) { items.add(new net.minecraft.item.ItemStack(this, 1, i)); } }else { items.add(new net.minecraft.item.ItemStack(this, 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/264/buggy-version/src.main.java.gamehunt.gcore.items.BasicItem.java", "BodyUseAPI": [], "Fixed commit": "b641460d1be9691b9f9d7edb6acaed46abc807bc", "Url": "https://api.github.com/repos/gamehunt/GCore", "Date": "2018-09-22T12:10:42Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fragmentOptions.getOptionDefinition(name).getValidator().getOptionDescription()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (optionDescription == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7026/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.store.sys.ExtendedOptionIterator.java", "BodyUseAPI": [], "Fixed commit": "6bcaa7a6ff79ee4a1fb3df0c59026b572f57924f", "Url": "https://api.github.com/repos/kkhatua/drill", "Date": "2018-08-17T00:55:07Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bindingResult.hasErrors()) { model.addAttribute(\"role\", roleService.findByName(\"EMP\")); model.addAttribute(\"currentlogin\", currentLogin); return \"admin/editemployee\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6411/buggy-version/mediatheque-group3.src.main.java.com.mickaelbrenoit.web.controller.AdminController.java", "BodyUseAPI": [], "Fixed commit": "a7bdfba4de7faff41f55b50a6b53fad21837c035", "Url": "https://api.github.com/repos/MickaelBRENOIT/Mediatheque", "Date": "2018-01-21T21:28:32Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.HackerGamingCZ.HackerTools.HackerTools.getPlugin().getPlayerManager().getPlayer(e.getPlayer())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (htPlayer.getPlayer().isDead()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1067/buggy-version/src.main.java.cz.HackerGamingCZ.HackerTools.listeners.VoidDamage.java", "BodyUseAPI": [], "Fixed commit": "c906b6a784d505de9e4f2282576498d425a661b7", "Url": "https://api.github.com/repos/TomasCZE7/HackerTools", "Date": "2018-06-11T19:04:27Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bson.Document.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/328/buggy-version/src.main.java.com.mgackowski.mongoutil.DefaultDenormalizer.java", "BodyUseAPI": [], "Fixed commit": "73e760f44529fe106106c28346c12de43de225d8", "Url": "https://api.github.com/repos/mgackowski/mongodb-denormalizer", "Date": "2018-02-21T12:34:50Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (array == null) { throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/196/buggy-version/tehreer-android.src.main.java.com.mta.tehreer.internal.collections.JByteArrayIntList.java", "BodyUseAPI": [], "Fixed commit": "0e47b07ad70ee9d09e1cf04ab72c4ccee4f79419", "Url": "https://api.github.com/repos/mta452/Tehreer-Android", "Date": "2018-08-06T15:50:53Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gridsum.datadivertor.service.impl.DateUtil.dateToString(com.gridsum.datadivertor.service.impl.DateUtil.cst2gmt(batchInfo.getNextBatchEndTime()),DateUtil.SDF_DATETIME)", "com.gridsum.datadivertor.service.impl.DateUtil.dateToString(com.gridsum.datadivertor.service.impl.DateUtil.cst2gmt(dts.getFetchEndTime()),DateUtil.SDF_DATETIME)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fetchEndTime.equals(gmtNextBatchEndTime)) { this.parquetService.close(parquetInfo); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3024/buggy-version/src.main.java.com.gridsum.datadivertor.service.impl.QueryInfoCoreProcessServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "6c7905a326137ac7ab7ef52c8aafc8b8b6f03ab0", "Url": "https://api.github.com/repos/gridsum/IQD-divertor", "Date": "2018-04-17T07:08:52Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.oscarehr.common.dao.PropertyDao.checkByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((p != null) && ((p.getValue()) != null)) { itemsToRemove = p.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7857/buggy-version/src.main.java.org.oscarehr.managers.PreventionManager.java", "BodyUseAPI": ["org.oscarehr.common.model.Property.getValue()"], "Fixed commit": "c3beb3279c15e85d73844a35fc41ad80b98c809b", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2015-12-01T16:33:27Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(com.kymjs.common.StringUtils.isEmpty())) && (!(city.equals(com.ruitukeji.zwbs.common.KJActivityStack.create().topActivity().getString(R.string.locateFailure))))) { httpParams.put(\"city\", city); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1629/buggy-version/ZWBS-Android.app.src.main.java.com.ruitukeji.zwbs.main.GetOrderPresenter.java", "BodyUseAPI": ["com.kymjs.rxvolley.client.HttpParams.put(java.lang.String,java.lang.String)"], "Fixed commit": "e69b1d35dc747e4659edacd15f435a50bd8bf18e", "Url": "https://api.github.com/repos/921668753/wztx-driver-andriod", "Date": "2018-02-01T02:16:52Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (layoutSensitive) { this.parser = org.spoofax.jsglr2.JSGLR2.layoutSensitive(parseTable); }else { this.parser = org.spoofax.jsglr2.JSGLR2.standard(parseTable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1266/buggy-version/org.metaborg.spoofax.core.src.main.java.org.metaborg.spoofax.core.syntax.JSGLR2I.java", "BodyUseAPI": [], "Fixed commit": "0fa0f872ce359b0b61d2b2214c2488df722231ed", "Url": "https://api.github.com/repos/metaborg/spoofax", "Date": "2018-02-01T15:47:38Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.donateTime) != null) { object.put(\"donateTime\", getDisplayDate(this.donateTime)); }else { object.put(\"donateTime\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7898/buggy-version/giveitforward.src.main.java.giveitforward.models.Request.java", "BodyUseAPI": [], "Fixed commit": "c0d01edb4d0d3c50c1ba987fad9d541fb43bf3a2", "Url": "https://api.github.com/repos/GiveItForward/Server", "Date": "2018-02-21T04:24:36Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source.peekChar()) == ' ') { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1880/buggy-version/Chapter3.src.wci.frontend.java.JavaScanner.java", "BodyUseAPI": [], "Fixed commit": "657858f45dfea84361deb546de756db6536716c9", "Url": "https://api.github.com/repos/Andruxa0125/Compilers", "Date": "2018-09-11T03:11:38Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getDeclaringClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.lang.reflect.Modifier.isPublic(klass.getModifiers()))) { fm = new org.nutz.lang.reflect.FastMethodFactory.FallbackFastMethod(method); org.nutz.lang.reflect.FastMethodFactory.cache.put(className, fm); return fm; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/721/buggy-version/src.org.nutz.lang.reflect.FastMethodFactory.java", "BodyUseAPI": [], "Fixed commit": "afbb1aa6f335bcd916f15821b5d0006cdb21262b", "Url": "https://api.github.com/repos/FlakyTestDetection/nutz", "Date": "2018-01-12T07:45:06Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (totalTime == null) { totalTime = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6917/buggy-version/app.src.main.java.com.example.a96jsa.chronos_app.DatabaseHelper.java", "BodyUseAPI": [], "Fixed commit": "6db3ab377f5f7d70ddae338677b8b6c55aed885b", "Url": "https://api.github.com/repos/96jsalinas/Chronos_app", "Date": "2018-05-02T13:50:09Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isIgnore) { invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9334/buggy-version/wheelview.src.main.java.com.contrarywind.view.WheelView.java", "BodyUseAPI": [], "Fixed commit": "d6884097a29598e41d20ad8a052f77121e65d0f6", "Url": "https://api.github.com/repos/Bigkoo/Android-PickerView", "Date": "2018-03-31T09:14:37Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (userInfo == null) { chain.doFilter(request, response); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4685/buggy-version/src.main.java.com.peoplesoft.pt.custom.filter.PortalServletFilter.java", "BodyUseAPI": [], "Fixed commit": "22d0e152f62f3ebd72e5db7ffc08f7b9c23fd589", "Url": "https://api.github.com/repos/bloodmc/PortalServletFilter", "Date": "2018-05-14T17:46:47Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CommonDataKeys.EDITOR.getData(com.intellij.openapi.actionSystem.DataContext)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (editor == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5908/buggy-version/camel-idea-plugin.src.main.java.org.apache.camel.idea.refereance.CamelBeanReferenceRenameHandler.java", "BodyUseAPI": [], "Fixed commit": "91ecb1a894effd9228988bf74bf9243b9640caaa", "Url": "https://api.github.com/repos/fharms/camel-idea-plugin", "Date": "2018-03-03T10:58:34Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((preparedStatementBulkData.size()) < 1) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7484/buggy-version/src.me.mrCookieSlime.Slimefun.MySQL.Components.Table.java", "BodyUseAPI": [], "Fixed commit": "d89fb42b360457f3962c05b4ea6ad7cc61155f8c", "Url": "https://api.github.com/repos/freethemice/Slimefun4-1", "Date": "2018-09-28T18:18:15Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mEditTxt.getText().length()) > 0) { editTxtColorFlasher.start(); resTxtColorFlasher.start(); textClearer.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2310/buggy-version/app.src.main.java.com.example.harinie.calculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "993544530e60835d032b644ff83a5c6ca0439731", "Url": "https://api.github.com/repos/HarinieR/Calculator", "Date": "2018-08-12T06:43:10Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((alignmentRecord.getMapq()) != null) alignmentBuilder.setMappingQuality(alignmentRecord.getMapq());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9484/buggy-version/convert-ga4gh.src.main.java.org.bdgenomics.convert.ga4gh.AlignmentRecordToReadAlignment.java", "BodyUseAPI": ["LinearAlignment.Builder.setMappingQuality(alignmentRecord.getMapq())", "org.bdgenomics.formats.avro.AlignmentRecord.getMapq()"], "Fixed commit": "03f40d901095a7171246c5cb5bce34cb7e2d737f", "Url": "https://api.github.com/repos/heuermh/bdg-convert", "Date": "2018-02-27T20:22:22Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (threads.classes.DirectoryWatcherNew.lob_preventDuplicates.wasFileCreated(iob_file.toPath())) { threads.classes.DirectoryWatcherNew.lob_preventDuplicates.removeCreated(iob_file.toPath()); }else { models.classes.MappedFile lob_mappedFile = cache.FileMapperCache.getFileMapperCache().get(iob_file.toPath()); lob_mappedFile.setVersion(((lob_mappedFile.getVersion()) + 1)); threads.classes.ThreadManager.addCommandToFileManager(iob_file, FileManagerConstants.GC_UPLOAD_TO_SERVER, true, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7066/buggy-version/src.main.java.threads.classes.DirectoryWatcherNew.java", "BodyUseAPI": ["java.io.File.toPath()", "cache.FileMapperCache.getFileMapperCache().get(java.nio.file.Path)", "models.classes.PreventDuplicateOperation.removeCreated(java.nio.file.Path)", "java.io.File.toPath()", "threads.classes.ThreadManager.addCommandToFileManager(java.io.File,FileManagerConstants.GC_UPLOAD_TO_SERVER,boolean,boolean)"], "Fixed commit": "84113193e08ad3235f9124c1a9a6727bae95d4b9", "Url": "https://api.github.com/repos/Alexander-Lukacs/VFS_GUI", "Date": "2018-03-15T16:50:08Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["accounts.AccountManager.getAccount(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (account == null) { throw new org.springframework.orm.ObjectRetrievalFailureException(rewards.internal.account.Account.class, entityId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2240/buggy-version/lab.40-security.src.main.java.accounts.web.AccountController.java", "BodyUseAPI": [], "Fixed commit": "4c544db4572eb1d8089a6ff46f9448b7f625e24f", "Url": "https://api.github.com/repos/platform-acceleration-lab/core-spring-code", "Date": "2018-08-10T21:42:53Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (idx < 0) idx += 9;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6977/buggy-version/src.nuclear.slitherge.ui.TextureLoader.java", "BodyUseAPI": [], "Fixed commit": "cb1bc420c5b9545555304bf7f241e1bd6f763a3b", "Url": "https://api.github.com/repos/NuclearManD/JavaSlitherEngine", "Date": "2018-07-07T07:02:37Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getStmt()) == null) { if (!(currentBB.isHasJumpInst())) { currentBB.setJumpInst(new com.evensgn.emcompiler.frontend.IRJump(currentBB, stepBB)); } }else { node.getStmt().accept(this); if (!(currentBB.isHasJumpInst())) { currentBB.setJumpInst(new com.evensgn.emcompiler.frontend.IRJump(currentBB, stepBB)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4771/buggy-version/src.com.evensgn.emcompiler.frontend.IRBuilder.java", "BodyUseAPI": ["node.getStmt().accept(com.evensgn.emcompiler.frontend.IRBuilder)", "com.evensgn.emcompiler.frontend.ForStmtNode.getStmt()"], "Fixed commit": "d6e258baa7984f87746857e5813452299a712912", "Url": "https://api.github.com/repos/Evensgn/EM-Compiler", "Date": "2018-06-05T22:00:24Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) > 8) { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/971/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "95a0ea29c98f720a864211bbe3bc73349c4ade0e", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-sethmaxwl", "Date": "2018-10-05T13:41:36Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.seminor.murase.makoto.murasemakoto.MainActivity.findViewById(R.id.text_score)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((txtScore.getText()) == \"^[0-9]$\") { newScore = (java.lang.Integer.parseInt(txtScore.getText().toString())) + score; }else { newScore = score; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3015/buggy-version/app.src.main.java.com.example.seminor.murase.makoto.murasemakoto.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.getText()", "txtScore.getText().toString()", "java.lang.Integer.parseInt(txtScore.getText().toString())"], "Fixed commit": "b3db8892cda138ca354518b4ebd2ba83e36294e0", "Url": "https://api.github.com/repos/testsobal01/Intern180828", "Date": "2018-09-12T02:10:18Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (wheel.isPowered()) { wheel.getBody().applyForceToCenter(wheel.getBody().getWorldVector(baseVector), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/447/buggy-version/core.src.com.topdowncar.game.entities.Car.java", "BodyUseAPI": ["com.topdowncar.game.entities.Wheel.getBody()", "wheel.getBody().getWorldVector(com.badlogic.gdx.math.Vector2)", "wheel.getBody().applyForceToCenter(wheel.getBody().getWorldVector(baseVector),boolean)", "com.topdowncar.game.entities.Wheel.getBody()"], "Fixed commit": "974ec93ecb90e26b7059e1d3d9096c28ccf70198", "Url": "https://api.github.com/repos/bnovakovic/Box2d-Top-Down-Car-with-Drift", "Date": "2018-06-08T21:51:40Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((externalReference.getCodes()) != null) { externalReferenceDto.setCodes(mapCodeDtos(externalReference.getCodes(), false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9357/buggy-version/src.main.java.fi.vm.yti.codelist.intake.service.BaseService.java", "BodyUseAPI": ["fi.vm.yti.codelist.common.dto.ExternalReferenceDTO.setCodes(java.util.Set<fi.vm.yti.codelist.common.dto.CodeDTO>)", "fi.vm.yti.codelist.common.model.ExternalReference.getCodes()", "fi.vm.yti.codelist.intake.service.BaseService.mapCodeDtos(externalReference.getCodes(),boolean)"], "Fixed commit": "36e0967868d7ccacc9ca090cf3908e4c578bebd5", "Url": "https://api.github.com/repos/VRK-YTI/yti-codelist-content-intake-service", "Date": "2018-03-12T23:57:09Z"},
{"Line": "=>762", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERSANCTIONED.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode())) && ((waterConnectionDetails.getCloseConnectionType()) != null)) && (waterConnectionDetails.getCloseConnectionType().equals(org.egov.wtms.application.service.TEMPERARYCLOSECODE))) waterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.WORKFLOW_RECONNCTIONINITIATED, org.egov.wtms.application.service.MODULETYPE)); else if ((org.egov.wtms.application.service.WORKFLOW_RECONNCTIONINITIATED.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode())) && (waterConnectionDetails.getCloseConnectionType().equals(org.egov.wtms.application.service.TEMPERARYCLOSECODE))) waterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS__RECONNCTIONINPROGRESS, org.egov.wtms.application.service.MODULETYPE)); else if (((workFlowAction.equals(org.egov.wtms.application.service.APPROVEWORKFLOWACTION)) && (org.egov.wtms.application.service.APPLICATION_STATUS__RECONNCTIONINPROGRESS.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode()))) && (waterConnectionDetails.getCloseConnectionType().equals(org.egov.wtms.application.service.TEMPERARYCLOSECODE))) waterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS_RECONNDIGSIGNPENDING, org.egov.wtms.application.service.MODULETYPE)); else if (((workFlowAction.equals(org.egov.wtms.application.service.SIGNWORKFLOWACTION)) && (org.egov.wtms.application.service.APPLICATION_STATUS_RECONNDIGSIGNPENDING.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode()))) && (waterConnectionDetails.getCloseConnectionType().equals(org.egov.wtms.application.service.TEMPERARYCLOSECODE))) waterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS__RECONNCTIONSANCTIONED, org.egov.wtms.application.service.MODULETYPE));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2897/buggy-version/egov.egov-wtms.src.main.java.org.egov.wtms.application.service.WaterConnectionDetailsService.java", "BodyUseAPI": ["waterConnectionDetails.getCloseConnectionType().equals(org.egov.wtms.application.service.TEMPERARYCLOSECODE)", "org.egov.wtms.application.entity.WaterConnectionDetails.getStatus()", "org.egov.wtms.application.entity.WaterConnectionDetails.getCloseConnectionType()", "waterConnectionDetails.getStatus().getCode()", "org.egov.wtms.application.entity.WaterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS__RECONNCTIONINPROGRESS, org.egov.wtms.application.service.MODULETYPE))", "org.egov.wtms.application.entity.WaterConnectionDetails.getStatus()", "org.egov.wtms.application.service.WORKFLOW_RECONNCTIONINITIATED.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode())", "org.egov.wtms.application.entity.WaterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.WORKFLOW_RECONNCTIONINITIATED, org.egov.wtms.application.service.MODULETYPE))", "waterConnectionDetails.getCloseConnectionType().equals(org.egov.wtms.application.service.TEMPERARYCLOSECODE)", "org.egov.wtms.application.service.APPLICATION_STATUS_RECONNDIGSIGNPENDING.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode())", "waterConnectionDetails.getCloseConnectionType().equals(org.egov.wtms.application.service.TEMPERARYCLOSECODE)", "waterConnectionDetails.getStatus().getCode()", "waterConnectionDetails.getStatus().getCode()", "org.egov.wtms.application.entity.WaterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS__RECONNCTIONSANCTIONED, org.egov.wtms.application.service.MODULETYPE))", "org.egov.wtms.application.entity.WaterConnectionDetails.getCloseConnectionType()", "org.egov.wtms.application.service.APPLICATION_STATUS__RECONNCTIONINPROGRESS.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode())", "org.egov.wtms.application.entity.WaterConnectionDetails.getCloseConnectionType()", "org.egov.wtms.application.entity.WaterConnectionDetails.getStatus()", "org.egov.wtms.application.entity.WaterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS_RECONNDIGSIGNPENDING, org.egov.wtms.application.service.MODULETYPE))"], "Fixed commit": "48b5c346cbbef601c272b0feb943489f9fc5e969", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2018-04-12T08:30:17Z"},
{"Line": "=>736", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.egov.wtms.application.service.APPLICATION_STATUS_SANCTIONED.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode())) && ((waterConnectionDetails.getCloseConnectionType()) != null)) waterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERINITIATED, org.egov.wtms.application.service.MODULETYPE)); else if (((!(\"closeredit\".equals(mode))) && (org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERINITIATED.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode()))) && ((waterConnectionDetails.getCloseConnectionType()) != null)) waterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERINPROGRESS, org.egov.wtms.application.service.MODULETYPE)); else if (((workFlowAction.equals(org.egov.wtms.application.service.APPROVEWORKFLOWACTION)) && (org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERINPROGRESS.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode()))) && ((waterConnectionDetails.getCloseConnectionType()) != null)) waterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERDIGSIGNPENDING, org.egov.wtms.application.service.MODULETYPE)); else if (((workFlowAction.equals(org.egov.wtms.application.service.SIGNWORKFLOWACTION)) && (org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERDIGSIGNPENDING.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode()))) && ((waterConnectionDetails.getCloseConnectionType()) != null)) waterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERSANCTIONED, org.egov.wtms.application.service.MODULETYPE));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2897/buggy-version/egov.egov-wtms.src.main.java.org.egov.wtms.application.service.WaterConnectionDetailsService.java", "BodyUseAPI": ["org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERINITIATED.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode())", "waterConnectionDetails.getStatus().getCode()", "org.egov.wtms.application.entity.WaterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERDIGSIGNPENDING, org.egov.wtms.application.service.MODULETYPE))", "org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERINPROGRESS.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode())", "org.egov.wtms.application.entity.WaterConnectionDetails.getCloseConnectionType()", "org.egov.wtms.application.entity.WaterConnectionDetails.getStatus()", "org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERDIGSIGNPENDING.equalsIgnoreCase(waterConnectionDetails.getStatus().getCode())", "org.egov.wtms.application.entity.WaterConnectionDetails.getStatus()", "org.egov.wtms.application.entity.WaterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERINITIATED, org.egov.wtms.application.service.MODULETYPE))", "org.egov.wtms.application.entity.WaterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERINPROGRESS, org.egov.wtms.application.service.MODULETYPE))", "waterConnectionDetails.getStatus().getCode()", "org.egov.wtms.application.entity.WaterConnectionDetails.getCloseConnectionType()", "waterConnectionDetails.getStatus().getCode()", "org.egov.wtms.application.entity.WaterConnectionDetails.getStatus()", "org.egov.wtms.application.entity.WaterConnectionDetails.getCloseConnectionType()", "org.egov.wtms.application.entity.WaterConnectionDetails.setStatus(waterTaxUtils.getStatusByCodeAndModuleType(org.egov.wtms.application.service.APPLICATION_STATUS_CLOSERSANCTIONED, org.egov.wtms.application.service.MODULETYPE))"], "Fixed commit": "48b5c346cbbef601c272b0feb943489f9fc5e969", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2018-04-12T08:30:17Z"},
{"Line": "=>1149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cordova.inappbrowser.InAppBrowser.InAppBrowserClient.getString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (allowed != null) { allowedSchemes = allowed.split(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2602/buggy-version/src.android.InAppBrowser.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "945c7e38a37bc5aafbe7e5a991e6a967de502898", "Url": "https://api.github.com/repos/JorgeCoke/cordova-plugin-inappbrowser", "Date": "2018-08-22T16:40:52Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (parent != null) { if (java.nio.file.Files.notExists(parent)) { java.nio.file.Files.createDirectories(parent); } java.nio.file.Files.copy(srcInputStream, destPath, java.nio.file.StandardCopyOption.REPLACE_EXISTING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8435/buggy-version/compiler.ballerina-lang.src.main.java.org.wso2.ballerinalang.compiler.ZipUtils.java", "BodyUseAPI": ["java.nio.file.Files.createDirectories(java.nio.file.Path)", "java.nio.file.Files.notExists(java.nio.file.Path)"], "Fixed commit": "3cd83df2cbe9a77f4a073b354edc987bc561fbef", "Url": "https://api.github.com/repos/NatashaWso2/ballerina", "Date": "2018-03-18T10:15:02Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (picURL != null) { activeUser.setProfileImagePath(picURL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5742/buggy-version/src.main.java.model.MainModel.java", "BodyUseAPI": ["model.User.setProfileImagePath(java.lang.String)"], "Fixed commit": "c5003c7fcef18cd7dfdc35346036c0da188d1e72", "Url": "https://api.github.com/repos/JonathanKore/Basta_gruppen_LTD", "Date": "2018-10-21T20:55:12Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRewardedVideoAd) != null) mRewardedVideoAd.destroy(activity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2579/buggy-version/advertise_admob.src.main.java.com.joycastle.advertise.admob.AMAdvertiseHelper.java", "BodyUseAPI": [], "Fixed commit": "631753fb0a01f1fd8a94f7800dc40878c8cb41b8", "Url": "https://api.github.com/repos/ietstudio/GamePlugin-Android", "Date": "2018-08-27T03:31:22Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRewardedVideoAd) != null) mRewardedVideoAd.pause(activity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2579/buggy-version/advertise_admob.src.main.java.com.joycastle.advertise.admob.AMAdvertiseHelper.java", "BodyUseAPI": [], "Fixed commit": "631753fb0a01f1fd8a94f7800dc40878c8cb41b8", "Url": "https://api.github.com/repos/ietstudio/GamePlugin-Android", "Date": "2018-08-27T03:31:22Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRewardedVideoAd) != null) mRewardedVideoAd.resume(activity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2579/buggy-version/advertise_admob.src.main.java.com.joycastle.advertise.admob.AMAdvertiseHelper.java", "BodyUseAPI": [], "Fixed commit": "631753fb0a01f1fd8a94f7800dc40878c8cb41b8", "Url": "https://api.github.com/repos/ietstudio/GamePlugin-Android", "Date": "2018-08-27T03:31:22Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (model != null) { mDepartureTV.setText(java.lang.String.format(java.util.Locale.getDefault(), \"Departure Date: %s\", model.getDatetime())); mSourceTV.setText(model.getSource()); mDestTV.setText(model.getDestination()); int seatsAvailable = getAvailableSeats(model); mSeatsAvailable.setText(java.lang.String.format(java.util.Locale.getDefault(), \"Seats Available: %d\", seatsAvailable)); }else { android.widget.Toast.makeText(this, \"Some error occured!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2896/buggy-version/app.src.main.java.in.co.chicmic.flyoverairways.activities.ChooseFlightActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "in.co.chicmic.flyoverairways.activities.ChooseFlightActivity.getAvailableSeats(in.co.chicmic.flyoverairways.dataModels.FlightDataModel)", "in.co.chicmic.flyoverairways.dataModels.FlightDataModel.getDatetime()", "android.widget.TextView.setText(model.getDestination())", "in.co.chicmic.flyoverairways.dataModels.FlightDataModel.getDestination()", "java.lang.String.format(java.util.Locale,java.lang.String,model.getDatetime())", "android.widget.TextView.setText(model.getSource())", "in.co.chicmic.flyoverairways.dataModels.FlightDataModel.getSource()"], "Fixed commit": "f5cbf287e52a45a4b740e933d438143dc8a9b0ec", "Url": "https://api.github.com/repos/sonutiwari/FlyOverAirways", "Date": "2018-09-08T15:50:05Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (commentTmp.contains(\")\")) { commentTmp = commentTmp.substring(0, commentTmp.lastIndexOf(\")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6471/buggy-version/generator-web.src.main.java.com.softdev.system.generator.util.TableParseUtil.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "e68c2921b38a1c8786d31d8ea6a10c91a34e4592", "Url": "https://api.github.com/repos/moshowgame/SpringBootCodeGenerator", "Date": "2018-09-27T13:41:58Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["newLocationModel.mapboxNavigation().options()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(options.enableOffRouteDetection())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4133/buggy-version/libandroid-navigation.src.main.java.com.mapbox.services.android.navigation.v5.navigation.NavigationHelper.java", "BodyUseAPI": [], "Fixed commit": "f7ccce6ef4897d0e3ec640ba9877fc8a3e8f80cc", "Url": "https://api.github.com/repos/mapbox/mapbox-navigation-android", "Date": "2018-03-19T19:31:08Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jdk.vm.ci.meta.ResolvedJavaField.getJavaKind()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((fieldKind == (jdk.vm.ci.meta.JavaKind.Object)) && (!(field.getType().equals(kind.toBoxedJavaClass())))) { com.oracle.svm.reflect.hosted.ReflectionSubstitutionType.throwIllegalArgumentException(graphKit, (((\"cannot write field of type \" + (targetField.getJavaKind())) + \" with Field.\") + (method.getName()))); }else { value = com.oracle.svm.reflect.hosted.ReflectionSubstitutionType.doImplicitCast(graphKit, kind, fieldKind, value); graphKit.append(new org.graalvm.compiler.nodes.java.StoreFieldNode(receiver, targetField, value)); graphKit.createReturn(null, jdk.vm.ci.meta.JavaKind.Void); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9194/buggy-version/substratevm.src.com.oracle.svm.reflect.src.com.oracle.svm.reflect.hosted.ReflectionSubstitutionType.java", "BodyUseAPI": ["com.oracle.svm.reflect.hosted.ReflectionSubstitutionType.doImplicitCast(com.oracle.svm.hosted.phases.HostedGraphKit,jdk.vm.ci.meta.JavaKind,jdk.vm.ci.meta.JavaKind,org.graalvm.compiler.nodes.ValueNode)"], "Fixed commit": "0642b4f26e904fb2e3f59278667e042d5f7ecd51", "Url": "https://api.github.com/repos/oracle/graal", "Date": "2018-04-19T21:07:41Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["leaveRequestRepository.findById(id).get()", "isd.internship.ala.controllers.TokenService.isAdmin(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((foundLeaveRequest.getStatus().getId().equals(1)) && isAdmin) foundLeaveRequest.getUser().setAvailDays(((foundLeaveRequest.getUser().getAvailDays()) + requestedDays));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6858/buggy-version/backend.src.main.java.isd.internship.ala.controllers.LeaveRequestController.java", "BodyUseAPI": ["isd.internship.ala.controllers.LeaveRequest.getUser()", "foundLeaveRequest.getUser().getAvailDays()", "foundLeaveRequest.getUser().setAvailDays(((foundLeaveRequest.getUser().getAvailDays()) + requestedDays))", "isd.internship.ala.controllers.LeaveRequest.getUser()"], "Fixed commit": "64b0901a5954c86a785685db628ead4ff96affa4", "Url": "https://api.github.com/repos/isd-soft/annual-leave-assistant", "Date": "2018-07-13T09:37:54Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["leaveRequestRepository.findById(id).get()", "isd.internship.ala.controllers.TokenService.isAdmin(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((foundLeaveRequest.getStatus().getId().equals(1)) && isAdmin) foundLeaveRequest.getUser().setAvailDays(((foundLeaveRequest.getUser().getAvailDays()) - requestedDays));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6858/buggy-version/backend.src.main.java.isd.internship.ala.controllers.LeaveRequestController.java", "BodyUseAPI": ["isd.internship.ala.controllers.LeaveRequest.getUser()", "foundLeaveRequest.getUser().getAvailDays()", "isd.internship.ala.controllers.LeaveRequest.getUser()", "foundLeaveRequest.getUser().setAvailDays(((foundLeaveRequest.getUser().getAvailDays()) - requestedDays))"], "Fixed commit": "64b0901a5954c86a785685db628ead4ff96affa4", "Url": "https://api.github.com/repos/isd-soft/annual-leave-assistant", "Date": "2018-07-13T09:37:54Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entryOut.getMethod()) != (java.util.zip.ZipEntry.DEFLATED)) { entryOut.setMethod(java.util.zip.ZipEntry.DEFLATED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8883/buggy-version/stringfog-gradle-plugin.src.main.java.com.github.megatronking.stringfog.plugin.StringFogClassInjector.java", "BodyUseAPI": ["java.util.zip.ZipEntry.setMethod(int)"], "Fixed commit": "fe513c6189de8ee4392c6daf012bdfa31e4e2958", "Url": "https://api.github.com/repos/MegatronKing/StringFog", "Date": "2018-07-25T08:53:56Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(packageName.equals(com.mpeter.xrandomtweaks.xposed.CurrentApp.getPackageName()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/752/buggy-version/app.src.main.java.com.mpeter.xrandomtweaks.xposed.ModuleSettings.java", "BodyUseAPI": [], "Fixed commit": "aa8024c5a7cc3d7b8c330fea8fcd20597c0d82f6", "Url": "https://api.github.com/repos/MPeti1/xRandomTweaks", "Date": "2018-09-16T12:05:29Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["yasp.group.service.DataAccess.getAllLicenseSummaries()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((list.get(i).getSummary()) == id) { result.add(dao.getLicenseById(list.get(i).getLicense())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6040/buggy-version/license-tldr.src.main.java.yasp.group.service.Service.java", "BodyUseAPI": ["list.get(i).getLicense()", "java.util.List<yasp.group.service.LicenseSummary>.get(int)", "java.util.List<yasp.group.service.License>.add(dao.getLicenseById(list.get(i).getLicense()))", "yasp.group.service.DataAccess.getLicenseById(list.get(i).getLicense())"], "Fixed commit": "ad0b988fb75b6f4b900742745203da85ed8d429b", "Url": "https://api.github.com/repos/Hanicef/license-tldr", "Date": "2018-05-18T09:21:24Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["yasp.group.service.DataAccess.getAllLicenseSummaries()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((list.get(i).getLicense()) == id) { result.add(dao.getSummaryById(list.get(i).getSummary())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6040/buggy-version/license-tldr.src.main.java.yasp.group.service.Service.java", "BodyUseAPI": ["java.util.List<yasp.group.service.LicenseSummary>.get(int)", "yasp.group.service.DataAccess.getSummaryById(list.get(i).getSummary())", "java.util.List<yasp.group.service.Summary>.add(dao.getSummaryById(list.get(i).getSummary()))", "list.get(i).getSummary()"], "Fixed commit": "ad0b988fb75b6f4b900742745203da85ed8d429b", "Url": "https://api.github.com/repos/Hanicef/license-tldr", "Date": "2018-05-18T09:21:24Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((headerBytes.length) - headerByteLength) > 0) { requestBody = com.hibegin.common.util.BytesUtil.subBytes(headerBytes, headerByteLength, ((headerBytes.length) - headerByteLength)); }else { requestBody = new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/644/buggy-version/src.main.java.com.hibegin.http.server.impl.HttpRequestDecoderImpl.java", "BodyUseAPI": ["com.hibegin.common.util.BytesUtil.subBytes(byte[],int,int)"], "Fixed commit": "1106a3f6caec703a869601d0653cf9a9c5c6ef37", "Url": "https://api.github.com/repos/94fzb/simplewebserver", "Date": "2018-05-20T04:43:40Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.util.SparseArray<java.util.concurrent.Future>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (future != null) { future.cancel(true); futures.remove(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1274/buggy-version/speedlib.src.main.java.com.workdawn.speedlib.load.RequestTaskQueue.java", "BodyUseAPI": ["java.util.concurrent.Future.cancel(boolean)"], "Fixed commit": "3da941e4e7dbb2e97cea1ddd1fa7c3bb7b286e48", "Url": "https://api.github.com/repos/workdawn/Speed", "Date": "2018-05-19T03:02:06Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getErrorCode()) == (APISecurityConstants.API_AUTH_MISSING_CREDENTIALS)) { java.lang.String errorDescription = ((((org.wso2.carbon.apimgt.gateway.handlers.security.APISecurityConstants.getFailureMessageDetailDescription(e.getErrorCode(), e.getMessage())) + \"'\") + (authorizationHeader)) + \" : Bearer ACCESS_TOKEN\") + \"'\"; errorDetail.setText(errorDescription); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9629/buggy-version/components.apimgt.org.wso2.carbon.apimgt.gateway.src.main.java.org.wso2.carbon.apimgt.gateway.handlers.security.APIAuthenticationHandler.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.gateway.handlers.security.APISecurityException.getMessage()", "org.wso2.carbon.apimgt.gateway.handlers.security.APISecurityException.getErrorCode()", "org.wso2.carbon.apimgt.gateway.handlers.security.APISecurityConstants.getFailureMessageDetailDescription(e.getErrorCode(),e.getMessage())"], "Fixed commit": "13fc3179b33290195b96fe871ec3081495b27833", "Url": "https://api.github.com/repos/wso2/carbon-apimgt", "Date": "2018-10-11T05:52:05Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Package.getImplementationVersion()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (jomVersion != null) { if ((jomVersion.compareTo(minVersion)) < 0) { txt_info.append(((((((ERROR_HEADER) + \"JOM library version is below 0.2.0.2.\") + (NEW_LINE)) + \"Please update your library to continue, current version is: \") + jomVersion) + (NEW_LINE))); return; } }else { txt_info.append((((WARNING_HEADER) + \"JOM library version could not be detected. Correct functioning is not guaranteed.\") + (NEW_LINE))); txt_info.append(NEW_LINE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8502/buggy-version/Net2Plan-GUI.Net2Plan-GUI-Exec.src.main.java.com.net2plan.gui.utils.SolverCheckPanel.java", "BodyUseAPI": ["java.lang.String.compareTo(java.lang.String)", "javax.swing.JTextArea.append(java.lang.String)"], "Fixed commit": "b6613efd6a809d45dd481c9782e84f85f027ef4e", "Url": "https://api.github.com/repos/girtel/Net2Plan", "Date": "2018-10-02T08:15:47Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) startMainFragment();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1746/buggy-version/app.src.main.java.com.example.ahmedhamdy.prayertimes.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4f7d6e06eb4d40cdf7cfaf2d995186dd1555558a", "Url": "https://api.github.com/repos/ahmedgomaa27/PrayerTimes", "Date": "2018-02-10T11:57:15Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((leaseCandidate) != null) { deactivate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7849/buggy-version/hazelcast.src.main.java.com.obsidiandynamics.blackstrom.hazelcast.queue.DefaultSubscriber.java", "BodyUseAPI": [], "Fixed commit": "04755562a6b0f6202f886e1468d712e4f63f376d", "Url": "https://api.github.com/repos/obsidiandynamics/blackstrom", "Date": "2018-03-24T08:10:05Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cburch.logisim.tools.LibraryTools.getCircuitFromLibs(proj.getLogisimFile(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (circ != null) circ.Annotate(ClearExistingLabels, reporter, inLibrary);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2767/buggy-version/src.com.cburch.logisim.circuit.Circuit.java", "BodyUseAPI": ["com.cburch.logisim.circuit.Circuit.Annotate(boolean,com.bfh.logisim.fpgagui.FPGAReport,boolean)"], "Fixed commit": "c108b0d388aee85400e87cbf17f8e473e470d25c", "Url": "https://api.github.com/repos/reds-heig/logisim-evolution", "Date": "2018-10-20T22:29:10Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((parameters.qPts) < 2) || ((parameters.qPts) > (dataPoints.length))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/250/buggy-version/Decide.src.main.java.DD2480.decide.CMVHandler.java", "BodyUseAPI": [], "Fixed commit": "80e5c8c2925799f669ad974424fadcde8496b17d", "Url": "https://api.github.com/repos/fkam/DD2480-decide", "Date": "2018-03-15T20:48:41Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((parameters.quads) > 3) || ((parameters.quads) < 1)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/250/buggy-version/Decide.src.main.java.DD2480.decide.CMVHandler.java", "BodyUseAPI": [], "Fixed commit": "80e5c8c2925799f669ad974424fadcde8496b17d", "Url": "https://api.github.com/repos/fkam/DD2480-decide", "Date": "2018-03-15T20:48:41Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me.melijn.jda.commands.music.SPlayCommand.isConnectedOrConnecting(event, event.getGuild(), event.getMember().getVoiceState().getChannel())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2479/buggy-version/src.main.java.me.melijn.jda.commands.music.SummonCommand.java", "BodyUseAPI": [], "Fixed commit": "75fed61ff8392595d7db7b1bccf82ab5febbe45b", "Url": "https://api.github.com/repos/ToxicMushroom/Melijn", "Date": "2018-10-07T14:55:27Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTablet()) { android.support.v4.app.Fragment masterListFragment = new com.zandernickle.fallproject_pt1.MasterListFragment(); masterListFragment.setArguments(mBundle); com.zandernickle.fallproject_pt1.ReusableUtil.loadFragment(mFragmentManager, R.id.fl_fragment_placeholder_tablet_left, masterListFragment, \"TEST\", false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/350/buggy-version/app.src.main.java.com.zandernickle.fallproject_pt1.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "12350eee489878a726087ba969f167d36ef9f37f", "Url": "https://api.github.com/repos/znickle24/FallProject", "Date": "2018-10-16T22:57:58Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) { context.startForegroundService(eventService); }else { context.startService(eventService); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5662/buggy-version/app.src.main.java.io.github.mattlavallee.budgetbeaver.service.ReminderEventReceiver.java", "BodyUseAPI": [], "Fixed commit": "c78b7be1bf43ca40b697bb190595271c314fc37f", "Url": "https://api.github.com/repos/mattlavallee/budget-beaver", "Date": "2018-07-24T00:56:07Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(org.apache.commons.lang3.ArrayUtils.contains(excludeAttrs, GenericModel.ATTR_ID_VALUE))) { excludeAttrs = ((java.lang.String[]) (org.apache.commons.lang3.ArrayUtils.add(excludeAttrs, new java.lang.String[]{ GenericModel.ATTR_ID_VALUE }))); com.github.cimela.e.restaurant.base.model.ModelUtils.copyProperties(model, this, excludeAttrs); this.id = java.lang.String.valueOf(model.getId()); }else { com.github.cimela.e.restaurant.base.model.ModelUtils.copyProperties(model, this, excludeAttrs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/922/buggy-version/framework.model.src.main.java.com.github.cimela.e.restaurant.base.model.GenericModelVO.java", "BodyUseAPI": [], "Fixed commit": "a16aa79bd2866baf6bfbe8b4dc234097ec4d8095", "Url": "https://api.github.com/repos/cimela/e-restaurant", "Date": "2018-08-31T03:35:46Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m_history.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/864/buggy-version/src.campaignencyclopedia.display.NavigationPath.java", "BodyUseAPI": [], "Fixed commit": "c5ce6a22ef3fabaf451809ee6915757c77897188", "Url": "https://api.github.com/repos/KeithDeRuiter/Campaign-Encyclopedia", "Date": "2018-08-14T02:49:01Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (dp == null) { if (show_details) { details.add(this.getHttpDetails(\"Unexpected null datapoint encountered in set.\", dp)); } net.opentsdb.tsd.PutDataPointRpc.LOG.warn(\"Datapoint null was encountered in set.\"); net.opentsdb.tsd.PutDataPointRpc.illegal_arguments.incrementAndGet(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2379/buggy-version/src.tsd.PutDataPointRpc.java", "BodyUseAPI": ["net.opentsdb.tsd.PutDataPointRpc.getHttpDetails(java.lang.String,net.opentsdb.core.IncomingDataPoint)", "java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.Object>>.add(java.util.HashMap<java.lang.String, java.lang.Object>)"], "Fixed commit": "dab993b721ce70fa38e5e6245e2f6e34a4aedbf5", "Url": "https://api.github.com/repos/GreatSnoopy/opentsdb", "Date": "2018-09-19T08:38:07Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cell instanceof org.openl.rules.table.FormattedCell) { return ((org.openl.rules.table.FormattedCell) (cell)).getFormattedValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4892/buggy-version/STUDIO.org.openl.rules.tableeditor.src.org.openl.rules.table.xls.formatters.XlsDataFormatterFactory.java", "BodyUseAPI": [], "Fixed commit": "db77a1e04d85d4f22ea1c639a87caf2af1435508", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2018-04-09T09:44:39Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rule.debug) { logFileWrapper.debug(\"[PARSE] No item matches defined, skipped parsing item match\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3405/buggy-version/src.main.java.com.codetaylor.mc.dropt.modules.dropt.rule.parser.ParserRuleMatchItems.java", "BodyUseAPI": [], "Fixed commit": "6fe0fa4a5ebca2584a4a22a61f06a2dea0ce282d", "Url": "https://api.github.com/repos/codetaylor/dropt", "Date": "2018-01-10T01:40:32Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debug) { logFile.debug(\"[MATCH] [!!] Unable to find heldItemMainHand match\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3405/buggy-version/src.main.java.com.codetaylor.mc.dropt.modules.dropt.rule.data.RuleMatchHarvester.java", "BodyUseAPI": [], "Fixed commit": "6fe0fa4a5ebca2584a4a22a61f06a2dea0ce282d", "Url": "https://api.github.com/repos/codetaylor/dropt", "Date": "2018-01-10T01:40:32Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debug) { logFile.debug(\"[MATCH] [!!] Harvester is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3405/buggy-version/src.main.java.com.codetaylor.mc.dropt.modules.dropt.rule.data.RuleMatchHarvester.java", "BodyUseAPI": [], "Fixed commit": "6fe0fa4a5ebca2584a4a22a61f06a2dea0ce282d", "Url": "https://api.github.com/repos/codetaylor/dropt", "Date": "2018-01-10T01:40:32Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!trailingSlash) { templateStr = templateStr.substring(0, ((templateStr.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3596/buggy-version/lighter-annotations.src.main.java.fun.connor.lighter.processor.model.Route.java", "BodyUseAPI": [], "Fixed commit": "cbcc81254dc06761b1b01372c14d4ba1c074feae", "Url": "https://api.github.com/repos/Spaceman1701/lighter", "Date": "2018-10-29T19:14:27Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (detectedLanguageObj != null) { languageDetectedCode = detectedLanguageObj.get(\"code\"); languageDetectedName = detectedLanguageObj.get(\"name\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2122/buggy-version/languagetool-http-client.src.main.java.org.languagetool.remote.RemoteLanguageTool.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "31fd5bfb1fc8dc5dc0f0eaaa6f6b386e6db20812", "Url": "https://api.github.com/repos/fabrichter/languagetool", "Date": "2018-08-15T12:39:56Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hankerzheng.tddleet.UnionFind.find(int)", "com.hankerzheng.tddleet.UnionFind.find(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parentA != parentB) { status[parentA] += status[parentB]; status[parentB] = parentA; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3425/buggy-version/src.main.java.com.hankerzheng.tddleet.UnionFind.java", "BodyUseAPI": [], "Fixed commit": "e98f9579ab276d76c8ae01ab5b1fe0a30ee95f7f", "Url": "https://api.github.com/repos/HankerZheng/TDD-LeetCode-Problems", "Date": "2018-01-16T09:28:42Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.mit.broad.genome.utils.SystemUtils.isMac()) { java.awt.Taskbar.getTaskbar().setIconImage(image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3127/buggy-version/src.main.java9.org.broad.gsea.ui.DesktopIntegration.java", "BodyUseAPI": [], "Fixed commit": "db648bb70f09eccefa403670fbbe1ec087418f9c", "Url": "https://api.github.com/repos/GSEA-MSigDB/gsea-desktop", "Date": "2018-08-30T01:41:22Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((onDownPosition.getNumber()) <= 9) && ((onDownPosition.getLetter()) <= 9)) && ((onDownPosition.getLetter()) >= 1)) && ((onDownPosition.getNumber()) >= 1)) { if (((isAmITeamA()) && (isTeamATurn())) || ((!(isAmITeamA())) && (!(isTeamATurn())))) { if (!(firedPositionsTemp.contains(onDownPosition))) firedPositionsTemp.add(onDownPosition); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5175/buggy-version/app.src.main.java.com.example.brunocoelho.navalbattle.Game.NavalBattleGame.java", "BodyUseAPI": ["java.util.ArrayList<com.example.brunocoelho.navalbattle.Game.Models.Position>.contains(com.example.brunocoelho.navalbattle.Game.Models.Position)", "java.util.ArrayList<com.example.brunocoelho.navalbattle.Game.Models.Position>.add(com.example.brunocoelho.navalbattle.Game.Models.Position)"], "Fixed commit": "04289c5f0402d944332760c588fd8c2fcd9e0ce1", "Url": "https://api.github.com/repos/brunocoelho1997/NavalBattleGame", "Date": "2018-08-01T18:58:44Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPresenter()) != null) getPresenter().setUI(this); else dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7673/buggy-version/mvprxdialog.src.main.java.com.kivsw.mvprxdialog.BaseMvpFragment.java", "BodyUseAPI": [], "Fixed commit": "9622e87026fd01e75040d60056a171dc6ac662b0", "Url": "https://api.github.com/repos/IvanKovalchuk/MvpRxDialogSample", "Date": "2018-06-05T13:12:46Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPresenter()) != null) getPresenter().removeUI();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7673/buggy-version/mvprxdialog.src.main.java.com.kivsw.mvprxdialog.BaseMvpFragment.java", "BodyUseAPI": [], "Fixed commit": "9622e87026fd01e75040d60056a171dc6ac662b0", "Url": "https://api.github.com/repos/IvanKovalchuk/MvpRxDialogSample", "Date": "2018-06-05T13:12:46Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.lastRecycledId) != (this.recycleId)) { throw new java.lang.IllegalStateException(\"recycled already\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7575/buggy-version/common.src.main.java.io.netty.util.Recycler.java", "BodyUseAPI": [], "Fixed commit": "bd893315164998a45cc12edb1ef21d91e4fe262d", "Url": "https://api.github.com/repos/zhaojigang/netty", "Date": "2018-08-24T13:05:01Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getBishND(year)) < 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7598/buggy-version/Ex_204_Anlagen.src.Anlage.java", "BodyUseAPI": [], "Fixed commit": "7f53081f810cd2c60656d97627eb2ca4c47b9e83", "Url": "https://api.github.com/repos/neukoc16/Ex_204_Anlag", "Date": "2018-10-09T08:27:16Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getBishND(year)) > (nutzungsdauer)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7598/buggy-version/Ex_204_Anlagen.src.Anlage.java", "BodyUseAPI": [], "Fixed commit": "7f53081f810cd2c60656d97627eb2ca4c47b9e83", "Url": "https://api.github.com/repos/neukoc16/Ex_204_Anlag", "Date": "2018-10-09T08:27:16Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentMessage.getText().toString().isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7122/buggy-version/app.src.main.java.com.example.erez0_000.ex1.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "43511f832e31a3a31e81e992d3e9dd64548011c0", "Url": "https://api.github.com/repos/erezKaufman/HUJI.COURSE.POSTPC_EX1", "Date": "2018-04-20T13:26:00Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["target.getPageParameters().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((mailServerSize != null) && ((mailServerSize.toString()) != null)) { params.add(com.evolveum.midpoint.web.page.admin.configuration.PageSystemConfiguration.SERVER_LIST_SIZE, mailServerSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8984/buggy-version/gui.admin-gui.src.main.java.com.evolveum.midpoint.web.page.admin.configuration.PageSystemConfiguration.java", "BodyUseAPI": ["org.apache.wicket.request.mapper.parameter.PageParameters.add(java.lang.String,org.apache.wicket.util.string.StringValue)"], "Fixed commit": "07f39659bd3fe6245d49720773e324fe77c8fead", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2018-02-28T12:50:11Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tags == null) { return mappedTags; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4863/buggy-version/src.main.java.com.deepoove.swagger.diff.compare.SpecificationDiff.java", "BodyUseAPI": [], "Fixed commit": "a7521eea49e225091d2c85f2839781698a84c313", "Url": "https://api.github.com/repos/emm035/swagger-diff", "Date": "2018-09-11T14:35:03Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (initialDbVersion.startsWith(org.craftercms.studio.impl.v2.dal.DataSourceInitializerImpl.DB_VERSION_3_0_X)) { attribute.setValue(org.apache.commons.lang3.StringUtils.lowerCase(((siteId + \"_\") + name))); }else { attribute.setValue(org.apache.commons.lang3.StringUtils.lowerCase(name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8464/buggy-version/src.main.java.org.craftercms.studio.impl.v2.dal.DataSourceInitializerImpl.java", "BodyUseAPI": [], "Fixed commit": "a77e8b0a790f158738e1cf7514668c0d8af74919", "Url": "https://api.github.com/repos/craftercms/studio", "Date": "2018-09-07T18:25:18Z"},
{"Line": "=>655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dialog_salesOrder.SalesOrder_ReturnForm.tbl_ReturnList.getRowCount()) == 0) dialog_salesOrder.SalesOrder_ReturnForm.txt_ReturnSONo.setText(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2219/buggy-version/src.dialog_salesOrder.SalesOrder_ReturnForm.java", "BodyUseAPI": [], "Fixed commit": "863b1777900c288925f2d5a8704e579e5240b77d", "Url": "https://api.github.com/repos/rochiey/ICMCommercial", "Date": "2018-05-20T06:02:12Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (userId != null) android.util.Log.i(\"ADYO_USER_ID\", userId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4891/buggy-version/adyoandroidsdk.src.main.java.za.co.adyo.android.requests.PlacementRequestParams.java", "BodyUseAPI": [], "Fixed commit": "b64977a284315ffa61433535c143b66b9c9a7fe8", "Url": "https://api.github.com/repos/AdyoOrg/adyo-android", "Date": "2018-08-13T13:51:58Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((req.getSortBy()) == null) { if (!(org.apache.commons.lang3.StringUtils.isBlank(req.getQ()))) { req.setSortBy(DatasetSearchRequest.SortBy.RELEVANCE); }else { req.setSortBy(DatasetSearchRequest.SortBy.KEY); } }else if (((req.getSortBy()) == (DatasetSearchRequest.SortBy.RELEVANCE)) && (org.apache.commons.lang3.StringUtils.isBlank(req.getQ()))) { req.setQ(null); req.setSortBy(DatasetSearchRequest.SortBy.KEY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5160/buggy-version/colplus-dao.src.main.java.org.col.db.dao.DatasetDao.java", "BodyUseAPI": ["org.col.api.search.DatasetSearchRequest.setQ(<nulltype>)", "org.col.api.search.DatasetSearchRequest.getQ()", "org.col.api.search.DatasetSearchRequest.getQ()", "org.col.api.search.DatasetSearchRequest.setSortBy(DatasetSearchRequest.SortBy.RELEVANCE)", "org.col.api.search.DatasetSearchRequest.setSortBy(DatasetSearchRequest.SortBy.KEY)", "org.apache.commons.lang3.StringUtils.isBlank(req.getQ())", "org.col.api.search.DatasetSearchRequest.setSortBy(DatasetSearchRequest.SortBy.KEY)", "org.apache.commons.lang3.StringUtils.isBlank(req.getQ())", "org.col.api.search.DatasetSearchRequest.getSortBy()"], "Fixed commit": "e4a7f3e042486ccaed874c7db7f5c7898ee6d4d1", "Url": "https://api.github.com/repos/Sp2000/colplus-backend", "Date": "2018-09-19T15:13:47Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.stepik.topstepikcourses.StepikCourseStatistic.getCourseListFromStepik()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (numberOfTopCourses > (courseList.size())) { numberOfTopCourses = courseList.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7592/buggy-version/src.main.java.org.stepik.topstepikcourses.StepikCourseStatistic.java", "BodyUseAPI": ["java.util.List<org.stepik.topstepikcourses.dto.Course>.size()"], "Fixed commit": "dd5dce66261a1a40166c345da2cc85b146164507", "Url": "https://api.github.com/repos/MouseSan/TopStepikCourses", "Date": "2018-05-06T21:07:01Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((let.isEmpty()) || (let.equals(\" \")))) wordsSet.add(let.trim());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5957/buggy-version/src.main.java.com.epam.homework.Task4.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "ed094139498a51e991e35426396174a096b9278c", "Url": "https://api.github.com/repos/TarasKobzar/epam-core-04-2018", "Date": "2018-04-21T08:20:30Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.code()) == 200) { fr.stevenfrancony.invaders.managers.ManagerSharedPreferences.setCurrentUsername(getApplicationContext(), headerResponse.getUsername()); mUsername.setText((((getString(R.string.menuUsername)) + \" \") + (headerResponse.getUsername()))); mPoints.setText((((getString(R.string.menuPoints)) + \" \") + (java.lang.Long.toString(headerResponse.getPoints())))); mMineralsInfos.setTitle((((getString(R.string.menuMinerals)) + \" \") + (java.lang.Integer.toString(headerResponse.getMinerals())))); mGasInfos.setTitle((((getString(R.string.menuGas)) + \" \") + (java.lang.Integer.toString(headerResponse.getGas())))); }else { getHeaderInfos(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4983/buggy-version/app.src.main.java.fr.stevenfrancony.invaders.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "73c07f1a74710e2ffa0aca6fed76d4c1c4722546", "Url": "https://api.github.com/repos/WestFR/Invaders-Android", "Date": "2018-05-15T09:49:27Z"},
{"Line": "=>946", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (childFacet.isLocalFacet()) { navigateContextualFacet(childFacet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9741/buggy-version/schema-compiler.src.main.java.org.opentravel.schemacompiler.visitor.ModelNavigator.java", "BodyUseAPI": ["org.opentravel.schemacompiler.visitor.ModelNavigator.navigateContextualFacet(org.opentravel.schemacompiler.model.TLContextualFacet)"], "Fixed commit": "cb5d169d7acfdbf94f9246a7f2c7649694ef458a", "Url": "https://api.github.com/repos/OpenTravel/OTM-DE-Compiler", "Date": "2018-07-19T12:12:01Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.identity.user.store.configuration.UserStoreConfigAdminService.getUniqueIDFromUserDTO(org.wso2.carbon.identity.user.store.configuration.dto.PropertyDTO[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (uniqueID == null) { throw new org.wso2.carbon.identity.user.store.configuration.utils.IdentityUserStoreMgtException(\"UniqueID property is not provided.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/234/buggy-version/components.user-store.org.wso2.carbon.identity.user.store.configuration.src.main.java.org.wso2.carbon.identity.user.store.configuration.UserStoreConfigAdminService.java", "BodyUseAPI": [], "Fixed commit": "42dc6c57931b59fbe170554eb89e837ca0f8bfcd", "Url": "https://api.github.com/repos/wso2/carbon-identity-framework", "Date": "2018-03-01T08:57:48Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tupleMap.get(\"phoClE/D\")) == null) eCut = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/370/buggy-version/analysis.src.main.java.org.hps.analysis.tuple.WABTupleDriver.java", "BodyUseAPI": [], "Fixed commit": "b1b2ac842988b0d2266714325059daa081f4cf9e", "Url": "https://api.github.com/repos/JeffersonLab/hps-java", "Date": "2018-02-01T09:35:18Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tupleMap.get(\"eleP/D\")) == null) eCut = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/370/buggy-version/analysis.src.main.java.org.hps.analysis.tuple.WABTupleDriver.java", "BodyUseAPI": [], "Fixed commit": "b1b2ac842988b0d2266714325059daa081f4cf9e", "Url": "https://api.github.com/repos/JeffersonLab/hps-java", "Date": "2018-02-01T09:35:18Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eCut == true) eCut = (((tupleMap.get(\"eleP/D\")) + (tupleMap.get(\"phoClE/D\"))) > ((tupleMinECut) * (ebeam))) && (((tupleMap.get(\"eleP/D\")) + (tupleMap.get(\"phoClE/D\"))) < ((tupleMaxECut) * (ebeam)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/370/buggy-version/analysis.src.main.java.org.hps.analysis.tuple.WABTupleDriver.java", "BodyUseAPI": [], "Fixed commit": "b1b2ac842988b0d2266714325059daa081f4cf9e", "Url": "https://api.github.com/repos/JeffersonLab/hps-java", "Date": "2018-02-01T09:35:18Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRequest) instanceof org.apache.httpcore.HttpEntityEnclosingRequest) { org.apache.httpcore.HttpEntityEnclosingRequest request = ((org.apache.httpcore.HttpEntityEnclosingRequest) (mRequest)); org.apache.httpcore.HttpEntity entity = request.getEntity(); if (entity == null) return null; return new com.yanzhenjie.andserver.http.StandardRequest.EntityToBody(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4484/buggy-version/api.src.main.java.com.yanzhenjie.andserver.http.StandardRequest.java", "BodyUseAPI": [], "Fixed commit": "4bad646a11c1dd446e1597f62e340c259a346659", "Url": "https://api.github.com/repos/yanzhenjie/AndServer", "Date": "2018-10-23T09:11:26Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MaxMB > 1) MaxMB = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5045/buggy-version/src.main.java.com.github.junrar.unpack.ppm.ModelPPM.java", "BodyUseAPI": [], "Fixed commit": "3ba451c5774f846228c98a6e231234ac1c0f048e", "Url": "https://api.github.com/repos/sethchhim/junrar", "Date": "2018-07-15T02:32:07Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPresenter) != null) mPresenter.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6211/buggy-version/app.src.main.java.thhsu.chloe.jeeva.JobDetails.JobDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "e34401b516123459dbb9f3b457d0978a91dd62dd", "Url": "https://api.github.com/repos/chloe722/Jeeva", "Date": "2018-05-08T15:25:41Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPresenter) != null) mPresenter.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6211/buggy-version/app.src.main.java.thhsu.chloe.jeeva.JobDetails.JobDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "e34401b516123459dbb9f3b457d0978a91dd62dd", "Url": "https://api.github.com/repos/chloe722/Jeeva", "Date": "2018-05-08T15:25:41Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.anuke.mindustry.entities.TileEntity.tile(((tile.x) + (point.x)),((tile.y) + (point.y)))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (other == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/169/buggy-version/core.src.io.anuke.mindustry.entities.TileEntity.java", "BodyUseAPI": [], "Fixed commit": "c9a53aed7bf193b2502aa96adc318e71ceb0d709", "Url": "https://api.github.com/repos/Bombbird2001/Mindustry", "Date": "2018-09-19T21:36:58Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scope.isDefined(ctx.ID().getText())) { t1 = scope.getType(ctx.ID().getText()); }else { t1 = globalScope.getType(ctx.ID().getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4843/buggy-version/src.checker.Checker.java", "BodyUseAPI": ["ctx.ID().getText()", "checker.Scope.getType(ctx.ID().getText())", "checker.Scope.getType(ctx.ID().getText())", "checker.VarAssignContext.ID()", "ctx.ID().getText()", "checker.VarAssignContext.ID()"], "Fixed commit": "1e2b56b54642fbb4bb8586a8be5cd5d68725c3c7", "Url": "https://api.github.com/repos/fabian43267/FinalProject", "Date": "2018-07-05T15:28:50Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.scu.my_shop.dao.ImageMapper.selectByPrimaryKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (image == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6808/buggy-version/src.main.java.edu.scu.my_shop.service.FileService.java", "BodyUseAPI": [], "Fixed commit": "676b5b3d5d383b544b85d388435e6b979560de6e", "Url": "https://api.github.com/repos/lazyZhou1997/MyShop", "Date": "2018-03-19T13:23:14Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((++tries) == 100) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9116/buggy-version/core.src.com.tann.dice.gameplay.fightLog.Spellbook.java", "BodyUseAPI": [], "Fixed commit": "71a840c88bc47dce13bd4aff710c945b86d638d4", "Url": "https://api.github.com/repos/ColourTann/Dicegeon", "Date": "2018-09-15T22:17:53Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(org.apache.commons.io.FilenameUtils.getExtension(file.getName()).equals(\".csv\"))) { file.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6624/buggy-version/ElectiSim.src.main.java.org.upmc.electisim.output.StateFileWriter.java", "BodyUseAPI": [], "Fixed commit": "740cf02655b59dd66944911ef75dd35e01f54da1", "Url": "https://api.github.com/repos/Redchards/VIC", "Date": "2018-04-20T22:30:22Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.PersonAttribute.getAttributeType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((attributeType.getPersonAttributeTypeId()) == 29) { model.addAttribute(\"dohId\", pa.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2154/buggy-version/omod.src.main.java.org.openmrs.module.billing.web.controller.main.BillableServiceBillListForOrderController.java", "BodyUseAPI": [], "Fixed commit": "fa1b87891574ff2cc32f6320f2ef4045f29d1e58", "Url": "https://api.github.com/repos/hispindia/his-billing", "Date": "2018-01-08T11:49:07Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.PersonAttribute.getAttributeType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((attributeType.getPersonAttributeTypeId()) == 29) { model.addAttribute(\"dohId\", pa.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2154/buggy-version/omod.src.main.java.org.openmrs.module.billing.web.controller.main.BillableServiceBillListController.java", "BodyUseAPI": [], "Fixed commit": "fa1b87891574ff2cc32f6320f2ef4045f29d1e58", "Url": "https://api.github.com/repos/hispindia/his-billing", "Date": "2018-01-08T11:49:07Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SettingsManager.data.getString(((player.getName()) + \".advice of valks\")).replace(\"[\", \"\").replace(\"]\", \"\").split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((temp.length) > 1) { for (int i = 0; i < (temp.length); i++) { try { adviceOfValks.add(java.lang.Integer.parseInt(temp[i])); } catch (java.lang.Exception e) { org.bukkit.Bukkit.getLogger().severe((((\"Error in loading \" + (player.getName())) + \"'s\") + \" failstack.\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5370/buggy-version/src.main.java.org.pixeltime.enchantmentsenhance.event.blacksmith.SecretBook.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.util.List<java.lang.Integer>.add(int)"], "Fixed commit": "ab142604f5f3e062c91eddb3fbbd373997f3812d", "Url": "https://api.github.com/repos/25/EnchantmentsEnhance", "Date": "2018-05-26T01:23:29Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(movementService.checkEmployeeExists(movementRequest))) transferEmployee(movementRequest);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4284/buggy-version/hr.hr-employee-movement.src.main.java.org.egov.eis.repository.MovementRepository.java", "BodyUseAPI": ["org.egov.eis.repository.MovementRepository.transferEmployee(org.egov.eis.repository.MovementRequest)"], "Fixed commit": "19b40bbb5e7e9827dadded7a140a9ea807760994", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2018-09-12T08:57:23Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResources().getString(R.string.hockey_key)) == 32) { net.hockeyapp.android.CrashManager.register(this, getResources().getString(R.string.hockey_key), new com.pushapp.press.HomeActivity.MyCrashManagerListener()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1179/buggy-version/app.src.main.java.com.pushapp.press.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "0d772435ecb3555896ae519453a5722f39f1dacb", "Url": "https://api.github.com/repos/PushOCCRP/Push-Android", "Date": "2018-05-21T05:56:30Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getParameter(\"rotation\")) == null) { rotation = false; }else if (request.getParameter(\"rotation\").contains(\"on\")) { rotation = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2247/buggy-version/src.main.java.servlet.BuildServlet.java", "BodyUseAPI": ["request.getParameter(\"rotation\").contains(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "c08bd95a6c26bc4e7cd79ef09d8defc9e2b5e3ce", "Url": "https://api.github.com/repos/MosaicsCollageGenerator/Sprint1Mosaicss", "Date": "2018-04-16T02:56:02Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getParameter(\"border\")) == null) { border = false; }else if (request.getParameter(\"border\").contains(\"on\")) { border = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2247/buggy-version/src.main.java.servlet.BuildServlet.java", "BodyUseAPI": ["request.getParameter(\"border\").contains(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "c08bd95a6c26bc4e7cd79ef09d8defc9e2b5e3ce", "Url": "https://api.github.com/repos/MosaicsCollageGenerator/Sprint1Mosaicss", "Date": "2018-04-16T02:56:02Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<UnVerifyUserListResponse.Data>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(item.getProfilePic())) { aQuery.id(holder.binding.profilePic).image(R.mipmap.ic_launcher_round); }else { aQuery.id(holder.binding.profilePic).image(item.getProfilePic(), true, true, 60, R.mipmap.ic_launcher_round); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/214/buggy-version/app.src.main.java.com.stufeed.android.view.adapter.VerificationListAdapter.java", "BodyUseAPI": ["UnVerifyUserListResponse.Data.getProfilePic()", "aQuery.id(holder.binding.profilePic).image(item.getProfilePic(),boolean,boolean,int,R.mipmap.ic_launcher_round)"], "Fixed commit": "8809ca6b6940c379eee378c5ca9f80510295ac24", "Url": "https://api.github.com/repos/deepak-gehlot/Stufeed_App", "Date": "2018-07-25T07:57:49Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((headerBytes.length) - headerByteLength) > 0) { requestBody = com.hibegin.common.util.BytesUtil.subBytes(headerBytes, headerByteLength, ((headerBytes.length) - headerByteLength)); }else { requestBody = new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6184/buggy-version/src.main.java.com.hibegin.http.server.impl.HttpRequestDecoderImpl.java", "BodyUseAPI": ["com.hibegin.common.util.BytesUtil.subBytes(byte[],int,int)"], "Fixed commit": "8f05f9595e93b48ac113187732215168adf6ea0d", "Url": "https://api.github.com/repos/94fzb/simplewebserver", "Date": "2018-05-20T04:43:40Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (unoSurface.checkIsASelection()) { this.game.sendAction(new edu.up.cs301.Uno.actionMsg.PlaceCardAction(this, unoSurface.getCardIndex())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6265/buggy-version/app.src.main.java.edu.up.cs301.Uno.UnoHumanPlayer.java", "BodyUseAPI": ["edu.up.cs301.Uno.UnoGameView.getCardIndex()", "this.game.sendAction(edu.up.cs301.Uno.actionMsg.PlaceCardAction)"], "Fixed commit": "10b8462e4e700d43ad351674e22b40e69ae00039", "Url": "https://api.github.com/repos/mfredenberg/UnoGame1", "Date": "2018-04-13T00:36:05Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((build.getBranch()) != null) { Loggers.SERVER.info((\"buildFinished: branch name=\" + (build.getBranch().getName()))); Loggers.SERVER.info((\"buildFinished: branch displayName=\" + (build.getBranch().getDisplayName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3927/buggy-version/autopin-server.src.main.java.com.github.ocroquette.teamcity.autopin.AutopinBuildServerListener.java", "BodyUseAPI": ["build.getBranch().getDisplayName()", "Loggers.SERVER.info((\"buildFinished: branch name=\" + (build.getBranch().getName())))", "com.github.ocroquette.teamcity.autopin.SRunningBuild.getBranch()", "Loggers.SERVER.info((\"buildFinished: branch displayName=\" + (build.getBranch().getDisplayName())))", "com.github.ocroquette.teamcity.autopin.SRunningBuild.getBranch()", "build.getBranch().getName()"], "Fixed commit": "2fb276fd068830f2e4ccb626165359b42f8c62b9", "Url": "https://api.github.com/repos/ocroquette/teamcity-autopin", "Date": "2018-02-18T23:26:19Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["put.getURI().getPort()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (port > 0) { org.apache.commons.httpclient.protocol.Protocol.registerProtocol(\"https\", new org.apache.commons.httpclient.protocol.Protocol(\"https\", new org.jivesoftware.sparkimpl.updater.EasySSLProtocolSocketFactory(), put.getURI().getPort())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7822/buggy-version/plugins.fileupload.src.main.java.org.jivesoftware.spark.plugin.fileupload.ChatRoomDecorator.java", "BodyUseAPI": [], "Fixed commit": "70f6c74d6d34573094e8743ed1ab27c236016178", "Url": "https://api.github.com/repos/dnsdhrj/Spark", "Date": "2018-02-27T06:07:32Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date.equals(\"\")) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7944/buggy-version/src.main.java.com.plht.eshandle55.service.EsService.java", "BodyUseAPI": [], "Fixed commit": "ca8a81bc787657e6cb4566c52987da63db1e6ee6", "Url": "https://api.github.com/repos/shenchenyang/eshandle55", "Date": "2018-07-07T18:39:19Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) { try { return android.support.v4.content.FileProvider.getUriForFile(context, ((com.mauriciotogneri.fileexplorer.BuildConfig.APPLICATION_ID) + \".provider\"), file); } catch (java.lang.Exception e) { return android.net.Uri.fromFile(file); } }else { return android.net.Uri.fromFile(file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7749/buggy-version/app.src.main.java.com.mauriciotogneri.fileexplorer.models.FileInfo.java", "BodyUseAPI": [], "Fixed commit": "f06cf262aaf40bdd82fc3a51c19b272c3eaa57f1", "Url": "https://api.github.com/repos/mauriciotogneri/fileexplorer", "Date": "2018-05-11T18:40:16Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["scanner.CMinusScanner.getNextToken()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((num.getTokenType()) != (Token.TokenType.NUMBER)) { throw new parser.ParseException(\"Number\", linenum, num); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/548/buggy-version/parser.CMinusParser.java", "BodyUseAPI": [], "Fixed commit": "0d32cbb16760bce1b2d1bd2a512dd3312f30a36c", "Url": "https://api.github.com/repos/CalebLBaker/CMinusCompiler", "Date": "2018-03-23T03:43:15Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isCaseSensitive())) value = value.toLowerCase(java.util.Locale.ROOT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3282/buggy-version/airline-core.src.main.java.com.github.rvesse.airline.types.numerics.abbreviated.AbbreviatedNumericTypeConverter.java", "BodyUseAPI": [], "Fixed commit": "c7c6664dac930aa41b2f9652d368333d14f67677", "Url": "https://api.github.com/repos/rvesse/airline", "Date": "2018-08-31T13:20:25Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!hasAchievement) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3046/buggy-version/src.model.Answer.java", "BodyUseAPI": [], "Fixed commit": "5421be9f90515c36161e5b0e91a3afa206162ba7", "Url": "https://api.github.com/repos/aniltrue/ScenarioEditor", "Date": "2018-01-01T15:58:30Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (answer != null) { java.lang.Object[] newRow; javax.swing.table.DefaultTableModel model = ((javax.swing.table.DefaultTableModel) (answers.getModel())); if (!(answer.hasAchievement())) newRow = new java.lang.Object[]{ counter, answer.getText(), \"\" + (answer.getNextQuestionID()), \"\", \"0\" }; else newRow = new java.lang.Object[]{ counter, answer.getText(), \"\" + (answer.getNextQuestionID()), answer.getAchievement().getText(), \"\" + (answer.getAchievement().getPoint()) }; model.insertRow(counter, newRow); (counter)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3046/buggy-version/src.gui.QuestionPanel.java", "BodyUseAPI": ["model.Answer.getNextQuestionID()", "model.Answer.getText()", "model.Answer.hasAchievement()", "model.Answer.getAchievement()", "model.Answer.getAchievement()", "model.Answer.getNextQuestionID()", "model.Answer.getText()", "answer.getAchievement().getText()", "answer.getAchievement().getPoint()"], "Fixed commit": "5421be9f90515c36161e5b0e91a3afa206162ba7", "Url": "https://api.github.com/repos/aniltrue/ScenarioEditor", "Date": "2018-01-01T15:58:30Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.code()) == 404) { throw new fr.inria.jtravis.Http404Exception(response.message()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8388/buggy-version/src.main.java.fr.inria.jtravis.helpers.AbstractHelper.java", "BodyUseAPI": ["okhttp3.Response.message()"], "Fixed commit": "ce882589a5b52f552ed291157d049b8cee1f25bc", "Url": "https://api.github.com/repos/fermadeiral/jtravis", "Date": "2018-04-18T08:49:56Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((webSiteRepository.getWebsite(webSiteLink)) != null) { webSiteRepository.getWebsite(webSiteLink).update(); }else { throw new java.sql.SQLException(\"this site isnt in dataBase\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3663/buggy-version/src.main.java.cli.RssService.java", "BodyUseAPI": ["webSiteRepository.getWebsite(webSiteLink).update()", "webSiteRepository.WebSiteRepository.getWebsite(java.lang.String)"], "Fixed commit": "2c421f144d9f9912aa657f28a894c4cfc7690b46", "Url": "https://api.github.com/repos/jimbo-nimbo/Project1RSSFeed", "Date": "2018-07-21T05:08:12Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bnt.getText().length()) == 1) { returnDateStr = (dateStr + \"0\") + (bnt.getText()); }else { returnDateStr = dateStr + (bnt.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3050/buggy-version/src.main.java.LogApp.Extends.CalendarPanel.java", "BodyUseAPI": ["javax.swing.JLabel.getText()", "javax.swing.JLabel.getText()"], "Fixed commit": "50af8e33e674301abf38bbc19c95b6d766687cd6", "Url": "https://api.github.com/repos/xuxueyang/LogApp", "Date": "2018-04-04T00:56:19Z"},
{"Line": "=>688", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((turnLaneLayout.getVisibility()) == (GONE)) { turnLaneAdapter.addTurnLanes(turnLanes, maneuverViewModifier); showTurnLanes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4169/buggy-version/libandroid-navigation-ui.src.main.java.com.mapbox.services.android.navigation.ui.v5.instruction.InstructionView.java", "BodyUseAPI": [], "Fixed commit": "51561f6e75d336561adecbc0652178f58f6fe180", "Url": "https://api.github.com/repos/mapbox/mapbox-navigation-android", "Date": "2018-03-02T19:53:09Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_OK)) { java.lang.String TaskName = data.getStringExtra(\"Task Name\"); java.lang.String Description = data.getStringExtra(\"Description\"); android.widget.TextView DescriptionView = ((android.widget.TextView) (findViewById(R.id.Description))); android.widget.TextView TaskNameView = ((android.widget.TextView) (findViewById(R.id.TaskName))); TaskNameView.setText(TaskName); if ((Description.length()) > 0) { DescriptionView.setText(Description); }else { DescriptionView.setText(\"No Description\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2199/buggy-version/app.src.main.java.com.cmput301w18t05.taskzilla.ViewTaskActivity.java", "BodyUseAPI": [], "Fixed commit": "5c041be0d1e4ae6bfa331070b5f8f64839666a25", "Url": "https://api.github.com/repos/CMPUT301W18T05/Taskzilla", "Date": "2018-03-16T06:41:00Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gregtech.api.util.GT_Recipe.GT_Recipe_Map.findRecipe(getBaseMetaTileEntity(),gregtech.common.tileentities.machines.steam.GT_MetaTileEntity_Macerator_Steel,boolean,V[1],<nulltype>,<nulltype>,getAllInputs())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(tRecipe.isRecipeInputEqual(true, new net.minecraftforge.fluids.FluidStack[]{ getFillableStack() }, getAllInputs()))) return FOUND_RECIPE_BUT_DID_NOT_MEET_REQUIREMENTS;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8208/buggy-version/src.main.java.gregtech.common.tileentities.machines.steam.GT_MetaTileEntity_Macerator_Steel.java", "BodyUseAPI": [], "Fixed commit": "e617fcd4c30c88f68c8f202f6b638ac7e156aa99", "Url": "https://api.github.com/repos/IdealIndustrial/GT5Unofficial", "Date": "2018-06-13T10:32:04Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gregtech.api.util.GT_Recipe.GT_Recipe_Map.findRecipe(getBaseMetaTileEntity(),gregtech.common.tileentities.machines.steam.GT_MetaTileEntity_Macerator_Bronze,boolean,V[1],<nulltype>,<nulltype>,getAllInputs())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(tRecipe.isRecipeInputEqual(true, new net.minecraftforge.fluids.FluidStack[]{ getFillableStack() }, getAllInputs()))) return FOUND_RECIPE_BUT_DID_NOT_MEET_REQUIREMENTS;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8208/buggy-version/src.main.java.gregtech.common.tileentities.machines.steam.GT_MetaTileEntity_Macerator_Bronze.java", "BodyUseAPI": [], "Fixed commit": "e617fcd4c30c88f68c8f202f6b638ac7e156aa99", "Url": "https://api.github.com/repos/IdealIndustrial/GT5Unofficial", "Date": "2018-06-13T10:32:04Z"},
{"Line": "=>3819", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (remoteVersionCurrentToken > localVersionCurrentToken) return true; else if (remoteVersionCurrentToken < localVersionCurrentToken) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6449/buggy-version/src.course_generator.frmMain.java", "BodyUseAPI": [], "Fixed commit": "3b2b20dc58074148f6e0e678d0bd861550dbe1f1", "Url": "https://api.github.com/repos/FJBDev/Course_Generator", "Date": "2018-07-23T17:43:17Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((usernameUpdate.getText().equals(this.username)) == false) { clearRead(); username = usernameUpdate.getText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9005/buggy-version/src.Work1.Controller.java", "BodyUseAPI": ["Work1.TextField.getText()"], "Fixed commit": "7b0ff031ddb7e5f9c67c29ea660cd2ad9ecc64e6", "Url": "https://api.github.com/repos/NAre5/guiTEST", "Date": "2018-10-21T14:18:46Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rating < 1) || (rating > 5)) { android.support.design.widget.Snackbar.make(view, \"Rating must be between 1 and 5\", Snackbar.LENGTH_LONG).setAction(\"Action\", null).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5758/buggy-version/app.src.main.java.team7202.myfoodjournal.DefaultActivity.java", "BodyUseAPI": [], "Fixed commit": "716d35fe38a2ab2fcaeaf476250692d7ed973e44", "Url": "https://api.github.com/repos/asherbig/MyFoodJournal", "Date": "2018-03-28T18:47:59Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(authorizeService.isAdmin(context))) { throw new org.dspace.app.rest.exception.RESTAuthorizationException(\"The EPerson collection endpoint is reserved to system administrators\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7638/buggy-version/dspace-spring-rest.src.main.java.org.dspace.app.rest.repository.EPersonRestRepository.java", "BodyUseAPI": [], "Fixed commit": "f807cc38a31416ae2338f0aad5ea3b50f9688a0d", "Url": "https://api.github.com/repos/ppmdo/DSpace", "Date": "2018-05-31T05:59:21Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.constructor) == null) { try { this.constructor = this.managedClass.getConstructor(((java.lang.Class<?>[]) (null))); } catch (java.lang.NoSuchMethodException e) { throw new java.lang.IllegalStateException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4804/buggy-version/dev.com.ibm.ws.managedobject.src.com.ibm.ws.managedobject.internal.ManagedObjectFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "e8e31b9923a12715fcdc8e2ef13344b0ee9e657a", "Url": "https://api.github.com/repos/ebreijo/open-liberty", "Date": "2018-06-05T12:36:21Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player1.getName().compareTo(player2.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nameCompare != 0) { return nameCompare; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8008/buggy-version/src.zur.koeln.kickertool.tournament.PlayerTournamentStatisticsImpl.java", "BodyUseAPI": [], "Fixed commit": "ea9b2b59d931a5c626113dc11e8b358d5d3a3c71", "Url": "https://api.github.com/repos/Joschbosch/kickertool", "Date": "2018-09-20T08:58:28Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lyndeson.inventory.domain.sales.SalesInvoice.getCylinderIncomingReceipt()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (java.util.Objects.nonNull(existingCylinderIncomingReceipt)) { throw new lyndeson.inventory.exceptions.GeneralException(((((\"Sales Invoice \" + (salesInvoice.getUuid())) + \" is already been resolved (CIR \") + (existingCylinderIncomingReceipt.getUuid())) + \").\"), org.springframework.http.HttpStatus.PRECONDITION_FAILED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/106/buggy-version/src.main.java.lyndeson.inventory.service.sales.impl.CylinderIncomingReceiptServiceImpl.java", "BodyUseAPI": ["lyndeson.inventory.domain.sales.CylinderIncomingReceipt.getUuid()"], "Fixed commit": "e040c3fdadf0b7ce2fa449b5400cd512eabc1551", "Url": "https://api.github.com/repos/migsarmiento/LyndesonInventory", "Date": "2018-03-07T07:13:18Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8678/buggy-version/dkpro-tc-core.src.main.java.org.dkpro.tc.core.util.TcFlexTable.java", "BodyUseAPI": [], "Fixed commit": "51281d5ab376cdbf18731711152ad29a57b814c1", "Url": "https://api.github.com/repos/dkpro/dkpro-tc", "Date": "2018-02-07T19:54:19Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLoadingCacheAds) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8614/buggy-version/resana.src.main.java.io.resana.NativeAdProvider.java", "BodyUseAPI": [], "Fixed commit": "4b8f0e34e3c843ba35d87399733d19aebd6a8bc2", "Url": "https://api.github.com/repos/oddrun/resana-android-sdk", "Date": "2018-09-30T09:51:13Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.kepler.queue.impl.QueueExecutorImpl.ACTIVED) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5003/buggy-version/src.main.java.com.kepler.queue.impl.QueueExecutorImpl.java", "BodyUseAPI": [], "Fixed commit": "e73bedd122b41486a5b2f7d38baa6cd75fe16e7f", "Url": "https://api.github.com/repos/Kepler-Framework/Kepler-All", "Date": "2018-04-20T14:27:21Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((aston.team15.jumazy.controller.GameSound.getMusicPlaying()) == false) { aston.team15.jumazy.controller.GameSound.playMenuMusic(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/987/buggy-version/core.src.aston.team15.jumazy.view.MainMenuScreen.java", "BodyUseAPI": [], "Fixed commit": "9738b6130f884b1eecdf6e39677385d944b94777", "Url": "https://api.github.com/repos/Kirimson/Jumazy", "Date": "2018-03-12T14:26:34Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((bird.imageView.getY()) < (-50)) || ((bird.imageView.getY()) > 720)) { Config.GameFlag = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6613/buggy-version/src.flappybirds.GamePlay.java", "BodyUseAPI": [], "Fixed commit": "904741ecfe7f4add69cc4b2432aa1b1b4e17e915", "Url": "https://api.github.com/repos/mushi1002/Flappybirds-game-using-javafx", "Date": "2018-10-14T13:59:49Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (reservation != null) { workout.setReservationId(reservation.getId()); workout.setCheckedIn(reservation.isCheckedIn()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7815/buggy-version/app.src.main.java.com.ninetwozero.iksu.utils.WorkoutServiceHelper.java", "BodyUseAPI": ["com.ninetwozero.iksu.models.Workout.setReservationId(reservation.getId())", "com.ninetwozero.iksu.models.WorkoutReservation.getId()", "com.ninetwozero.iksu.models.Workout.setCheckedIn(reservation.isCheckedIn())", "com.ninetwozero.iksu.models.WorkoutReservation.isCheckedIn()"], "Fixed commit": "b8543a66b052620a4ce87ffb12f9957483d1da6e", "Url": "https://api.github.com/repos/ninetwozero/iksu-android", "Date": "2018-01-31T15:37:31Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x > (this.x)) { x = this.x; }else if (x < 1) { x = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/880/buggy-version/src.uk.ac.reading.cs2ja16.viskantasjuodenas.robotManager.RobotArena.java", "BodyUseAPI": [], "Fixed commit": "1d726f1c5ac42bc60422e225754667bbab1f9fe7", "Url": "https://api.github.com/repos/Whiskey022/RobotSim", "Date": "2018-01-13T11:08:20Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y > (this.y)) { y = this.y; }else if (y < 1) { y = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/880/buggy-version/src.uk.ac.reading.cs2ja16.viskantasjuodenas.robotManager.RobotArena.java", "BodyUseAPI": [], "Fixed commit": "1d726f1c5ac42bc60422e225754667bbab1f9fe7", "Url": "https://api.github.com/repos/Whiskey022/RobotSim", "Date": "2018-01-13T11:08:20Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sensorDataList.isEmpty()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3471/buggy-version/app.src.main.java.com.marekulip.droidsor.DroidsorService.java", "BodyUseAPI": [], "Fixed commit": "79b6f420bfa372bed09f896f3dbbed9ffd42bd6f", "Url": "https://api.github.com/repos/MarekUlip/Droidsor", "Date": "2018-04-12T23:13:24Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kz.desh.snowballs.server.entity.PlayerEntity.getActionEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((kz.desh.snowballs.server.entity.action.ActionType.FREE) == (actionEntity.getType())) { return createResponse(kz.desh.snowballs.server.commands.skill.FAIL_STATUS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/506/buggy-version/src.main.java.kz.desh.snowballs.server.commands.skill.CancelStudySkillCommand.java", "BodyUseAPI": [], "Fixed commit": "f6d16ec7a49a2f16a46aca80a31ef1f3cb2f5599", "Url": "https://api.github.com/repos/danousman/snowballs", "Date": "2018-10-15T09:40:29Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.middaydreams.stargraph.repository.LevelScoreRepository.findAllByUseridAndModeAndCatagoryAndLevel(com.middaydreams.stargraph.model.Users,java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ls == null) { return levelScoreRepository.save(score); }else return levelScoreRepository.update(scores, xp, mode, category, level);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3721/buggy-version/src.main.java.com.middaydreams.stargraph.controller.StarGarphController.java", "BodyUseAPI": [], "Fixed commit": "7685aa94cc231b597197f1dd25c09e55182df1bc", "Url": "https://api.github.com/repos/majbah08/stargraph", "Date": "2018-08-07T00:14:24Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files == null) { java.lang.System.out.println(\"FOLDER NULL?!\"); throw new java.lang.Exception(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4517/buggy-version/core.src.main.se.tevej.game.view.BuildingEntityRendereable.java", "BodyUseAPI": [], "Fixed commit": "5b6ae59cfbbf00fe8462916c6d92695c304c775f", "Url": "https://api.github.com/repos/Tevej/DayInGothenburgInTime", "Date": "2018-09-28T18:01:53Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((column.get_ID()) > 0) setFieldLength(column.getAD_Column().getFieldLength());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6080/buggy-version/base.src.org.adempiere.model.MBrowseField.java", "BodyUseAPI": [], "Fixed commit": "f144e01f4717e6116d03f2e94d342e6015d062f0", "Url": "https://api.github.com/repos/e-Evolution/adempiere", "Date": "2018-06-12T17:39:18Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dev.sagar.smsblocker.tech.beans.SMS.getSeen()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((holder.ivState) == null) && isSeen) { log.debug(methodName, \"Somethings weird...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8601/buggy-version/app.src.main.java.dev.sagar.smsblocker.ux.adapters.RVChatAdapter.java", "BodyUseAPI": [], "Fixed commit": "e6402c4198b8ba8bc00f643571263d4bd063e9a8", "Url": "https://api.github.com/repos/sagarpawardev/SMSBlocker", "Date": "2018-05-25T17:52:49Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(url)) { xyz.dcme.library.util.LogUtils.e(xyz.dcme.agg.ui.postdetail.PostDetailPresenter.TAG, \"start -> null url.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8031/buggy-version/app.src.main.java.xyz.dcme.agg.ui.postdetail.PostDetailPresenter.java", "BodyUseAPI": [], "Fixed commit": "bdf44f2dc6415b1c4fef1e62e967442567c4d216", "Url": "https://api.github.com/repos/caoshen/agg", "Date": "2018-04-30T09:26:44Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getProperty(\"mcmc.evaluation.threshold\")) != null) { threshold = java.lang.Double.parseDouble(java.lang.System.getProperty(\"mcmc.evaluation.threshold\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3072/buggy-version/src.dr.app.checkpoint.BeastCheckpointer.java", "BodyUseAPI": [], "Fixed commit": "d49d4102a4e40af891ec1412363799a7f5c63c72", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2018-02-21T14:47:51Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ferfig.popularmovies.MovieDetails.getIntent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((receivedIntent != null) && (receivedIntent.hasExtra(Utils.SINGLE_MOVIE_DETAILS_OBJECT))) { mMovieDetails = receivedIntent.getParcelableExtra(Utils.SINGLE_MOVIE_DETAILS_OBJECT); android.util.Log.w(Utils.APP_TAG, \"DetailActivity: onCreate without savedInstanceState\"); checkIfMovieIsFavorite(); getDetailsFromMovieDB(); }else { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1161/buggy-version/app.src.main.java.com.ferfig.popularmovies.MovieDetails.java", "BodyUseAPI": ["android.content.Intent.getParcelableExtra(Utils.SINGLE_MOVIE_DETAILS_OBJECT)"], "Fixed commit": "dcd791c6155848d6dce4e86fbf30a0eb18086ef8", "Url": "https://api.github.com/repos/FerFig/popular-movies-stage-2", "Date": "2018-03-11T05:05:14Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (redisUrl == null) { redisUrl = \"redis://localhost:6379\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2319/buggy-version/src.main.java.net.n8dgr8.gdcr.universe.configuration.LocalRedisConfig.java", "BodyUseAPI": [], "Fixed commit": "a84789513382ec71b3d3bff3ec4e2e3935338657", "Url": "https://api.github.com/repos/n8dgr8/gdcr_universe", "Date": "2018-05-27T21:32:30Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((redisUri.getUserInfo()) != null) { jedisConnectionFactory.setPassword(redisUri.getUserInfo().split(\":\", 2)[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2319/buggy-version/src.main.java.net.n8dgr8.gdcr.universe.configuration.LocalRedisConfig.java", "BodyUseAPI": ["org.springframework.data.redis.connection.jedis.JedisConnectionFactory.setPassword(java.lang.String)", "java.lang.String.split(java.lang.String,int)", "java.net.URI.getUserInfo()"], "Fixed commit": "a84789513382ec71b3d3bff3ec4e2e3935338657", "Url": "https://api.github.com/repos/n8dgr8/gdcr_universe", "Date": "2018-05-27T21:32:30Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (read != (data.length)) { throw new java.lang.Exception(\"ERROR! Bad message\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3295/buggy-version/Message.java", "BodyUseAPI": [], "Fixed commit": "5bfabf0e232cef207ce832de99ef2bee78ce898f", "Url": "https://api.github.com/repos/shweelan/binomial-graph-simulation", "Date": "2018-05-07T06:15:58Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (read < 0) { throw new java.io.EOFException(); }else if (read != (bn.Message.HEADER_LENGTH)) { throw new java.lang.Exception(\"ERROR! Bad message header\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3295/buggy-version/Message.java", "BodyUseAPI": [], "Fixed commit": "5bfabf0e232cef207ce832de99ef2bee78ce898f", "Url": "https://api.github.com/repos/shweelan/binomial-graph-simulation", "Date": "2018-05-07T06:15:58Z"},
{"Line": "=>848", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportFragmentManager().getBackStackEntryCount()) > 1) { getSupportFragmentManager().popBackStack(); }else { super.onBackPressed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8974/buggy-version/mobicomkitui.src.main.java.com.applozic.mobicomkit.uiwidgets.conversation.activity.ConversationActivity.java", "BodyUseAPI": [], "Fixed commit": "db77538e3ba9b7f83f67b609b2de57db0422f589", "Url": "https://api.github.com/repos/AppLozic/Applozic-Android-SDK", "Date": "2018-08-16T09:14:34Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (wireType != null) { setCraftPermission(wireType.getCraftPermission()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1134/buggy-version/src.main.java.de.robotricker.electricwires.utils.ductdetails.WireDetails.java", "BodyUseAPI": ["de.robotricker.electricwires.duct.wire.utils.WireType.getCraftPermission()", "de.robotricker.electricwires.utils.ductdetails.WireDetails.setCraftPermission(wireType.getCraftPermission())"], "Fixed commit": "c0da3dc308ccf87a6e81746767b4f035f0c1b007", "Url": "https://api.github.com/repos/RoboTricker/ElectricWires", "Date": "2018-03-10T17:32:27Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MessageProtos.Message.toByteArray()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((buffer.capacity()) < ((bytes.length) + 4)) { buffer = java.nio.ByteBuffer.allocate(((bytes.length) + 4)); attachment.buffer = buffer; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9313/buggy-version/src.main.java.com.simiyutin.javaii.server.tcp_async.TCPAsyncServer.java", "BodyUseAPI": ["java.nio.ByteBuffer.allocate(int)"], "Fixed commit": "30008ccbb8d8d912af9d64a290c5db2f068b7cfd", "Url": "https://api.github.com/repos/simiyutin/javaii-servers-benchmarks", "Date": "2018-02-20T21:16:49Z"},
{"Line": "=>588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((letters.get(1).freq) * 10) >= (letters.get(0).freq)) { firstTouchSaved2 = letters.get(1).text.charAt(0); }else { firstTouchSaved2 = '*'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/109/buggy-version/app.src.main.java.com.example.fansy.audiokeyboard.MainActivity.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.util.ArrayList<com.example.fansy.audiokeyboard.MainActivity.Word>.get(int)"], "Fixed commit": "f9cff9f42667b0f841acecf407d2f8beea313aac", "Url": "https://api.github.com/repos/wangtong2015/AudioKeyboard", "Date": "2017-12-29T09:06:16Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((firstTouchSaved2) != '*') { nowCh2 = firstTouchSaved2; playMedia((\"ios11_\" + (voiceSpeed)), ((firstTouchSaved2) - 'a'), true); readList += firstTouchSaved2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/109/buggy-version/app.src.main.java.com.example.fansy.audiokeyboard.MainActivity.java", "BodyUseAPI": ["com.example.fansy.audiokeyboard.MainActivity.playMedia(java.lang.String,int,boolean)"], "Fixed commit": "f9cff9f42667b0f841acecf407d2f8beea313aac", "Url": "https://api.github.com/repos/wangtong2015/AudioKeyboard", "Date": "2017-12-29T09:06:16Z"},
{"Line": "=>782", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offsetDelta < 0) { if (type == (Opcodes.F_SAME)) { return; }else { throw new java.lang.IllegalStateException(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3524/buggy-version/asm.src.main.java.org.objectweb.asm.MethodWriter.java", "BodyUseAPI": [], "Fixed commit": "156079819b6c3d5cfef287595593c9b824e4d260", "Url": "https://api.github.com/repos/JetBrains/intellij-deps-asm", "Date": "2018-01-20T10:11:37Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(enemy.isActive())) { board.incrementScore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8948/buggy-version/src.main.java.spaceranger.PlayerProjectile.java", "BodyUseAPI": [], "Fixed commit": "54e20ec45d80eae0c900f3805f35aca53d4722b4", "Url": "https://api.github.com/repos/mes32/space-ranger-2", "Date": "2018-04-25T00:37:47Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xtandemParameters.getParentMonoisotopicMassIsotopeError()) { parentMonoisotopicMassIsotopeErrorCmb.setSelectedIndex(0); }else { parentMonoisotopicMassIsotopeErrorCmb.setSelectedIndex(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7421/buggy-version/src.main.java.com.compomics.util.gui.parameters.identification.algorithm.XTandemParametersDialog.java", "BodyUseAPI": [], "Fixed commit": "8163ee20e6ac16533e18a7925e087c6da1a1fa10", "Url": "https://api.github.com/repos/compomics/compomics-utilities", "Date": "2018-01-10T12:08:18Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mitchellbosecke.pebble.lexer.TokenStream.current()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(endblock.test(Token.Type.NAME, \"endblock\"))) throw new com.mitchellbosecke.pebble.error.ParserException(null, \"endblock tag should be present with block tag starting line number \", token.getLineNumber(), stream.getFilename());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1359/buggy-version/src.main.java.com.mitchellbosecke.pebble.tokenParser.BlockTokenParser.java", "BodyUseAPI": [], "Fixed commit": "4a4e03912bfc8f70dc40170712d2b973696cf6e1", "Url": "https://api.github.com/repos/PebbleTemplates/pebble", "Date": "2018-04-14T19:07:13Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((instrNum) == 0) { java.lang.System.out.println((((temp[0]) + \"**\") + (temp[1]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5550/buggy-version/CCacheSim.java", "BodyUseAPI": [], "Fixed commit": "be9afc834b944a1333bf444ccd2c874d7f4459b9", "Url": "https://api.github.com/repos/CCrainys/CCachesim", "Date": "2018-04-11T17:34:13Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((main.java.Liabilities.OSAPLoans) < 0) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1242/buggy-version/src.main.java.Liabilities.java", "BodyUseAPI": [], "Fixed commit": "253f45b73ea8c8b3d27e3ce9bd287f472c16ae73", "Url": "https://api.github.com/repos/colinchan15/Prism", "Date": "2018-08-31T19:04:51Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((resObj == null) || (org.elastos.service.StrKit.isBlank((resObj + \"\")))) || ((resObj + \"\").equalsIgnoreCase(\"null\"))) { return com.alibaba.fastjson.JSON.toJSONString(new org.elastos.entity.ReturnMsgEntity().setResult(\"0.0\").setStatus(retCodeConfiguration.SUCC())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6572/buggy-version/base.api.src.main.java.org.elastos.service.ElaService.java", "BodyUseAPI": [], "Fixed commit": "40dbe84fa8f5f397be60501c3b43c7e9ae876e34", "Url": "https://api.github.com/repos/elastos/Elastos.ORG.Wallet.Service", "Date": "2018-09-21T08:31:04Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((tags.length()) > 0) author = tags.getJSONObject(0).getString(\"webTitle\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1625/buggy-version/app.src.main.java.com.danieldogeanu.android.newsapp.QueryUtils.java", "BodyUseAPI": ["org.json.JSONArray.getJSONObject(int)", "tags.getJSONObject(0).getString(java.lang.String)"], "Fixed commit": "bcd0a8377210420fc6ac35d238c779041240f7a1", "Url": "https://api.github.com/repos/danieldogeanu/NewsApp", "Date": "2018-05-13T19:38:42Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(task.getLocation().getAddress().equals(\"\"))) { location.setText(((task.getLocation().getAddress().substring(0, 10)) + \"...\")); }else { location.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5580/buggy-version/app.src.main.java.cmput301w18t22.com.tenner.ui.activity.TaskDetailActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(((task.getLocation().getAddress().substring(0, 10)) + \"...\"))", "task.getLocation().getAddress().substring(int,int)", "cmput301w18t22.com.tenner.classes.Task.getLocation()", "task.getLocation().getAddress()"], "Fixed commit": "1203790ddb90f8bf7c5261b285b210f72f79ef8c", "Url": "https://api.github.com/repos/CMPUT301W18T22/Tenner", "Date": "2018-04-09T21:52:55Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ch.njol.skript.bukkitutil.BukkitUnsafe.preferMaterialMap) { if ((id.length()) > 9) { assert (ch.njol.skript.bukkitutil.BukkitUnsafe.materialMap) != null; return ch.njol.skript.bukkitutil.BukkitUnsafe.materialMap.get(id.substring(10)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6581/buggy-version/src.main.java.ch.njol.skript.bukkitutil.BukkitUnsafe.java", "BodyUseAPI": [], "Fixed commit": "6780962dbcef9385ac4a0639094e4db7505faf70", "Url": "https://api.github.com/repos/SkriptLang/Skript", "Date": "2018-09-13T12:58:26Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((step) == 0) { setIntroductionFragment(); }else { setQuestionFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9176/buggy-version/app.src.main.java.com.example.android.tretyakovgalleryquiz.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f80167a0c468573abccd7fd34bcea4aaf74d21fb", "Url": "https://api.github.com/repos/kazakovaNet/TretyakovGalleryQuiz", "Date": "2018-01-31T09:13:00Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(termWeek.getText().toString().trim())) { showError(termWeekLayout, \"\u8bf7\u8f93\u5165\u5468\u6570\"); return; }else if ((java.lang.Integer.valueOf(termWeek.getText().toString().trim())) <= 0) { showError(termWeekLayout, \"\u5468\u6570\u6700\u5c0f\u4e3a1\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5672/buggy-version/app.src.main.java.com.shikeclass.app.activity.AdjustTermActivity.java", "BodyUseAPI": ["java.lang.Integer.valueOf(termWeek.getText().toString().trim())", "termWeek.getText().toString()", "termWeek.getText().toString().trim()", "android.support.design.widget.TextInputEditText.getText()"], "Fixed commit": "07eeac51d46f00bbddf60746d3f2853904640f91", "Url": "https://api.github.com/repos/CalvinLv/TimeClass", "Date": "2018-03-26T14:56:08Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NodeList.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tagsElement == null) { return patient; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4774/buggy-version/src.main.java.at.medunigraz.imi.bst.n2c2.dao.PatientDAO.java", "BodyUseAPI": [], "Fixed commit": "6bac2d7a7319a142fb2868a9f94ea4b82d89afad", "Url": "https://api.github.com/repos/bst-mug/n2c2", "Date": "2018-05-07T16:00:45Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.auth.api.signin.GoogleSignInResult.getSignInAccount()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((acct.getGivenName()) != null) && (!(acct.getGivenName().equalsIgnoreCase(\"null\")))) intent.putExtra(\"Name\", acct.getGivenName()); else intent.putExtra(\"Name\", acct.getDisplayName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3835/buggy-version/IntelliCal.app.src.main.java.com.example.rishab.intellical.LoginActivity.java", "BodyUseAPI": ["com.google.android.gms.auth.api.signin.GoogleSignInAccount.getDisplayName()", "com.google.android.gms.auth.api.signin.GoogleSignInAccount.getGivenName()", "android.content.Intent.putExtra(java.lang.String,acct.getDisplayName())", "android.content.Intent.putExtra(java.lang.String,acct.getGivenName())"], "Fixed commit": "ee662fb2fce1b1ca4266f29d67f31b9dbfbe76c1", "Url": "https://api.github.com/repos/gold1617/IntelliCal", "Date": "2018-09-27T06:43:42Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.inventory.Slot.getStack()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(mergeItemStack(items, panel.getSlots(), inventorySlots.size(), false))) { return net.minecraft.item.ItemStack.EMPTY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1975/buggy-version/src.main.java.worldcontrolteam.worldcontrol.container.ContainerInfoPanel.java", "BodyUseAPI": [], "Fixed commit": "f2593dbcf9d6f05bbc563a87336e7e5fc7c56085", "Url": "https://api.github.com/repos/World-Control-Team/World-Control", "Date": "2018-07-26T18:43:17Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.identity.sso.saml.cache.SAMLSSOParticipantCache.getInstance().getValueFromCache(org.wso2.carbon.identity.sso.saml.cache.SAMLSSOParticipantCacheKey)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((cacheEntry.getSessionInfoData()) != null) { cacheEntry.getSessionInfoData().removeServiceProvider(issuer); if (org.wso2.carbon.identity.sso.saml.session.SSOSessionPersistenceManager.log.isDebugEnabled()) { org.wso2.carbon.identity.sso.saml.session.SSOSessionPersistenceManager.log.debug((\"Removed service provider from session info data with name \" + issuer)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6966/buggy-version/components.org.wso2.carbon.identity.sso.saml.src.main.java.org.wso2.carbon.identity.sso.saml.session.SSOSessionPersistenceManager.java", "BodyUseAPI": ["cacheEntry.getSessionInfoData().removeServiceProvider(java.lang.String)", "org.wso2.carbon.identity.sso.saml.cache.SAMLSSOParticipantCacheEntry.getSessionInfoData()"], "Fixed commit": "e249486106ffe6c7fc647b4cb56b0425021910fd", "Url": "https://api.github.com/repos/sachiniWettasinghe/identity-inbound-auth-saml", "Date": "2018-10-08T04:30:46Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (org.bukkit.Material.AIR)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6554/buggy-version/src.main.java.net.glowstone.inventory.GlowPlayerInventory.java", "BodyUseAPI": [], "Fixed commit": "c319f8064636d2a584ae19e20f4911d74348f81e", "Url": "https://api.github.com/repos/Pr0methean/Glowstone", "Date": "2018-01-04T06:42:10Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (statementDescriptor != null) { additionalParamsMap.put(com.stripe.android.model.SourceParams.FIELD_STATEMENT_DESCRIPTOR, statementDescriptor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6341/buggy-version/stripe.src.main.java.com.stripe.android.model.SourceParams.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)"], "Fixed commit": "e9dd27cccdc5a7cc6069ed242a3908a3fba55a8f", "Url": "https://api.github.com/repos/stripe/stripe-android", "Date": "2018-05-16T17:51:14Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(additionalParamsMap.isEmpty())) { params.setApiParameterMap(additionalParamsMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6341/buggy-version/stripe.src.main.java.com.stripe.android.model.SourceParams.java", "BodyUseAPI": ["com.stripe.android.model.SourceParams.setApiParameterMap(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "e9dd27cccdc5a7cc6069ed242a3908a3fba55a8f", "Url": "https://api.github.com/repos/stripe/stripe-android", "Date": "2018-05-16T17:51:14Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) < 8) { res = res.substring(0, res.length()); }else { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/31/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "76c9620c4fed52befcc02f70d5d82ba741c9cf79", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-LukeHalasy", "Date": "2018-10-02T19:07:53Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.util.Arrays.stream(results).filter(( i) -> i < (MIN_VALIDPOINTS)).count()) > 0) { return Grade.NDG5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/151/buggy-version/src.Results.Results.java", "BodyUseAPI": [], "Fixed commit": "78b8758511e60875fdf65ce1563a5253f0affde5", "Url": "https://api.github.com/repos/97hilfel/PRSWE2-A1-MVC", "Date": "2018-04-08T16:33:51Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.util.Arrays.stream(results).filter(( i) -> i == (-1)).count()) > 0) { return Grade.INV; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/151/buggy-version/src.Results.Results.java", "BodyUseAPI": [], "Fixed commit": "78b8758511e60875fdf65ce1563a5253f0affde5", "Url": "https://api.github.com/repos/97hilfel/PRSWE2-A1-MVC", "Date": "2018-04-08T16:33:51Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ScalarFieldND.Default.getValueRange(usf.saav.scalarfield.ScalarField2D)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((valueRange[0]) == 0) && ((valueRange[1]) == 0)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1251/buggy-version/src.usf.saav.alma.app.interactive.AlmaCT.java", "BodyUseAPI": [], "Fixed commit": "60b526b3790f4c2c6039598569665a0f5055c2b6", "Url": "https://api.github.com/repos/leong1016/Topological-Data-Analysis-for-MaNGA", "Date": "2018-10-31T19:02:21Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsonElement.getAsJsonObject().get(\"character\")) != null) { personCastCredit.character = jsonElement.getAsJsonObject().get(\"character\").getAsString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6443/buggy-version/src.main.java.com.uwetrottmann.tmdb2.TmdbHelper.java", "BodyUseAPI": ["com.google.gson.JsonElement.getAsJsonObject()", "jsonElement.getAsJsonObject().get(\"character\").getAsString()", "jsonElement.getAsJsonObject().get(java.lang.String)"], "Fixed commit": "f794376faa8df7be3e385bbe66c45fc703a005a2", "Url": "https://api.github.com/repos/JeremyQuagmire/tmdb-java", "Date": "2018-10-15T18:05:41Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsonElement.getAsJsonObject().get(\"credit_id\")) != null) { personCastCredit.credit_id = jsonElement.getAsJsonObject().get(\"credit_id\").getAsString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6443/buggy-version/src.main.java.com.uwetrottmann.tmdb2.TmdbHelper.java", "BodyUseAPI": ["com.google.gson.JsonElement.getAsJsonObject()", "jsonElement.getAsJsonObject().get(\"credit_id\").getAsString()", "jsonElement.getAsJsonObject().get(java.lang.String)"], "Fixed commit": "f794376faa8df7be3e385bbe66c45fc703a005a2", "Url": "https://api.github.com/repos/JeremyQuagmire/tmdb-java", "Date": "2018-10-15T18:05:41Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.aaron.myappp2.model.Story.getPage(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (page.isFinalPage()) { choice1Button.setVisibility(View.INVISIBLE); choice2Button.setText(R.string.play_again_button_text); }else { loadButtons(page); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1581/buggy-version/app.src.main.java.com.example.aaron.myappp2.ui.StoryActivity.java", "BodyUseAPI": ["com.example.aaron.myappp2.ui.StoryActivity.loadButtons(com.example.aaron.myappp2.model.Page)"], "Fixed commit": "f9d3013e184c1cf6a60f1f613a8aea711d7ff1bc", "Url": "https://api.github.com/repos/tim2464/MyAppP2", "Date": "2018-02-16T14:08:46Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ml.shifu.shifu.core.binning.UpdateBinningInfoReducer.computePosRate(long[],long[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(java.lang.Double.isNaN(binPosRate[i]))) { if ((java.lang.Double.compare(max, binPosRate[i])) < 0) { max = binPosRate[i]; } if ((java.lang.Double.compare(min, binPosRate[i])) > 0) { min = binPosRate[i]; } sum += (binPosRate[i]) * ((binCountPos[i]) + (binCountNeg[i])); squaredSum += ((binPosRate[i]) * (binPosRate[i])) * ((binCountPos[i]) + (binCountNeg[i])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3257/buggy-version/src.main.java.ml.shifu.shifu.core.binning.UpdateBinningInfoReducer.java", "BodyUseAPI": ["java.lang.Double.compare(double,double)", "java.lang.Double.compare(double,double)"], "Fixed commit": "529af30b0c62c3106f6ddf74fd7acd34ac0978c3", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2015-06-01T07:23:11Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (leafNode == (root)) { root = null; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8633/buggy-version/Datastructures.src.kar.ds.tree.BinaryTree.java", "BodyUseAPI": [], "Fixed commit": "f50864189225c483a3eab2b2fc11b7f5caf1cfea", "Url": "https://api.github.com/repos/KarthikBhuvanagiri/data-structures", "Date": "2018-05-23T17:07:59Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resolved) != null) { i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6054/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.naming.reference.LongUnresolvedReference.java", "BodyUseAPI": [], "Fixed commit": "4ff7667b64a33f4b80dc7b3a561b9153804cba1d", "Url": "https://api.github.com/repos/JetBrains/Arend", "Date": "2018-09-04T17:02:29Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["server.getPlayerList().getPlayerByUUID(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (player == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/241/buggy-version/src.main.java.net.wizardsoflua.permissions.Permissions.java", "BodyUseAPI": [], "Fixed commit": "66580acb6e16236dbafadd906209291950767b73", "Url": "https://api.github.com/repos/wizards-of-lua/wizards-of-lua", "Date": "2018-04-04T19:19:12Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((context.location) == (org.codehaus.groovy.eclipse.codeassist.requestor.ContentAssistLocation.STATEMENT)) && (field.getDeclaringClass().equals(VariableScope.CLASS_CLASS_NODE))) { completion = org.eclipse.jdt.core.compiler.CharOperation.concat(\"this.\".toCharArray(), completion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7664/buggy-version/ide.org.codehaus.groovy.eclipse.codeassist.completion.src.org.codehaus.groovy.eclipse.codeassist.proposals.GroovyFieldProposal.java", "BodyUseAPI": [], "Fixed commit": "28b5235a1bb3f8bcb95e736c9c81d61a7e4213e7", "Url": "https://api.github.com/repos/groovy/groovy-eclipse", "Date": "2018-02-17T15:27:49Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.parse.ParseUser.getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user != null) startActivity(new android.content.Intent(this, codepath.com.instagram.HomeActivity.class));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7580/buggy-version/app.src.main.java.codepath.com.instagram.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6c654d739f716b42e80dbf54c8daf09ed8a6b876", "Url": "https://api.github.com/repos/alex-goodman/Instagram", "Date": "2018-07-11T18:50:21Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.k12nt.k12netframe.utils.webConnection.K12NetHttpClient.getCookieList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cookies != null) { for (org.apache.http.cookie.Cookie cookie : cookies) { if (cookie.getName().contains(\"NotCompletedPollCount\")) { java.lang.String cookieString = (((cookie.getName()) + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\") + \"; Domain=\") + (cookie.getDomain()); cookieManager.setCookie(cookie.getDomain(), cookieString); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4554/buggy-version/app.src.main.java.com.k12nt.k12netframe.async_tasks.LoginAsyncTask.java", "BodyUseAPI": [], "Fixed commit": "f6c24111358908834e08dd48e3f225521f8d1024", "Url": "https://api.github.com/repos/K12net/K12NET-Mobile-Android", "Date": "2018-07-30T13:11:31Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isExitNull) str = str.replace(\"{exit_number}\", \"UNKNOWN\"); else str = str.replace(\"{exit_number}\", _numerals[exitNumber]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5484/buggy-version/openrouteservice.src.main.java.heigit.ors.routing.instructions.InstructionTranslator.java", "BodyUseAPI": [], "Fixed commit": "32cc3eca9fab09c8ff7e299dfb330a65ed66fc88", "Url": "https://api.github.com/repos/GIScience/openrouteservice", "Date": "2018-02-07T14:37:55Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (bookJSON.has(\"publishedDate\")) mEditionYearField.setText(bookJSON.getString(\"publishedDate\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8246/buggy-version/app.src.main.java.mad24.polito.it.ManualInsertActivity.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "android.widget.EditText.setText(bookJSON.getString(\"publishedDate\"))"], "Fixed commit": "d3f0cd45720211cc56bf62193ecb7a147a835203", "Url": "https://api.github.com/repos/SunSince90/Libre", "Date": "2018-05-15T14:42:47Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_offset_column) != null) sb.append(sep).append(\"offset(\").append(_offset_column).append(\")\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4188/buggy-version/h2o-algos.src.main.java.hex.coxph.CoxPHModel.java", "BodyUseAPI": [], "Fixed commit": "3057fdbc2e5f919d6c5596168bb0442453369f43", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2018-05-15T04:09:16Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((_offset_column) != null) && (_offset_column.equals(col))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4188/buggy-version/h2o-algos.src.main.java.hex.coxph.CoxPHModel.java", "BodyUseAPI": [], "Fixed commit": "3057fdbc2e5f919d6c5596168bb0442453369f43", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2018-05-15T04:09:16Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inter instanceof org.audiveris.omr.sig.inter.BarlineInter) { org.audiveris.omr.sig.inter.BarlineInter b = ((org.audiveris.omr.sig.inter.BarlineInter) (inter)); if ((b.getArea()) == null) { b.setArea(new java.awt.geom.Area(b.getBounds())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3346/buggy-version/src.main.org.audiveris.omr.sig.ui.InterController.java", "BodyUseAPI": [], "Fixed commit": "f8aa1209d58f9eec660e523283006fca09e19f71", "Url": "https://api.github.com/repos/Audiveris/audiveris", "Date": "2018-04-19T11:04:04Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.poratu.idea.plugins.tomcat.conf.TomcatRunConfiguration.getEnvOptions()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((envOptions != null) && (!(\"\".equals(envOptions.trim())))) { runnerSetting.getEnvOptions().setText(envOptions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6651/buggy-version/src.com.poratu.idea.plugins.tomcat.conf.TomcatSettingsEditor.java", "BodyUseAPI": ["runnerSetting.getEnvOptions().setText(java.lang.String)"], "Fixed commit": "2272635a2dabd3911917bcb7a22c1ad19ef4e9ae", "Url": "https://api.github.com/repos/zengkid/SmartTomcat", "Date": "2018-04-09T14:06:33Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((variables == null) || (variables.trim().equals(\"\"))) return map;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6651/buggy-version/src.com.poratu.idea.plugins.tomcat.conf.AppCommandLineState.java", "BodyUseAPI": [], "Fixed commit": "2272635a2dabd3911917bcb7a22c1ad19ef4e9ae", "Url": "https://api.github.com/repos/zengkid/SmartTomcat", "Date": "2018-04-09T14:06:33Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((lastException) == null) || (!(java.util.Objects.equals(lastException.getMessage(), ex.getMessage())))) { mailService.sendAdminNotification((\"Uncaught exception: \" + ex)); lastException = ex; return \"redirect:/?error\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7852/buggy-version/src.main.java.ee.pardiralli.exceptions.PardiralliExceptionHandler.java", "BodyUseAPI": ["ee.pardiralli.service.MailService.sendAdminNotification(java.lang.String)"], "Fixed commit": "1b75b6d8d1bcc6629ffba879c167d64f6c5db122", "Url": "https://api.github.com/repos/pardiralli-dev/pardiralli", "Date": "2018-04-24T15:43:16Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index <= 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/583/buggy-version/src.main.java.edu.lu.uni.serval.bug.fixer.AbstractFixer.java", "BodyUseAPI": [], "Fixed commit": "b7047fb1c31fa437caa406f50cb276bfce8f3c75", "Url": "https://api.github.com/repos/fixminer/fixminerAPR", "Date": "2018-09-19T09:51:17Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.squareup.javapoet.ClassName.bestGuess(((eraseGenericIfNecessary(superType).toString()) + (StateSaver.SUFFIX)))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(rawType.toString().equals(rawType.reflectionName()))) { rawType = com.squareup.javapoet.ClassName.bestGuess(rawType.reflectionName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9178/buggy-version/processor.src.main.java.com.evernote.android.state.StateProcessor.java", "BodyUseAPI": ["com.squareup.javapoet.ClassName.bestGuess(rawType.reflectionName())", "com.squareup.javapoet.ClassName.reflectionName()"], "Fixed commit": "125f3070a17d906687ad5d6378ca3b694d94bb16", "Url": "https://api.github.com/repos/evernote/android-state", "Date": "2018-03-19T00:51:18Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<Classifier.Recognition>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/497/buggy-version/OpenCV.app.src.main.java.com.example.charles.opencv.AI.AI.java", "BodyUseAPI": [], "Fixed commit": "40a5c5a033d450461c5036e5b945a6eb1617f566", "Url": "https://api.github.com/repos/lowejosh/team3432-capstone", "Date": "2018-10-23T15:12:57Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (top.slantech.voicebirds.BuildConfig.DEBUG) model.setIsOpen((-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5289/buggy-version/app.src.main.java.top.slantech.voicebirds.comon.UIHelper.java", "BodyUseAPI": [], "Fixed commit": "4b9c54796ffd7181ca20ee34605f47478763df13", "Url": "https://api.github.com/repos/yz1309/voicebirds", "Date": "2018-03-29T10:14:07Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkIsSupportBackClose()) com.jude.swipbackhelper.SwipeBackHelper.onDestroy(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5289/buggy-version/app.src.main.java.top.slantech.voicebirds.ui.activity.base.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "4b9c54796ffd7181ca20ee34605f47478763df13", "Url": "https://api.github.com/repos/yz1309/voicebirds", "Date": "2018-03-29T10:14:07Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(mCommonParams)) return query;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4189/buggy-version/core.src.main.java.com.joey.cheetah.core.net.ApiCommonParamsInterceptor.java", "BodyUseAPI": [], "Fixed commit": "84f12d5ae8d971eca75c0bc926076d08afb012a1", "Url": "https://api.github.com/repos/JoeSteven/Cheetah", "Date": "2018-08-27T07:09:09Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["selectedFile.getAbsolutePath().lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (i > 0) { extension = selectedFile.getAbsolutePath().substring((i + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2687/buggy-version/src.com.thomasp.main.controller.AnalyserController.java", "BodyUseAPI": ["selectedFile.getAbsolutePath().substring(int)"], "Fixed commit": "37f0fcc694475af335c8e3a9bc9c97111c0643e7", "Url": "https://api.github.com/repos/ThomasPritchard/ProfanityDetector", "Date": "2018-07-31T11:58:44Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(model.checkWordMapValidity())) { view.createErrorDialog(\"Swear Word File Not Found\", \"You must provide a valid swear word file in order to continue\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2687/buggy-version/src.com.thomasp.main.controller.AnalyserController.java", "BodyUseAPI": [], "Fixed commit": "37f0fcc694475af335c8e3a9bc9c97111c0643e7", "Url": "https://api.github.com/repos/ThomasPritchard/ProfanityDetector", "Date": "2018-07-31T11:58:44Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileText) == null) { view.createInformationDialog(\"Chosen File Incompatible\", \"The file you are choosing is either incompatible or empty. Please try another file\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2687/buggy-version/src.com.thomasp.main.controller.AnalyserController.java", "BodyUseAPI": [], "Fixed commit": "37f0fcc694475af335c8e3a9bc9c97111c0643e7", "Url": "https://api.github.com/repos/ThomasPritchard/ProfanityDetector", "Date": "2018-07-31T11:58:44Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(extension.equals(\"txt\"))) { view.createInformationDialog(\"Chosen File Incompatible\", \"Please try another file\"); return; }else if (selectedFile != null) { fileText = com.thomasp.main.model.FileManager.loadSongFileIntoString(selectedFile.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2687/buggy-version/src.com.thomasp.main.controller.AnalyserController.java", "BodyUseAPI": [], "Fixed commit": "37f0fcc694475af335c8e3a9bc9c97111c0643e7", "Url": "https://api.github.com/repos/ThomasPritchard/ProfanityDetector", "Date": "2018-07-31T11:58:44Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.centurylink.mdw.cli.Checkpoint.getDbConnection()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(conn.getAutoCommit())) conn.commit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4636/buggy-version/mdw-common.src.com.centurylink.mdw.cli.Checkpoint.java", "BodyUseAPI": ["java.sql.Connection.commit()"], "Fixed commit": "2e3a3faac6de43cd79bdab90a30a5ab1b0c99a5f", "Url": "https://api.github.com/repos/CenturyLinkCloud/mdw", "Date": "2018-03-23T15:21:11Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.centurylink.mdw.cli.Checkpoint.getDbConnection()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(conn.getAutoCommit())) conn.commit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4636/buggy-version/mdw-common.src.com.centurylink.mdw.cli.Checkpoint.java", "BodyUseAPI": ["java.sql.Connection.commit()"], "Fixed commit": "2e3a3faac6de43cd79bdab90a30a5ab1b0c99a5f", "Url": "https://api.github.com/repos/CenturyLinkCloud/mdw", "Date": "2018-03-23T15:21:11Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.centurylink.mdw.cli.Checkpoint.getDbConnection()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(conn.getAutoCommit())) conn.commit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4636/buggy-version/mdw-common.src.com.centurylink.mdw.cli.Checkpoint.java", "BodyUseAPI": ["java.sql.Connection.commit()"], "Fixed commit": "2e3a3faac6de43cd79bdab90a30a5ab1b0c99a5f", "Url": "https://api.github.com/repos/CenturyLinkCloud/mdw", "Date": "2018-03-23T15:21:11Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.centurylink.mdw.cli.Checkpoint.getDbConnection()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(conn.getAutoCommit())) conn.commit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4636/buggy-version/mdw-common.src.com.centurylink.mdw.cli.Checkpoint.java", "BodyUseAPI": ["java.sql.Connection.commit()"], "Fixed commit": "2e3a3faac6de43cd79bdab90a30a5ab1b0c99a5f", "Url": "https://api.github.com/repos/CenturyLinkCloud/mdw", "Date": "2018-03-23T15:21:11Z"},
{"Line": "=>1986", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["boa.types.Ast.Statement.getExpression()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(exp.isInitialized())) return stmt;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3942/buggy-version/src.java.boa.functions.BoaNormalFormIntrinsics.java", "BodyUseAPI": [], "Fixed commit": "13f235f86b79cb3c743732332f1bd581a1e69200", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2018-06-06T17:56:58Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mViewDragHelper) == null) { mViewDragHelper = android.support.v4.widget.ViewDragHelper.create(parent, mDragCallback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1610/buggy-version/fabulousfilter.src.main.java.com.allattentionhere.fabulousfilter.viewpagerbottomsheet.ViewPagerBottomSheetBehavior.java", "BodyUseAPI": [], "Fixed commit": "6518bc8071ffeda9f0838ec2e70768bd0595d4ea", "Url": "https://api.github.com/repos/codegarage-tech/cg-as", "Date": "2018-01-29T04:51:25Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(imgName.endsWith(\":latest\"))) imgName += \":latest\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2254/buggy-version/src.main.java.org.hobbit.sdk.utils.commandreactions.ContainerCommandsReaction.java", "BodyUseAPI": [], "Fixed commit": "2d57cd7a0ebc05fba3d4904390d13c9f5d47f4de", "Url": "https://api.github.com/repos/hobbit-project/java-sdk", "Date": "2018-10-30T16:05:41Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pathParameter instanceof com.jetbrains.php.lang.psi.elements.StringLiteralExpression) { java.lang.String path = ((com.jetbrains.php.lang.psi.elements.StringLiteralExpression) (pathParameter)).getContents(); final java.lang.String errorViewNotFoundTemplate = \"View file for \\\"%name%\\\" not found.\"; final com.nvlad.yii2support.views.inspections.MissedViewLocalQuickFix quickFix = new com.nvlad.yii2support.views.inspections.MissedViewLocalQuickFix(path); final java.lang.String descriptionTemplate = errorViewNotFoundTemplate.replace(\"%name%\", path); final com.intellij.psi.PsiElement stringPart = pathParameter.findElementAt(1); if (stringPart != null) { problemsHolder.registerProblem(stringPart, descriptionTemplate, quickFix); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5939/buggy-version/src.com.nvlad.yii2support.views.inspections.MissedViewInspection.java", "BodyUseAPI": ["com.intellij.psi.PsiElement.findElementAt(int)"], "Fixed commit": "b341f083d9565af60805923723a3b5ff218ce1f2", "Url": "https://api.github.com/repos/nvlad/yii2support", "Date": "2018-02-13T20:53:38Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(manager.isProviderEnabled(LocationManager.GPS_PROVIDER))) android.widget.Toast.makeText(getApplicationContext(), \"GPS is disabled. Please turn it on\", Toast.LENGTH_SHORT).show(); else { android.widget.Toast.makeText(getApplicationContext(), \"Scanning..\", Toast.LENGTH_SHORT).show(); scanWifiList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2516/buggy-version/app.src.main.java.com.example.killua.wifiinfo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c0a5853a984038ccf05f63ea8f90542663bcf01c", "Url": "https://api.github.com/repos/VinitraMk/WifiInfo", "Date": "2018-04-04T20:57:59Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["amirz.adaptivestune.math.Parabola.root(double,double,double)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((intersect.length) == 2) { boolean firstBetween = between(intersect[0], minMeasuredBoost, maxMeasuredBoost); boolean secondBetween = between(intersect[1], minMeasuredBoost, maxMeasuredBoost); if (firstBetween && (!secondBetween)) { android.util.Log.d(amirz.adaptivestune.Algorithm.TAG, (\"Parabola fitting result 1: boost = \" + (intersect[0]))); return intersect[0]; } if ((!firstBetween) && secondBetween) { android.util.Log.d(amirz.adaptivestune.Algorithm.TAG, (\"Parabola fitting result 2: boost = \" + (intersect[1]))); return intersect[1]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2875/buggy-version/app.src.main.java.amirz.adaptivestune.Algorithm.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)", "amirz.adaptivestune.Algorithm.between(double,int,int)", "amirz.adaptivestune.Algorithm.between(double,int,int)"], "Fixed commit": "794c8f6d47dfaca72c9336324974b5202dc49c17", "Url": "https://api.github.com/repos/amirzaidi/AdaptiveStune", "Date": "2018-07-29T14:02:16Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(online)) { connect(); this.online = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1475/buggy-version/src.main.java.io.ebeaninternal.server.cluster.socket.SocketClient.java", "BodyUseAPI": [], "Fixed commit": "170d1b6f6da8a98fbc6cedbf7879cae22bd6187e", "Url": "https://api.github.com/repos/FOCONIS/ebean-cluster", "Date": "2018-03-23T19:26:33Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.yawlfoundation.yawl.editor.ui.properties.data.VariableRow.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rowValue == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8088/buggy-version/source.org.yawlfoundation.yawl.worklet.dialog.DataContextTablePanel.java", "BodyUseAPI": [], "Fixed commit": "1f6d1e357c83c1b90f84d203cd52349892ab858d", "Url": "https://api.github.com/repos/yawlfoundation/editor", "Date": "2018-05-31T08:42:34Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<com.codecool.klondike.Move>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((lastMove.previousPile.getPileType()) == (Pile.PileType.TABLEAU)) && (!(lastMove.previousPile.isEmpty()))) { lastMove.previousPile.getTopCard().flip(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6695/buggy-version/src.com.codecool.klondike.MoveHistory.java", "BodyUseAPI": ["lastMove.previousPile.getTopCard()", "lastMove.previousPile.getTopCard().flip()"], "Fixed commit": "1e0a0db5c86d61058e4f231c33e9f8838919dbb4", "Url": "https://api.github.com/repos/CodecoolBPoop/oop-java-klondike-solitaire-orangutan", "Date": "2018-06-28T10:30:00Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mISBNField.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(isbn)) { mISBNField.setError(getResources().getString(R.string.required)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3534/buggy-version/app.src.main.java.mad24.polito.it.ManualInsertActivity.java", "BodyUseAPI": [], "Fixed commit": "75940045b40d7ae5b172e6957118c24d30d307aa", "Url": "https://api.github.com/repos/SunSince90/Libre", "Date": "2018-04-19T17:48:30Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readTree(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(org.springframework.util.StringUtils.isEmpty(jsonNode.findValue(\"errcode\")))) throw new java.lang.RuntimeException(\"\u83b7\u53d6\u6570\u636e\u5931\u8d25\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3031/buggy-version/src.main.java.org.alittlebitch.fitness.tcm.controller.UserContoller.java", "BodyUseAPI": [], "Fixed commit": "12f783ec7545cdf054fffafa225871d015197371", "Url": "https://api.github.com/repos/shield-project/fitness-testing", "Date": "2018-09-14T09:04:18Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.apache.commons.lang3.StringUtils.isNotEmpty(s3_InputRegion)) || (org.apache.commons.lang3.StringUtils.isNotEmpty(s3_OutputRegion))) { if (org.apache.commons.lang3.StringUtils.isNotEmpty(s3_InputRegion)) { org.yeastrc.spectral_storage.scan_file_processor.s3_aws_interface.S3_AWS_InterfaceObjectHolder.getSingletonInstance().setS3_InputRegion(s3_InputRegion); } if (org.apache.commons.lang3.StringUtils.isNotEmpty(s3_OutputRegion)) { org.yeastrc.spectral_storage.scan_file_processor.s3_aws_interface.S3_AWS_InterfaceObjectHolder.getSingletonInstance().setS3_OutputRegion(s3_OutputRegion); } org.yeastrc.spectral_storage.scan_file_processor.s3_aws_interface.S3_AWS_InterfaceObjectHolder.getSingletonInstance().init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8458/buggy-version/Scan_File_Processor_Importer.src_main.org.yeastrc.spectral_storage.scan_file_processor.program.Scan_File_Processor_MainProgram.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.isNotEmpty(java.lang.String)", "org.apache.commons.lang3.StringUtils.isNotEmpty(java.lang.String)", "org.yeastrc.spectral_storage.scan_file_processor.s3_aws_interface.S3_AWS_InterfaceObjectHolder.getSingletonInstance().setS3_InputRegion(java.lang.String)", "org.yeastrc.spectral_storage.scan_file_processor.s3_aws_interface.S3_AWS_InterfaceObjectHolder.getSingletonInstance().setS3_OutputRegion(java.lang.String)"], "Fixed commit": "c49f79512ee0e68eaa1b48c112a354ab60ea7e7d", "Url": "https://api.github.com/repos/yeastrc/Spectral_Storage_Service", "Date": "2018-02-28T19:26:59Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (task.isRecurring()) { recurringService.deleteRecurringJob(user, task); com.walmart.labs.service.TaskService.logger.info(\"Recurring job deleted successfully!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4901/buggy-version/app.src.main.java.com.walmart.labs.service.TaskService.java", "BodyUseAPI": ["com.walmart.labs.service.RecurringService.deleteRecurringJob(com.walmart.labs.domain.User,com.walmart.labs.domain.Task)"], "Fixed commit": "136032924eafb2066f3d0aafb79e695212b723ba", "Url": "https://api.github.com/repos/cdadv/replenisher-task-management-backend", "Date": "2018-04-29T22:47:12Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GameWorld.Game.tilesTilWall()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (wall == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4456/buggy-version/GameWorld.src.GameWorld.Game.java", "BodyUseAPI": [], "Fixed commit": "44d3d16f5883a8d5bba48eba6b900f95824931b5", "Url": "https://api.github.com/repos/xavierbroadhead/AdventureGame", "Date": "2018-10-15T03:56:29Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(allData.isEmpty())) { for (fr.inria.spirals.repairnator.serializer.engines.SerializerEngine engine : this.getEngines()) { engine.serialize(allData, this.getType()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/834/buggy-version/repairnator.repairnator-pipeline.src.main.java.fr.inria.spirals.repairnator.serializer.PatchesSerializer.java", "BodyUseAPI": ["fr.inria.spirals.repairnator.serializer.engines.SerializerEngine.serialize(java.util.List<fr.inria.spirals.repairnator.serializer.engines.SerializedData>,this.getType())"], "Fixed commit": "2a0810a51466eb685d09856fefa2d853843db2db", "Url": "https://api.github.com/repos/fermadeiral/repairnator", "Date": "2018-05-15T17:51:40Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.exist.xquery.functions.fn.LOG.isTraceEnabled()) { org.exist.xquery.functions.fn.FunExactlyOne.logger.trace(((\"fn:exactly-one called with a sequence containing \" + (result.getItemCount())) + \" items\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2995/buggy-version/src.org.exist.xquery.functions.fn.FunExactlyOne.java", "BodyUseAPI": [], "Fixed commit": "20d657b6c541f9feb2224187ed61c97f71041720", "Url": "https://api.github.com/repos/eXist-db/exist", "Date": "2018-07-12T13:33:25Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.exist.xquery.functions.fn.LOG.isTraceEnabled()) { org.exist.xquery.functions.fn.FunError.logger.trace(((errorDesc + \": \") + (errorCode.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2995/buggy-version/src.org.exist.xquery.functions.fn.FunError.java", "BodyUseAPI": [], "Fixed commit": "20d657b6c541f9feb2224187ed61c97f71041720", "Url": "https://api.github.com/repos/eXist-db/exist", "Date": "2018-07-12T13:33:25Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(((((((((accessionFilePath) + \"/\") + (institutionCode)) + \"/\") + (org.recap.ReCAPConstants.ACCESSION_RECONCILATION_FILE_NAME)) + (institutionCode)) + (simpleDateFormat.format(new java.util.Date()))) + \".csv\"))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (filePath.toFile().exists()) { noOfLinesInFile = java.nio.file.Files.readAllLines(filePath).size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3010/buggy-version/src.main.java.org.recap.camel.accessionreconciliation.AccessionReconciliationProcessor.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.nio.file.Files.readAllLines(java.nio.file.Path)"], "Fixed commit": "abc56e337e99915203fe1e8f08951d313cf87edb", "Url": "https://api.github.com/repos/ResearchCollectionsAndPreservation/scsb-circ", "Date": "2018-06-07T13:23:38Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.http.ResponseEntity<java.util.Map>.getBody()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((body.size()) > 0) { java.nio.file.Files.write(filePath, barcodesAndCustomerCodesForReportFileBytes, java.nio.file.StandardOpenOption.APPEND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3010/buggy-version/src.main.java.org.recap.camel.accessionreconciliation.AccessionReconciliationProcessor.java", "BodyUseAPI": [], "Fixed commit": "abc56e337e99915203fe1e8f08951d313cf87edb", "Url": "https://api.github.com/repos/ResearchCollectionsAndPreservation/scsb-circ", "Date": "2018-06-07T13:23:38Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bootstrapView.getText().toString().equals(\"\")) { throw new java.lang.Exception(\"Bootstrap IP was empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5186/buggy-version/app.src.main.java.nl.tudelft.cs4160.trustchain_android.main.ChangeBootstrapActivity.java", "BodyUseAPI": [], "Fixed commit": "5dfc8062f3b9594083c385c357c3caea3a761bc9", "Url": "https://api.github.com/repos/Tribler/trustchain-android", "Date": "2018-06-06T14:17:58Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url.startsWith(\"about:\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/929/buggy-version/cn.ieclipse.smartqq.src.cn.ieclipse.smartim.console.TabComposite.java", "BodyUseAPI": [], "Fixed commit": "31292af58d0837e493f7b1bea794e82942189c0f", "Url": "https://api.github.com/repos/Jamling/SmartQQ4Eclipse", "Date": "2018-04-09T09:06:56Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minDuration.equals(duration)) && (duration.equals(maxDuration))) { return duration; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/10/buggy-version/Harmony.src.main.java.org.agohr.harmony.composer.harmonywalk.NextDuration.java", "BodyUseAPI": [], "Fixed commit": "fad56ad7e75785557cd05b86e01e99375ff0dbe2", "Url": "https://api.github.com/repos/AlbertGohr/efficient-algorithms", "Date": "2018-08-26T16:41:15Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((scale.down(pitch).getMidiValue()) < (minPitch.getMidiValue())) && ((maxPitch.getMidiValue()) < (scale.up(pitch).getMidiValue()))) { return pitch; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/10/buggy-version/Harmony.src.main.java.org.agohr.harmony.composer.harmonywalk.NextPitch.java", "BodyUseAPI": [], "Fixed commit": "fad56ad7e75785557cd05b86e01e99375ff0dbe2", "Url": "https://api.github.com/repos/AlbertGohr/efficient-algorithms", "Date": "2018-08-26T16:41:15Z"},
{"Line": "=>1403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(batchIdList.isEmpty())) { findBatches.add(org.hibernate.criterion.Restrictions.in(\"id\", batchIdList)); }else { findBatches.add(org.hibernate.criterion.Restrictions.eq(\"orgId\", orgId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9646/buggy-version/src.main.java.com.ut.dph.dao.impl.transactionInDAOImpl.java", "BodyUseAPI": ["org.hibernate.criterion.Restrictions.in(java.lang.String,java.util.List<java.lang.Integer>)", "org.hibernate.Criteria.add(org.hibernate.criterion.Restrictions.in(\"id\", batchIdList))"], "Fixed commit": "7a69022bd510a95c06da82c504883f94528fbd33", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2018-03-04T15:28:07Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getWorld().getBlockAt(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (block.getType().equals(Material.AIR)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6490/buggy-version/src.main.java.javamal.Main.java", "BodyUseAPI": [], "Fixed commit": "8e3c4ab4c5337f2b41f06a1883795fba5a2cfea7", "Url": "https://api.github.com/repos/minecraft-codingmath/plugin_javamal", "Date": "2018-02-22T07:07:53Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getCookies()) != null) { for (javax.servlet.http.Cookie cookie : request.getCookies()) { if (paramName.equalsIgnoreCase(cookie.getName())) { result = cookie.getValue(); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3938/buggy-version/muscida-spring-redis.src.main.java.xyz.proteanbear.muscida.RedisAuthorityAccountHandler.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Fixed commit": "17ffeb56754e212b7f334ff1a4c7c5d71a34c192", "Url": "https://api.github.com/repos/ProteanBear/ursa-major", "Date": "2018-10-26T07:29:39Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(hasChanged_)) && ((textbox_.getText()) != (org.rstudio.studio.client.common.rstudioapi.ui.AskSecretDialog.secretPlaceholder_))) { hasChanged_ = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4425/buggy-version/src.gwt.src.org.rstudio.studio.client.common.rstudioapi.ui.AskSecretDialog.java", "BodyUseAPI": [], "Fixed commit": "e78311e5fa59b5fc54216cd710b729aeac072592", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2018-02-14T01:03:16Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (days > 0) { buf.append(days).append('d'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2486/buggy-version/src.main.java.org.gitlab4j.api.utils.DurationUtils.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(int)"], "Fixed commit": "81cc979193e5b907b4fe27402a2554468be24fdd", "Url": "https://api.github.com/repos/gmessner/gitlab4j-api", "Date": "2018-01-07T17:44:27Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nikr.eve.jeveasset.gui.tabs.tracker.EveKitTrackImportUpdateTask.getLifeStart()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lifeStart == null) { returnValue = net.nikr.eve.jeveasset.gui.tabs.tracker.EveKitTrackImportUpdateTask.ReturnValue.ERROR; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1372/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.tabs.tracker.EveKitTrackImportUpdateTask.java", "BodyUseAPI": [], "Fixed commit": "6fa89f6b0f6460d93a14d07725922add2dd128d8", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2018-01-25T10:32:24Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list == null) || ((list.size()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7061/buggy-version/app.src.main.java.com.onezero.launcher.launcher.activity.Launcher.java", "BodyUseAPI": [], "Fixed commit": "0a1e3eac99ac0a49790927500e4e674409f6f532", "Url": "https://api.github.com/repos/10-lw/Launcher", "Date": "2018-08-29T08:17:48Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Spec.STGroup.getInstanceOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (st == null) { st = group.getInstanceOf(\"Metamodel\"); if (st == null) throw new java.lang.RuntimeException(\"Template Folder Not Found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8915/buggy-version/src.Spec.ProcessSpec.java", "BodyUseAPI": [], "Fixed commit": "82ba29d648d7aa48019a62d6d795d579bd69a30e", "Url": "https://api.github.com/repos/pablofcastro/PhilStone", "Date": "2018-03-12T12:16:52Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((order.length) < 3) { java.lang.System.out.println(((socket.getInetAddress()) + \" has entered an incomplete direct message command\")); }else { chatServer.Server.sendString(order[2], this, order[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5590/buggy-version/src.chatServer.Connection.java", "BodyUseAPI": ["chatServer.Server.sendString(java.lang.String,chatServer.Connection,java.lang.String)"], "Fixed commit": "a56e1215b75ac8b94ac3682fb246ca1adfb1da94", "Url": "https://api.github.com/repos/kanitkameh/ChatKam", "Date": "2018-01-13T18:28:15Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (CMS.sys_state) { operations.loadCourses(); }else { java.lang.System.out.println(\"Turn system on first.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6895/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "3ee46c8511c8d55751a4e3d17f05facd7a0a5f26", "Url": "https://api.github.com/repos/sjrahimian/course_management_sys", "Date": "2018-04-08T05:41:47Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((schools[(i - 1)]) != null) retStr += (((\"School \" + i) + \": \") + (schools[(i - 1)])) + \"\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4630/buggy-version/User.java", "BodyUseAPI": [], "Fixed commit": "23bbcbee560e51f5e764b19437ec9e174b6de91a", "Url": "https://api.github.com/repos/Kryptikz/rambook", "Date": "2018-02-16T18:49:22Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.saveit.model.ModelManager.getCurrentDirectory()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (directory == 0) { return javafx.collections.FXCollections.unmodifiableObservableList(javafx.collections.FXCollections.emptyObservableList()); }else { return javafx.collections.FXCollections.unmodifiableObservableList(filteredIssues.get(getCurrentDirectory()).getObservableSolutions()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9762/buggy-version/src.main.java.seedu.saveit.model.ModelManager.java", "BodyUseAPI": [], "Fixed commit": "b43c5d2b5cd71692045d175666e55d4d0b2d7068", "Url": "https://api.github.com/repos/CS2103-AY1819S1-T12-4/main", "Date": "2018-10-27T09:02:24Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mango.contentproviderandresolverdemo.ArticlesAdapter.getArticlesByPos(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (a == null) { return -1; }else { return a.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/845/buggy-version/app.src.main.java.com.mango.contentproviderandresolverdemo.MainActivity.java", "BodyUseAPI": ["com.mango.contentproviderandresolverdemo.Article.getId()"], "Fixed commit": "ea3fe3d4c1bb6f65c8af660e10729c095cabb3bd", "Url": "https://api.github.com/repos/4apple/ContentProviderAndResolverDemo", "Date": "2018-04-22T23:03:36Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (convertView == null) { convertView = inflater.inflate(R.layout.item, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/845/buggy-version/app.src.main.java.com.mango.contentproviderandresolverdemo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ea3fe3d4c1bb6f65c8af660e10729c095cabb3bd", "Url": "https://api.github.com/repos/4apple/ContentProviderAndResolverDemo", "Date": "2018-04-22T23:03:36Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((client.getChat(contact)) == null) { client.addChat(new chainmail.Blockchain(contact)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4091/buggy-version/src.chainmail.IClient.java", "BodyUseAPI": ["chainmail.Client.addChat(chainmail.Blockchain)"], "Fixed commit": "98120d7b1d0801c710f8fd0162a3a164dadacad0", "Url": "https://api.github.com/repos/akshayrkapadia/ChainMail", "Date": "2018-10-07T00:29:18Z"},
{"Line": "=>1253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.getElementById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (content == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4166/buggy-version/src.com.judy.momoplayer.util.Util.java", "BodyUseAPI": [], "Fixed commit": "b7f74a44f6884ab07cded14c80ce6568b08b4f21", "Url": "https://api.github.com/repos/junehappylove/june.music.mm", "Date": "2018-07-16T08:19:23Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.isOp()) { is.addUnsafeEnchantment(Enchantment.DIG_SPEED, 10); is.addUnsafeEnchantment(Enchantment.LURE, 10); is.addUnsafeEnchantment(Enchantment.DURABILITY, 10); is.addUnsafeEnchantment(Enchantment.ARROW_INFINITE, 10); lores.add(\"\u00a77\u52b9\u7387\u5f37\u5316 \u2169\"); lores.add(\"\u00a77\u8010\u4e45\u529b \u2169\"); }else { is.addUnsafeEnchantment(Enchantment.DIG_SPEED, 6); is.addUnsafeEnchantment(Enchantment.LURE, 6); is.addUnsafeEnchantment(Enchantment.DURABILITY, 0); is.addUnsafeEnchantment(Enchantment.ARROW_INFINITE, 0); lores.add(\"\u00a77\u52b9\u7387\u5f37\u5316 \u2165\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/9302/buggy-version/src.main.java.com.mycompany.premisesevent.ItemControl.java", "BodyUseAPI": [], "Fixed commit": "33e0611510a48b1ed7a7622afe80cf3791120e77", "Url": "https://api.github.com/repos/kumaisu/PremisesEvent", "Date": "2018-05-13T20:31:22Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.image.BufferedImage.getRGB(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (vertexColour == -9079435) { java.lang.System.err.println(v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/223/buggy-version/src.uk.ac.cam.cl.waytotheclinic.VertexFinder.java", "BodyUseAPI": [], "Fixed commit": "ff572e589435a964bb194e3425366efdb78df25a", "Url": "https://api.github.com/repos/nikihowe/waytotheclinic", "Date": "2018-03-01T19:10:55Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.image.BufferedImage.getRGB(int,int)", "java.util.HashMap<java.lang.String, java.lang.String>.get(uk.ac.cam.cl.waytotheclinic.RoomType.getColour(uk.ac.cam.cl.waytotheclinic.VertexFinder.lineImages.get(v.getZ()).getRGB(v.getX(), v.getY())))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(uk.ac.cam.cl.waytotheclinic.RoomType.isGrey(vertexColour))) && (!(v.getLabels().contains(colour)))) { v.addLabel(colour); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/223/buggy-version/src.uk.ac.cam.cl.waytotheclinic.VertexFinder.java", "BodyUseAPI": ["uk.ac.cam.cl.waytotheclinic.Vertex.addLabel(java.lang.String)"], "Fixed commit": "ff572e589435a964bb194e3425366efdb78df25a", "Url": "https://api.github.com/repos/nikihowe/waytotheclinic", "Date": "2018-03-01T19:10:55Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (entity != null) { ((MxCompiler.SemanticCheck.ClassEntity) (entity)).setScope(currentScope); visit(((MxCompiler.SemanticCheck.FunctionEntity) (entity)).body().stmts()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4955/buggy-version/src.MxCompiler.SemanticCheck.ASTSymbolVisitor.java", "BodyUseAPI": [], "Fixed commit": "1b08ccfef2c77d188c54fea8e1b311c3da76645a", "Url": "https://api.github.com/repos/TimerChen/MxCompiler", "Date": "2018-05-03T20:15:03Z"},
{"Line": "=>1565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedGoalCellY == 0) { selectedGoalCellY = previousGoalCellX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5060/buggy-version/src.mobemu.utils.HCMM.java", "BodyUseAPI": [], "Fixed commit": "223a3c518b5b9225e29064c44760468708bc0a4b", "Url": "https://api.github.com/repos/raduciobanu/mobemu", "Date": "2018-06-06T14:17:41Z"},
{"Line": "=>1561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedGoalCellX == 0) { selectedGoalCellX = previousGoalCellX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5060/buggy-version/src.mobemu.utils.HCMM.java", "BodyUseAPI": [], "Fixed commit": "223a3c518b5b9225e29064c44760468708bc0a4b", "Url": "https://api.github.com/repos/raduciobanu/mobemu", "Date": "2018-06-06T14:17:41Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (listener == null) { child.setOnClickListener(null); }else { child.setOnClickListener(new com.tylersuehr.chips.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { listener.onChipClicked(com.tylersuehr.chips.ChipView.this); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7726/buggy-version/library.src.main.java.com.tylersuehr.chips.ChipView.java", "BodyUseAPI": ["android.view.View.setOnClickListener(com.tylersuehr.chips.OnClickListener)", "com.tylersuehr.chips.ChipView.OnChipClickListener.onChipClicked(com.tylersuehr.chips.ChipView)"], "Fixed commit": "f8e14bd0b701293b554b75020f56c02be2ea19d6", "Url": "https://api.github.com/repos/tylersuehr7/chips-input-layout", "Date": "2018-04-05T20:22:10Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mTaskListAdapter.isEmpty()) { mEmptyStateTextView.setVisibility(View.VISIBLE); mEmptyStateTextView.setText(\"No task lists, add a new one!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2107/buggy-version/app.src.main.java.com.example.guyerez.todotiger.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d20d8c71a7f7a7b1f722ee66a66ecf054dc90534", "Url": "https://api.github.com/repos/GuyDev1/TodoTiger", "Date": "2018-09-27T09:19:59Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getSunCycleLastAnnounceMarker()) != min1) { setSunCycleLastAnnounceMarker(min1); ure.areas.UCell pcell = cellAt(commander.player().areaX(), commander.player().areaY()); if (pcell != null) if ((pcell.sunBrightness()) > 0.1F) commander.printScroll(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5947/buggy-version/src.main.java.ure.areas.UArea.java", "BodyUseAPI": ["ure.areas.UArea.setSunCycleLastAnnounceMarker(int)"], "Fixed commit": "1d17bf41d272534dec2c6f3708348c8d2b796793", "Url": "https://api.github.com/repos/gilmore606/ure", "Date": "2018-07-15T21:45:59Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (cn.hutool.core.util.ArrayUtil.isNotEmpty(names)) { for (java.lang.String name : names) { try { this.putOnce(name, jsonObject.getObj(name)); } catch (java.lang.Exception ignore) { } } }else { this.putAll(jsonObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3158/buggy-version/hutool-json.src.main.java.cn.hutool.json.JSONObject.java", "BodyUseAPI": [], "Fixed commit": "79a6bb23727462df631f251d9b57bb5307060f4e", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2018-08-05T08:29:45Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.alibaba.nacos.naming.boot.RunningConfig.getServerPort()) <= 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5455/buggy-version/naming.src.main.java.com.alibaba.nacos.naming.core.DistroMapper.java", "BodyUseAPI": [], "Fixed commit": "0c034d5ee3dfb1c80448c83328d407610cfc1c0c", "Url": "https://api.github.com/repos/alibaba/nacos", "Date": "2018-10-17T12:26:15Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isUsingSupportFragments)) { com.developerxy.traffic.compiler.utils.MessagerUtils.displayMessage(javax.tools.Diagnostic.Kind.ERROR, \"MapTo was used on a mix of support and non support fragments.\", element); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7475/buggy-version/Traffic-compiler.src.main.java.com.developerxy.traffic.compiler.extractors.RouteBindingExtractor.java", "BodyUseAPI": [], "Fixed commit": "7e26c14628d42680869ba5dfa1956d0d174e4fe2", "Url": "https://api.github.com/repos/DeveloperXY/Traffic", "Date": "2018-08-12T14:14:24Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isUsingSupportFragments) { com.developerxy.traffic.compiler.utils.MessagerUtils.displayMessage(javax.tools.Diagnostic.Kind.ERROR, \"MapTo was used on a mix of support and non support fragments.\", element); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7475/buggy-version/Traffic-compiler.src.main.java.com.developerxy.traffic.compiler.extractors.RouteBindingExtractor.java", "BodyUseAPI": [], "Fixed commit": "7e26c14628d42680869ba5dfa1956d0d174e4fe2", "Url": "https://api.github.com/repos/DeveloperXY/Traffic", "Date": "2018-08-12T14:14:24Z"},
{"Line": "=>1280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mo.countObservers()) == 0) it.remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8074/buggy-version/mars.mips.hardware.Memory.java", "BodyUseAPI": [], "Fixed commit": "3cd881214657ed3793d6b4f450392691c251d041", "Url": "https://api.github.com/repos/JarrettBillingsley/MARS_Assembler", "Date": "2018-08-02T23:15:06Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(params.getContentChanges().isEmpty())) { org.springframework.lsp.simplelanguageserver.document.TextDocument.log.warn(\"Change event with bad version ignored: {}\", params); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5128/buggy-version/server.simple-language-server.src.main.java.org.springframework.lsp.simplelanguageserver.document.TextDocument.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,org.eclipse.lsp4j.DidChangeTextDocumentParams)"], "Fixed commit": "ca5f5ac56e96d2a7f6606981c0b33e115035dc90", "Url": "https://api.github.com/repos/kdvolder/bootiful-language-server", "Date": "2018-04-13T20:27:28Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((temp) == 0) { getChildren().removeAll(cbo_aantalSpelers, btn_confirm); getChildren().addAll(cbo_aantalSpelers, lbl_foutMelding, btn_confirm); temp += 1; }else { getChildren().removeAll(cbo_aantalSpelers, lbl_foutMelding, btn_confirm); getChildren().addAll(cbo_aantalSpelers, lbl_foutMelding, btn_confirm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2765/buggy-version/Project_GroepA2.src.gui.keuzeStage.java", "BodyUseAPI": [], "Fixed commit": "e8b5af36b10e50092033772dc74c55219a237098", "Url": "https://api.github.com/repos/yannoliv/Projecten", "Date": "2018-04-20T12:10:21Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isSuccessful) { formatedLogBuilder.append(compileLog.replace(\"\\n\", \"\\n\\n\")); formatedLogBuilder.append(\"\\nCompile Error, Time = 0 ms, Memory = 0 KB, Score = 0.\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7227/buggy-version/judger.src.main.java.org.verwandlung.voj.judger.application.ApplicationDispatcher.java", "BodyUseAPI": [], "Fixed commit": "a57319e2561ff84bfd8e76ef75339bc2bcd0e62b", "Url": "https://api.github.com/repos/hzxie/voj", "Date": "2018-02-21T13:06:57Z"},
{"Line": "=>633", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (fractWeb != null) { openWebpage(fractWeb); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/4261/buggy-version/src.edu.udc.ProjectGUI.java", "BodyUseAPI": [], "Fixed commit": "ecbf4ada46f1bb1e3dcb7bac172bcd393f3ced86", "Url": "https://api.github.com/repos/MichaelKennedy1983/DiversityProject", "Date": "2018-04-23T03:31:29Z"},
{"Line": "=>1781", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getContentType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (ct != null) { java.util.regex.Matcher m = com.jdcloud.JDApiBase.regexMatch(ct, \"(?i)charset=([\\\\w-]+)\"); if (m.find()) resCharset = m.group(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8382/buggy-version/jdcloud.src.com.jdcloud.JDApiBase.java", "BodyUseAPI": ["com.jdcloud.JDApiBase.regexMatch(java.lang.String,java.lang.String)"], "Fixed commit": "2cd92841d4e0ad86d70f6468288d0b22793f3454", "Url": "https://api.github.com/repos/skyshore2001/jdcloud-java", "Date": "2018-09-11T10:25:37Z"},
{"Line": "=>896", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.TraceImporter.getCellString(row.getCell(xlsD.getChargenLinkCol()))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (lotDoublettes.contains(key)) { exceptions.add(new java.lang.Exception(((((\"[\" + (i + 1)) + \"] Unclear to which lot the ingredients should be connected - same Lot number (\") + key) + \") is used for different products.\\nTry to make use of the Line Number as connection key.\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2311/buggy-version/de.bund.bfr.knime.openkrise.db.src.de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.TraceImporter.java", "BodyUseAPI": ["java.util.List<java.lang.Exception>.add(java.lang.Exception)"], "Fixed commit": "bbf9acfae0345f17d84d55f662557433579ae59b", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2018-01-08T13:01:26Z"},
{"Line": "=>836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lotNumber2ID.containsKey(d.getLot().getNumber())) { if ((lotNumber2ID.get(d.getLot().getNumber()).intValue()) != (d.getLot().getId().intValue())) { lotDoublettes.add(d.getLot().getNumber()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/2311/buggy-version/de.bund.bfr.knime.openkrise.db.src.de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.TraceImporter.java", "BodyUseAPI": ["d.getLot().getNumber()", "d.getLot().getNumber()", "d.getLot().getId().intValue()", "de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.Delivery.getLot()", "de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.Delivery.getLot()", "java.lang.Integer.intValue()", "de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.Delivery.getLot()", "java.util.HashSet<java.lang.String>.add(d.getLot().getNumber())", "java.util.HashMap<java.lang.String, java.lang.Integer>.get(d.getLot().getNumber())", "d.getLot().getId()"], "Fixed commit": "bbf9acfae0345f17d84d55f662557433579ae59b", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2018-01-08T13:01:26Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((timeDueOn.getStartTime().isAfter(java.time.LocalDateTime.now())) && (timeDueOn.getTimeDueOn().isBefore(java.time.LocalDateTime.now()))) && ((timeDueOn.getTemperature()) < (((double) (currentTemperature)) + overshootDegrees))) && (timeDueOn.getTimeDueOn().plus(minimumActivePeriodMinutes).isBefore(java.time.LocalDateTime.now()))) && (!(heating.getBoiler().isHeating()))) { uk.me.steev.java.heating.controller.HeatingProcessor.logger.info(\"Warming up, will overshoot, stay off\"); }else if (((timeDueOn.getTemperature()) > ((double) (currentTemperature))) && (timeDueOn.getTimeDueOn().isBefore(java.time.LocalDateTime.now()))) { uk.me.steev.java.heating.controller.HeatingProcessor.logger.debug((((((((\"Current temperature \" + currentTemperature) + \" is below desired temperature \") + (timeDueOn.getTemperature())) + \" in an event starting at \") + (timeDueOn.getStartTime())) + \" warming up from \") + (timeDueOn.getTimeDueOn()))); java.time.Duration newProportionalTime = java.time.Duration.ofSeconds(((long) ((((timeDueOn.getTemperature()) - currentTemperature) * (proportionalHeatingIntervalMinutes.toMinutes())) * 60))); if ((timeDueOn.getStartTime().isAfter(java.time.LocalDateTime.now())) && (timeDueOn.getTimeDueOn().isBefore(java.time.LocalDateTime.now()))) { uk.me.steev.java.heating.controller.HeatingProcessor.logger.debug(\"Warm-up period, stay on until desired temp period starts\"); newProportionalTime = proportionalHeatingIntervalMinutes; }else if ((newProportionalTime.compareTo(minimumActivePeriodMinutes)) < 0) { newProportionalTime = minimumActivePeriodMinutes; }else if ((newProportionalTime.compareTo(proportionalHeatingIntervalMinutes)) > 0) { newProportionalTime = proportionalHeatingIntervalMinutes; } heating.setProportion((((float) (newProportionalTime.getSeconds())) / 60)); if (heating.getBoiler().isHeating()) { java.time.LocalDateTime timeHeatingOn = heating.getBoiler().getTimeHeatingOn(); uk.me.steev.java.heating.controller.HeatingProcessor.logger.debug((((\"Heating is on - came on at \" + timeHeatingOn) + \" and proportion is \") + newProportionalTime)); if ((timeHeatingOn.plus(newProportionalTime).compareTo(java.time.LocalDateTime.now())) < 0) { heating.getBoiler().stopHeating(); heating.getScheduledExecutor().schedule(this, newProportionalTime.toMillis(), java.util.concurrent.TimeUnit.MILLISECONDS); } }else { java.time.LocalDateTime timeHeatingOff = heating.getBoiler().getTimeHeatingOff(); uk.me.steev.java.heating.controller.HeatingProcessor.logger.debug((((\"Heating is off - went off at \" + timeHeatingOff) + \" and proportion is \") + newProportionalTime)); if ((timeHeatingOff.plus(proportionalHeatingIntervalMinutes.minus(newProportionalTime)).compareTo(java.time.LocalDateTime.now())) < 0) { heating.getBoiler().startHeating(); heating.getScheduledExecutor().schedule(this, newProportionalTime.toMillis(), java.util.concurrent.TimeUnit.MILLISECONDS); } } }else { uk.me.steev.java.heating.controller.HeatingProcessor.logger.debug(\"No current demand for heating\"); if (heating.getBoiler().isHeating()) { uk.me.steev.java.heating.controller.HeatingProcessor.logger.debug(\"Boiler is on, turn off\"); heating.getBoiler().stopHeating(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3192/buggy-version/src.uk.me.steev.java.heating.controller.HeatingProcessor.java", "BodyUseAPI": ["heating.getBoiler().startHeating()", "uk.me.steev.java.heating.controller.Heating.setProportion(float)", "heating.getBoiler().getTimeHeatingOn()", "heating.getBoiler().isHeating()", "uk.me.steev.java.heating.controller.TemperatureEvent.getTemperature()", "uk.me.steev.java.heating.controller.TemperatureEvent.getTemperature()", "uk.me.steev.java.heating.controller.TemperatureEvent.getStartTime()", "java.time.Duration.ofSeconds(((long) ((((timeDueOn.getTemperature()) - currentTemperature) * (proportionalHeatingIntervalMinutes.toMinutes())) * 60)))", "uk.me.steev.java.heating.controller.Heating.getBoiler()", "uk.me.steev.java.heating.controller.TemperatureEvent.getTimeDueOn()", "heating.getBoiler().stopHeating()", "heating.getBoiler().stopHeating()", "heating.getScheduledExecutor().schedule(uk.me.steev.java.heating.controller.HeatingProcessor,long,java.util.concurrent.TimeUnit)", "uk.me.steev.java.heating.controller.TemperatureEvent.getStartTime()", "heating.getBoiler().isHeating()", "uk.me.steev.java.heating.controller.Heating.getBoiler()", "uk.me.steev.java.heating.controller.Heating.getScheduledExecutor()", "uk.me.steev.java.heating.controller.TemperatureEvent.getTemperature()", "java.time.Duration.compareTo(java.time.Duration)", "timeDueOn.getTimeDueOn().isBefore(java.time.LocalDateTime)", "uk.me.steev.java.heating.controller.Heating.getBoiler()", "timeDueOn.getStartTime().isAfter(java.time.LocalDateTime)", "uk.me.steev.java.heating.controller.Heating.getBoiler()", "uk.me.steev.java.heating.controller.Heating.getBoiler()", "org.apache.logging.log4j.Logger.debug((((((((\"Current temperature \" + currentTemperature) + \" is below desired temperature \") + (timeDueOn.getTemperature())) + \" in an event starting at \") + (timeDueOn.getStartTime())) + \" warming up from \") + (timeDueOn.getTimeDueOn())))", "timeDueOn.getTimeDueOn().isBefore(java.time.LocalDateTime)", "heating.getBoiler().getTimeHeatingOff()", "uk.me.steev.java.heating.controller.TemperatureEvent.getTimeDueOn()", "heating.getScheduledExecutor().schedule(uk.me.steev.java.heating.controller.HeatingProcessor,long,java.util.concurrent.TimeUnit)", "uk.me.steev.java.heating.controller.Heating.getScheduledExecutor()", "uk.me.steev.java.heating.controller.Heating.getBoiler()", "uk.me.steev.java.heating.controller.TemperatureEvent.getTimeDueOn()", "uk.me.steev.java.heating.controller.Heating.getBoiler()"], "Fixed commit": "f4aacfc5bcdab46754656d47e55f5dc5d0144256", "Url": "https://api.github.com/repos/daviessm/heating-java", "Date": "2018-01-04T21:09:17Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Logger.localNameToStr.containsKey(Logger.currentLocalName)) { java.lang.String str1 = Logger.localNameToStr.get(Logger.currentLocalName).toString(); java.lang.String str2 = Logger.currentLocalStr.toString(); if (Logger.equalsLocalStrings(str1, str2)) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1221/buggy-version/src.Logger.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.util.HashMap<java.lang.String, java.lang.StringBuilder>.get(java.lang.String)"], "Fixed commit": "129ecd8f213b121667883e76022dbbd36e1ebf8d", "Url": "https://api.github.com/repos/SaarSch/pav_Project", "Date": "2018-07-26T10:02:21Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ie.demo.domain.User.getUsername()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((userMapper.userExists(username)) == 0) { result = userMapper.register(u); }else { result = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8199/buggy-version/springBootDemo.src.main.java.ie.demo.service.impl.UserServiceImpl.java", "BodyUseAPI": ["ie.demo.mapper.UserMapper.register(ie.demo.domain.User)"], "Fixed commit": "d938313598a3824e20a937591576c8e5f266be77", "Url": "https://api.github.com/repos/dannoonan/SystemsAnalysisDesignProject", "Date": "2018-10-30T17:47:02Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsBadge) { noteBlockHolder.getImageView().setImportantForAccessibility(View.IMPORTANT_FOR_ACCESSIBILITY_NO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/8953/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.notifications.blocks.NoteBlock.java", "BodyUseAPI": [], "Fixed commit": "b116810527e77f95d8a5f83c6b04af3350ed7a5a", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2018-03-14T12:54:15Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isActive) { citizen.setActiveCase(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6479/buggy-version/SensumUdred_Persistence.src.persistence.DataCase.java", "BodyUseAPI": [], "Fixed commit": "56370e286dca7b0db32fe0e84400640ae23b2038", "Url": "https://api.github.com/repos/Frede175/Gruppe13", "Date": "2018-05-01T11:19:17Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((geoLocation) != null) { newTask = new ca.ualbert.cs.tasko.Task(taskRequester.getId(), taskName, description, photos, geoLocation); }else { newTask = new ca.ualbert.cs.tasko.Task(taskRequester.getId(), taskName, description, photos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3218/buggy-version/app.src.main.java.ca.ualbert.cs.tasko.AddTaskActivity.java", "BodyUseAPI": [], "Fixed commit": "a745119f8f221e8943a88edc9bd2034426f79fdc", "Url": "https://api.github.com/repos/CMPUT301W18T14/PraiseTheSun", "Date": "2018-04-07T01:09:40Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMovieArrayList) != null) { mMoviesPresenter.setMovieList(mMovieArrayList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6146/buggy-version/app.src.main.java.com.android.udacity.popularmovies.Model.ConnectNetwork.java", "BodyUseAPI": [], "Fixed commit": "be6d4d27a5e1ff9f2226e02946b9b0d92226aef4", "Url": "https://api.github.com/repos/eberthfelipe/Popular-Movies", "Date": "2018-09-11T04:39:28Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entityItemPickupEvent.getEntityPlayer()) instanceof net.minecraftforge.common.util.FakePlayer) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6668/buggy-version/src.main.java.techreborn.events.TRRecipeHandler.java", "BodyUseAPI": [], "Fixed commit": "f7008d9c873b09f91dc9f2b94b9949e31d1e6637", "Url": "https://api.github.com/repos/Dimmerworld/TechReborn", "Date": "2018-02-13T17:44:46Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nextLineCheck.hasNextLine()) { nextLineChecker = nextLineCheck.nextLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/7022/buggy-version/Enamel.src.enamel.ScenarioParser.java", "BodyUseAPI": ["java.util.Scanner.nextLine()"], "Fixed commit": "8cb7a9ac0ad4e158e67f4a59492058f0317f701f", "Url": "https://api.github.com/repos/connorAhearn/Braille_Project", "Date": "2018-02-23T20:53:25Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(clazz.isArray())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/1817/buggy-version/src.main.java.nawaman.nullable.NullObjects.java", "BodyUseAPI": [], "Fixed commit": "1035871d755e0a7ff52e96c3b7554c0fbdb36787", "Url": "https://api.github.com/repos/NawaMan/NullableJ", "Date": "2018-02-09T06:10:26Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eu.hyvar.evolution.util.HyEvolutionUtil.getValidTemporalElement(feature.getTypes(), new java.util.Date()).getType().equals(HyFeatureTypeEnum.OPTIONAL)) { optionalIntervalList = new java.util.ArrayList<java.util.List<java.lang.Integer>>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3030/buggy-version/plugins.eu.hyvar.reconfigurator.input.src.eu.hyvar.reconfigurator.input.exporter.HyVarRecExporter.java", "BodyUseAPI": [], "Fixed commit": "4b698d4ceae25739b9ad245a8f6027d85ab2be35", "Url": "https://api.github.com/repos/DarwinSPL/DarwinSPL", "Date": "2018-03-09T21:44:43Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { android.view.Window w = getWindow(); w.setFlags(WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS, WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3027/buggy-version/app.src.main.java.com.mahausch.perfectweekend.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "ed8d52ffc192aaf823ff50e2412e7d8ef6515783", "Url": "https://api.github.com/repos/Barrick89/PerfectWeekend", "Date": "2018-03-28T19:21:53Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((gameThread) != null) && ((rmiGameClient) != null)) { gameThread.stop(); rmiGameClient = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/3037/buggy-version/src.logic.administration.Administration.java", "BodyUseAPI": [], "Fixed commit": "8ad7399802d07bcb3aea1c45fc11fe6b69ca79a4", "Url": "https://api.github.com/repos/Spacegod007/Highway2Hell", "Date": "2018-01-22T08:42:41Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((helperWorkspacePointers) == null) { helperWorkspacePointers = new java.util.HashMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/6793/buggy-version/deeplearning4j.deeplearning4j-nn.src.main.java.org.deeplearning4j.nn.workspace.LayerWorkspaceMgr.java", "BodyUseAPI": [], "Fixed commit": "5286dfba677f8c6edd81d001e2f9a3e4f2a4f306", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2018-09-05T01:48:40Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.amazonaws.services.s3.model.S3ObjectSummary.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(organismKey.equals(com.erquiaga.organism.lambdas.ORGANISM_FOLDER))) { organismKey = organismKey.substring(0, ((organismKey.length()) - 5)); organismKey = organismKey.substring(com.erquiaga.organism.lambdas.ORGANISM_FOLDER.length(), organismKey.length()); organismList.add(organismKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V141/5497/buggy-version/OrganismService.src.main.java.com.erquiaga.organism.lambdas.ListOrganisms.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "8e1c5de44bbe73c8d17b8d5e64e3a5ad4edc5c12", "Url": "https://api.github.com/repos/BrendanErquiaga/Hazi", "Date": "2018-08-07T00:03:15Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(s.equals(\"[]\"))) { java.lang.String[] items = s.substring(1, ((s.length()) - 1)).split(\",\"); for (int i = 0; i < (items.length); ++i) { ret.add(org.apache.jackrabbit.oak.segment.tool.Replayer.ReplayItemIterator.urlDecode(items[i])); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6687/buggy-version/oak-segment-tar.src.main.java.org.apache.jackrabbit.oak.segment.tool.Replayer.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "f5ff18ca1773d1df181d09d765a4a3da80448263", "Url": "https://api.github.com/repos/ahanikel/jackrabbit-oak", "Date": "2018-09-20T18:04:26Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((messageAndOffset.offset()) < offset) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9111/buggy-version/kafka-rest.src.main.java.io.confluent.kafkarest.SimpleConsumerManager.java", "BodyUseAPI": [], "Fixed commit": "568801a102de218598c18039f7aac88e04e86845", "Url": "https://api.github.com/repos/scottnice/kafka-rest", "Date": "2018-09-20T17:14:47Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ch) == (newLine)) { output.emptyParsed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4433/buggy-version/src.main.java.com.univocity.parsers.csv.CsvParser.java", "BodyUseAPI": [], "Fixed commit": "be25471badbc76f735ba77a075410f0e69a43aed", "Url": "https://api.github.com/repos/uniVocity/univocity-parsers", "Date": "2018-03-14T11:40:34Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((party.update_party.cmd_info.length()) != 2) SendCommandToAll(party.update_party);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5228/buggy-version/serverModule.serverModule.Party_thread.java", "BodyUseAPI": ["serverModule.Party_thread.SendCommandToAll(party.update_party)"], "Fixed commit": "d0d3818f73734a28d19f99ece0a5ceec8047aae5", "Url": "https://api.github.com/repos/ViBeatApp/ViBeat", "Date": "2018-07-22T18:13:57Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minute > 0) || (seconds > 30)) { mTargetTime = ((minute * 60) * 1000) + (seconds * 1000); java.lang.String targetTimeText = getTimerInTimeFormat(mTargetTime); mTargetTimerView.setText((((getText(R.string.target)) + \": \") + targetTimeText)); mCountdownTimerView.setText(targetTimeText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8968/buggy-version/app.src.main.java.com.blogspot.futuretotsoln.voiceplank.ui.fragments.ChallengeModeFragment.java", "BodyUseAPI": [], "Fixed commit": "3bacc4278d03a883d826c45b09bf75861d5248d7", "Url": "https://api.github.com/repos/iPartha/VoicePlanck", "Date": "2018-10-26T16:15:46Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (remainingRows != 0) Jowil.Reports.Utils.WordUtils.addPageBreak(document);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6362/buggy-version/src.main.java.Jowil.Reports.Report5.java", "BodyUseAPI": [], "Fixed commit": "c18e95e3893eeaaddaebd994c6226d9adb12e00d", "Url": "https://api.github.com/repos/youssefhossam95/Jowil-Stats", "Date": "2018-09-24T07:51:54Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (remainingRows > 1) Jowil.Reports.Utils.WordUtils.addPageBreak(document);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6362/buggy-version/src.main.java.Jowil.Reports.Report5.java", "BodyUseAPI": [], "Fixed commit": "c18e95e3893eeaaddaebd994c6226d9adb12e00d", "Url": "https://api.github.com/repos/youssefhossam95/Jowil-Stats", "Date": "2018-09-24T07:51:54Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (remainingRows > 1) Jowil.Reports.Utils.WordUtils.addPageBreak(document);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6362/buggy-version/src.main.java.Jowil.Reports.Report5.java", "BodyUseAPI": [], "Fixed commit": "c18e95e3893eeaaddaebd994c6226d9adb12e00d", "Url": "https://api.github.com/repos/youssefhossam95/Jowil-Stats", "Date": "2018-09-24T07:51:54Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["etReceiver.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(receiver.equals(\"\"))) { db.collection(\"Messages\").document(key).set(mMsg).addOnSuccessListener(new com.google.android.gms.tasks.OnSuccessListener<java.lang.Void>() { @java.lang.Override public void onSuccess(java.lang.Void aVoid) { android.widget.Toast.makeText(getActivity(), \"Message is sent\", Toast.LENGTH_LONG).show(); clearFields(); } }); }else { android.widget.Toast.makeText(getActivity(), \"You must choose a Receiver.\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4142/buggy-version/app.src.main.java.com.example.daehe.login.ReadMessageFragment.java", "BodyUseAPI": [], "Fixed commit": "9d3dd54a8fdfc8ca1b0cbb198f7fc73a8ec4155a", "Url": "https://api.github.com/repos/jorgeluiscarrillo/pocket-planner", "Date": "2018-04-26T19:50:26Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((source.getLocations()) != null) && (!(source.getLocations().isEmpty()))) { for (com.sequenceiq.cloudbreak.api.model.v2.StorageLocationRequest storageLocationRequest : source.getLocations()) { storageLocations.getLocations().add(getConversionService().convert(storageLocationRequest, com.sequenceiq.cloudbreak.domain.StorageLocation.class)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8778/buggy-version/core.src.main.java.com.sequenceiq.cloudbreak.converter.FileSystemRequestToFileSystemConverter.java", "BodyUseAPI": ["com.sequenceiq.cloudbreak.api.model.FileSystemRequest.getLocations()"], "Fixed commit": "68533249618f05c966b2d759b0d5189d05890658", "Url": "https://api.github.com/repos/hortonworks/cloudbreak", "Date": "2018-06-12T15:02:54Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((processedSamples) == null) || (processedSamples.isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2359/buggy-version/audiokit.src.main.java.com.neo.audiokit.widget.MidiView.java", "BodyUseAPI": [], "Fixed commit": "7e5c1d5817b0f1baa9407b18239f48da103142d9", "Url": "https://api.github.com/repos/neocpp/AudioProject", "Date": "2018-07-26T16:15:05Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((orientation == (android.content.res.Configuration.ORIENTATION_PORTRAIT)) && (!(com.mycompany.john.pickaplace.activities.MainActivity.sChannelJoined))) { getSupportActionBar().hide(); initAnimation(); }else { if (!(com.mycompany.john.pickaplace.activities.MainActivity.sChannelJoined)) { joinChannel(); } mAppNameStyledImg.setVisibility(View.GONE); mProgressBar.setVisibility(View.GONE); mTopLayout.setVisibility(View.VISIBLE); mPickAPlaceBtn.setVisibility(View.VISIBLE); mLiveTrackingBtn.setVisibility(View.VISIBLE); mEnterCodeBtn.setVisibility(View.VISIBLE); mLiveBroadcastingBtn.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7419/buggy-version/app.src.main.java.com.mycompany.john.pickaplace.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ef5b151ecde2582fb79e896c2e7fc1598651180b", "Url": "https://api.github.com/repos/grigor-aramyan/pick-a-place", "Date": "2018-05-26T14:29:13Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(header.equals(\"csv\"))) newRows += importFileIntoDB(partInputStream, header, errors);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6504/buggy-version/src.servlets.ImportDataServlet.java", "BodyUseAPI": ["servlets.ImportDataServlet.importFileIntoDB(java.io.InputStream,java.lang.String,java.lang.StringBuilder)"], "Fixed commit": "100de5c5026158e171d0182432fe3fd09e48f3a6", "Url": "https://api.github.com/repos/MPDL/peopledb", "Date": "2018-01-18T09:52:41Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.revature.JavaTheHaatServerSide.repository.UsersRepo.findByUsername(user.getUsername())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((loginUser != null) && (user.getPassword().equals(loginUser.getPassword()))) { return loginUser; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3985/buggy-version/JavaTheHaat-ServerSide.src.main.java.com.revature.JavaTheHaatServerSide.service.UsersService.java", "BodyUseAPI": [], "Fixed commit": "281db54417307481fde4afee325388b8af0b810e", "Url": "https://api.github.com/repos/AliciaDouglas/JavaTheHaat-ServerSide", "Date": "2018-09-10T17:40:29Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scope) == null) { return username; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8889/buggy-version/src.main.java.edu.kit.datamanager.security.filter.JwtAuthenticationToken.java", "BodyUseAPI": [], "Fixed commit": "7267b07a68ad24ac4eef98f3d834e92a9964094f", "Url": "https://api.github.com/repos/kit-data-manager/service-base", "Date": "2018-09-20T12:05:59Z"},
{"Line": "=>3960", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ae.getActiveSensor()) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4185/buggy-version/megamek.src.megamek.common.Compute.java", "BodyUseAPI": [], "Fixed commit": "4e4abfad6b2528b8c5ab90a58eb8f5108cb77202", "Url": "https://api.github.com/repos/mkerensky/megamek", "Date": "2018-04-20T20:05:32Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= (patients.size())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1027/buggy-version/src._04_hospital.Hospital.java", "BodyUseAPI": [], "Fixed commit": "10f7e66e4ad92c35135c33a15d1ca8db6214dff5", "Url": "https://api.github.com/repos/SquawkyToucan/Encapsulation_and_Polymorphism", "Date": "2018-04-02T23:11:15Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(seedu.address.commons.util.FileUtil.isValidPath(savePath))) { throw new java.io.IOException(\"Invalid file path\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/131/buggy-version/src.main.java.seedu.address.model.attachment.Attachment.java", "BodyUseAPI": [], "Fixed commit": "3123346482746aa6ed0303f37495011d5d83f7e9", "Url": "https://api.github.com/repos/btzy/cs2103-taskmanager", "Date": "2018-10-30T14:54:08Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getMessage().getUnformattedText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (messageRawText.startsWith(\"Support session terminated.\")) { dfutils.utils.playerdata.PlayerStateHandler.diamondFireEventHandler(new dfutils.customevents.DiamondFireEvent.ExitSessionEvent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1258/buggy-version/src.main.java.dfutils.utils.playerdata.PlayerStateHandler.java", "BodyUseAPI": [], "Fixed commit": "f0288699df89633fb6ef6b941d596198edf51ccb", "Url": "https://api.github.com/repos/MCDiamondFire/DFTools", "Date": "2018-08-07T22:14:30Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["authentication.getAuthorities().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((roles.contains(UIGenericConstants.MAC_ADMIN_ROLE_STRING)) || (roles.contains(UIGenericConstants.MAC_USER_ROLE_STRING))) { model.addAttribute(\"macIdMap\", HomeController.LOGGED_IN_USER_MAC_MAP); model.addAttribute(\"jurisMapEdit\", HomeController.LOGGED_IN_USER_JURISDICTION_MAP); model.addAttribute(\"pccMapEdit\", HomeController.LOGGED_IN_USER_PCC_LOCATION_MAP); java.util.HashMap<java.lang.Integer, java.lang.String> roleMap = new java.util.HashMap<java.lang.Integer, java.lang.String>(); roleMap.put(4, \"MAC Admin\"); roleMap.put(6, \"MAC User\"); model.addAttribute(\"roleIds\", roleMap); java.util.HashMap<java.lang.Integer, java.lang.String> organizationMap = new java.util.HashMap<java.lang.Integer, java.lang.String>(); organizationMap.put(3, \"MAC\"); model.addAttribute(\"orgIds\", organizationMap); }else { userDefaults(model); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7213/buggy-version/src.main.java.com.archsystemsinc.rad.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "54a39da7276e3cea5febf87abbbbb70219a9cd92", "Url": "https://api.github.com/repos/Archsystemsllc/radui", "Date": "2018-05-08T06:09:23Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((menuSelection.equals(\"1\")) || (menuSelection.equals(\"2\"))) || (menuSelection.equals(\"3\"))) { improperInput = false; processQuery(input, menuSelection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7132/buggy-version/src.com.skilldistillery.filmquery.app.FilmQueryApp.java", "BodyUseAPI": ["com.skilldistillery.filmquery.app.FilmQueryApp.processQuery(java.util.Scanner,java.lang.String)"], "Fixed commit": "7fd6fb21dd96f9b916459f441c28afedf7fcb3fb", "Url": "https://api.github.com/repos/askyeking/FilmQueryProject", "Date": "2018-10-08T01:04:59Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((person) != null) { editTextUsername.setText(person.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6570/buggy-version/app.src.main.java.hft.wiinf.de.horario.view.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "4edc619a607d340250a25134771f0917b6fce81b", "Url": "https://api.github.com/repos/Horario/Horario", "Date": "2018-04-17T18:10:35Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((errorContinueCounter) > 3) { int reduceBatchSize = java.lang.Math.max(((canalConf.getBatchSize()) - 96), com.citic.source.canal.CanalSourceConstants.MIN_BATCH_SIZE); canalConf.setBatchSize(reduceBatchSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9808/buggy-version/src.main.java.com.citic.source.canal.CanalSource.java", "BodyUseAPI": [], "Fixed commit": "30b376080f57c0e0be9983d6fcb6d2986405c733", "Url": "https://api.github.com/repos/blacklovebear/flume-canal-source", "Date": "2018-05-21T11:41:22Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ecToSend.equals(\"no_ec\"))) { if (p[i].local) { biosyndesign.core.managers.Protein[] proteins = biosyndesign.core.managers.PartsManager.cInt.getProteins(ecToSend); if ((proteins.length) > 0) { protein = proteins[0]; } }else { java.util.ArrayList<java.lang.String> zp = saveReactionAndReturnProteins(p[i].id, ecToSend); if ((zp.size()) > 0) { protein = new biosyndesign.core.managers.Protein(zp.get(0), \"\", \"\", \"\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6063/buggy-version/src.biosyndesign.core.managers.PartsManager.java", "BodyUseAPI": ["biosyndesign.core.managers.PartsManager.saveReactionAndReturnProteins(p[i].id,java.lang.String)", "biosyndesign.core.managers.SBOLInterface.getProteins(java.lang.String)"], "Fixed commit": "3c1ff72e0fa6826bdaf4f8974526328eba666517", "Url": "https://api.github.com/repos/ramzan1990/BiosynDesign", "Date": "2018-07-18T08:57:42Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAuth.getCurrentUser()) != null) { }else { android.content.Intent registrationPage = new android.content.Intent(this, mini.com.baristaanalytics.Registration.RegisterCustomerActivity.class); startActivity(registrationPage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5822/buggy-version/app.src.main.java.mini.com.baristaanalytics.Okoa.OkoaCoffeeDetails.java", "BodyUseAPI": [], "Fixed commit": "d4057bbcc24b96cdac95bfb46d21a32f3d4a5504", "Url": "https://api.github.com/repos/Barista-Analytics/Barista-Analytics", "Date": "2018-10-12T02:57:32Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((handleLivingEntity.getClass().equals(getNMSClass(\"EntitySpider\"))) || (handleLivingEntity.getClass().equals(\"EntityCaveSpider\"))) { targetSelectorR((s++), pathfinderCreator.createPathfinderNearestAttackableTargetSpider(handleLivingEntity)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6007/buggy-version/src.de.encryptdev.bossmode.boss.path.BossPathfinderEdited.java", "BodyUseAPI": ["de.encryptdev.bossmode.boss.path.PathfinderCreator.createPathfinderNearestAttackableTargetSpider(java.lang.Object)", "de.encryptdev.bossmode.boss.path.BossPathfinderEdited.targetSelectorR(int,pathfinderCreator.createPathfinderNearestAttackableTargetSpider(handleLivingEntity))"], "Fixed commit": "2553d3397a085c3a5e790dccdb67ba1501305f8f", "Url": "https://api.github.com/repos/EncryptDev/bossmode", "Date": "2018-05-19T21:34:27Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((handleLivingEntity.getClass().equals(getNMSClass(\"EntitySpider\"))) || (handleLivingEntity.getClass().equals(\"EntityCaveSpider\"))) { targetSelectorR((s++), pathfinderCreator.createPathfinderNearestAttackableTargetSpider(handleLivingEntity)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6007/buggy-version/src.de.encryptdev.bossmode.boss.path.BossPathfinderEdited.java", "BodyUseAPI": ["de.encryptdev.bossmode.boss.path.PathfinderCreator.createPathfinderNearestAttackableTargetSpider(java.lang.Object)", "de.encryptdev.bossmode.boss.path.BossPathfinderEdited.targetSelectorR(int,pathfinderCreator.createPathfinderNearestAttackableTargetSpider(handleLivingEntity))"], "Fixed commit": "2553d3397a085c3a5e790dccdb67ba1501305f8f", "Url": "https://api.github.com/repos/EncryptDev/bossmode", "Date": "2018-05-19T21:34:27Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((outputDirectory != null) && (!(outputDirectory.exists()))) { if (!(outputDirectory.mkdirs())) { throw new org.apache.maven.plugin.MojoExecutionException(((\"Create directory[\" + (apiSource.getOutputPath())) + \"] for output failed.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8556/buggy-version/src.main.java.com.github.kongchen.swagger.docgen.mavenplugin.ApiDocumentMojo.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "efc2d6f7f8d898de91dd1db3a5e09bfa42bf84b2", "Url": "https://api.github.com/repos/leusonmario/swagger-maven-plugin", "Date": "2013-07-16T09:14:54Z"},
{"Line": "=>1569", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.codePointAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cp <= 255) && (cp > (-1))) { frequencies[ciphertext.codePointAt(pos)][column] += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/42/buggy-version/src.main.java.burp.BurpExtender.java", "BodyUseAPI": [], "Fixed commit": "d172cfe2b2c36a86a68b101e0072f56939a1e6a5", "Url": "https://api.github.com/repos/PortSwigger/hackvertor", "Date": "2018-10-05T12:31:48Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!(tmpdir.canWrite())) || (!(tmpdir.canExecute()))) throw new java.lang.RuntimeException(\"Unable to load AndHook due to missing cache directory\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9730/buggy-version/lib.src.main.java.andhook.lib.AndHook.java", "BodyUseAPI": [], "Fixed commit": "cb07f9fb5d114ccf0e176fadf52cf48d793329e0", "Url": "https://api.github.com/repos/asLody/AndHook", "Date": "2018-04-15T16:11:53Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getIntent().getExtras()) != null) { movie = getIntent().getExtras().getParcelable(MainActivity.MOVIE_PARCEL); loadDetails(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1605/buggy-version/app.src.main.java.com.drainey.popularmovies.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "732343cd92b0fcec089d7400b634928b34637053", "Url": "https://api.github.com/repos/rainman-d/popular-movies-project", "Date": "2018-05-22T03:45:47Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ineedwhite.diancan.dao.dao.UserDao.selectUserByUsrId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.apache.commons.lang3.StringUtils.equals(userDo.getMember_level(), LevelMappingEnum.NVIP.getVflag())) && (newAccPoints >= (com.ineedwhite.diancan.common.constants.BizOptions.BECOME_VIP))) { resp.put(\"vip\", \"1\"); }else { resp.put(\"vip\", \"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1691/buggy-version/diancan-biz.src.main.java.com.ineedwhite.diancan.biz.impl.RechargeServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "27e80bdcaf653fd89e9d77eef410d26bb1e72748", "Url": "https://api.github.com/repos/Ruan-Xin/diancan", "Date": "2018-03-16T12:04:07Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataTypes.contains(dataType)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2998/buggy-version/src.main.java.com.github.kongchen.swagger.docgen.mustache.OutputTemplate.java", "BodyUseAPI": [], "Fixed commit": "fd7b8a9ac91e34e45da2e2d6e6ae871da820468c", "Url": "https://api.github.com/repos/leusonmario/swagger-maven-plugin", "Date": "2013-07-31T13:30:55Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((strings[0]) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7785/buggy-version/app.src.main.java.com.example.android.travelwallet.utils.LoadPlacePhotoAsyncTask.java", "BodyUseAPI": [], "Fixed commit": "28952219d356ac3ab13d0dd3a1d7f213bac4be96", "Url": "https://api.github.com/repos/guino000/Projeto-Capstone", "Date": "2018-10-01T17:44:32Z"},
{"Line": "=>924", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.winsun.fruitmix.util.FileUtil.getMIMEType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type.equalsIgnoreCase(\"*/*\")) type = \"text/*\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4986/buggy-version/app.src.main.java.com.winsun.fruitmix.util.FileUtil.java", "BodyUseAPI": [], "Fixed commit": "6246846e6e21c106a1aed9c44faf396168330eb3", "Url": "https://api.github.com/repos/wisnuc/fruitmix-android", "Date": "2018-07-31T02:35:04Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (aWidget != (device.mPreviousWidget)) { org.mozilla.vrbrowser.MotionEventGenerator.generateEvent(aWidget, device, MotionEvent.ACTION_HOVER_ENTER, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4050/buggy-version/app.src.common.shared.org.mozilla.vrbrowser.MotionEventGenerator.java", "BodyUseAPI": ["org.mozilla.vrbrowser.MotionEventGenerator.generateEvent(org.mozilla.vrbrowser.Widget,org.mozilla.vrbrowser.MotionEventGenerator.Device,MotionEvent.ACTION_HOVER_ENTER,boolean)"], "Fixed commit": "d5b05b7315bace06e0cf7acc314427f2a2733568", "Url": "https://api.github.com/repos/MozillaReality/FirefoxReality", "Date": "2018-06-08T16:36:07Z"},
{"Line": "=>646", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.detail) == (org.eclipse.swt.SWT.ARROW)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8907/buggy-version/src.main.java.eu.transkribus.swt_gui.mainwidget.TrpMainWidgetView.java", "BodyUseAPI": [], "Fixed commit": "f8487f0eed02c782b94a7bf75442e015be5ad5bc", "Url": "https://api.github.com/repos/Transkribus/TranskribusSwtGui", "Date": "2018-10-03T10:07:09Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fatherDTO.getDate()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5925/buggy-version/src.main.java.pl.marcinkulwicki.service.FatherService.java", "BodyUseAPI": [], "Fixed commit": "80906179beebafc8803731d37a4a7f7ad7eec255", "Url": "https://api.github.com/repos/MarcinKulwicki/FamilyApp", "Date": "2018-09-13T22:03:33Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GameObjectManager.instance.findAnchor()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(anchor.isCatching)) { anchor.isCatching = true; anchor.isDropping = true; anchor.ropeDirection.set(anchor.position); anchor.movingDirection.set(anchor.position.subtract(player.getPosition()).normalize().multiply(3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7082/buggy-version/src.GameCanvas.java", "BodyUseAPI": [], "Fixed commit": "14739316b4889a90e0d07eb2d050a29fb1f4d2b7", "Url": "https://api.github.com/repos/chung3011/feed-me", "Date": "2018-07-02T10:04:14Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (builder.toString().contains(\",\")) { builder.deleteCharAt(builder.lastIndexOf(\",\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2019/buggy-version/aurkitu-maven-plugin.src.main.java.com.michaelhradek.aurkitu.core.output.EnumDeclaration.java", "BodyUseAPI": ["java.lang.StringBuilder.lastIndexOf(java.lang.String)", "java.lang.StringBuilder.deleteCharAt(int)"], "Fixed commit": "06d2b3c2dd00e146c73f0b863e2bf1437c35a39a", "Url": "https://api.github.com/repos/mhradek/aurkitu", "Date": "2018-10-08T20:48:53Z"},
{"Line": "=>839", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (typeDeclaration instanceof java.lang.reflect.GenericArrayType) { final java.lang.reflect.GenericArrayType genericArrayType = ((java.lang.reflect.GenericArrayType) (typeDeclaration)); return org.javaruntype.type.TypeUtil.resolveEquivalentTypeParameterByDeclaration(originalType, genericArrayType.getGenericComponentType(), (arrayDimensions + 1)); }else if ((typeDeclaration instanceof java.lang.Class) && (((java.lang.Class<?>) (typeDeclaration)).isArray())) { final java.lang.Class<?> concreteArrayType = ((java.lang.Class<?>) (typeDeclaration)); return org.javaruntype.type.TypeUtil.resolveEquivalentTypeParameterByDeclaration(originalType, concreteArrayType.getComponentType(), (arrayDimensions + 1)); }else { org.javaruntype.type.Type<?> baseType = originalType; if (baseType.isArray()) { org.javaruntype.type.TypeRegistry typeRegistry = org.javaruntype.type.TypeRegistry.getInstance(); baseType = typeRegistry.getType(baseType.getComponentClass(), baseType.getTypeParametersArray(), arrayDimensions); } final org.javaruntype.type.Type<?> parameterizedTypeDeclarationArgumentType = org.javaruntype.type.TypeUtil.resolveExtendedTypeByDeclaration(baseType, typeDeclaration, arrayDimensions); return new org.javaruntype.type.StandardTypeParameter(parameterizedTypeDeclarationArgumentType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8070/buggy-version/src.main.java.org.javaruntype.type.TypeUtil.java", "BodyUseAPI": ["org.javaruntype.type.TypeUtil.resolveExtendedTypeByDeclaration(org.javaruntype.type.Type<?>,java.lang.reflect.Type,int)"], "Fixed commit": "68303d2949e4fe5acd5d4716535738629021b4b0", "Url": "https://api.github.com/repos/LGougerot/javaruntype", "Date": "2018-10-02T08:01:58Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position.equals(\"name\")) { good.setName(value); }else if (position.equals(\"price\")) { good.setPrice(java.lang.Double.parseDouble(value)); }else if (position.equals(\"stock\")) { good.setStock(java.lang.Integer.parseInt(value)); }else if (position.equals(\"recommed\")) { good.setRecommed(java.lang.Integer.parseInt(value)); }else if (position.equals(\"status\")) { good.setStatus(java.lang.Integer.parseInt(value)); }else if (position.equals(\"thumbnail\")) { good.setThumbnail(value); }else if (position.equals(\"video\")) { good.setVideo(value); }else if (position.equals(\"gdproperty\")) { good.setGdproperty(value); }else if (position.equals(\"introduce\")) { good.setIntroduce(value); }else if (position.equals(\"homerecommend\")) { good.setHomerecommend(java.lang.Integer.parseInt(value)); }else if (position.equals(\"discount\")) { good.setDiscount(java.lang.Integer.parseInt(value)); }else if (position.equals(\"discountrate\")) { good.setDiscountrate(java.lang.Integer.parseInt(value)); }else if (position.equals(\"funsnacks\")) { good.setFunsnacks(java.lang.Integer.parseInt(value)); }else if (position.equals(\"freshfruit\")) { good.setFreshfruit(java.lang.Integer.parseInt(value)); }else { return com.cjyong.goule.main.MyJsonResult.getErrorResult(\"\u66f4\u6539\u5c5e\u6027\u4e0d\u652f\u6301\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7164/buggy-version/src.main.java.com.cjyong.goule.main.service.AdminService.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "224a66fefd5bfc648288e8b2917f99ac6235cb1d", "Url": "https://api.github.com/repos/cai123nb/goule", "Date": "2018-05-12T12:58:20Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((records.size()) == 0) { done = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/39/buggy-version/twister2.terasort.src.main.java.edu.iu.dsc.tws.apps.terasort.TeraSortContainer3.java", "BodyUseAPI": [], "Fixed commit": "9e73c17ac79cd0dee229d883ebd469ba0faddc92", "Url": "https://api.github.com/repos/DSC-SPIDAL/twister2applications", "Date": "2018-03-19T18:31:38Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (user != null) this.user = log.reloadUser(user); else this.user = user;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3916/buggy-version/DataBase_WebStore.src.view.dialog.ProductDialog.java", "BodyUseAPI": [], "Fixed commit": "a21af45abff3e3e910d6e73effbef5d2765a6433", "Url": "https://api.github.com/repos/pmate955/WebStore_DatabaseCourse", "Date": "2018-05-15T22:29:09Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c.selectedCourse) == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5599/buggy-version/clientSide.Student.java", "BodyUseAPI": [], "Fixed commit": "b59d420dc0c1407442694d96b1510e862daed8b2", "Url": "https://api.github.com/repos/SunnyNagam/LearningPlatform", "Date": "2018-04-12T06:02:22Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c.selectedCourse) == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5599/buggy-version/clientSide.Student.java", "BodyUseAPI": [], "Fixed commit": "b59d420dc0c1407442694d96b1510e862daed8b2", "Url": "https://api.github.com/repos/SunnyNagam/LearningPlatform", "Date": "2018-04-12T06:02:22Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pa.assignmnetsList.isSelectionEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5599/buggy-version/clientSide.Student.java", "BodyUseAPI": [], "Fixed commit": "b59d420dc0c1407442694d96b1510e862daed8b2", "Url": "https://api.github.com/repos/SunnyNagam/LearningPlatform", "Date": "2018-04-12T06:02:22Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c.selectedCourse) == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5599/buggy-version/clientSide.Student.java", "BodyUseAPI": [], "Fixed commit": "b59d420dc0c1407442694d96b1510e862daed8b2", "Url": "https://api.github.com/repos/SunnyNagam/LearningPlatform", "Date": "2018-04-12T06:02:22Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bernhard.scharrer.battlemobs.mobs.MobListener.getMobTier(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tier >= (bernhard.scharrer.battlemobs.util.Tier.TIER_1_3)) { lentity.setVelocity(lentity.getEyeLocation().toVector().subtract(p.getLocation().toVector()).normalize().multiply(bernhard.scharrer.battlemobs.mobs.spider.SpiderListener.EYE_OF_SPIDER_KNOCKBACK)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3546/buggy-version/src.bernhard.scharrer.battlemobs.mobs.spider.SpiderListener.java", "BodyUseAPI": [], "Fixed commit": "b6e9b67e0ece9e14c2a70dacab8fb3b6726ce613", "Url": "https://api.github.com/repos/BattleMobs/BattleMobsAlpha", "Date": "2018-02-07T20:25:42Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.time.LocalDateTime.getHour()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hour == 0) { hour = 12; timeAMPM = \"AM\"; }else if (hour >= 12) { hour = hour % 12; timeAMPM = \"PM\"; }else { timeAMPM = \"AM\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7320/buggy-version/src.main.java.codeu.model.data.Utils.java", "BodyUseAPI": [], "Fixed commit": "ea7cfc15dbcfd8caf62759fc860ff29bbf7ee5b4", "Url": "https://api.github.com/repos/AaronGarcia97/CodeU-Spring-2018-T9", "Date": "2018-07-14T21:51:59Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.time.LocalDateTime.getMinute()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (minute < 10) { strMinute = \"0\" + minute; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7320/buggy-version/src.main.java.codeu.model.data.Utils.java", "BodyUseAPI": [], "Fixed commit": "ea7cfc15dbcfd8caf62759fc860ff29bbf7ee5b4", "Url": "https://api.github.com/repos/AaronGarcia97/CodeU-Spring-2018-T9", "Date": "2018-07-14T21:51:59Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor.getValue(org.jetbrains.mps.openapi.model.SNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof java.lang.String) { value = type.fromString(((java.lang.String) (value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/684/buggy-version/core.kernel.source.jetbrains.mps.smodel.SNodeAccessUtilImpl.java", "BodyUseAPI": [], "Fixed commit": "a89beea9ef2c9fc4af722cc2abee550b3f8c1a42", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2018-10-23T20:16:28Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trimAfter) { line = line.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9048/buggy-version/app.src.main.java.com.draguve.droidducky.DuckConverter.java", "BodyUseAPI": [], "Fixed commit": "a51525cb5e7fdd874b61f9690220cf58e0c7f886", "Url": "https://api.github.com/repos/draguve/droidducky-app", "Date": "2018-01-05T21:48:53Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (weights != null) n.gCost *= -(weights[y][x]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/626/buggy-version/src.AStar.java", "BodyUseAPI": [], "Fixed commit": "d89cc9a8c7993f03dc4210fed7ea9dce9e818f63", "Url": "https://api.github.com/repos/flntzr/zpifub", "Date": "2018-07-08T12:52:26Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["AStar.getNodeById(AStarNode,java.util.List<AStarNode>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (existingNode == null) openList.add(n);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/626/buggy-version/src.AStar.java", "BodyUseAPI": [], "Fixed commit": "d89cc9a8c7993f03dc4210fed7ea9dce9e818f63", "Url": "https://api.github.com/repos/flntzr/zpifub", "Date": "2018-07-08T12:52:26Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.posY) < 0.0) { this.setDead(); }else if ((this.posY) > (((this.worldObj.provider) instanceof micdoodle8.mods.galacticraft.api.world.IExitHeight ? ((micdoodle8.mods.galacticraft.api.world.IExitHeight) (this.worldObj.provider)).getYCoordinateToTeleport() : 1200) + 100)) { for (net.minecraft.entity.Entity e : this.getPassengers()) { if (e instanceof net.minecraft.entity.player.EntityPlayerMP) { micdoodle8.mods.galacticraft.core.entities.player.GCPlayerStats stats = micdoodle8.mods.galacticraft.core.entities.player.GCPlayerStats.get(e); if (stats.isUsingPlanetSelectionGui()) { this.setDead(); } }else this.setDead(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7712/buggy-version/src.main.java.micdoodle8.mods.galacticraft.api.prefab.entity.EntitySpaceshipBase.java", "BodyUseAPI": [], "Fixed commit": "88e8dd71834e6ceb373949209b019a4d6e826c1e", "Url": "https://api.github.com/repos/MJRLegends/Galacticraft", "Date": "2018-01-26T18:06:48Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (module.getMetadata().isDefault()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6323/buggy-version/src.main.java.com.chattriggers.ctjs.modules.gui.ModulesGui.java", "BodyUseAPI": [], "Fixed commit": "dc82eb6cb2ee7bb7cceff3b196b9899539453a20", "Url": "https://api.github.com/repos/ChatTriggers/ct.js", "Date": "2018-05-31T00:40:39Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (message instanceof net.dv8tion.jda.core.entities.impl.DataMessage) { return message.getAuthor(); }else { return jda.getSelfUser(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6396/buggy-version/src.main.java.com.tazzie02.tazbotdiscordlib.impl.MessageLoggerImpl.java", "BodyUseAPI": ["net.dv8tion.jda.core.entities.Message.getAuthor()"], "Fixed commit": "b8729f665820320c7478a4ebbf5aa91039d22596", "Url": "https://api.github.com/repos/Tazzie02/TazbotDiscordLib", "Date": "2018-03-29T06:01:58Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.scglab.common.listadapter.FlexAdapter.2.getViewPosition(android.view.View)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (position == (-1)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4071/buggy-version/list-adapter.src.main.java.com.scglab.common.listadapter.FlexAdapter.java", "BodyUseAPI": [], "Fixed commit": "529e08ba62f4246f48ed6f526c7805c5cf2e28ad", "Url": "https://api.github.com/repos/SungHunJung/SCGLab", "Date": "2018-05-07T03:06:10Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.scglab.common.listadapter.FlexAdapter.1.getViewPosition(android.view.View)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (position == (-1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4071/buggy-version/list-adapter.src.main.java.com.scglab.common.listadapter.FlexAdapter.java", "BodyUseAPI": [], "Fixed commit": "529e08ba62f4246f48ed6f526c7805c5cf2e28ad", "Url": "https://api.github.com/repos/SungHunJung/SCGLab", "Date": "2018-05-07T03:06:10Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (AlarmHelper.ACTION_BLOG_NOTIFICATION.equals(intent.getAction())) { new com.github.amarradi.blogalert.FeedChecker(context).check(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7966/buggy-version/app.src.main.java.com.github.amarradi.blogalert.receivers.BootReceiver.java", "BodyUseAPI": [], "Fixed commit": "343ea4c81c2aeabf549889b6b3b875ffe1b77ffa", "Url": "https://api.github.com/repos/stdx/blogalert", "Date": "2018-07-22T12:31:34Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cells) == null) { lock.lock(); try { if ((cells) == null) { cells = new java.util.concurrent.atomic.AtomicIntegerArray(new int[io.github.pr0methean.betterrandom.prng.CellularAutomatonRandom.AUTOMATON_LENGTH]); } } finally { lock.unlock(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8188/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.CellularAutomatonRandom.java", "BodyUseAPI": [], "Fixed commit": "04ba336919774ff9399a290317e39dc9722a0857", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2018-05-09T08:00:24Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mercadopago.android.px.internal.util.ResourceUtil.getIssuerImage(view.getContext(),card.issuerId)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (issuerResource != 0) { com.squareup.picasso.Picasso.with(view.getContext()).load(issuerResource).into(issuerLogo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1020/buggy-version/px-checkout.src.main.java.com.mercadopago.android.px.internal.features.onetap.components.SavedCardFragment.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(view.getContext()).load(int)", "com.squareup.picasso.Picasso.with(view.getContext()).load(issuerResource).into(android.widget.ImageView)"], "Fixed commit": "678c40fb79bb03268aceda80f5f81bf9c9ef9e70", "Url": "https://api.github.com/repos/mercadopago/px-android", "Date": "2018-10-17T14:31:54Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mercadopago.android.px.internal.util.ResourceUtil.getCardImage(view.getContext(),card.paymentMethodId)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (paymentMethodResource != 0) { com.squareup.picasso.Picasso.with(view.getContext()).load(paymentMethodResource).into(paymentMethodIcon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1020/buggy-version/px-checkout.src.main.java.com.mercadopago.android.px.internal.features.onetap.components.SavedCardFragment.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(view.getContext()).load(int)", "com.squareup.picasso.Picasso.with(view.getContext()).load(paymentMethodResource).into(android.widget.ImageView)"], "Fixed commit": "678c40fb79bb03268aceda80f5f81bf9c9ef9e70", "Url": "https://api.github.com/repos/mercadopago/px-android", "Date": "2018-10-17T14:31:54Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((sb.length()) >= 2) && (sb.substring(((sb.length()) - 2), sb.length()).equalsIgnoreCase(\", \"))) return sb.substring(0, ((sb.length()) - 2)).toString(); else return sb.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1073/buggy-version/android.Lexithymia.app.src.main.java.com.example.kj.lexithymia.Reducer.java", "BodyUseAPI": ["java.lang.String.toString()", "java.lang.StringBuilder.toString()", "java.lang.StringBuilder.length()", "java.lang.StringBuilder.substring(int,int)"], "Fixed commit": "59ac17143f0dd234f46d65e4aeabdc4dbb987df4", "Url": "https://api.github.com/repos/kowaraj/misc", "Date": "2018-09-20T17:17:51Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentById(R.id.contentFrame)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fragment == null) { fragment = com.example.mynotes.addeditnote.AddEditNoteFragment.newInstance(noteId); getSupportFragmentManager().beginTransaction().add(R.id.contentFrame, fragment, AddEditNoteFragment.TAG).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/986/buggy-version/app.src.main.java.com.example.mynotes.addeditnote.AddEditNoteActivity.java", "BodyUseAPI": [], "Fixed commit": "bfaa57fc6004540758eaea121c69faf89b087430", "Url": "https://api.github.com/repos/mateusgrb/my-notes", "Date": "2018-01-28T16:07:22Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentById(R.id.contentFrame)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fragment == null) { fragment = com.example.mynotes.notes.NotesFragment.newInstance(); getSupportFragmentManager().beginTransaction().add(R.id.contentFrame, fragment, NotesFragment.TAG).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/986/buggy-version/app.src.main.java.com.example.mynotes.notes.NotesActivity.java", "BodyUseAPI": [], "Fixed commit": "bfaa57fc6004540758eaea121c69faf89b087430", "Url": "https://api.github.com/repos/mateusgrb/my-notes", "Date": "2018-01-28T16:07:22Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["apps.example.com.firebasegroupchat.models.MessageData.getMessage(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (message.getName().equals(AllMethods.name)) { holder.tvTitle.setText(\"You\"); holder.tvTitle.setGravity(Gravity.RIGHT); holder.tvTitle.setBackgroundColor(android.graphics.Color.parseColor(\"#EF9E73\")); }else { holder.tvTitle.setText(message.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2393/buggy-version/app.src.main.java.apps.example.com.firebasegroupchat.adapter.MessageAdapter.java", "BodyUseAPI": ["apps.example.com.firebasegroupchat.models.Message.getName()", "android.widget.TextView.setText(message.getName())"], "Fixed commit": "7ca9487be979a14d9f33a07f7ddd42e1429118ed", "Url": "https://api.github.com/repos/mrasif/FirebaseGroupChat", "Date": "2018-02-15T10:41:07Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.N)) { android.preference.PreferenceCategory preferenceCategory = ((android.preference.PreferenceCategory) (findPreference(\"pref_key_storage_settings\"))); android.preference.SwitchPreference switchPreference = ((android.preference.SwitchPreference) (findPreference(\"notifications_style\"))); preferenceCategory.removePreference(switchPreference); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1807/buggy-version/app.src.main.java.com.mayor2k.spark.UI.Activities.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "d2db989fde02fce957c07a512cdd688754c37fb0", "Url": "https://api.github.com/repos/Mayor2k/Spark", "Date": "2018-09-11T18:06:01Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i + 1) > (count)) { if (com.qiyei.heap.MaxPQ.less(k, i)) { com.qiyei.heap.MaxPQ.exch(k, i); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9812/buggy-version/src.com.qiyei.heap.MaxPQ.java", "BodyUseAPI": ["com.qiyei.heap.MaxPQ.less(int,int)", "com.qiyei.heap.MaxPQ.exch(int,int)"], "Fixed commit": "f96ca02ecbc2571114e646477e51ef905d6bf4a6", "Url": "https://api.github.com/repos/qiyei2015/Algorithms", "Date": "2018-04-16T15:04:53Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.qiyei.heap.MaxPQ.less(k, i)) || (com.qiyei.heap.MaxPQ.less(k, (i + 1)))) { if (com.qiyei.heap.MaxPQ.less(i, (i + 1))) { com.qiyei.heap.MaxPQ.exch(k, (i + 1)); sink((i + 1)); }else { com.qiyei.heap.MaxPQ.exch(k, i); sink(i); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9812/buggy-version/src.com.qiyei.heap.MaxPQ.java", "BodyUseAPI": ["com.qiyei.heap.MaxPQ.exch(int,int)", "com.qiyei.heap.MaxPQ<T>.sink(int)", "com.qiyei.heap.MaxPQ.less(int,int)", "com.qiyei.heap.MaxPQ<T>.sink(int)", "com.qiyei.heap.MaxPQ.exch(int,int)"], "Fixed commit": "f96ca02ecbc2571114e646477e51ef905d6bf4a6", "Url": "https://api.github.com/repos/qiyei2015/Algorithms", "Date": "2018-04-16T15:04:53Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["serverUnit.Node.get_instance().server.log.get_lastLogIndex()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((serverUnit.Node.get_instance().server.log.get_logByIndex(N).term) == (serverUnit.Node.get_instance().server.currentTerm)) { serverUnit.Node.get_instance().server.log.commitIndex = java.lang.Math.max(N, serverUnit.Node.get_instance().server.log.commitIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2742/buggy-version/src.main.java.raftProcedureUnit.ApplyLogThread.java", "BodyUseAPI": ["java.lang.Math.max(int,serverUnit.Node.get_instance().server.log.commitIndex)"], "Fixed commit": "fa4ce655907df0eaad4050eae4115844a5a1acb8", "Url": "https://api.github.com/repos/zakheav/raft", "Date": "2018-10-08T03:09:05Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((unfoldPosition) != position) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8839/buggy-version/app.src.main.java.com.example.naruto.treestructrue.adapter.TreeViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "342e374717959c253a33e3e2da021606bda3017d", "Url": "https://api.github.com/repos/narutoyang93/TreeStructrue", "Date": "2018-07-23T11:06:59Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.widget.RecyclerView.findViewHolderForAdapterPosition(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (unfoldItemViewHolder != null) { int branchCount = treeItemList.get(position).getBranchCount(); if (branchCount > 0) { for (int i = 0; i < branchCount; i++) { com.example.naruto.treestructrue.adapter.TreeViewAdapter adapter = ((com.example.naruto.treestructrue.adapter.TreeViewAdapter) (unfoldItemViewHolder.recyclerView.getAdapter())); if (adapter != null) { adapter.foldAll(); } } } unfoldItemViewHolder.recyclerView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8839/buggy-version/app.src.main.java.com.example.naruto.treestructrue.adapter.TreeViewAdapter.java", "BodyUseAPI": ["android.support.v7.widget.RecyclerView.setVisibility(View.GONE)", "android.support.v7.widget.RecyclerView.getAdapter()"], "Fixed commit": "342e374717959c253a33e3e2da021606bda3017d", "Url": "https://api.github.com/repos/narutoyang93/TreeStructrue", "Date": "2018-07-23T11:06:59Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (\"jar\".equals(configUrl.getProtocol())) { existHome = java.nio.file.Paths.get(new java.net.URI(configUrl.getPath())).getParent().getParent(); org.exist.util.ConfigurationHelper.LOG.warn((config + \" file was found on the classpath, but inside a Jar file! Derived EXIST_HOME from Jar's parent folder: {}\"), existHome); }else { existHome = java.nio.file.Paths.get(configUrl.toURI()).getParent(); org.exist.util.ConfigurationHelper.LOG.debug(\"Got EXIST_HOME from classpath: {}\", existHome.toAbsolutePath().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/948/buggy-version/src.org.exist.util.ConfigurationHelper.java", "BodyUseAPI": ["java.nio.file.Path.getParent()", "java.nio.file.Paths.get(java.net.URI)", "java.nio.file.Path.getParent()", "java.net.URL.toURI()", "java.nio.file.Path.getParent()", "java.nio.file.Paths.get(java.net.URI)", "java.net.URL.getPath()"], "Fixed commit": "0cbcc8a6747cf763e2b3d52bbb572bae17731753", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2018-07-13T11:42:02Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { if (!(Settings.System.canWrite(getApplicationContext()))) { android.content.Intent intent = new android.content.Intent(android.provider.Settings.ACTION_MANAGE_WRITE_SETTINGS, android.net.Uri.parse((\"package:\" + (getPackageName())))); startActivityForResult(intent, 200); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3504/buggy-version/app.src.main.java.com.av.whereareyou.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "9a7f94f58a6d6b3cf0f0a4b1f8dd1eefdd5bfb79", "Url": "https://api.github.com/repos/mobdev2018/WhereAreYou", "Date": "2018-10-04T12:58:19Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.content.ContextCompat.checkSelfPermission(com.av.whereareyou.LoginActivity,Manifest.permission.WRITE_EXTERNAL_STORAGE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (writeExternalStoragePermission != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { listPermissionsNeeded.add(Manifest.permission.WRITE_EXTERNAL_STORAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3504/buggy-version/app.src.main.java.com.av.whereareyou.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "9a7f94f58a6d6b3cf0f0a4b1f8dd1eefdd5bfb79", "Url": "https://api.github.com/repos/mobdev2018/WhereAreYou", "Date": "2018-10-04T12:58:19Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.content.ContextCompat.checkSelfPermission(com.av.whereareyou.LoginActivity,Manifest.permission.WRITE_SETTINGS)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (writeSettingsPermission != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { listPermissionsNeeded.add(Manifest.permission.WRITE_SETTINGS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3504/buggy-version/app.src.main.java.com.av.whereareyou.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "9a7f94f58a6d6b3cf0f0a4b1f8dd1eefdd5bfb79", "Url": "https://api.github.com/repos/mobdev2018/WhereAreYou", "Date": "2018-10-04T12:58:19Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getDaoFactory().getLogListDao().findByPrimaryKey(1L).orElse(se.blinfo.navet.file.domain.impl.DefaultLogList)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (result.getEntries().isEmpty()) { result.setEntries(getDaoFactory().getLogEntryDao().findAll()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7225/buggy-version/navet-file-core.src.main.java.se.blinfo.navet.file.service.command.log.GetLogListCommand.java", "BodyUseAPI": ["se.blinfo.navet.file.domain.LogList.setEntries(getDaoFactory().getLogEntryDao().findAll())"], "Fixed commit": "2f04512647438e7ba2a3b751ccf5823831d6fadb", "Url": "https://api.github.com/repos/blinfo/NavetFile", "Date": "2018-01-24T15:17:04Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 == m) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5498/buggy-version/hutool-core.src.main.java.cn.hutool.core.math.Combination.java", "BodyUseAPI": [], "Fixed commit": "5dad1687b7f890784017510068cb45fcfc6ed505", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2018-03-04T12:53:38Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.world.isRemote)) { notifyUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2751/buggy-version/src.main.java.com.mart.display.common.tile.TileDisplay.java", "BodyUseAPI": [], "Fixed commit": "3562926566b12553f34eae5a8c57b6987b3ae107", "Url": "https://api.github.com/repos/Martacus/Display", "Date": "2018-02-22T21:46:59Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.world.isRemote)) { notifyUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2751/buggy-version/src.main.java.com.mart.display.common.tile.TileDisplay.java", "BodyUseAPI": [], "Fixed commit": "3562926566b12553f34eae5a8c57b6987b3ae107", "Url": "https://api.github.com/repos/Martacus/Display", "Date": "2018-02-22T21:46:59Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.world.isRemote)) { notifyUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2751/buggy-version/src.main.java.com.mart.display.common.tile.TileDisplay.java", "BodyUseAPI": [], "Fixed commit": "3562926566b12553f34eae5a8c57b6987b3ae107", "Url": "https://api.github.com/repos/Martacus/Display", "Date": "2018-02-22T21:46:59Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.world.isRemote)) { notifyUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2751/buggy-version/src.main.java.com.mart.display.common.tile.TileDisplay.java", "BodyUseAPI": [], "Fixed commit": "3562926566b12553f34eae5a8c57b6987b3ae107", "Url": "https://api.github.com/repos/Martacus/Display", "Date": "2018-02-22T21:46:59Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(data.isEmpty())) { homepageGoal = data.remove(goalIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1837/buggy-version/src.sample.HomePageController.java", "BodyUseAPI": ["javafx.collections.ObservableList<sample.Goal>.remove(int)"], "Fixed commit": "b9442edf3139260025b231a2cb18c35bca4ccaa2", "Url": "https://api.github.com/repos/DarrienKennedy/CryptoBudget", "Date": "2018-03-30T15:13:56Z"},
{"Line": "=>627", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (polygon) { coordinateString.append(xbPosArray[0].getStringValue()); }else { coordinateString.delete(((coordinateString.length()) - 2), coordinateString.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4902/buggy-version/svalbard.xmlbeans.src.main.java.org.n52.svalbard.decode.GmlDecoderv321.java", "BodyUseAPI": [], "Fixed commit": "282cc4b5379bab421d785c38402291dffabc7742", "Url": "https://api.github.com/repos/CarstenHollmann/arctic-sea", "Date": "2018-01-26T11:59:48Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((songs.size()) > 0) { org.greenrobot.eventbus.EventBus.getDefault().post(new bei.m3c.events.MusicPlayerSongChangedEvent(getCurrentSong())); play(); }else { clearSelectedRadio(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3357/buggy-version/app.src.main.java.bei.m3c.players.MusicPlayer.java", "BodyUseAPI": [], "Fixed commit": "6fb9b4e1d7f02ae0c9b005ce6da33d7f5b34d637", "Url": "https://api.github.com/repos/stupidusername/M3C", "Date": "2018-06-15T16:12:14Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((a.getValue()) != null) { if (((a.getValue().length()) > 16) || (a.getValue().contains(\"\\n\"))) datatypes.append(\" <color:royalBlue>\\\"...\\\"</color>\\\\n\"); else datatypes.append(((\" <color:royalBlue>\\\"\" + (a.getValue().replace(\"\\n\", \"\\\\n\"))) + \"\\\"</color>\\\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4608/buggy-version/compilers.uml.src.main.java.org.thingml.compilers.uml.PlantUMLCfgMainGenerator.java", "BodyUseAPI": ["org.thingml.xtext.thingML.PlatformAnnotation.getValue()", "org.thingml.xtext.thingML.PlatformAnnotation.getValue()", "org.thingml.xtext.thingML.PlatformAnnotation.getValue()", "a.getValue().replace(java.lang.String,java.lang.String)", "a.getValue().length()", "java.lang.StringBuilder.append(((\" <color:royalBlue>\\\"\" + (a.getValue().replace(\"\\n\", \"\\\\n\"))) + \"\\\"</color>\\\\n\"))", "a.getValue().contains(java.lang.String)"], "Fixed commit": "98b849285315f7e9accc64a412b18670c5d72cdd", "Url": "https://api.github.com/repos/TelluIoT/ThingML", "Date": "2018-10-13T17:42:22Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.infinity.dev.vankin.GamePresenter.GamePresenter.vankin(int,int,int[][])", "com.infinity.dev.vankin.GamePresenter.GamePresenter.vankin(int,int,int[][])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((java.lang.Math.max(v1, v2)) + (arr[x][y])) < (arr[x][y])) { mem[x][y] = arr[x][y]; }else { mem[x][y] = (arr[x][y]) + (java.lang.Math.max(v1, v2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8920/buggy-version/app.src.main.java.com.infinity.dev.vankin.GamePresenter.GamePresenter.java", "BodyUseAPI": ["java.lang.Math.max(int,int)"], "Fixed commit": "5e62f15b7463cb747ace27867b328da2e5ce4a6b", "Url": "https://api.github.com/repos/Sumit-Kumar14/vankin", "Date": "2018-10-01T10:50:19Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sims.size()) == 0) { sims.add(0.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7929/buggy-version/server.app.org.grouplens.samantha.server.inaction.InactionUtilities.java", "BodyUseAPI": ["it.unimi.dsi.fastutil.doubles.DoubleList.add(double)"], "Fixed commit": "9f1eef6555878905ebe153b45a27f95f4d5ff186", "Url": "https://api.github.com/repos/grouplens/samantha", "Date": "2018-04-01T02:52:11Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["view.getContext().getPackageManager().getLaunchIntentForPackage(appModel.getApplicationPackageName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (intent != null) { intent.setComponent(appModel.getComponentName()); view.getContext().startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8544/buggy-version/app.src.main.java.com.javalive09.letterlauncher.AppModelAdapter.java", "BodyUseAPI": ["view.getContext().startActivity(android.content.Intent)", "android.content.Intent.setComponent(appModel.getComponentName())"], "Fixed commit": "a060fe81603f2b9de00e0aec331d151c6e96c39e", "Url": "https://api.github.com/repos/javalive09/LetterLauncher", "Date": "2018-08-15T15:04:15Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (arrayCopy != null) { for (com.ibm.wsspi.collector.manager.SynchronousHandler synchronousHandler : arrayCopy) { synchronousHandler.synchronousWrite(event); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6919/buggy-version/dev.com.ibm.ws.logging.core.src.com.ibm.ws.collector.manager.buffer.BufferManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "61af83f398d44620dde852525c4e1a0c62cec921", "Url": "https://api.github.com/repos/utle/open-liberty", "Date": "2018-02-08T22:19:44Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Set<seedu.address.model.skill.Skill>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tagsIterator.hasNext()) { sb.append(tagsIterator.next()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2299/buggy-version/src.main.java.seedu.address.model.skill.TagMatchesPredicate.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.Object)", "java.util.Iterator.next()"], "Fixed commit": "dd8d8d6c2c64887a6b4a683caebdb955cc308d26", "Url": "https://api.github.com/repos/Jason1im/main", "Date": "2018-04-08T10:17:17Z"},
{"Line": "=>1582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (gfyItem == null) { int a = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1875/buggy-version/app.src.main.java.com.sometimestwo.moxie.FragmentHome.java", "BodyUseAPI": [], "Fixed commit": "e08262316289aa0ddbe9ccaf76be773afe6cddfa", "Url": "https://api.github.com/repos/izikperz/Jumble", "Date": "2018-09-23T01:02:24Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (hash.contains(\"-size_restricted\")) { hash = hash.replace(\"-size_restricted\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1875/buggy-version/app.src.main.java.com.sometimestwo.moxie.Utils.Utils.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "e08262316289aa0ddbe9ccaf76be773afe6cddfa", "Url": "https://api.github.com/repos/izikperz/Jumble", "Date": "2018-09-23T01:02:24Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (application == null) { throw new java.lang.NullPointerException(\"Cannot set a null application in the ApplicationFactory\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4727/buggy-version/dev.com.ibm.ws.org.apache.myfaces.2.3.src.com.ibm.ws.jsf.config.WASApplicationFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "0b1d0bc361aa209b8f05145d152fd92e6801d7c1", "Url": "https://api.github.com/repos/aguibert/open-liberty", "Date": "2018-04-03T13:50:29Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hit.get()) > 0) out.append(java.lang.String.format(\"hit(%d)\\t-> best: %d, worst: %d, avg: %d\\n\", hit.get(), hit_best.get(), hit_worst.get(), ((hit_accu_time.get()) / (hit.get()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7221/buggy-version/src.de.hhu.bsinfo.utils.eval.MultiThreadMeasurementHelper.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicLong.get()", "java.lang.StringBuilder.append(java.lang.String)", "java.util.concurrent.atomic.AtomicLong.get()", "java.lang.String.format(java.lang.String,long,long,long,long)"], "Fixed commit": "663636b12a8819fc5af825030784c4dc18dfd312", "Url": "https://api.github.com/repos/huflo/dxram-memory", "Date": "2018-03-08T15:09:31Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.util.LinkedHashMap<norswap.skelex.Checkpoint, norswap.skelex.Checkpoint>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (map == null) checkpoints.set(index, (map = new java.util.LinkedHashMap()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/32/buggy-version/src.norswap.skelex.CheckpointMap.java", "BodyUseAPI": [], "Fixed commit": "5d52b674b1fabebfba491479a89503a99f800cc1", "Url": "https://api.github.com/repos/norswap/skelex", "Date": "2018-01-16T16:48:11Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((locationList.size()) == 0) { locationList.add(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/211/buggy-version/app.src.main.java.com.csi5175.mobilecommerce.recogu.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<android.location.Location>.add(android.location.Location)"], "Fixed commit": "f22495defdedafb0eb8f0d30fc6c4637e9f4508b", "Url": "https://api.github.com/repos/donnytab/RecogU", "Date": "2018-02-22T05:36:45Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextChain) != null) { spot = nextChain.get(0).split(\"-\"); }else { spot = moveable.split(\"-\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/570/buggy-version/src.CheckerBoardManager.java", "BodyUseAPI": [], "Fixed commit": "e68a74e04f8abbf689979cd2425393db8b62190d", "Url": "https://api.github.com/repos/casstarng/Checkers2", "Date": "2018-06-08T02:02:28Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endTime == 0) { endTime = (24 * 60) * 60; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7449/buggy-version/src.com.company.DoublesGenerator.java", "BodyUseAPI": [], "Fixed commit": "01a4ac3d4bebfc29060012f952ea07982bc965f6", "Url": "https://api.github.com/repos/BugManBig/VgtrkPlanner", "Date": "2018-09-20T09:30:33Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((remoteMessage.getNotification()) != null) { title = remoteMessage.getNotification().getTitle(); body = remoteMessage.getNotification().getBody(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2164/buggy-version/chat-sdk-firebase-push.src.main.java.co.chatsdk.firebase.push.MessagingService.java", "BodyUseAPI": ["remoteMessage.getNotification().getBody()", "com.google.firebase.messaging.RemoteMessage.getNotification()", "remoteMessage.getNotification().getTitle()", "com.google.firebase.messaging.RemoteMessage.getNotification()"], "Fixed commit": "5f57751b144129c7a3f6c3a0bf42aa5853ba327f", "Url": "https://api.github.com/repos/pepebecker/chat-sdk-android", "Date": "2018-04-23T16:20:49Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.dotwebstack.framework.frontend.openapi.mappers.TransactionRequestMapper.LOG.isDebugEnabled()) { org.dotwebstack.framework.frontend.openapi.mappers.TransactionRequestMapper.LOG.debug(\"Mapped {} operation for request path {}\", apiOperation.getMethod().name(), absolutePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2090/buggy-version/frontend.openapi.src.main.java.org.dotwebstack.framework.frontend.openapi.mappers.TransactionRequestMapper.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,apiOperation.getMethod().name(),java.lang.String)"], "Fixed commit": "96b18ee3405744548883636b995229725b82ce42", "Url": "https://api.github.com/repos/dotwebstack/dotwebstack-framework", "Date": "2018-04-19T12:52:00Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.dotwebstack.framework.frontend.openapi.mappers.InformationProductRequestMapper.LOG.isDebugEnabled()) { org.dotwebstack.framework.frontend.openapi.mappers.InformationProductRequestMapper.LOG.debug(\"Mapped {} operation for request path {}\", apiOperation.getMethod().name(), absolutePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2090/buggy-version/frontend.openapi.src.main.java.org.dotwebstack.framework.frontend.openapi.mappers.InformationProductRequestMapper.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,apiOperation.getMethod().name(),java.lang.String)"], "Fixed commit": "96b18ee3405744548883636b995229725b82ce42", "Url": "https://api.github.com/repos/dotwebstack/dotwebstack-framework", "Date": "2018-04-19T12:52:00Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tileList.get(i).get(9).equals(piece)) && ((piece.getBoardSide()) == i)) { tileList.get(i).remove(9); tileList.get(i).add(13, piece); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1879/buggy-version/src.Game.GameBoard.java", "BodyUseAPI": ["java.util.ArrayList<java.util.ArrayList<Game.GamePiece>>.get(int)", "tileList.get(i).add(int,Game.GamePiece)", "tileList.get(i).remove(int)", "java.util.ArrayList<java.util.ArrayList<Game.GamePiece>>.get(int)"], "Fixed commit": "0f8130cc44888985bfdb9a3215fd2bdd9588e40a", "Url": "https://api.github.com/repos/jfzieg/Sorry", "Date": "2018-04-04T22:57:54Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context instanceof android.support.v4.app.FragmentActivity) { handleObserveLifecycle(((android.support.v4.app.FragmentActivity) (context)), lifecycleListener); }else if (context instanceof android.app.Activity) { handleObserveLifecycle(((android.app.Activity) (context)), lifecycleListener); }else if (context instanceof android.app.Activity) { handleObserveLifecycle(((android.app.Activity) (context)), lifecycleListener); }else if (context instanceof android.app.Activity) { handleObserveLifecycle(((android.app.Activity) (context)), lifecycleListener); }else if (context instanceof android.content.ContextWrapper) { handleObserveLifecycle(((android.content.ContextWrapper) (context)).getBaseContext(), lifecycleListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/625/buggy-version/lifecyclelistener.src.main.java.com.lifecycle.joybar.lifecyclelistener.LifecycleManager.java", "BodyUseAPI": [], "Fixed commit": "d894774ab1e59619543577d832f16d3a5c0ba33d", "Url": "https://api.github.com/repos/myjoybar/Android-lifecycle-listener", "Date": "2018-06-01T10:55:11Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lje.public_rental_house_news.AVObject.getDate(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (d == null) { dateTime = java.time.LocalDateTime.MIN; }else { dateTime = java.time.LocalDateTime.ofInstant(d.toInstant(), java.time.ZoneId.systemDefault()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9724/buggy-version/src.main.java.com.lje.public_rental_house_news.HouseNews.java", "BodyUseAPI": ["java.util.Date.toInstant()", "java.time.LocalDateTime.ofInstant(java.time.Instant,java.time.ZoneId)"], "Fixed commit": "cce348bfd7a312d777f075a90d511479782230c0", "Url": "https://api.github.com/repos/lasttimes/HouseNews", "Date": "2018-10-10T01:29:58Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cam72cam.immersiverailroading.items.nbt.ItemDefinition.get(net.minecraft.item.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (((def != null) && ((def.textureNames) != null)) && (def.textureNames.contains(texture))) { stack.getTagCompound().setString(\"texture_variant\", texture); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2904/buggy-version/src.main.java.cam72cam.immersiverailroading.items.nbt.ItemTextureVariant.java", "BodyUseAPI": ["stack.getTagCompound().setString(java.lang.String,java.lang.String)"], "Fixed commit": "00b930adba15f0f325c57fd44200e58bde284150", "Url": "https://api.github.com/repos/cam72cam/ImmersiveRailroading", "Date": "2018-10-27T14:15:27Z"},
{"Line": "=>613", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clegoues.genprog4java.fitness.Fitness.useEntropy) && ((rep.getVariantFolder().length()) != 0)) sampleFitness += 1 - (avgEntropy / 1000);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2371/buggy-version/src.clegoues.genprog4java.fitness.Fitness.java", "BodyUseAPI": [], "Fixed commit": "28c00dda78fc9180dc01ee71261d65dc7651136a", "Url": "https://api.github.com/repos/tonyswoo/genprog4java", "Date": "2018-08-15T06:51:48Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (actionType == (fr.inria.spirals.features.detector.spoon.CtElementAnalyzer.ACTION_TYPE.UPDATE)) { output.incrementFeatureCounter((\"objInstMod\" + (actionType.name))); }else { output.incrementFeatureCounter((\"objInst\" + (actionType.name))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3891/buggy-version/src.main.java.fr.inria.spirals.features.detector.spoon.CtElementAnalyzer.java", "BodyUseAPI": ["fr.inria.spirals.entities.RepairActions.incrementFeatureCounter(java.lang.String)", "fr.inria.spirals.entities.RepairActions.incrementFeatureCounter(java.lang.String)"], "Fixed commit": "c1acc8d4bc85e41aa5872995f5efc2e084c9baaf", "Url": "https://api.github.com/repos/lascam-UFU/automatic-diff-dissection", "Date": "2018-04-21T17:01:41Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (actionType == (fr.inria.spirals.features.detector.spoon.CtElementAnalyzer.ACTION_TYPE.DELETE)) { output.incrementFeatureCounter((\"condBran\" + (actionType.name))); }else { output.incrementFeatureCounter((\"condBranIfElse\" + (actionType.name))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3891/buggy-version/src.main.java.fr.inria.spirals.features.detector.spoon.CtElementAnalyzer.java", "BodyUseAPI": ["fr.inria.spirals.entities.RepairActions.incrementFeatureCounter(java.lang.String)", "fr.inria.spirals.entities.RepairActions.incrementFeatureCounter(java.lang.String)"], "Fixed commit": "c1acc8d4bc85e41aa5872995f5efc2e084c9baaf", "Url": "https://api.github.com/repos/lascam-UFU/automatic-diff-dissection", "Date": "2018-04-21T17:01:41Z"},
{"Line": "=>530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((player.getCombat().getCombatType()) == (com.vencillio.rs2.content.combat.Combat.CombatTypes.MAGIC)) && (player.getMagic().getSpellCasting().isAutocasting())) { player.getMagic().getSpellCasting().updateMagicAttack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9855/buggy-version/src.com.vencillio.rs2.content.combat.PlayerCombatInterface.java", "BodyUseAPI": ["player.getMagic().getSpellCasting().updateMagicAttack()", "com.vencillio.rs2.entity.player.Player.getMagic()", "player.getMagic().getSpellCasting()"], "Fixed commit": "42557bd8e719a10367df24fc96888f7923aa6830", "Url": "https://api.github.com/repos/tannermon11/RSPS", "Date": "2018-05-14T09:12:02Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bodyNodes) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3851/buggy-version/golang.src.main.java.com.oracle.app.nodes.controlflow.GoBlockNode.java", "BodyUseAPI": [], "Fixed commit": "aae03e7cf7ef38d5b5e793795db1cd29dcad0f7d", "Url": "https://api.github.com/repos/PDZaninov/GoLang-Compiler", "Date": "2018-05-21T08:11:36Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.relationships.size()) > 0) entities.add(this.relationships.get((i - 1)).getEntityA());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5871/buggy-version/WebApp.src.main.java.com.models.Molecule.java", "BodyUseAPI": ["java.util.List<com.models.Relationship>.get(int)", "java.util.List<com.models.Entity>.add(this.relationships.get((i - 1)).getEntityA())", "this.relationships.get((i - 1)).getEntityA()"], "Fixed commit": "7ce4678ed1b83a68e83ad0bdaedcb092fbf68eb3", "Url": "https://api.github.com/repos/WorTech/Music-Crux", "Date": "2018-03-12T17:58:13Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((letters.length) < 1) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7927/buggy-version/app.src.main.java.com.example.nastala.atolye15.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5e182d940db4c649f30849545024959187d08e0d", "Url": "https://api.github.com/repos/nastala/Atolye15", "Date": "2018-05-15T22:26:05Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.isEmpty()) || (s.replaceAll(\"\\\\s+\", \"\").isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7927/buggy-version/app.src.main.java.com.example.nastala.atolye15.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5e182d940db4c649f30849545024959187d08e0d", "Url": "https://api.github.com/repos/nastala/Atolye15", "Date": "2018-05-15T22:26:05Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileLength) != 0) p = ((int) ((100 * (readCount)) / (fileLength)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/683/buggy-version/cloud_disk.src.main.java.com.kivsw.cloud.disk.BaseDiskIO.java", "BodyUseAPI": [], "Fixed commit": "251169eef44437afd4abf59b53e0cc1a068442c1", "Url": "https://api.github.com/repos/IvanKovalchuk/MvpRxDialogSample", "Date": "2018-05-21T13:27:55Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node == (tail)) { unlinkNode(node); }else { node = unlinkNode(node).getPrev(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5266/buggy-version/src.project.MyDLL.java", "BodyUseAPI": ["project.MyDLL<E>.unlinkNode(project.DLLNode<E>)", "project.MyDLL<E>.unlinkNode(project.DLLNode<E>)", "project.DLLNode<E>.getPrev()"], "Fixed commit": "272967241e0fd7cd9402531fed1747b217fdc930", "Url": "https://api.github.com/repos/JonathanGin52/Project2", "Date": "2018-04-17T21:51:53Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eventListener) != null) { eventListener.onButtonClickAnimationStart(menuButton); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3372/buggy-version/library.src.main.java.com.imangazaliev.circlemenu.CircleMenu.java", "BodyUseAPI": [], "Fixed commit": "aa4cc318f585c9ca70814472c3dffc8bc1951122", "Url": "https://api.github.com/repos/ImangazalievM/CircleMenu", "Date": "2018-06-09T15:46:43Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((serverNode.getSyncProxy().getRemoteProxyStatus()) == (serverNode.getSyncProxy().STOP)) { serverNode.getSyncProxy().startService(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3418/buggy-version/cheetah-raft.src.main.java.raft.core.RaftCore.java", "BodyUseAPI": ["raft.core.server.ServerNode.getSyncProxy()", "serverNode.getSyncProxy().startService()"], "Fixed commit": "f69d80d3afe226a0b8dce362a75d8b38365a189b", "Url": "https://api.github.com/repos/Ruan-Xin/cheetah", "Date": "2018-04-18T12:07:32Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reachedEndOfIdBatch()) { io.confluent.kafka.schemaregistry.id.SchemaIdRange nextRange = nextRange(); nextAvailableSchemaId = nextRange.base(); idBatchInclusiveUpperBound = nextRange.end(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3864/buggy-version/core.src.main.java.io.confluent.kafka.schemaregistry.id.ZookeeperIdGenerator.java", "BodyUseAPI": [], "Fixed commit": "a3fdf3fc976d728cc00b99592230ffcbf2b05134", "Url": "https://api.github.com/repos/confluentinc/schema-registry", "Date": "2018-08-23T04:30:28Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) > 8) { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2231/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "f7e8523b547c0a9b36f6da7d61befedb5ded81ad", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-nalderto", "Date": "2018-09-26T18:10:34Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) { createNotificationChannel(Constants.CHANNEL_ID.MAIN_CHANNEL, \"Battery Temperature\", \"Display temperature data\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5976/buggy-version/app.src.main.java.com.example.emmanuelpastor.batterytemperature.ForegroundService.java", "BodyUseAPI": [], "Fixed commit": "68aa0d6deed6b40d8815fa9a036f8c84bd55c975", "Url": "https://api.github.com/repos/emmanuelpastor/phone-battery-temperature", "Date": "2018-01-04T10:56:47Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getRecurringEventId()) != null) { eventJson.put(\"eventid\", e.getRecurringEventId()); }else { eventJson.put(\"eventid\", e.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/762/buggy-version/src.main.java.moodprove.rest.EventRestController.java", "BodyUseAPI": ["com.google.api.services.calendar.model.Event.getRecurringEventId()", "org.json.JSONObject.put(java.lang.String,e.getRecurringEventId())", "org.json.JSONObject.put(java.lang.String,e.getId())", "com.google.api.services.calendar.model.Event.getId()"], "Fixed commit": "7b7121a28772fda2b8931086e1aaec1179b4c98d", "Url": "https://api.github.com/repos/MalikG15/MoodProveServer", "Date": "2018-04-15T16:02:13Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getRecurringEventId()) != null) { moodprove.to.Event result = eventRepository.findByeventid(e.getRecurringEventId()); if (((eventRepository.findByeventid(e.getRecurringEventId())) != null) || (singularEvents.containsKey(e.getRecurringEventId()))) { continue; } singularEvents.put(e.getRecurringEventId(), e); }else if ((eventRepository.findByeventid(e.getId())) == null) { singularEvents.put(e.getId(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/762/buggy-version/src.main.java.moodprove.rest.EventRestController.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.google.api.services.calendar.model.Event>.put(e.getId(),com.google.api.services.calendar.model.Event)", "java.util.Map<java.lang.String, com.google.api.services.calendar.model.Event>.put(e.getRecurringEventId(),com.google.api.services.calendar.model.Event)", "moodprove.data.EventRepository.findByeventid(e.getRecurringEventId())", "moodprove.data.EventRepository.findByeventid(e.getId())", "com.google.api.services.calendar.model.Event.getRecurringEventId()", "com.google.api.services.calendar.model.Event.getRecurringEventId()", "com.google.api.services.calendar.model.Event.getRecurringEventId()", "com.google.api.services.calendar.model.Event.getRecurringEventId()", "com.google.api.services.calendar.model.Event.getId()", "com.google.api.services.calendar.model.Event.getId()", "java.util.Map<java.lang.String, com.google.api.services.calendar.model.Event>.containsKey(e.getRecurringEventId())", "moodprove.data.EventRepository.findByeventid(e.getRecurringEventId())"], "Fixed commit": "7b7121a28772fda2b8931086e1aaec1179b4c98d", "Url": "https://api.github.com/repos/MalikG15/MoodProveServer", "Date": "2018-04-15T16:02:13Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.dubbo.common.utils.StringUtils.camelToSplitName(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (\"onthrow\".equals(property)) { int index = value.lastIndexOf(\".\"); java.lang.String throwRef = value.substring(0, index); java.lang.String throwMethod = value.substring((index + 1)); reference = new org.springframework.beans.factory.config.RuntimeBeanReference(throwRef); beanDefinition.getPropertyValues().addPropertyValue(\"onthrowMethod\", throwMethod); }else if (\"oninvoke\".equals(property)) { int index = value.lastIndexOf(\".\"); java.lang.String throwRef = value.substring(0, index); java.lang.String throwMethod = value.substring((index + 1)); reference = new org.springframework.beans.factory.config.RuntimeBeanReference(throwRef); beanDefinition.getPropertyValues().addPropertyValue(\"oninvokeMethod\", throwMethod); }else { if ((\"ref\".equals(property)) && (parserContext.getRegistry().containsBeanDefinition(value))) { org.springframework.beans.factory.config.BeanDefinition refBean = parserContext.getRegistry().getBeanDefinition(value); if (!(refBean.isSingleton())) { throw new java.lang.IllegalStateException(((((((\"The exported service ref \" + value) + \" must be singleton! Please set the \") + value) + \" bean scope to singleton, eg: <bean id=\\\"\") + value) + \"\\\" scope=\\\"singleton\\\" ...>\")); } } reference = new org.springframework.beans.factory.config.RuntimeBeanReference(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9030/buggy-version/dubbo-config.dubbo-config-spring.src.main.java.com.alibaba.dubbo.config.spring.schema.DubboBeanDefinitionParser.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "bd8e8cf4e962891385eba152d2e8995eea3dd04d", "Url": "https://api.github.com/repos/z529192557/dubbo", "Date": "2018-02-05T07:21:13Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x == 4) && (y == 1)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1066/buggy-version/app.src.main.java.sudo.hdz.com.sudoku.widget.ToolView.java", "BodyUseAPI": [], "Fixed commit": "ccbfc51b5f1e525111889c6f74b2065f32c56ddc", "Url": "https://api.github.com/repos/handezhao/Sudoku", "Date": "2018-05-24T12:04:13Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((com.jetbrains.jetpad.vclang.core.expr.DefCallExpression) (impl)).getDefCallArguments().equals(classifyingDefCall.getDefCallArguments()))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4959/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.typechecking.instance.pool.GlobalInstancePool.java", "BodyUseAPI": [], "Fixed commit": "ab4601372ef8c5319d02b48fc780545a05239fc3", "Url": "https://api.github.com/repos/JetBrains/Arend", "Date": "2018-07-04T11:10:19Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(java.lang.Double.isNaN(min))) && (!(java.lang.Double.isNaN(max)))) rai = new imglib2.TypeTransformingRandomAccessibleInterval(img, new imglib2.RealTypeNormalization(min, (max - min)), new net.imglib2.type.numeric.real.FloatType()); else rai = img;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2091/buggy-version/src.main.java.process.radialsymmetry.cluster.BatchProcess.java", "BodyUseAPI": [], "Fixed commit": "9ea9c9f21b0fa4f2196c1e87ca33c398831ae121", "Url": "https://api.github.com/repos/PreibischLab/RadialSymmetryLocalization", "Date": "2018-04-13T12:27:45Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.comphenix.protocol.events.PacketEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (p == null) { pl.log(\"Could not resend to player (null) - they logged out too soon?\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7452/buggy-version/src.com.github.crashdemons.aztectabcompleter.AZTabPlugin.java", "BodyUseAPI": [], "Fixed commit": "4d2b2c55b2f948040fe183e7d165fe0ec1fff999", "Url": "https://api.github.com/repos/crashdemons/AztecTabCompleter", "Date": "2018-08-09T03:25:35Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6145/buggy-version/lab.26-jdbc-solution.src.main.java.rewards.internal.account.JdbcAccountRepository.java", "BodyUseAPI": [], "Fixed commit": "a242ddabd996d5c86740f7b88168eb741710cd2c", "Url": "https://api.github.com/repos/platform-acceleration-lab/core-spring-code", "Date": "2018-07-25T17:58:20Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rewards.internal.account.JdbcAccountRepository.mapBeneficiary(java.sql.ResultSet)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (beneficiary != null) account.restoreBeneficiary(mapBeneficiary(rs));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6145/buggy-version/lab.26-jdbc-solution.src.main.java.rewards.internal.account.JdbcAccountRepository.java", "BodyUseAPI": [], "Fixed commit": "a242ddabd996d5c86740f7b88168eb741710cd2c", "Url": "https://api.github.com/repos/platform-acceleration-lab/core-spring-code", "Date": "2018-07-25T17:58:20Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"aliyun\".equals(env)) { return \"login\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7526/buggy-version/spring-boot-study.src.main.java.com.spring.boot.study.controller.LoginController.java", "BodyUseAPI": [], "Fixed commit": "10db5de5a266a4cee959ec229f2cb74fbd387fcd", "Url": "https://api.github.com/repos/coder2facebook2github/study", "Date": "2018-05-05T12:52:48Z"},
{"Line": "=>1128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jsonReader.readString(OJSONReader.NEXT_IN_ARRAY).trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8114/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.tool.ODatabaseImport.java", "BodyUseAPI": [], "Fixed commit": "715fe5590a6823a0c1284ec2f297824392273bda", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2018-09-12T16:46:16Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getSharedPreferences(one.smartpass.android.MainActivity.ACCOUNT,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((account.getString(\"id\", \"\")) != \"\") { one.smartpass.android.LeerlingenKaartFragment.id = account.getString(\"id\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3227/buggy-version/app.src.main.java.one.smartpass.android.LeerlingenKaartFragment.java", "BodyUseAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Fixed commit": "d5fe3524e1a61ce04f11155660c27ebce8acd2b8", "Url": "https://api.github.com/repos/mixxamm/SmartpassAndroid", "Date": "2018-04-18T13:57:29Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((border != (gov.pnnl.svf.core.geometry.Border.NONE)) && (thickness > 0.0)) { vbos.addAll(createBorderVbos(shape, border, thickness, color)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8399/buggy-version/svf.src.main.java.gov.pnnl.svf.vbo.AbstractVboShapeFactory.java", "BodyUseAPI": ["java.util.List<gov.pnnl.svf.vbo.VertexBufferObject>.addAll(createBorderVbos(shape, border, thickness, color))", "gov.pnnl.svf.vbo.AbstractVboShapeFactory.createBorderVbos(gov.pnnl.svf.geometry.Shape,gov.pnnl.svf.core.geometry.Border,double,gov.pnnl.svf.core.color.Color)"], "Fixed commit": "bb530994b1c6bbb5ffa4c7e1989f25ad3a128250", "Url": "https://api.github.com/repos/pnnl/svf", "Date": "2018-07-23T20:11:50Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((border != (gov.pnnl.svf.core.geometry.Border.NONE)) && (thickness > 0.0)) { vbos.addAll(createBorderVbos(shape, border, thickness, color)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8399/buggy-version/svf.src.main.java.gov.pnnl.svf.vbo.Text2DVboFactory.java", "BodyUseAPI": ["java.util.List<gov.pnnl.svf.vbo.VertexBufferObject>.addAll(java.util.List<gov.pnnl.svf.vbo.VertexBufferObject>)", "gov.pnnl.svf.vbo.Text2DVboFactory.createBorderVbos(gov.pnnl.svf.geometry.Shape,gov.pnnl.svf.core.geometry.Border,double,gov.pnnl.svf.core.color.Color)"], "Fixed commit": "bb530994b1c6bbb5ffa4c7e1989f25ad3a128250", "Url": "https://api.github.com/repos/pnnl/svf", "Date": "2018-07-23T20:11:50Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((border != (gov.pnnl.svf.core.geometry.Border.NONE)) && (thickness > 0.0)) { vbos.addAll(createBorderVbos(shape, border, thickness, color)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8399/buggy-version/svf.src.main.java.gov.pnnl.svf.vbo.Text3DVboFactory.java", "BodyUseAPI": ["gov.pnnl.svf.vbo.Text3DVboFactory.createBorderVbos(gov.pnnl.svf.geometry.Shape,gov.pnnl.svf.core.geometry.Border,double,gov.pnnl.svf.core.color.Color)", "java.util.List<gov.pnnl.svf.vbo.VertexBufferObject>.addAll(java.util.List<gov.pnnl.svf.vbo.VertexBufferObject>)"], "Fixed commit": "bb530994b1c6bbb5ffa4c7e1989f25ad3a128250", "Url": "https://api.github.com/repos/pnnl/svf", "Date": "2018-07-23T20:11:50Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.ualberta.cs.wrkify.Searcher.getUser(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4092/buggy-version/wrkify.app.src.main.java.ca.ualberta.cs.wrkify.CachingClient.java", "BodyUseAPI": [], "Fixed commit": "8f6aa44ad0e4382f04132e40fee43306f4ce2c92", "Url": "https://api.github.com/repos/CMPUT301W18T18/wrkify", "Date": "2018-04-08T03:05:45Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Service.UserService.getSchoolConfBySchoolId(user.getSchoolId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((sc.isEnableCoupon()) && (luggage == 1)) && ((gift = couponService.consumeOneByCtype(user, 3)) != null)) { }else { if (sc.isFirstDiscount()) cost = FirstDiscount(user, express_phone, sendto_phone, cost); if (sc.isIfTenThenFree()) cost = IF10THENFREE(user, cost, session); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7747/buggy-version/src.main.java.Controllers.User.ExpressController.java", "BodyUseAPI": ["Controllers.User.ExpressController.IF10THENFREE(Entity.User.User,int,javax.servlet.http.HttpSession)", "Controllers.User.ExpressController.FirstDiscount(Entity.User.User,java.lang.String,java.lang.String,int)", "Controllers.User.SchoolConfigs.isFirstDiscount()", "Controllers.User.SchoolConfigs.isIfTenThenFree()"], "Fixed commit": "214e0518ac14d65c3afaaa4f31c298bacc88032a", "Url": "https://api.github.com/repos/IceSeaOnly/schoolhelper", "Date": "2018-03-08T02:45:31Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (FileServer.lock.isHeldByCurrentThread()) { FileServer.lock.unlock(); java.lang.Thread.sleep(50); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4836/buggy-version/src.FileServerThread.java", "BodyUseAPI": [], "Fixed commit": "4d8f4ec5c0b25a2008fcad779cc176f1548517ad", "Url": "https://api.github.com/repos/CheLinHuang/Simple-Distributed-File-System", "Date": "2018-03-21T08:20:46Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.container.inventorySlots.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1663/buggy-version/src.main.java.org.spongepowered.common.item.inventory.lens.impl.fabric.ContainerFabric.java", "BodyUseAPI": [], "Fixed commit": "8df884fd7185cb33a941edf9a72a7544266cabdb", "Url": "https://api.github.com/repos/RedNesto/SpongeCommon", "Date": "2018-08-21T15:33:20Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getSession().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((user.getBu()) != null) && ((user.getBu()) != \"\")) { csBuNames = user.getBu().split(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5283/buggy-version/src.main.java.com.pmo.dashboard.controller.EmployeeInfoController.java", "BodyUseAPI": ["com.pmo.dashboard.entity.User.getBu()", "user.getBu().split(java.lang.String)"], "Fixed commit": "e474b3eca8b23745df12e212cc83d64d4f2b9e88", "Url": "https://api.github.com/repos/dapengchina/PMO", "Date": "2018-01-02T11:33:26Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((front.getData().compareTo(e)) == 1) { insert.setNext(front); front = insert; }else if (front.getData().equals(e)) { return 2; }else { linkedList.ListNode<E> previous = insertTo(e); try { if (previous.getNext().getData().equals(e)) { return 2; }else { insert.setNext(previous.getNext()); previous.setNext(insert); } } catch (java.lang.NullPointerException a) { insert.setNext(previous.getNext()); previous.setNext(insert); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1283/buggy-version/src.linkedList.LinkedList.java", "BodyUseAPI": ["linkedList.ListNode<E>.setNext(linkedList.ListNode<E>)", "front.getData().equals(E)", "linkedList.LinkedList<E>.insertTo(E)", "linkedList.ListNode<E>.getData()", "previous.getNext().getData().equals(E)"], "Fixed commit": "9ef150e5041c51fb282d66e5c59560d8221184b0", "Url": "https://api.github.com/repos/a2liu/datastruct", "Date": "2018-03-04T19:45:32Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!concurrentModification) throw e;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9580/buggy-version/h2o-core.src.main.java.hex.grid.GridSearch.java", "BodyUseAPI": [], "Fixed commit": "044b9f77683f45836e4727ce7eb126b1cda202aa", "Url": "https://api.github.com/repos/michalkurka/h2o-3", "Date": "2018-03-22T21:37:11Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((y) < (-3000)) { life = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7999/buggy-version/alesk-the-unicorn.core.src.soldater.johannas.model.Character.java", "BodyUseAPI": [], "Fixed commit": "808045f0407a1df6f9ae0108e9c2c2052377e4b9", "Url": "https://api.github.com/repos/Putzies/aleks-the-game", "Date": "2018-05-03T17:22:43Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) m_uriPickImage = com.fff.ingood.tools.FileHelper.createUriFromProvider(this, TEMP_PICK_IMAGE_NAME); else m_uriPickImage = com.fff.ingood.tools.FileHelper.createUri(this, TEMP_PICK_IMAGE_NAME);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6382/buggy-version/app.src.main.java.com.fff.ingood.activity.PersonDataActivity.java", "BodyUseAPI": [], "Fixed commit": "9e6a3e8272e3b588995d4bc07851759edfa3cc7a", "Url": "https://api.github.com/repos/elminsterii/IngoodClientAndroid", "Date": "2018-08-20T09:28:17Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) m_uriPickImage = com.fff.ingood.tools.FileHelper.createUriFromProvider(this, TEMP_PICK_IMAGE_NAME); else m_uriPickImage = com.fff.ingood.tools.FileHelper.createUri(this, TEMP_PICK_IMAGE_NAME);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6382/buggy-version/app.src.main.java.com.fff.ingood.activity.IgActivityPublishActivity.java", "BodyUseAPI": [], "Fixed commit": "9e6a3e8272e3b588995d4bc07851759edfa3cc7a", "Url": "https://api.github.com/repos/elminsterii/IngoodClientAndroid", "Date": "2018-08-20T09:28:17Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) uri = android.support.v4.content.FileProvider.getUriForFile(context, ((com.fff.ingood.BuildConfig.APPLICATION_ID) + \".fileprovider\"), file); else uri = android.net.Uri.fromFile(file);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6382/buggy-version/app.src.main.java.com.fff.ingood.tools.FileHelper.java", "BodyUseAPI": [], "Fixed commit": "9e6a3e8272e3b588995d4bc07851759edfa3cc7a", "Url": "https://api.github.com/repos/elminsterii/IngoodClientAndroid", "Date": "2018-08-20T09:28:17Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((weatherJSONArray.length()) > 0) { int code = weatherJSONArray.getJSONObject(0).getInt(\"id\"); android.util.Log.d(\"Data\", (\"code: \" + (java.lang.String.valueOf(code)))); getIcon(code); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1040/buggy-version/app.src.main.java.my.com.codeplay.training.weatherapp.MainActivity.java", "BodyUseAPI": ["weatherJSONArray.getJSONObject(0).getInt(java.lang.String)", "org.json.JSONArray.getJSONObject(int)"], "Fixed commit": "f42b9bcc74a5b5f460ad353942c255694b986234", "Url": "https://api.github.com/repos/jerrychong25/WeatherApp", "Date": "2018-08-05T14:12:08Z"},
{"Line": "=>1026", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.aku.hassannaqvi.nns_2018.ui.SectionB1Activity.childCheck) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7031/buggy-version/app.src.main.java.edu.aku.hassannaqvi.nns_2018.ui.SectionB1Activity.java", "BodyUseAPI": [], "Fixed commit": "bc70dcb3ec6a554da66a21dc32b4dac3c2bc6647", "Url": "https://api.github.com/repos/shznaqvi/nns_2018", "Date": "2018-04-11T09:17:56Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ll_group_list.getChildCount()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4154/buggy-version/app.src.main.java.com.yanxiu.gphone.faceshowadmin_android.business.checkIn.activity.CreateNewCheckInActivity.java", "BodyUseAPI": [], "Fixed commit": "8ab4a16499acd3bbd81302f8e94d86a7d8f80937", "Url": "https://api.github.com/repos/caileiYanxiu/FaceShowAdmin_Android", "Date": "2018-10-24T08:44:11Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (logException) { com.weibo.api.motan.util.LoggerUtil.error((\"Exception caught when during method invocation. request:\" + (request.toString())), e); }else { com.weibo.api.motan.util.LoggerUtil.info((\"Exception caught when during method invocation. request:\" + (request.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4170/buggy-version/motan-core.src.main.java.com.weibo.api.motan.rpc.DefaultProvider.java", "BodyUseAPI": [], "Fixed commit": "8c08bb3ccf6ddca6a5a9c0f7db1652858cb534b3", "Url": "https://api.github.com/repos/sunnights/motan", "Date": "2018-07-10T08:54:24Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((oldLocation.getWorld()) == null) { return org.bukkit.Bukkit.getWorlds().get(0).getSpawnLocation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7736/buggy-version/src.main.java.de.erethon.dungeonsxl.player.DPlayerData.java", "BodyUseAPI": [], "Fixed commit": "186dd1192b1ea7953e873ba6992fdef21c5d3a56", "Url": "https://api.github.com/repos/DRE2N/DungeonsXL", "Date": "2018-06-05T11:04:02Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hour < 5) { url = url.replace(\"yyyy\", beforeArray[0]).replace(\"MM\", beforeArray[1]).replace(\"dd\", beforeArray[2]); }else { url = url.replace(\"yyyy\", nowArray[0]).replace(\"MM\", nowArray[1]).replace(\"dd\", nowArray[2]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2650/buggy-version/src.main.java.com.grabbing.task.KenoGrabbingMT.java", "BodyUseAPI": [], "Fixed commit": "1622711f8e886eefc5ed3eef16d475081fe8f851", "Url": "https://api.github.com/repos/randy222/KenoGrabbingMT", "Date": "2018-03-12T07:57:13Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.avro.reflect.ReflectData.getClassProp(org.apache.avro.Schema,SpecificData.CLASS_PROP)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (collectionClass.isAssignableFrom(java.util.HashSet.class)) return new java.util.HashSet<java.lang.Object>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3202/buggy-version/lang.java.avro.src.main.java.org.apache.avro.reflect.ReflectDatumReader.java", "BodyUseAPI": [], "Fixed commit": "86aa6118e6006da013724c3b2fe8b2122029bb7c", "Url": "https://api.github.com/repos/vamsi360/avro", "Date": "2018-10-30T20:07:02Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.avro.reflect.ReflectData.getClassProp(org.apache.avro.Schema,SpecificData.CLASS_PROP)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (collectionClass.isAssignableFrom(java.util.HashMap.class)) return new java.util.HashMap<java.lang.Object, java.lang.Object>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3202/buggy-version/lang.java.avro.src.main.java.org.apache.avro.reflect.ReflectDatumReader.java", "BodyUseAPI": [], "Fixed commit": "86aa6118e6006da013724c3b2fe8b2122029bb7c", "Url": "https://api.github.com/repos/vamsi360/avro", "Date": "2018-10-30T20:07:02Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(registry.hasMappingForPattern(\"/webjars/**\"))) { registry.addResourceHandler(\"/webjars/**\").addResourceLocations(\"classpath:/META-INF/resources/webjars/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4906/buggy-version/src.main.java.com.inst.config.WebConfig.java", "BodyUseAPI": ["registry.addResourceHandler(\"/webjars/**\").addResourceLocations(java.lang.String)", "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry.addResourceHandler(java.lang.String)"], "Fixed commit": "f23fcc91d1b9e07793394a90d2648d6c5a99dc31", "Url": "https://api.github.com/repos/Elektronikerv/InstClone-2", "Date": "2018-06-16T14:57:19Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((updated.get(\"form\")) == null) { updated.put(\"form\", new java.util.HashMap<java.lang.String, java.lang.String>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2852/buggy-version/saga-format.src.main.java.org.apache.servicecomb.saga.format.JacksonRestOperation.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>.put(java.lang.String,java.util.HashMap<java.lang.String, java.lang.String>)"], "Fixed commit": "5e957c6d58a88a810b9988dd12dcaa5fd99a2714", "Url": "https://api.github.com/repos/KomachiSion/incubator-servicecomb-saga", "Date": "2018-08-21T09:59:13Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((com.unisa.bd2.myfeeding.AllergensController.allergens) != null) || (allergensOfProduct == \"\")) { for (java.lang.String a : com.unisa.bd2.myfeeding.AllergensController.allergens) { if (a == \"Lattosio\") { for (java.lang.String item : com.unisa.bd2.myfeeding.AllergensController.lattosio) { if (allergensOfProduct.contains(item)) { com.unisa.bd2.myfeeding.AllergensController.problemFound.add(\"Lattosio\"); } } }else if (a == \"Soia\") { for (java.lang.String item : com.unisa.bd2.myfeeding.AllergensController.soia) { if (allergensOfProduct.contains(item)) { com.unisa.bd2.myfeeding.AllergensController.problemFound.add(\"Soia\"); } } }else if (a == \"Glutine\") { for (java.lang.String item : com.unisa.bd2.myfeeding.AllergensController.glutine) { if (allergensOfProduct.contains(item)) { com.unisa.bd2.myfeeding.AllergensController.problemFound.add(\"Glutine\"); } } }else if (a == \"Arachidi\") { for (java.lang.String item : com.unisa.bd2.myfeeding.AllergensController.arachidi) { if (allergensOfProduct.contains(item)) { com.unisa.bd2.myfeeding.AllergensController.problemFound.add(\"Arachidi\"); } } }else { } } if ((com.unisa.bd2.myfeeding.AllergensController.problemFound.isEmpty()) == false) { com.unisa.bd2.myfeeding.AllergensController.launchAlert(com.unisa.bd2.myfeeding.AllergensController.problemFound); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5941/buggy-version/app.src.main.java.com.unisa.bd2.myfeeding.AllergensController.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "58e99bcb2ce372bc11e08e418ac9332504f0c6c7", "Url": "https://api.github.com/repos/oromis95/MyFeeding", "Date": "2018-06-16T16:10:58Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c.getId()) != null) { throw new java.lang.IllegalArgumentException(\"Cannot create existing customer.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6142/buggy-version/persistence.src.main.java.cz.muni.fi.pa165.dao.CustomerDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "280cb75f84e34de321dd00201246b77e31860253", "Url": "https://api.github.com/repos/zezulka/PA165_Booking_Manager", "Date": "2018-10-29T19:03:08Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c.getId()) == null) { throw new java.lang.IllegalArgumentException(\"Cannot remove customer with null id.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6142/buggy-version/persistence.src.main.java.cz.muni.fi.pa165.dao.CustomerDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "280cb75f84e34de321dd00201246b77e31860253", "Url": "https://api.github.com/repos/zezulka/PA165_Booking_Manager", "Date": "2018-10-29T19:03:08Z"},
{"Line": "=>1338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.loboevolution.html.domimpl.DOMNodeImpl.getRenderState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(org.loboevolution.util.Strings.isBlank(renderState.getlineHeight()))) { addLineBreak(this.modelNode, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/919/buggy-version/HTML_Renderer.src.main.java.org.loboevolution.html.renderer.RBlockViewport.java", "BodyUseAPI": [], "Fixed commit": "1093a26feeb9a2217918a7d8d5dab8a473929f68", "Url": "https://api.github.com/repos/oswetto/LoboEvolution", "Date": "2018-05-06T13:40:51Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (thereAreNoModifications(fullEntry)) { if ((idempotentGroup) == 9) { final java.lang.String sandhiedFinal = inflected.substring(((inflected.length()) - 1)); final io.bdrc.lucene.sa.CmdParser.DiffStruct df = new io.bdrc.lucene.sa.CmdParser.DiffStruct(0, null, null, sandhiType, pos, (-1)); addEntry(sandhiedFinal, df); } }else { throw new java.lang.IllegalArgumentException((\"There is a problem with cmd: \" + cmd)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1560/buggy-version/src.main.java.io.bdrc.lucene.sa.CmdParser.java", "BodyUseAPI": [], "Fixed commit": "cbceb9b0ec9587d79f927aa07b7fc715478fcfcc", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/lucene-sa", "Date": "2018-06-11T12:09:55Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (files != null) { for (java.io.File file : files) { java.lang.String name = file.getName(); name = name.substring(0, ((name.length()) - len)); try { nemo.plugin.position.Position pos = new nemo.plugin.position.Position(this, name, nemo.json.config.JsonConfiguration.load(file)); posByName.put(name, pos); } catch (java.lang.Exception e) { e.printStackTrace(); logger.info((\"Failed to load from \" + (file.getName()))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8255/buggy-version/src.nemo.plugin.position.PositionManager.java", "BodyUseAPI": [], "Fixed commit": "b65e8de9c385648801ce5d08cce0b76e2b7773a0", "Url": "https://api.github.com/repos/nemosource/plugin-Position", "Date": "2018-04-16T10:30:51Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (SplashScreen.restaurantDetailResponseData.getCurrency().equalsIgnoreCase(\"USD\")) bablu = \"$\"; else bablu = \"\u20b9\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4225/buggy-version/app.src.main.java.com.foodvaninfowiz.foodorderingin.Adapter.MyWishListAdapter.java", "BodyUseAPI": [], "Fixed commit": "105265103988041064f18accbed02ef61952d645", "Url": "https://api.github.com/repos/rajangarg58/FoodVan", "Date": "2018-05-20T11:16:24Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.lwjgl.input.Keyboard.isKeyDown(keys[4])) && (org.lwjgl.input.Keyboard.getEventKeyState())) attack(); else for (int i = 0; i < (updates.length); i++) if ((org.lwjgl.input.Keyboard.isKeyDown(keys[i])) && (org.lwjgl.input.Keyboard.getEventKeyState())) sprite.updatePath(updates[i]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5037/buggy-version/src.data.Player.java", "BodyUseAPI": ["org.lwjgl.input.Keyboard.isKeyDown(int)"], "Fixed commit": "bba414d075017d9d2dc9ce20c554c143e8fc17bd", "Url": "https://api.github.com/repos/wflms20110333/Jewelists", "Date": "2018-05-18T06:06:15Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((motionEvent.getAction()) == (android.view.MotionEvent.ACTION_DOWN)) { android.widget.Toast.makeText(mContext, mContext.getResources().getString(R.string.msg_sorry_only_manager_can_change), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/434/buggy-version/app.src.main.java.com.framgia.fgoal.screen.objectivedetail.adapter.ObjectiveDetailViewHolder.java", "BodyUseAPI": [], "Fixed commit": "1e307a4cd6f5620139a92c864965d26a2d890a02", "Url": "https://api.github.com/repos/framgia/fgoal-android", "Date": "2018-10-18T01:55:01Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((motionEvent.getAction()) == (android.view.MotionEvent.ACTION_DOWN)) { android.widget.Toast.makeText(getActivity(), R.string.msg_sorry_only_manager_can_change, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/434/buggy-version/app.src.main.java.com.framgia.fgoal.screen.objectivedetail.ObjectiveDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "1e307a4cd6f5620139a92c864965d26a2d890a02", "Url": "https://api.github.com/repos/framgia/fgoal-android", "Date": "2018-10-18T01:55:01Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source instanceof com.vividsolutions.jts.geom.MultiPolygon) source = ((com.vividsolutions.jts.geom.MultiPolygon) (source)).getGeometryN(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2110/buggy-version/verdi_core.src.anl.verdi.area.target.Target.java", "BodyUseAPI": [], "Fixed commit": "bde9aa90ba237c1ac0a27d6370403d86673ede16", "Url": "https://api.github.com/repos/CEMPD/VERDI", "Date": "2018-03-07T05:41:22Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.get(2).Type) == (Expression.ExpressionType.Symbol)) { varValue2 = findSymbolInMaps(args.get(2)); }else { varValue2 = args.get(2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7583/buggy-version/lispinterpreter.src.main.java.com.cs263.app.Environment.java", "BodyUseAPI": ["java.util.ArrayList<com.cs263.app.Expression>.get(int)", "com.cs263.app.Environment.findSymbolInMaps(args.get(2))", "java.util.ArrayList<com.cs263.app.Expression>.get(int)"], "Fixed commit": "629d6122252ed0f9f810722a2ef16899aad29a40", "Url": "https://api.github.com/repos/zedtang/online-interactive-shell-for-scheme", "Date": "2018-04-25T23:10:10Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.get(1).Type) == (Expression.ExpressionType.Symbol)) { varValue1 = findSymbolInMaps(args.get(1)); }else { varValue1 = args.get(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7583/buggy-version/lispinterpreter.src.main.java.com.cs263.app.Environment.java", "BodyUseAPI": ["java.util.ArrayList<com.cs263.app.Expression>.get(int)", "com.cs263.app.Environment.findSymbolInMaps(args.get(1))", "java.util.ArrayList<com.cs263.app.Expression>.get(int)"], "Fixed commit": "629d6122252ed0f9f810722a2ef16899aad29a40", "Url": "https://api.github.com/repos/zedtang/online-interactive-shell-for-scheme", "Date": "2018-04-25T23:10:10Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((io.sunshower.service.security.Impersonation.user.get()) == null) { io.sunshower.service.security.Impersonation.user.set(new io.sunshower.model.core.auth.User()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7534/buggy-version/sunshower-service.service-security.src.main.java.io.sunshower.service.security.Impersonation.java", "BodyUseAPI": ["java.lang.ThreadLocal<io.sunshower.model.core.auth.User>.set(io.sunshower.model.core.auth.User)"], "Fixed commit": "a5aa8c151c3a11ff218ccda91a725b730b787ac2", "Url": "https://api.github.com/repos/sunshower-io/sunshower-core", "Date": "2018-06-07T18:55:07Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ef.fieldType()) != (java.lang.Class.class)) { val = ef.fieldType().getMethod(\"getValue\", java.lang.String.class).invoke(null, valStr); }else { cn.bestwu.simpleframework.support.excel.ExcelImport.log.info(((((\"Get cell value [\" + i) + \",\") + column) + \"]\")); val = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8260/buggy-version/simpleframework-core.src.main.java.cn.bestwu.simpleframework.support.excel.ExcelImport.java", "BodyUseAPI": ["ef.fieldType().getMethod(\"getValue\", java.lang.String.class).invoke(<nulltype>,java.lang.String)", "cn.bestwu.simpleframework.support.excel.ExcelField.fieldType()", "ef.fieldType().getMethod(java.lang.String,java.lang.Class)"], "Fixed commit": "e767edabd6e9f87a62733e55cfdd1861fd0a8fc5", "Url": "https://api.github.com/repos/bestwu/simpleframework", "Date": "2018-05-03T05:39:31Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getStmtLocked) == null) { org.datanucleus.store.rdbms.sql.SQLStatement sqlStmt = getSQLStatementForGet(ownerOP); getStmtUnlocked = sqlStmt.getSQLText().toSQL(); sqlStmt.addExtension(SQLStatement.EXTENSION_LOCK_FOR_UPDATE, true); getStmtLocked = sqlStmt.getSQLText().toSQL(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5102/buggy-version/src.main.java.org.datanucleus.store.rdbms.scostore.JoinMapStore.java", "BodyUseAPI": [], "Fixed commit": "a23813ec080a851c74442dfe337141cb81ddc38b", "Url": "https://api.github.com/repos/datanucleus/datanucleus-rdbms", "Date": "2018-06-11T22:13:18Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.epilogtool.OptionStore.getOption(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((nodePercent != null) && (nodePercent.equals(EnumNodePercent.YES.toString()))) { for (java.lang.String nodeID : this.mNodeID2Checkbox.keySet()) { javax.swing.JCheckBox jcb = this.mNodeID2Checkbox.get(nodeID); jcb.setText(this.epiGrid.getPercentage(nodeID)); jcb.paintComponents(this.getGraphics()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/759/buggy-version/src.main.java.org.epilogtool.gui.widgets.VisualGridInitialConditions.java", "BodyUseAPI": [], "Fixed commit": "4f9a0e02916d9a408401fad583fe425f2aeb7d27", "Url": "https://api.github.com/repos/epilog-tool/epilog", "Date": "2018-06-12T16:34:11Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.lucene.index.Fields.terms(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fieldTermVector == null) { fieldTermVector = org.elasticsearch.action.termvectors.TermVectorsWriter.EMPTY_TERMS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5336/buggy-version/server.src.main.java.org.elasticsearch.action.termvectors.TermVectorsWriter.java", "BodyUseAPI": [], "Fixed commit": "2efc676623af8b0aaf62349b58d21944ea0a83b0", "Url": "https://api.github.com/repos/liketic/elasticsearch", "Date": "2018-05-08T13:30:05Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (com.kameecoding.ffmpeg.callable.JSONUtils.hasObject(tags, \"language\")) { com.neovisionaries.i18n.LanguageAlpha3Code.getByCodeIgnoreCase(tags.getString(\"language\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2897/buggy-version/src.main.java.com.kameecoding.ffmpeg.callable.Prober.java", "BodyUseAPI": ["com.neovisionaries.i18n.LanguageAlpha3Code.getByCodeIgnoreCase(tags.getString(\"language\"))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "4a6564ce267bef514bbf5219634a36291737cd15", "Url": "https://api.github.com/repos/Kameecoding/ffmpeg-wrapper", "Date": "2018-03-25T09:50:48Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.kameecoding.ffmpeg.callable.JSONUtils.hasObject(currentObject, \"disposition\")) { org.json.JSONObject disposition = currentObject.getJSONObject(\"disposition\"); int forced = disposition.getInt(\"forced\"); isForced = (forced == 1) || (\"forced\".equals(title)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2897/buggy-version/src.main.java.com.kameecoding.ffmpeg.callable.Prober.java", "BodyUseAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "4a6564ce267bef514bbf5219634a36291737cd15", "Url": "https://api.github.com/repos/Kameecoding/ffmpeg-wrapper", "Date": "2018-03-25T09:50:48Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (loc < 64) map.put(com.gianlu.internethacker.models.LabelsManager.buildDomain(labels, from), loc);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3603/buggy-version/src.com.gianlu.internethacker.models.LabelsManager.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,int)"], "Fixed commit": "0a9be654e24872bd87e7eb730383d203cbd0e9fa", "Url": "https://api.github.com/repos/devgianlu/InternetHacker", "Date": "2018-08-26T19:55:03Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loc >= 64) throw new java.lang.IllegalArgumentException(\"Cannot write this pointer!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3603/buggy-version/src.com.gianlu.internethacker.Utils.java", "BodyUseAPI": [], "Fixed commit": "0a9be654e24872bd87e7eb730383d203cbd0e9fa", "Url": "https://api.github.com/repos/devgianlu/InternetHacker", "Date": "2018-08-26T19:55:03Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.equals(\".\")) { checkPath = true; out.writeBoolean(checkPath); out.writeInt(clientPath.length()); out.write(clientPath.getBytes()); }else { checkPath = false; out.writeBoolean(checkPath); msg = (newDir.getName()) + \" is not a folder. Please input again.\"; out.writeInt(msg.length()); out.write(msg.getBytes()); java.lang.System.out.println(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4186/buggy-version/FTPServer.java", "BodyUseAPI": [], "Fixed commit": "3911b8d134e405c5354d3bf947bec3673bbfd0f6", "Url": "https://api.github.com/repos/zinxon/File-Transfer-Program", "Date": "2018-04-22T10:43:22Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(lastType.equals(LuaTokenType.SPACE))) { sb.append(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9229/buggy-version/src.neoe.tools.LuaFormatter.java", "BodyUseAPI": [], "Fixed commit": "7cbb7fd4b19c3ff653ea2792103a3d693d2a9160", "Url": "https://api.github.com/repos/neoedmund/luaformatter", "Date": "2018-03-23T01:18:06Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Game.Playstate) == (Game.PLAYSTATE.MONSTER)) { this.setActiveHero(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4829/buggy-version/Game.java", "BodyUseAPI": [], "Fixed commit": "dfb3c72399ab4d4ea0559ffe8a176f575e186b41", "Url": "https://api.github.com/repos/jiuis311/Militia", "Date": "2018-05-09T07:17:18Z"},
{"Line": "=>1005", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (calculateFeatures) { trainableSuperpixelSegmentation.calculateRegionFeatures(); calculateFeatures = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9100/buggy-version/src.main.java.eus.ehu.tss.Trainable_Superpixel_Segmentation.java", "BodyUseAPI": [], "Fixed commit": "5b920d6bb9fb72d4e7f29e9472c42e9629b9f5e5", "Url": "https://api.github.com/repos/CVPD/Trainable_Superpixel_Segmentation", "Date": "2018-06-26T12:34:34Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((offer.getPages()) < (pages.size())) && ((offer.getStatus()) != (zobonapp.core.domain.Status.DRAFT))) { offer.setStatus(Status.DRAFT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5093/buggy-version/core.src.main.java.zobonapp.core.setup.OffersScraper.java", "BodyUseAPI": ["zobonapp.core.domain.Offer.setStatus(Status.DRAFT)"], "Fixed commit": "e464f031800fd641db15ed6692d95063030165e1", "Url": "https://api.github.com/repos/hatemsalem/zobonapp", "Date": "2018-04-29T20:06:20Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pages.size()) > 0) syncOffer(zobonapp.core.setup.OrodShopWorker.SRC, srcOfferId, companyId, arName, enName, pages, pages.get(0), startDate, endDate);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5093/buggy-version/core.src.main.java.zobonapp.core.setup.OrodShopWorker.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "zobonapp.core.setup.OrodShopWorker.syncOffer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>,java.lang.String,java.util.Date,java.util.Date)"], "Fixed commit": "e464f031800fd641db15ed6692d95063030165e1", "Url": "https://api.github.com/repos/hatemsalem/zobonapp", "Date": "2018-04-29T20:06:20Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mCriteriaSpinner.getSelectedItem()) == null) { mCriteriaSpinner.setSelection(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1184/buggy-version/Section2-DevelopAndroidApp.PopularMovies.app.src.main.java.it.antedesk.popularmovies.HomeActivity.java", "BodyUseAPI": ["android.widget.Spinner.setSelection(int)"], "Fixed commit": "1d606eaa123eb980b451410229028c4ee4a61481", "Url": "https://api.github.com/repos/antedesk/AndroidNanoDegree", "Date": "2018-03-10T17:41:59Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (classes.containsKey(com.ninty.runtime.heap.NiClassLoader.J_CLASS)) { fillJClass(clz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3252/buggy-version/src.main.java.com.ninty.runtime.heap.NiClassLoader.java", "BodyUseAPI": [], "Fixed commit": "b250f174550611dcf933316b5eac6ef9fd755336", "Url": "https://api.github.com/repos/c19354837/ninty", "Date": "2018-10-08T12:55:38Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((\"DD_UPDATE\".equals(strategy)) || (\"DD_INSERT\".equals(strategy))) { }else { strategy = \"DD_UPDATE\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7902/buggy-version/src.main.java.com.wzb.infa.obj.InfaMergeXML.java", "BodyUseAPI": [], "Fixed commit": "93683c6faffac7ccd31ca5a755217ed6225018b2", "Url": "https://api.github.com/repos/wangzhubing12/infazipper", "Date": "2018-09-08T01:27:23Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == 2) { launchActivity(new android.content.Intent(this, com.time.cat.component.activity.addtask.DialogActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6365/buggy-version/app.src.main.java.com.time.cat.component.activity.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "71ad8ed185c86075e195eb9f1b5dbca7ecdf9c12", "Url": "https://api.github.com/repos/triline3/timecat", "Date": "2018-02-18T17:13:31Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((idleChannel) == null) { synchronized(this) { if ((idleChannel) == null) { if ((channel.isConnected()) && (!(channel.isClosed()))) { idleChannel = channel; } }else { channel.disconnect(); } } }else { channel.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/266/buggy-version/commons-vfs2.src.main.java.org.apache.commons.vfs2.provider.sftp.SftpFileSystem.java", "BodyUseAPI": [], "Fixed commit": "939fc9e0a36d9a03b219db003aac7a30ae2fce5f", "Url": "https://api.github.com/repos/qxo/commons-vfs", "Date": "2018-04-24T05:35:26Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((idleChannel) != null) { synchronized(this) { if ((idleChannel) != null) { channel = idleChannel; idleChannel = null; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/266/buggy-version/commons-vfs2.src.main.java.org.apache.commons.vfs2.provider.sftp.SftpFileSystem.java", "BodyUseAPI": [], "Fixed commit": "939fc9e0a36d9a03b219db003aac7a30ae2fce5f", "Url": "https://api.github.com/repos/qxo/commons-vfs", "Date": "2018-04-24T05:35:26Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (abbreviations.isEmpty()) { return bannerText; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4233/buggy-version/libandroid-navigation-ui.src.main.java.com.mapbox.services.android.navigation.ui.v5.instruction.AbbreviationCoordinator.java", "BodyUseAPI": [], "Fixed commit": "73cc170e6d1406224afd025782a58a313a2ed486", "Url": "https://api.github.com/repos/mapbox/mapbox-navigation-android", "Date": "2018-04-30T20:11:09Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (seats[i].seat_lock.lock(ticket)) { try { flag = seats[i].isEmpty(ticket); if (flag) { seats[i].buy(ticket); } } finally { seats[i].seat_lock.unlock(ticket); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1624/buggy-version/Train.java", "BodyUseAPI": ["seats[i].seat_lock.unlock(int)", "seats[i].isEmpty(int)", "seats[i].buy(int)"], "Fixed commit": "81b5e580575acba085f1093e86556de0d6822b70", "Url": "https://api.github.com/repos/CSWater/file", "Date": "2018-01-06T07:16:47Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.vBox.getChildren().isEmpty())) { for (int i = 0; i < (this.vBox.getChildren().size()); i++) { javafx.scene.layout.HBox hBox = ((javafx.scene.layout.HBox) (this.vBox.getChildren().get(i))); for (int j = 0; j < (hBox.getChildren().size()); j++) { if (((javafx.scene.control.TextField) (hBox.getChildren().get(j))).getText().isEmpty()) { java.lang.System.out.println(\"There are an empty sell\"); return; } packet += (((javafx.scene.control.TextField) (hBox.getChildren().get(j))).getText()) + \",\"; } packet += \"|\"; } this.client.sendToServer(\"calculation\", packet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7602/buggy-version/4.src.com.addictedtoyou.tcpApp.view.controllers.MainWindowC.java", "BodyUseAPI": ["javafx.scene.layout.VBox.getChildren()", "this.vBox.getChildren().get(int)", "this.vBox.getChildren().size()", "javafx.scene.layout.VBox.getChildren()"], "Fixed commit": "f652225bae7611d07d9041855845434cb8958f88", "Url": "https://api.github.com/repos/Slnchn/PoWA-Labs", "Date": "2018-10-03T19:40:43Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR1)) { setCompoundDrawablesRelativeWithIntrinsicBounds(drawableLeft, drawableTop, drawableRight, drawableBottom); }else { setCompoundDrawablesWithIntrinsicBounds(drawableLeft, drawableTop, drawableRight, drawableBottom); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7356/buggy-version/app.src.main.java.openfoodfacts.github.scrachx.openfood.utils.CustomEditTextView.java", "BodyUseAPI": [], "Fixed commit": "2e504bb282200625833b2f7f188c717c41c10e6e", "Url": "https://api.github.com/repos/tjwhm/openfoodfacts-androidapp", "Date": "2018-03-11T14:17:14Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.util.Collections.disjoint(personWithPhoneNumber, keywords))) { matchedPersons.add(person); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3928/buggy-version/src.seedu.addressbook.commands.FindPhoneNumberCommand.java", "BodyUseAPI": [], "Fixed commit": "202cb1143ae7360b235ecb27294592609ee62c2d", "Url": "https://api.github.com/repos/CS2103-AY1819S1-T12-4/addressbook-level2", "Date": "2018-09-12T10:14:40Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((grades) == null) { grades = new java.util.HashMap<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2198/buggy-version/app.src.main.java.com.example.sarah.coursetool.UserProfile.StudentProfile.java", "BodyUseAPI": [], "Fixed commit": "e2cfaf88801e6229a70eca7940042ec2cda68d56", "Url": "https://api.github.com/repos/attwoodn/CourseTool", "Date": "2018-07-30T15:22:59Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(this.isDisabled())) && ((this.isNotOptGroup()) || (this.isAValue()))) { if ((this.getParentNode()) != null) { selectParentNodes(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3698/buggy-version/prototypes.VRL-LuaValidation.src.main.java.edu.gcsc.vrl.luaparser.ValueData.java", "BodyUseAPI": [], "Fixed commit": "65469b66f95caf74e3e6d350b6c6db226f84d2a8", "Url": "https://api.github.com/repos/UG4/lua-table-spec-proposal", "Date": "2018-09-20T16:19:10Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.linkedin.replica.wall.commands.impl.AddPostCommand.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((request.get(\"title\")) == null) title = null; else title = request.get(\"title\").getAsString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5255/buggy-version/src.main.java.com.linkedin.replica.wall.commands.impl.AddPostCommand.java", "BodyUseAPI": ["com.google.gson.JsonObject.get(java.lang.String)", "request.get(\"title\").getAsString()"], "Fixed commit": "cc4a4890a6a43b25e20c4ba2b33882bb2fc3bd29", "Url": "https://api.github.com/repos/linkedin-replica/wall", "Date": "2018-04-23T14:32:07Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (guess == null) { guess = new com.kamron.pogoiv.scanlogic.PokemonNameCorrector.PokeDist(normalizedPokemonNameMap.get(normalizedPokemonName), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/284/buggy-version/app.src.main.java.com.kamron.pogoiv.scanlogic.PokemonNameCorrector.java", "BodyUseAPI": [], "Fixed commit": "e92467f884a8a411ab1748cf6412049546ac7930", "Url": "https://api.github.com/repos/udnp/GoIV_JP", "Date": "2018-09-07T12:12:59Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(crossComponentTraversal)) { org.jgrapht.traverse.ClosestFirstIterator.hasNext(); java.util.Iterator<V> iter = startVertices.iterator(); if (iter.hasNext()) { iter.next(); while (iter.hasNext()) { V v = iter.next(); encounterVertex(v, null); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4121/buggy-version/jgrapht-core.src.main.java.org.jgrapht.traverse.ClosestFirstIterator.java", "BodyUseAPI": [], "Fixed commit": "3605be33afb87d766839254ac1f259b1ae7ceb72", "Url": "https://api.github.com/repos/jgrapht/jgrapht", "Date": "2018-03-20T07:10:14Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fa.getIndex()) != null) { builder.append((\", \" + (fa.getIndex().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5172/buggy-version/compilers.framework.src.main.java.org.thingml.compilers.utils.ThingMLPrettyPrinter.java", "BodyUseAPI": ["fa.getIndex().getName()", "org.thingml.compilers.utils.ForAction.getIndex()", "java.lang.StringBuilder.append((\", \" + (fa.getIndex().getName())))"], "Fixed commit": "58a449efdb5399e8a6937e6a69c9df44746edcf7", "Url": "https://api.github.com/repos/TelluIoT/ThingML", "Date": "2018-10-11T20:30:23Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((segmentation) != null) || ((segmentationInt) != null)) || ((segmentationDouble) != null)) { json.put(ly.count.android.sdk.Event.SEGMENTATION_KEY, jobj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3352/buggy-version/sdk.src.main.java.ly.count.android.sdk.Event.java", "BodyUseAPI": [], "Fixed commit": "84af329cf3fcec56969cd1fc787b72ac59c7f9ba", "Url": "https://api.github.com/repos/Countly/countly-sdk-android", "Date": "2018-09-25T15:38:44Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((speechRecognizer) != null) { speechRecognizer.stopListening(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3785/buggy-version/ecommerce.src.main.java.com.algolia.instantsearch.examples.ecommerce.VoiceDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "1b239cc8e48bd60051d0c2b32473e95277c5a9ea", "Url": "https://api.github.com/repos/algolia/instantsearch-android-examples", "Date": "2018-05-31T09:50:20Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mJoystickDragListener) != null) { mJoystickDragListener.onJoystickUpdate(mXDistanceToCenter, mYDistanceToCenter, mNormalizedResultant, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1618/buggy-version/app.src.main.java.com.example.devbox.bluebotcontroller.view.joystick.JoystickView.java", "BodyUseAPI": [], "Fixed commit": "3bdfe5890e5b3655df6da8330513624ecd029738", "Url": "https://api.github.com/repos/vrestivo/bluebotcontroller", "Date": "2018-06-30T19:34:05Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mStopSendingListener) != null) mStopSendingListener.onStopSending();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1618/buggy-version/app.src.main.java.com.example.devbox.bluebotcontroller.view.joystick.JoystickView.java", "BodyUseAPI": [], "Fixed commit": "3bdfe5890e5b3655df6da8330513624ecd029738", "Url": "https://api.github.com/repos/vrestivo/bluebotcontroller", "Date": "2018-06-30T19:34:05Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mJoystickDragListener) != null) { mJoystickDragListener.onJoystickUpdate(mXDistanceToCenter, mYDistanceToCenter, mNormalizedResultant, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1618/buggy-version/app.src.main.java.com.example.devbox.bluebotcontroller.view.joystick.JoystickView.java", "BodyUseAPI": [], "Fixed commit": "3bdfe5890e5b3655df6da8330513624ecd029738", "Url": "https://api.github.com/repos/vrestivo/bluebotcontroller", "Date": "2018-06-30T19:34:05Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mStopSendingListener) != null) mStopSendingListener.onStopSending();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1618/buggy-version/app.src.main.java.com.example.devbox.bluebotcontroller.view.joystick.JoystickView.java", "BodyUseAPI": [], "Fixed commit": "3bdfe5890e5b3655df6da8330513624ecd029738", "Url": "https://api.github.com/repos/vrestivo/bluebotcontroller", "Date": "2018-06-30T19:34:05Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((grantResults.length) > 0) && ((grantResults[0]) == (android.content.pm.PackageManager.PERMISSION_GRANTED))) { java.lang.Thread thread = new java.lang.Thread(new java.lang.Runnable() { @java.lang.Override public void run() { noiseDetector.noiseDetect(); while (true) { double dBval = noiseDetector.noiseLevel(); android.util.Log.i(\"Recorder\", (((int) (dBval)) + \"\")); if ((dBval > 0) && (dBval <= 5000)) { noiseBar.setProgress(((int) (dBval))); } } } }); thread.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/644/buggy-version/app.src.main.java.uic.hcilab.citymeter.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "a47701460dae73d49d47a31a0f81e969ef48f46a", "Url": "https://api.github.com/repos/yujaa/CityMeter-android", "Date": "2018-06-13T00:07:53Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((android.os.SystemClock.elapsedRealtime()) - (mLastClickTime)) < 1000) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9220/buggy-version/app.src.main.java.com.competers.app.utilocatecompanion.Dialogs.CreateAuditDialog.java", "BodyUseAPI": [], "Fixed commit": "c03b43b4c6a79703285576a3b028fbc3739b25ef", "Url": "https://api.github.com/repos/ElliottHurykCompeters/U2PhotoAppAaronsVersion", "Date": "2018-08-15T20:10:20Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lastBits.equals(\"\")) { lastBits = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7030/buggy-version/src.main.java.org.aksw.simba.squirrel.deduplication.hashing.impl.IntervalBasedMinHashFunction.java", "BodyUseAPI": [], "Fixed commit": "29e62f374dc949ad7fa7ffed6f2b9d8a3d29e2ad", "Url": "https://api.github.com/repos/varunmaitreya/Squirrel", "Date": "2018-06-04T13:02:54Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (modeFlag) { int lastIndex = appIndex; appIndex = (_y * (xSum)) + _x; if ((appIndex) != lastIndex) mTTS.speak(appNames[appIndex], TextToSpeech.QUEUE_FLUSH, null, \"out\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7716/buggy-version/diffShow.app.src.main.java.com.example.diffrealtime.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5df2a4a412fb4eacba6102e295f0900cfafbd8ac", "Url": "https://api.github.com/repos/hwj1917/EarTouchMate10", "Date": "2018-06-04T10:18:15Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInputPermit(invocation)) { com.jdon.jivejdon.auth.CUDInputInterceptor.logger.error(Constants.INPUT_PERMITTED); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3212/buggy-version/src.main.java.com.jdon.jivejdon.auth.CUDInputInterceptor.java", "BodyUseAPI": [], "Fixed commit": "bf800df6f49d5955db0513f2ec168860e54f51d3", "Url": "https://api.github.com/repos/banq/jivejdon", "Date": "2018-10-28T00:10:09Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.length()) > 0) { input.append(\".\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7835/buggy-version/app.src.main.java.com.example.calculator.SimpleActivity.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "2359e8733f966b84b166bd9ac312a3bf8fe81c29", "Url": "https://api.github.com/repos/kubiakdamian/calculator-android", "Date": "2018-04-19T21:02:34Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.length()) > 0) { input.append(\".\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7835/buggy-version/app.src.main.java.com.example.calculator.AdvancedActivity.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "2359e8733f966b84b166bd9ac312a3bf8fe81c29", "Url": "https://api.github.com/repos/kubiakdamian/calculator-android", "Date": "2018-04-19T21:02:34Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((configFile) != null) lastEdited = configFile.lastModified();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1036/buggy-version/src.me.mrletsplay.mrcore.config.CustomConfig.java", "BodyUseAPI": [], "Fixed commit": "51a4cdf0f74926cc26d5df19d03c6dccd335f74f", "Url": "https://api.github.com/repos/MrLetsplay2003/MrCore", "Date": "2018-04-14T18:48:43Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldCleanup()) { file.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2919/buggy-version/hub-detect.src.main.groovy.com.blackducksoftware.integration.hub.detect.util.DetectFileManager.java", "BodyUseAPI": [], "Fixed commit": "247aa083436f4f0ac90d61c0b963bf8956ea9356", "Url": "https://api.github.com/repos/blackducksoftware/hub-detect", "Date": "2018-07-30T16:03:45Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cm > (phil.legoev3webservice.robot.RobotCalibration.SENSOR_INFINITY_POINT_CM)) { cm = java.lang.Double.POSITIVE_INFINITY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3804/buggy-version/legoev3webservice.src.main.java.phil.legoev3webservice.map.EnvironmentMap.java", "BodyUseAPI": [], "Fixed commit": "21440e4796bcfa8ff7d6e1eb96b05092991e8983", "Url": "https://api.github.com/repos/phowson/legoev3webservice", "Date": "2018-01-22T16:06:07Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (out != null) { out.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/37/buggy-version/uvm.impl.com.untangle.uvm.SyslogManagerImpl.java", "BodyUseAPI": ["java.io.BufferedWriter.close()"], "Fixed commit": "ce41cf9d7c85f4b48027d44b50f244c8f06bff3c", "Url": "https://api.github.com/repos/untangle/ngfw_src", "Date": "2018-06-13T21:19:27Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((punkte[i]) != 0) { durchschnitt = durchschnitt + (punkte[i]); teiler++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/432/buggy-version/Abitur.src.Abitur.java", "BodyUseAPI": [], "Fixed commit": "f5a368605df253f0dfc5a575863376355a84d095", "Url": "https://api.github.com/repos/hibbes/Abitur", "Date": "2018-07-06T07:01:49Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getNumberOfRatings()) > 0) { this.ratingAverage += (user.getNumberOfRatings()) * (user.getRatingAverage()); averageCount += user.getNumberOfRatings(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7426/buggy-version/src.cf4j.data.DataModel.java", "BodyUseAPI": ["cf4j.data.User.getNumberOfRatings()", "cf4j.data.User.getRatingAverage()", "cf4j.data.User.getNumberOfRatings()"], "Fixed commit": "7caf2e2e3b34c6e4cdeb0a4a6b06d83bc8443aa6", "Url": "https://api.github.com/repos/ferortega/cf4j", "Date": "2018-09-12T11:24:14Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mNotes.get(position).getNoteDescription()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((noteDescription.equals(\"\")) || (noteDescription == null)) { holder.mNoteDescriptionTextView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6945/buggy-version/app.src.main.java.com.justlive.justinbuhay.myownkeep.NotesAdapter.java", "BodyUseAPI": [], "Fixed commit": "0870a48b0526b3cd4524d13917366353f3a0491b", "Url": "https://api.github.com/repos/JBuhay34/NoteTakingApp", "Date": "2018-01-25T07:03:20Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.parse.ParseUser.getCurrentUser()) == null) { query.whereEqualTo(\"ownerID\", com.parse.ParseUser.getCurrentUser().getObjectId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3740/buggy-version/app.src.main.java.com.bamashire.capstoneapp.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "3ca98fa4df18d78649e7661e7401de5df79bef4f", "Url": "https://api.github.com/repos/shogunatealex/capstone-three-triangles", "Date": "2018-03-25T18:57:30Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (i < 3) { binaryValue += (java.lang.Integer.toBinaryString(octet.getValue())) + \".\"; }else { binaryValue += java.lang.Integer.toBinaryString(octet.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/50/buggy-version/src.main.java.netcalc.core.Mask.java", "BodyUseAPI": [], "Fixed commit": "70b02ff35790296d05b063597132c05cff013f4d", "Url": "https://api.github.com/repos/Bulzaj/NetCalc", "Date": "2018-07-31T17:15:22Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRealSendSms()) { code = io.github.pactstart.commonutils.DataUtils.numRandomGenerator(6); }else { code = \"8888888\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5231/buggy-version/kangaroo-mod-system.src.main.java.io.github.pactstart.system.facade.impl.SmsServiceFacadeImpl.java", "BodyUseAPI": [], "Fixed commit": "066eeaa6bd588030facc66e2f4e0ee6d71c84058", "Url": "https://api.github.com/repos/PactStart/kangaroo", "Date": "2018-07-06T11:40:54Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((videoUrl) == null) || (videoUrl.isEmpty())) { playerView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6415/buggy-version/app.src.main.java.com.example.user.bakingapp.DetailFragment.java", "BodyUseAPI": [], "Fixed commit": "aac3dbe1f5dddec13d97cacbfdbd5a3938bda4e8", "Url": "https://api.github.com/repos/CannibalChoco/BakingApp", "Date": "2018-05-19T06:29:32Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.http.client.ClientHttpResponse.getStatusCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((statusCode.value()) == 404) { throw new de.adorsys.aspsp.xs2a.exception.RestException(de.adorsys.aspsp.xs2a.domain.MessageErrorCode.CONSENT_UNKNOWN_403); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/922/buggy-version/xs2a-impl.src.main.java.de.adorsys.aspsp.xs2a.config.rest.consent.ConsentRestErrorHandler.java", "BodyUseAPI": [], "Fixed commit": "5391ee6e283222d6be9222674dbb93a5f6fa0b72", "Url": "https://api.github.com/repos/adorsys/xs2a", "Date": "2018-08-13T10:28:00Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.blakebr0.pickletweaks.config.ModConfig.confMagnet)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8767/buggy-version/src.main.java.com.blakebr0.pickletweaks.feature.item.ItemMagnet.java", "BodyUseAPI": [], "Fixed commit": "b2c81335858319faa33b2c494b115023e58462ce", "Url": "https://api.github.com/repos/BlakeBr0/PickleTweaks", "Date": "2018-02-24T23:23:33Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((person) == null) person = new com.trabal.user.Bean.UserBean();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6369/buggy-version/TraBal.src.com.trabal.linear.pingjiaActivity.java", "BodyUseAPI": [], "Fixed commit": "d68d09e6354acaa0fc76fbcd490e05d5a2b6ba9f", "Url": "https://api.github.com/repos/waveyan/AndroidProject", "Date": "2018-01-06T09:11:42Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.web.context.support.ServletRequestHandledEvent.getRequestUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (url.equals(\"/login\")) { players.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7383/buggy-version/src.main.java.de.queisler.battleship.UI.controller.LobbyController.java", "BodyUseAPI": [], "Fixed commit": "973783d7670734dc60fafc7e8f6a5c03f6773d3c", "Url": "https://api.github.com/repos/devWhyqueue/battleship", "Date": "2018-03-22T16:01:33Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["msi.gama.metamodel.agent.SavedAgent.getInnerPopulations()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (inPop != null) { writer.startNode(\"innerPopulations\"); context.convertAnother(inPop); writer.endNode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7894/buggy-version/ummisco.gama.serialize.src.ummisco.gama.serializer.gamaType.converters.SavedAgentConverter.java", "BodyUseAPI": ["com.thoughtworks.xstream.converters.MarshallingContext.convertAnother(java.util.Map<java.lang.String, java.util.List<msi.gama.metamodel.agent.SavedAgent>>)"], "Fixed commit": "517e6e22e3483fb3707502d26118e1549a99f316", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2018-09-04T11:51:58Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (reader.hasMoreChildren()) { reader.moveDown(); inPop = ((java.util.Map<java.lang.String, java.util.List<msi.gama.metamodel.agent.SavedAgent>>) (arg1.convertAnother(null, gnu.trove.map.hash.THashMap.class))); reader.moveUp(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7894/buggy-version/ummisco.gama.serialize.src.ummisco.gama.serializer.gamaType.converters.SavedAgentConverter.java", "BodyUseAPI": ["com.thoughtworks.xstream.io.HierarchicalStreamReader.moveDown()", "com.thoughtworks.xstream.io.HierarchicalStreamReader.moveUp()"], "Fixed commit": "517e6e22e3483fb3707502d26118e1549a99f316", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2018-09-04T11:51:58Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((grid[i][k]) > 0) { list.add(grid[i][k]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4033/buggy-version/AIsolve.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.add(int)"], "Fixed commit": "c39d31d05d776171dae64128ab8c72b21cf38350", "Url": "https://api.github.com/repos/sputnik792/SudokuSandbox", "Date": "2018-01-07T21:32:02Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((grid[k][j]) > 0) { list.add(grid[k][j]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4033/buggy-version/AIsolve.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.add(int)"], "Fixed commit": "c39d31d05d776171dae64128ab8c72b21cf38350", "Url": "https://api.github.com/repos/sputnik792/SudokuSandbox", "Date": "2018-01-07T21:32:02Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((grid[f][g]) > 0) { list.add(grid[f][g]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4033/buggy-version/AIsolve.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.add(int)"], "Fixed commit": "c39d31d05d776171dae64128ab8c72b21cf38350", "Url": "https://api.github.com/repos/sputnik792/SudokuSandbox", "Date": "2018-01-07T21:32:02Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length()) > 2) { intent.putExtra(\"inputFormat\", args.getString(2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2373/buggy-version/src.android.VrViewer.java", "BodyUseAPI": ["org.json.JSONArray.getString(int)", "android.content.Intent.putExtra(java.lang.String,args.getString(2))"], "Fixed commit": "8000a01fc6d0b509fb8ca7b42bcb34d4e1c34f57", "Url": "https://api.github.com/repos/almas/cordova-plugin-vrviewer", "Date": "2018-04-25T08:26:30Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length()) > 3) { intent.putExtra(\"fromAsset\", args.getString(3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2373/buggy-version/src.android.VrViewer.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,args.getString(3))", "org.json.JSONArray.getString(int)"], "Fixed commit": "8000a01fc6d0b509fb8ca7b42bcb34d4e1c34f57", "Url": "https://api.github.com/repos/almas/cordova-plugin-vrviewer", "Date": "2018-04-25T08:26:30Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeUpdate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (updateCount == 1) { conn.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1114/buggy-version/src.main.java.com.skilldistillery.film.database.FilmDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "15db3d165530db42c1bffa8a76ccb69b19ea8fbd", "Url": "https://api.github.com/repos/miiaevia/SpringMVCFilmCRUD", "Date": "2018-04-15T20:37:14Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((framework.getSecurityTestingObject()) != null) extentReport.logSecuirtyTestingReport(framework.getSecurityTestingObject().returnSecurityHtmlReport());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4892/buggy-version/src.main.java.core.listener.java", "BodyUseAPI": ["core.listener.logSecuirtyTestingReport(framework.getSecurityTestingObject().returnSecurityHtmlReport())", "core.listener.getSecurityTestingObject()", "framework.getSecurityTestingObject().returnSecurityHtmlReport()"], "Fixed commit": "2981b7d1028870c1b021d69a09b31a755a99f766", "Url": "https://api.github.com/repos/premsvmm/Ducati", "Date": "2018-07-06T10:59:21Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (user != null) { organizations = user.getOrganizations(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3743/buggy-version/commerce-organization-service.src.main.java.com.liferay.commerce.organization.service.impl.CommerceOrganizationLocalServiceImpl.java", "BodyUseAPI": ["com.liferay.portal.kernel.model.User.getOrganizations()"], "Fixed commit": "d3bf9144005f249e73235be350be97551ae4fc98", "Url": "https://api.github.com/repos/michaelhashimoto/com-liferay-commerce", "Date": "2018-10-08T15:59:56Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (src.getClass().equals(type)) { return ((T) (src)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3446/buggy-version/src.main.java.com.sonluo.spongebob.spring.server.impl.DefaultBeanOperator.java", "BodyUseAPI": [], "Fixed commit": "b852d9b07766a740879c15f8a4e080e443a6287b", "Url": "https://api.github.com/repos/fredsuvn/spongebob-spring-boot-starter", "Date": "2018-09-13T16:58:59Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (src.getClass().equals(type)) { return ((T) (src)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3446/buggy-version/src.main.java.com.sonluo.spongebob.spring.server.impl.DefaultBeanOperator.java", "BodyUseAPI": [], "Fixed commit": "b852d9b07766a740879c15f8a4e080e443a6287b", "Url": "https://api.github.com/repos/fredsuvn/spongebob-spring-boot-starter", "Date": "2018-09-13T16:58:59Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (op instanceof gov.sandia.n2a.language.OperatorBinary) exponentOperand = ((gov.sandia.n2a.language.OperatorBinary) (op)).operand0.exponentNext; else exponentOperand = ((gov.sandia.n2a.language.OperatorUnary) (op)).operand.exponentNext;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2122/buggy-version/N2A.src.gov.sandia.n2a.backend.c.RendererCfp.java", "BodyUseAPI": [], "Fixed commit": "846f1c51bbb8589f142fe565b02cdcc38460a615", "Url": "https://api.github.com/repos/frothga/n2a", "Date": "2018-09-07T22:17:43Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((target.driveStyle) == (xbot.common.subsystems.drive.RabbitPoint.PointDriveStyle.Micro)) { distanceThreshold /= 4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3423/buggy-version/src.main.java.xbot.common.subsystems.drive.PurePursuitCommand.java", "BodyUseAPI": [], "Fixed commit": "33e0d7ba36ea8975083cb33f51eb241780f2af8c", "Url": "https://api.github.com/repos/Team488/SeriouslyCommonLib", "Date": "2018-03-28T04:04:20Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((target.driveStyle) == (xbot.common.subsystems.drive.RabbitPoint.PointDriveStyle.Micro)) { candidateLookahead /= 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3423/buggy-version/src.main.java.xbot.common.subsystems.drive.PurePursuitCommand.java", "BodyUseAPI": [], "Fixed commit": "33e0d7ba36ea8975083cb33f51eb241780f2af8c", "Url": "https://api.github.com/repos/Team488/SeriouslyCommonLib", "Date": "2018-03-28T04:04:20Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nick.sweeper.main.Grid.tileAt(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (s != null) onClick(s, flag);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1665/buggy-version/src.nick.sweeper.main.Grid.java", "BodyUseAPI": ["nick.sweeper.main.Grid.onClick(nick.sweeper.main.Tile,boolean)"], "Fixed commit": "375b57d4c669aa4d690fbd5f4da070beacb27039", "Url": "https://api.github.com/repos/Nicholas-Baron/FreeSweeper", "Date": "2018-05-01T20:40:08Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (min < max) ((org.jfree.chart.plot.CategoryPlot) (chart.getPlot())).getRangeAxis().setRange(new org.jfree.data.Range(min, max));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8919/buggy-version/src.com.sciome.charts.jfree.violin.SciomeViolinPlot.java", "BodyUseAPI": ["((org.jfree.chart.plot.CategoryPlot) (chart.getPlot())).getRangeAxis().setRange(org.jfree.data.Range)"], "Fixed commit": "71a7a2e281b8d45d85e30389407217780d8fb349", "Url": "https://api.github.com/repos/auerbachs/BMDExpress-2", "Date": "2018-07-09T20:23:41Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((valuesForViolin.size()) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8919/buggy-version/src.com.sciome.charts.jfree.violin.SciomeViolinPlotDatasetJFree.java", "BodyUseAPI": [], "Fixed commit": "71a7a2e281b8d45d85e30389407217780d8fb349", "Url": "https://api.github.com/repos/auerbachs/BMDExpress-2", "Date": "2018-07-09T20:23:41Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["project.getModel().getProfiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (profiles != null) { for (org.apache.maven.model.Profile profile : profiles) { final java.util.List<java.lang.String> modules = profile.getModules(); if (modules != null) { for (java.lang.String module : modules) { excls.add((module + \"/**\")); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1210/buggy-version/editorconfig-maven-plugin.src.main.java.org.ec4j.maven.AbstractEditorconfigMojo.java", "BodyUseAPI": [], "Fixed commit": "7e0e857759b0fcd6b8e3ed9acddc6be789b50b72", "Url": "https://api.github.com/repos/ec4j/editorconfig-maven-plugin", "Date": "2018-01-28T16:08:38Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ituns.library.okhttp.ApiRequest.buildParameters()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (parameters == null) { parameters = org.ituns.library.okhttp.ApiFields.parseObjectToParameters(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4458/buggy-version/library.src.main.java.org.ituns.library.okhttp.ApiRequest.java", "BodyUseAPI": [], "Fixed commit": "bcda2e530250daee29ff86a88bd5988899f185d3", "Url": "https://api.github.com/repos/wangxl056/library-okhttp", "Date": "2018-10-11T01:52:51Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (settings_ip.isVisible()) settings_ip.setVisible(false); else settings_ip.setVisible(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9115/buggy-version/main.src.Main.java", "BodyUseAPI": ["Settings_IP.setVisible(boolean)", "Settings_IP.setVisible(boolean)"], "Fixed commit": "249366f00df929b475f927988b62cc54cf225095", "Url": "https://api.github.com/repos/StreetHalo/moto_scada_s7", "Date": "2018-10-19T12:19:13Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.sNB.equals(\"\"))) { json.put(edu.aku.hassannaqvi.dss_census_sur.contracts.NewBornContract.newBornFup.COLUMN_SNB, ((this.sNB) == null ? org.json.JSONObject.NULL : new org.json.JSONObject(this.sNB))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9242/buggy-version/app.src.main.java.edu.aku.hassannaqvi.dss_census_sur.contracts.NewBornContract.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,((this.sNB) == null ? org.json.JSONObject.NULL : new org.json.JSONObject(this.sNB)))"], "Fixed commit": "fb3ba08ab02741034218e9b74cf17343bed0edd0", "Url": "https://api.github.com/repos/shznaqvi/DSS-Census", "Date": "2018-10-16T12:55:05Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ratio < 100) { return (100 - ratio) * (-1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6259/buggy-version/src.main.java.lotto.domain.LottoResult.java", "BodyUseAPI": [], "Fixed commit": "c49a5df5b8b48543612f6107b119ed6c50395fd5", "Url": "https://api.github.com/repos/trytocloud/java-lotto", "Date": "2018-01-13T15:32:09Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((items.get(i).getItemLevel()) == (items.get(i).getMaxLevel())) { levelBar.setValue(((items.get(i).getItemLevel()) + 1)); upgradeButton.setDisabled(true); upgradeButton.setText(\"Max\\nLevel!\"); }else if ((items.get(i).getItemLevel()) > 1) { levelBar.setValue(((items.get(i).getItemLevel()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1834/buggy-version/core.src.com.moemeido.game.screens.ShopScreen2.java", "BodyUseAPI": ["com.moemeido.game.screens.VisProgressBar.setValue(((items.get(i).getItemLevel()) + 1))", "com.badlogic.gdx.utils.Array<com.moemeido.game.entities.Item>.get(int)", "com.moemeido.game.screens.VisProgressBar.setValue(((items.get(i).getItemLevel()) - 1))", "items.get(i).getItemLevel()", "com.badlogic.gdx.utils.Array<com.moemeido.game.entities.Item>.get(int)", "com.badlogic.gdx.utils.Array<com.moemeido.game.entities.Item>.get(int)", "items.get(i).getItemLevel()", "items.get(i).getItemLevel()"], "Fixed commit": "a2d6bda0ee4c126147f2be5d6b0ac97bf50f366d", "Url": "https://api.github.com/repos/hines-r/virtual-woodcutter", "Date": "2018-06-07T06:41:59Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xMode && (!yMode)) { xMode = !xMode; yMode = !yMode; }else if ((!xMode) && (!yMode)) { yMode = !yMode; }else if (xMode && yMode) { yMode = !yMode; }else if ((!xMode) && yMode) { xMode = !xMode; yMode = !yMode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7422/buggy-version/src.org.motionpoint.main.World.java", "BodyUseAPI": [], "Fixed commit": "225ed7c9b626fcc97a51ccd9f188073acfc84d5c", "Url": "https://api.github.com/repos/LewFew/MotionPoint", "Date": "2018-10-08T18:20:12Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((180 < theta) && (theta < 270)) { if (xMode && (!yMode)) { yMode = !yMode; }else if ((!xMode) && (!yMode)) { xMode = !xMode; yMode = !yMode; }else if (xMode && yMode) { xMode = !xMode; yMode = !yMode; }else if ((!xMode) && yMode) { yMode = !yMode; } if (!xMode) { theta = theta + 90; deltaX = ((int) ((radius * (java.lang.Math.cos(java.lang.Math.toRadians(theta)))) - (radius * (java.lang.Math.cos(java.lang.Math.toRadians(135)))))); deltaY = ((int) ((radius * (java.lang.Math.sin(java.lang.Math.toRadians(theta)))) - (radius * (java.lang.Math.sin(java.lang.Math.toRadians(135)))))); }else { theta = theta - 90; deltaX = ((int) ((radius * (java.lang.Math.cos(java.lang.Math.toRadians(theta)))) - (radius * (java.lang.Math.cos(java.lang.Math.toRadians(135)))))); deltaY = ((int) ((radius * (java.lang.Math.sin(java.lang.Math.toRadians(theta)))) - (radius * (java.lang.Math.sin(java.lang.Math.toRadians(135)))))); } }else if ((270 < theta) && (theta < 360)) { if (xMode && (!yMode)) { xMode = !xMode; }else if ((!xMode) && yMode) { xMode = !xMode; } if (!xMode) { theta = theta - 270; deltaX = ((int) ((radius * (java.lang.Math.cos(java.lang.Math.toRadians(theta)))) - (radius * (java.lang.Math.cos(java.lang.Math.toRadians(135)))))); deltaY = ((int) ((radius * (java.lang.Math.sin(java.lang.Math.toRadians(theta)))) - (radius * (java.lang.Math.sin(java.lang.Math.toRadians(135)))))); }else { theta = theta - 90; deltaX = ((int) ((radius * (java.lang.Math.cos(java.lang.Math.toRadians(theta)))) - (radius * (java.lang.Math.cos(java.lang.Math.toRadians(135)))))); deltaY = ((int) ((radius * (java.lang.Math.sin(java.lang.Math.toRadians(theta)))) - (radius * (java.lang.Math.sin(java.lang.Math.toRadians(135)))))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7422/buggy-version/src.org.motionpoint.main.World.java", "BodyUseAPI": [], "Fixed commit": "225ed7c9b626fcc97a51ccd9f188073acfc84d5c", "Url": "https://api.github.com/repos/LewFew/MotionPoint", "Date": "2018-10-08T18:20:12Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xMode && (!yMode)) { xMode = !xMode; }else if ((!xMode) && yMode) { xMode = !xMode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7422/buggy-version/src.org.motionpoint.main.World.java", "BodyUseAPI": [], "Fixed commit": "225ed7c9b626fcc97a51ccd9f188073acfc84d5c", "Url": "https://api.github.com/repos/LewFew/MotionPoint", "Date": "2018-10-08T18:20:12Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((xMode && yMode) || ((!xMode) && (!yMode))) { xMode = !xMode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7422/buggy-version/src.org.motionpoint.main.World.java", "BodyUseAPI": [], "Fixed commit": "225ed7c9b626fcc97a51ccd9f188073acfc84d5c", "Url": "https://api.github.com/repos/LewFew/MotionPoint", "Date": "2018-10-08T18:20:12Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((categoriesList) == null) categoriesList = new java.util.ArrayList<>(emptyList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4873/buggy-version/Frontend.PriceTag.app.src.main.java.antunmod.projects.pricetag.view.fragment.SearchFragment.java", "BodyUseAPI": [], "Fixed commit": "5e2213110fec2f3638eebe1730e7ca3b12614c77", "Url": "https://api.github.com/repos/antunmod/PriceTag", "Date": "2018-06-17T22:57:07Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((storesList) == null) storesList = new java.util.ArrayList<>(emptyList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4873/buggy-version/Frontend.PriceTag.app.src.main.java.antunmod.projects.pricetag.view.fragment.SearchFragment.java", "BodyUseAPI": [], "Fixed commit": "5e2213110fec2f3638eebe1730e7ca3b12614c77", "Url": "https://api.github.com/repos/antunmod/PriceTag", "Date": "2018-06-17T22:57:07Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((subcategoriesList) == null) subcategoriesList = new java.util.ArrayList<>(emptyList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4873/buggy-version/Frontend.PriceTag.app.src.main.java.antunmod.projects.pricetag.view.fragment.SearchFragment.java", "BodyUseAPI": [], "Fixed commit": "5e2213110fec2f3638eebe1730e7ca3b12614c77", "Url": "https://api.github.com/repos/antunmod/PriceTag", "Date": "2018-06-17T22:57:07Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((producersList) == null) producersList = new java.util.ArrayList<>(emptyList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4873/buggy-version/Frontend.PriceTag.app.src.main.java.antunmod.projects.pricetag.view.fragment.SearchFragment.java", "BodyUseAPI": [], "Fixed commit": "5e2213110fec2f3638eebe1730e7ca3b12614c77", "Url": "https://api.github.com/repos/antunmod/PriceTag", "Date": "2018-06-17T22:57:07Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.exist.xquery.functions.fn.LOG.isTraceEnabled()) { org.exist.xquery.functions.fn.FunExactlyOne.logger.trace(((\"fn:exactly-one called with a sequence containing \" + (result.getItemCount())) + \" items\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8520/buggy-version/src.org.exist.xquery.functions.fn.FunExactlyOne.java", "BodyUseAPI": [], "Fixed commit": "315a1271a0e085829dfe7c92a2840a50ef2a486a", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2018-07-12T13:33:25Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.exist.xquery.functions.fn.LOG.isTraceEnabled()) { org.exist.xquery.functions.fn.FunError.logger.trace(((errorDesc + \": \") + (errorCode.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8520/buggy-version/src.org.exist.xquery.functions.fn.FunError.java", "BodyUseAPI": [], "Fixed commit": "315a1271a0e085829dfe7c92a2840a50ef2a486a", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2018-07-12T13:33:25Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.solarnetwork.node.metadata.json.JsonDatumMetadataService.extractFilterResultsCollectionResponseData(java.io.InputStream,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((results != null) && (!(results.isEmpty()))) { return results.iterator().next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5316/buggy-version/net.solarnetwork.node.metadata.json.src.net.solarnetwork.node.metadata.json.JsonDatumMetadataService.java", "BodyUseAPI": ["java.util.Collection<net.solarnetwork.domain.GeneralDatumMetadata>.iterator()", "results.iterator().next()"], "Fixed commit": "798313200dba9f289952f611c7492e4d49c6b55e", "Url": "https://api.github.com/repos/SolarNetwork/solarnetwork-node", "Date": "2018-09-19T02:35:10Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getID()) != 1) currentLevel.renderingOpen(position, character.ID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4999/buggy-version/src.character.NPCWithItem.java", "BodyUseAPI": [], "Fixed commit": "738965f93f76312050156ebbd545600f76138886", "Url": "https://api.github.com/repos/wang0630/Java-RPG", "Date": "2018-06-16T15:07:41Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != connection) { connection.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1949/buggy-version/src.main.java.happy.mksense.util.HttpUtils.java", "BodyUseAPI": ["java.net.HttpURLConnection.disconnect()"], "Fixed commit": "b59706c051c985a2f5bc2dcf04b0011f6027c720", "Url": "https://api.github.com/repos/luboxun/qamaster", "Date": "2018-10-31T08:29:48Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gitflow.ui.GitflowState.getTaskBranch(com.intellij.tasks.Task)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (taskFullBranchName != null) { java.lang.String taskBranchName = gitflowBranchUtil.stripFullBranchName(taskFullBranchName); if (finishFeatureCheckbox.isSelected()) { gitflow.actions.FinishFeatureAction action = new gitflow.actions.FinishFeatureAction(myRepo); action.runAction(myProject, taskBranchName); }else if (finishHotfixCheckbox.isSelected()) { gitflow.actions.FinishHotfixAction action = new gitflow.actions.FinishHotfixAction(myRepo); action.runAction(myProject, taskBranchName, tagMessageTextField.getText(), null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8198/buggy-version/src.gitflow.ui.GitflowCloseTaskPanel.java", "BodyUseAPI": ["gitflow.ui.GitflowBranchUtil.stripFullBranchName(java.lang.String)"], "Fixed commit": "1bd986268d2e5e0af394f2fa24cab59f6e08d6fe", "Url": "https://api.github.com/repos/OpherV/gitflow4idea", "Date": "2018-03-25T12:43:07Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hasFocus) hideKeyBoard(getContext());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8010/buggy-version/lazydatepicker.src.main.java.com.mikhaellopez.lazydatepicker.LazyDatePicker.java", "BodyUseAPI": [], "Fixed commit": "adf63776acac5b100ec0839833c145b91499f0cc", "Url": "https://api.github.com/repos/ln206/LazyDatePicker", "Date": "2018-09-20T01:06:19Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cfg.isReducible()) && ((cfg.getCFGLoops().size()) > 0)) { loopSuccessorSlot = frame.addFrameSlot(com.oracle.truffle.llvm.parser.LazyToTruffleConverterImpl.LOOP_SUCCESSOR_FRAME_ID, FrameSlotKind.Int); nodes = resolveLoops(nodes, cfg, frame, nullableBeforeBlock, nullableAfterBlock, loopSuccessorSlot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3617/buggy-version/projects.com.oracle.truffle.llvm.parser.src.com.oracle.truffle.llvm.parser.LazyToTruffleConverterImpl.java", "BodyUseAPI": ["com.oracle.truffle.llvm.parser.LazyToTruffleConverterImpl.resolveLoops(java.util.List<com.oracle.truffle.llvm.runtime.nodes.api.LLVMStatementNode>,com.oracle.truffle.llvm.parser.util.LLVMControlFlowGraph,com.oracle.truffle.api.frame.FrameDescriptor,com.oracle.truffle.api.frame.FrameSlot[][],com.oracle.truffle.api.frame.FrameSlot[][],com.oracle.truffle.api.frame.FrameSlot)"], "Fixed commit": "26a46011729ca93fe2bb3499c0dbb5d00d86ae0b", "Url": "https://api.github.com/repos/rmosaner/sulong", "Date": "2018-09-03T10:43:16Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user != null) { com.google.firebase.auth.FirebaseAuth.getInstance().signOut(); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9793/buggy-version/app.src.main.java.com.hersheys.recommender.pistachio.SignUpActivity.java", "BodyUseAPI": [], "Fixed commit": "4e33e0df55e89206451c26e4761d86d551a1f1ac", "Url": "https://api.github.com/repos/pranavbudhwant/pistach.io", "Date": "2018-10-11T06:05:44Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((tag != null) && (tag.toString().contains(\"skin\"))) { skinStyle = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5607/buggy-version/uiview.src.main.java.com.angcyo.uiview.widget.RTextCheckView.java", "BodyUseAPI": [], "Fixed commit": "d3fa20dc7be1db5d5af745a65d851a16b18625e4", "Url": "https://api.github.com/repos/angcyo/RLibrary", "Date": "2018-07-10T07:07:40Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.caliog.Rolecraft.XMechanics.Utils.Utils.isBukkitMethod(\"org.bukkit.event.inventory.InventoryClickEvent\", \"getClickedInventory\", a)) { inv = event.getClickedInventory(); }else { inv = event.getInventory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/138/buggy-version/src.org.caliog.Rolecraft.XMechanics.Listeners.RolecraftListener.java", "BodyUseAPI": [], "Fixed commit": "5e83bc9bb08f78c77f7231eb32c0c056fc3ed9e4", "Url": "https://api.github.com/repos/caliog/Rolecraft", "Date": "2018-02-18T22:50:57Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.caliog.Rolecraft.XMechanics.Utils.Utils.isBukkitMethod(\"org.bukkit.event.inventory.InventoryClickEvent\", \"getClickedInventory\", a)) { inv = event.getClickedInventory(); }else { inv = event.getInventory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/138/buggy-version/src.org.caliog.Rolecraft.XMechanics.Menus.MenuInventoryView.java", "BodyUseAPI": [], "Fixed commit": "5e83bc9bb08f78c77f7231eb32c0c056fc3ed9e4", "Url": "https://api.github.com/repos/caliog/Rolecraft", "Date": "2018-02-18T22:50:57Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.demo.snmpServer.SnmpServer.getVlanBegin()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (interfacenum == (-1)) { interfacenum = t.getInterfaceNum(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6525/buggy-version/src.main.java.com.example.demo.Controller.java", "BodyUseAPI": [], "Fixed commit": "010b4d3dbfd3b190ec834db54c7456a040eba756", "Url": "https://api.github.com/repos/xxr5566833/snmpManage", "Date": "2018-07-15T09:20:14Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.hhu.bsinfo.dxnet.DXNetMain.ms_recvCount) != 0) { while (!(de.hhu.bsinfo.dxnet.DXNetMain.ms_remoteFinished)) { try { java.lang.Thread.sleep(100); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5564/buggy-version/DXNetMain.java", "BodyUseAPI": [], "Fixed commit": "d06190e76b6f2a44a13599697869e42ac717b432", "Url": "https://api.github.com/repos/hhu-bsinfo/dxnet-src", "Date": "2018-01-12T15:00:17Z"},
{"Line": "=>600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.motechproject.nms.kilkari.service.SubscriptionService.getLatestDeactivatedSubscription(org.motechproject.nms.kilkari.domain.Subscriber,pack.getType())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((org.motechproject.nms.kilkari.domain.DeactivationReason.LOW_LISTENERSHIP) == (deactivatedSubscripion.getDeactivationReason())) || ((org.motechproject.nms.kilkari.domain.DeactivationReason.WEEKLY_CALLS_NOT_ANSWERED) == (deactivatedSubscripion.getDeactivationReason()))) { return reactivateSubscription(subscriber, deactivatedSubscripion, dateTime); }else { org.motechproject.nms.kilkari.service.impl.SubscriberServiceImpl.LOGGER.error(\"Reactivation is not valid in this scenario.\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7264/buggy-version/kilkari.src.main.java.org.motechproject.nms.kilkari.service.impl.SubscriberServiceImpl.java", "BodyUseAPI": ["org.motechproject.nms.kilkari.service.impl.SubscriberServiceImpl.reactivateSubscription(org.motechproject.nms.kilkari.domain.Subscriber,org.motechproject.nms.kilkari.domain.Subscription,org.joda.time.DateTime)"], "Fixed commit": "68c5c8cb4ed9405ed4222a203b34f0122464305e", "Url": "https://api.github.com/repos/motech-implementations/nms", "Date": "2018-07-13T03:44:31Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["debtQuantityEditText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isQuantityStringEmpty(quantityString)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9116/buggy-version/app.src.main.java.com.aduen.nauzet.debtcontrol.AddDebtActivity.java", "BodyUseAPI": [], "Fixed commit": "e954ba6c5dcfe34e0c79ec92fac9e21b171d166b", "Url": "https://api.github.com/repos/NauzetAduen/DebtControl", "Date": "2018-08-28T08:05:22Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((names.length) > 1) { firstName = (names[0].substring(0, 1).toLowerCase()) + (names[0].substring(1)); lastName = (names[1].substring(0, 1).toLowerCase()) + (names[1].substring(1)); }else { firstName = name; lastName = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3114/buggy-version/mailPranksGenerator.src.main.java.model.mail.Person.java", "BodyUseAPI": [], "Fixed commit": "e57d8a661854dffe1ca1a51d9a031671ae060eaa", "Url": "https://api.github.com/repos/Ludwig9392/RES-SMTP-Labo-03", "Date": "2018-04-17T16:27:16Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((iso.getNaturalAbundance()) / 100.0) < (minAbundance)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2921/buggy-version/src.main.java.net.sf.mzmine.modules.peaklistmethods.isotopes.isotopepeakscanner.ExtendedIsotopePattern.java", "BodyUseAPI": [], "Fixed commit": "7e94aec18bbedadb102f447160c1c071b97ce845", "Url": "https://api.github.com/repos/SteffenHeu/mzmine2", "Date": "2018-09-11T15:02:45Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bt.net.buffer.BorrowedBuffer<java.nio.ByteBuffer>.lockAndGet()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (buffer == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8203/buggy-version/bt-core.src.main.java.bt.net.pipeline.SocketChannelHandler.java", "BodyUseAPI": [], "Fixed commit": "c8efeabdbbba78782b739adf9eb7ef4866fe5488", "Url": "https://api.github.com/repos/ckovorodkin/bt", "Date": "2018-02-16T23:25:03Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ctx.getPartialViewContext().isPartialRequest()) { if ((!(ctx.getPartialViewContext().getRenderIds().contains(\"javax.faces.ViewRoot\"))) && (!(ctx.getPartialViewContext().getRenderIds().contains(\"@all\")))) { ctx.getAttributes().put(com.quakearts.webapp.facelets.bootstrap.common.BootHeaderComponent.BOOT_LIBRARY_LOADED, com.quakearts.webapp.facelets.bootstrap.common.BootHeaderComponent.NULLCOMPONENT); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6291/buggy-version/qa-boot.src.main.java.com.quakearts.webapp.facelets.bootstrap.common.BootHeaderComponent.java", "BodyUseAPI": ["ctx.getPartialViewContext().getRenderIds().contains(java.lang.String)", "ctx.getPartialViewContext().getRenderIds()", "ctx.getPartialViewContext().getRenderIds().contains(java.lang.String)", "javax.faces.context.FacesContext.getPartialViewContext()", "ctx.getPartialViewContext().getRenderIds()", "javax.faces.context.FacesContext.getPartialViewContext()", "ctx.getAttributes().put(java.lang.String,java.lang.String)", "javax.faces.context.FacesContext.getAttributes()"], "Fixed commit": "e3e76ce81bf861f0d5c30cce837b10d714c560ea", "Url": "https://api.github.com/repos/kwakutwumasi/Quakearts-Webtools", "Date": "2018-02-01T13:34:30Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) > 9) { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2926/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "41d723cac7a73d8b37a016b18b19aec8597c71bf", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-Pickle1235", "Date": "2018-09-27T15:09:06Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((selectedSetting.equals(\"shutdown\")) || (selectedSetting.equals(\"restart\"))) { saveSettings(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6308/buggy-version/Time2Sleep.src.main.java.de.skonline90.Time2Sleep.view.Gui.java", "BodyUseAPI": [], "Fixed commit": "e935e22f35f8eb0a56bf491b2b772117d1d92dd7", "Url": "https://api.github.com/repos/skonline90/Time2Sleep", "Date": "2018-07-29T09:12:10Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((\"mgnl:created\".equals(property)) || (\"mgnl:lastModified\".equals(property))) || (\"mgnl:lastActivated\".equals(property))) { java.util.Calendar date = info.magnolia.jcr.util.PropertyUtil.getDate(node, property); if (date != null) { cell.setCellValue(date); }else { cell.setCellValue(StringUtils.EMPTY); } }else { cell.setCellValue(info.magnolia.jcr.util.PropertyUtil.getString(node, property, StringUtils.EMPTY)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/893/buggy-version/src.main.java.com.namics.oss.magnolia.dictionary.services.XlsExportService.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Cell.setCellValue(info.magnolia.jcr.util.PropertyUtil.getString(node, property, StringUtils.EMPTY))", "info.magnolia.jcr.util.PropertyUtil.getString(javax.jcr.Node,java.lang.String,StringUtils.EMPTY)", "info.magnolia.jcr.util.PropertyUtil.getDate(javax.jcr.Node,java.lang.String)"], "Fixed commit": "4ef325f22f8eba9d8d201df8ee3fd5817c2d067d", "Url": "https://api.github.com/repos/namics/magnolia-dictionary", "Date": "2018-01-24T14:43:19Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.Game.playOrDiscardPosition(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((playedCard.number()) == (hanabi.Card.NUMBER_MAX)) && ((this.hints) < 8)) { (this.hints)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4099/buggy-version/src.game.Game.java", "BodyUseAPI": [], "Fixed commit": "92de16954f4eb411d0fe7d631389fd660db0237d", "Url": "https://api.github.com/repos/bricehuang/hanabi", "Date": "2018-01-06T23:02:08Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((writeQ.peek().getAPIType()) != (net.spy.memcached.ops.APIType.MGET)) { optimize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4814/buggy-version/src.main.java.net.spy.memcached.protocol.TCPMemcachedNodeImpl.java", "BodyUseAPI": [], "Fixed commit": "eff908db7fd23543223e574dcea3b1c5a96b06d6", "Url": "https://api.github.com/repos/MinWooJin/arcus-java-client", "Date": "2018-02-22T06:53:41Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getSession().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (u == null) { help.Redirect.errorPage(request, response, \"Session of user expired, please login again\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/26/buggy-version/src.servlet.UnresolvedProductsByProduct.java", "BodyUseAPI": [], "Fixed commit": "b5f7955c9dcc27aa1aadf05ae9c9e79d702cf6f3", "Url": "https://api.github.com/repos/nohepe/SoftwareDatabase", "Date": "2018-04-09T14:28:29Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cal.getFunction().equals(\"Divide\")) { result = cal.Divide(cal.getNum1(), cal.getNum2()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7776/buggy-version/Calculator.src.CalculatorLayout.java", "BodyUseAPI": ["Calculator.getNum2()", "Calculator.Divide(cal.getNum1(),cal.getNum2())", "Calculator.getNum1()"], "Fixed commit": "e03b4332a688a34da87062810a49423b06d4c4c1", "Url": "https://api.github.com/repos/Sir-Teo/JavaCalculator", "Date": "2018-05-19T06:58:26Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cal.getFunction().equals(\"Multiply\")) { result = cal.Multiply(cal.getNum1(), cal.getNum2()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7776/buggy-version/Calculator.src.CalculatorLayout.java", "BodyUseAPI": ["Calculator.getNum2()", "Calculator.Multiply(cal.getNum1(),cal.getNum2())", "Calculator.getNum1()"], "Fixed commit": "e03b4332a688a34da87062810a49423b06d4c4c1", "Url": "https://api.github.com/repos/Sir-Teo/JavaCalculator", "Date": "2018-05-19T06:58:26Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((message2) == null) { message2 = message4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7649/buggy-version/app.src.main.java.com.vedant.hereami.chatfolder.chatactivity.java", "BodyUseAPI": [], "Fixed commit": "910a6833cfe433f3de0dfeb269ce6fc37effd484", "Url": "https://api.github.com/repos/sunnybedi990/Hereami", "Date": "2018-03-28T04:42:07Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(input.isDirectory())) { byte[] stdinarr = java.nio.file.Files.readAllBytes(input.toPath()); stdin = new java.lang.String(stdinarr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5666/buggy-version/src.com.openhorizonsolutions.ltr.ProblemLoaderUtils.java", "BodyUseAPI": ["java.nio.file.Files.readAllBytes(java.nio.file.Path)", "java.io.File.toPath()"], "Fixed commit": "c8843cd791bddfa25ca40c758bf34e52e0723026", "Url": "https://api.github.com/repos/DrDab/LaunchTestRun", "Date": "2018-08-26T04:51:21Z"},
{"Line": "=>665", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (customer.isOptIn()) { customer.setLastContactedDate(today); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6032/buggy-version/app.src.main.java.com.kpblog.tt.Fragment_RegisterOrUpdate.java", "BodyUseAPI": ["com.kpblog.tt.model.Customer.setLastContactedDate(java.sql.Date)"], "Fixed commit": "104ee975df4b75d481702dc4caf2d8cbd03ad86e", "Url": "https://api.github.com/repos/haidang83/SQLiteApplication", "Date": "2018-08-30T03:48:58Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.is_running) { java.lang.System.out.println(\"Already Running.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1192/buggy-version/src.main.java.core.Simulation.java", "BodyUseAPI": [], "Fixed commit": "30b4cf71bf0c024d77d4d30e796a40dbac39c8bd", "Url": "https://api.github.com/repos/weidler/traffic-simulation", "Date": "2018-03-28T10:15:57Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (from.equals(\"exit\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6431/buggy-version/calc.src.calc.Calc.java", "BodyUseAPI": [], "Fixed commit": "42a300fb97ae80b89e3c9a78810d5cd5524b628b", "Url": "https://api.github.com/repos/rayli24/Calc480", "Date": "2018-10-31T07:56:37Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getOrSet.equals(\"get\")) { sb.append(mem.type); }else { sb.append(\"void\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4150/buggy-version/Program.src.ast.FILEDEC.java", "BodyUseAPI": [], "Fixed commit": "57b3cd244d470535465dc0934814792ca8c1931b", "Url": "https://api.github.com/repos/NoaAvigad/CPSC410", "Date": "2018-10-16T04:38:02Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((processing.core.PConstants.P3D.equals(drawMode)) || (processing.core.PConstants.P2D.equals(drawMode))) { pg = com.giantrainbow.RainbowStudio.pApplet.createGraphics(imageWidth, imageHeight, drawMode); }else { pg = com.giantrainbow.RainbowStudio.pApplet.createGraphics(imageWidth, imageHeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4427/buggy-version/src.main.java.com.giantrainbow.patterns.PGBase.java", "BodyUseAPI": [], "Fixed commit": "c7e66a20be598ce2c45e6be452142c88e25546a4", "Url": "https://api.github.com/repos/tracyscott/RainbowStudio", "Date": "2018-08-09T08:50:21Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["o.get(\"error\").getAsString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (EscConst.Error.COMMAND_PARSE_ERROR.equals(errorDescription)) { try { java.lang.Thread.sleep(3000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1311/buggy-version/qa.src.net.adshares.ads.qa.util.FunctionCaller.java", "BodyUseAPI": [], "Fixed commit": "766a18b119cd35978f3a3b0d2631380678e8709f", "Url": "https://api.github.com/repos/adshares/ads-tests", "Date": "2018-07-11T10:54:09Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activePeerIndex) >= (peers.size())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/536/buggy-version/src.ru.didim99.tstu.filetransfer.core.network.PeerManager.java", "BodyUseAPI": [], "Fixed commit": "b6af33139736e0ac1525d3d4969efc5b810454e2", "Url": "https://api.github.com/repos/didim99/FileTransfer", "Date": "2018-10-25T16:42:06Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getId()) != 0) { com.google.gson.JsonElement jsonElement = gson.toJsonTree(this); jsonElement.getAsJsonObject().addProperty(\"id\", getId()); json = gson.toJson(jsonElement); }else { json = gson.toJson(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1319/buggy-version/src.main.java.roboy.memory.nodes.MemoryNodeModel.java", "BodyUseAPI": [], "Fixed commit": "cafe583a0ea3ae879942adb2c415ebac00b54b21", "Url": "https://api.github.com/repos/Roboy/roboy_dialog", "Date": "2018-03-19T15:13:42Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.http.util.TextUtils.isEmpty(result))) { if ((java.lang.Integer.valueOf(result)) == 0) { com.yp.trackingapp.util.Helper.displayMessageToUser(this, getString(R.string.login_error_title), getString(R.string.not_found_error_message)).show(); }else { com.yp.trackingapp.util.PrefManager.setID(PrefManager.USER_ID, result); startActivity(com.yp.trackingapp.util.Helper.getIntent(this, com.yp.trackingapp.ui.DispatchActivity.class)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2520/buggy-version/app.src.main.java.com.yp.trackingapp.ui.LoginActivity.java", "BodyUseAPI": ["com.yp.trackingapp.util.PrefManager.setID(PrefManager.USER_ID,java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "eb1c2eb9af4c83d6066cdeacf84d4753f85ad751", "Url": "https://api.github.com/repos/VinitYadav/tracking", "Date": "2018-05-16T11:28:45Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((feedback.getScreenshotFeedbackList()) != null) && (!(feedback.getScreenshotFeedbackList().isEmpty()))) { bitmapName = feedback.getScreenshotFeedbackList().get(0).getPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5379/buggy-version/android_library.feedbacklibrary.src.main.java.ch.uzh.supersede.feedbacklibrary.utils.FeedbackUtility.java", "BodyUseAPI": ["feedback.getScreenshotFeedbackList().get(0).getPath()", "ch.uzh.supersede.feedbacklibrary.utils.Feedback.getScreenshotFeedbackList()", "feedback.getScreenshotFeedbackList().get(int)"], "Fixed commit": "7a2170c9dac6461de6c87a0f2a7d72bbaed5ff44", "Url": "https://api.github.com/repos/BonzanigoMarco/FeedbackToFeedback", "Date": "2018-07-22T12:36:08Z"},
{"Line": "=>6796", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.startsWith(\"file:/\")) { return file.substring(5); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9846/buggy-version/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "985672a80ec01d0daffad8985e6765955352030c", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2018-02-09T15:47:07Z"},
{"Line": "=>6790", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.startsWith(\"file:///\")) { return file.substring(7); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9846/buggy-version/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "985672a80ec01d0daffad8985e6765955352030c", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2018-02-09T15:47:07Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.item.EntityItemFrame.getHangingPosition()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (blockpos == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4411/buggy-version/src.main.java.org.spongepowered.common.mixin.optimization.mapoptimization.MixinMapData.java", "BodyUseAPI": [], "Fixed commit": "b7328923fbf54541d471b99ff59484b04324badb", "Url": "https://api.github.com/repos/SpongePowered/SpongeCommon", "Date": "2018-08-09T01:32:31Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((initials) == null) || (initials.isEmpty())) idempotentIdx = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5521/buggy-version/src.main.java.io.bdrc.lucene.sa.SkrtWordTokenizer.java", "BodyUseAPI": [], "Fixed commit": "94ca6230b911281f3b5556672108e012504bdfa4", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/lucene-sa", "Date": "2018-06-18T13:11:32Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((initials) == null) || (initials.isEmpty())) idempotentIdx = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5521/buggy-version/src.main.java.io.bdrc.lucene.sa.SkrtWordTokenizer.java", "BodyUseAPI": [], "Fixed commit": "94ca6230b911281f3b5556672108e012504bdfa4", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/lucene-sa", "Date": "2018-06-18T13:11:32Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (number > 10) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9883/buggy-version/schoolsearch.java", "BodyUseAPI": [], "Fixed commit": "77797de59dcc05003748ed3f4fb337e1661a5f41", "Url": "https://api.github.com/repos/rocketeer55/Databases-365-lab-1.1", "Date": "2018-09-26T15:47:52Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (checkIfAfford(currentPlayer, amount)) currentPlayer.getAccount().withdraw(amount); else { currentPlayer.getAccount().withdraw(currentPlayerBalance); currentPlayer.setBanktrupt(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5389/buggy-version/src.core.ChanceCardLogic.ChanceCardController.java", "BodyUseAPI": ["currentPlayer.getAccount().withdraw(int)", "currentPlayer.getAccount().withdraw(int)", "core.ChanceCardLogic.Player.getAccount()", "core.ChanceCardLogic.Player.getAccount()", "core.ChanceCardLogic.Player.setBanktrupt(boolean)"], "Fixed commit": "aaa8f786e729c261b105ea24ffd5cfeca1dcadb5", "Url": "https://api.github.com/repos/mathiasthejsen/13_Final", "Date": "2018-01-11T09:17:25Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.badlogic.gdx.utils.BufferUtils.isUnsafeByteBuffer(buffer)) com.badlogic.gdx.utils.BufferUtils.disposeUnsafeByteBuffer(buffer);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2707/buggy-version/extensions.gdx-freetype.src.com.badlogic.gdx.graphics.g2d.freetype.FreeType.java", "BodyUseAPI": ["com.badlogic.gdx.utils.BufferUtils.disposeUnsafeByteBuffer(java.nio.ByteBuffer)"], "Fixed commit": "9f76bb27d345a685a0ec3b8f57e105eae74f0a32", "Url": "https://api.github.com/repos/PokeMMO/libgdx", "Date": "2018-06-18T05:49:54Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (AppMain.formType.equals(\"9\")) { updcount = db.updates9E(); }else if (AppMain.formType.equals(\"10\")) { updcount = db.updates10E(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7682/buggy-version/app.src.main.java.edu.aku.hassannaqvi.mappsform07.activities.Section9EActivity.java", "BodyUseAPI": [], "Fixed commit": "911daa4f85cc406f99725e08530d83d5625d6f39", "Url": "https://api.github.com/repos/shznaqvi/MaPPSForm6", "Date": "2018-07-16T11:16:40Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((compareValue) instanceof java.lang.String) { compareValueString = ((edu.psu.swe.scim.spec.protocol.filter.AttributeComparisonExpression.QUOTE) + (compareValue)) + (edu.psu.swe.scim.spec.protocol.filter.AttributeComparisonExpression.QUOTE); }else if ((compareValue) instanceof java.util.Date) { compareValueString = ((edu.psu.swe.scim.spec.protocol.filter.AttributeComparisonExpression.QUOTE) + (edu.psu.swe.scim.spec.protocol.filter.AttributeComparisonExpression.toDateTimeString(((java.util.Date) (compareValue))))) + (edu.psu.swe.scim.spec.protocol.filter.AttributeComparisonExpression.QUOTE); }else if ((compareValue) instanceof java.time.LocalDate) { compareValueString = ((edu.psu.swe.scim.spec.protocol.filter.AttributeComparisonExpression.QUOTE) + (edu.psu.swe.scim.spec.protocol.filter.AttributeComparisonExpression.toDateString(((java.time.LocalDate) (compareValue))))) + (edu.psu.swe.scim.spec.protocol.filter.AttributeComparisonExpression.QUOTE); }else if ((compareValue) instanceof java.time.LocalDateTime) { compareValueString = ((edu.psu.swe.scim.spec.protocol.filter.AttributeComparisonExpression.QUOTE) + (edu.psu.swe.scim.spec.protocol.filter.AttributeComparisonExpression.toDateTimeString(((java.time.LocalDateTime) (compareValue))))) + (edu.psu.swe.scim.spec.protocol.filter.AttributeComparisonExpression.QUOTE); }else { compareValueString = compareValue.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3719/buggy-version/scim-spec.scim-spec-protocol.src.main.java.edu.psu.swe.scim.spec.protocol.filter.AttributeComparisonExpression.java", "BodyUseAPI": [], "Fixed commit": "3b5e94a6dea072ec3e953555d93f31e812d69c26", "Url": "https://api.github.com/repos/PennState/SCIMple-Identity", "Date": "2018-05-16T15:27:36Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((order.getStatus().getOrder()) >= (OrderStatus.CONFIRMED.getOrder())) { totalItemsOrdered += order.getItemCount(); totalOrderedSum = totalOrderedSum.add(order.getTotal().getAmount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4971/buggy-version/ySite.src.main.java.com.codenetics.site.controller.organiser.menu.ManageGroupBuysController.java", "BodyUseAPI": ["order.getTotal().getAmount()", "org.broadleafcommerce.core.order.domain.Order.getTotal()", "org.broadleafcommerce.core.order.domain.Order.getItemCount()", "java.math.BigDecimal.add(order.getTotal().getAmount())"], "Fixed commit": "20d8937d27c57f6a2b90368aa31e36da2f3a91ce", "Url": "https://api.github.com/repos/PaulMllr/codeneticsPlatform", "Date": "2018-01-14T12:12:21Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTotalTimeSpentEvent) { sb.append(java.lang.String.format(\"Total time spent: %d\", timeSpent)); }else if (isParentCrashDetected) { sb.append(java.lang.String.format(\"Parent crash detected\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7267/buggy-version/ibisImplementation.src.ibis.ipl.apps.safraExperiment.experiment.Event.java", "BodyUseAPI": [], "Fixed commit": "b1159cc0149478f17f5b53cb40b05722fb641007", "Url": "https://api.github.com/repos/PerFuchs/safra-termination-detection-fault-tolerant", "Date": "2018-08-07T17:23:32Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(runtimeError)) { for (org.tron.common.runtime.vm.DataWord contract : result.getDeleteAccounts()) { deposit.deleteContract(convertToTronAddress(contract.getLast20Bytes())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6280/buggy-version/src.main.java.org.tron.common.runtime.Runtime.java", "BodyUseAPI": [], "Fixed commit": "95a3c63436068c8adb8ef565a9374a426be85e3d", "Url": "https://api.github.com/repos/4GPTT/java-tron", "Date": "2018-09-10T11:08:15Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((productQuantity.getText().toString().equals(\"\")) || ((productQuantity.getText().toString()) == null)) { cartList.get(position).setQuantity(0); }else { cartList.get(position).setQuantity(java.lang.Integer.valueOf(productQuantity.getText().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9391/buggy-version/app.src.main.java.com.exophrenik.grinia.cart.CustomAdapter.java", "BodyUseAPI": ["cartList.get(position).setQuantity(java.lang.Integer)", "android.widget.EditText.getText()", "productQuantity.getText().toString()", "java.lang.Integer.valueOf(productQuantity.getText().toString())"], "Fixed commit": "125241d7087175a0b58a07d2d6ce54a1af321554", "Url": "https://api.github.com/repos/exophrenik/GDTEILAR2018", "Date": "2018-10-29T15:02:05Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hour != 12) hour += 12;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1641/buggy-version/src.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "9854604d97e99f414c820204771fccb4fe8003bd", "Url": "https://api.github.com/repos/PeterMacDonaldSpatula/Roll20-Log-Parser-2", "Date": "2018-06-28T05:28:32Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (view == (buttonRegister)) { finish(); startActivity(new android.content.Intent(this, com.traildog.app.RegisterActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8123/buggy-version/app.src.main.java.com.traildog.app.SigninActivity.java", "BodyUseAPI": [], "Fixed commit": "44537b7f2928f418d699007d5da2cd116a86ea56", "Url": "https://api.github.com/repos/suraj-masand/traildog", "Date": "2018-10-20T17:21:37Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (formattedAddresses.isEmpty()) return \"Unknown location\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5140/buggy-version/src.main.java.me.mjaroszewicz.weather.LocationService.java", "BodyUseAPI": [], "Fixed commit": "46c48e586adee9afdbfccce943796f2df075a949", "Url": "https://api.github.com/repos/sk1nek/weather", "Date": "2018-02-02T14:47:32Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/501/buggy-version/src.main.java.me.mjaroszewicz.crmapp.services.ComplaintService.java", "BodyUseAPI": [], "Fixed commit": "596602771689f575b1b1f3f6b62cbe6f70ecaab1", "Url": "https://api.github.com/repos/sk1nek/simple-crm", "Date": "2018-02-01T19:52:08Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cn.jiguang.common.utils.StringUtils.isEmpty(userinquirycreate.getTaskId())) { userinquirycreate.setTaskId(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7976/buggy-version/AlandTrainingService.src.main.java.com.conedot.aland.training.manager.UserInquiryManager.java", "BodyUseAPI": ["com.conedot.aland.training.sharedObject.UserInquiryCreate.setTaskId(java.lang.String)"], "Fixed commit": "eabd78a849fafa307b52aee13db7a65d21246251", "Url": "https://api.github.com/repos/victorwang0526/AlandTraining", "Date": "2018-09-14T15:03:35Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cn.jiguang.common.utils.StringUtils.isEmpty(userinquirycreate.getRelativeId())) { userinquirycreate.setRelativeId(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7976/buggy-version/AlandTrainingService.src.main.java.com.conedot.aland.training.manager.UserInquiryManager.java", "BodyUseAPI": ["com.conedot.aland.training.sharedObject.UserInquiryCreate.setRelativeId(java.lang.String)"], "Fixed commit": "eabd78a849fafa307b52aee13db7a65d21246251", "Url": "https://api.github.com/repos/victorwang0526/AlandTraining", "Date": "2018-09-14T15:03:35Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (interestChoosen.toLowerCase().contains(\"food\")) { msg = com.yatra.buddyup.util.BuddyConstants.foodMessage; }else if (interestChoosen.toLowerCase().contains(\"books\")) { msg = com.yatra.buddyup.util.BuddyConstants.booksMessage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2329/buggy-version/app.src.main.java.com.yatra.buddyup.activity.ChatActivity.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "faddcfc0a4475b3c3ae82073137b0c18523f63cd", "Url": "https://api.github.com/repos/pallav92/buddyUp", "Date": "2018-03-16T19:51:57Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hex.length()) == 9) hex = hex.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7667/buggy-version/src.com.haxademic.core.draw.color.ColorUtil.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "e215a31121c5d8519c960a64611ca29bb63c9aa6", "Url": "https://api.github.com/repos/cacheflowe/haxademic", "Date": "2018-06-11T14:20:49Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasHash) return com.haxademic.core.app.P.unhex(hex.substring(1)); else return com.haxademic.core.app.P.unhex(hex);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7667/buggy-version/src.com.haxademic.core.draw.color.ColorUtil.java", "BodyUseAPI": [], "Fixed commit": "e215a31121c5d8519c960a64611ca29bb63c9aa6", "Url": "https://api.github.com/repos/cacheflowe/haxademic", "Date": "2018-06-11T14:20:49Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((calibrationStepCount) == (-1)) { calibrationStepCount = stepCount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5236/buggy-version/src.wear.src.main.java.nl.hr.roparun_tracker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4cb7be6d5ca8908bcea84840e6d3bcc52e85dd0c", "Url": "https://api.github.com/repos/wouterbruggeman/roparun-tracker", "Date": "2018-09-05T10:58:07Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (version < 10) { args.add((\"-1.\" + version)); }else { args.add((\"-\" + version)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9791/buggy-version/src.main.java.spoon.compiler.builder.ComplianceOptions.java", "BodyUseAPI": ["spoon.compiler.builder.ComplianceOptions.add(java.lang.String)", "spoon.compiler.builder.ComplianceOptions.add(java.lang.String)"], "Fixed commit": "bcba3c7a18660718162189748f859023d883ecc9", "Url": "https://api.github.com/repos/surli/spoon", "Date": "2018-06-11T14:40:46Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (sms != null) { replyBtn.setEnabled((!(sms.isRepliedTo))); replyBtn.setText((sms.isRepliedTo ? R.string.reply_button_text_replied : R.string.reply_button_text_default)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9672/buggy-version/app.src.main.java.com.bivaca.familyhub.messages.InboxActivity.java", "BodyUseAPI": ["android.widget.Button.setText((sms.isRepliedTo ? R.string.reply_button_text_replied : R.string.reply_button_text_default))", "android.widget.Button.setEnabled((!(sms.isRepliedTo)))"], "Fixed commit": "fe3c1875fe9d40c9b0189dabd6adba28da7ab4f0", "Url": "https://api.github.com/repos/benleavett/familyhub", "Date": "2018-06-01T04:32:06Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.bivaca.familyhub.messages.Inbox.getInstance().isEmpty())) { populateMessageViewLayout(com.bivaca.familyhub.messages.Inbox.getInstance().getCurrentMessage()); }else { populateMessageViewLayoutForEmptyInbox(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9672/buggy-version/app.src.main.java.com.bivaca.familyhub.messages.InboxActivity.java", "BodyUseAPI": [], "Fixed commit": "fe3c1875fe9d40c9b0189dabd6adba28da7ab4f0", "Url": "https://api.github.com/repos/benleavett/familyhub", "Date": "2018-06-01T04:32:06Z"},
{"Line": "=>689", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tmp.getType()) instanceof jslc.StringType) { error.signal(((\"Vari\u00e1vel \" + (lexer.getStringValue())) + \" \u00e9 constante string\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4011/buggy-version/Java.jslc.src.main.java.jslc.Compiler.java", "BodyUseAPI": [], "Fixed commit": "4d42681c7dc1b5b0dcdef9860db1d9804f76de94", "Url": "https://api.github.com/repos/gabrielrodriguesrocha/slc", "Date": "2018-05-25T00:40:33Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (m.find()) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/622/buggy-version/src.CipherTools.java", "BodyUseAPI": [], "Fixed commit": "347206b0a88057743d26359606637ff03fa2923c", "Url": "https://api.github.com/repos/brunofreeman/AutoCipher", "Date": "2018-07-07T18:17:24Z"},
{"Line": "=>662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.noiseContext.getNotConsideredTransitVehicleIDs().contains(vehicleId)) { }else { org.matsim.contrib.noise.events.NoiseEventCaused noiseEvent = new org.matsim.contrib.noise.events.NoiseEventCaused(eventTime, currentTimeBinEndTime, this.noiseContext.getLinkId2vehicleId2lastEnterTime().get(linkId).get(vehicleId), this.noiseContext.getVehicleId2PersonId().get(vehicleId), vehicleId, amount, linkId); events.processEvent(noiseEvent); if (this.collectNoiseEvents) { this.noiseEventsCaused.add(noiseEvent); } totalCausedNoiseCost = (totalCausedNoiseCost) + amount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/450/buggy-version/contribs.noise.src.main.java.org.matsim.contrib.noise.handler.NoiseTimeTracker.java", "BodyUseAPI": ["org.matsim.contrib.noise.data.NoiseContext.getLinkId2vehicleId2lastEnterTime()", "org.matsim.contrib.noise.data.NoiseContext.getVehicleId2PersonId()", "this.noiseContext.getLinkId2vehicleId2lastEnterTime().get(org.matsim.api.core.v01.Id<org.matsim.api.core.v01.network.Link>)", "this.noiseContext.getLinkId2vehicleId2lastEnterTime().get(linkId).get(org.matsim.api.core.v01.Id<org.matsim.vehicles.Vehicle>)", "this.noiseContext.getVehicleId2PersonId().get(org.matsim.api.core.v01.Id<org.matsim.vehicles.Vehicle>)"], "Fixed commit": "97245797dfc64f2f9855608e7c55b26ef1bcd3d0", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2018-07-25T10:24:36Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size == 6) { updateBoard(new java.util.HashSet<>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6673/buggy-version/src.main.java.Group21Logic.java", "BodyUseAPI": [], "Fixed commit": "524e624b6869b7c140819316181862b72972d1f6", "Url": "https://api.github.com/repos/ITU-2019/AlphaQueen", "Date": "2018-03-28T13:10:03Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.harvard.iq.dataverse.api.Files.findDataFileOrDie(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dataFile.isFilePackage()) { return edu.harvard.iq.dataverse.api.AbstractApiBean.error(Response.Status.SERVICE_UNAVAILABLE, edu.harvard.iq.dataverse.util.BundleUtil.getStringFromBundle(\"file.api.alreadyHasPackageFile\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7307/buggy-version/src.main.java.edu.harvard.iq.dataverse.api.Files.java", "BodyUseAPI": [], "Fixed commit": "1b930bf3b9c6b8a06e786e730c8fc9b4e2e9fc0c", "Url": "https://api.github.com/repos/IQSS/dataverse", "Date": "2018-07-24T17:44:37Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFiles.length) > 0) { mFiles = transformVecOCFilesToFilesArr(com.owncloud.android.utils.FileStorageUtils.sortFolder(transformFilesArrToVecOCFiles(mFiles), FileStorageUtils.mSortOrderUpload, FileStorageUtils.mSortAscendingUpload)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6581/buggy-version/src.com.owncloud.android.ui.adapter.LocalFileListAdapter.java", "BodyUseAPI": [], "Fixed commit": "f0501fae2a1fdc30b888c28c1ae3996488385d1c", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-10-24T10:24:46Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (verifyPhone(phone)) { java.lang.String code = com.halo.util.VerifyCodeGenerator.getFourVerifyCode(); redisUtil.add(phone, 60L, code); ucpaas = new com.halo.config.properties.Ucpaas(ucpaas.getSid(), ucpaas.getToken(), ucpaas.getAppid(), tempId, code, phone, ucpaas.getUrl()); java.lang.String json = com.halo.util.SmsUtil.sendSms(ucpaas); int okIdx = json.indexOf(\"OK\"); return \"OK\".equals(json.substring(okIdx, (okIdx + 2))); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4694/buggy-version/src.main.java.com.halo.service.AuthService.java", "BodyUseAPI": ["com.halo.redis.RedisUtil.add(java.lang.String,long,java.lang.String)"], "Fixed commit": "c7067e76d930ecf875c14f28ad9b10ce86a8a3a9", "Url": "https://api.github.com/repos/MelloChan/halo-server", "Date": "2018-05-27T07:38:44Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((authors) == null) { authors = new java.util.LinkedList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7345/buggy-version/src.main.java.com.kerdotnet.beans.BookCatalog.java", "BodyUseAPI": [], "Fixed commit": "15d47b94b53164616cad54a71a24df40f6144473", "Url": "https://api.github.com/repos/konovaliuk/weblibrary", "Date": "2018-05-17T09:50:30Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["boards.BoardsManager.getGameBoard(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((game.getStatus()) == \"GAMING\") game.setPlayerRetired(((Game.Utils.SessionUtils.getAttribute(request, Constants.USERNAME)) + \" Retired!\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/97/buggy-version/src.NInARowWeb.src.Game.Servlet.GameRoom.LogoutGameServlet.java", "BodyUseAPI": ["boards.Board.setPlayerRetired(((Game.Utils.SessionUtils.getAttribute(request, Constants.USERNAME)) + \" Retired!\"))"], "Fixed commit": "c57f947710ebd31d5e2f55b76b530fa2d4908bbb", "Url": "https://api.github.com/repos/OmerAndAssafHomeWork/NinARowApp", "Date": "2018-09-28T12:55:17Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (v.name.startsWith(name)) { int length = name.length(); if (length == vlength) return null; if ((v.name.charAt(length)) == '.') { v.name = v.name.substring((length + 1)); return resolveEquationSet(v, create); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9038/buggy-version/N2A.src.gov.sandia.n2a.eqset.EquationSet.java", "BodyUseAPI": ["v.name.charAt(int)", "java.lang.String.length()", "v.name.substring(int)"], "Fixed commit": "b4a3777d402d9b020b55558379e7e085a151869c", "Url": "https://api.github.com/repos/frothga/n2a", "Date": "2018-09-11T23:07:44Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == 1) { java.lang.System.out.print(\"Hello.\\nWhat\\'s your pseudo? \"); pseudo = scan.nextLine(); java.lang.System.out.print(\"What's your password? \"); password = scan.nextLine(); }else { scan.nextLine(); java.lang.System.out.print(\"\\nInvalid password typed, please retry: \"); password = scan.nextLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8068/buggy-version/JavaSocket_Client.src.client.Main.java", "BodyUseAPI": [], "Fixed commit": "072246d16b2603467d44e62550da3451225a57b4", "Url": "https://api.github.com/repos/Buubu/JavaSocket_Client", "Date": "2018-06-13T06:11:40Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.sensorManager) != null) { this.sensorManager.cancelTriggerSensor(triggerEventListener, significantMotionSensor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8396/buggy-version/app.src.main.java.com.sofiaswing.sofiaswingdancefestival.providers.LocationProvider.java", "BodyUseAPI": [], "Fixed commit": "e52c5aa5fcd444756e7151722a906d0916d3fd18", "Url": "https://api.github.com/repos/ShwangShwing/sofia-swing-dance-festival-android", "Date": "2017-10-12T17:04:09Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.locationManager) != null) { this.locationManager.removeUpdates(this.locationListener); this.locationListener = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8396/buggy-version/app.src.main.java.com.sofiaswing.sofiaswingdancefestival.providers.LocationProvider.java", "BodyUseAPI": [], "Fixed commit": "e52c5aa5fcd444756e7151722a906d0916d3fd18", "Url": "https://api.github.com/repos/ShwangShwing/sofia-swing-dance-festival-android", "Date": "2017-10-12T17:04:09Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sPart.isEmpty())) { sDbFile += sPart + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5923/buggy-version/src.java.nl.ru.crpx.server.requesthandlers.RequestHandlerDbInfo.java", "BodyUseAPI": [], "Fixed commit": "a12a55007db286d1c4e8cd38f25fdcfd6c5bbcb5", "Url": "https://api.github.com/repos/ErwinKomen/CrppServer", "Date": "2018-01-04T11:02:43Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jReq.has(\"part\")) { sPart = jReq.getString(\"part\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5923/buggy-version/src.java.nl.ru.crpx.server.requesthandlers.RequestHandlerDbInfo.java", "BodyUseAPI": ["nl.ru.util.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "a12a55007db286d1c4e8cd38f25fdcfd6c5bbcb5", "Url": "https://api.github.com/repos/ErwinKomen/CrppServer", "Date": "2018-01-04T11:02:43Z"},
{"Line": "=>752", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getRequest().get(JsonKey.EXTERNAL_ID)", "request.getRequest().get(JsonKey.PROVIDER)", "request.getRequest().get(JsonKey.ORGANISATION_ID)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.apache.commons.lang3.StringUtils.isBlank(organisationId)) && ((org.apache.commons.lang3.StringUtils.isBlank(externalId)) || (org.apache.commons.lang3.StringUtils.isBlank(provider)))) { throw new org.sunbird.common.exception.ProjectCommonException(ResponseCode.sourceAndExternalIdValidationError.getErrorCode(), ResponseCode.sourceAndExternalIdValidationError.getErrorMessage(), org.sunbird.common.request.UserRequestValidator.ERROR_CODE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8820/buggy-version/common-util.src.main.java.org.sunbird.common.request.UserRequestValidator.java", "BodyUseAPI": [], "Fixed commit": "738f7b21ae6585f248da7061962dfc86370172a5", "Url": "https://api.github.com/repos/project-sunbird/sunbird-utils", "Date": "2018-07-12T11:19:03Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(howMany.getFieldText())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (data < 1) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5709/buggy-version/src.Entry.View.Panels.ReservePanel.ReservePanel.java", "BodyUseAPI": [], "Fixed commit": "30ed34530e5f1c77cb116698ab4bdf56c13e2039", "Url": "https://api.github.com/repos/oscarfava22/practidaDPO", "Date": "2018-05-12T15:30:13Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.getTable().isSetViewOriginalText()) { result.getTable().setViewOriginalText(com.hotels.bdp.waggledance.mapping.model.QueryMapping.getInstance().transformOutboundDatabaseName(metaStoreMapping, result.getTable().getViewOriginalText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/299/buggy-version/waggle-dance-core.src.main.java.com.hotels.bdp.waggledance.mapping.model.DatabaseMappingImpl.java", "BodyUseAPI": ["result.getTable().setViewOriginalText(com.hotels.bdp.waggledance.mapping.model.QueryMapping.getInstance().transformOutboundDatabaseName(metaStoreMapping, result.getTable().getViewOriginalText()))", "result.getTable().getViewOriginalText()", "org.apache.hadoop.hive.metastore.api.GetTableResult.getTable()", "org.apache.hadoop.hive.metastore.api.GetTableResult.getTable()", "com.hotels.bdp.waggledance.mapping.model.QueryMapping.getInstance().transformOutboundDatabaseName(com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping,result.getTable().getViewOriginalText())"], "Fixed commit": "1657004df67b3faedda63d19cff97f4f23126183", "Url": "https://api.github.com/repos/HotelsDotCom/waggle-dance", "Date": "2018-04-25T09:44:30Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.getTable().isSetViewExpandedText()) { result.getTable().setViewExpandedText(com.hotels.bdp.waggledance.mapping.model.QueryMapping.getInstance().transformOutboundDatabaseName(metaStoreMapping, result.getTable().getViewExpandedText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/299/buggy-version/waggle-dance-core.src.main.java.com.hotels.bdp.waggledance.mapping.model.DatabaseMappingImpl.java", "BodyUseAPI": ["com.hotels.bdp.waggledance.mapping.model.QueryMapping.getInstance().transformOutboundDatabaseName(com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping,result.getTable().getViewExpandedText())", "result.getTable().setViewExpandedText(com.hotels.bdp.waggledance.mapping.model.QueryMapping.getInstance().transformOutboundDatabaseName(metaStoreMapping, result.getTable().getViewExpandedText()))", "org.apache.hadoop.hive.metastore.api.GetTableResult.getTable()", "org.apache.hadoop.hive.metastore.api.GetTableResult.getTable()", "result.getTable().getViewExpandedText()"], "Fixed commit": "1657004df67b3faedda63d19cff97f4f23126183", "Url": "https://api.github.com/repos/HotelsDotCom/waggle-dance", "Date": "2018-04-25T09:44:30Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.ljubica.deutschlernen.DBHelper.getDataByLesson(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((words.size()) == 0) { android.widget.Toast.makeText(getContext(), \"The collection is empty!\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7189/buggy-version/app.src.main.java.com.example.ljubica.deutschlernen.ChooseLesson.java", "BodyUseAPI": [], "Fixed commit": "f4c98f3a23b3ad288ad7b7bb254cee7a59deb561", "Url": "https://api.github.com/repos/ljubicak/LanguageLearnApp", "Date": "2018-01-26T14:40:21Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i.getHeight()) == 0) throw new java.lang.IllegalArgumentException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9471/buggy-version/src.ui.BoardCanvas.java", "BodyUseAPI": [], "Fixed commit": "c586343958fc0cdbf4d8f5d3e1f33a2459fc37aa", "Url": "https://api.github.com/repos/ebarjou/JeuDeLaGuerre", "Date": "2018-03-08T12:50:31Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (destination.equals(\"test\")) { player.teleport(new org.bukkit.Location(org.bukkit.Bukkit.getWorld(\"world_test\"), 0, 100, 0)); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9806/buggy-version/src.main.java.executor.command.WarpCommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "9e9ff4cc7582e214e78ad4c6ec365d330fead663", "Url": "https://api.github.com/repos/largetimmo/SpigotPlugin", "Date": "2018-08-02T12:56:58Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chest.getInventory().getHolder()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (inventoryHolder instanceof org.bukkit.block.DoubleChest) { org.bukkit.block.DoubleChest doubleChest = ((org.bukkit.block.DoubleChest) (inventoryHolder)); org.bukkit.Location left = ((org.bukkit.block.Chest) (doubleChest.getLeftSide())).getLocation(); org.bukkit.Location right = ((org.bukkit.block.Chest) (doubleChest.getRightSide())).getLocation(); model.ChestLock leftLock = dao.ChestDAO.getInstance().getRecord(left); model.ChestLock rightLock = dao.ChestDAO.getInstance().getRecord(right); if ((leftLock != null) && (rightLock != null)) { if (!(leftLock.getUuid().equals(rightLock.getUuid()))) { java.util.logging.Logger.getLogger(\"SignChangeRelatedEvent\").log(java.util.logging.Level.WARNING, (\"Two players own one chest, at\" + (left.toString()))); } } if (leftLock != null) { if (!(leftLock.getUuid().equals(player.getUniqueId().toString()))) { playerInteractEvent.setCancelled(true); } } if (rightLock != null) { if (!(rightLock.getUuid().equals(player.getUniqueId().toString()))) { playerInteractEvent.setCancelled(true); } } }else { org.bukkit.Location location = playerInteractEvent.getClickedBlock().getLocation(); model.ChestLock chestLock = dao.ChestDAO.getInstance().getRecord(location); if (chestLock != null) { if (!(chestLock.getUuid().equals(player.getUniqueId().toString()))) { playerInteractEvent.setCancelled(true); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9806/buggy-version/src.main.java.event.SignChangeRelatedEvent.java", "BodyUseAPI": [], "Fixed commit": "9e9ff4cc7582e214e78ad4c6ec365d330fead663", "Url": "https://api.github.com/repos/largetimmo/SpigotPlugin", "Date": "2018-08-02T12:56:58Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.uecide.DebFile.extractOuterFiles()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((files.get(\"control.tar.bz2\")) != null) pendingFiles = extractTarBz2File(files.get(\"control.tar.bz2\"), db);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8147/buggy-version/src.org.uecide.DebFile.java", "BodyUseAPI": ["org.uecide.DebFile.extractTarBz2File(java.io.File,java.io.File)", "java.util.HashMap<java.lang.String, java.io.File>.get(java.lang.String)"], "Fixed commit": "e1443a2d1ebaa22639453d6a03a00e40e02722b7", "Url": "https://api.github.com/repos/UECIDE/UECIDE", "Date": "2018-10-01T10:10:12Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.uecide.DebFile.extractOuterFiles()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((files.get(\"control.tar.gz\")) != null) pendingFiles = extractTarGzFile(files.get(\"control.tar.gz\"), db);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8147/buggy-version/src.org.uecide.DebFile.java", "BodyUseAPI": ["org.uecide.DebFile.extractTarGzFile(java.io.File,java.io.File)", "java.util.HashMap<java.lang.String, java.io.File>.get(java.lang.String)"], "Fixed commit": "e1443a2d1ebaa22639453d6a03a00e40e02722b7", "Url": "https://api.github.com/repos/UECIDE/UECIDE", "Date": "2018-10-01T10:10:12Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.uecide.DebFile.extractOuterFiles()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((files.get(\"control.tar.xz\")) != null) pendingFiles = extractTarXzFile(files.get(\"control.tar.xz\"), db);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8147/buggy-version/src.org.uecide.DebFile.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.io.File>.get(java.lang.String)", "org.uecide.DebFile.extractTarXzFile(java.io.File,java.io.File)"], "Fixed commit": "e1443a2d1ebaa22639453d6a03a00e40e02722b7", "Url": "https://api.github.com/repos/UECIDE/UECIDE", "Date": "2018-10-01T10:10:12Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((niveauActuel) != (-1)) { pnlJeu.remove(backgrounds[niveauActuel]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6065/buggy-version/src.Vue.Fenetre.java", "BodyUseAPI": [], "Fixed commit": "5446fbec20d9bf78eaf9058f76731be0a5888275", "Url": "https://api.github.com/repos/EtienneGagne/Projet2", "Date": "2018-05-07T16:37:17Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operators.empty()) { throw new exception.ExceptionCollection.ParserException((\"Mismatched parentheses at position: \" + tokenCounter)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7901/buggy-version/src.main.java.processor.Parser.java", "BodyUseAPI": [], "Fixed commit": "0e0a107c2ca842b50af9c491f2077639bca5c4d7", "Url": "https://api.github.com/repos/aronerben/arithmetic-parser", "Date": "2018-05-09T22:04:30Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (title != null) { request.setAttribute(\"title\", title); }else { request.setAttribute(\"title\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5535/buggy-version/project2.src.main.java.Editor.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "944fddc843437a9ee882a2395969d9e574ce66b2", "Url": "https://api.github.com/repos/Masami96/CS144", "Date": "2018-01-28T06:11:20Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (body != null) { request.setAttribute(\"body\", body); }else { request.setAttribute(\"body\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5535/buggy-version/project2.src.main.java.Editor.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "944fddc843437a9ee882a2395969d9e574ce66b2", "Url": "https://api.github.com/repos/Masami96/CS144", "Date": "2018-01-28T06:11:20Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.util.HashSet<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(relationQueryNames.contains(name))) { relationQueryNames.add(name); return name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7730/buggy-version/config.ConfigReader.java", "BodyUseAPI": ["java.util.HashSet<java.lang.String>.add(java.lang.String)"], "Fixed commit": "17d78f259ac58ca1d5f2f129f182fd8eda9435f2", "Url": "https://api.github.com/repos/thecodemonkey86/orm2", "Date": "2018-09-04T06:53:59Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tbl.getName().equals(\"archiv_z_sa_status_historie\")) { java.lang.System.out.println(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7730/buggy-version/database.SqliteDatabase.java", "BodyUseAPI": [], "Fixed commit": "17d78f259ac58ca1d5f2f129f182fd8eda9435f2", "Url": "https://api.github.com/repos/thecodemonkey86/orm2", "Date": "2018-09-04T06:53:59Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((week.toString().length()) == 2) { digit = week.toString().charAt(1); }else { digit = week.toString().charAt(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3139/buggy-version/src.main.java.edu.harvard.h2ms.service.utils.H2msRestUtils.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.Integer.toString()", "java.lang.String.charAt(int)", "java.lang.Integer.toString()"], "Fixed commit": "5e3d35feabf84097788e2812fc90b3dc30014317", "Url": "https://api.github.com/repos/stbenjam/h2ms", "Date": "2018-03-21T23:30:37Z"},
{"Line": "=>1739", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mLayoutFromEnd) { mCoordinate = ((mOrientationHelper.getDecoratedEnd(child)) + (computeAlignOffset(child, mLayoutFromEnd, true))) + (mOrientationHelper.getTotalSpaceChange()); if (com.alibaba.android.vlayout.ExposeLinearLayoutManagerEx.DEBUG) { android.util.Log.d(com.alibaba.android.vlayout.ExposeLinearLayoutManagerEx.TAG, (((((\"1 mLayoutFromEnd \" + (mLayoutFromEnd)) + \" mOrientationHelper.getDecoratedEnd(child) \") + (mOrientationHelper.getDecoratedEnd(child))) + \" computeAlignOffset(child, mLayoutFromEnd, true) \") + (computeAlignOffset(child, mLayoutFromEnd, true)))); } }else { mCoordinate = (mOrientationHelper.getDecoratedStart(child)) + (computeAlignOffset(child, mLayoutFromEnd, true)); if (com.alibaba.android.vlayout.ExposeLinearLayoutManagerEx.DEBUG) { android.util.Log.d(com.alibaba.android.vlayout.ExposeLinearLayoutManagerEx.TAG, (((((\"2 mLayoutFromEnd \" + (mLayoutFromEnd)) + \" mOrientationHelper.getDecoratedStart(child) \") + (mOrientationHelper.getDecoratedStart(child))) + \" computeAlignOffset(child, mLayoutFromEnd, true) \") + (computeAlignOffset(child, mLayoutFromEnd, true)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2430/buggy-version/vlayout.src.main.java.com.alibaba.android.vlayout.ExposeLinearLayoutManagerEx.java", "BodyUseAPI": ["com.alibaba.android.vlayout.ExposeLinearLayoutManagerEx.AnchorInfo.computeAlignOffset(android.view.View,boolean,boolean)", "android.util.Log.d(java.lang.String,(((((\"2 mLayoutFromEnd \" + (mLayoutFromEnd)) + \" mOrientationHelper.getDecoratedStart(child) \") + (mOrientationHelper.getDecoratedStart(child))) + \" computeAlignOffset(child, mLayoutFromEnd, true) \") + (computeAlignOffset(child, mLayoutFromEnd, true))))", "com.alibaba.android.vlayout.ExposeLinearLayoutManagerEx.AnchorInfo.computeAlignOffset(android.view.View,boolean,boolean)", "android.util.Log.d(java.lang.String,(((((\"1 mLayoutFromEnd \" + (mLayoutFromEnd)) + \" mOrientationHelper.getDecoratedEnd(child) \") + (mOrientationHelper.getDecoratedEnd(child))) + \" computeAlignOffset(child, mLayoutFromEnd, true) \") + (computeAlignOffset(child, mLayoutFromEnd, true))))", "com.alibaba.android.vlayout.ExposeLinearLayoutManagerEx.AnchorInfo.computeAlignOffset(android.view.View,boolean,boolean)", "com.alibaba.android.vlayout.ExposeLinearLayoutManagerEx.AnchorInfo.computeAlignOffset(android.view.View,boolean,boolean)"], "Fixed commit": "f856a1064eaaab0ea86738a8bc8827d5d0540690", "Url": "https://api.github.com/repos/alibaba/vlayout", "Date": "2018-01-07T11:24:13Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((file != null) && (fs.exists(file))) { return fs.open(file, bufferSize); }else { fs.create(file); return fs.open(file, bufferSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4025/buggy-version/src.main.java.io.confluent.connect.hdfs.wal.WALFile.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileSystem.create(org.apache.hadoop.fs.Path)", "org.apache.hadoop.fs.FileSystem.open(org.apache.hadoop.fs.Path,int)", "org.apache.hadoop.fs.FileSystem.open(org.apache.hadoop.fs.Path,int)"], "Fixed commit": "9626db542b877ee2c3b194fc150858c446b50e01", "Url": "https://api.github.com/repos/DataPipelineInc/kafka-connect-hdfs", "Date": "2018-10-30T03:34:38Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.ualberta.yangyi1_feelsbook.Emotion.getEmotionType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((ca.ualberta.yangyi1_feelsbook.EmotionList.emotionCounter.get(emotionName)) != null) { int count = ca.ualberta.yangyi1_feelsbook.EmotionList.emotionCounter.get(emotionName); count--; ca.ualberta.yangyi1_feelsbook.EmotionList.emotionCounter.put(emotionName, count); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2974/buggy-version/app.src.main.java.ca.ualberta.yangyi1_feelsbook.EmotionList.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,int)"], "Fixed commit": "407bde5d3602e992f91e8c13bc47cd570e2196ba", "Url": "https://api.github.com/repos/amy-PATHng/yangyi1-FeelsBook", "Date": "2018-10-05T18:39:54Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAttacking) { beforeAttackDir = packet.getDir(); }else { dir = packet.getDir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9749/buggy-version/src.main.entity.mobs.PlayerMob.java", "BodyUseAPI": [], "Fixed commit": "f993e5a5bb433db99982d5c2147c5e11cc2a23f7", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2018-10-11T21:56:17Z"},
{"Line": "=>1232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(filter.equals(org.ecocean.EncounterQueryProcessor.SELECT_FROM_ORG_ECOCEAN_ENCOUNTER_WHERE))) { filter += \" && \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5359/buggy-version/src.main.java.org.ecocean.EncounterQueryProcessor.java", "BodyUseAPI": [], "Fixed commit": "8435f7ae4c0f15eb9b241f104aa52ff5b3fd0541", "Url": "https://api.github.com/repos/WildbookOrg/Wildbook", "Date": "2018-07-30T22:37:08Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(CustomMediaType.APPLICATION_SCHEMA_REGISTRY_JSON.equalsIgnoreCase(accept))) { logger.error(\"Accept is not set correctly, Method: latest, subject: {}\", subject); acknowledgement = new org.schemarepo.utils.MessageAcknowledgement(StatusCodes.INVALID_REQUEST.getStatusCode(), org.schemarepo.Message.ACCEPT_ERROR, null); return javax.ws.rs.core.Response.ok(acknowledgement).build().toString(); }else { return getRenderer(accept).renderSchemaEntry(exists(getSubject(subject).latest()), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4451/buggy-version/server.src.main.java.org.schemarepo.server.RESTRepository.java", "BodyUseAPI": ["getRenderer(accept).renderSchemaEntry(org.schemarepo.SchemaEntry,boolean)", "org.schemarepo.server.RESTRepository.getRenderer(java.lang.String)"], "Fixed commit": "2852cf31bc5f88e4115d03cf93c8e5d4dda08742", "Url": "https://api.github.com/repos/chekore/schema-repo", "Date": "2018-09-19T05:17:21Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((strs.length) == 2) apps.put(strs[0], strs[1]); else apps.put(strs[0], \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6929/buggy-version/src.myGCtool.Tools.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "31209c22b0603ad1c7d4a83a582ead302a74a97c", "Url": "https://api.github.com/repos/DanielXu1993/MyGCTool", "Date": "2018-07-28T18:12:47Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1198/buggy-version/devlib.src.main.java.com.zxzx74147.devlib.utils.WebviewUtil.java", "BodyUseAPI": [], "Fixed commit": "3c0906ca9777965ed4c6941414f914cfe64ce055", "Url": "https://api.github.com/repos/zxzx74147/ChartTest", "Date": "2018-03-16T09:58:52Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(url.startsWith(\"http://\"))) && (!(url.startsWith(\"https://\")))) { super.onLoadResource(url); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1198/buggy-version/devlib.src.main.java.com.zxzx74147.devlib.utils.WebviewUtil.java", "BodyUseAPI": ["com.thefinestartist.finestwebview.listeners.WebViewListener.onLoadResource(java.lang.String)"], "Fixed commit": "3c0906ca9777965ed4c6941414f914cfe64ce055", "Url": "https://api.github.com/repos/zxzx74147/ChartTest", "Date": "2018-03-16T09:58:52Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cookies == null) { response.sendRedirect(\"/user/login\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2316/buggy-version/src.main.java.cn.com.liaotech.sc.interceptors.LoginInterceptor.java", "BodyUseAPI": [], "Fixed commit": "cad0e12912e18cb2b7964c7b66b95198a5634dcb", "Url": "https://api.github.com/repos/kuinee/somersaultcloud", "Date": "2018-04-26T04:59:44Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasToUseDefaultQuestionnaire) { android.util.Log.e(com.artursworld.nccn.controller.util.Global.CLASS_NAME, \"Default Questions ON\"); }else { android.util.Log.e(com.artursworld.nccn.controller.util.Global.CLASS_NAME, \"Default Questions OFF\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8045/buggy-version/NCCN.app.src.main.java.com.artursworld.nccn.controller.util.Global.java", "BodyUseAPI": [], "Fixed commit": "4697b513853e3d53a41ce8842a51f6970f4e2544", "Url": "https://api.github.com/repos/lidox/nccn-distress-thermometer", "Date": "2018-09-13T09:08:21Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((item.getImage()) != null) { this.itemImageId = item.getImage().getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/595/buggy-version/product-retail-api.src.main.java.com.pm.productretail.dto.response.ItemResponseDto.java", "BodyUseAPI": [], "Fixed commit": "2eda2030fb2fa269823e16712e82bf4c96dcd753", "Url": "https://api.github.com/repos/nliia/Product-Retail", "Date": "2018-05-25T15:50:00Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((item.getImage()) != null) { this.itemImageId = item.getImage().getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/595/buggy-version/product-retail-api.src.main.java.com.pm.productretail.dto.response.ItemInfoResponseDto.java", "BodyUseAPI": [], "Fixed commit": "2eda2030fb2fa269823e16712e82bf4c96dcd753", "Url": "https://api.github.com/repos/nliia/Product-Retail", "Date": "2018-05-25T15:50:00Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mMovies.get(position).getPosterUrl().equals(\"null\")) { holder.ivPoster.setImageResource(R.drawable.poster_placeholder); }else { java.lang.String posterUrl = (comlvqfrk.httpsgithub.popularmovies.adapters.MovieAdapter.TMDB_POSTER_W185_BASE_URL) + (mMovies.get(position).getPosterUrl()); com.squareup.picasso.Picasso.with(mContext).load(posterUrl).into(holder.ivPoster); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/227/buggy-version/app.src.main.java.comlvqfrk.httpsgithub.popularmovies.adapters.MovieAdapter.java", "BodyUseAPI": ["java.util.List<comlvqfrk.httpsgithub.popularmovies.data.Movie>.get(int)", "mMovies.get(position).getPosterUrl()"], "Fixed commit": "bc6afbdf7d3de00877b7d017e2aae9d65edcee70", "Url": "https://api.github.com/repos/lvqfrk/popularMovies", "Date": "2018-05-31T10:24:09Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["comlvqfrk.httpsgithub.popularmovies.utils.JsonParsingUtilities.extractDetailsFromJsonResponse(java.lang.String,comlvqfrk.httpsgithub.popularmovies.activities.DetailsActivity)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (currentMovie.getPosterUrl().equals(\"null\")) { ivDetailPoster.setImageResource(R.drawable.poster_placeholder); }else { java.lang.String urlToPoster = (comlvqfrk.httpsgithub.popularmovies.activities.DetailsActivity.TMDB_POSTER_W185_BASE_URL) + (currentMovie.getPosterUrl()); com.squareup.picasso.Picasso.with(this).load(urlToPoster).into(ivDetailPoster); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/227/buggy-version/app.src.main.java.comlvqfrk.httpsgithub.popularmovies.activities.DetailsActivity.java", "BodyUseAPI": ["comlvqfrk.httpsgithub.popularmovies.data.DetailedMovie.getPosterUrl()"], "Fixed commit": "bc6afbdf7d3de00877b7d017e2aae9d65edcee70", "Url": "https://api.github.com/repos/lvqfrk/popularMovies", "Date": "2018-05-31T10:24:09Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tokens[(pos - 1)].hasPosTagStartingWith(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prep && (isFinalClause(tokens, pos))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9078/buggy-version/languagetool-language-modules.de.src.main.java.org.languagetool.rules.de.AgreementRule.java", "BodyUseAPI": [], "Fixed commit": "2e0869bd11a581831f5ba0497a1559fd00d8cec1", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2018-01-10T21:31:47Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loaderProgress) != null) { loaderProgress.incIndexed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/65/buggy-version/stargraph-core.src.main.java.net.stargraph.core.index.BaseIndexer.java", "BodyUseAPI": [], "Fixed commit": "60755dee700c9a3c64d0204b6c330c9fd2a1b52f", "Url": "https://api.github.com/repos/Mischn/Stargraph", "Date": "2018-05-07T08:21:17Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(called)) call.run();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/19/buggy-version/src.io.anuke.ucore.scene.actions.CallAction.java", "BodyUseAPI": [], "Fixed commit": "9398bb2002970b8a2b921c16225787f1cd256319", "Url": "https://api.github.com/repos/hellomouse/uCore", "Date": "2018-04-01T20:17:21Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(primaryTorpedoStpre.isEmpty())) && (!(secondaryTorpedoStore.isEmpty()))) { firingSuccess = primaryTorpedoStore.fire(1); firingSuccess = secondaryTorpedoStore.fire(2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4768/buggy-version/src.main.java.hu.bme.mit.spaceship.GT4500.java", "BodyUseAPI": ["hu.bme.mit.spaceship.TorpedoStore.fire(int)"], "Fixed commit": "57e24ab40c74e844e1d29f3d4251d14c3fdb7f62", "Url": "https://api.github.com/repos/norbert05/ivt-lab", "Date": "2018-04-13T06:55:09Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<ptit.ntnt.ptitapp.Models.News>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((news.getCreatedAt()) != null) { tvUploadDate.setText(news.getCreatedAt()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/484/buggy-version/Project.app.src.main.java.ptit.ntnt.ptitapp.CustomAdapter.NewsAdapter.java", "BodyUseAPI": ["ptit.ntnt.ptitapp.Models.News.getCreatedAt()", "android.widget.TextView.setText(news.getCreatedAt())"], "Fixed commit": "42c03fbb2a516a755be18fd34f88d477c4fb8a1a", "Url": "https://api.github.com/repos/ptit-app/Android-App", "Date": "2018-04-10T21:59:42Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i != 0) { viewgroup.setBackground(context.getDrawable(R.drawable.spinner_background_dark)); }else { viewgroup.setBackground(context.getDrawable(R.drawable.spinner_background)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1893/buggy-version/app.src.main.java.com.example.micaela.fwd.CustomSpinnerAdapter.java", "BodyUseAPI": [], "Fixed commit": "0c0b14b49abe04f218a7308b5be825821792e8a9", "Url": "https://api.github.com/repos/jinganinja/ECE499", "Date": "2018-07-12T03:59:22Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["parent.getItemAtPosition(position).toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (item.equals(\"Strength\")) { showTargetedMuscles(true); }else { showTargetedMuscles(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1893/buggy-version/app.src.main.java.com.example.micaela.fwd.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0c0b14b49abe04f218a7308b5be825821792e8a9", "Url": "https://api.github.com/repos/jinganinja/ECE499", "Date": "2018-07-12T03:59:22Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((separator == null) || (text == null)) || ((separator.length()) == 0)) || ((text.length()) == 0)) throw new java.lang.IllegalArgumentException(\"both of text and separator mustn't be null or empty\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/137/buggy-version/app.src.main.java.nd801project.elmasry.bakingapp.utilities.StoringInDbUtil.java", "BodyUseAPI": [], "Fixed commit": "1019799ccc83f762640f17b1c862f41c4c88622f", "Url": "https://api.github.com/repos/mostafayahia/BakingApp", "Date": "2018-04-01T04:52:19Z"},
{"Line": "=>733", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<io.nuls.account.ledger.base.service.impl.Coin>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((to.getLockTime()) == (-1)) { byte[] toKey = org.spongycastle.util.Arrays.concatenate(tx.getHash().serialize(), new io.nuls.kernel.utils.VarInt(i).encode()); to = ledgerService.getUtxo(toKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9307/buggy-version/account-ledger-module.base.account-ledger-base.src.main.java.io.nuls.account.ledger.base.service.impl.AccountLedgerServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "5e9c4cb0b45a318015fe0eac36944e4cd355eb29", "Url": "https://api.github.com/repos/ruislan/nuls", "Date": "2018-05-25T06:12:21Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAllSelected) { selectedRows(detail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4318/buggy-version/client.src.org.eevolution.form.VBrowser.java", "BodyUseAPI": [], "Fixed commit": "696d186e9c1090d27848d9fd23cbbf0e6e75c8fa", "Url": "https://api.github.com/repos/erpcya/adempiere", "Date": "2018-06-12T20:10:26Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((simulation.getCurrentGenerationNumber()) == (simulation.getNumberOfIterations())) { simulation.runSimulation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2908/buggy-version/src.UserInterface.Controllers.MainController.java", "BodyUseAPI": ["core.WireworldSimulation.runSimulation()"], "Fixed commit": "5102d48e2c734f0db615c9f9bc16eef41ad72f65", "Url": "https://api.github.com/repos/KamilKwapisz/Wireworld", "Date": "2018-05-19T08:07:48Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { this.recipeStepBean = savedInstanceState.getParcelable(BakingAppConstants.ActivityExtras.RECIPE_STEP_BEAN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6991/buggy-version/P04_BakingAppV1.app.src.main.java.com.doobs.baking.RecipeStepDetailFragment.java", "BodyUseAPI": ["android.os.Bundle.getParcelable(BakingAppConstants.ActivityExtras.RECIPE_STEP_BEAN)"], "Fixed commit": "57731c94f71bfef4ff65a981adff5b193bbbf107", "Url": "https://api.github.com/repos/marcduby/GoogleNanoAndroid2018", "Date": "2018-09-01T22:11:23Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((error.getSkippedString()) != null) { ht_error.put(\"span_value_parse_error\", queryReplace(error.getSkippedString())); }else if ((error.getExp()) != null) { ht_error.put(\"span_value_parse_error\", queryReplace(error.getExp().toStringFromStart())); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1468/buggy-version/org.w3c.css.css.StyleSheetGenerator.java", "BodyUseAPI": ["java.util.Hashtable<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)", "org.w3c.css.css.StyleSheetGenerator.queryReplace(error.getExp().toStringFromStart())", "org.w3c.css.parser.CssParseException.getExp()", "org.w3c.css.css.StyleSheetGenerator.queryReplace(error.getSkippedString())", "org.w3c.css.parser.CssParseException.getExp()", "java.util.Hashtable<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)", "org.w3c.css.parser.CssParseException.getSkippedString()", "error.getExp().toStringFromStart()"], "Fixed commit": "aec23a23ee56975387f21d6f01ff3d2055b9a76a", "Url": "https://api.github.com/repos/w3c/css-validator", "Date": "2018-01-04T13:42:32Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (itemType == null) { itemType = \"W\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5186/buggy-version/src.main.java.com.maths22.laundryviewapi.MachineStatus.java", "BodyUseAPI": [], "Fixed commit": "31d966b3630507b50a0a4a78956b63ababec6076", "Url": "https://api.github.com/repos/maths22/LaundryViewAPI", "Date": "2018-09-03T05:39:13Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(word.matches(\"[a-z]+\"))) { java.lang.System.out.println(\"ERROR: Input word should contain alphabets only.\\n\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3249/buggy-version/AnagramFinderAdvanced.java", "BodyUseAPI": [], "Fixed commit": "676ee97569d4b8838ff5a2c5b46e6f268119949e", "Url": "https://api.github.com/repos/ninaQIAN/AnagramFinder", "Date": "2018-01-03T02:48:09Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(word.matches(\"[a-z]+\"))) { java.lang.System.out.println(\"ERROR: Input word should contain alphabets only.\\n\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3249/buggy-version/AnagramFinderBasic.java", "BodyUseAPI": [], "Fixed commit": "676ee97569d4b8838ff5a2c5b46e6f268119949e", "Url": "https://api.github.com/repos/ninaQIAN/AnagramFinder", "Date": "2018-01-03T02:48:09Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(goalToUpdate.getCompletion().hasCompleted)) { throw new seedu.address.logic.commands.exceptions.CommandException(seedu.address.commons.core.Messages.MESSAGE_GOAL_ONGOING_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7612/buggy-version/src.main.java.seedu.address.logic.commands.OngoingGoalCommand.java", "BodyUseAPI": [], "Fixed commit": "0cb9f5f04e8ecf5a813717ba1eafe351a10378ca", "Url": "https://api.github.com/repos/zuweitrack/main", "Date": "2018-04-11T10:46:53Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (goalToUpdate.getCompletion().hasCompleted) { throw new seedu.address.logic.commands.exceptions.CommandException(seedu.address.commons.core.Messages.MESSAGE_GOAL_COMPLETED_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7612/buggy-version/src.main.java.seedu.address.logic.commands.CompleteGoalCommand.java", "BodyUseAPI": [], "Fixed commit": "0cb9f5f04e8ecf5a813717ba1eafe351a10378ca", "Url": "https://api.github.com/repos/zuweitrack/main", "Date": "2018-04-11T10:46:53Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.jxpath.ri.InfoSetUtil.doubleValue(java.lang.Object)", "org.apache.commons.jxpath.ri.InfoSetUtil.doubleValue(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((java.lang.Double.isNaN(ld)) && (!(java.lang.Double.isNaN(rd)))) || ((!(java.lang.Double.isNaN(ld))) && (java.lang.Double.isNaN(rd)))) { result = false; }else { if (java.lang.Double.isNaN(ld)) { return false; } if (java.lang.Double.isNaN(rd)) { return false; } result = ld == rd; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8438/buggy-version/src.main.java.org.apache.commons.jxpath.ri.compiler.CoreOperationCompare.java", "BodyUseAPI": ["java.lang.Double.isNaN(double)", "java.lang.Double.isNaN(double)"], "Fixed commit": "7012c9da11bc8b644e2df143803a7ee4fc90c120", "Url": "https://api.github.com/repos/sramven/commons-jxpath", "Date": "2018-03-23T12:18:52Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 5) { catName = \"Light Labour\"; }else if (i == 6) { catName = \"Restocking\"; }else if (i == 7) { catName = \"Misc\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3727/buggy-version/Project.src.Database.java", "BodyUseAPI": [], "Fixed commit": "d5700872b4b4982bc8e02a4bd284678eed15c6fc", "Url": "https://api.github.com/repos/sam-connolly/crispyDuckProject", "Date": "2018-05-07T22:06:02Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentLocation.getLatitude()) == 0.0) && ((currentLocation.getLongitude()) == 0.0)) { android.widget.Toast.makeText(this, R.string.location_not_initialized, Toast.LENGTH_LONG).show(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2788/buggy-version/app.src.main.java.org.thosp.yourlocalweather.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "747c3723b24dcb7d750c1055be858a10c9b0a4a0", "Url": "https://api.github.com/repos/thuryn/your-local-weather", "Date": "2018-08-21T19:56:30Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((chip.getOutput(0)) != (chip.getInput(0))) { chip.setOutput(0, chip.getInput(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3483/buggy-version/src.main.java.com.sk89q.craftbook.mechanics.ic.gates.logic.Repeater.java", "BodyUseAPI": ["com.sk89q.craftbook.mechanics.ic.ChipState.getInput(int)", "com.sk89q.craftbook.mechanics.ic.ChipState.setOutput(int,chip.getInput(0))"], "Fixed commit": "767cfef484475f63e4e40b67603ae5719e3a70ac", "Url": "https://api.github.com/repos/EngineHub/CraftBook", "Date": "2018-08-20T11:40:22Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Block.getBlockData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (data instanceof org.bukkit.block.data.AnaloguePowerable) { return (((org.bukkit.block.data.AnaloguePowerable) (data)).getPower()) > 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3483/buggy-version/src.main.java.com.sk89q.craftbook.mechanics.ic.AbstractChipState.java", "BodyUseAPI": [], "Fixed commit": "767cfef484475f63e4e40b67603ae5719e3a70ac", "Url": "https://api.github.com/repos/EngineHub/CraftBook", "Date": "2018-08-20T11:40:22Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name) != null) LoadToImageView();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9801/buggy-version/app.src.main.java.com.pelicanus.insight.model.Picture.java", "BodyUseAPI": [], "Fixed commit": "95db5b207295e4bedcc9eaacd3679716932175c4", "Url": "https://api.github.com/repos/AlKempl/InSight", "Date": "2018-04-06T18:52:50Z"},
{"Line": "=>752", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (monitor.isCanceled()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/630/buggy-version/main.plugins.org.talend.designer.maven.src.main.java.org.talend.designer.maven.tools.AggregatorPomsHelper.java", "BodyUseAPI": [], "Fixed commit": "4811cdf538aaafa2e5c053a03688e7190d097bf0", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2018-06-25T09:51:17Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (source != null) { if (source instanceof java.util.Date) { return ((java.util.Date) (source)); }else if (source instanceof java.lang.String) { if (org.apache.commons.lang3.StringUtils.isNotBlank(((java.lang.String) (source)))) { java.util.Date result = org.structr.schema.parser.DatePropertyParser.parse(((java.lang.String) (source)), format); if (result != null) { return result; } throw new org.structr.common.error.FrameworkException(422, (\"Cannot parse input for property \" + (jsonName())), new org.structr.common.error.DateFormatToken(declaringClass.getSimpleName(), this)); } }else if (source.getClass().getName().equals(\"org.mozilla.javascript.NativeDate\")) { final java.lang.Double value = org.mozilla.javascript.ScriptRuntime.toNumber(source); return new java.util.Date(value.longValue()); }else { throw new org.structr.common.error.FrameworkException(422, (((\"Unkown input type for date property \" + (jsonName())) + \": \") + (source.getClass().getName())), new org.structr.common.error.DateFormatToken(declaringClass.getSimpleName(), this)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/776/buggy-version/structr-core.src.main.java.org.structr.core.property.DateProperty.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getName()", "org.mozilla.javascript.ScriptRuntime.toNumber(java.lang.Object)", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getName()"], "Fixed commit": "1d426a87d5389ca8e8a7e8650f6f344e102ee28b", "Url": "https://api.github.com/repos/structr/structr", "Date": "2018-04-09T13:16:31Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { if ((android.support.v4.content.ContextCompat.checkSelfPermission(getActivity().getApplicationContext(), android.Manifest.permission.ACCESS_FINE_LOCATION)) == (android.content.pm.PackageManager.PERMISSION_GRANTED)) { mLocationPermissionGranted = true; }else { requestPermissions(new java.lang.String[]{ android.Manifest.permission.ACCESS_FINE_LOCATION }, com.stpetersbirds.mimohodapp.MapFragment.PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION); } }else { android.util.Log.i(com.stpetersbirds.mimohodapp.MapFragment.TAG, \"NULL Activity!!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2678/buggy-version/app.src.main.java.com.stpetersbirds.mimohodapp.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "d8fe2ec5d27620683389ca3c2c14de41e5b79c44", "Url": "https://api.github.com/repos/NadyaRnV/MimohodApp", "Date": "2018-05-21T17:54:39Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMap) != null) { mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLng(latLng)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2678/buggy-version/app.src.main.java.com.stpetersbirds.mimohodapp.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "d8fe2ec5d27620683389ca3c2c14de41e5b79c44", "Url": "https://api.github.com/repos/NadyaRnV/MimohodApp", "Date": "2018-05-21T17:54:39Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URLDecoder.decode(session.getUri(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((((uri.toLowerCase().endsWith(\".mp3\")) || (uri.toLowerCase().endsWith(\".wav\"))) || (uri.toLowerCase().endsWith(\".wma\"))) || (uri.toLowerCase().endsWith(\".flac\"))) || (uri.toLowerCase().endsWith(\".ogg\"))) || (uri.toLowerCase().endsWith(\".ape\"))) || (uri.toLowerCase().endsWith(\".aac\"))) { response = getPartialResponse(\"audio/mpeg3\", range, session.getUri()); }else if (isPic) { java.io.File img = new java.io.File(session.getUri()); response = new com.PATHojiutech.dlna.webserver.Response(Response.Status.OK, \"image/png\", new java.io.FileInputStream(img)); response.addHeader(\"Content-Length\", ((img.length()) + \"\")); response.addHeader(\"Content-Range\", (((((\"bytes \" + 0) + \"-\") + (img.length())) + \"/\") + (img.length()))); response.addHeader(\"Content-Type\", \"image/png\"); }else { response = getPartialResponse(\"video/mp4\", range, session.getUri()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1611/buggy-version/app.src.main.java.com.PATHojiutech.dlna.webserver.AndroidWebServer.java", "BodyUseAPI": [], "Fixed commit": "ab3542036728a81444e7c614d1b68c56e417466e", "Url": "https://api.github.com/repos/iorizhou/dlna", "Date": "2018-07-29T08:02:58Z"},
{"Line": "=>616", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["smap_f18_24.smap_fridge.ModelClasses.Fridge.getEssentials()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((essentials.getItems().size()) == 1) { essentials.getItems().remove(i); callbackInterface.onEssentialsChange(fridge_ID, essentials); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7304/buggy-version/App.app.src.main.java.smap_f18_24.smap_fridge.Service.ServiceUpdater.java", "BodyUseAPI": ["essentials.getItems().remove(smap_f18_24.smap_fridge.ModelClasses.Item)", "smap_f18_24.smap_fridge.DAL.FridgeCallbackInterface.onEssentialsChange(java.lang.String,smap_f18_24.smap_fridge.ModelClasses.EssentialsList)", "smap_f18_24.smap_fridge.ModelClasses.EssentialsList.getItems()"], "Fixed commit": "7127d12ed714d58f864e176b1d72cc5bbaf26b2a", "Url": "https://api.github.com/repos/HansEge/SMAP_Fridge", "Date": "2018-05-17T15:19:14Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["smap_f18_24.smap_fridge.ModelClasses.Fridge.getInventory()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((inventory.getItems().size()) == 1) { inventory.getItems().remove(i); callbackInterface.onInventoryChange(fridge_ID, inventory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7304/buggy-version/App.app.src.main.java.smap_f18_24.smap_fridge.Service.ServiceUpdater.java", "BodyUseAPI": ["smap_f18_24.smap_fridge.DAL.FridgeCallbackInterface.onInventoryChange(java.lang.String,smap_f18_24.smap_fridge.ModelClasses.InventoryList)", "inventory.getItems().remove(smap_f18_24.smap_fridge.ModelClasses.Item)", "smap_f18_24.smap_fridge.ModelClasses.InventoryList.getItems()"], "Fixed commit": "7127d12ed714d58f864e176b1d72cc5bbaf26b2a", "Url": "https://api.github.com/repos/HansEge/SMAP_Fridge", "Date": "2018-05-17T15:19:14Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lower != null) && (((this.crs.getCode()) != (lower.crs.getCode())) || ((this.coordinate.length) != (lower.coordinate.length)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9353/buggy-version/community.values.src.main.java.org.neo4j.values.storable.PointValue.java", "BodyUseAPI": [], "Fixed commit": "5cf32edbc9f6350ed847686a5f6c80dd1e56a6bd", "Url": "https://api.github.com/repos/neo4j/neo4j", "Date": "2018-08-11T11:23:27Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((dInfo != null) && (!(dInfo.getDefaultConstraints().isEmpty()))) { outStream.write(dInfo.toString().getBytes(\"UTF-8\")); outStream.write(org.apache.hadoop.hive.ql.metadata.formatting.TextMetaDataFormatter.terminator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4742/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.metadata.formatting.TextMetaDataFormatter.java", "BodyUseAPI": ["java.io.DataOutputStream.write(dInfo.toString().getBytes(\"UTF-8\"))", "dInfo.toString().getBytes(java.lang.String)", "org.apache.hadoop.hive.ql.metadata.DefaultConstraint.toString()"], "Fixed commit": "e6a45584f449534dfb2325d365821030c54e8d9c", "Url": "https://api.github.com/repos/vineetgarg02/hive", "Date": "2018-03-20T22:13:39Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((cInfo != null) && (!(cInfo.getCheckConstraints().isEmpty()))) { outStream.write(cInfo.toString().getBytes(\"UTF-8\")); outStream.write(org.apache.hadoop.hive.ql.metadata.formatting.TextMetaDataFormatter.terminator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4742/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.metadata.formatting.TextMetaDataFormatter.java", "BodyUseAPI": ["org.apache.hadoop.hive.ql.metadata.CheckConstraint.toString()", "java.io.DataOutputStream.write(cInfo.toString().getBytes(\"UTF-8\"))", "cInfo.toString().getBytes(java.lang.String)"], "Fixed commit": "e6a45584f449534dfb2325d365821030c54e8d9c", "Url": "https://api.github.com/repos/vineetgarg02/hive", "Date": "2018-03-20T22:13:39Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getTileEntity(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(signalBox.tryControlFirst(isEnabled))) { if (!(signalBox.tryControlSecond(isEnabled))) { if (!(signalBox.setTargetSender(isEnabled))) { if (!(signalBox.setTargetGetter(isEnabled))) { if ((signalBox.getTarget()) != null) { net.minecraft.tileentity.TileEntity tileEntity = signalBox.getTarget(); if (tileEntity instanceof club.nsdn.nyasamatelecom.api.tileentity.TileEntityReceiver) { if (tileEntity instanceof club.nsdn.nyasamatelecom.api.tileentity.TileEntityPassiveReceiver) { signalBox.controlTarget(isEnabled); } }else { signalBox.controlTarget(isEnabled); } } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2693/buggy-version/src.main.java.club.nsdn.nyasamatelecom.api.device.SignalBox.java", "BodyUseAPI": ["club.nsdn.nyasamatelecom.api.device.SignalBox.TileEntitySignalBox.controlTarget(boolean)", "club.nsdn.nyasamatelecom.api.device.SignalBox.TileEntitySignalBox.controlTarget(boolean)", "club.nsdn.nyasamatelecom.api.device.SignalBox.TileEntitySignalBox.setTargetSender(boolean)", "club.nsdn.nyasamatelecom.api.device.SignalBox.TileEntitySignalBox.getTarget()", "club.nsdn.nyasamatelecom.api.device.SignalBox.TileEntitySignalBox.getTarget()", "club.nsdn.nyasamatelecom.api.device.SignalBox.TileEntitySignalBox.setTargetGetter(boolean)", "club.nsdn.nyasamatelecom.api.device.SignalBox.TileEntitySignalBox.tryControlSecond(boolean)"], "Fixed commit": "ada997dad6306f48e627808e96b5ebd01a716749", "Url": "https://api.github.com/repos/NSDN/NyaSamaTelecom", "Date": "2018-01-11T11:03:58Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLogin()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9762/buggy-version/imsdk.src.main.java.com.agmbat.imsdk.asmack.XMPPManager.java", "BodyUseAPI": [], "Fixed commit": "8d87b4350d311de923bb63d52b6d574d510e12bf", "Url": "https://api.github.com/repos/hustpeng/meet", "Date": "2018-08-16T10:44:30Z"},
{"Line": "=>7449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (conn.getMetaData().getDriverName().contains(\"Oracle\")) { sqlQuery = ((org.wso2.carbon.apimgt.impl.dao.constants.SQLConstants.GET_SCOPES_BY_SCOPE_KEYS_PREFIX_ORACLE) + placeHolderStr) + (org.wso2.carbon.apimgt.impl.dao.constants.SQLConstants.GET_SCOPES_BY_SCOPE_KEYS_SUFFIX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5168/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.dao.ApiMgtDAO.java", "BodyUseAPI": [], "Fixed commit": "3e80bbf7444786d0f32d33ad2178885c41d1cb90", "Url": "https://api.github.com/repos/chamilaadhi/carbon-apimgt", "Date": "2018-03-13T07:13:32Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectionKey.isValid()) { this.selectionKey.interestOps(((this.selectionKey.interestOps()) | (java.nio.channels.SelectionKey.OP_WRITE))); this.selector.wakeup(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9062/buggy-version/src.main.java.org.postgresql.sql2.execution.DefaultNioLoop.java", "BodyUseAPI": [], "Fixed commit": "dfc9542e28872538db46c2bc2e5dcc41ef89d0c7", "Url": "https://api.github.com/repos/sagenschneider/pgsql2", "Date": "2018-08-15T07:47:27Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPaymentSession) != null) { mPaymentSession.handlePaymentData(requestCode, resultCode, data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/442/buggy-version/android.src.main.java.com.guidolodetti.RNStripeModule.java", "BodyUseAPI": [], "Fixed commit": "4accbd1e99a6ee56e9cda01535de7541e4748754", "Url": "https://api.github.com/repos/guidolodetti/react-native-stripe", "Date": "2018-07-31T21:27:28Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edition.isOnlineOnly()) urlEditionChecker = ((props.getProperty(\"URL_EDITIONS\")) + (replace(edition.getId().toUpperCase(), false))) + \"#online\"; else urlEditionChecker = (((props.getProperty(\"URL_EDITIONS\")) + (replace(edition.getId().toUpperCase(), false))) + \"#\") + (props.getProperty(\"FORMAT\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9088/buggy-version/src.main.java.org.magic.api.dashboard.impl.MTGoldFishDashBoard.java", "BodyUseAPI": ["org.magic.api.dashboard.impl.MTGoldFishDashBoard.replace(edition.getId().toUpperCase(),boolean)", "edition.getId().toUpperCase()", "org.magic.api.dashboard.impl.MTGoldFishDashBoard.replace(edition.getId().toUpperCase(),boolean)", "org.magic.api.beans.MagicEdition.getId()", "edition.getId().toUpperCase()", "org.magic.api.beans.MagicEdition.getId()"], "Fixed commit": "9eb1d1e01db4e5fdcc4cb1fe2ca3bd2b869b9dce", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-01-14T21:10:51Z"},
{"Line": "=>1639", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (value != null) { e.setText(value.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/612/buggy-version/modules.common.src.main.java.org.shaolin.bmdp.utils.StringUtil.java", "BodyUseAPI": ["org.dom4j.Element.setText(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "b61c1acccdbeb051b82801410d24474fffac5cf8", "Url": "https://api.github.com/repos/shaolinwu/uimaster", "Date": "2018-01-06T07:26:20Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { android.webkit.WebView.setWebContentsDebuggingEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5734/buggy-version/app.src.main.java.co.epitre.aelf_lectures.SectionBibleFragment.java", "BodyUseAPI": [], "Fixed commit": "3a2ac4e21c544ff9d47fae65d479f6adc8bebd63", "Url": "https://api.github.com/repos/nath5394/aelf-dailyreadings", "Date": "2018-03-25T18:42:15Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<cc.easyandroid.easyrecyclerview.items.IFlexible>.indexOf(cc.easyandroid.easyrecyclerview.items.IFlexible)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (headerIndex >= 0) { return headerIndex + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7308/buggy-version/EasyRecyclerView.src.main.java.cc.easyandroid.easyrecyclerview.EasyFlexibleAdapter.java", "BodyUseAPI": [], "Fixed commit": "36ae2fb30340552c5b9f2f2a5e7656700cc58f64", "Url": "https://api.github.com/repos/easyandroid-cc/EasyRecyclerView", "Date": "2018-09-27T07:19:03Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPub) != null) { if (name.isCharactersCountValid()) { mPub.setName(name.getText().toString()); }else { name.setError(\"Enter establishment name\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9827/buggy-version/app.src.main.java.com.evans.dale.finalyearproject.Fragments.AddPub.AddressFragment.java", "BodyUseAPI": [], "Fixed commit": "569d242d9175b5fa6304a7774949291254f260a3", "Url": "https://api.github.com/repos/thesymbolx/final_year_project", "Date": "2018-03-28T16:17:19Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wright.cs.raiderplanner.controller.MainController.ui.getSavesFolder().listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (files != null) { if ((files.length) == 0) { noAccount = true; } if (((files.length) == 1) && (files[0].getName().contains(\"SamplePlanner.dat\"))) { noAccount = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9074/buggy-version/src.edu.wright.cs.raiderplanner.controller.MainController.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.io.File.getName()"], "Fixed commit": "1ad655e0f5de90d8a7d17c47a880778e51a7cecb", "Url": "https://api.github.com/repos/AlenaBrand/RaiderPlanner", "Date": "2018-03-05T22:39:52Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (env.acceptsProfiles(\"dev\", \"prod\", \"batch\")) { liquibase.setShouldRun(false); }else { liquibase.setShouldRun(liquibaseProperties.isEnabled()); log.debug(\"Configuring Liquibase\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5238/buggy-version/phone-catalog.src.main.java.com.nix.phoneservice.config.DatabaseConfiguration.java", "BodyUseAPI": [], "Fixed commit": "a1de2c3ad38d7b167f574a7cb2fccb72813a816b", "Url": "https://api.github.com/repos/Yurii-Buhryn/nix-test-task", "Date": "2018-09-27T14:29:45Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (targetIndex.equals(ROOT_DIRECTORY)) { versionedSaveIt.setCurrentDirectory(ROOT_DIRECTORY); }else { versionedSaveIt.setCurrentDirectory(targetIndex.getOneBased()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9701/buggy-version/src.main.java.seedu.address.model.ModelManager.java", "BodyUseAPI": ["seedu.address.model.VersionedSaveIt.setCurrentDirectory(targetIndex.getOneBased())", "seedu.address.commons.core.index.Index.getOneBased()", "seedu.address.model.VersionedSaveIt.setCurrentDirectory(int)"], "Fixed commit": "5c958bb2db1e8f75e9af91ea0f35a4efe4d2373b", "Url": "https://api.github.com/repos/CS2103-AY1819S1-T12-4/main", "Date": "2018-10-17T10:21:19Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (java.nio.file.Files.exists(path)) { path = path.toAbsolutePath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8917/buggy-version/src.commander.cls.TablePanel.java", "BodyUseAPI": ["java.nio.file.Path.toAbsolutePath()"], "Fixed commit": "98197ffa442be5e90764dce4b7abd1cdd67071f9", "Url": "https://api.github.com/repos/tatanoi/TotalCommander", "Date": "2018-05-13T18:17:23Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((app.getPackageName()) != null) && (!(app.getPackageName().equals(\"\")))) && (!(pns.contains(app.getPackageName())))) { pns.add(app.getPackageName()); map.put(app.getPackageName(), app); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6885/buggy-version/src.main.java.de.onyxbits.raccoon.cli.Play.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(app.getPackageName())", "de.onyxbits.raccoon.repo.AndroidApp.getPackageName()", "de.onyxbits.raccoon.repo.AndroidApp.getPackageName()", "java.util.HashMap<java.lang.String, de.onyxbits.raccoon.repo.AndroidApp>.put(app.getPackageName(),de.onyxbits.raccoon.repo.AndroidApp)"], "Fixed commit": "2f62d2879699249fc89a5f660a40a562a72b5c8c", "Url": "https://api.github.com/repos/onyxbits/raccoon4", "Date": "2018-01-22T12:47:05Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((app.getPackageName()) != null) && (!(app.getPackageName().equals(\"\")))) && (!(pns.contains(app.getPackageName())))) { pns.add(app.getPackageName()); map.put(app.getPackageName(), app); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6885/buggy-version/src.main.java.de.onyxbits.raccoon.gplay.UpdateAppWorker.java", "BodyUseAPI": ["de.onyxbits.raccoon.repo.AndroidApp.getPackageName()", "java.util.List<java.lang.String>.add(app.getPackageName())", "java.util.HashMap<java.lang.String, de.onyxbits.raccoon.repo.AndroidApp>.put(app.getPackageName(),de.onyxbits.raccoon.repo.AndroidApp)", "de.onyxbits.raccoon.repo.AndroidApp.getPackageName()"], "Fixed commit": "2f62d2879699249fc89a5f660a40a562a72b5c8c", "Url": "https://api.github.com/repos/onyxbits/raccoon4", "Date": "2018-01-22T12:47:05Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (model.getAlive(i)) addPercept(Literal.parseLiteral(((((\"vote(\" + i) + \", \") + (model.getVote(i))) + \")\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6571/buggy-version/src.java.World.java", "BodyUseAPI": ["Model.getVote(int)", "World.addPercept(Literal.parseLiteral(((((\"vote(\" + i) + \", \") + (model.getVote(i))) + \")\")))", "Literal.parseLiteral(((((\"vote(\" + i) + \", \") + (model.getVote(i))) + \")\"))"], "Fixed commit": "7a76002c36e5717de7b285e939b094b600b5d49b", "Url": "https://api.github.com/repos/rjewsbury/SecretAgent", "Date": "2018-03-26T04:47:14Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((locationListener) != null) { LocationServices.FusedLocationApi.removeLocationUpdates(apiClient, locationListener); locationListener.onUnsubscribed(); locationListener = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8459/buggy-version/library.src.main.java.com.patloew.rxlocation.LocationUpdatesFlowableOnSubscribe.java", "BodyUseAPI": [], "Fixed commit": "b344c896d19b1963a8a6571a20070d392fd95c6d", "Url": "https://api.github.com/repos/patloew/RxLocation", "Date": "2018-06-09T18:00:04Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Exception.getCause()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (cause != null) throw new org.knowm.xchange.exceptions.ExchangeException(cause.getMessage(), e);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1765/buggy-version/xchange-poloniex.src.main.java.org.knowm.xchange.poloniex.service.PoloniexTradeServiceRaw.java", "BodyUseAPI": ["java.lang.Throwable.getMessage()"], "Fixed commit": "6cfc2cf037c5c84a6f26c7d5f876b514243aa426", "Url": "https://api.github.com/repos/e1ektr0/XChange", "Date": "2018-01-12T13:04:31Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["DB.DBCollection.findOne(DB.BasicDBObject)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (doc == null) { com.google.gson.Gson gson = new com.google.gson.Gson(); java.lang.String json = gson.toJson(userToken); DB.DBObject dbObject = ((DB.DBObject) (com.mongodb.util.JSON.parse(json))); collection.insert(dbObject); }else { throw new java.lang.Exception(\"user exist\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9723/buggy-version/src.main.java.DB.DataFetcher.java", "BodyUseAPI": [], "Fixed commit": "1957ac5fb87ce856e3cf92e3a6348d9a595e00a9", "Url": "https://api.github.com/repos/sanad94/ChatServer", "Date": "2018-07-31T20:44:58Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (op.check(\"nofiltering\")) { cleantokens = de.duesseldorf.ui.ParsingInterface.clean_tokens(tokens); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/218/buggy-version/src.de.duesseldorf.ui.ParsingInterface.java", "BodyUseAPI": [], "Fixed commit": "d64a71b4e9517befa54afcb09f511dc29409c81e", "Url": "https://api.github.com/repos/spetitjean/TuLiPA-frames", "Date": "2018-01-31T12:24:45Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.NUCLEAR_BOMB) { world.setBlockState(new net.minecraft.util.math.BlockPos((x + 3), (y + 2), (z + 3)), ExtraPlanets_Blocks.NUCLEAR_BOMB.getDefaultState(), 3); world.setBlockState(new net.minecraft.util.math.BlockPos((x + 3), (y + 2), (z + 4)), ExtraPlanets_Blocks.NUCLEAR_BOMB.getDefaultState(), 3); world.setBlockState(new net.minecraft.util.math.BlockPos((x + 3), (y + 2), (z + 5)), ExtraPlanets_Blocks.NUCLEAR_BOMB.getDefaultState(), 3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5455/buggy-version/src.main.java.com.mjr.extraplanets.world.features.WorldGenNuclearPile.java", "BodyUseAPI": [], "Fixed commit": "98f4a441543bbedcbc76844de4bdbb4001d23986", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-07-25T00:43:23Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cn.jzvd.JZVideoPlayerManager.getCurrentJzvd().currentState) == (JZVideoPlayer.CURRENT_STATE_PREPARING)) { cn.jzvd.JZVideoPlayerManager.getCurrentJzvd().onPrepared(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7791/buggy-version/jiaozivideoplayer.src.main.java.cn.jzvd.JZMediaSystem.java", "BodyUseAPI": [], "Fixed commit": "3af8166e8156cb2b24abc5509dd2bf734f6e1768", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2018-03-21T11:06:52Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.BlockingQueue<java.lang.Process>.poll(int,java.util.concurrent.TimeUnit)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (process == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5963/buggy-version/src.de.tkammer.Processor.java", "BodyUseAPI": [], "Fixed commit": "e1dd463815f255a65454b344e13d8232fd85f329", "Url": "https://api.github.com/repos/TaylanUB/ProcessSimulation", "Date": "2018-03-16T22:37:45Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((calendar.get(java.util.Calendar.DAY_OF_WEEK)) == 1) && ((calendar.get(java.util.Calendar.HOUR_OF_DAY)) < 16)) { kingredeagle.myapplication.RefreshParking.evenSide = !(kingredeagle.myapplication.RefreshParking.evenSide); java.lang.System.out.println((\"Switching side to \" + (kingredeagle.myapplication.RefreshParking.evenSide))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9057/buggy-version/app.src.main.java.kingredeagle.myapplication.RefreshParking.java", "BodyUseAPI": [], "Fixed commit": "e594d9930ecb823f4955718d4be1e6f961808846", "Url": "https://api.github.com/repos/Owen-Krueger/AndroidWidgetDuluthParking", "Date": "2018-07-01T20:54:48Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (kingredeagle.myapplication.RefreshParking.evenSide) { parking = \"Even Side Parking\"; }else { parking = \"Odd Side Parking\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/9057/buggy-version/app.src.main.java.kingredeagle.myapplication.RefreshParking.java", "BodyUseAPI": [], "Fixed commit": "e594d9930ecb823f4955718d4be1e6f961808846", "Url": "https://api.github.com/repos/Owen-Krueger/AndroidWidgetDuluthParking", "Date": "2018-07-01T20:54:48Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (importFailed) { javax.swing.JOptionPane.showMessageDialog(null, \"Import failed.\"); }else { javax.swing.JOptionPane.showMessageDialog(null, \"Import completed successfully.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6139/buggy-version/KARS.src.defaultpackage.ImportDialog.java", "BodyUseAPI": [], "Fixed commit": "9f50ac1c1f77fee7b3f91aed87e6176641811668", "Url": "https://api.github.com/repos/EccentricVamp/KARankedSystem", "Date": "2018-05-18T12:53:06Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.siddhi.core.util.snapshot.ByteSerializer.BToO(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (snapshots != null) { snapshotable.restoreState(snapshots.get(snapshotable.getElementId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1766/buggy-version/modules.siddhi-core.src.main.java.org.wso2.siddhi.core.util.snapshot.SnapshotService.java", "BodyUseAPI": ["org.wso2.siddhi.core.util.snapshot.Snapshotable.restoreState(java.lang.Object[])", "java.util.HashMap<java.lang.String, java.lang.Object[]>.get(snapshotable.getElementId())"], "Fixed commit": "e65a31ac512559d86de79a86115326f9b950dd67", "Url": "https://api.github.com/repos/NisalaNiroshana/siddhi-1", "Date": "2017-07-10T03:37:14Z"},
{"Line": "=>808", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.internal.telephony.InboundSmsTracker.getMessageCount()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (messageCount <= 0) { android.util.EventLog.writeEvent(1397638484, \"72298611\", (-1), java.lang.String.format(\"processMessagePart: invalid messageCount = %d\", messageCount)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4649/buggy-version/src.java.com.android.internal.telephony.InboundSmsHandler.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,int)", "android.util.EventLog.writeEvent(int,java.lang.String,int,java.lang.String)"], "Fixed commit": "2d1cc109ae539ec78c985b154a3778593bf83fdc", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-opt-telephony", "Date": "2018-07-09T07:53:32Z"},
{"Line": "=>858", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((index >= (pdus.length)) || (index < 0)) { android.util.EventLog.writeEvent(1397638484, \"72298611\", (-1), java.lang.String.format(\"processMessagePart: invalid seqNumber = %d, messageCount = %d\", (index + (tracker.getIndexOffset())), messageCount)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4649/buggy-version/src.java.com.android.internal.telephony.InboundSmsHandler.java", "BodyUseAPI": ["android.util.EventLog.writeEvent(int,java.lang.String,int,java.lang.String)", "java.lang.String.format(java.lang.String,(index + (tracker.getIndexOffset())),int)"], "Fixed commit": "2d1cc109ae539ec78c985b154a3778593bf83fdc", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-opt-telephony", "Date": "2018-07-09T07:53:32Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mOrderSuccess) { onHome(); }else { onBackPressed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6894/buggy-version/KitePrintSDK.src.main.java.ly.kite.checkout.AReceiptActivity.java", "BodyUseAPI": [], "Fixed commit": "3ef36a86e1fb9138a2fd0163c2426cdb8a88ad1f", "Url": "https://api.github.com/repos/OceanLabs/Android-Print-SDK", "Date": "2018-05-18T10:53:52Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (times == 0) { h = uniandes.unacloud.utils.LocalProcessExecutor.executeCommandOutput(getExecutablePath(), \"startvm\", image.getImageName(), \"--type\", \"emergencystop\"); java.lang.System.out.println((\"Start vm emergencystop response \" + h)); if ((h.contains(uniandes.unacloud.agent.platform.virtualbox.ERROR_MESSAGE)) || (h.contains(\"error\"))) throw new uniandes.unacloud.agent.exceptions.PlatformOperationException(((h.length()) < 100 ? h : h.substring(0, 100))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/641/buggy-version/AgentCloud.src.uniandes.unacloud.agent.platform.virtualbox.VirtualBox.java", "BodyUseAPI": [], "Fixed commit": "f917a813be5a8db2c54a01441a8eb399e7e917e8", "Url": "https://api.github.com/repos/UnaCloud/UnaCloud2", "Date": "2018-07-12T15:12:06Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.arturvasilov.sqlite.core.Where.create()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((where.whereArgs()) != null) && ((where.whereArgs().length) < (cityNames.size()))) { where.or(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6487/buggy-version/app.src.main.java.ru.gdgkazan.simpleweather.network.NetworkService.java", "BodyUseAPI": ["ru.arturvasilov.sqlite.core.Where.or()"], "Fixed commit": "9161ad85f2102ddbd216348549e35a5b6872841c", "Url": "https://api.github.com/repos/mikhaylovsi/SimpleWeatherPatternA", "Date": "2018-05-11T16:40:11Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (createdPermits > 0) { lastUpdateNanos = currentTimeNanos; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/1825/buggy-version/core.src.main.java.com.datastax.oss.driver.internal.core.session.throttling.RateLimitingRequestThrottler.java", "BodyUseAPI": [], "Fixed commit": "c70a85d99a2ba35dfcba4cf736b093c4c1b0e286", "Url": "https://api.github.com/repos/datastax/java-driver", "Date": "2018-03-06T01:58:55Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (packageName.endsWith(\".bal\")) { globalPackageCache.removePackage(new org.ballerinalang.model.elements.PackageID(\"\")); }else { globalPackageCache.removePackage(new org.ballerinalang.model.elements.PackageID(org.wso2.ballerinalang.compiler.util.Names.ANON_ORG, new org.wso2.ballerinalang.compiler.util.Name(packageName), new org.wso2.ballerinalang.compiler.util.Name(\"0.0.0\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3469/buggy-version/language-server.modules.langserver-core.src.main.java.org.ballerinalang.langserver.TextDocumentServiceUtil.java", "BodyUseAPI": ["org.ballerinalang.langserver.LSPackageCache.removePackage(org.ballerinalang.model.elements.PackageID)"], "Fixed commit": "c432dcaf8d8fb47d70b9d64002abef4a8bfe91b4", "Url": "https://api.github.com/repos/nadeeshaan/ballerina", "Date": "2018-04-09T11:57:18Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.web.savedrequest.SavedRequest.getRedirectUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.endsWithIgnoreCase(target, \".html\")) { com.irving.aecproject.security_browser.BrowserSecurityController.logger.info(\"redirecting to login page:{}\", securityProperties.getBrowserProperties().getLoginPage()); redirectStrategy.sendRedirect(request, response, securityProperties.getBrowserProperties().getLoginPage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4476/buggy-version/src.main.java.com.irving.aecproject.security_browser.BrowserSecurityController.java", "BodyUseAPI": [], "Fixed commit": "cd7abe489583510fbd58b0e48cdf8f194baf4d6d", "Url": "https://api.github.com/repos/irvinghu07/AEC-Membership-Management", "Date": "2018-08-22T22:18:55Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((piece.getCurrentY()) == startingPos) { model.BoardSquare thisSquareFrontTwo = controller.Controller.getButtonWithCoords(piece.getCurrentX(), ((piece.getCurrentY()) + (yOffset * 2)), piece.getBoardSquare().getBoard()); if ((!(thisSquareFrontTwo.hasSpecificChessPiece())) && (finalListSquares.contains(thisSquareFrontOne))) { finalListSquares.add(thisSquareFrontTwo); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8331/buggy-version/controller.Controller.java", "BodyUseAPI": ["model.SpecificChessPiece.getCurrentY()", "piece.getBoardSquare().getBoard()", "model.SpecificChessPiece.getBoardSquare()", "model.SpecificChessPiece.getCurrentX()", "controller.Controller.getButtonWithCoords(piece.getCurrentX(),((piece.getCurrentY()) + (yOffset * 2)),piece.getBoardSquare().getBoard())"], "Fixed commit": "7832a2ca8c935833f3e719f62bf92e569a76b375", "Url": "https://api.github.com/repos/HuzaifaElahi/ChessGame", "Date": "2018-06-11T18:06:33Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((iZooto.appContext) == null) iZooto.appContext = this;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/8449/buggy-version/izooto.src.main.java.com.izooto.MyFirebaseMessagingService.java", "BodyUseAPI": [], "Fixed commit": "e753419409b91ded3f06160d19e2e5a89f425065", "Url": "https://api.github.com/repos/jayantb/izooto", "Date": "2018-09-27T18:06:43Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 0) { timeStepDataObject.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3730/buggy-version/model_metaswap.java.src.org.openda.model_metaswap.EsriAsciiGridSeriesDataObject.java", "BodyUseAPI": [], "Fixed commit": "e35fd19baecdcfddb7234d270f92bfa5bb4f2093", "Url": "https://api.github.com/repos/OpenDA-Association/OpenDA", "Date": "2018-10-18T12:13:14Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((strings.length) == 1) && (strings[0].isEmpty())) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6408/buggy-version/app.src.main.java.com.raulh82vlc.flickrj.feed.data.repository.mapper.NetworkToCacheMapper.java", "BodyUseAPI": [], "Fixed commit": "d1a92db80228ce9bdbb956935e75c0140b8321dd", "Url": "https://api.github.com/repos/raulh82vlc/FlickrFeed", "Date": "2018-02-05T02:57:27Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (acumulador != null) { if (proposicao != null) proposicao = new Proposicao(proposicao, acumulador, ultimoConectivo, not); else proposicao = acumulador; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/4578/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "df6938c4dfd50f1e07476526a60dbc2f3cf23e16", "Url": "https://api.github.com/repos/macaetano/truth-table-generator", "Date": "2018-03-18T00:55:31Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(editText.getText().toString().equals(\"\"))) { tvHintTextView.animate().translationY((((-(rlContainer.getHeight())) / 2) - 18)); tvHintTextView.animate().translationX(hitLeftMargin); tvHintTextView.animate().scaleX(0.8F); tvHintTextView.animate().scaleY(0.8F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2682/buggy-version/edittextcustomlayoutLib.src.main.java.com.swagat.edittextcustomlayout.EditTextCustomLayout.java", "BodyUseAPI": [], "Fixed commit": "e2bab87455837618c11b3c8da06d9950dc004be4", "Url": "https://api.github.com/repos/swagatnayak/CustomMaterialEditText", "Date": "2018-07-20T06:31:48Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.landyking.link.DirectiveExec.processOutputSubNode(com.github.landyking.link.DirectiveMojo,org.w3c.dom.Element,com.github.landyking.link.spel.SpelPair)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((subVal instanceof com.github.landyking.link.ValueBag) && ((((com.github.landyking.link.ValueBag) (subVal)).getFinalValue()) == null)) { childs.put(name, java.util.Collections.emptyList()); }else if (subVal instanceof java.util.Collection) { childs.put(name, ((java.util.Collection<java.lang.Object>) (subVal))); }else { java.lang.String path = mojo.getParser().getFullPath(e, true); throw new com.github.landyking.link.exception.LinkException((path + \"\u7684\u8868\u8fbe\u5f0f\u6c42\u503c\u7ed3\u679c\u4e0d\u662f\u5217\u8868\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7110/buggy-version/link-core.src.main.java.com.github.landyking.link.DirectiveExec.java", "BodyUseAPI": [], "Fixed commit": "3e91df66654a5734124820016eca82200a122a59", "Url": "https://api.github.com/repos/landyking/link", "Date": "2018-08-16T05:40:31Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["datastructures.StreetMap.getRoadByCoordinates(currentParent.getXCoord(),currentParent.getYCoord(),currentConnected.getXCoord(),currentConnected.getYCoord())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (r.isOneWay()) { if ((r.getDirection()) != currentConnected) { oke = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/984/buggy-version/src.main.java.algorithms.AstarAdvanced.java", "BodyUseAPI": ["road.Road.getDirection()"], "Fixed commit": "1686373112e30d5541870f38cb75e5b162c12efe", "Url": "https://api.github.com/repos/weidler/traffic-simulation", "Date": "2018-06-13T10:22:38Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((times_till_toggle.get(intersection)) <= 0) { road.Road busiest = strategy.Coordinated.ctl.weightedRoads2(intersection, cars); intersection.setTrafficLightActivity2(busiest); times_till_toggle.put(intersection, tl_phase_length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/984/buggy-version/src.main.java.strategy.Coordinated.java", "BodyUseAPI": ["datastructures.Intersection.setTrafficLightActivity2(road.Road)", "algorithms.CoordinatedTrafficLights.weightedRoads2(datastructures.Intersection,java.util.HashMap<road.Road, java.util.ArrayList<car.Car>>)", "java.util.HashMap<datastructures.Intersection, java.lang.Double>.put(datastructures.Intersection,double)"], "Fixed commit": "1686373112e30d5541870f38cb75e5b162c12efe", "Url": "https://api.github.com/repos/weidler/traffic-simulation", "Date": "2018-06-13T10:22:38Z"},
{"Line": "=>611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inter.getSig()) == null) { sig.addVertex(inter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6317/buggy-version/src.main.org.audiveris.omr.sheet.symbol.SymbolFactory.java", "BodyUseAPI": ["org.audiveris.omr.sig.SIGraph.addVertex(org.audiveris.omr.sig.inter.Inter)"], "Fixed commit": "86519b8042e2d6e1077d768811116698dcd5c38c", "Url": "https://api.github.com/repos/Audiveris/audiveris", "Date": "2018-02-17T09:59:50Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(Context.CONNECTIVITY_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cm == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/7022/buggy-version/libcore.src.main.java.com.mapbox.android.core.connectivity.ConnectivityReceiver.java", "BodyUseAPI": [], "Fixed commit": "a9b4605b71387318ea6a7acf20718cca9de172d9", "Url": "https://api.github.com/repos/mapbox/mapbox-events-android", "Date": "2018-10-04T18:15:28Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files == null) { throw new com.urise.webapp.exception.StorageException(\"Directory is empty or read error\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3908/buggy-version/src.com.urise.webapp.storage.AbstractFileStorage.java", "BodyUseAPI": [], "Fixed commit": "374c55b2fa09c0d7caf3000790e18cb17b6e26cb", "Url": "https://api.github.com/repos/MxWild/basejava", "Date": "2018-06-03T19:14:35Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files != null) { for (java.io.File file : files) { doDelete(file); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3908/buggy-version/src.com.urise.webapp.storage.AbstractFileStorage.java", "BodyUseAPI": [], "Fixed commit": "374c55b2fa09c0d7caf3000790e18cb17b6e26cb", "Url": "https://api.github.com/repos/MxWild/basejava", "Date": "2018-06-03T19:14:35Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (list == null) { throw new com.urise.webapp.exception.StorageException(\"Directory is empty or read error\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/3908/buggy-version/src.com.urise.webapp.storage.AbstractFileStorage.java", "BodyUseAPI": [], "Fixed commit": "374c55b2fa09c0d7caf3000790e18cb17b6e26cb", "Url": "https://api.github.com/repos/MxWild/basejava", "Date": "2018-06-03T19:14:35Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { clientId = savedInstanceState.getString(\"clientId\"); clientSecret = savedInstanceState.getString(\"clientSecret\"); wasConnected = savedInstanceState.getBoolean(\"isConnected\", false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/6772/buggy-version/Ports.Android.src.com.codename1.social.GoogleImpl.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)", "android.os.Bundle.getString(java.lang.String)", "android.os.Bundle.getBoolean(java.lang.String,boolean)"], "Fixed commit": "5f819971557b0f591b2f0303396cc06905817f85", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2018-10-10T19:11:29Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sharedPreferences.contains(\"user_1\"))) { readSDFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/5497/buggy-version/app.src.main.java.com.example.rahul.donationtrackerapp.Controllers.WelcomeScreen.java", "BodyUseAPI": [], "Fixed commit": "39a4df4513986ba4ce09d8cd1c785ac5a159f84e", "Url": "https://api.github.com/repos/rpatel397/DonationTrackerApp", "Date": "2018-10-11T15:29:38Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.agiletec.aps.system.common.entity.parse.IEntityTypeFactory.extractEntityType(java.lang.String,java.lang.Class,java.lang.String,com.agiletec.aps.system.common.entity.parse.IEntityTypeDOM,super.getName(),com.agiletec.aps.system.common.entity.parse.IApsEntityDOM)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == mainPrototype) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V142/2643/buggy-version/engine.src.main.java.com.agiletec.aps.system.common.entity.ApsEntityManager.java", "BodyUseAPI": [], "Fixed commit": "f2bcbba87e632344e38c4833f60f88fa43afb32d", "Url": "https://api.github.com/repos/entando/entando-core", "Date": "2018-02-01T10:29:18Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.topicquests.pg.api.IPostgresConnection.beginTransaction()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (r.hasError()) { environment.logError((((((((\"PostgresUserDatabase.removeUserData \" + userId) + \" \") + propertyType) + \" \") + oldValue) + \" \") + (r.getErrorString())), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2082/buggy-version/src.main.java.org.topicquests.backside.servlet.apps.usr.persist.PostgresUserDatabase.java", "BodyUseAPI": ["org.topicquests.backside.servlet.ServletEnvironment.logError((((((((\"PostgresUserDatabase.removeUserData \" + userId) + \" \") + propertyType) + \" \") + oldValue) + \" \") + (r.getErrorString())),<nulltype>)", "org.topicquests.support.api.IResult.getErrorString()"], "Fixed commit": "86378b13c9979e802a19aa3e19b54e1897a10ffa", "Url": "https://api.github.com/repos/topicquests/tq-backside-servlet", "Date": "2018-04-26T18:45:32Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sock) == null) { gov.nist.javax.sip.stack.TLSMessageProcessor.logger.logDebug(\"Socket was null, perhaps not started properly\"); }else { sock.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8530/buggy-version/src.gov.nist.javax.sip.stack.TLSMessageProcessor.java", "BodyUseAPI": [], "Fixed commit": "2a1e7991275cdb0fb07394feca0d6da69dcbe252", "Url": "https://api.github.com/repos/usnistgov/jsip", "Date": "2018-01-28T14:02:28Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sock) == null) { gov.nist.javax.sip.stack.TCPMessageProcessor.logger.logDebug(\"Socket was null, perhaps not started properly\"); }else { sock.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8530/buggy-version/src.gov.nist.javax.sip.stack.TCPMessageProcessor.java", "BodyUseAPI": [], "Fixed commit": "2a1e7991275cdb0fb07394feca0d6da69dcbe252", "Url": "https://api.github.com/repos/usnistgov/jsip", "Date": "2018-01-28T14:02:28Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sock) == null) { gov.nist.javax.sip.stack.UDPMessageProcessor.logger.logDebug(\"Socket was null, perhaps not started properly\"); }else { sock.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8530/buggy-version/src.gov.nist.javax.sip.stack.UDPMessageProcessor.java", "BodyUseAPI": [], "Fixed commit": "2a1e7991275cdb0fb07394feca0d6da69dcbe252", "Url": "https://api.github.com/repos/usnistgov/jsip", "Date": "2018-01-28T14:02:28Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (moduleType == (de.photon.AACAdditionPro.ModuleType.LOG_BOT)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2232/buggy-version/src.main.java.com.mcmylx.aacdb.aachooker.AACAdditionProHooker.java", "BodyUseAPI": [], "Fixed commit": "c157753c808b922a2b4f9cbc305fcd9d661b2803", "Url": "https://api.github.com/repos/jiangdashao/AACDataBase", "Date": "2018-06-07T14:54:04Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (moduleType.name().contains(\"CONTROL\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2232/buggy-version/src.main.java.com.mcmylx.aacdb.aachooker.AACAdditionProHooker.java", "BodyUseAPI": [], "Fixed commit": "c157753c808b922a2b4f9cbc305fcd9d661b2803", "Url": "https://api.github.com/repos/jiangdashao/AACDataBase", "Date": "2018-06-07T14:54:04Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pClient.getVeteranStatus()) != null) client.setVeteranStatus(java.lang.Integer.parseInt(pClient.getVeteranStatus().getValue()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2282/buggy-version/hmis-base-service.src.main.java.com.servinglynk.hmis.warehouse.base.service.converter.ClientConverter.java", "BodyUseAPI": ["com.servinglynk.hmis.warehouse.core.model.BaseClient.setVeteranStatus(int)", "com.servinglynk.hmis.warehouse.model.base.Client.getVeteranStatus()", "pClient.getVeteranStatus().getValue()", "java.lang.Integer.parseInt(pClient.getVeteranStatus().getValue())"], "Fixed commit": "c6f799503676392888d2f0bcb3f3d138ccf41d06", "Url": "https://api.github.com/repos/servinglynk/hslynk-open-source", "Date": "2018-09-11T14:00:29Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.myapp.handbook.HttpConnectionUtil.sharedPreferences) == null) { com.myapp.handbook.HttpConnectionUtil.sharedPreferences = android.preference.PreferenceManager.getDefaultSharedPreferences(getApplicationContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6908/buggy-version/mobile.Android.app.src.main.java.com.myapp.handbook.GcmIntentService.java", "BodyUseAPI": [], "Fixed commit": "666d004487306c24711729a5e255abb9747e111d", "Url": "https://api.github.com/repos/ashutoshpurohit/SCHPARERP", "Date": "2018-01-28T02:01:01Z"},
{"Line": "=>1291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.currentGalaxyName.equalsIgnoreCase(\"galaxy.milky_way\"))) this.selectedParent = this.currentGalaxyMainSystem;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8884/buggy-version/src.main.java.com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection.java", "BodyUseAPI": [], "Fixed commit": "0d80ef27889099e8b6caa5f7070f238099daf2e3", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-02-19T00:31:41Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (status != null) { this.status = new java.util.ArrayList<>(status); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7518/buggy-version/src.main.java.seedu.address.storage.XmlAdaptedItem.java", "BodyUseAPI": [], "Fixed commit": "3bedfec05322c14afede6ff35027a35ff16f28ed", "Url": "https://api.github.com/repos/gaoqikai/main", "Date": "2018-10-10T05:27:10Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (com.blade.mvc.http.HttpRequest.SESSION_HANDLER)) { httpRequest.session = com.blade.mvc.http.HttpRequest.SESSION_HANDLER.createSession(httpRequest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/318/buggy-version/src.main.java.com.blade.mvc.http.HttpRequest.java", "BodyUseAPI": [], "Fixed commit": "4f3135884386d9115cbcbcf8b708ac42914da625", "Url": "https://api.github.com/repos/lets-blade/blade", "Date": "2018-07-05T03:12:58Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lang) == null) { lang = DLNAMediaLang.UND; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3491/buggy-version/src.main.java.net.pms.dlna.DLNAMediaSubtitle.java", "BodyUseAPI": [], "Fixed commit": "fe42ef515d03eee9cd509aa8a0274ec324131e1d", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2017-09-24T12:29:05Z"},
{"Line": "=>619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["reference.getNodeId().getParentId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mid == 0) && (parentId.equals(NodeId.DOCUMENT_NODE))) { mid = getLength(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4290/buggy-version/src.org.exist.dom.persistent.NewArrayNodeSet.java", "BodyUseAPI": [], "Fixed commit": "84edb0a854959c5fa16adb1ebcf0d800e1cc8842", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2018-08-11T04:29:17Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scienceLab.isConnected()) { java.lang.Double frequency = scienceLab.getFrequency(knobMarker[knobState], null); saveAndSetData(java.lang.String.valueOf(frequency), getString(R.string.frequency_unit)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6014/buggy-version/app.src.main.java.org.fossasia.pslab.activity.MultimeterActivity.java", "BodyUseAPI": ["org.fossasia.pslab.communication.ScienceLab.getFrequency(java.lang.String,<nulltype>)"], "Fixed commit": "de0146d2cad5a9ed8bd5136537c1e27b8799986d", "Url": "https://api.github.com/repos/abhinavraj23/pslab-android", "Date": "2018-07-13T15:50:59Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userKeyList) != null) { if ((userKeyList.get(listDataHeader.get(groupPosition))) != null) { return userKeyList.get(listDataHeader.get(groupPosition)).size(); }else { return 0; } }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/207/buggy-version/app.src.main.java.com.sarthak.trackit.trackit.adapters.FriendsStatusAdapter.java", "BodyUseAPI": [], "Fixed commit": "0132dc1e85e49d1a417baad5ffbf1bfb9f734b71", "Url": "https://api.github.com/repos/MapsApp/LiveTrack", "Date": "2018-03-12T08:29:39Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.isSetUnits()) { v.setUnits(value.getUnitsInstance().clone()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1646/buggy-version/src.org.sbml.jsbml.util.compilers.UnitsCompiler.java", "BodyUseAPI": ["org.sbml.jsbml.util.compilers.ASTNodeValue.setUnits(value.getUnitsInstance().clone())", "value.getUnitsInstance().clone()", "org.sbml.jsbml.ASTNode.getUnitsInstance()"], "Fixed commit": "c1960f9532973eff3af5c95f275a229b7ffd4152", "Url": "https://api.github.com/repos/sbmlteam/jsbml", "Date": "2011-03-21T14:25:37Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((MainGame.team.size()) > i) { clickList.set(i, new maple_gacha.CardPane(this, (133 + (205 * i)), 142, 206, 319, MainGame.team.get(i))); clickList.get(i).setHero(MainGame.team.get(i)); clickList.get(i).run(); clickList.get(i).update(); }else { clickList.set(i, new maple_gacha.CardPane(this, (133 + (205 * i)), 142, 206, 319, null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1728/buggy-version/OrcMathGUI.src.maple_gacha.CharacterScreen.java", "BodyUseAPI": ["clickList.get(i).setHero(MainGame.team.get(i))", "java.util.ArrayList<maple_gacha.CardPane>.get(int)", "java.util.ArrayList<maple_gacha.CardPane>.set(int,maple_gacha.CardPane)", "clickList.get(i).run()", "java.util.ArrayList<maple_gacha.CardPane>.get(int)", "MainGame.team.get(int)", "java.util.ArrayList<maple_gacha.CardPane>.set(int,maple_gacha.CardPane)", "clickList.get(i).update()", "java.util.ArrayList<maple_gacha.CardPane>.get(int)", "MainGame.team.get(int)"], "Fixed commit": "24163b6c1fd98bb2d70c834ad3b8fc045f49536d", "Url": "https://api.github.com/repos/blueChameleos/orcmath", "Date": "2018-02-12T19:23:52Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ex.getMessage().equals(ErrorCodes.INVALID_DATA)) { response.put(\"error\", ErrorCodes.INVALID_DATA); }else { response.put(\"error\", ErrorCodes.USERNAME_UNAVAILABLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1781/buggy-version/src.main.java.se.kth.iv1201.recruitment.backend.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "05781e8f80aa8013f7d86cbd7fe8a939fa411a9d", "Url": "https://api.github.com/repos/Uddekudde/arch-javaEE", "Date": "2018-03-07T13:40:53Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTask) == (WPCT_ID)) { mNetworkUrl = com.idroi.marketsense.request.StockRequest.queryStockListWithMode(activity, true, StockRequest.MODE_WPCT); }else { mNetworkUrl = com.idroi.marketsense.request.StockRequest.queryStockList(activity, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8687/buggy-version/app.src.main.java.com.idroi.marketsense.datasource.StockListPlacer.java", "BodyUseAPI": [], "Fixed commit": "283d8c015ff9392de145a86e0d001f842822d4ff", "Url": "https://api.github.com/repos/daniel0924001/Android-MarketSense", "Date": "2018-08-03T09:58:07Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.findViewById(R.id.errorText)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (textView != null) { textView.setText(e); if (success) { textView.setTextColor(android.support.v4.content.ContextCompat.getColor(context, R.color.white_alpha)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3914/buggy-version/app.src.main.java.com.imagesoftware.anubhav.vacmet.utils.FingerprintHandler.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setTextColor(android.support.v4.content.ContextCompat.getColor(context, R.color.white_alpha))"], "Fixed commit": "02d84d0032e63c3d853a8d8627d4441fa987c19e", "Url": "https://api.github.com/repos/jay1493/vacmetOrderStatus", "Date": "2018-01-20T10:18:42Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.mifos.utils.Network.getConnectivityStatus(this)) != (com.mifos.utils.Network.TYPE_NOT_CONNECTED)) { startDashBoardActivity(); }else { com.mifos.mifosxdroid.core.util.Toaster.show(clRootview, R.string.error_network_not_available); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4538/buggy-version/mifosng-android.src.main.java.com.mifos.mifosxdroid.passcode.PassCodeActivity.java", "BodyUseAPI": [], "Fixed commit": "f23f711fa822636f5693122d199798313fae12ae", "Url": "https://api.github.com/repos/AkshGautam/android-client", "Date": "2018-02-08T14:16:55Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((values.length) < 2) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8684/buggy-version/app.src.main.java.com.example.mentalmath.trainings.examplegenerator.DivisionBuilder.java", "BodyUseAPI": [], "Fixed commit": "2354c53b8e8a37c14193ddc33a4ea7c6aa52d1e1", "Url": "https://api.github.com/repos/Roman-Markov/probe", "Date": "2018-05-15T19:27:31Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(nextLine[1].isEmpty())) l.add(nextLine[1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3512/buggy-version/src.counter.CSV.java", "BodyUseAPI": [], "Fixed commit": "8e3ac50ae01ce8192b629ce7b83e804d3f5b0798", "Url": "https://api.github.com/repos/jayathungek/pcounts", "Date": "2018-10-10T13:45:04Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(nextLine[2].isEmpty())) v.add(nextLine[2]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3512/buggy-version/src.counter.CSV.java", "BodyUseAPI": [], "Fixed commit": "8e3ac50ae01ce8192b629ce7b83e804d3f5b0798", "Url": "https://api.github.com/repos/jayathungek/pcounts", "Date": "2018-10-10T13:45:04Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.rdf.simple.LiteralImpl.getLanguageTag()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (languageTag.isPresent()) { sb.append(languageTag.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3830/buggy-version/commons-rdf-simple.src.main.java.org.apache.commons.rdf.simple.LiteralImpl.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.util.Optional<java.lang.String>.get()"], "Fixed commit": "371fc4b4419b4446eeea76bfe8ad5d90e06b7e9a", "Url": "https://api.github.com/repos/BME-MIT-IET/Csipet-Csapat-iet-2018", "Date": "2018-05-06T19:37:19Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dna[i].length()) != n) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4394/buggy-version/src.main.java.com.matias.service.util.AnalizadorConsecutivos.java", "BodyUseAPI": [], "Fixed commit": "2cd19bb4f655b796ce6d9980eec891eba599c456", "Url": "https://api.github.com/repos/matiasgarciamarset/MLRequest", "Date": "2018-02-21T03:49:30Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(numberInput.equals(com.developingdaan.calcyoulater.Calcyoulater.DEFAULT_NUMBER_INPUT))) { numberInput = com.developingdaan.calcyoulater.Calcyoulater.DEFAULT_NUMBER_INPUT; updateInputWindow(numberInput); mClearButton.setText(R.string.all_clear); proceedToAllClear = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7923/buggy-version/app.src.main.java.com.developingdaan.calcyoulater.Calcyoulater.java", "BodyUseAPI": [], "Fixed commit": "9803242c7f82fde4dbfde97b56bf096de1a18341", "Url": "https://api.github.com/repos/daanschutte/calculator", "Date": "2018-03-07T20:14:44Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File((((this.getFilesDir()) + \"/\") + \"login.json\")).exists())) { new com.example.marta.blueteeth.JSONDriver(getAssets().open(\"login.json\"), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7192/buggy-version/app.src.main.java.com.example.marta.blueteeth.HomeScreen.java", "BodyUseAPI": [], "Fixed commit": "1d590b15d31af7f385f1dbeed5550a0e20c49d88", "Url": "https://api.github.com/repos/Martydude15/BlueTeeth", "Date": "2018-04-20T01:09:35Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((topicsReposiroty.findById(id).get().getLikes()) != 0) { topicsReposiroty.findById(id).get().setLikes(((topicsReposiroty.findById(id).get().getLikes()) - 1)); }else { topicsReposiroty.findById(id).get().setLikes(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3170/buggy-version/week-08.day-04.Reddit.src.main.java.com.greenfoxacademy.reddit.services.TopicsServiceImpl.java", "BodyUseAPI": ["topicsReposiroty.findById(id).get().setLikes(((topicsReposiroty.findById(id).get().getLikes()) - 1))", "topicsReposiroty.findById(id).get().getLikes()", "com.greenfoxacademy.reddit.repositories.TopicsReposiroty.findById(java.lang.Long)", "topicsReposiroty.findById(id).get().setLikes(int)", "com.greenfoxacademy.reddit.repositories.TopicsReposiroty.findById(java.lang.Long)", "topicsReposiroty.findById(id).get()", "topicsReposiroty.findById(id).get()", "com.greenfoxacademy.reddit.repositories.TopicsReposiroty.findById(java.lang.Long)", "topicsReposiroty.findById(id).get()"], "Fixed commit": "0f0c790d825c84796fbc582f8856f33792d32329", "Url": "https://api.github.com/repos/green-fox-academy/Ldaruu", "Date": "2018-09-30T22:54:47Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(httpBindAddress))) { serverConnector.setHost(httpBindAddress); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2850/buggy-version/src.main.java.ru.yandex.market.graphouse.GraphouseWebServer.java", "BodyUseAPI": ["org.eclipse.jetty.server.ServerConnector.setHost(java.lang.String)"], "Fixed commit": "8c0e7bffc9b31d7d5585fd7fe73d5a2b4f6ba6af", "Url": "https://api.github.com/repos/velom/graphouse", "Date": "2018-01-04T17:55:52Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(bindAddress)) { socketAddress = new java.net.InetSocketAddress(port); }else { socketAddress = new java.net.InetSocketAddress(bindAddress, port); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2850/buggy-version/src.main.java.ru.yandex.market.graphouse.server.MetricServer.java", "BodyUseAPI": [], "Fixed commit": "8c0e7bffc9b31d7d5585fd7fe73d5a2b4f6ba6af", "Url": "https://api.github.com/repos/velom/graphouse", "Date": "2018-01-04T17:55:52Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hull_intersections.contains(next_intersection)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5913/buggy-version/app.src.main.java.com.platypus.android.tablet.Path.Region.java", "BodyUseAPI": [], "Fixed commit": "c70358f68932c36e4d17c06eeb28b93e1e703b40", "Url": "https://api.github.com/repos/intcatch2020/tablet", "Date": "2018-06-26T16:33:39Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index < ((size) - 1)) { java.lang.System.arraycopy(storage, (index + 1), storage, index, ((size) - index)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6734/buggy-version/src.storage.SortedArrayStorage.java", "BodyUseAPI": ["java.lang.System.arraycopy(storage.SortedArrayStorage,int,storage.SortedArrayStorage,int,((size) - index))"], "Fixed commit": "ca7c4076ae391f9fec148a597f99cec39db1c8a7", "Url": "https://api.github.com/repos/mvladbox/basejava", "Date": "2018-09-27T16:08:07Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i != (currentPlayer)) nextArea[i] = Area.takeDiceFromTray;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/657/buggy-version/src.games.gsClever.Logic.MainLogic.java", "BodyUseAPI": [], "Fixed commit": "a33bf65cff316039c5e8ed04d5bb31f3e4bceac3", "Url": "https://api.github.com/repos/nicoonator/gsclever", "Date": "2018-07-12T09:17:49Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (followRedirect) { setChannelAttributes(channelFuture.channel(), httpOutboundRequest, httpResponseFuture, targetChannel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9556/buggy-version/components.org.wso2.transport.http.netty.src.main.java.org.wso2.transport.http.netty.contractimpl.DefaultHttpClientConnector.java", "BodyUseAPI": [], "Fixed commit": "5f2d89682c53cc6c449714c27b35dd2f886706ac", "Url": "https://api.github.com/repos/chamil321/transport-http", "Date": "2018-04-17T03:38:16Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (review == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8501/buggy-version/src.main.java.it.unisalento.se.saw.models.DTOFactory.ReviewDTOModel.java", "BodyUseAPI": [], "Fixed commit": "185237d4731a0c8c53fa812fdc74ae39b21afc52", "Url": "https://api.github.com/repos/anto6715/SeApp", "Date": "2018-09-08T15:15:11Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((imgBounds.getWidth()) == 0) || ((imgBounds.getHeight()) == 0)) { return createEmptyImage(baseTile, atLeastOnePixel(imgBounds)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4040/buggy-version/mapserver-imageops.src.main.java.org.geolatte.mapserver.img.BasicImaging.java", "BodyUseAPI": ["org.geolatte.mapserver.img.BasicImaging.atLeastOnePixel(org.geolatte.mapserver.util.PixelRange)", "org.geolatte.mapserver.img.BasicImaging.createEmptyImage(org.geolatte.mapserver.img.BasicTileImage,java.awt.Dimension)"], "Fixed commit": "2f049f3da09f25eb8776b98e68b579401d496371", "Url": "https://api.github.com/repos/GeoLatte/geolatte-mapserver", "Date": "2018-04-30T23:16:38Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(swipeRefreshLayout.isRefreshing())) { swipeRefreshLayout.setRefreshing(true); updateTimeline(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2836/buggy-version/app.src.main.java.aleksandrkim.twitterdemo.TimelineFragment.java", "BodyUseAPI": ["android.support.v4.widget.SwipeRefreshLayout.setRefreshing(boolean)"], "Fixed commit": "623ae61cb0babb6d76b096ebf0b8af1be242512a", "Url": "https://api.github.com/repos/aleksandrkim/TwitterDemo", "Date": "2018-02-06T20:20:04Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.BlockingQueue<com.oath.hackgame.common.PlayerMove>.take()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((playerMove2.getMoveType().toString().equalsIgnoreCase(Globals.moves.Up.toString())) || (playerMove2.getMoveType().toString().equalsIgnoreCase(Globals.moves.Down.toString()))) || (playerMove2.getMoveType().toString().equalsIgnoreCase(Globals.moves.Left.toString()))) || (playerMove2.getMoveType().toString().equalsIgnoreCase(Globals.moves.Right.toString()))) { gs.setMoveListPlayer2(playerMove2.getMoveType().toString()); }else { gs.setMoveListPlayer2(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6764/buggy-version/HackGameWeb.src.main.java.com.oath.hackgame.controller.GameLandingPageController.java", "BodyUseAPI": ["com.oath.hackgame.controller.GameState.setMoveListPlayer2(playerMove2.getMoveType().toString())", "playerMove2.getMoveType().toString()", "com.oath.hackgame.common.PlayerMove.getMoveType()"], "Fixed commit": "8edb1dd6478c2318562bb25e0b4a9bce26bc0bf1", "Url": "https://api.github.com/repos/a2l007/HackGameWeb", "Date": "2018-06-13T02:37:15Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ThreadLocalRandom.nextInt(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sim1 == 0) { return com.oath.common.snakewars.board.MoveType.UP; }else if (sim1 == 1) { return com.oath.common.snakewars.board.MoveType.DOWN; }else if (sim1 == 2) { return com.oath.common.snakewars.board.MoveType.LEFT; }else { return com.oath.common.snakewars.board.MoveType.RIGHT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6764/buggy-version/PlayerService.src.main.java.com.oath.snakewars.bot.GenericBot.java", "BodyUseAPI": [], "Fixed commit": "8edb1dd6478c2318562bb25e0b4a9bce26bc0bf1", "Url": "https://api.github.com/repos/a2l007/HackGameWeb", "Date": "2018-06-13T02:37:15Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.menthor.xmi2ontouml.util.XMLDOMUtil.getFirstAppearanceOf(org.w3c.dom.Element,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (memberTyp != null) { source = doc.getElementById(memberTyp.getAttribute(\"xmi:idref\")).getAttribute(\"name\"); if (memberPrp != null) { memberPrp = doc.getElementById(memberEnds.get(1).getAttribute(\"xmi:idref\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3514/buggy-version/net.menthor.xmi2ontouml.src.net.menthor.xmi2ontouml.util.OntoUMLError.java", "BodyUseAPI": ["org.w3c.dom.Document.getElementById(java.lang.String)", "org.w3c.dom.Element.getAttribute(java.lang.String)", "org.w3c.dom.Element.getAttribute(java.lang.String)"], "Fixed commit": "a0f0b1832a4e49f7f7b5e1af7de1b655e4253c9a", "Url": "https://api.github.com/repos/MenthorTools/menthor-editor", "Date": "2018-03-10T03:07:28Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (memberPrp != null) { memberTyp = net.menthor.xmi2ontouml.util.XMLDOMUtil.getFirstAppearanceOf(memberPrp, \"type\"); if (memberTyp != null) { org.w3c.dom.Element a = doc.getElementById(memberTyp.getAttribute(\"xmi:idref\")); if (a != null) { target = a.getAttribute(\"name\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3514/buggy-version/net.menthor.xmi2ontouml.src.net.menthor.xmi2ontouml.util.OntoUMLError.java", "BodyUseAPI": ["net.menthor.xmi2ontouml.util.XMLDOMUtil.getFirstAppearanceOf(org.w3c.dom.Element,java.lang.String)"], "Fixed commit": "a0f0b1832a4e49f7f7b5e1af7de1b655e4253c9a", "Url": "https://api.github.com/repos/MenthorTools/menthor-editor", "Date": "2018-03-10T03:07:28Z"},
{"Line": "=>836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.fileWeakReference.get().getName().endsWith(\"png\")) || (this.fileWeakReference.get().getName().endsWith(\".PNG\"))) newBitmap.compress(Bitmap.CompressFormat.PNG, 0, bos); else newBitmap.compress(Bitmap.CompressFormat.JPEG, 80, bos);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7279/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.activities.TootActivity.java", "BodyUseAPI": [], "Fixed commit": "7851ceb824fd75becf1fc98a85eb6ea76f3d3d7d", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2018-04-15T07:44:37Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (errorCode != (okhttp3.internal.http2.ErrorCode.CANCEL)) { noNewStreams = true; route = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2315/buggy-version/okhttp.src.main.java.okhttp3.internal.connection.StreamAllocation.java", "BodyUseAPI": [], "Fixed commit": "8b17ab4e65b21c6480a38c383a16899f9ffabbcc", "Url": "https://api.github.com/repos/bric3/okhttp", "Date": "2018-06-08T12:16:45Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.chanjar.weixin.mp.api.impl.MemberCard.getAdvancedInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (advancedInfo != null) { if ((advancedInfo.getBusinessServiceList()) != null) { for (java.lang.String bs : advancedInfo.getBusinessServiceList()) { me.chanjar.weixin.mp.api.impl.BusinessServiceType businessServiceType = null; try { businessServiceType = me.chanjar.weixin.mp.api.impl.BusinessServiceType.valueOf(bs); } catch (java.lang.IllegalArgumentException ex) { me.chanjar.weixin.mp.api.impl.WxMpCardCreateResult.failure(((\"\u4f1a\u5458\u5361\u9ad8\u7ea7\u4fe1\u606f\u7684\u5546\u6237\u670d\u52a1:\" + bs) + \" \u4e0d\u5408\u6cd5\")); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2750/buggy-version/weixin-java-mp.src.main.java.me.chanjar.weixin.mp.api.impl.WxMpMemberCardServiceImpl.java", "BodyUseAPI": ["me.chanjar.weixin.mp.api.impl.AdvancedInfo.getBusinessServiceList()", "me.chanjar.weixin.mp.api.impl.AdvancedInfo.getBusinessServiceList()"], "Fixed commit": "33e2d5eaf28d666e6762b889551cd953d9d234d0", "Url": "https://api.github.com/repos/yuanqixun/weixin-java-tools", "Date": "2018-08-30T01:41:27Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gamepad1.left_trigger) > 0.4F) newRobot.selfBal(); else newRobot.driveMotors(gamepad1.left_stick_y, gamepad1.right_stick_y);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/324/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.CompTeleFinal.java", "BodyUseAPI": [], "Fixed commit": "a3e021ca78e37cac77dcb95a19dcec81d76d1df8", "Url": "https://api.github.com/repos/sahithi-thumuluri/ftc_app", "Date": "2018-02-03T02:31:31Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rotatorPos) > 0.91) rotatorPos = 0.91; else if ((rotatorPos) < 0) rotatorPos = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/324/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.NewRobotFinal.java", "BodyUseAPI": [], "Fixed commit": "a3e021ca78e37cac77dcb95a19dcec81d76d1df8", "Url": "https://api.github.com/repos/sahithi-thumuluri/ftc_app", "Date": "2018-02-03T02:31:31Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((this.levelIndex) == (player.maxLevel)) && ((this.worldIndex) == (player.maxWorld))) && ((this.levelIndex) != ((rm.worlds.get(worldIndex).numLevels) - 1))) { (player.maxLevel)++; }else if ((((this.levelIndex) == (player.maxLevel)) && ((this.worldIndex) == (player.maxWorld))) && ((this.levelIndex) == ((rm.worlds.get(worldIndex).numLevels) - 1))) { if (((player.maxWorld) + 1) <= ((rm.worlds.size) - 1)) { (player.maxWorld)++; player.maxLevel = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9558/buggy-version/core.src.com.unlucky.map.GameMap.java", "BodyUseAPI": ["rm.worlds.get(int)"], "Fixed commit": "001a3662eb400c143502ab14821b8369162a27cd", "Url": "https://api.github.com/repos/mingli1/Unlucky", "Date": "2018-06-06T22:02:47Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((response.body()) != null) && (response.isSuccessful())) && ((allChallengeAdapter) != null)) { boolean postAdded = false; for (int i = 0; i < (allChallengeAdapter.getItemCount()); i++) { com.ninos.models.PostInfo postInfo = allChallengeAdapter.getItem(i); if (postInfo.get_id().equals(postId)) { postAdded = true; } } if (!postAdded) { com.ninos.models.PostInfo postInfo = response.body().getPostInfo(); allChallengeAdapter.addItem(postInfo, 0); new android.os.Handler().postAtTime(new java.lang.Runnable() { @java.lang.Override public void run() { ns_view.scrollTo(0, 0); } }, 1000); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5036/buggy-version/app.src.main.java.com.ninos.fragments.AllChallengesFragment.java", "BodyUseAPI": ["retrofit2.Response<com.ninos.models.PostResponse>.body()", "response.body().getPostInfo()"], "Fixed commit": "7efbcaaa4ac0039fd9674780f902f6fbf2a176fd", "Url": "https://api.github.com/repos/ninosapp/Ninos", "Date": "2018-03-08T13:52:40Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startRowNum > 0) { reader.skip(((int) (startRowNum))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3728/buggy-version/src.main.java.com.framework.yjk.DbfResultSet.java", "BodyUseAPI": [], "Fixed commit": "d5f62c84169d581c3a04d9083e71ca3b3d185352", "Url": "https://api.github.com/repos/lwjaiyjk/DbfJdbcDriver", "Date": "2018-09-19T08:44:23Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["biocode.fims.models.dataTypes.JacksonUtil.fromString(java.lang.String,com.fasterxml.jackson.databind.JavaType)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((properties.get(\"bioSample\")) != null) { bioSample = biocode.fims.models.dataTypes.JacksonUtil.fromString(properties.remove(\"bioSample\"), biocode.fims.ncbi.models.BioSample.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3960/buggy-version/src.main.java.biocode.fims.fastq.FastqRecordRowMapper.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.remove(java.lang.String)", "biocode.fims.models.dataTypes.JacksonUtil.fromString(java.lang.String,java.lang.Class)"], "Fixed commit": "f10e4bab93d9362524f5b8adbb10c376229b4556", "Url": "https://api.github.com/repos/biocodellc/biocode-fims-sequences", "Date": "2018-05-08T00:28:28Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (bioSample != null) r.setBioSample(bioSample);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3960/buggy-version/src.main.java.biocode.fims.fastq.FastqRecordRowMapper.java", "BodyUseAPI": ["biocode.fims.fastq.FastqRecord.setBioSample(biocode.fims.ncbi.models.BioSample)"], "Fixed commit": "f10e4bab93d9362524f5b8adbb10c376229b4556", "Url": "https://api.github.com/repos/biocodellc/biocode-fims-sequences", "Date": "2018-05-08T00:28:28Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.alauda.jenkins.devops.sync.AlaudaSyncGlobalConfiguration.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (config != null) { config.configChange(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9628/buggy-version/src.main.java.io.alauda.jenkins.devops.sync.AlaudaSyncPlugin.java", "BodyUseAPI": ["io.alauda.jenkins.devops.sync.AlaudaSyncGlobalConfiguration.configChange()"], "Fixed commit": "74c36449b8615cd33a4fdd23f2e573369422824f", "Url": "https://api.github.com/repos/alauda/alauda-devops-sync-plugin", "Date": "2018-09-19T09:30:20Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.cloud.tools.eclipse.appengine.deploy.WarPublisher.flattenResources(org.eclipse.core.resources.IProject,org.eclipse.core.runtime.IPath,subMonitor.newChild(10))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((resources.length) == 0) { org.eclipse.core.runtime.IStatus error = com.google.cloud.tools.eclipse.util.status.StatusUtil.error(com.google.cloud.tools.eclipse.appengine.deploy.WarPublisher.class, ((project.getName()) + \" has no resource to publish\")); return new org.eclipse.core.runtime.IStatus[]{ error }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3855/buggy-version/plugins.com.google.cloud.tools.eclipse.appengine.deploy.src.com.google.cloud.tools.eclipse.appengine.deploy.WarPublisher.java", "BodyUseAPI": [], "Fixed commit": "72d92717947a1ac88dbf343a8bd80356de08ec9d", "Url": "https://api.github.com/repos/GoogleCloudPlatform/google-cloud-eclipse", "Date": "2018-06-15T14:56:51Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/95/buggy-version/src.main.java.red.man10.man10atm.Man10ATM.java", "BodyUseAPI": [], "Fixed commit": "9a60d26b8ee6b529da934840b3d2421a78b59e24", "Url": "https://api.github.com/repos/shojabon/Man10ATM", "Date": "2018-07-02T14:44:15Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menu.containsKey(e.getWhoClicked().getUniqueId())) == false) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/95/buggy-version/src.main.java.red.man10.man10atm.Man10ATM.java", "BodyUseAPI": [], "Fixed commit": "9a60d26b8ee6b529da934840b3d2421a78b59e24", "Url": "https://api.github.com/repos/shojabon/Man10ATM", "Date": "2018-07-02T14:44:15Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((android.os.SystemClock.elapsedRealtime()) - (mLastClickTime)) < 1000) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1073/buggy-version/app.src.main.java.com.competers.app.utilocatecompanion.Dialogs.CreateAuditDialog.java", "BodyUseAPI": [], "Fixed commit": "8963543a578377528ee935534cde1db214174d4e", "Url": "https://api.github.com/repos/ElliottHurykCompeters/U2PhotoAppAaronsVersion", "Date": "2018-08-15T20:26:57Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) < 1) { sendUpdate(new com.fhoner.exifrename.core.model.FileServiceUpdate(Reason.PROGRESS, 0, 0)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6078/buggy-version/core.src.main.java.com.fhoner.exifrename.core.service.FileService.java", "BodyUseAPI": [], "Fixed commit": "d56835f833195052c7c3a97ba8fcae1d798507cd", "Url": "https://api.github.com/repos/fhoner/exifrename", "Date": "2018-09-30T21:27:27Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == false) { Rank comRank = new Rank(st[3], iTimeStampFromMessage, java.lang.Integer.parseInt(rankVal), nodeKey, 1); ClientNode.comRankList.add(comRank); int iHopCount = (java.lang.Integer.parseInt(st[4])) + 1; for (int j = 0; j < (ClientNode.neighbours.size()); j++) { if (((ClientNode.neighbours.get(j).getIp()) != (incomingPacket.getAddress().getHostAddress())) && (iHopCount < 11)) { java.util.ArrayList<java.lang.String> salCommentMsg = new java.util.ArrayList<java.lang.String>(java.util.Arrays.asList(\"RANK\", \"C\", IPAddress.getHostAddress(), java.lang.Integer.toString(ClientNode.g_iTimeStamp), java.lang.Integer.toString(iHopCount), nodeKey, rankVal)); java.lang.String sCommentMsg = ClientNode.createMessage(salCommentMsg); ClientNode.sendPacket(clientSocket, sCommentMsg.getBytes(), sCommentMsg.length(), java.net.InetAddress.getByName(ClientNode.neighbours.get(j).getIp()), ClientNode.neighbours.get(j).getPort()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3374/buggy-version/Node.src.ClientNode.java", "BodyUseAPI": [], "Fixed commit": "de2990658cb161038d1b018a76fb27917257c15f", "Url": "https://api.github.com/repos/rasika777/Node", "Date": "2018-01-05T22:22:33Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Rank.GetCommentId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (myKey.equals(nodeKey)) { result = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3374/buggy-version/Node.src.ClientNode.java", "BodyUseAPI": [], "Fixed commit": "de2990658cb161038d1b018a76fb27917257c15f", "Url": "https://api.github.com/repos/rasika777/Node", "Date": "2018-01-05T22:22:33Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((apiTypeName == null) || (value == null)) return result;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8193/buggy-version/orcid-core.src.main.java.org.orcid.core.utils.v3.identifiers.PIDResolverService.java", "BodyUseAPI": [], "Fixed commit": "c7de4c2f8930f335966826c2da5a2e6b66233d7d", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2018-04-16T13:09:10Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.Run.getExecutor()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (executor != null) { executor.interrupt(getBuildResult(), new org.jenkinsci.plugins.logfilesizechecker.executors.TerminateExecutor.LogFileSizeInterruption(logFileSize)); }else { org.jenkinsci.plugins.logfilesizechecker.executors.TerminateExecutor.LOGGER.severe((\"Could not obtain Executor Object for current Run \" + \"and thus not abort Build writing too large log file\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8330/buggy-version/src.main.java.org.jenkinsci.plugins.logfilesizechecker.executors.TerminateExecutor.java", "BodyUseAPI": ["hudson.model.Executor.interrupt(hudson.model.Result,org.jenkinsci.plugins.logfilesizechecker.executors.TerminateExecutor.LogFileSizeInterruption)"], "Fixed commit": "4f92a3c6264a36bffea9b795dad3943aa6acc75f", "Url": "https://api.github.com/repos/infonova/logfile-size-checker-plugin", "Date": "2018-01-17T16:55:00Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((productDAO.getCount(productCount.getProductId())) < (productCount.getCount())) throw new com.epam.internetshop.services.exception.ProductException(\"Not enough products available.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6434/buggy-version/src.main.java.com.epam.internetshop.services.impl.PaymentServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "4b2f256cda88ccaf9a997e504cbf5790e6aad2dc", "Url": "https://api.github.com/repos/venedikttsulenev/INTERNETSHOP", "Date": "2018-04-17T15:27:10Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((flexoConcept) == null) && ((getResource()) != null)) { flexoConcept = getResource().getVirtualModel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1837/buggy-version/flexo-foundation.src.main.java.org.openflexo.foundation.fml.rt.VirtualModelInstance.java", "BodyUseAPI": [], "Fixed commit": "25fe8eeea20243017971626584642e2d61794e0b", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2018-01-18T07:11:04Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rascalmpl.interpreter.control_exceptions.Throw.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (loc != null) { org.rascalmpl.interpreter.utils.ReadEvalPrintDialogMessages.printSourceLocation(out, loc, prettyPrinter); out.print(\": \"); }else { out.print(\"unknown location: \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4789/buggy-version/src.org.rascalmpl.interpreter.utils.ReadEvalPrintDialogMessages.java", "BodyUseAPI": ["org.rascalmpl.interpreter.utils.ReadEvalPrintDialogMessages.printSourceLocation(java.io.PrintWriter,io.usethesource.vallang.ISourceLocation,io.usethesource.vallang.io.StandardTextWriter)"], "Fixed commit": "6e772dcbabfe95e3c14bdd9403b38a1aacb8dc6c", "Url": "https://api.github.com/repos/usethesource/rascal", "Date": "2018-09-25T11:49:08Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getStringFromMap(currentMap).split(\"%\")[currentPosition].split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(currentPoint[i].replaceAll(\" \", \"\").equals(\"\"))) { output((((java.lang.Integer.toString((i / 3))) + \". \") + (currentPoint[i]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3935/buggy-version/SkyrimUltraVerySpecialEdition.src.functions.Walking.java", "BodyUseAPI": ["functions.Walking.output(java.lang.String)", "java.lang.Integer.toString(int)"], "Fixed commit": "65a64e594e8063f067726581ac960bd9b1e7f2e6", "Url": "https://api.github.com/repos/Lenny5156/SkyrimUltraVerySpecialEdition", "Date": "2018-07-04T09:00:39Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (database != null) { return database.getDefaultDriverClassName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3652/buggy-version/repo.repo-sql-impl.src.main.java.com.evolveum.midpoint.repo.sql.SqlRepositoryConfiguration.java", "BodyUseAPI": ["com.evolveum.midpoint.repo.sql.SqlRepositoryConfiguration.Database.getDefaultDriverClassName()"], "Fixed commit": "96fcdafc90d75526715b645b6bac0c6c49734bcd", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2018-03-06T17:32:42Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (data.isConfigurationSection(\"Potions\")) { for (java.lang.String pot : data.getConfigurationSection(\"Potions\").getKeys(false)) { org.bukkit.potion.PotionEffectType type = org.bukkit.potion.PotionEffectType.getByName(pot); if (type != null) { addPotionEffect(type, data.getInt(((\"Potions.\" + pot) + \".Duration\")), data.getInt(((\"Potions.\" + pot) + \".Amplifier\"), 1)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1677/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Item.ItemBuilder.java", "BodyUseAPI": [], "Fixed commit": "eafb94ae6213faf145c65c0d9962c58db3a7e4b2", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-09-23T17:59:23Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zys.brokenview.BrokenAnimator.getAnimatedFraction()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((stageToPercentageMap.get(getStage())) == null) || ((stageToPercentageMap.get(getStage())) < whatAndroidThinksThePercentageIs)) { stageToPercentageMap.put(getStage(), whatAndroidThinksThePercentageIs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1246/buggy-version/brokenview.src.main.java.com.zys.brokenview.BrokenAnimator.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.lang.Float>.put(int,float)"], "Fixed commit": "672c0c14f612c88b1f0b6349275b644fcb602031", "Url": "https://api.github.com/repos/Simeon1/BrokenView", "Date": "2018-08-30T19:44:01Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((execution) == null) { throw new java.lang.IllegalStateException(\"Workflow has not started.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3700/buggy-version/src.main.java.com.uber.cadence.internal.sync.ChildWorkflowStubImpl.java", "BodyUseAPI": [], "Fixed commit": "a8f4ec1c068ce00e43a6d188cf7e1011a58e6a95", "Url": "https://api.github.com/repos/meiliang86/cadence-client", "Date": "2018-04-25T22:59:44Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (database != null) { if ((((com.orientechnologies.orient.core.storage.impl.local.OAbstractPaginatedStorage) (database.getStorage().getUnderlying())).getLSN()) != null) { return new com.orientechnologies.orient.server.distributed.impl.task.OUpdateDatabaseStatusTask.OUpdateResult(((com.orientechnologies.orient.core.storage.impl.local.OAbstractPaginatedStorage) (database.getStorage().getUnderlying())).getLSN()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6559/buggy-version/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OUpdateDatabaseStatusTask.java", "BodyUseAPI": ["database.getStorage().getUnderlying()", "database.getStorage().getUnderlying()", "((com.orientechnologies.orient.core.storage.impl.local.OAbstractPaginatedStorage) (database.getStorage().getUnderlying())).getLSN()", "com.orientechnologies.orient.core.db.ODatabaseDocumentInternal.getStorage()", "((com.orientechnologies.orient.core.storage.impl.local.OAbstractPaginatedStorage) (database.getStorage().getUnderlying())).getLSN()", "com.orientechnologies.orient.core.db.ODatabaseDocumentInternal.getStorage()"], "Fixed commit": "eb3c2ea2a9c829af7dfecdb2e35a90625ecf81fd", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2018-08-17T16:03:38Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(result.getParameter().isExplicit())) { result = fixImplicitArgs(result, result.getImplicitParameters(), fun, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1612/buggy-version/src.main.java.org.arend.typechecking.implicitargs.StdImplicitArgsInference.java", "BodyUseAPI": ["CheckTypeVisitor.TResult.getImplicitParameters()", "org.arend.typechecking.implicitargs.StdImplicitArgsInference.fixImplicitArgs(CheckTypeVisitor.TResult,result.getImplicitParameters(),Concrete.Expression,boolean)"], "Fixed commit": "2055c4b5849bd9bfca9db30a8c909197b3e43ba9", "Url": "https://api.github.com/repos/JetBrains/Arend", "Date": "2018-10-25T15:24:09Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((conf.get(\"minRatioMetric\", 3.0)) instanceof java.lang.Double) { minRiskRatio = ((double) (conf.get(\"minRatioMetric\", 3.0))); }else { minRiskRatio = ((double) ((int) (conf.get(\"minRatioMetric\", 3)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3863/buggy-version/core.src.main.java.edu.stanford.futuredata.macrobase.pipeline.BasicBatchPipeline.java", "BodyUseAPI": [], "Fixed commit": "c171bbc2d7ca9ebf523951582dde47dc100712a4", "Url": "https://api.github.com/repos/stanford-futuredata/macrobase", "Date": "2018-04-20T23:03:38Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((conf.get(\"minSupport\", 0.01)) instanceof java.lang.Double) { minSupport = ((double) (conf.get(\"minSupport\", 0.01))); }else { minSupport = ((double) ((int) (conf.get(\"minSupport\", 0)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3863/buggy-version/core.src.main.java.edu.stanford.futuredata.macrobase.pipeline.BasicBatchPipeline.java", "BodyUseAPI": [], "Fixed commit": "c171bbc2d7ca9ebf523951582dde47dc100712a4", "Url": "https://api.github.com/repos/stanford-futuredata/macrobase", "Date": "2018-04-20T23:03:38Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Material.getMaterial(((livingEntity.getType().name().toUpperCase()) + \"_SPAWN_EGG\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (material == null) { switch (livingEntity.getType()) { case PIG_ZOMBIE : material = org.bukkit.Material.ZOMBIE_PIGMAN_SPAWN_EGG; break; case MUSHROOM_COW : material = org.bukkit.Material.MOOSHROOM_SPAWN_EGG; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5717/buggy-version/src.net.johnbrooks.mh.items.CaptureEgg.java", "BodyUseAPI": [], "Fixed commit": "5a1d27f8fe1bb84bc689237374756ea30128ffcb", "Url": "https://api.github.com/repos/WiseHollow/spigot-mobcapture", "Date": "2018-07-28T13:55:15Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((datePickerDialog) == null) { launchCalendarDialog(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6919/buggy-version/app.src.main.java.co.smartreceipts.android.date.DateEditText.java", "BodyUseAPI": [], "Fixed commit": "5fec88bf028575cc884316cddd99dcdd8a60f499", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2018-08-09T19:41:17Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.example.android.bakingapp.RecipeActivity.isLargeScreen)) { currentFragment = STEP_FRAGMENT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3526/buggy-version/app.src.main.java.com.example.android.bakingapp.RecipeActivity.java", "BodyUseAPI": [], "Fixed commit": "01c456076c7d22ec4f503727a9a9ddc332be1de2", "Url": "https://api.github.com/repos/yadakshay/Baking-App", "Date": "2018-01-07T07:24:47Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isValidVersion)) sendCommand(\"name\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3244/buggy-version/src.main.java.wagner.stephanie.lizzie.analysis.Leelaz.java", "BodyUseAPI": [], "Fixed commit": "c22221f5021de8cfdfe53b068f07c59b69f4bd12", "Url": "https://api.github.com/repos/bittsitt/lizzie", "Date": "2018-04-23T03:04:37Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (object instanceof java.lang.Object[]) { java.lang.Object[] innerArray = ((java.lang.Object[]) (object)); for (java.lang.Object innerObject : innerArray) { messageLine.append((innerObject != null ? innerObject.toString() : \"null\")); } }else { messageLine.append((object != null ? object.toString() : \"null\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5191/buggy-version/src.net.ssehub.kernel_haven.util.Logger.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "0c022647ba2a5b1e589c54433c3aed848f966763", "Url": "https://api.github.com/repos/KernelHaven/KernelHaven", "Date": "2018-05-30T12:26:37Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getGM().byBlock(org.bukkit.block.Block)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((game.getStatus()) == (com.github.pocketkid2.survivalgames.Game.Status.WAITING)) || ((game.getStatus()) == (com.github.pocketkid2.survivalgames.Game.Status.STARTING))) { if (game.isInGame(event.getPlayer())) { event.setCancelled(true); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1967/buggy-version/src.main.java.com.github.pocketkid2.survivalgames.listeners.ChestListener.java", "BodyUseAPI": ["com.github.pocketkid2.survivalgames.Game.isInGame(event.getPlayer())"], "Fixed commit": "0da4c36b06a37f6c700dc104482e332f0f7fb2ce", "Url": "https://api.github.com/repos/PoqetteCraft/survivalgames", "Date": "2018-07-24T05:10:24Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((session) != null) { session.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6883/buggy-version/src.main.java.org.mehaexample.asdDemo.dao.alignprivate.StudentLoginsDao.java", "BodyUseAPI": [], "Fixed commit": "a1ebec295078df5f4ccc70c112de9baa4d7f12fd", "Url": "https://api.github.com/repos/gortonator/AlignWebsiteStudent", "Date": "2018-04-17T17:14:30Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((joueur.charAt(0)) == 'X') continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/211/buggy-version/src.fr.xtof.basketball.BasketTracker.java", "BodyUseAPI": [], "Fixed commit": "895d64910cf706588a27985ecc8282cf0b92d563", "Url": "https://api.github.com/repos/cerisara/basketball", "Date": "2018-05-10T16:54:46Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2571/buggy-version/src.main.java.com.hebaiyi.www.katakuri.activity.ImageActivity.java", "BodyUseAPI": [], "Fixed commit": "24673dcea2a4476fa359ec016360e001bbd955d7", "Url": "https://api.github.com/repos/C1over/Katakuri", "Date": "2018-08-02T00:55:40Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.mmp.com.salestool.database.Facade.getInstance().getManageCompetitorProductTbl().get(item.getCompetitorProdId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (competitorProductTbl != null) { android.mmp.com.salestool.model.entity.ProductTbl productTbl = android.mmp.com.salestool.database.Facade.getInstance().getManageProductTbl().get(competitorProductTbl.getComprodProductId()); android.mmp.com.salestool.model.entity.CompetitorTbl competitorTbl = android.mmp.com.salestool.database.Facade.getInstance().getManageCompetitorTbl().get(competitorProductTbl.getComprodCompId()); if (productTbl != null) { productName = ((productTbl.getProductName()) != null) ? productTbl.getProductName() : \"\"; } if (competitorTbl != null) { competitorName = ((competitorTbl.getCompName()) != null) ? competitorTbl.getCompName() : \"\"; } compProdPrice = java.lang.String.valueOf(competitorProductTbl.getComprodPrice()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9301/buggy-version/app.src.main.java.android.mmp.com.salestool.controller.adapter.SalesVisitCompetitorRecyclerViewAdapter.java", "BodyUseAPI": ["android.mmp.com.salestool.model.entity.CompetitorProductTbl.getComprodProductId()", "android.mmp.com.salestool.database.Facade.getInstance().getManageCompetitorTbl().get(competitorProductTbl.getComprodCompId())", "android.mmp.com.salestool.model.entity.CompetitorProductTbl.getComprodCompId()", "android.mmp.com.salestool.model.entity.CompetitorProductTbl.getComprodPrice()", "android.mmp.com.salestool.database.Facade.getInstance().getManageProductTbl().get(competitorProductTbl.getComprodProductId())", "java.lang.String.valueOf(competitorProductTbl.getComprodPrice())"], "Fixed commit": "1fafb6d5e3a3ee72d93cdff0c3381fba5d32564f", "Url": "https://api.github.com/repos/rezkyauliapratama/salesTool", "Date": "2018-10-04T06:39:44Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tf.getText().isEmpty())) { l.setText(uc.convert(units.get(c1.getSelectedIndex()), java.lang.Double.valueOf(tf.getText()), units.get(c2.getSelectedIndex()))); }else { javax.swing.JOptionPane.showMessageDialog(f, \"Please enter a value to be converted.\", \"Enter Value\", javax.swing.JOptionPane.WARNING_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8131/buggy-version/Conversion.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)", "javax.swing.JTextField.getText()", "javax.swing.JLabel.setText(uc.convert(units.get(c1.getSelectedIndex()), java.lang.Double.valueOf(tf.getText()), units.get(c2.getSelectedIndex())))", "UnitConverter.convert(java.lang.String,java.lang.Double,java.lang.String)"], "Fixed commit": "42baddf0488d9d9929347b0430708ebb487ae463", "Url": "https://api.github.com/repos/adamobrien4/conversion_program", "Date": "2018-05-23T09:31:12Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["free.elmasry.timer.MainActivity.getIndexFromListItemLayoutId(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (listItemLayoutIndex != (mCurrentPlayingListItemIndex)) { mCurrentPlayingListItemIndex = listItemLayoutIndex; int suraNo = mSuraNoList.get(listItemLayoutIndex); if (!(isPathExist(suraNo, 1))) return; makeNewStart(suraNo, 1); }else if ((mResMediaPlayer) != null) { mResMediaPlayer.start(); }else { mMediaPlayer.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8947/buggy-version/app.src.main.java.free.elmasry.timer.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.get(int)"], "Fixed commit": "7fa7b86adde3dee550f6f04643744a5ffb9aa7a0", "Url": "https://api.github.com/repos/mostafayahia/Timer", "Date": "2018-05-15T05:08:36Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mInvocationMethod) != invocationMethod) { stopInvocationMethod(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7532/buggy-version/src.main.java.com.buglife.sdk.Client.java", "BodyUseAPI": [], "Fixed commit": "4bcfa68e0c934f9669b0e10c2ea5a44dfdf2cf10", "Url": "https://api.github.com/repos/Buglife/buglife-android", "Date": "2018-01-03T04:15:13Z"},
{"Line": "=>803", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (variables != null) { config.setProperties(variables); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6820/buggy-version/Mario.src.main.java.com.mario.extension.ExtensionConfigReader.java", "BodyUseAPI": ["com.nhb.common.db.sql.SQLDataSourceConfig.setProperties(com.nhb.common.data.PuObject)"], "Fixed commit": "b402152a1556cdfe3477a23789a858d42ca98e04", "Url": "https://api.github.com/repos/bachden/mario3", "Date": "2018-09-17T05:27:03Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.ConnectivityManager.getActiveNetworkInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((activeNetwork != null) && (activeNetwork.isConnectedOrConnecting())) { if ((com.rugged.tuberculosisapp.settings.UserData.isFirstLaunch()) || ((com.rugged.tuberculosisapp.settings.UserData.getLocaleString()) == null)) { setContentView(R.layout.activity_language_select); com.rugged.tuberculosisapp.settings.UserData.setIsFirstLaunch(false); }else { checkAccount(); } }else { android.support.v7.app.AlertDialog.Builder builder = new android.support.v7.app.AlertDialog.Builder(this); builder.setMessage(getResources().getString(R.string.no_internet)); builder.setPositiveButton(\"Ok\", new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int id) { dialog.cancel(); if ((Build.VERSION.SDK_INT) >= 21) { com.rugged.tuberculosisapp.settings.LanguageSelect.this.finishAndRemoveTask(); }else { android.support.v4.app.ActivityCompat.finishAffinity(com.rugged.tuberculosisapp.settings.LanguageSelect.this); java.lang.System.exit(0); } } }); builder.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6062/buggy-version/TuberculosisApp.app.src.main.java.com.rugged.tuberculosisapp.settings.LanguageSelect.java", "BodyUseAPI": [], "Fixed commit": "1a01471a3616ed3eb9ee3de305208e5fe52f758c", "Url": "https://api.github.com/repos/RUGSoftEng/2018-Tuberculosis-Android", "Date": "2018-05-22T10:09:57Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connectCompletionHandler) != null) { connectCompletionHandler.failed(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/175/buggy-version/containers.jdk-client.src.main.java.org.glassfish.tyrus.container.jdk.client.ClientFilter.java", "BodyUseAPI": [], "Fixed commit": "30307697da41a3d7f5bc0cc02dd2808426ea00e5", "Url": "https://api.github.com/repos/greenmancm/tyrus", "Date": "2018-10-30T14:43:23Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.zimbra.qa.selenium.framework.util.ConfigProperties.getStringProperty(\"browser\").contains(\"msedge\")) { locator = \"css=textarea#ZmGrantRightsDialog_name\"; }else { locator = \"css=input#ZmGrantRightsDialog_name\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2371/buggy-version/src.java.com.zimbra.qa.selenium.projects.ajax.pages.DialogDelegate.java", "BodyUseAPI": [], "Fixed commit": "4f4f9c0a814984c95cf29bee98c570903bfcb218", "Url": "https://api.github.com/repos/Zimbra/zm-selenium", "Date": "2018-03-13T11:23:52Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.example.gdunellari.newsaggregator.StoryLi>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((storyLi.getDescription()) != null) { storedViewHolder.text2.setText(storyLi.getDescription()); }else { storedViewHolder.text2.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9238/buggy-version/Build.NewsAggregator.app.src.main.java.com.example.gdunellari.newsaggregator.NewsViewAdapter.java", "BodyUseAPI": ["com.example.gdunellari.newsaggregator.StoryLi.getDescription()", "android.widget.TextView.setText(storyLi.getDescription())"], "Fixed commit": "7f76fddf55530689a87739d114a6d5d3ec75a225", "Url": "https://api.github.com/repos/NewsAggregatorOffline/offlineNews", "Date": "2018-02-18T18:02:46Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mainLayout) != null) gravityfalls.library.utils.SnackbarHelper.getSnackBar(mainLayout, getString(R.string.can_not_load_data));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8251/buggy-version/app.src.main.java.gravityfalls.library.main.ProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "e6956407c5cb70c3cc7b3b9371c378d8dd52605b", "Url": "https://api.github.com/repos/yehlfektn/Library", "Date": "2018-04-14T14:35:48Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 3) { solve = true; if (args[1].equals(\"-s\")) { filename = args[2]; }else { filename = args[1]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5491/buggy-version/KenKenCreator.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "89817b680528a8ecdec430e5a3a7421d4c2115d4", "Url": "https://api.github.com/repos/Michael-Bianconi/KenKen", "Date": "2018-10-05T19:47:01Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((writer.getId()) != (actor.getId())) { org.springframework.util.Assert.isTrue((actor instanceof domain.Customer)); for (final domain.CreditCard creditCard : newspaper.getCreditCards()) { validCustomer = creditCard.getCustomer().equals(actor); if (validCustomer) break; } org.springframework.util.Assert.isTrue(validCustomer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5871/buggy-version/Acme-Newspaper.src.main.java.controllers.ArticleController.java", "BodyUseAPI": ["creditCard.getCustomer().equals(domain.Actor)", "org.springframework.util.Assert.isTrue((actor instanceof domain.Customer))"], "Fixed commit": "8b806b68c60097c61deefdf8b773d1788cb17c22", "Url": "https://api.github.com/repos/judamalua/D11-AcceptanceTesting", "Date": "2018-04-12T09:36:55Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.TreeMap<java.lang.Integer, java.lang.Integer>.floorEntry(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (last_gap == null) { start_end.add(data.get(start).date); start_end.add(data.get(((l) - 1)).date); }else { start_end.add(data.get(last_gap.getKey()).date); start_end.add(data.get(last_gap.getValue()).date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/230/buggy-version/core.StxTS.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(data.get(last_gap.getKey()).date)", "java.util.ArrayList<java.lang.String>.add(data.get(last_gap.getValue()).date)", "java.util.List<T>.get(java.lang.Integer)", "java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()", "java.util.List<T>.get(java.lang.Integer)", "java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"], "Fixed commit": "c40fb3b889fb52becf8aa23dd0e0da218f8d9465", "Url": "https://api.github.com/repos/golden-dawn/java", "Date": "2018-09-17T04:28:17Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.TreeMap<java.lang.Integer, java.lang.Integer>.lastEntry()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (last_gap == null) { start_end.add(data.get(start).date); start_end.add(data.get(((l) - 1)).date); }else { start_end.add(data.get(last_gap.getKey()).date); start_end.add(data.get(last_gap.getValue()).date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/230/buggy-version/core.StxTS.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(data.get(last_gap.getKey()).date)", "java.util.List<T>.get(java.lang.Integer)", "java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()", "java.util.List<T>.get(java.lang.Integer)", "java.util.ArrayList<java.lang.String>.add(data.get(last_gap.getValue()).date)", "java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"], "Fixed commit": "c40fb3b889fb52becf8aa23dd0e0da218f8d9465", "Url": "https://api.github.com/repos/golden-dawn/java", "Date": "2018-09-17T04:28:17Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPlaying) { isPlaying = false; currentPlay.setImageResource(R.drawable.ic_play_arrow_black_24dp); }else { isPlaying = true; currentPlay.setImageResource(R.drawable.ic_pause_black_24dp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2595/buggy-version/app.src.main.java.co.yosola.colombianjams.PlaySingleSongActivity.java", "BodyUseAPI": [], "Fixed commit": "a35d7d1e05996a437ba2191eb7e4eeaa7f433448", "Url": "https://api.github.com/repos/Yosolita1978/ColombianJams", "Date": "2018-06-14T06:20:04Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.yosola.colombianjams.AllSongsList.getSongIndex(co.yosola.colombianjams.Song)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index == 0) { previousIntent = new android.content.Intent(this, co.yosola.colombianjams.MainActivity.class); }else { index = index - 1; previousIntent = new android.content.Intent(this, co.yosola.colombianjams.PlaySingleSongActivity.class); previousIntent.putExtra(\"indexSongSelected\", index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2595/buggy-version/app.src.main.java.co.yosola.colombianjams.PlaySingleSongActivity.java", "BodyUseAPI": [], "Fixed commit": "a35d7d1e05996a437ba2191eb7e4eeaa7f433448", "Url": "https://api.github.com/repos/Yosolita1978/ColombianJams", "Date": "2018-06-14T06:20:04Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) != null) { is = parent.getResourceAsStream(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3991/buggy-version/src.main.java.org.jboss.ws.common.utils.DelegateClassLoader.java", "BodyUseAPI": [], "Fixed commit": "84638592e9acb81cfdc15a5746e40cdc794dcb62", "Url": "https://api.github.com/repos/jbossws/jbossws-common", "Date": "2018-02-15T18:08:53Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((info.nightscout.androidaps.plugins.ConfigBuilder.ConfigBuilderPlugin.getCommandQueue().size()) > 0) { activityView.setTextColor(Color.WHITE); activityView.setTextSize(14); activityView.setText(\"\"); }else if (plugin.isInitialized()) { activityView.setTextColor(Color.WHITE); activityView.setTextSize(20); activityView.setText(\"{fa-bed}\"); }else { activityView.setTextColor(Color.RED); activityView.setTextSize(14); activityView.setText(info.nightscout.androidaps.MainApp.gs(R.string.pump_unreachable)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/399/buggy-version/app.src.main.java.info.nightscout.androidaps.plugins.PumpCombo.ComboFragment.java", "BodyUseAPI": [], "Fixed commit": "d15ada5cd9b2377a9832d387388c6fa2db3e13d5", "Url": "https://api.github.com/repos/MilosKozak/AndroidAPS", "Date": "2018-05-04T19:13:49Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((android.app.Activity) (mContext)).isFinishing())) mFragmentChangeManager.setFragments(currentTab);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9124/buggy-version/tablayout.src.main.java.vip.frendy.tablayout.CommonTabLayout.java", "BodyUseAPI": [], "Fixed commit": "270293bcc598baf5bb480fdaebe79c5b8a18f543", "Url": "https://api.github.com/repos/yurja/TabLayout", "Date": "2018-09-05T08:35:02Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((android.app.Activity) (mContext)).isFinishing())) mFragmentChangeManager.setFragments(currentTab);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9124/buggy-version/tablayout.src.main.java.vip.frendy.tablayout.SegmentTabLayout.java", "BodyUseAPI": [], "Fixed commit": "270293bcc598baf5bb480fdaebe79c5b8a18f543", "Url": "https://api.github.com/repos/yurja/TabLayout", "Date": "2018-09-05T08:35:02Z"},
{"Line": "=>946", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.Uri.getPathSegments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (uriPathSegments != null) { if ((uriPathSegments.size()) > 1) { search = uriPathSegments.get(1).replace(\"'\", \"''\").trim(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4105/buggy-version/TV-Browser.src.org.tvbrowser.content.TvBrowserContentProvider.java", "BodyUseAPI": ["java.lang.String.trim()", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.size()", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "0a5e6429853277d686c88e33a878e8fa53361b65", "Url": "https://api.github.com/repos/ds10git/tvbrowserandroid", "Date": "2018-06-29T15:23:26Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pastSequence.getLength()) == 0) { mouvements = jeuData.getAllLegalMoves(couleur); }else { mouvements = jeuData.getAllMoves(couleur); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2648/buggy-version/src.main.java.modele.joueur.JoueurOrdi.java", "BodyUseAPI": [], "Fixed commit": "5898b498368333f9752cc01469c856ad0d9c02d2", "Url": "https://api.github.com/repos/SUPERETDUPER/chess", "Date": "2018-05-30T15:26:15Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(currency.equalsIgnoreCase(output))) { return ((super.getClass()) + \" \") + (output); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7077/buggy-version/src.coinpurse.Coin.java", "BodyUseAPI": [], "Fixed commit": "6438387fd5b36fb00321de651d852a2b9634ae6d", "Url": "https://api.github.com/repos/OOP2018/coinpurse-KongSKE", "Date": "2018-02-23T05:04:59Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (param instanceof java.lang.String) { entity = new com.tencent.qcloud.roomservice.logic.HttpEntity<java.lang.String>(((java.lang.String) (param)), headers); }else { entity = new com.tencent.qcloud.roomservice.logic.HttpEntity<java.lang.String>(org.json.JSONObject.valueToString(param), headers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2175/buggy-version/src.main.java.com.tencent.qcloud.roomservice.logic.LiveUtil.java", "BodyUseAPI": ["org.json.JSONObject.valueToString(java.lang.Object)"], "Fixed commit": "e8e46420c5e69617495ab3e44a2ccd33f37b49dc", "Url": "https://api.github.com/repos/TencentVideoCloudMLVBDev/roomservice_server_java", "Date": "2018-05-08T09:18:50Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) instanceof Mstar.IR.Operand.StackSlot) return this; else return new Mstar.IR.Operand.Memory(base, index, scale, constant);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9040/buggy-version/src.Mstar.IR.Operand.Memory.java", "BodyUseAPI": [], "Fixed commit": "0f48029f8639a33e3d38a21a05314ad4bf520c0d", "Url": "https://api.github.com/repos/idy002/mstar-compiler", "Date": "2018-05-30T16:42:59Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filterCountDownTimer) != null) { filterCountDownTimer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6639/buggy-version/app.src.main.java.com.blackphoenix.phoenixlocationmanager.utils.PhoenixAccuracyFilter.java", "BodyUseAPI": [], "Fixed commit": "b5dbf47af2b3d49c516689e4b2aed99dd038a1f9", "Url": "https://api.github.com/repos/phoenix-black/PhoenixLocationManager", "Date": "2018-09-05T10:07:21Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (error) { headers.set(RemotingConstants.HEAD_RESPONSE_ERROR, \"true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3678/buggy-version/extension-impl.remoting-http.src.main.java.com.alipay.sofa.rpc.server.http.Http2ServerTask.java", "BodyUseAPI": [], "Fixed commit": "9a44fa6a5cae907c710dcc59b2c2ce1a6b85560b", "Url": "https://api.github.com/repos/leizhiyuan/sofa-rpc", "Date": "2018-05-02T10:59:21Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<? extends istanbul.codify.muudy.ui.word.Selectable>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (selected instanceof istanbul.codify.muudy.ui.word.Activity) { starter.putExtra(istanbul.codify.muudy.ui.word.Activity.class.getSimpleName(), ((istanbul.codify.muudy.ui.word.Activity) (selected))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2087/buggy-version/app.src.main.java.istanbul.codify.muudy.ui.word.WordActivity.java", "BodyUseAPI": [], "Fixed commit": "66e2689dd2036cb7ffec00437127992c9fb58ead", "Url": "https://api.github.com/repos/emreaktrk/Howdy", "Date": "2018-05-14T17:17:36Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["item.select(\"div[class=\\\"yt-lockup-meta\\\"]\").first()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((meta.select(\"li\").size()) < 2) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9113/buggy-version/extractor.src.main.java.org.schabi.newpipe.extractor.services.youtube.YoutubeStreamInfoItemExtractor.java", "BodyUseAPI": [], "Fixed commit": "41751543d072982a51b1354e7be9fbb3d662e42b", "Url": "https://api.github.com/repos/TeamNewPipe/NewPipeExtractor", "Date": "2018-05-04T14:11:25Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (key.startsWith(org.sonatype.maven.polyglot.yaml.ModelConstructor.ConstructXpp3Dom.ATTRIBUTE_PREFIX)) { toAttribute(parent, key.replace(org.sonatype.maven.polyglot.yaml.ModelConstructor.ConstructXpp3Dom.ATTRIBUTE_PREFIX, \"\"), entryValue); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8164/buggy-version/polyglot-yaml.src.main.java.org.sonatype.maven.polyglot.yaml.ModelConstructor.java", "BodyUseAPI": ["org.sonatype.maven.polyglot.yaml.ModelConstructor.ConstructXpp3Dom.toAttribute(org.codehaus.plexus.util.xml.Xpp3Dom,java.lang.String,java.lang.Object)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "89ae39391cbd5288161feab0148ae40451bf23d8", "Url": "https://api.github.com/repos/takari/polyglot-maven", "Date": "2018-04-12T18:42:31Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((img.getWidth()) > width) && ((img.getHeight()) > height)) { java.awt.image.BufferedImage result = org.imgscalr.Scalr.crop(img, (((img.getWidth()) - width) / 2), (((img.getHeight()) - height) / 2), width, height); java.lang.String name = f.getName(); java.io.File outputfile = new java.io.File(((targetpath + \"\\\\\") + name)); javax.imageio.ImageIO.write(result, org.apache.commons.io.FilenameUtils.getExtension(f.getName()), outputfile); img.flush(); img = null; result.flush(); result = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6565/buggy-version/com.aesthetic.src.main.java.com.aesthetic.main.CreateImage.java", "BodyUseAPI": ["java.awt.image.BufferedImage.getHeight()", "java.awt.image.BufferedImage.flush()", "org.imgscalr.Scalr.crop(java.awt.image.BufferedImage,int,int,int,int)", "java.awt.image.BufferedImage.getWidth()"], "Fixed commit": "c15dea7d2f8ed05de9c8e734e30edc3e0db6c716", "Url": "https://api.github.com/repos/tschne16/aesthetic", "Date": "2018-04-16T13:03:05Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j == ((parts.size()) - 1)) { posOfChars.remove(((posOfChars.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4587/buggy-version/src.parser.Splitter.java", "BodyUseAPI": [], "Fixed commit": "1ace7afaec7298cdedd1ef1a06c5c64477bd60d9", "Url": "https://api.github.com/repos/MaximTar/apacheLogParser", "Date": "2018-02-20T22:02:11Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((line.length()) > 0) { logData.add(parser.Splitter.split(line, delimiters, userParams)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4587/buggy-version/src.parser.Reader.java", "BodyUseAPI": ["parser.Splitter.split(java.lang.String,java.util.List<java.lang.Character>,java.util.Map<java.lang.Integer, java.lang.String>)", "java.util.List<java.util.List<java.lang.String>>.add(parser.Splitter.split(line, delimiters, userParams))"], "Fixed commit": "1ace7afaec7298cdedd1ef1a06c5c64477bd60d9", "Url": "https://api.github.com/repos/MaximTar/apacheLogParser", "Date": "2018-02-20T22:02:11Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.code4everything.springbee.dao.IncomeDAO.getById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.zhazhapan.util.Checker.isNotNull(income)) { updateAssetBalance(userId, (((income.getMoney()) * (income.getType())) * (-1))); incomeDAO.deleteById(incomeId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1563/buggy-version/spring-bee.src.main.java.org.code4everything.springbee.service.impl.IncomeServiceImpl.java", "BodyUseAPI": ["org.code4everything.springbee.domain.Income.getType()", "org.code4everything.springbee.service.impl.IncomeServiceImpl.updateAssetBalance(java.lang.String,(((income.getMoney()) * (income.getType())) * (-1)))", "org.code4everything.springbee.domain.Income.getMoney()"], "Fixed commit": "5217a96e7647b73970c034a06217fc7b9154a7b8", "Url": "https://api.github.com/repos/code4everything/wanna-spring", "Date": "2018-10-25T15:30:27Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Arrays.asList(Logger.TO_IGNORE).contains(name)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1392/buggy-version/Classes.Logger.java", "BodyUseAPI": [], "Fixed commit": "4d717bb8269eaf264a35217c380742c0ef965049", "Url": "https://api.github.com/repos/Aaal-E/Algebra-for-security", "Date": "2018-09-22T18:52:52Z"},
{"Line": "=>661", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ow2.proactive.scheduler.core.db.SchedulerDBManager.loadTaskResult(org.ow2.proactive.scheduler.common.job.JobId,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result == null) { org.ow2.proactive.scheduler.core.SchedulerFrontend.jlogger.info(jobId, (taskName + \" is not finished\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4988/buggy-version/scheduler.scheduler-server.src.main.java.org.ow2.proactive.scheduler.core.SchedulerFrontend.java", "BodyUseAPI": [], "Fixed commit": "8730afda09a88dfc5967897e50813a90857e630e", "Url": "https://api.github.com/repos/ow2-proactive/scheduling", "Date": "2018-06-04T09:51:17Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(br.inpe.crn.sinda.applications.DataMiningApplication.m_filesDirectory.exists())) { br.inpe.crn.sinda.applications.DataMiningApplication.m_filesDirectory.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4092/buggy-version/src.main.java.br.inpe.crn.sinda.applications.DataMiningApplication.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "ac1025740ff1c0f45221e6e2a764a60658972372", "Url": "https://api.github.com/repos/sc4v3ng3r/SindaAPI", "Date": "2018-10-19T13:54:46Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lsjwzh.widget.InstaContainer.getScrollY()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (scrollY != maxScrollY) { mScrollAnimation = android.animation.ObjectAnimator.ofInt(this, \"scrollY\", maxScrollY).setDuration(200); mScrollAnimation.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5050/buggy-version/widget.instacontainer.src.main.java.com.lsjwzh.widget.InstaContainer.java", "BodyUseAPI": ["android.animation.ObjectAnimator.ofInt(this, \"scrollY\", maxScrollY).setDuration(int)", "android.animation.ObjectAnimator.ofInt(com.lsjwzh.widget.InstaContainer,java.lang.String,int)"], "Fixed commit": "079fd5d98e8a5ae2cfa38a1168345cd066f1a1b0", "Url": "https://api.github.com/repos/lsjwzh/MultiRVScrollView", "Date": "2018-06-05T05:55:00Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (lStack == null) { warning(((((\"Couldn't find key '\" + (getMustContainStringVariable().get())) + \"' in containter \") + lContainer) + \". Skipping thumbnail creation.\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7090/buggy-version/src.clearcontrol.microscope.lightsheet.postprocessing.visualisation.instructions.HalfStackMaxProjectionInstruction.java", "BodyUseAPI": [], "Fixed commit": "3332dbbbe7feef6d3c56768cb45e57b7aa6d37fc", "Url": "https://api.github.com/repos/ClearControl/clearcontrol-lightsheet", "Date": "2018-07-26T08:13:57Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.pr0crustes.backend.classes.FileSelector.askForSelect()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (inputFile != null) { this.listViewManager.addObject(inputFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4264/buggy-version/src.main.java.me.pr0crustes.frontend.gui.scenes.convert.ConvertController.java", "BodyUseAPI": ["me.pr0crustes.frontend.gui.classes.elements.ListViewManager<java.io.File>.addObject(java.io.File)"], "Fixed commit": "2984b793a18aebd23ce2ca1ccd7f7357db5252ec", "Url": "https://api.github.com/repos/pr0crustes/PDFToolHelper", "Date": "2018-06-13T19:23:14Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.pr0crustes.backend.classes.FileSelector.askForSelect(FileExtensions.PDF)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (inputFile != null) { this.listViewManager.addObject(inputFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4264/buggy-version/src.main.java.me.pr0crustes.frontend.gui.scenes.merge.MergeController.java", "BodyUseAPI": ["me.pr0crustes.frontend.gui.classes.elements.ListViewManager<java.io.File>.addObject(java.io.File)"], "Fixed commit": "2984b793a18aebd23ce2ca1ccd7f7357db5252ec", "Url": "https://api.github.com/repos/pr0crustes/PDFToolHelper", "Date": "2018-06-13T19:23:14Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((max - min) + 1) < length) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/699/buggy-version/Practice5.src.task2.subtask1.CollectionGenerator.java", "BodyUseAPI": [], "Fixed commit": "fd496c04b5d05d4318caf92c90ab9d407c09a6e0", "Url": "https://api.github.com/repos/YeshanovM/EpamPractice", "Date": "2018-04-04T17:08:29Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["task2.subtask1.CollectionGenerator.generateList(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((generatedList == null) || ((generatedList.size()) == 0)) java.lang.System.out.println(\"Can't generate list with this parameters.\"); else java.lang.System.out.println((\"Set: \" + generatedList));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/699/buggy-version/Practice5.src.task2.subtask1.Runner.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "fd496c04b5d05d4318caf92c90ab9d407c09a6e0", "Url": "https://api.github.com/repos/YeshanovM/EpamPractice", "Date": "2018-04-04T17:08:29Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.arvat.crmi.repository.PublisherRepository.getOne(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (publisher.isRegularPioneer()) report.setRegularPioneer(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3754/buggy-version/src.main.java.org.arvat.crmi.controller.ReportController.java", "BodyUseAPI": [], "Fixed commit": "52d1221037150dcae7c4772715a7fd6095432333", "Url": "https://api.github.com/repos/arvat/crmi", "Date": "2018-08-15T10:50:52Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mrEvent.getChannel().isPrivate()) { setupComplete = false; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3453/buggy-version/src.caris.framework.basehandlers.MessageHandler.java", "BodyUseAPI": [], "Fixed commit": "0a7569fb50db276931ba8ccd6a10e519e9af292a", "Url": "https://api.github.com/repos/InfinityPhase/CARIS", "Date": "2018-10-15T19:50:20Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.base.Throwables.getRootCause(java.lang.Throwable)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cause instanceof org.ksoap2.SoapFault) { org.ksoap2.SoapFault sf = ((org.ksoap2.SoapFault) (cause)); android.util.Log.e(com.kedzie.vbox.host.TAG, (\"SoapFault finding DHCP Server \" + (sf.detail.getText(0))), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3414/buggy-version/vbox-app.src.main.java.com.kedzie.vbox.host.HostNetworkListFragment.java", "BodyUseAPI": [], "Fixed commit": "4ff1b80640e21d2828c1359686f566b2d7d0ba5e", "Url": "https://api.github.com/repos/kedzie/VBoxManager", "Date": "2018-08-03T16:11:45Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["datastoreService.ofy().load().type(it.simostefi.wedding.model.Email.class).list()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (alreadyStored.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5931/buggy-version/src.main.java.it.simostefi.wedding.manager.SenderManager.java", "BodyUseAPI": [], "Fixed commit": "81825f284539bcf2d95d3f8fd1e4536d5a5f9675", "Url": "https://api.github.com/repos/simonetallevi/wedding", "Date": "2018-01-27T14:30:20Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.simostefi.wedding.model.Email.getEmail(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(emailSent.contains(joiner.join(email.getEmails())))) { emails.add(email); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5931/buggy-version/src.main.java.it.simostefi.wedding.manager.SenderManager.java", "BodyUseAPI": ["java.util.List<it.simostefi.wedding.model.Email>.add(it.simostefi.wedding.model.Email)"], "Fixed commit": "81825f284539bcf2d95d3f8fd1e4536d5a5f9675", "Url": "https://api.github.com/repos/simonetallevi/wedding", "Date": "2018-01-27T14:30:20Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.dihanov.musiq.service.MediaControllerListenerService.currentPlayingControllerPackageName) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1978/buggy-version/app.src.main.java.com.dihanov.musiq.service.MediaControllerListenerService.java", "BodyUseAPI": [], "Fixed commit": "2b91c4545fd918a426514c1ba5ee2b580300ff58", "Url": "https://api.github.com/repos/DDihanov/musiQ", "Date": "2018-04-23T12:00:41Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dynamicmapper.mapper.ModelMapper.invokeReflective(S,java.lang.reflect.Method)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.dynamicmapper.mapper.ModelMapper.sourceAndDestinyArePrimitiveTypesOrFromSameClazz(dstField, value)) { clone = com.dynamicmapper.mapper.ModelMapper.recursiveReflectiveDeepCopy(value, dstField.getType()); }else if (null != value) { alreadyMappedObjects.put(value.hashCode(), value); clone = com.dynamicmapper.mapper.ModelMapper.map(value, dstField.getType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8843/buggy-version/dynamicmapper.src.main.java.com.dynamicmapper.mapper.ModelMapper.java", "BodyUseAPI": ["com.dynamicmapper.mapper.ModelMapper.map(java.lang.Object,java.lang.Class<?>)", "java.lang.reflect.Field.getType()", "java.util.Map<java.lang.Integer, java.lang.Object>.put(int,java.lang.Object)", "java.lang.reflect.Field.getType()", "java.lang.Object.hashCode()", "com.dynamicmapper.mapper.ModelMapper.recursiveReflectiveDeepCopy(java.lang.Object,java.lang.Class<?>)"], "Fixed commit": "a66c0f8784b188bb876b68f7c9b592c12511865a", "Url": "https://api.github.com/repos/WalterDumba/domain-dynamicmapper", "Date": "2018-08-15T22:14:46Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dataStore.getData().getEncryptor()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (encryptor != null) { atomBuilder.setEncryptorParticle(new com.radixdlt.client.core.atoms.EncryptorParticle(encryptor.getProtectors())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5101/buggy-version/radixdlt-java.src.main.java.com.radixdlt.client.application.translate.DataStoreTranslator.java", "BodyUseAPI": ["com.radixdlt.client.core.atoms.AtomBuilder.setEncryptorParticle(com.radixdlt.client.core.atoms.EncryptorParticle)", "com.radixdlt.client.core.crypto.Encryptor.getProtectors()"], "Fixed commit": "a019a43e4681010f3e2ffc759e169a9aaa0d85b9", "Url": "https://api.github.com/repos/radixdlt/radixdlt-java", "Date": "2018-08-28T21:52:42Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(\"N0Z\")) html.set(\"distance\", \"Long\"); else html.set(\"distance\", \"Short\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6147/buggy-version/app.src.main.java.com.danhasting.radar.RadarActivity.java", "BodyUseAPI": [], "Fixed commit": "de93955bc5577cfb5537764072e95334a7b0b284", "Url": "https://api.github.com/repos/dh4/WeatherRadar", "Date": "2018-03-13T02:35:16Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["be.ephys.cookiecore.config.Config.category()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (category.equals(\"\")) { category = \"general\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6692/buggy-version/src.main.java.be.ephys.cookiecore.config.ConfigSynchronizer.java", "BodyUseAPI": [], "Fixed commit": "8accc982b725378ef89d690f0bbfbd1464c19c16", "Url": "https://api.github.com/repos/Ephys/CookieCore", "Date": "2018-01-29T19:44:11Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["isssr.ticketsystem.controller.Team.getTeamMemberList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (teamMembers != null) { for (isssr.ticketsystem.controller.TeamMember tm : teamMembers) { java.util.Optional<isssr.ticketsystem.controller.RegisteredUser> registeredUserOptional = registeredUserDao.findById(tm.getId()); if (!(registeredUserOptional.isPresent())) continue; if (!(registeredUserOptional.get().getClass().equals(isssr.ticketsystem.controller.TeamMember.class))) continue; isssr.ticketsystem.controller.TeamMember teamMember = ((isssr.ticketsystem.controller.TeamMember) (registeredUserOptional.get())); teamMember.setTeam(team); registeredUserDao.save(teamMember); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1904/buggy-version/src.main.java.isssr.ticketsystem.controller.TeamController.java", "BodyUseAPI": [], "Fixed commit": "e0d88a183d87d920dc2c32a008a683f6083eaac0", "Url": "https://api.github.com/repos/UniversityProject-TorVergata/TicketSystem", "Date": "2018-06-03T14:03:46Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((TippreihenOhneUnglueck.UnluckyNumbers) == null) { TippreihenOhneUnglueck.UnluckyNumbers = Interface.SetUnluckyNumbers(); if ((TippreihenOhneUnglueck.UnluckyNumbers.length) > 0) { TippreihenOhneUnglueck.WriteFile(TippreihenOhneUnglueck.UnluckyNumbers); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6409/buggy-version/src.TippreihenOhneUnglueck.java", "BodyUseAPI": [], "Fixed commit": "af3ddfcf56c478a8150f07be1bfd46e6b34904ed", "Url": "https://api.github.com/repos/julianvornfeld/TippreihenOhneUnglueck", "Date": "2018-10-15T19:34:38Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((TippreihenOhneUnglueck.UnluckyNumbers) == null) { TippreihenOhneUnglueck.UnluckyNumbers = Interface.SetUnluckyNumbers(); if ((TippreihenOhneUnglueck.UnluckyNumbers.length) > 0) { TippreihenOhneUnglueck.WriteFile(TippreihenOhneUnglueck.UnluckyNumbers); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6409/buggy-version/src.TippreihenOhneUnglueck.java", "BodyUseAPI": [], "Fixed commit": "af3ddfcf56c478a8150f07be1bfd46e6b34904ed", "Url": "https://api.github.com/repos/julianvornfeld/TippreihenOhneUnglueck", "Date": "2018-10-15T19:34:38Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new com.activeandroid.query.Select().from(info.puzz.a10000sentences.models.Sentence.class).where(\"collection_id=? and status=?\", collectionId, fromStatus.getStatus()).orderBy((\"complexity \" + complecityOrder)).limit(limit).execute()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((sentences == null) || ((sentences.size()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3206/buggy-version/10000sentencesapp.src.main.java.info.puzz.a10000sentences.logic.SentenceCollectionsService.java", "BodyUseAPI": [], "Fixed commit": "1af81cb1ec2cd596a3b56a9a61d43cc75b8e14c8", "Url": "https://api.github.com/repos/tkrajina/10000sentences", "Date": "2018-10-25T15:38:08Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((attractionList.Attractions) == null) { attractionListAttractionCount.setText(\"0\"); }else { attractionListAttractionCount.setText(java.lang.String.valueOf(attractionList.Attractions.size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8487/buggy-version/app.src.main.java.com.example.bartosz.thelocals.AttractionListDetails.java", "BodyUseAPI": ["java.lang.String.valueOf(attractionList.Attractions.size())", "attractionList.Attractions.size()", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "4b44ab89195f117839249788177ba3be3cb9314e", "Url": "https://api.github.com/repos/bartek94ka/TheLocals", "Date": "2018-09-13T23:05:44Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) <= (Build.VERSION_CODES.LOLLIPOP)) noTransactions.setText(getResources().getString(R.string.no_transactions_with_emoji)); else noTransactions.setText(getResources().getString(R.string.no_transations_without_emoji));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1547/buggy-version/app.src.main.java.app.learnkannada.com.learnkannadakannadakali.kk_coins.CoinsTreasuryActivity.java", "BodyUseAPI": [], "Fixed commit": "0c0980fff5d7792691cb12d613630d5e907038c6", "Url": "https://api.github.com/repos/varunam/LearnKannada_KannadaKali", "Date": "2018-08-21T05:39:38Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (atBottom) { listView.setSelection(((adapter.getCount()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2196/buggy-version/app.src.main.java.com.boetchain.bitcoinnode.ui.activity.PeerChatActivity.java", "BodyUseAPI": [], "Fixed commit": "a891e3d6886f7fbfc4cd3422ad23ab147774db57", "Url": "https://api.github.com/repos/boetchain/android-bitcoin-node", "Date": "2018-02-22T15:07:24Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, io.sutil.profiler.ProfilerSection>.get(io.sutil.profiler.ProfilerSection.repr(this.currentSection, identifier))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (section == null) { section = new io.sutil.profiler.ProfilerSection(this.currentSection, identifier); if ((this.currentSection) != null) this.currentSection.getChildrenSections().add(section); this.sections.put(section.toString(), section); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/161/buggy-version/src.main.java.io.sutil.profiler.Profiler.java", "BodyUseAPI": [], "Fixed commit": "22b97b7e9733af531dec7b088e34fc2539476379", "Url": "https://api.github.com/repos/mindstorm38/sutil", "Date": "2018-09-04T15:17:37Z"},
{"Line": "=>1571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((connectionsCombo.getModel().getSize()) == 0) { connectionsCombo.addElement(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2684/buggy-version/src.org.executequery.gui.editor.QueryEditor.java", "BodyUseAPI": ["org.executequery.gui.editor.OpenConnectionsComboBox.addElement(<nulltype>)"], "Fixed commit": "aea646c965f2c1319cbea850b055e2b88fe84630", "Url": "https://api.github.com/repos/red-soft-ru/redexpert", "Date": "2018-05-10T07:17:52Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.slf4j.impl.SimpleLoggerConfiguration.getStringProp(Constant.LOG_DIR_KEY,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (logDir.endsWith(\".jar\")) { logDir = java.lang.System.getenv(\"user.dir\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5639/buggy-version/src.main.java.org.slf4j.impl.SimpleLoggerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "bfdf0643e6aa837114229494210c762fc11e08ea", "Url": "https://api.github.com/repos/lets-blade/blade-log", "Date": "2018-03-30T03:35:54Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((entityId.getType()) != null) { try { this.type = new java.net.URI(entityId.getType().toString()); } catch (java.net.URISyntaxException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7981/buggy-version/eu.neclab.iotplatform.ngsi.api.src.main.java.eu.neclab.iotplatform.ngsi.api.datamodel.EntityId.java", "BodyUseAPI": [], "Fixed commit": "74ceca27fe1dd455b0ffdd08d1436a6776a7b3b5", "Url": "https://api.github.com/repos/FIWARE-Archive/iot.Aeron", "Date": "2018-01-23T14:52:19Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (winningTeam != 0) { net.dv8tion.jda.core.entities.Member winner = (winningTeam == 1) ? game.getCaptain1() : game.getCaptain2(); java.lang.String teamName = \"Team \" + (winner.getEffectiveName()); response = core.util.Utils.createMessage(title, java.lang.String.format(\"**Winner:** %s%n**Duration:** %d Minutes\", teamName, duration), true); }else { response = core.util.Utils.createMessage(title, java.lang.String.format(\"**Tie game**%n**Duration:** %d Minutes\", duration), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3877/buggy-version/src.core.commands.CmdFinishGame.java", "BodyUseAPI": [], "Fixed commit": "6b764375020dd07e58e8cfd3d7e3ee9c79418f9e", "Url": "https://api.github.com/repos/Implosions/PugBot", "Date": "2018-08-23T19:26:26Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subProtocol.equals(com.dandymadeproductions.ajqvue.datasource.ConnectionInstance.DERBY)) { if ((driver.indexOf(\"EmbeddedDriver\")) != (-1)) { if ((databaseShutdownString.toLowerCase(java.util.Locale.ENGLISH).indexOf(\"memory:\")) != (-1)) { if (debug) java.lang.System.out.println((description + \" (CI) Dropping Derby Memory Database\")); dbConnection = java.sql.DriverManager.getConnection((databaseShutdownString + \";drop=true\")); dbConnection.close(); }else { if (debug) java.lang.System.out.println((description + \" (CI) Shutting Down Derby Embedded Database\")); dbConnection = java.sql.DriverManager.getConnection(\"jdbc:derby:;shutdown=true\"); dbConnection.close(); } } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5741/buggy-version/src.com.dandymadeproductions.ajqvue.datasource.ConnectionInstance.java", "BodyUseAPI": [], "Fixed commit": "e1af611cf0ef9106944382bda491eb7dbe981b27", "Url": "https://api.github.com/repos/danap/ajqvue", "Date": "2018-04-05T22:01:14Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (accessMode == (AccessMode.USAGE_STATS)) { return new com.PATHomi.helper.impl.ActivityUsageStatsImpl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1927/buggy-version/push.src.main.java.com.PATHomi.helper.TopActivityFactory.java", "BodyUseAPI": [], "Fixed commit": "0fe9ec33c8b5256e3281375f78e2bf4940d9d31b", "Url": "https://api.github.com/repos/Trumeet/MiPushFramework", "Date": "2018-07-17T11:35:35Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ids == null) || (ids.isEmpty())) { return new java.util.HashSet<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8786/buggy-version/services.messaging.src.main.java.com.github.punchat.messaging.domain.member.MemberFinderImpl.java", "BodyUseAPI": [], "Fixed commit": "29ad6d4e2c93f6236e3d18223be36f6fc2c6cae8", "Url": "https://api.github.com/repos/punchat/punchat", "Date": "2018-06-09T14:12:43Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getIntExtra(Helper.TYPE,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (s == 0) throw new java.lang.RuntimeException(\"Error in getting 'Implement' from the intent\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8695/buggy-version/app.src.main.java.com.memory_athlete.memoryassistant.main.Implement.java", "BodyUseAPI": [], "Fixed commit": "efb06db06374a4110508e8587bf7a1838df14fec", "Url": "https://api.github.com/repos/maniksejwal/Memory-Assistant", "Date": "2018-09-13T16:19:41Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.zype.android.BuildConfig.AWS_PINPOINT) { com.zype.android.ZypeApp.get(this).initAWSPinPoint(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9131/buggy-version/app.src.main.java.com.zype.android.aws.PushListenerService.java", "BodyUseAPI": [], "Fixed commit": "bafb87df89763cacc093630ae66130e88bc45412", "Url": "https://api.github.com/repos/andyzheng547/zype-android", "Date": "2018-10-10T20:24:42Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["db.zypeDao().getVideoSync(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((video.isZypeLive) == null) video.isZypeLive = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9131/buggy-version/app.src.main.java.com.zype.android.DataRepository.java", "BodyUseAPI": [], "Fixed commit": "bafb87df89763cacc093630ae66130e88bc45412", "Url": "https://api.github.com/repos/andyzheng547/zype-android", "Date": "2018-10-10T20:24:42Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataSnapshot.getValue()) != null) { startRegistration(email, password, phone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2434/buggy-version/app.src.main.java.com.example.rgain.login.SignupActivity.java", "BodyUseAPI": [], "Fixed commit": "49a5bcb0d9bffe3337a70e37d21c98b398d6750d", "Url": "https://api.github.com/repos/rgaindwal/Login", "Date": "2018-06-02T15:35:57Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((filtered.size()) > 0) { filtered.get(0).stream().forEach(( entry) -> queue.offer(entry)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7240/buggy-version/src.main.java.com.challenge.app.PhoneLetterGenerator.java", "BodyUseAPI": ["java.util.stream.Stream<java.lang.String>.forEach(java.util.function.Consumer<? super java.lang.String>)", "java.util.List<java.lang.String>.stream()", "java.util.List<java.util.List<java.lang.String>>.get(int)"], "Fixed commit": "27206d03d5e7a820369d9059d2283a0d027e1c56", "Url": "https://api.github.com/repos/albertcabantog/phone-letter-generator", "Date": "2018-01-22T10:05:32Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Model_Classes.eventFilters.getFilterBooleans()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (filterBooleans.get(\"Mother\\'s Side\")) { if (isOnFamilySide(p, motherSide)) { filtered.add(p); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3917/buggy-version/Family-Map-Server.app.src.main.java.com.joshmenden.familymap.PersonActivity.java", "BodyUseAPI": [], "Fixed commit": "47f78b24e1c7195bde72354396bb1fabf13604bc", "Url": "https://api.github.com/repos/joshmenden/Family-Map-App", "Date": "2018-04-12T05:43:47Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Model_Classes.eventFilters.getFilterBooleans()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (filterBooleans.get(\"Father\\'s Side\")) { if (isOnFamilySide(p, fatherSide)) { filtered.add(p); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3917/buggy-version/Family-Map-Server.app.src.main.java.com.joshmenden.familymap.PersonActivity.java", "BodyUseAPI": [], "Fixed commit": "47f78b24e1c7195bde72354396bb1fabf13604bc", "Url": "https://api.github.com/repos/joshmenden/Family-Map-App", "Date": "2018-04-12T05:43:47Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((response.body().getPlaceDetails()) != null) && (!(response.body().getPlaceDetails().isEmpty()))) { android.util.Log.i(com.example.rohantaneja.hv_placesautocomplete.ui.MainActivity.TAG, response.body().getPlaceDetails().get(0).getName()); android.util.Log.i(com.example.rohantaneja.hv_placesautocomplete.ui.MainActivity.TAG, response.body().getPlaceDetails().get(0).getPlaceId()); android.util.Log.i(com.example.rohantaneja.hv_placesautocomplete.ui.MainActivity.TAG, response.body().getPlaceDetails().get(0).getIcon()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5331/buggy-version/app.src.main.java.com.example.rohantaneja.hv_placesautocomplete.ui.MainActivity.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,response.body().getPlaceDetails().get(0).getIcon())", "response.body().getPlaceDetails().get(int)", "response.body().getPlaceDetails().get(0).getName()", "response.body().getPlaceDetails()", "response.body().getPlaceDetails().get(0).getPlaceId()", "response.body().getPlaceDetails().get(int)", "retrofit2.Response<com.example.rohantaneja.hv_placesautocomplete.network.response.PlaceBaseResponse>.body()", "retrofit2.Response<com.example.rohantaneja.hv_placesautocomplete.network.response.PlaceBaseResponse>.body()", "response.body().getPlaceDetails()", "response.body().getPlaceDetails()", "android.util.Log.i(java.lang.String,response.body().getPlaceDetails().get(0).getName())", "retrofit2.Response<com.example.rohantaneja.hv_placesautocomplete.network.response.PlaceBaseResponse>.body()", "response.body().getPlaceDetails().get(0).getIcon()", "response.body().getPlaceDetails().get(int)", "android.util.Log.i(java.lang.String,response.body().getPlaceDetails().get(0).getPlaceId())"], "Fixed commit": "f8be1a3bfb0589dd63de02b5974584e045723f95", "Url": "https://api.github.com/repos/rohan20/HV-PlacesAutocomplete", "Date": "2018-05-17T12:08:29Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (name.contains(broadcastMessage.substring(0, messageSeparatorIndex))) { java.lang.String messageTail = broadcastMessage.substring(messageSeparatorIndex); broadcastMessage = (name) + messageTail; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6684/buggy-version/catroid.src.main.java.org.catrobat.catroid.content.Sprite.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "91f707bef4c85f124c283ce49e34eb3018e643c2", "Url": "https://api.github.com/repos/ankitpriyarup/Catroid", "Date": "2018-03-09T13:38:22Z"},
{"Line": "=>1538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tranquilizerTicks) == 0) { this.isSleeping = false; this.stayAwakeTime = 400; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4917/buggy-version/src.main.java.org.jurassicraft.server.entity.DinosaurEntity.java", "BodyUseAPI": [], "Fixed commit": "b1e4157a1d74f7e34442f81455b3f4d95626f578", "Url": "https://api.github.com/repos/JurassiCraftTeam/JurassiCraft2", "Date": "2018-05-13T00:41:44Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (extras.containsKey(\"properties\")) { java.lang.Object propertiesCandidate = extras.get(\"properties\"); if (propertiesCandidate instanceof net.ericsson.emovs.playback.PlaybackProperties) { this.properties = ((net.ericsson.emovs.playback.PlaybackProperties) (propertiesCandidate)); }else { this.properties = net.ericsson.emovs.playback.PlaybackProperties.DEFAULT; } }else { this.properties = net.ericsson.emovs.playback.PlaybackProperties.DEFAULT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2710/buggy-version/src.main.java.net.ericsson.emovs.playback.ui.activities.SimplePlaybackActivity.java", "BodyUseAPI": ["android.os.Bundle.get(java.lang.String)"], "Fixed commit": "fed29cc23e6655215ade7dd0ad40e22ed9dcf790", "Url": "https://api.github.com/repos/EricssonBroadcastServices/AndroidClientPlayback", "Date": "2018-01-19T15:48:56Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["datastructures.StreetMap.getIntersectionByCoordinates(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(section.connectionCanBeAdded())) { clickCounter = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2613/buggy-version/src.main.java.graphical_interface.GraphicalInterface.java", "BodyUseAPI": [], "Fixed commit": "8f3fc1e8000ad414d6d94b8a742e14946354a2c5", "Url": "https://api.github.com/repos/thomasbuo/traffic-simulation-gradle", "Date": "2018-03-14T10:37:30Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pbn.org.news.mvp.presenter.NewsListPresenter.4.getView()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null != view) { view.updateNewsList(newsBeans, isLoadmore); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5736/buggy-version/app.src.main.java.com.pbn.org.news.mvp.presenter.NewsListPresenter.java", "BodyUseAPI": ["com.pbn.org.news.mvp.view.INewsListView.updateNewsList(java.util.List<com.pbn.org.news.model.common.NewsBean>,boolean)"], "Fixed commit": "85ab54df75281d94b901af06b1a04d3ed6734cba", "Url": "https://api.github.com/repos/peiboning/VideoMe", "Date": "2018-07-10T01:43:31Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pbn.org.news.mvp.presenter.NewsListPresenter.4.getView()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null != view) { view.updateNewsList(null, isLoadmore); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5736/buggy-version/app.src.main.java.com.pbn.org.news.mvp.presenter.NewsListPresenter.java", "BodyUseAPI": ["com.pbn.org.news.mvp.view.INewsListView.updateNewsList(<nulltype>,boolean)"], "Fixed commit": "85ab54df75281d94b901af06b1a04d3ed6734cba", "Url": "https://api.github.com/repos/peiboning/VideoMe", "Date": "2018-07-10T01:43:31Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pbn.org.news.mvp.presenter.NewsListPresenter.11.getView()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null != view) { view.updateNewsList(null, isLoadMore); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5736/buggy-version/app.src.main.java.com.pbn.org.news.mvp.presenter.NewsListPresenter.java", "BodyUseAPI": ["com.pbn.org.news.mvp.view.INewsListView.updateNewsList(<nulltype>,boolean)"], "Fixed commit": "85ab54df75281d94b901af06b1a04d3ed6734cba", "Url": "https://api.github.com/repos/peiboning/VideoMe", "Date": "2018-07-10T01:43:31Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == types1) || (null == types2)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7808/buggy-version/hutool-core.src.main.java.cn.hutool.core.util.ClassUtil.java", "BodyUseAPI": [], "Fixed commit": "9bccaa3519c7808fb7c1d977832aed290ec35858", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2018-10-17T11:35:36Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.agateau.ui.menu.MenuItemGroup.getCurrentItem()", "java.util.HashMap<com.agateau.ui.menu.MenuItem, com.badlogic.gdx.scenes.scene2d.Actor>.get(com.agateau.ui.menu.MenuItem)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (actor != (item.getActor())) { mFocusRect.x += item.getActor().getX(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2148/buggy-version/core.src.com.agateau.ui.menu.MenuItemGroup.java", "BodyUseAPI": ["com.agateau.ui.menu.MenuItem.getActor()", "item.getActor().getX()"], "Fixed commit": "5501ac79b2bab52ada2c30e758cd036bac0c7ade", "Url": "https://api.github.com/repos/agateau/pixelwheels", "Date": "2018-06-19T16:48:19Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gender == \"MALE\") { this.gender = Gender.MALE; }else if (gender == \"FEMALE\") { this.gender = Gender.FEMALE; }else { this.gender = Gender.UNSPECIFIED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9842/buggy-version/src.main.java.ro.siit.concedii.domain.Employee.java", "BodyUseAPI": [], "Fixed commit": "d8e51ee8f70b45027051ebfcaba9f017966a136d", "Url": "https://api.github.com/repos/SebastianSi/class-project", "Date": "2018-04-15T14:20:13Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((refreshingView) != null) { refreshingView.clearAnimation(); refreshingView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1290/buggy-version/commonlib.src.main.java.per.wsj.commonlib.pulltorefreshlib.PullToRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "65fd07603e3322d44eaff7763480dca27966445d", "Url": "https://api.github.com/repos/giswangsj/wsjLib", "Date": "2018-07-23T07:51:13Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (customLoadmoreView)) { if ((loadingView) != null) { loadingView.clearAnimation(); loadingView.setVisibility(View.GONE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1290/buggy-version/commonlib.src.main.java.per.wsj.commonlib.pulltorefreshlib.PullToRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "65fd07603e3322d44eaff7763480dca27966445d", "Url": "https://api.github.com/repos/giswangsj/wsjLib", "Date": "2018-07-23T07:51:13Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.h2020.symbiote.ssp.resources.db.ResourceInfo.getSymIdResource()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((symbioteId == null) && (symbioteId.isEmpty())) { symbioteId = resource.getSspIdResource(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1690/buggy-version/src.main.java.eu.h2020.symbiote.ssp.rap.odata.RapEntityProcessor.java", "BodyUseAPI": [], "Fixed commit": "20ef831530304c74238d1920a26d67f1f84ec37b", "Url": "https://api.github.com/repos/symbiote-h2020/SymbioteSmartSpace", "Date": "2018-05-18T14:10:09Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((symbioteId == null) || (symbioteId.isEmpty())) { eu.h2020.symbiote.ssp.rap.odata.RapEntityProcessor.log.error(\"No valid symbioteId for entity\"); customOdataException = new eu.h2020.symbiote.ssp.rap.exceptions.CustomODataApplicationException(null, \"No valid symbioteId for entity.\", HttpStatusCode.NO_CONTENT.getStatusCode(), java.util.Locale.ROOT); eu.h2020.symbiote.ssp.rap.odata.RapEntityCollectionProcessor.setErrorResponse(response, customOdataException, responseFormat); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1690/buggy-version/src.main.java.eu.h2020.symbiote.ssp.rap.odata.RapEntityProcessor.java", "BodyUseAPI": [], "Fixed commit": "20ef831530304c74238d1920a26d67f1f84ec37b", "Url": "https://api.github.com/repos/symbiote-h2020/SymbioteSmartSpace", "Date": "2018-05-18T14:10:09Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDeclaration) { org.eclipse.ceylon.compiler.typechecker.tree.Tree.StaticType type = that.getType(); if (type != null) { type.getTypeModel().setTypeConstructor(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4765/buggy-version/typechecker.src.org.eclipse.ceylon.compiler.typechecker.analyzer.TypeVisitor.java", "BodyUseAPI": [], "Fixed commit": "6224c5de5a088d57f442663dd95d28d95274e646", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2018-09-11T22:23:50Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((country.length()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8210/buggy-version/src.main.java.com.rolfje.anonimatron.anonymizer.CountryCodeAnonymizer.java", "BodyUseAPI": [], "Fixed commit": "dd78a8be8f26083c972b3535a330db9b522e93a1", "Url": "https://api.github.com/repos/realrolfje/anonimatron", "Date": "2018-07-30T19:24:02Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.android.bakingapp.model.Step.getVideoUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((uriString == null) || (uriString.isEmpty())) { uriString = mStep.getThumbnailUrl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3885/buggy-version/app.src.main.java.com.example.android.bakingapp.fragments.StepFragment.java", "BodyUseAPI": [], "Fixed commit": "bdbda3f35fb10f29b3308d66810fe9175c9a25fa", "Url": "https://api.github.com/repos/glm9637/ud-baking-app", "Date": "2018-05-16T11:53:27Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.conf.HiveConf.getVar(org.apache.hadoop.conf.Configuration,ConfVars.HIVE_PROTO_EVENTS_BASE_PATH)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(hiveEventsDir)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7127/buggy-version/metastore.src.java.org.apache.hadoop.hive.metastore.HiveProtoEventsCleanerTask.java", "BodyUseAPI": [], "Fixed commit": "76236847b5735ba1c08083fea6bda228fa13dbd3", "Url": "https://api.github.com/repos/sankarh/hive", "Date": "2018-07-02T12:36:52Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eventsBasePaths.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7127/buggy-version/metastore.src.java.org.apache.hadoop.hive.metastore.HiveProtoEventsCleanerTask.java", "BodyUseAPI": [], "Fixed commit": "76236847b5735ba1c08083fea6bda228fa13dbd3", "Url": "https://api.github.com/repos/sankarh/hive", "Date": "2018-07-02T12:36:52Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reflections == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6191/buggy-version/HomeAutomation.src.main.java.cm.homeautomation.services.base.StartupAnnotationInitializer.java", "BodyUseAPI": [], "Fixed commit": "241e1f7fbf774fc40f61f648f3f6f3db41396f04", "Url": "https://api.github.com/repos/comdata/HomeAutomation", "Date": "2018-10-13T15:56:57Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) == 0L) id = maintenanceTask.getId();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6400/buggy-version/src.main.java.com.prosystemingegneri.censistant.presentation.maintenance.MaintenanceTaskPresenter.java", "BodyUseAPI": [], "Fixed commit": "c610f7002fd7bce856fb7a46eded04885df78592", "Url": "https://api.github.com/repos/ProsystemIngegneriAffiliati/censistant", "Date": "2018-09-27T12:25:50Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(toTestList.contains(selectedSuite))) { de.rub.nds.tlsscanner.probe.LOGGER.warn(\"Server chose a CipherSuite we did not propose!\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9220/buggy-version/src.main.java.de.rub.nds.tlsscanner.probe.Tls13Probe.java", "BodyUseAPI": [], "Fixed commit": "2ead8592d46f557ccb02fd2cc7b1a0ca4e3f6684", "Url": "https://api.github.com/repos/RUB-NDS/TLS-Scanner", "Date": "2018-08-27T20:09:49Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (tableToCompact != null) { logCompactionChoice(tableToCompact, maxSweptAfterCompact); }else { com.palantir.atlasdb.compact.CompactPriorityCalculator.log.info(\"Not compacting, because it does not appear that any table has been swept.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8502/buggy-version/atlasdb-impl-shared.src.main.java.com.palantir.atlasdb.compact.CompactPriorityCalculator.java", "BodyUseAPI": ["com.palantir.atlasdb.compact.CompactPriorityCalculator.logCompactionChoice(java.lang.String,long)"], "Fixed commit": "daac03d24a5f6b9c947904139f68b9a7512a5a06", "Url": "https://api.github.com/repos/palantir/atlasdb", "Date": "2018-03-08T15:04:16Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (LowpanNetwork.verbose) simulator.getNetwork().printNode();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1697/buggy-version/src.ctrl.NetListener.java", "BodyUseAPI": [], "Fixed commit": "8a27fecc9ee13595b4ee50a63aa9de2b5425fc1f", "Url": "https://api.github.com/repos/carleton-smart-grid/lowpan-visualizer", "Date": "2018-03-19T16:58:41Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (LowpanNetwork.verbose) java.lang.System.out.println((((\"Adding \" + (data[0])) + \" with rank \") + (data[1])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1697/buggy-version/src.ctrl.NetListener.java", "BodyUseAPI": [], "Fixed commit": "8a27fecc9ee13595b4ee50a63aa9de2b5425fc1f", "Url": "https://api.github.com/repos/carleton-smart-grid/lowpan-visualizer", "Date": "2018-03-19T16:58:41Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (LowpanNetwork.verbose) java.lang.System.out.println((((((((\"Adding \" + (data[0])) + \" with rank \") + (data[1])) + \" and parent \") + (data[2])) + \" : \") + (data[3])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1697/buggy-version/src.ctrl.NetListener.java", "BodyUseAPI": [], "Fixed commit": "8a27fecc9ee13595b4ee50a63aa9de2b5425fc1f", "Url": "https://api.github.com/repos/carleton-smart-grid/lowpan-visualizer", "Date": "2018-03-19T16:58:41Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ctrl.LowpanNetwork.verbose) java.lang.System.out.println(\"Adding the root\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1697/buggy-version/src.ctrl.LowpanNetwork.java", "BodyUseAPI": [], "Fixed commit": "8a27fecc9ee13595b4ee50a63aa9de2b5425fc1f", "Url": "https://api.github.com/repos/carleton-smart-grid/lowpan-visualizer", "Date": "2018-03-19T16:58:41Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((args.length) > 0) && ((args[0]) == \"-v\")) ctrl.LowpanNetwork.verbose = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1697/buggy-version/src.ctrl.LowpanNetwork.java", "BodyUseAPI": [], "Fixed commit": "8a27fecc9ee13595b4ee50a63aa9de2b5425fc1f", "Url": "https://api.github.com/repos/carleton-smart-grid/lowpan-visualizer", "Date": "2018-03-19T16:58:41Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ctrl.LowpanNetwork.verbose) java.lang.System.out.println(((\"You are not the dodag and there is no dodag, adding \" + nodeToAdd) + \" to orphanList\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1697/buggy-version/src.ctrl.LowpanNetwork.java", "BodyUseAPI": [], "Fixed commit": "8a27fecc9ee13595b4ee50a63aa9de2b5425fc1f", "Url": "https://api.github.com/repos/carleton-smart-grid/lowpan-visualizer", "Date": "2018-03-19T16:58:41Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ctrl.LowpanNetwork.verbose) java.lang.System.out.println(\"Your parent couldn't be found, adding to orphanList\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1697/buggy-version/src.ctrl.LowpanNetwork.java", "BodyUseAPI": [], "Fixed commit": "8a27fecc9ee13595b4ee50a63aa9de2b5425fc1f", "Url": "https://api.github.com/repos/carleton-smart-grid/lowpan-visualizer", "Date": "2018-03-19T16:58:41Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ctrl.LowpanNetwork.verbose) java.lang.System.out.println(\"This node reported that it has no parent, moving to orphanList\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1697/buggy-version/src.ctrl.LowpanNetwork.java", "BodyUseAPI": [], "Fixed commit": "8a27fecc9ee13595b4ee50a63aa9de2b5425fc1f", "Url": "https://api.github.com/repos/carleton-smart-grid/lowpan-visualizer", "Date": "2018-03-19T16:58:41Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (password != null) { seedu.address.commons.util.SecurityUtil.encryptFile(file, password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1355/buggy-version/src.main.java.seedu.address.storage.XmlAddressBookStorage.java", "BodyUseAPI": ["seedu.address.commons.util.SecurityUtil.encryptFile(java.io.File,seedu.address.model.Password)"], "Fixed commit": "7da17c71e3c2782d5408a75c21aee10c74bb9955", "Url": "https://api.github.com/repos/CS2103JAN2018-W11-B4/main", "Date": "2018-04-07T16:43:18Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((email) != \"\") && ((password) != \"\")) { createAccount(email, password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1294/buggy-version/app.src.main.java.edu.tjhsst.b001e0.SignUp.java", "BodyUseAPI": [], "Fixed commit": "e338f72c18a27bb93db0f1f9387a96e710e93114", "Url": "https://api.github.com/repos/matthewcrotty/b001e0", "Date": "2018-05-10T17:55:49Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedList<technology.tabula.detectors.RegexSearch.DetectionData>.getLast()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((lastTableUnderDetection._pageEndCoord.getY()) < (lastTableUnderDetection._pageBeginCoord.getY())) && ((lastTableUnderDetection._pageEndMatch.get()) == (lastTableUnderDetection._pageBeginMatch.get()))) { tableUnderDetection = lastTableUnderDetection; }else { tableUnderDetection = new technology.tabula.detectors.RegexSearch.DetectionData(); potentialMatches.add(tableUnderDetection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4287/buggy-version/src.main.java.technology.tabula.detectors.RegexSearch.java", "BodyUseAPI": [], "Fixed commit": "1ae2ce144e76da62f68975d99543d7a845c64f10", "Url": "https://api.github.com/repos/redmyers/484_P7_1-Java", "Date": "2018-01-29T02:22:49Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (1 == tag) { if (url.toString().startsWith(\"http\")) { com.ruitukeji.zwbs.common.GlideApp.with(context).load(url).placeholder(R.mipmap.loading).diskCacheStrategy(DiskCacheStrategy.ALL).transform(new com.ruitukeji.zwbs.utils.GlideRoundTransform(context, 10)).dontAnimate().into(imageView); }else { com.ruitukeji.zwbs.common.GlideApp.with(context).load(android.net.Uri.fromFile(new java.io.File(url.toString()))).placeholder(R.mipmap.load).diskCacheStrategy(DiskCacheStrategy.ALL).centerInside().into(imageView); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/174/buggy-version/ZWBS-Android.app.src.main.java.com.ruitukeji.zwbs.common.GlideImageLoader.java", "BodyUseAPI": [], "Fixed commit": "f2b8aea150199b1bef0ca6eb0d5e02af255ec7c0", "Url": "https://api.github.com/repos/921668753/wztx-driver-andriod", "Date": "2018-03-07T09:46:08Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((itemVat.compareTo(java.math.BigDecimal.ZERO)) == 0) return java.math.BigDecimal.ZERO;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7849/buggy-version/src.main.java.no.digipost.api.datatypes.types.receipt.ReceiptLine.java", "BodyUseAPI": [], "Fixed commit": "0c641a488e946f6cd0303d786c4da2ffe8bf54d1", "Url": "https://api.github.com/repos/digipost/digipost-data-types", "Date": "2018-05-15T08:43:42Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.math.BigDecimal.subtract(java.math.BigDecimal)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((priceMinusVat.compareTo(java.math.BigDecimal.ZERO)) == 0) return java.math.BigDecimal.valueOf(100, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7849/buggy-version/src.main.java.no.digipost.api.datatypes.types.receipt.ReceiptLine.java", "BodyUseAPI": [], "Fixed commit": "0c641a488e946f6cd0303d786c4da2ffe8bf54d1", "Url": "https://api.github.com/repos/digipost/digipost-data-types", "Date": "2018-05-15T08:43:42Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SCMSource.SourceByItem.findSource(build.getParent())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(s instanceof com.cloudbees.jenkins.plugins.bitbucket.BitbucketSCMSource)) { if (com.cloudbees.jenkins.plugins.bitbucket.BitbucketBuildStatusNotifications.sourceCache.containsKey(buildName)) { s = com.cloudbees.jenkins.plugins.bitbucket.BitbucketBuildStatusNotifications.sourceCache.get(buildName); }else { if ((com.cloudbees.jenkins.plugins.bitbucket.BitbucketBuildStatusNotifications.sourceCache.size()) == (com.cloudbees.jenkins.plugins.bitbucket.BitbucketBuildStatusNotifications.MAX_ENTRIES)) { listener.getLogger().println(\"[Bitbucket] Cann't notify. Source cache is full.\"); } return; } }else { com.cloudbees.jenkins.plugins.bitbucket.BitbucketBuildStatusNotifications.sourceCache.put(buildName, s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7378/buggy-version/src.main.java.com.cloudbees.jenkins.plugins.bitbucket.BitbucketBuildStatusNotifications.java", "BodyUseAPI": ["java.util.LinkedHashMap<java.lang.String, jenkins.scm.api.SCMSource>.put(java.lang.String,jenkins.scm.api.SCMSource)"], "Fixed commit": "78bbc6045035b0e4ce14056d7fd3ae177af5317d", "Url": "https://api.github.com/repos/benjaminfuchs/bitbucket-branch-source-plugin", "Date": "2018-04-06T23:51:21Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (worstEmotion == 0) { mImageView.setImageResource(R.drawable.buddyhungry); }else if (worstEmotion == 1) { mImageView.setImageResource(R.drawable.buddysleepy); }else if (worstEmotion == 2) { mImageView.setImageResource(R.drawable.buddybored); }else if (worstEmotion == 3) { mImageView.setImageResource(R.drawable.buddyplayful); }else if (worstEmotion == 4) { mImageView.setImageResource(R.drawable.buddysad); }else if (worstEmotion == 5) { mImageView.setImageResource(R.drawable.buddylonely); }else { mImageView.setImageResource(R.drawable.buddybase); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4352/buggy-version/app.src.main.java.com.example.cse5236.mobilebuddy.BuddyDisplayFragment.java", "BodyUseAPI": [], "Fixed commit": "41207e3d61f858d3626bc294e78ebd8119fdfd4d", "Url": "https://api.github.com/repos/jluken/Mobile_Buddy", "Date": "2018-04-11T03:46:38Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activateAI) { operateAI.removeCallbacksAndMessages(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2608/buggy-version/app.src.main.java.c.jadon.tictactoe.TicTacToe.java", "BodyUseAPI": [], "Fixed commit": "3ec251912b5884dbdd8b230e1ad0c5908d563174", "Url": "https://api.github.com/repos/JadonFan/Casual-Games", "Date": "2018-03-20T23:25:59Z"},
{"Line": "=>717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOnItemClickListener) != null) { performItemClick(null, which, mListAdapter.getItemId(which)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3575/buggy-version/core.java.android.widget.Spinner.java", "BodyUseAPI": [], "Fixed commit": "d020ebff2ce5cab042a28cc4ca26852fa1143cd8", "Url": "https://api.github.com/repos/sudosurootdev/frameworks_base", "Date": "2012-02-25T03:50:11Z"},
{"Line": "=>737", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOnItemClickListener) != null) { this.performItemClick(null, position, mAdapter.getItemId(position)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3575/buggy-version/core.java.android.widget.Spinner.java", "BodyUseAPI": [], "Fixed commit": "d020ebff2ce5cab042a28cc4ca26852fa1143cd8", "Url": "https://api.github.com/repos/sudosurootdev/frameworks_base", "Date": "2012-02-25T03:50:11Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (context != null) { org.springframework.security.core.Authentication auth = context.getAuthentication(); if (auth != null) { java.lang.Object principal = auth.getPrincipal(); if (principal instanceof info.wiwitadityasaputra.user.entity.User) { return ((info.wiwitadityasaputra.user.entity.User) (principal)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4218/buggy-version/backend.src.main.java.info.wiwitadityasaputra.user.api.UserHelper.java", "BodyUseAPI": ["org.springframework.security.core.context.SecurityContext.getAuthentication()"], "Fixed commit": "cd8dce462bda8f57f8894d6ef9d8fc516bb4048e", "Url": "https://api.github.com/repos/tekdungtralala/watchitlater3", "Date": "2018-04-22T14:45:32Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((relevance) == 0) { return java.lang.Long.compare(getTimeInMillis(start_date), getTimeInMillis(o.start_date)); }else return java.lang.Integer.compare(relevance, o.relevance);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1671/buggy-version/TBA-API.src.com.cpjd.models.Event.java", "BodyUseAPI": [], "Fixed commit": "aa0fa39a98d30b40d9c9fb08d0f42758ff91cde9", "Url": "https://api.github.com/repos/wdavies973/TBA-API-V2", "Date": "2018-01-22T17:13:29Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.status) == (ACTIVE)) && ((this.endOfStream) || (this.sslEngine.isInboundDone()))) { this.status = CLOSING; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2671/buggy-version/httpcore5.src.main.java.org.apache.hc.core5.reactor.ssl.SSLIOSession.java", "BodyUseAPI": [], "Fixed commit": "43535e4b7704bfb357601278a1180e52beb34fcf", "Url": "https://api.github.com/repos/rschmitt/httpcomponents-core", "Date": "2018-10-10T15:07:41Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.core.env.StandardEnvironment.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (value != null) { ret.put(propertyKey, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3747/buggy-version/spot-core.src.main.java.io.spotnext.core.infrastructure.service.impl.DefaultConfigurationService.java", "BodyUseAPI": ["java.util.Properties.put(java.lang.String,java.lang.Object)"], "Fixed commit": "c1a32d2965dbc1a59d79184154a6067036701075", "Url": "https://api.github.com/repos/spot-next/spot-framework", "Date": "2018-08-22T19:16:30Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listner) != null) listner.onFinished(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4561/buggy-version/src.com.wongel.MVPGenerator.MvpGenerator.java", "BodyUseAPI": [], "Fixed commit": "51ac4687497661cab27635736e633cd88b8fffc8", "Url": "https://api.github.com/repos/arjun-grg/MVP-Interactor", "Date": "2018-01-03T11:42:41Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tempList.getTodoListId()) != null) peegee.fullorganizer.MainActivity.todoListList.add(tempList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5180/buggy-version/app.src.main.java.peegee.fullorganizer.MainActivity.java", "BodyUseAPI": ["java.util.List<peegee.fullorganizer.firebase_db.TodoListDB>.add(peegee.fullorganizer.firebase_db.TodoListDB)"], "Fixed commit": "1ba02aeae0f52c646a4510cfd32f5f0af27a581b", "Url": "https://api.github.com/repos/PeeGee92/Organizer", "Date": "2018-05-03T14:46:21Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (world.isRemote) { setRenderDistanceWeight(4); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7165/buggy-version/src.main.java.org.halvors.nuclearphysics.common.entity.EntityParticle.java", "BodyUseAPI": [], "Fixed commit": "2b8b95611c3fc1a96e88ad0b89505c2f792fbf15", "Url": "https://api.github.com/repos/halvors/Nuclear-Physics", "Date": "2018-04-11T02:05:18Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.micronaut.discovery.ServiceInstance.getInstanceId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(opt.isPresent())) { if (instance.getMetadata().contains(\"instanceId\")) { opt = java.util.Optional.of(instance.getMetadata().asMap().get(\"instanceId\")); }else { if (io.micronaut.discovery.aws.route53.registration.Route53AutoNamingRegistrationClient.LOG.isErrorEnabled()) { io.micronaut.discovery.aws.route53.registration.Route53AutoNamingRegistrationClient.LOG.error(\"Cannot determine the instance ID. Are you sure you are running on AWS EC2?\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4639/buggy-version/discovery-client.src.main.java.io.micronaut.discovery.aws.route53.registration.Route53AutoNamingRegistrationClient.java", "BodyUseAPI": [], "Fixed commit": "b3bb3b04bd5539e08d11385ead01c7d8a754d87d", "Url": "https://api.github.com/repos/micronaut-projects/micronaut-core", "Date": "2018-08-17T19:59:19Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ucl.newton.drepublisher.DREDataPublisher.readFTPConfiguration(java.io.InputStream)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (config != null) { config.setContext(context); this.config = config; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2010/buggy-version/application.plugins.DREDataPublisher.src.main.java.org.ucl.newton.drepublisher.DREDataPublisher.java", "BodyUseAPI": ["org.ucl.newton.drepublisher.FTPConfig.setContext(org.ucl.newton.drepublisher.PluginHostContext)"], "Fixed commit": "f0c44675f25181f04a36e7291af7cc1ab1bd5283", "Url": "https://api.github.com/repos/blairisme/newton", "Date": "2018-08-18T16:28:43Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ucl.newton.fizzyo.FizzyoDataProvider.readFizzyoConfiguration(java.io.InputStream)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (configuration != null) { configuration.setContext(context); handler.setConfiguration(configuration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2010/buggy-version/application.plugins.FizzyoDataProvider.src.main.java.org.ucl.newton.fizzyo.FizzyoDataProvider.java", "BodyUseAPI": ["org.ucl.newton.fizzyo.GetFizzyoData.setConfiguration(org.ucl.newton.fizzyo.FizzyoConfiguration)", "org.ucl.newton.fizzyo.FizzyoConfiguration.setContext(org.ucl.newton.fizzyo.PluginHostContext)"], "Fixed commit": "f0c44675f25181f04a36e7291af7cc1ab1bd5283", "Url": "https://api.github.com/repos/blairisme/newton", "Date": "2018-08-18T16:28:43Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wongel.MVPGenerator.MvpGenerator.getManifest(com.intellij.psi.PsiDirectory)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (manifest == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6369/buggy-version/src.com.wongel.MVPGenerator.MvpGenerator.java", "BodyUseAPI": [], "Fixed commit": "102ea8f2c14676307766ad2a21979dcdca025423", "Url": "https://api.github.com/repos/arjun-grg/MVP-Interactor", "Date": "2018-01-03T11:46:16Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index) == 0) { option1.setText(\"\u09b9\u09df\u09c7\u099b\u09c7\"); option2.setText(\"\u09b9\u09df\u09a8\u09bf\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4246/buggy-version/app.src.main.java.app.android.texlab.servey.Section4.Section4e.java", "BodyUseAPI": [], "Fixed commit": "3064585e289ebcb9389374a04d8e02d0d04df492", "Url": "https://api.github.com/repos/shoukhin93/Survey", "Date": "2018-02-19T13:29:11Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (hotel.entities.Booking.State.CHECKED_IN)) { charges.add(new hotel.entities.ServiceCharge(serviceType, cosst)); }else if ((state) == (hotel.entities.Booking.State.CHECKED_OUT)) { java.lang.System.out.println(\"User has already checked out!\"); }else { java.lang.System.out.println(\"This is a pending booking!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4141/buggy-version/entities.Booking.java", "BodyUseAPI": [], "Fixed commit": "5c984b265f36a3f6fe2069435f6caee84d3bb5b9", "Url": "https://api.github.com/repos/mihirantfx/539-Assignment4", "Date": "2018-10-04T11:14:52Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.google.android.gms.maps.model.Marker>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (i < markersSize) { if ((neighboursMarkers.get(i)) == null) { neighboursMarkers.add(mMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(latLng1).title(mNeighborsUtils.Names.get(i)).snippet((\"other cars with id \" + (java.lang.String.valueOf(mNeighborsUtils.IDs.get(i))))).icon(otherCarsDescriptors))); }else { neighboursMarkers.get(i).setPosition(latLng1); } }else { neighboursMarkers.add(mMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(latLng1).title(mNeighborsUtils.Names.get(i)).snippet((\"other cars with id \" + (java.lang.String.valueOf(mNeighborsUtils.IDs.get(i))))).icon(otherCarsDescriptors))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9213/buggy-version/app.src.main.java.com.example.a.myapplication.DriverMapActivity.java", "BodyUseAPI": ["mNeighborsUtils.Names.get(int)", "mNeighborsUtils.IDs.get(int)", "java.util.List<com.google.android.gms.maps.model.Marker>.get(int)", "mNeighborsUtils.IDs.get(int)", "new com.google.android.gms.maps.model.MarkerOptions().position(latLng1).title(mNeighborsUtils.Names.get(i)).snippet((\"other cars with id \" + (java.lang.String.valueOf(mNeighborsUtils.IDs.get(i)))))", "java.util.List<com.google.android.gms.maps.model.Marker>.add(mMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(latLng1).title(mNeighborsUtils.Names.get(i)).snippet((\"other cars with id \" + (java.lang.String.valueOf(mNeighborsUtils.IDs.get(i))))).icon(otherCarsDescriptors)))", "com.google.android.gms.maps.GoogleMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(latLng1).title(mNeighborsUtils.Names.get(i)).snippet((\"other cars with id \" + (java.lang.String.valueOf(mNeighborsUtils.IDs.get(i))))).icon(otherCarsDescriptors))", "com.google.android.gms.maps.GoogleMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(latLng1).title(mNeighborsUtils.Names.get(i)).snippet((\"other cars with id \" + (java.lang.String.valueOf(mNeighborsUtils.IDs.get(i))))).icon(otherCarsDescriptors))", "new com.google.android.gms.maps.model.MarkerOptions().position(latLng1).title(mNeighborsUtils.Names.get(i)).snippet((\"other cars with id \" + (java.lang.String.valueOf(mNeighborsUtils.IDs.get(i)))))", "new com.google.android.gms.maps.model.MarkerOptions().position(latLng1).title(mNeighborsUtils.Names.get(i)).snippet((\"other cars with id \" + (java.lang.String.valueOf(mNeighborsUtils.IDs.get(i))))).icon(com.google.android.gms.maps.model.BitmapDescriptor)", "java.lang.String.valueOf(mNeighborsUtils.IDs.get(i))", "new com.google.android.gms.maps.model.MarkerOptions().position(latLng1).title(mNeighborsUtils.Names.get(i))", "new com.google.android.gms.maps.model.MarkerOptions().position(latLng1).title(mNeighborsUtils.Names.get(i))", "java.util.List<com.google.android.gms.maps.model.Marker>.add(mMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(latLng1).title(mNeighborsUtils.Names.get(i)).snippet((\"other cars with id \" + (java.lang.String.valueOf(mNeighborsUtils.IDs.get(i))))).icon(otherCarsDescriptors)))", "mNeighborsUtils.Names.get(int)", "java.util.List<com.google.android.gms.maps.model.Marker>.get(int)", "new com.google.android.gms.maps.model.MarkerOptions().position(latLng1).title(mNeighborsUtils.Names.get(i)).snippet((\"other cars with id \" + (java.lang.String.valueOf(mNeighborsUtils.IDs.get(i))))).icon(com.google.android.gms.maps.model.BitmapDescriptor)", "java.lang.String.valueOf(mNeighborsUtils.IDs.get(i))", "neighboursMarkers.get(i).setPosition(com.google.android.gms.maps.model.LatLng)"], "Fixed commit": "832a5b18269845c3f986d9749e9580e7380df9d7", "Url": "https://api.github.com/repos/nohadrweesh/ASN", "Date": "2018-04-16T16:46:17Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.example.a.myapplication.SharedPrefManager.getInstance(this).isLoggedIn()) { startActivity(new android.content.Intent(this, com.example.a.myapplication.DriverMapActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9213/buggy-version/app.src.main.java.com.example.a.myapplication.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "832a5b18269845c3f986d9749e9580e7380df9d7", "Url": "https://api.github.com/repos/nohadrweesh/ASN", "Date": "2018-04-16T16:46:17Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (conn != null) { conn.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3460/buggy-version/src.main.java.HttpUrlConn.java", "BodyUseAPI": ["java.net.HttpURLConnection.disconnect()"], "Fixed commit": "d8188282b62c6e1616dd08270cde80fed065875b", "Url": "https://api.github.com/repos/zhangwanyue/HttpTest", "Date": "2018-02-01T09:28:15Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (in != null) { in.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3460/buggy-version/src.main.java.HttpUrlConn.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "d8188282b62c6e1616dd08270cde80fed065875b", "Url": "https://api.github.com/repos/zhangwanyue/HttpTest", "Date": "2018-02-01T09:28:15Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["info.ashamov.moneytransfer.dto.MoneyTransfer.getReceiverAccountId()", "info.ashamov.moneytransfer.dto.MoneyTransfer.getSenderAccountId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (senderId == receiverId) { throw new info.ashamov.moneytransfer.exception.InternalException(\"Sender and receiver accounts should be different\", Response.Status.BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5606/buggy-version/src.main.java.info.ashamov.moneytransfer.model.AccountDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "26970e94281e366eab21cd6a314085bf1669a7c5", "Url": "https://api.github.com/repos/anatoly-shamov/money-transfer", "Date": "2018-06-08T09:04:34Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["info.ashamov.moneytransfer.dto.MoneyTransfer.getSenderAccountId()", "info.ashamov.moneytransfer.dto.MoneyTransfer.getReceiverAccountId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (senderId < receiverId) { senderRS = senderStatement.executeQuery(); receiverRS = receiverStatement.executeQuery(); }else { receiverRS = receiverStatement.executeQuery(); senderRS = senderStatement.executeQuery(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5606/buggy-version/src.main.java.info.ashamov.moneytransfer.model.AccountDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "26970e94281e366eab21cd6a314085bf1669a7c5", "Url": "https://api.github.com/repos/anatoly-shamov/money-transfer", "Date": "2018-06-08T09:04:34Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((moneyTransfer.getAmount().compareTo(java.math.BigDecimal.ZERO)) < 0) { throw new info.ashamov.moneytransfer.exception.InternalException(\"Amount can't be negative\", Response.Status.BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5606/buggy-version/src.main.java.info.ashamov.moneytransfer.model.AccountDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "26970e94281e366eab21cd6a314085bf1669a7c5", "Url": "https://api.github.com/repos/anatoly-shamov/money-transfer", "Date": "2018-06-08T09:04:34Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MVPWizard.Model.getSate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (state.equals(\"error\")) { mView.changeFab(\"error\"); mView.changeText(\"error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1556/buggy-version/app.src.main.java.exequiel.ussdwizardhelper.WizardPresenter.java", "BodyUseAPI": [], "Fixed commit": "87e52229e3d6aed28f8820bc4aa3f3a48767b093", "Url": "https://api.github.com/repos/exegonmar/ussdwizardhelper", "Date": "2018-05-11T18:33:58Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menu) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5402/buggy-version/app.src.main.java.com.wipro.datafeedapp.DataFeedActivity.java", "BodyUseAPI": [], "Fixed commit": "9bbae06b3fcdae17d7d255fd476eabfdd4da48e3", "Url": "https://api.github.com/repos/hariharan-narayanan-wipro/DataFeedApp", "Date": "2018-02-20T16:37:05Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((-(gamepad2.left_stick_y)) < 0) { armPower(((-(gamepad2.left_stick_y)) / 8)); }else armPower(((-(gamepad2.left_stick_y)) / 4));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1550/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.tele.TeleOpMode2.java", "BodyUseAPI": ["org.firstinspires.ftc.teamcode.tele.TeleOpMode2.armPower(((-(gamepad2.left_stick_y)) / 4))", "org.firstinspires.ftc.teamcode.tele.TeleOpMode2.armPower(((-(gamepad2.left_stick_y)) / 8))"], "Fixed commit": "2115639f31e6f3f9f0b29911dfb514fc62516bdd", "Url": "https://api.github.com/repos/NBCRobotics/OpenRC-turbo", "Date": "2018-02-07T21:55:21Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(teams.containsKey(currentUserID))) { java.util.ArrayList<scrabble.Models.Users> team = new java.util.ArrayList<>(); team.add(userList.get(userIndexSearch(currentUserID))); userList.get(userIndexSearch(currentUserID)).setStatus(\"ready\"); int hostID = currentUserID; teamsInWait.add(team); teams.put(hostID, team); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7867/buggy-version/src.main.java.scrabble.server.controllers.gameEngine.GameProcess.java", "BodyUseAPI": ["java.util.ArrayList<scrabble.Models.Users>.get(int)", "java.util.ArrayList<scrabble.Models.Users>.add(userList.get(userIndexSearch(currentUserID)))", "java.util.concurrent.ConcurrentHashMap<java.lang.Integer, java.util.ArrayList<scrabble.Models.Users>>.put(int,java.util.ArrayList<scrabble.Models.Users>)", "userList.get(userIndexSearch(currentUserID)).setStatus(java.lang.String)", "scrabble.server.controllers.gameEngine.GameProcess.userIndexSearch(int)", "scrabble.server.controllers.gameEngine.GameProcess.userIndexSearch(int)", "java.util.ArrayList<scrabble.Models.Users>.get(int)"], "Fixed commit": "cc3fe382235cc2d30c61d973e7318bc887e20d84", "Url": "https://api.github.com/repos/MerlinLee/ScrabbleProject", "Date": "2018-10-04T06:41:28Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.easystudio.api.zuoci.repository.StarredPhraseRepository.findOneByUserIdAndPhraseId(java.lang.String,java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (star != null) { repository.delete(star); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7844/buggy-version/zuoci-api-boot.src.main.java.com.easystudio.api.zuoci.service.StarredPhraseService.java", "BodyUseAPI": ["com.easystudio.api.zuoci.repository.StarredPhraseRepository.delete(com.easystudio.api.zuoci.entity.StarredPhrase)"], "Fixed commit": "eebbb8d70b4ee94c78a1af2ed0d14ffd551fcc05", "Url": "https://api.github.com/repos/woodyyan/zuociapi", "Date": "2018-03-09T08:27:06Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (c == '{') { translated.append(c); insideVariable = true; }else if (insideVariable) { translated.append(c); }else if ((java.lang.Character.isAlphabetic(c)) || (java.lang.Character.isIdeographic(c))) { translated.append('?'); }else { translated.append(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7714/buggy-version/src.main.java.com.peterfranza.propertytranslator.translators.QuestionMarkTranslator.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)", "java.lang.Character.isAlphabetic(char)", "java.lang.StringBuilder.append(char)", "java.lang.Character.isIdeographic(char)", "java.lang.StringBuilder.append(char)"], "Fixed commit": "40e63575e5514a67d56f17ee5432b922488f6dbf", "Url": "https://api.github.com/repos/ivaynberg/LanguagePropertyTranslator", "Date": "2018-04-04T16:17:23Z"},
{"Line": "=>1132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(section.equals(Record.COLLECTIONSPACE_COMMON_PART_NAME))) { org.dom4j.Element slrf = lrf.addElement(new org.dom4j.QName(\"schema\", thisns)); java.lang.String schemaName = r.getServicesSchemaName(fs.getSection()); if ((schemaName != null) && ((schemaName.trim().isEmpty()) == false)) { slrf.addText(r.getServicesSchemaName(fs.getSection())); }else { java.lang.String errMsg = java.lang.String.format(\"Can not find a valid schema name for field '%s' of section '%s' for record type '%s'. Check the section name if the field is part of a group. The section name for all fields in a group neeed to be the same.\", fs.getID(), fs.getSection(), r); org.collectionspace.chain.installation.ServiceBindingsGeneration.log.error(errMsg); throw new java.lang.RuntimeException(errMsg); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7115/buggy-version/cspi-installation.src.main.java.org.collectionspace.chain.installation.ServiceBindingsGeneration.java", "BodyUseAPI": [], "Fixed commit": "1867b7e29ba8a46317b12f77c930de8bb89c7df9", "Url": "https://api.github.com/repos/collectionspace/application", "Date": "2018-10-12T18:59:30Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAuth.getCurrentUser()) == null) { fragmentHandler.startTransactionNoBackStack(new dk.lundudvikling.joinedlists.Fragments.AuthenticationFragment()); }else { fragmentHandler.startTransactionNoBackStack(new dk.lundudvikling.joinedlists.Fragments.MainFragment()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1500/buggy-version/app.src.main.java.dk.lundudvikling.joinedlists.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "44212ecf1328b92853180eabd003ea8b882a7ac3", "Url": "https://api.github.com/repos/MartinALund/JoinedLists", "Date": "2018-01-19T14:12:53Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dcm4che3.data.Attributes.getString(Tag.UniversalEntityID)", "org.dcm4che3.data.Attributes.getString(Tag.UniversalEntityIDType)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((universalEntityID != null) && (universalEntityIDType != null)) return new org.dcm4che3.data.Issuer(issuerOfPatientID, universalEntityID, universalEntityIDType);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1718/buggy-version/dcm4che-core.src.main.java.org.dcm4che3.data.Issuer.java", "BodyUseAPI": [], "Fixed commit": "3bdbd3d81f52303a0492271dbd8910e6e5d48587", "Url": "https://api.github.com/repos/dcm4che/dcm4che", "Date": "2018-09-12T15:34:31Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index > (issueToEdit.getSolutions().size())) { throw new seedu.address.logic.commands.exceptions.CommandException(seedu.address.commons.core.Messages.MESSAGE_INVALID_ISSUE_DISPLAYED_INDEX); }else { seedu.address.model.issue.Solution oldSolution = issueToEdit.getSolutions().get(index); seedu.address.model.issue.Solution updatedSolution; if ((newSolution.getRemark().value.equals(seedu.address.logic.commands.EditCommand.DUMMY_SOLUTION_REMARK)) && (!(newSolution.getLink().value.equals(seedu.address.logic.commands.EditCommand.DUMMY_SOLUTION_LINK)))) { updatedSolution = new seedu.address.model.issue.Solution(newSolution.getLink().value, oldSolution.getRemark().value); }else if ((!(newSolution.getRemark().value.equals(seedu.address.logic.commands.EditCommand.DUMMY_SOLUTION_REMARK))) && (newSolution.getLink().value.equals(seedu.address.logic.commands.EditCommand.DUMMY_SOLUTION_LINK))) { updatedSolution = new seedu.address.model.issue.Solution(oldSolution.getLink().value, newSolution.getRemark().value); }else { updatedSolution = new seedu.address.model.issue.Solution(newSolution.getLink().value, newSolution.getRemark().value); } return updatedSolution; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9727/buggy-version/src.main.java.seedu.address.logic.commands.EditCommand.java", "BodyUseAPI": ["seedu.address.model.Issue.getSolutions()", "issueToEdit.getSolutions().get(int)"], "Fixed commit": "f493fcda6cd8f9224781fe10dbf8d463c756d3d4", "Url": "https://api.github.com/repos/CS2103-AY1819S1-T12-4/main", "Date": "2018-10-23T11:51:47Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((updateNameField.getText()) != null) && ((cmbComp.getValue()) != null)) && (((newDateInfoNameField.getValue()) != null) || ((newTextInfoNameField) != null))) { if (cmbComp.getValue().equals(\"Birth Date\")) newInfo = newDateInfoNameField.getValue().toString(); else { newInfo = newTextInfoNameField.getText(); } if (!(newInfo.equals(\"\"))) { int res = model.updateDB(\"username\", updateNameField.getText(), cmbComp.getValue(), newInfo); if (res == 1) { showInformationAlert(((\"User \" + (updateNameField.getText())) + \" was updated successfully.\")); clearText(); } }else { showErrorAlert(\"Please fill in all fields before updating.\"); } }else { showErrorAlert(\"Please fill in all fields before updating.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3446/buggy-version/src.Controller.UsersController.java", "BodyUseAPI": ["cmbComp.getValue().equals(java.lang.String)", "com.jfoenix.controls.JFXComboBox<java.lang.String>.getValue()", "Controller.TextField.getText()", "Controller.DatePicker.getValue()", "Controller.TextField.getText()", "newDateInfoNameField.getValue().toString()", "com.jfoenix.controls.JFXComboBox<java.lang.String>.getValue()", "Model.Model.updateDB(java.lang.String,updateNameField.getText(),cmbComp.getValue(),java.lang.String)", "Controller.UsersController.showInformationAlert(((\"User \" + (updateNameField.getText())) + \" was updated successfully.\"))"], "Fixed commit": "2a8dd040a1c3f41af261ad2f8ef8fc7644c41d94", "Url": "https://api.github.com/repos/nirku/nyml_nituz", "Date": "2018-10-28T07:06:12Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rank != 0) { creature.setRank(crArr[rank]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7145/buggy-version/src.card.Cards.java", "BodyUseAPI": ["card.Creature.setRank(crArr[rank])"], "Fixed commit": "bef1678c3974504795ff7ef1ba0516a81f521d22", "Url": "https://api.github.com/repos/klimapaige/gods", "Date": "2018-03-08T19:55:00Z"},
{"Line": "=>923", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sysml.hops.MemoTable.getAllInputStats(getInput())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mc[0].getRows()) != (mc[0].getCols())) throw new java.lang.RuntimeException(\"The A matrix, in solve(A,b) should have squared dimensions.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5315/buggy-version/src.main.java.org.apache.sysml.hops.BinaryOp.java", "BodyUseAPI": [], "Fixed commit": "c3863dd02934bc80da7d7a32eb1a871283ce1012", "Url": "https://api.github.com/repos/j143/systemml", "Date": "2018-04-01T02:07:06Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(IndividualContactActivity.IMAGE_TEXT)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (image != null) { com.example.demouser.bond.MainContactScreen.imageArray.set(com.example.demouser.bond.MainContactScreen.currentPosition, android.net.Uri.parse(image)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5057/buggy-version/app.src.main.java.com.example.demouser.bond.MainContactScreen.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)", "java.util.ArrayList<android.net.Uri>.set(int,android.net.Uri.parse(image))"], "Fixed commit": "c562b1b39c33987157eeed38923c024bd56321d4", "Url": "https://api.github.com/repos/vantrinh7/Bond", "Date": "2018-01-22T20:10:44Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.antowka.stock.infrastructure.spring.repository.PositionRepository.findOneByTicker(transaction.getTicker())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (position == null) { position = new ru.antowka.stock.domain.model.portfolio.vo.Position(); position.setAmount(0); position.setAveragePrice(0.0F); position.setSum(0.0F); position.setAveragePrice(0.0F); position.setDiffPricesPercent(0.0F); position.setTicker(transaction.getTicker()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5507/buggy-version/src.main.java.ru.antowka.stock.application.service.PortfolioService.java", "BodyUseAPI": [], "Fixed commit": "943ea4e0ee5ecd70c9799a2e9569ab92c30a924a", "Url": "https://api.github.com/repos/Antowka/Stock-Manager", "Date": "2018-01-23T19:35:38Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["entity.getTicker().getLastPrice()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (lastPrice != null) { representation.setLastMarketPrice(lastPrice.getClose()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5507/buggy-version/src.main.java.ru.antowka.stock.application.mapper.position.PositionMapper.java", "BodyUseAPI": ["ru.antowka.stock.domain.model.price.Price.getClose()", "ru.antowka.stock.application.representation.position.PositionRepresentation.setLastMarketPrice(lastPrice.getClose())"], "Fixed commit": "943ea4e0ee5ecd70c9799a2e9569ab92c30a924a", "Url": "https://api.github.com/repos/Antowka/Stock-Manager", "Date": "2018-01-23T19:35:38Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rootNode) == null) { rootNode = new jack.A4.MCTSNode(machine, state, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9663/buggy-version/player.jack.A4.MCTSPlayerJack.java", "BodyUseAPI": [], "Fixed commit": "4c8b8e1d7e319d1c2a1094e1848507faaee7578a", "Url": "https://api.github.com/repos/JamesPayette/ggp-base", "Date": "2018-05-02T22:53:09Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new org.joda.time.DateTime().withHourOfDay(0).withMinuteOfHour(0).withSecondOfMinute(0).plusDays(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dt.getDayOfMonth()) == 1) { beginTime = dt.minusMonths(1).toString(shop.leshare.common.utils.CountUtils.FORMAT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/806/buggy-version/src.main.java.shop.leshare.common.utils.CountUtils.java", "BodyUseAPI": ["org.joda.time.DateTime.minusMonths(int)", "dt.minusMonths(1).toString(java.lang.String)"], "Fixed commit": "419d3acdc0afa4c6454750d476c5f85fc83a295e", "Url": "https://api.github.com/repos/leeis/leshare-utils", "Date": "2018-05-01T01:48:38Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((endpoint.symbol.type.tsymbol.kind) == (org.ballerinalang.model.symbols.SymbolKind.STRUCT)) { populateEndpointSymbol(((org.wso2.ballerinalang.compiler.semantics.model.symbols.BStructSymbol) (endpoint.symbol.type.tsymbol)), endpoint.symbol); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1231/buggy-version/compiler.ballerina-lang.src.main.java.org.wso2.ballerinalang.compiler.semantics.analyzer.EndpointSPIAnalyzer.java", "BodyUseAPI": ["org.wso2.ballerinalang.compiler.semantics.analyzer.EndpointSPIAnalyzer.populateEndpointSymbol(((org.wso2.ballerinalang.compiler.semantics.model.symbols.BStructSymbol) (endpoint.symbol.type.tsymbol)),endpoint.symbol)"], "Fixed commit": "e2a656189c0ccc0e133252839596ac15da7d0e0b", "Url": "https://api.github.com/repos/arukshani/ballerina", "Date": "2018-04-06T12:49:01Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.getCategoryName().equalsIgnoreCase(\"Magic Single\")) if (edName.startsWith(p.getExpansionName())) { resultat = p; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2206/buggy-version/src.main.java.org.magic.api.pricers.impl.MagicCardMarketPricer2.java", "BodyUseAPI": ["java.lang.String.startsWith(p.getExpansionName())", "org.api.mkm.modele.Product.getExpansionName()"], "Fixed commit": "da2b13a9ae4939b07f80e84c25de0c9334d16fc9", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-01-09T19:22:03Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((((ants) > 0) && ((errors) == 0)) && ((rooms) != null)) && ((start) != null)) && ((end) != null)) { bfs.Move solve = new bfs.Move(getRoom(start), end, ants, errors); solve.print_path(); }else java.lang.System.out.println(\"Error\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4797/buggy-version/Data.java", "BodyUseAPI": [], "Fixed commit": "7ca3e110d6f360e0366d396cf862ccd7dbe024bd", "Url": "https://api.github.com/repos/ttshivhula/lem-in-java", "Date": "2018-06-10T17:04:25Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1832/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "84d3be8243017c463a61235bfd10becef3c6aa06", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (accountSummary == null) { com.crashlytics.android.Crashlytics.log(Log.WARN, \"VHAccountSummaryCard\", \"account summary is null\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5650/buggy-version/app.src.main.java.viewholders.VHAccountSummaryCard.java", "BodyUseAPI": [], "Fixed commit": "075d65bd56cb910777eae1cdecd187e158038dcb", "Url": "https://api.github.com/repos/rutvik106/vcarry", "Date": "2018-08-08T18:29:57Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (messageFragment.isAdded()) getSupportFragmentManager().putFragment(outState, \"messageFragment\", messageFragment);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6394/buggy-version/app.src.main.java.ch.epfl.sweng.radius.AccountActivity.java", "BodyUseAPI": ["getSupportFragmentManager().putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)"], "Fixed commit": "d26bb8dca603100b15b58e5e33a1e3c916c09f25", "Url": "https://api.github.com/repos/2018-SWENG/2018-SWENG-Radius", "Date": "2018-10-16T11:38:28Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (profileFragment.isAdded()) getSupportFragmentManager().putFragment(outState, \"profileFragment\", profileFragment);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6394/buggy-version/app.src.main.java.ch.epfl.sweng.radius.AccountActivity.java", "BodyUseAPI": ["getSupportFragmentManager().putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)"], "Fixed commit": "d26bb8dca603100b15b58e5e33a1e3c916c09f25", "Url": "https://api.github.com/repos/2018-SWENG/2018-SWENG-Radius", "Date": "2018-10-16T11:38:28Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (settingsFragment.isAdded()) getSupportFragmentManager().putFragment(outState, \"settingsFragment\", settingsFragment);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6394/buggy-version/app.src.main.java.ch.epfl.sweng.radius.AccountActivity.java", "BodyUseAPI": ["getSupportFragmentManager().putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)"], "Fixed commit": "d26bb8dca603100b15b58e5e33a1e3c916c09f25", "Url": "https://api.github.com/repos/2018-SWENG/2018-SWENG-Radius", "Date": "2018-10-16T11:38:28Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (homeFragment.isAdded()) getSupportFragmentManager().putFragment(outState, \"homeFragment\", homeFragment);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6394/buggy-version/app.src.main.java.ch.epfl.sweng.radius.AccountActivity.java", "BodyUseAPI": ["getSupportFragmentManager().putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)"], "Fixed commit": "d26bb8dca603100b15b58e5e33a1e3c916c09f25", "Url": "https://api.github.com/repos/2018-SWENG/2018-SWENG-Radius", "Date": "2018-10-16T11:38:28Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reviews) != null) { return reviews.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8318/buggy-version/app.src.main.java.com.example.android.popularmoviesparttwo.utils.ReviewsAdapter.java", "BodyUseAPI": [], "Fixed commit": "ae42eef5530dff5b4085ae48d7f66fe631fbae11", "Url": "https://api.github.com/repos/nabishop/Popular-Movies-Part-Two", "Date": "2018-07-09T02:36:07Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((node.compInst) instanceof org.osate.aadl2.instance.impl.SystemInstanceImpl)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6211/buggy-version/safety_annex.plugins.edu.umn.cs.crisys.safety.analysis.src.edu.umn.cs.crisys.safety.analysis.ast.visitors.AddFaultsToNodeVisitor.java", "BodyUseAPI": [], "Fixed commit": "6af6a1553903b10132f0b9e16317738d5ecf1577", "Url": "https://api.github.com/repos/loonwerks/AMASE", "Date": "2018-08-02T10:29:46Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.netty.buffer.ByteBuf.getInt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (currentSeqNo == (expecting)) { sendData(data); edu.clemson.openflow.sos.buf.Buffer.log.debug(\"Sending to Host seq no: {} \", expecting); (expecting)++; sendBuffer(); }else { if (((status.get(currentSeqNo)) == null) || (!(status.get(currentSeqNo)))) { packetHolder.put(currentSeqNo, data); status.put(currentSeqNo, true); edu.clemson.openflow.sos.buf.Buffer.log.debug(\"Putting seq no. {} in buffer\", currentSeqNo); sendBuffer(); }else edu.clemson.openflow.sos.buf.Buffer.log.error(\"Still unsent packets in buffer.. droping seq. {}\", currentSeqNo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2365/buggy-version/src.main.java.edu.clemson.openflow.sos.buf.Buffer.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.lang.Boolean>.get(int)", "java.util.HashMap<java.lang.Integer, java.lang.Boolean>.get(int)", "org.slf4j.Logger.error(java.lang.String,int)", "java.util.HashMap<java.lang.Integer, io.netty.buffer.ByteBuf>.put(int,io.netty.buffer.ByteBuf)", "java.util.HashMap<java.lang.Integer, java.lang.Boolean>.put(int,boolean)", "org.slf4j.Logger.debug(java.lang.String,int)"], "Fixed commit": "52140620b9db02fb504e9fb0ba0fa8175975f11e", "Url": "https://api.github.com/repos/khayamgondal/SOSAgent", "Date": "2018-04-12T00:48:58Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((expecting) == (edu.clemson.openflow.sos.buf.Buffer.MAX_SEQ)) expecting = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2365/buggy-version/src.main.java.edu.clemson.openflow.sos.buf.Buffer.java", "BodyUseAPI": [], "Fixed commit": "52140620b9db02fb504e9fb0ba0fa8175975f11e", "Url": "https://api.github.com/repos/khayamgondal/SOSAgent", "Date": "2018-04-12T00:48:58Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vm.mFavorite.get()) { password.isFavorite = 0; vm.mAllPasswordModel.mFavorite = false; }else { password.isFavorite = 1; vm.mAllPasswordModel.mFavorite = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3622/buggy-version/app.src.main.java.com.mdove.passwordguard.alldata.presenter.AllPasswordPresenter.java", "BodyUseAPI": [], "Fixed commit": "51b7d1603956944a215806ae9ac09c33eafbd546", "Url": "https://api.github.com/repos/zhiaixinyang/PasswordGuard", "Date": "2018-04-07T07:06:01Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.elte.reserved.security.SecurityUtils.isCurrentUserInRole(com.elte.reserved.web.rest.MANAGER)) || ((restaurant.getUser()) == null)) { restaurant.setUser(userService.getUserWithAuthorities().get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9192/buggy-version/src.main.java.com.elte.reserved.web.rest.RestaurantResource.java", "BodyUseAPI": ["com.elte.reserved.domain.Restaurant.setUser(userService.getUserWithAuthorities().get())"], "Fixed commit": "c90eb696684e3dfc27b69a20bf195c5f9c246fba", "Url": "https://api.github.com/repos/nethzyr/reserved", "Date": "2018-05-21T13:21:41Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Model.instance.hasBeenSaved()) model.Model.SaveProject(); else saveProjectAs(event);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1614/buggy-version/src.controllers.MainMenu.java", "BodyUseAPI": [], "Fixed commit": "3b8f7588dd9bd6836a5740da56d495ec5ff9fe2a", "Url": "https://api.github.com/repos/Master-Owl/text-adventure-creator", "Date": "2018-07-19T01:24:46Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.biezhi.wechat.Utils.match(java.lang.String,java.lang.String)", "io.github.biezhi.wechat.Utils.match(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((!(\"0\".equals(code))) && (msg != null)) { throw new cn.ieclipse.smartim.exception.LogicException(java.lang.Integer.parseInt(code), msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8922/buggy-version/wechat.src.main.java.io.github.biezhi.wechat.api.WechatApi.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "ccd92c2a7979ce308fd2f1c99f019f3003ae48fe", "Url": "https://api.github.com/repos/Jamling/SmartIM", "Date": "2018-02-22T05:10:03Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dnal.core.DStructHelper.getField(rule.fieldName)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (inner == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1894/buggy-version/src.main.java.org.dnal.compiler.nrule.IsaRule.java", "BodyUseAPI": [], "Fixed commit": "6f097169911a6cdad84f00781f81e2c75a8f56ba", "Url": "https://api.github.com/repos/ianrae/dnal-lang", "Date": "2018-03-31T00:49:53Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sequence.size()) == 1) { return java.lang.String.valueOf(sequence.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5110/buggy-version/ProjectEuler.src.io.github.skepter.problems.Problem101.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.Integer)", "java.util.List<java.lang.Integer>.get(int)"], "Fixed commit": "91004d1ca4b29d74669bdb052a1fdcf17d277767", "Url": "https://api.github.com/repos/JorelAli/ProjectEuler", "Date": "2018-02-27T23:28:34Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(O instanceof model.Immoveable.Tile.ToggleWall)) { if (O instanceof model.Immoveable.Tile.Wall) { this.noMove(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/332/buggy-version/DungeonCrawl.src.model.Moveable.Ball.java", "BodyUseAPI": [], "Fixed commit": "e8fa3d3b80f3774845c21826ae412bafe6104398", "Url": "https://api.github.com/repos/Msfile/cs4513", "Date": "2018-03-31T05:20:44Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Value2) == 0) { ed1.setText(\"\u221e\"); }else { ed1.setText((((Value1) / (Value2)) + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/511/buggy-version/app.src.main.java.com.example.cadet.ordinarycalculator.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "93c0084a5b1629a6a3f151a986e14621dbb94310", "Url": "https://api.github.com/repos/beskhlebnyi/OrdinaryCalculator", "Date": "2018-10-21T13:33:53Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (rtrn == null) { target = this; do { rtrn = target.state.get(key); } while ((rtrn == null) && ((target = target.parent) != null) ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9902/buggy-version/src.main.java.perf.ssh.State.java", "BodyUseAPI": [], "Fixed commit": "ced0bb22963652973e74d7432c7f2ffc675717cc", "Url": "https://api.github.com/repos/RedHatPerf/qDup", "Date": "2018-02-21T05:53:22Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((analyzedVariableType) != null) { return analyzedVariableType; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7810/buggy-version/gina-api.src.main.java.org.openflexo.gina.model.FIBVariable.java", "BodyUseAPI": [], "Fixed commit": "181f35de450ef24c616a82a26453587bbccd3abf", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2018-01-26T21:44:51Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (searchText != null) { searchables = api.rest.utility.ArrayListManipulator.searchInNames(list, searchText); }else { searchables = list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/237/buggy-version/src.main.java.controllers.stub.StubAppResources.java", "BodyUseAPI": ["api.rest.utility.ArrayListManipulator.searchInNames(java.util.ArrayList<data.Searchable>,java.lang.String)"], "Fixed commit": "901824f9dca87314ff929a2ba032b58978412611", "Url": "https://api.github.com/repos/PeterEdtu/DTU_Guide_group9", "Date": "2018-05-05T12:42:42Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(this.tenantId)) { this.tenantId = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2261/buggy-version/structr-neo4j-bolt-driver.src.main.java.org.structr.bolt.BoltDatabaseService.java", "BodyUseAPI": [], "Fixed commit": "5d6bbceae328dc2ed6f5d2e369ecccacb3d349d2", "Url": "https://api.github.com/repos/structr/structr", "Date": "2018-02-22T17:41:33Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasElements(condition.getAnd())) { bq.should(firstSibling); }else { org.elasticsearch.index.query.NestedQueryBuilder nestedQuery = nestedQuery(nestedPath, firstSibling, ScoreMode.Avg); bq.should(nestedQuery); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5222/buggy-version/nl.naturalis.nba.dao.src.main.java.nl.naturalis.nba.dao.translate.ConditionTranslator.java", "BodyUseAPI": [], "Fixed commit": "b85a17cbb26ab072da35813e7289a057aba4fe14", "Url": "https://api.github.com/repos/naturalis/naturalis_data_api", "Date": "2018-01-09T15:34:30Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (direction == \"right\") { l.setColor(java.awt.Color.red); }else { l.setColor(java.awt.Color.blue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1101/buggy-version/src.familytree.BinaryTreeWindow.java", "BodyUseAPI": [], "Fixed commit": "3209662aa063cecd517f8a6045f2f36adacf6f08", "Url": "https://api.github.com/repos/rameshv2795/Family_Tree", "Date": "2018-07-19T21:32:36Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (direction == \"inviz\") { depthCopy.set(iter.getDepth(), ((depthCopy.get(iter.getDepth())) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1101/buggy-version/src.familytree.BinaryTreeWindow.java", "BodyUseAPI": [], "Fixed commit": "3209662aa063cecd517f8a6045f2f36adacf6f08", "Url": "https://api.github.com/repos/rameshv2795/Family_Tree", "Date": "2018-07-19T21:32:36Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (direction == \"right\") { l.setColor(java.awt.Color.red); }else { l.setColor(java.awt.Color.blue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1101/buggy-version/src.familytree.BinaryTreeWindow.java", "BodyUseAPI": [], "Fixed commit": "3209662aa063cecd517f8a6045f2f36adacf6f08", "Url": "https://api.github.com/repos/rameshv2795/Family_Tree", "Date": "2018-07-19T21:32:36Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (port == 0) { if (\"http\".equalsIgnoreCase(protocol)) { port = 80; }else if (\"https\".equalsIgnoreCase(protocol)) { port = 443; }else { com.networknt.registry.URLImpl.logger.error((\"Unknown protocol \" + protocol)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8779/buggy-version/registry.src.main.java.com.networknt.registry.URLImpl.java", "BodyUseAPI": [], "Fixed commit": "20e04d4c16a83adc1af3d1c0f9a7daabda97d739", "Url": "https://api.github.com/repos/zmyer/light-4j", "Date": "2018-09-01T20:30:38Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.pickflix.app.data.Media>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((media.getPosterImage()) != null) { ivPoster.post(new java.lang.Runnable() { @java.lang.Override public void run() { android.graphics.Bitmap bmp = android.graphics.BitmapFactory.decodeByteArray(media.getPosterImage(), 0, media.getPosterImage().length); bmp = android.graphics.Bitmap.createScaledBitmap(bmp, com.pickflix.app.adapter.MediaAdapter.dimensions[0], com.pickflix.app.adapter.MediaAdapter.dimensions[1], false); ivPoster.setImageBitmap(bmp); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2746/buggy-version/app.src.main.java.com.pickflix.app.adapter.MediaAdapter.java", "BodyUseAPI": ["com.pickflix.app.data.Media.getPosterImage()", "com.pickflix.app.data.Media.getPosterImage()", "android.widget.ImageView.post(java.lang.Runnable)", "android.graphics.BitmapFactory.decodeByteArray(media.getPosterImage(),int,media.getPosterImage().length)"], "Fixed commit": "de970cd2b285eab5363310c98def1e6c16dc86c4", "Url": "https://api.github.com/repos/PickFlicks/App", "Date": "2018-09-08T02:15:50Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.body().getPlaceOfBirth().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((locations.length) > 2) { ((android.widget.TextView) (root.findViewById(R.id.tvPersonFrom))).setText(makeTitleText(getString(R.string.from), (((locations[0].trim()) + \", \") + (locations[1].trim())))); }else { ((android.widget.TextView) (root.findViewById(R.id.tvPersonFrom))).setText(makeTitleText(getString(R.string.from), locations[0].trim())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2746/buggy-version/app.src.main.java.com.pickflix.app.PersonDialogueFragment.java", "BodyUseAPI": ["com.pickflix.app.PersonDialogueFragment.1.makeTitleText(getString(R.string.from),java.lang.String)", "java.lang.String.trim()", "((android.widget.TextView) (root.findViewById(R.id.tvPersonFrom))).setText(android.text.Spanned)", "com.pickflix.app.PersonDialogueFragment.1.makeTitleText(getString(R.string.from),java.lang.String)", "java.lang.String.trim()", "java.lang.String.trim()", "((android.widget.TextView) (root.findViewById(R.id.tvPersonFrom))).setText(android.text.Spanned)"], "Fixed commit": "de970cd2b285eab5363310c98def1e6c16dc86c4", "Url": "https://api.github.com/repos/PickFlicks/App", "Date": "2018-09-08T02:15:50Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.blackducksoftware.integration.hub.detect.util.executable.ExecutableManager.getExecutablePathOrOverride(ExecutableType.NUGET,boolean,java.io.File,detectConfiguration.getProperty(DetectProperty.DETECT_NUGET_PATH))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (nugetExecutable == null) { throw new com.blackducksoftware.integration.hub.detect.exception.DetectUserFriendlyException(\"Unable to find a nuget executable.\", com.blackducksoftware.integration.hub.detect.exitcode.ExitCodeType.FAILURE_CONFIGURATION); }else { resolvedInspectorVersion = resolveInspectorVersion(nugetExecutable); if ((resolvedInspectorVersion) != null) { resolvedNugetInspectorExecutable = installInspector(nugetExecutable, detectFileManager.getSharedDirectory(\"nuget\"), resolvedInspectorVersion); if ((resolvedNugetInspectorExecutable) == null) { throw new com.blackducksoftware.integration.hub.detect.exception.DetectUserFriendlyException(\"Unable to install nuget inspector version from available nuget sources.\", com.blackducksoftware.integration.hub.detect.exitcode.ExitCodeType.FAILURE_CONFIGURATION); } }else { throw new com.blackducksoftware.integration.hub.detect.exception.DetectUserFriendlyException(\"Unable to resolve nuget inspector version from available nuget sources.\", com.blackducksoftware.integration.hub.detect.exitcode.ExitCodeType.FAILURE_CONFIGURATION); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1755/buggy-version/hub-detect.src.main.groovy.com.blackducksoftware.integration.hub.detect.bomtool.nuget.NugetInspectorManager.java", "BodyUseAPI": ["com.blackducksoftware.integration.hub.detect.bomtool.nuget.NugetInspectorManager.resolveInspectorVersion(java.lang.String)", "com.blackducksoftware.integration.hub.detect.bomtool.nuget.NugetInspectorManager.installInspector(java.lang.String,detectFileManager.getSharedDirectory(\"nuget\"),java.lang.String)"], "Fixed commit": "483befbd871225936373aefe97945d80e75d7048", "Url": "https://api.github.com/repos/joc0611/hub-detect", "Date": "2018-09-21T20:18:52Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (remoteSwitch == null) { return Command.STOP; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/716/buggy-version/services.src.floodlight-modules.src.main.java.org.openkilda.floodlight.pathverification.PathVerificationService.java", "BodyUseAPI": [], "Fixed commit": "d4d659be81eeac35acab14b9bc0ab319ae3ed7ee", "Url": "https://api.github.com/repos/jonvestal/open-kilda", "Date": "2018-02-15T02:43:15Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.value()) instanceof com.cinchapi.ccl.v2.generated.ExplicitCclJavaCCASTFunction) { java.lang.String function = node.value().function(); java.lang.String key = node.value().key(); com.cinchapi.ccl.v2.generated.ASTStart ccl = ((com.cinchapi.ccl.v2.generated.ASTStart) (node.value().value())); com.cinchapi.ccl.v2.generated.GrammarTreeVisitor visitor = new com.cinchapi.ccl.v2.generated.GrammarTreeVisitor(parser, this.data); com.cinchapi.ccl.syntax.AbstractSyntaxTree tree = ((com.cinchapi.ccl.syntax.AbstractSyntaxTree) (ccl.jjtAccept(visitor, null))); return new com.cinchapi.ccl.grammar.ExplicitFunctionValueSymbol(new com.cinchapi.ccl.grammar.ExplicitCclASTFunction(function, key, tree)); }else { return new com.cinchapi.ccl.grammar.ExplicitFunctionValueSymbol(node.value()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6756/buggy-version/src.main.java.com.cinchapi.ccl.v2.generated.GrammarTreeVisitor.java", "BodyUseAPI": ["com.cinchapi.ccl.v2.generated.ASTExplicitFunctionValue.value()", "com.cinchapi.ccl.v2.generated.ASTExplicitFunctionValue.value()", "node.value().key()", "node.value().function()", "com.cinchapi.ccl.v2.generated.ASTExplicitFunctionValue.value()", "node.value().value()", "com.cinchapi.ccl.v2.generated.ASTExplicitFunctionValue.value()"], "Fixed commit": "af116c2cc22c12f5ca7f6d0289c8a6f569c33265", "Url": "https://api.github.com/repos/cinchapi/ccl", "Date": "2018-02-06T15:02:05Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((order.getStatus().equals(OrderStatus.DELIVERED)) || (order.getStatus().equals(OrderStatus.DELIVERY_FAILED))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8899/buggy-version/src.main.java.com.chaouki.tcshop.services.OrderServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "1d7b66e066ca6cfb768eb1b2520bc4208c6c23c9", "Url": "https://api.github.com/repos/chaodhib/TC-Shop", "Date": "2018-09-16T13:02:46Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Gdx.input.isKeyJustPressed(Input.Keys.U)) { world.squishHoles(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3020/buggy-version/core.src.lando.systems.ld42.screens.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "06a987b43191727b4c1803aef0bac6ba2c04cea9", "Url": "https://api.github.com/repos/bploeckelman/LudumDare42", "Date": "2018-08-13T16:59:28Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((availableRecipes) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/667/buggy-version/core.src.items.recipes.RecipeList.java", "BodyUseAPI": [], "Fixed commit": "8c7b77672d8ee82ab29e6feb16e2d39f883404d8", "Url": "https://api.github.com/repos/CuseCose/Aeronef", "Date": "2018-07-27T23:51:39Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bundle.contains(com.shatteredpixel.shatteredpixeldungeon.items.armor.Armor.AUGMENT)) augment = bundle.getEnum(com.shatteredpixel.shatteredpixeldungeon.items.armor.Armor.AUGMENT, com.shatteredpixel.shatteredpixeldungeon.items.armor.Armor.Augment.class);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7286/buggy-version/core.src.main.java.com.shatteredpixel.shatteredpixeldungeon.items.armor.Armor.java", "BodyUseAPI": ["com.watabou.utils.Bundle.getEnum(java.lang.String,java.lang.Class)"], "Fixed commit": "5274bcfc37df38c7410ecd1dd323e1868d551f46", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2018-04-25T21:55:22Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sfx.length()) == 0) { iomTxt.setattrundefined(IliNames.CHBASE1_LOCALISEDTEXT_LANGUAGE); }else { iomTxt.setattrvalue(IliNames.CHBASE1_LOCALISEDTEXT_LANGUAGE, sfx.substring(LEN_LANG_PREFIX)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8380/buggy-version/src.ch.ehi.ili2db.toxtf.ToXtfRecordConverter.java", "BodyUseAPI": ["java.lang.String.substring(int)", "ch.interlis.iom.IomObject.setattrvalue(IliNames.CHBASE1_LOCALISEDTEXT_LANGUAGE,java.lang.String)"], "Fixed commit": "d3e9dbbfda079fecc6e730bda5f2307753d7163b", "Url": "https://api.github.com/repos/AgenciaImplementacion/ili2db", "Date": "2018-06-06T16:06:39Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getObfuscatedEast()) == null) { updateObfuscatedValues(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5163/buggy-version/core.src.main.java.org.tdar.core.bean.coverage.LatitudeLongitudeBox.java", "BodyUseAPI": [], "Fixed commit": "4433fbcaa6154046fb4432fbb847a1d79c6c3a0c", "Url": "https://api.github.com/repos/digital-antiquity/tdar", "Date": "2018-08-01T20:27:33Z"},
{"Line": "=>549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getObfuscatedEast()) == null) { updateObfuscatedValues(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5163/buggy-version/core.src.main.java.org.tdar.core.bean.coverage.LatitudeLongitudeBox.java", "BodyUseAPI": [], "Fixed commit": "4433fbcaa6154046fb4432fbb847a1d79c6c3a0c", "Url": "https://api.github.com/repos/digital-antiquity/tdar", "Date": "2018-08-01T20:27:33Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isJson) { info.append(str); }else { info.append((str + \"<br>\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9028/buggy-version/src.utils.HttpUtil.java", "BodyUseAPI": [], "Fixed commit": "9d3e9dbb4a1d8e40a1e16b97a8e87eeb490816f4", "Url": "https://api.github.com/repos/csldev/FLSTSWeb", "Date": "2018-07-15T12:33:17Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(invite.getEmail().isEmpty())) { invite.setCode(java.util.UUID.randomUUID().toString()); invite.setSituation(InviteSituation.SEND); in.add(invite); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2977/buggy-version/src.main.java.com.diagnostico.api.service.InviteService.java", "BodyUseAPI": ["com.diagnostico.api.model.Invite.setCode(java.lang.String)", "com.diagnostico.api.model.Invite.setSituation(InviteSituation.SEND)", "java.util.List<com.diagnostico.api.model.Invite>.add(com.diagnostico.api.model.Invite)"], "Fixed commit": "4f1510db38de76522f3b4bb08d4570b4c4fda69f", "Url": "https://api.github.com/repos/joao-salgado/ApiDiagnostico", "Date": "2018-10-28T23:04:50Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFrameBufferTextures.length) > i) previousTexture = mFrameBufferTextures[i];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7649/buggy-version/filter.src.main.java.vip.frendy.fliter.base.GPUImageFilterGroup.java", "BodyUseAPI": [], "Fixed commit": "342454d6a53137548b3fd430218d53a347597028", "Url": "https://api.github.com/repos/frendyxzc/KCamera", "Date": "2018-08-09T12:39:58Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.adorsys.sts.resourceserver.service.UserDataRepository.loadUserCredentials(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (userCredentials == null) { userCredentials = new de.adorsys.sts.resourceserver.model.UserCredentials(); store = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4998/buggy-version/sts-resource-server.src.main.java.de.adorsys.sts.resourceserver.processing.ResourceServerProcessor.java", "BodyUseAPI": [], "Fixed commit": "53c0bfe03e2df089d3fe665f682a754598049e51", "Url": "https://api.github.com/repos/adorsys/secure-token-service", "Date": "2018-04-24T04:34:30Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["listItem.getPercentChange24H().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(polarity.contains(\"-\"))) { holder.textView24H.setTextColor(android.graphics.Color.parseColor(\"#000000\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1000/buggy-version/app.src.main.java.com.labs.rucker.cryptobeyond.util.ViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "057a7f261edbf2a8df285868c67ebbba47219199", "Url": "https://api.github.com/repos/kenocvr/Android-Crypto-Beyond", "Date": "2018-05-20T15:57:25Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.gui) instanceof micdoodle8.mods.galacticraft.core.client.gui.screen.GuiCelestialSelection) { if (net.minecraft.client.settings.GameSettings.isKeyDown(micdoodle8.mods.galacticraft.core.tick.KeyHandlerClient.galaxyMap)) { event.gui = new com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection(true, null); }else { event.gui = new com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection(false, null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6130/buggy-version/src.main.java.com.mjr.extraplanets.handlers.MainHandler.java", "BodyUseAPI": [], "Fixed commit": "eec43050bf67de2041322be9ca34e753a97c3ed8", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-02-02T15:46:59Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(roman)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2617/buggy-version/numeral.src.main.java.com.tdd.numeral.Roman2Arabic.java", "BodyUseAPI": [], "Fixed commit": "f9c1fb0b4241588e4b6e2d0c8e2517bde9badc6e", "Url": "https://api.github.com/repos/gaoffee/tdd", "Date": "2018-05-07T04:38:27Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (received.error.equals(\"1\")) return \"-1\"; else if (received.error.equals(\"2\")) return \"-3\"; else if (received.error.equals(\"9\")) return \"-4\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2759/buggy-version/BaseSerer.src.Client.User.java", "BodyUseAPI": ["received.error.equals(java.lang.String)", "received.error.equals(java.lang.String)"], "Fixed commit": "2873f4f81302eabd8c9c171afc2db1a602196de1", "Url": "https://api.github.com/repos/maslowskimarcin/Bank", "Date": "2018-01-20T15:42:02Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.AnnotatedElement.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (frameworkMapping == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2444/buggy-version/src.main.java.org.broadleafcommerce.frameworkmapping.FrameworkControllerHandlerMapping.java", "BodyUseAPI": [], "Fixed commit": "ce2a988014518fc1261b925fff62b2a3664b5d21", "Url": "https://api.github.com/repos/BroadleafCommerce/spring-frameworkmapping", "Date": "2018-08-28T18:39:45Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fields.has(\"thumbnail\")) thumbnail = fields.optString(\"thumbnail\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6877/buggy-version/app.src.main.java.com.danieldogeanu.android.newsapp.QueryUtils.java", "BodyUseAPI": ["org.json.JSONObject.optString(java.lang.String)"], "Fixed commit": "83b4b2ce91440b357aa1cf1577d5f012e59d81be", "Url": "https://api.github.com/repos/danieldogeanu/NewsApp", "Date": "2018-05-15T05:37:13Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.optJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (firstObject.has(\"webTitle\")) author = firstObject.optString(\"webTitle\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6877/buggy-version/app.src.main.java.com.danieldogeanu.android.newsapp.QueryUtils.java", "BodyUseAPI": ["org.json.JSONObject.optString(java.lang.String)"], "Fixed commit": "83b4b2ce91440b357aa1cf1577d5f012e59d81be", "Url": "https://api.github.com/repos/danieldogeanu/NewsApp", "Date": "2018-05-15T05:37:13Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (alphabet instanceof com.milaboratory.core.sequence.AlphabetCaseSensitive) for (byte i = 0; i < codes; ++i) for (byte j = 0; j < codes; ++j) { if ((java.lang.Character.toLowerCase(alphabet.codeToSymbol(i))) == (java.lang.Character.toLowerCase(alphabet.codeToSymbol(j)))) matrix[(i + (codes * j))] = match; } else for (int i = 0; i < codes; ++i) matrix[(i + (codes * i))] = match;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8294/buggy-version/src.main.java.com.milaboratory.core.alignment.ScoringUtils.java", "BodyUseAPI": ["java.lang.Character.toLowerCase(alphabet.codeToSymbol(j))", "com.milaboratory.core.sequence.Alphabet<?>.codeToSymbol(byte)", "java.lang.Character.toLowerCase(alphabet.codeToSymbol(i))", "com.milaboratory.core.sequence.Alphabet<?>.codeToSymbol(byte)"], "Fixed commit": "ed3f5002c69a0b685080ccc59fb5483ded692813", "Url": "https://api.github.com/repos/milaboratory/milib", "Date": "2017-10-30T11:30:24Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((int) (vec[0])) == 0) && (((int) (vec[1])) == 0)) { vx = 0; vy = v; }else { vx = ((int) (vec[0])); vy = ((int) (vec[1])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/869/buggy-version/src.game.ShotA.java", "BodyUseAPI": [], "Fixed commit": "d6209c48fa9f71040d5008e4f8dc57d069105dc7", "Url": "https://api.github.com/repos/XgleadX/WELTRAUMSCHLACHT", "Date": "2018-03-30T14:51:18Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bitmap) != null) { outState.putParcelable(\"BitmapImage\", bitmap); outState.putString(\"path_to_picture\", photoPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4851/buggy-version/PolyBFM.app.src.main.java.fr.unice.polytech.polybfm.DeclarationFragment.java", "BodyUseAPI": [], "Fixed commit": "cfeb6dd9867f5998b64a5d98787cbf6f4dee40f3", "Url": "https://api.github.com/repos/AlexanneM/PolyBFM", "Date": "2018-05-21T09:16:26Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bitmap) != null) { photo.setImageBitmap(bitmap); photoPath = savedInstanceState.getString(\"path_to_picture\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4851/buggy-version/PolyBFM.app.src.main.java.fr.unice.polytech.polybfm.DeclarationFragment.java", "BodyUseAPI": [], "Fixed commit": "cfeb6dd9867f5998b64a5d98787cbf6f4dee40f3", "Url": "https://api.github.com/repos/AlexanneM/PolyBFM", "Date": "2018-05-21T09:16:26Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((editTask) == null) { com.lateral.lateral.model.Task newTask = new com.lateral.lateral.model.Task(title, desc); service.post(newTask); }else { editTask.setTitle(title); editTask.setDescription(desc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5958/buggy-version/app.src.main.java.com.lateral.lateral.activity.AddEditTaskActivity.java", "BodyUseAPI": [], "Fixed commit": "384ccf75dbc210567d5f40113051c5c335b3d92c", "Url": "https://api.github.com/repos/CMPUT301W18T13/Lateral", "Date": "2018-03-15T18:17:08Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (throwable instanceof javax.net.ssl.SSLHandshakeException) { getMvpView().showError(context.getString(R.string.error_server_down)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4411/buggy-version/app.src.main.java.org.apache.fineract.ui.online.login.LoginPresenter.java", "BodyUseAPI": [], "Fixed commit": "3ed3f248dc5c64b1d67061264802445552ce6c64", "Url": "https://api.github.com/repos/miPlodder/Fineract-CN-mobile", "Date": "2018-01-27T20:15:08Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getInt(cursor.getColumnIndex(Event.TYPE))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (eventType == (android.provider.ContactsContract.CommonDataKinds.Event.TYPE_BIRTHDAY)) { try { java.lang.String birthday = cursor.getString(cursor.getColumnIndex(Event.START_DATE)).replace(\"--\", \"\"); java.lang.String[] yearMonthDay = birthday.split(\"-\"); java.util.List<java.lang.String> yearMonthDayList = java.util.Arrays.asList(yearMonthDay); if ((yearMonthDayList.size()) == 2) { int month = java.lang.Integer.parseInt(yearMonthDayList.get(0)); int day = java.lang.Integer.parseInt(yearMonthDayList.get(1)); if ((((month >= 1) && (month <= 12)) && (day >= 1)) && (day <= 31)) { contact.birthday = new com.rt2zz.reactnativecontacts.ContactsProvider.Contact.Birthday(month, day); } }else if ((yearMonthDayList.size()) == 3) { int year = java.lang.Integer.parseInt(yearMonthDayList.get(0)); int month = java.lang.Integer.parseInt(yearMonthDayList.get(1)); int day = java.lang.Integer.parseInt(yearMonthDayList.get(2)); if (((((year > 0) && (month >= 1)) && (month <= 12)) && (day >= 1)) && (day <= 31)) { contact.birthday = new com.rt2zz.reactnativecontacts.ContactsProvider.Contact.Birthday(year, month, day); } } } catch (java.lang.NumberFormatException | java.lang.ArrayIndexOutOfBoundsException e) { android.util.Log.w(\"ContactsProvider\", e.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3513/buggy-version/android.src.main.java.com.rt2zz.reactnativecontacts.ContactsProvider.java", "BodyUseAPI": [], "Fixed commit": "7a6a9d1b3e912720c80da2ab8f297e38259f40da", "Url": "https://api.github.com/repos/ulikus/react-native-contacts", "Date": "2018-07-04T10:40:10Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (slashPos == (-1)) { output.append(desc.substring(1, (endPos - 1))); }else { output.append(desc.substring((slashPos + 1), (endPos - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8590/buggy-version/configuration.src.main.java.com.github.kornilova_l.flamegraph.configuration.MethodConfig.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "b47b552da79e8270dade47942ff7e651b5629ec1", "Url": "https://api.github.com/repos/kornilova-l/FlameViewer", "Date": "2017-12-29T18:49:20Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(robot.isWaiting())) { robot.interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2605/buggy-version/legoMS3_vs2.src.management.EscapeThread.java", "BodyUseAPI": ["robotComponents.Robot.interrupt()"], "Fixed commit": "dfbf36bb094b205416251c971a3e56c63f2812b5", "Url": "https://api.github.com/repos/tungnx94/LegoMS", "Date": "2018-01-08T09:53:58Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (TakePictureCamera.imageFromCamera) imageView.setRotation(90);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3047/buggy-version/app.src.main.java.com.example.onurelbirlik.sketchygui.ImageToLine.java", "BodyUseAPI": [], "Fixed commit": "f99d62e284fd91159f3ee7e77c43676b758e7cd4", "Url": "https://api.github.com/repos/onur-elbirlik/sketchy", "Date": "2018-05-07T17:03:06Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isComplete)) { hashReceived = true; }else { verifyHash(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6705/buggy-version/src.main.java.UDP.Download.java", "BodyUseAPI": [], "Fixed commit": "7a089b5a9872363047c5fc9ee0cb56a66c509125", "Url": "https://api.github.com/repos/BWHoeben/Raspberry", "Date": "2018-04-16T10:34:12Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((supply.size) == 0) { java.lang.System.out.println(\"ERR: List of teachers was empty\"); }else if ((a.getSubstitute()) == null) { java.lang.System.out.println(\"ERR: Teacher not assigned\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2624/buggy-version/src.AssignSubstitutes.InformationHandle.java", "BodyUseAPI": [], "Fixed commit": "b0fa2b4abf7501c271e4909057cfd564d049075e", "Url": "https://api.github.com/repos/Cyfarwydd/CS2043-FinalProject", "Date": "2018-03-27T13:30:23Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(lastMovePlayer)) { nextSolveStep(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4334/buggy-version/core.src.enigma.engine.sorting.SortableArray.java", "BodyUseAPI": [], "Fixed commit": "1c1b478736e8edded0262153c0a223e58158ea7f", "Url": "https://api.github.com/repos/mattstone22133/InteractiveLearningModules", "Date": "2018-01-27T22:23:48Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == other) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8796/buggy-version/src.leola.vm.types.LeoError.java", "BodyUseAPI": [], "Fixed commit": "e501b712563194cc8551011c6924432fb7b93ef3", "Url": "https://api.github.com/repos/tonysparks/leola", "Date": "2018-01-07T22:49:44Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8796/buggy-version/src.leola.vm.types.LeoError.java", "BodyUseAPI": [], "Fixed commit": "e501b712563194cc8551011c6924432fb7b93ef3", "Url": "https://api.github.com/repos/tonysparks/leola", "Date": "2018-01-07T22:49:44Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getMessage().equals(other)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8796/buggy-version/src.leola.vm.types.LeoError.java", "BodyUseAPI": [], "Fixed commit": "e501b712563194cc8551011c6924432fb7b93ef3", "Url": "https://api.github.com/repos/tonysparks/leola", "Date": "2018-01-07T22:49:44Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (match(leola.frontend.SEMICOLON)) return emptyStatement();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8796/buggy-version/src.leola.frontend.Parser.java", "BodyUseAPI": [], "Fixed commit": "e501b712563194cc8551011c6924432fb7b93ef3", "Url": "https://api.github.com/repos/tonysparks/leola", "Date": "2018-01-07T22:49:44Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String,com.da.bookmaker.dao.template.ExpressDaoTemplateImpl.ExpressSetExecuter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((list.size()) > 0) { return list.get(0); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3936/buggy-version/BookmakerCommon.src.com.da.bookmaker.dao.template.ExpressDaoTemplateImpl.java", "BodyUseAPI": ["java.util.List<com.da.bookmaker.bean.ExpressBean>.get(int)"], "Fixed commit": "91437cd31e0b4f4af97f69d091ae83b742c35d33", "Url": "https://api.github.com/repos/Dmitry112233/BMA", "Date": "2018-04-18T09:51:39Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oppositeNum > 36) { oppositeNum -= 36; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4469/buggy-version/src.main.java.RunwayRedeclarationTool.View.TopDownView.java", "BodyUseAPI": [], "Fixed commit": "9f23b6077718a157970d45bde84a6cccf8429e7e", "Url": "https://api.github.com/repos/ElliotAlexander/seg-runway-redeclaration-tool", "Date": "2018-03-07T13:06:01Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i != (bi.rbN20983.getId())) || (i != (bi.rbN20987.getId()))) { utils.ClearAllcontrol.ClearAll(bi.llN2104); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6113/buggy-version/app.src.main.java.com.example.muhammadfarooqui.neonate.N2080_N2107.java", "BodyUseAPI": ["utils.ClearAllcontrol.ClearAll(bi.llN2104)"], "Fixed commit": "011cc634f36320f0244ef4d38f1cfdb7f927025b", "Url": "https://api.github.com/repos/AliAzaz/VASA", "Date": "2018-08-27T14:19:47Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sphereRadius) >= (pers.liufushihai.panocamclient.renderer.PanoRenderer.MAX_SCALE_VALUE)) { sphereRadius = pers.liufushihai.panocamclient.renderer.PanoRenderer.MAX_SCALE_VALUE; }else if ((sphereRadius) <= (pers.liufushihai.panocamclient.renderer.PanoRenderer.MIN_SCALE_VALUE)) { sphereRadius = pers.liufushihai.panocamclient.renderer.PanoRenderer.MIN_SCALE_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1897/buggy-version/app.src.main.java.pers.liufushihai.panocamclient.renderer.PanoRenderer.java", "BodyUseAPI": [], "Fixed commit": "77586f1aa1e7baa10bbf76813c09440b17919219", "Url": "https://api.github.com/repos/MFPCG/panorama-camera-client", "Date": "2018-04-17T03:40:53Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lhsJson == null) || (rhsJson == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3376/buggy-version/stdlib.ballerina-builtin.src.main.java.org.ballerinalang.nativeimpl.reflect.Equals.java", "BodyUseAPI": [], "Fixed commit": "784ed40d5fd0484b6e067d2c6f67c76b14900f5b", "Url": "https://api.github.com/repos/hasithaa/ballerina", "Date": "2018-04-12T02:27:39Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lhsJson == null) && (rhsJson == null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3376/buggy-version/stdlib.ballerina-builtin.src.main.java.org.ballerinalang.nativeimpl.reflect.Equals.java", "BodyUseAPI": [], "Fixed commit": "784ed40d5fd0484b6e067d2c6f67c76b14900f5b", "Url": "https://api.github.com/repos/hasithaa/ballerina", "Date": "2018-04-12T02:27:39Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (votes == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6940/buggy-version/LeoApp.app.src.main.java.de.slg.umfragen.dialog.ResultDialog.java", "BodyUseAPI": [], "Fixed commit": "8a3c447bc9abee570c9a6ca46e25ba4fb1eb250a", "Url": "https://api.github.com/repos/Leo-App/android", "Date": "2018-01-20T00:05:16Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result) == null) tv1.setText(\"Location is null\"); else tv1.setText(result);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8927/buggy-version/Exercise_1_1.app.src.main.java.com.example.administrator.exercise_1_1.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c63eebecbf9ff8c7fd1fe8fc87ea59882fe9ef6a", "Url": "https://api.github.com/repos/quangtruongbk/mobile_application_development", "Date": "2018-03-17T06:47:02Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((identExpression.type) != (Types.LAMBDA)) throw new java.lang.Exception();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6522/buggy-version/src.language.tree.expression.LambdaAppExpression.java", "BodyUseAPI": [], "Fixed commit": "910713760537908211c62ea4cebdd6926e1fb0d2", "Url": "https://api.github.com/repos/lufevida/Scandal", "Date": "2018-07-02T03:28:46Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (total < complement) { low++; }else if (total > complement) { high--; }else { triplets.add(new kata.array.ThreeSumUsingBinarySearch.Triplet(numbers[i], numbers[low], numbers[high])); low++; high--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7119/buggy-version/src.main.java.kata.array.ThreeSumUsingBinarySearch.java", "BodyUseAPI": [], "Fixed commit": "6eb97e021843d58e61c0bc53cbbe83bf1ee27700", "Url": "https://api.github.com/repos/Ramblers-Code/CodeKata", "Date": "2018-03-26T18:27:35Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getTotalDemand()) == 0) && ((getTotalSupply()) == 0)) { return 0; }else { double diff = ((getTotalDemand()) - (getTotalSupply())) / (java.lang.Math.max(getTotalDemand(), getTotalSupply())); return 50.0 - (diff * 10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5489/buggy-version/java-template.Control.src.vgu.control.Control.java", "BodyUseAPI": [], "Fixed commit": "8ac36516d9acaca5d0fcb41871c9092545ef6704", "Url": "https://api.github.com/repos/deadmanproqn/VGU-Local-Power-Simulation", "Date": "2018-10-06T07:04:39Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (materialList != null) { materialLabel.addMouseListener(new java.awt.event.MouseAdapter() { @java.lang.Override public void mouseClicked(java.awt.event.MouseEvent e) { com.mmz.specs.application.gui.client.MaterialListWindow materialListWindow = new com.mmz.specs.application.gui.client.MaterialListWindow(materialList); materialListWindow.setLocation(com.mmz.specs.application.utils.FrameUtils.getFrameOnCenter(com.mmz.specs.application.utils.FrameUtils.findWindow(com.mmz.specs.application.gui.panels.DetailListPanel.super.getRootPane()), materialListWindow)); materialListWindow.setVisible(true); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3390/buggy-version/src.main.java.com.mmz.specs.application.gui.panels.DetailListPanel.java", "BodyUseAPI": ["javax.swing.JLabel.addMouseListener(java.awt.event.MouseAdapter)"], "Fixed commit": "58a9c52f0a70c44914c47003e880898ab08a65fb", "Url": "https://api.github.com/repos/benchdoos/Specs", "Date": "2018-03-30T08:54:34Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.safframework.tony.common.utils.Preconditions.isNotBlank(proxies)) { com.cv4j.proxy.ProxyPool.proxyList.addAll(proxies); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5092/buggy-version/proxypool.src.main.java.com.cv4j.proxy.ProxyPool.java", "BodyUseAPI": ["java.util.concurrent.CopyOnWriteArrayList<com.cv4j.proxy.domain.Proxy>.addAll(java.util.List<com.cv4j.proxy.domain.Proxy>)"], "Fixed commit": "6924a6c0ef1f436f3eda00bdf96a8e4a95f7fa75", "Url": "https://api.github.com/repos/fengzhizi715/ProxyPool", "Date": "2018-01-09T04:54:09Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.safframework.tony.common.utils.Preconditions.isNotBlank(proxy)) { com.cv4j.proxy.ProxyPool.proxyList.add(proxy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5092/buggy-version/proxypool.src.main.java.com.cv4j.proxy.ProxyPool.java", "BodyUseAPI": ["java.util.concurrent.CopyOnWriteArrayList<com.cv4j.proxy.domain.Proxy>.add(com.cv4j.proxy.domain.Proxy)"], "Fixed commit": "6924a6c0ef1f436f3eda00bdf96a8e4a95f7fa75", "Url": "https://api.github.com/repos/fengzhizi715/ProxyPool", "Date": "2018-01-09T04:54:09Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (radioButtonMap.containsKey(radioButtonCell)) { radioButtonMap.remove(radioButtonCell); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8440/buggy-version/app.src.main.java.com.szg_tech.cvdevaluator.core.views.cell.RadioViewManager.java", "BodyUseAPI": ["java.util.Map<com.szg_tech.cvdevaluator.core.views.cell.RadioButtonCell, com.szg_tech.cvdevaluator.entities.evaluation_item_elements.RadioButtonGroupEvaluationItem>.remove(com.szg_tech.cvdevaluator.core.views.cell.RadioButtonCell)"], "Fixed commit": "6069df9e330f2d5dcf84ff13cf2c25536ad9c327", "Url": "https://api.github.com/repos/DemirBond/cvdev", "Date": "2018-08-30T22:48:48Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((side.getX1()) == (side.getX2())) && ((side.getY1()) == (side.getY2()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9889/buggy-version/src.main.Game.java", "BodyUseAPI": [], "Fixed commit": "f04b83f04266a421f9c9c99b49c743d67ece1081", "Url": "https://api.github.com/repos/esummers1/ping", "Date": "2018-01-01T21:12:48Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (o == (org.json.JSONObject.NULL)) o = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1480/buggy-version/server.src.main.java.lsfusion.server.data.type.AbstractType.java", "BodyUseAPI": [], "Fixed commit": "d26f6ce3531bc8b1dd761ff3be84dd8a7ad5ce0b", "Url": "https://api.github.com/repos/lsfusion/platform", "Date": "2018-10-04T16:04:58Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["etcdKeyGetRequest.send().get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (dataTree.getNode().getNodes().isEmpty()) { mousio.etcd4j.EtcdUtil.iterateOverNodes(jNode, dataTree.getNode()); }else { for (mousio.etcd4j.responses.EtcdKeysResponse.EtcdNode node : dataTree.getNode().getNodes()) { mousio.etcd4j.EtcdUtil.iterateOverNodes(jNode, node); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5320/buggy-version/src.main.java.mousio.etcd4j.EtcdUtil.java", "BodyUseAPI": ["mousio.etcd4j.EtcdUtil.iterateOverNodes(com.fasterxml.jackson.databind.node.ObjectNode,dataTree.getNode())", "mousio.etcd4j.responses.EtcdKeysResponse.getNode()", "mousio.etcd4j.responses.EtcdKeysResponse.getNode()", "dataTree.getNode().getNodes()"], "Fixed commit": "7622c57c3518968bd7de18a941c44d187393c2a5", "Url": "https://api.github.com/repos/jurmous/etcd4j", "Date": "2018-01-22T13:54:32Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(etcdJson.isValueNode())) { java.lang.String unflattened = new com.github.wnameless.json.unflattener.JsonUnflattener(mousio.etcd4j.EtcdUtil.jsonToString(mousio.etcd4j.EtcdUtil.flattenJson(etcdJson, \"\"))).withFlattenMode(FlattenMode.MONGODB).withKeyTransformer(new com.github.wnameless.json.flattener.KeyTransformer() { @java.lang.Override public java.lang.String transform(java.lang.String s) { return s.replaceAll(\"__DOT__\", \"\\\\.\"); } }).unflatten(); return mousio.etcd4j.EtcdUtil.mapper.readTree(unflattened); }else { return etcdJson; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5320/buggy-version/src.main.java.mousio.etcd4j.EtcdUtil.java", "BodyUseAPI": ["new com.github.wnameless.json.unflattener.JsonUnflattener(mousio.etcd4j.EtcdUtil.jsonToString(mousio.etcd4j.EtcdUtil.flattenJson(etcdJson, \"\"))).withFlattenMode(FlattenMode.MONGODB).withKeyTransformer(com.github.wnameless.json.flattener.KeyTransformer)", "mousio.etcd4j.EtcdUtil.flattenJson(com.fasterxml.jackson.databind.JsonNode,java.lang.String)", "new com.github.wnameless.json.unflattener.JsonUnflattener(mousio.etcd4j.EtcdUtil.jsonToString(mousio.etcd4j.EtcdUtil.flattenJson(etcdJson, \"\"))).withFlattenMode(FlattenMode.MONGODB).withKeyTransformer(new com.github.wnameless.json.flattener.KeyTransformer() {\n    @java.lang.Override\n    public java.lang.String transform(java.lang.String s) {\n        return s.replaceAll(\"__DOT__\", \"\\\\.\");\n    }\n}).unflatten()", "com.github.wnameless.json.unflattener.JsonUnflattener.withFlattenMode(FlattenMode.MONGODB)", "mousio.etcd4j.EtcdUtil.jsonToString(com.fasterxml.jackson.databind.node.ObjectNode)"], "Fixed commit": "7622c57c3518968bd7de18a941c44d187393c2a5", "Url": "https://api.github.com/repos/jurmous/etcd4j", "Date": "2018-01-22T13:54:32Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dateValue) == null) { dateValue = new java.util.Date(getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9825/buggy-version/src.main.java.com.mweser.model.data_structures.DateString.java", "BodyUseAPI": [], "Fixed commit": "5dd7e470333c906615122a335c4d0a1f8ecce979", "Url": "https://api.github.com/repos/mweser/Bottom-Dollar-Finances", "Date": "2018-03-18T17:31:57Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (constants.Constants.DEV_LOAD_ENEMIES) { game.controllers.EnemyController.loadEnemiesForAllMaps(); game.controllers.EnemyController.setDropsForEnemies(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8279/buggy-version/src.main.java.game.controllers.InitController.java", "BodyUseAPI": [], "Fixed commit": "d0f6ff8e3275a9c17c787f45ec61936d9889e7aa", "Url": "https://api.github.com/repos/raLaaaa/dungeonRunner", "Date": "2018-07-31T09:44:52Z"},
{"Line": "=>1134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.yawlfoundation.yawl.engine.YTask.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (taskName == null) taskName = task.getID();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/485/buggy-version/src.org.yawlfoundation.yawl.engine.YNetRunner.java", "BodyUseAPI": [], "Fixed commit": "ea91c704a78f40988398271a7042545b1baed691", "Url": "https://api.github.com/repos/mlawry/yawl", "Date": "2018-03-05T22:47:08Z"},
{"Line": "=>937", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jason.bb.BeliefBase.getCandidateBeliefs(beliefToDel.getPredicateIndicator())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (il != null) { while (il.hasNext()) { jason.asSyntax.Literal linBB = il.next(); if (u.unifies(linBB, beliefToDel)) { il.remove(); beliefToDel = ((jason.asSyntax.Literal) (beliefToDel.capply(u))); removed = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4238/buggy-version/src.main.java.jason.asSemantics.Agent.java", "BodyUseAPI": ["java.util.Iterator<jason.asSyntax.Literal>.remove()", "java.util.Iterator<jason.asSyntax.Literal>.next()", "java.util.Iterator<jason.asSyntax.Literal>.hasNext()"], "Fixed commit": "47623e3e119de551b9c1bb20118065e69031eeae", "Url": "https://api.github.com/repos/jason-lang/jason", "Date": "2018-09-08T02:14:45Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((editable.length()) != 0) arr[i] = java.lang.Integer.parseInt(editable.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8653/buggy-version/app.src.main.java.com.algo.android.algoapp.MyAdapter.java", "BodyUseAPI": ["java.lang.Integer.parseInt(editable.toString())", "android.text.Editable.toString()"], "Fixed commit": "880621b3444bcea69d433c24c23b63ab2bc2c008", "Url": "https://api.github.com/repos/KshitijSharma745/AlgoApp", "Date": "2018-10-14T12:28:10Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paramArrayCount == 0) { stmt.addBatch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5580/buggy-version/stdlib.ballerina-builtin.src.main.java.org.ballerinalang.nativeimpl.sql.actions.AbstractSQLAction.java", "BodyUseAPI": [], "Fixed commit": "bccf3bba17db50d84eed758bd2ba4c0227a83416", "Url": "https://api.github.com/repos/lafernando/ballerina-1", "Date": "2018-04-12T01:16:57Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.vSocService) != null) { this.vSocService.addOutputStateChanges(this.clientMsg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9231/buggy-version/tp_3_vsoc_gui.src.main.java.com.stthomas.seis.vsoc.gui.model.VSocUI.java", "BodyUseAPI": [], "Fixed commit": "f332b4a6b394c6cd4ac64f47b7c4e658c0fd1ac6", "Url": "https://api.github.com/repos/rmroy87/tp_3_vsoc_gui", "Date": "2018-05-12T02:39:55Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((navigation.getSelectedItemId()) == (R.id.navigation_garden)) navigation.setSelectedItemId(R.id.navigation_home);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5271/buggy-version/app.src.main.java.ff.ecochallenges.MainActivity.java", "BodyUseAPI": ["android.support.design.widget.BottomNavigationView.setSelectedItemId(R.id.navigation_home)"], "Fixed commit": "244a672dd0565ae56f6179f64d2765d262942000", "Url": "https://api.github.com/repos/kirasisi/IEproject", "Date": "2018-09-30T04:36:15Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iKey == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6581/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sharding.auto.OAutoShardingMurmurStrategy.java", "BodyUseAPI": [], "Fixed commit": "ec8c8e916443f422fc226aaad7ac855d27b29a98", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2018-08-17T12:11:47Z"},
{"Line": "=>4313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cmp.isRTL()) { textCmp.setComponentOrientation(java.awt.ComponentOrientation.RIGHT_TO_LEFT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8312/buggy-version/Ports.JavaSE.src.com.codename1.impl.javase.JavaSEPort.java", "BodyUseAPI": [], "Fixed commit": "784c9ba20edada39ded30feb38c64cbd85c44995", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2018-06-06T13:34:15Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((firstNorm == 0) || (secondNorm == 0)) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1083/buggy-version/unmei-math.src.main.java.com.arunge.unmei.ml.math.dist.CosineSimilarity.java", "BodyUseAPI": [], "Fixed commit": "e07ed6025634c02db3e4dddcc7f3a9367be88797", "Url": "https://api.github.com/repos/AJRunge523/unmei", "Date": "2018-05-24T00:15:11Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((firstNorm == 0) || (secondNorm == 0)) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1083/buggy-version/unmei-math.src.main.java.com.arunge.unmei.ml.math.dist.CosineSimilarity.java", "BodyUseAPI": [], "Fixed commit": "e07ed6025634c02db3e4dddcc7f3a9367be88797", "Url": "https://api.github.com/repos/AJRunge523/unmei", "Date": "2018-05-24T00:15:11Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((replayRecordService) == null) { org.ikasan.builder.FlowBuilder.logger.info(((((\"Record/Replay is not supported for ModuleName[\" + (moduleName)) + \"] Flowname[\") + (flowName)) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5022/buggy-version/ikasaneip.builder.jar.src.main.java.org.ikasan.builder.FlowBuilder.java", "BodyUseAPI": [], "Fixed commit": "69d1da89c7a45767d463c2540a42f6d15bf9b6f1", "Url": "https://api.github.com/repos/ikasanEIP/ikasan", "Date": "2018-02-07T19:13:03Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resubmissionService) == null) { org.ikasan.builder.FlowBuilder.logger.info(((((\"Resubmission is not supported for ModuleName[\" + (moduleName)) + \"] Flowname[\") + (flowName)) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5022/buggy-version/ikasaneip.builder.jar.src.main.java.org.ikasan.builder.FlowBuilder.java", "BodyUseAPI": [], "Fixed commit": "69d1da89c7a45767d463c2540a42f6d15bf9b6f1", "Url": "https://api.github.com/repos/ikasanEIP/ikasan", "Date": "2018-02-07T19:13:03Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.modeldriven.alf.syntax.common.impl.ElementReferenceImpl.getSignal()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (signal != null) { for (org.modeldriven.alf.syntax.common.impl.ElementReference property : signal.getImpl().getAttributes()) { parameters.add(org.modeldriven.alf.syntax.common.impl.ElementReferenceImpl.parameterFromProperty(property).getImpl().getReferent()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3918/buggy-version/org.modeldriven.alf.src.org.modeldriven.alf.syntax.common.impl.ElementReferenceImpl.java", "BodyUseAPI": ["org.modeldriven.alf.syntax.common.impl.ElementReference.getImpl()", "signal.getImpl().getAttributes()"], "Fixed commit": "da3248a7ccb641cd3ddb5523630e34344798905f", "Url": "https://api.github.com/repos/ModelDriven/Alf-Reference-Implementation", "Date": "2018-01-25T00:53:19Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<jsc.kit.turntable.GiftEntity>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (count == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5647/buggy-version/library.src.main.java.jsc.kit.turntable.ChassisView.java", "BodyUseAPI": [], "Fixed commit": "2cb54a22d0f9ebf7df8697bb4a014531944739b9", "Url": "https://api.github.com/repos/JustinRoom/JSCKit", "Date": "2018-04-04T07:36:45Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.stage.FileChooser.showOpenDialog(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (distancesFile.exists()) { this.distancesFile = distancesFile.toString(); filePath.setText(distancesFile.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3177/buggy-version/src.Map.MapController.java", "BodyUseAPI": ["java.io.File.toString()", "javafx.scene.control.Label.setText(java.lang.String)", "java.io.File.toString()"], "Fixed commit": "7f87056172cd3fd843735a35e5564a8c19bfbe7b", "Url": "https://api.github.com/repos/Robo-Hamsters/Hackathon2k18", "Date": "2018-05-05T23:04:09Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getPreferenceHelper().getPreferenceType(methodPrefAnnotation.key())) == null) convertToClass = arg.getClass(); else convertToClass = getPreferenceHelper().getPreferenceType(methodPrefAnnotation.key());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8054/buggy-version/advancedpreference.src.main.java.com.fastsoft.advancedpreference.strateges.VoidStrategy.java", "BodyUseAPI": ["com.fastsoft.advancedpreference.anotations.PreferenceOperation.key()", "getPreferenceHelper().getPreferenceType(methodPrefAnnotation.key())"], "Fixed commit": "0a39f6e47f8f114e5b3fb4ee4e5b3d4c8b1d4f38", "Url": "https://api.github.com/repos/fristailura2/AdvancedPreference", "Date": "2018-09-05T21:42:59Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (namesayer.PracticeMenuController.getCurrentName().contains(\"-\")) { tempName = namesayer.PracticeMenuController.getCurrentName().substring(0, namesayer.PracticeMenuController.getCurrentName().lastIndexOf(\"-\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6537/buggy-version/src.namesayer.PracticeMenuController.java", "BodyUseAPI": [], "Fixed commit": "b89bf3a6a2c6af42e893f39117253024b84f1083", "Url": "https://api.github.com/repos/raghavgarg32/Name-Sayer", "Date": "2018-09-23T08:11:22Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ConfigOptions.worldGenSettings.netherVoid)) super.buildSurfaces(p_185937_1_, p_185937_2_, primer);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2/buggy-version/src.main.java.com.bartz24.voidislandcontrol.world.ChunkGeneratorNetherVoid.java", "BodyUseAPI": [], "Fixed commit": "8ef9ef0de8ed71bb791eb9f59183b5058eddbbf1", "Url": "https://api.github.com/repos/Bartz24/VoidIslandControl", "Date": "2018-04-14T19:25:57Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ConfigOptions.worldGenSettings.netherVoid)) super.prepareHeights(p_185936_1_, p_185936_2_, primer);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2/buggy-version/src.main.java.com.bartz24.voidislandcontrol.world.ChunkGeneratorNetherVoid.java", "BodyUseAPI": [], "Fixed commit": "8ef9ef0de8ed71bb791eb9f59183b5058eddbbf1", "Url": "https://api.github.com/repos/Bartz24/VoidIslandControl", "Date": "2018-04-14T19:25:57Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (survey != null) { survey.getValuesFromDB(); org.eyeseetea.malariacare.data.database.utils.Session.setMalariaSurveyDB(survey); mDashboardActivity.initSurvey(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5541/buggy-version/app.src.cnm.java.org.eyeseetea.malariacare.strategies.DashboardActivityStrategy.java", "BodyUseAPI": ["org.eyeseetea.malariacare.data.database.utils.Session.setMalariaSurveyDB(org.eyeseetea.malariacare.data.database.model.SurveyDB)", "org.eyeseetea.malariacare.data.database.model.SurveyDB.getValuesFromDB()"], "Fixed commit": "b5eb466e4f84dd8885fea1bca495f9c6bed9f6c5", "Url": "https://api.github.com/repos/EyeSeeTea/pictureapp", "Date": "2018-05-22T11:16:40Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uper == null) || (\"\".equals(uper))) { redirectAttributes.addFlashAttribute(\"msg\", \"\u8f93\u5165\u4f60\u540d\u5b57\uff0cbro\"); return \"redirect:index\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9419/buggy-version/src.main.java.ex.aaronfae.controller.UploadController.java", "BodyUseAPI": [], "Fixed commit": "ec4c6516e4ad2d0d522e84bc35048e28bd05c3f1", "Url": "https://api.github.com/repos/iiiiiitboy/up-mvc", "Date": "2018-05-07T07:34:09Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (javaObject instanceof java.lang.Enum) { java.lang.Enum<?> en = ((java.lang.Enum<?>) (javaObject)); return java.lang.String.format(\"[\\\"%s\\\", \\\"%s\\\"]\", en.getClass().getSigners(), en.name()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5432/buggy-version/yukthi-data.src.main.java.com.yukthitech.persistence.conversion.impl.JsonWithTypeConverter.java", "BodyUseAPI": [], "Fixed commit": "95fbb5cb1ff115db0e83e9fb4ae16b1a82192a36", "Url": "https://api.github.com/repos/yukthitech/utils", "Date": "2018-05-02T03:34:38Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jsonObject.getString(\"characters\").equals(\"null\")) return player;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8633/buggy-version/client.core.src.com.mygdx.game.requests.Player.java", "BodyUseAPI": [], "Fixed commit": "6d0c55539516f83e4e588b6658c8eefd9b2a2205", "Url": "https://api.github.com/repos/isd-soft/motivision", "Date": "2018-07-10T13:11:49Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jsonObject.isNull(\"characters\")) return player;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8633/buggy-version/client.core.src.com.mygdx.game.requests.Player.java", "BodyUseAPI": [], "Fixed commit": "6d0c55539516f83e4e588b6658c8eefd9b2a2205", "Url": "https://api.github.com/repos/isd-soft/motivision", "Date": "2018-07-10T13:11:49Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (value != null) { if (value.equals(\"Male\")) gender.setSelection(1); else if (value.equals(\"Female\")) gender.setSelection(2); else gender.setSelection(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/395/buggy-version/app.src.main.java.com.me.travelapp.ProfileActivity.ProfileActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "d6407f8d2a5ad71fd65e5d5138ed86642a30de07", "Url": "https://api.github.com/repos/goutham-kalikrishna/TravelApp", "Date": "2018-04-26T17:25:17Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((opnd.charAt(0)) == 'u') { opnd = \"%\" + opnd; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5/buggy-version/llvm.LLVMReadExpressionType.java", "BodyUseAPI": [], "Fixed commit": "5446acd44be006624ffb21b8d704515c880c1e0c", "Url": "https://api.github.com/repos/zuoyuanh/cpe431", "Date": "2018-10-17T00:09:18Z"},
{"Line": "=>1368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(anim.reloading)) && (model.lefthandPump)) { org.lwjgl.opengl.GL11.glTranslatef((-((model.leftArmPos.x) - ((java.lang.Math.abs(((anim.lastPumped) + (((anim.pumped) - (anim.lastPumped)) * (com.flansmod.client.model.RenderGun.smoothing))))) / 4))), model.leftArmPos.y, model.leftArmPos.z); org.lwjgl.opengl.GL11.glRotatef(model.leftArmRot.y, 0.0F, 1.0F, 0.0F); org.lwjgl.opengl.GL11.glRotatef(model.leftArmRot.z, 0.0F, 0.0F, 1.0F); org.lwjgl.opengl.GL11.glRotatef(model.leftArmRot.x, 1.0F, 0.0F, 0.0F); }else if (!(anim.reloading)) { org.lwjgl.opengl.GL11.glRotatef(model.leftArmRot.y, 0.0F, 1.0F, 0.0F); org.lwjgl.opengl.GL11.glRotatef(model.leftArmRot.z, 0.0F, 0.0F, 1.0F); org.lwjgl.opengl.GL11.glRotatef(model.leftArmRot.x, 1.0F, 0.0F, 0.0F); org.lwjgl.opengl.GL11.glTranslatef(model.leftArmPos.x, model.leftArmPos.y, model.leftArmPos.z); }else if ((effectiveReloadAnimationProgress < 0.5) && ((model.stagedleftArmReloadPos.x) != 0)) { org.lwjgl.opengl.GL11.glRotatef(model.leftArmReloadRot.y, 0.0F, 1.0F, 0.0F); org.lwjgl.opengl.GL11.glRotatef(model.leftArmReloadRot.z, 0.0F, 0.0F, 1.0F); org.lwjgl.opengl.GL11.glRotatef(model.leftArmReloadRot.x, 1.0F, 0.0F, 0.0F); org.lwjgl.opengl.GL11.glTranslatef(model.leftArmReloadPos.x, model.leftArmReloadPos.y, model.leftArmReloadPos.z); }else if ((effectiveReloadAnimationProgress > 0.5) && ((model.stagedleftArmReloadPos.x) != 0)) { org.lwjgl.opengl.GL11.glRotatef(model.stagedleftArmReloadRot.y, 0.0F, 1.0F, 0.0F); org.lwjgl.opengl.GL11.glRotatef(model.stagedleftArmReloadRot.z, 0.0F, 0.0F, 1.0F); org.lwjgl.opengl.GL11.glRotatef(model.stagedleftArmReloadRot.x, 1.0F, 0.0F, 0.0F); org.lwjgl.opengl.GL11.glTranslatef(model.stagedleftArmReloadPos.x, model.stagedleftArmReloadPos.y, model.stagedleftArmReloadPos.z); }else { org.lwjgl.opengl.GL11.glRotatef(model.leftArmReloadRot.y, 0.0F, 1.0F, 0.0F); org.lwjgl.opengl.GL11.glRotatef(model.leftArmReloadRot.z, 0.0F, 0.0F, 1.0F); org.lwjgl.opengl.GL11.glRotatef(model.leftArmReloadRot.x, 1.0F, 0.0F, 0.0F); org.lwjgl.opengl.GL11.glTranslatef(model.leftArmReloadPos.x, model.leftArmReloadPos.y, model.leftArmReloadPos.z); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3137/buggy-version/src.main.java.com.flansmod.client.model.RenderGun.java", "BodyUseAPI": ["org.lwjgl.opengl.GL11.glRotatef(model.leftArmReloadRot.y,float,float,float)", "org.lwjgl.opengl.GL11.glTranslatef((-((model.leftArmPos.x) - ((java.lang.Math.abs(((anim.lastPumped) + (((anim.pumped) - (anim.lastPumped)) * (com.flansmod.client.model.RenderGun.smoothing))))) / 4))),model.leftArmPos.y,model.leftArmPos.z)", "org.lwjgl.opengl.GL11.glRotatef(model.leftArmRot.y,float,float,float)", "org.lwjgl.opengl.GL11.glRotatef(model.leftArmRot.z,float,float,float)", "org.lwjgl.opengl.GL11.glRotatef(model.stagedleftArmReloadRot.z,float,float,float)", "org.lwjgl.opengl.GL11.glRotatef(model.leftArmReloadRot.x,float,float,float)", "org.lwjgl.opengl.GL11.glRotatef(model.leftArmReloadRot.z,float,float,float)", "org.lwjgl.opengl.GL11.glTranslatef(model.leftArmReloadPos.x,model.leftArmReloadPos.y,model.leftArmReloadPos.z)", "org.lwjgl.opengl.GL11.glRotatef(model.stagedleftArmReloadRot.y,float,float,float)", "org.lwjgl.opengl.GL11.glRotatef(model.leftArmReloadRot.z,float,float,float)", "org.lwjgl.opengl.GL11.glTranslatef(model.leftArmReloadPos.x,model.leftArmReloadPos.y,model.leftArmReloadPos.z)", "org.lwjgl.opengl.GL11.glTranslatef(model.leftArmPos.x,model.leftArmPos.y,model.leftArmPos.z)", "org.lwjgl.opengl.GL11.glRotatef(model.leftArmRot.x,float,float,float)", "org.lwjgl.opengl.GL11.glRotatef(model.leftArmReloadRot.x,float,float,float)", "java.lang.Math.abs(((anim.lastPumped) + (((anim.pumped) - (anim.lastPumped)) * (com.flansmod.client.model.RenderGun.smoothing))))", "org.lwjgl.opengl.GL11.glRotatef(model.leftArmRot.y,float,float,float)", "org.lwjgl.opengl.GL11.glRotatef(model.leftArmReloadRot.y,float,float,float)", "org.lwjgl.opengl.GL11.glTranslatef(model.stagedleftArmReloadPos.x,model.stagedleftArmReloadPos.y,model.stagedleftArmReloadPos.z)", "org.lwjgl.opengl.GL11.glRotatef(model.leftArmRot.x,float,float,float)", "org.lwjgl.opengl.GL11.glRotatef(model.stagedleftArmReloadRot.x,float,float,float)", "org.lwjgl.opengl.GL11.glRotatef(model.leftArmRot.z,float,float,float)"], "Fixed commit": "7bbd1b276bc720d7b7dd77a355cb12351cfe2d4e", "Url": "https://api.github.com/repos/war-monger/Flan-s-Mod-Plus-War_Monger", "Date": "2018-10-09T16:36:26Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["app.com.tvrecyclerview.TvRecyclerView.getAdapter()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((adapter.getItemCount()) > 0) { recyclerView.setItemSelected(0); recyclerView.getChildAt(0).requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6228/buggy-version/serenity-app.src.main.java.us.nineworlds.serenity.ui.browser.movie.MovieBrowserActivity.java", "BodyUseAPI": [], "Fixed commit": "59de2645f824ddc0fd92ac96e357d129c0c79839", "Url": "https://api.github.com/repos/NineWorlds/serenity-android", "Date": "2018-10-05T03:34:29Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == resource) { throw new java.lang.IllegalArgumentException((\"invalid resource name: \" + resourceName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7488/buggy-version/solr.solrj.src.java.org.apache.solr.common.util.Utils.java", "BodyUseAPI": [], "Fixed commit": "9e0e301f9fe4a1b5e33925ae4d2848ead71cca25", "Url": "https://api.github.com/repos/apache/lucene-solr", "Date": "2018-02-23T17:43:22Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((UserController.loggedUser) != null) { app.model.Reservation reservation = new app.model.Reservation(request.getParameter(\"time\"), java.lang.Integer.parseInt(request.getParameter(\"numberOfPersons\")), java.lang.Integer.parseInt(\"0\"), UserController.loggedUser, restaurantRepository.getByName(request.getParameter(\"restaurantName\"))); reservationRepository.save(reservation); return \"redirect:/restaurants.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6531/buggy-version/src.main.java.app.controller.ReservationController.java", "BodyUseAPI": [], "Fixed commit": "d93db2b0616c807221edcc17232d2f0d74f50ec2", "Url": "https://api.github.com/repos/nemanjagajic/Reserve", "Date": "2018-06-30T13:41:26Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["_context.getDictionary().getItemByNaaccrId(item.getNaaccrId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(NaaccrXmlDictionaryUtils.NAACCR_PADDING_LEFT_BLANK.equals(itemDef.getPadding()))) && (!(NaaccrXmlDictionaryUtils.NAACCR_PADDING_RIGHT_BLANK.equals(itemDef.getPadding())))) throw new java.lang.RuntimeException((\"Unknown padding option: \" + (itemDef.getPadding())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6508/buggy-version/src.main.java.com.imsweb.naaccrxml.runtime.NaaccrPatientConverter.java", "BodyUseAPI": ["com.imsweb.naaccrxml.runtime.RuntimeNaaccrDictionaryItem.getPadding()"], "Fixed commit": "948dda28c5fe3b5cb549289f8e0d4b2bac0822e2", "Url": "https://api.github.com/repos/imsweb/naaccr-xml", "Date": "2018-05-21T18:44:05Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((owner.getName()) == null) { java.lang.String ownerName = \"\"; }else { java.lang.String ownerName = owner.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6340/buggy-version/MainProject.Country.java", "BodyUseAPI": [], "Fixed commit": "e6499921e7b75403cc55342edf2194a7ead25b22", "Url": "https://api.github.com/repos/pjmchale/cpsc", "Date": "2018-02-28T19:43:26Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (timeToSleep > 0) { java.lang.Thread.sleep(timeToSleep); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5869/buggy-version/src.engine.GameEngine.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "b826efea1d744570c4e6719ab63f60a186629f13", "Url": "https://api.github.com/repos/TheAIBot/panzer-3000", "Date": "2018-01-18T06:35:19Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (first) { low = price; first = false; }else if ((price.compareTo(low)) == (-1)) low = price;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/367/buggy-version/src.com.sm.net.apc.view.ProductEditor.java", "BodyUseAPI": [], "Fixed commit": "05582b3bd4e1412bf1dfbc97f96b476e178b440e", "Url": "https://api.github.com/repos/SM-Net-Application/sm-net-project-2", "Date": "2018-07-17T11:42:08Z"},
{"Line": "=>662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["boa.types.Ast.Statement.getStatements(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(s.hasExpression())) hasdefault = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5349/buggy-version/src.java.boa.graphs.cfg.CFG.java", "BodyUseAPI": [], "Fixed commit": "27b8c3391dd6df2034e7047c691befa004b673cb", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2018-05-06T15:58:20Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (plot.getFlag(Flags.WEATHER).isPresent()) { player.setTime(java.lang.Long.MAX_VALUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3150/buggy-version/Core.src.main.java.com.plotsquared.listener.PlotListener.java", "BodyUseAPI": [], "Fixed commit": "4ff02831f395d309aed79031b8a7b32c18e5b4df", "Url": "https://api.github.com/repos/IntellectualSites/PlotSquared", "Date": "2018-01-10T05:58:37Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((0 <= currentX) && (currentX < (this.rows))) && (0 <= currentY)) && (currentY < (this.cols))) { if ((!(gameBoard[currentX][currentY].isAPiece())) && (!(gameBoard[currentX][currentY].isMarked()))) { gameBoard[currentX][currentY].setMark(); gameBoard[currentX][currentY].setColor(this.playerColor); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1854/buggy-version/INF-122-Final.src.Othello.java", "BodyUseAPI": ["gameBoard[currentX][currentY].isAPiece()", "gameBoard[currentX][currentY].setMark()", "gameBoard[currentX][currentY].isMarked()", "gameBoard[currentX][currentY].setColor(java.awt.Color)"], "Fixed commit": "7341e3e094be9ce03775e92cab0be32baeaea128", "Url": "https://api.github.com/repos/joshuadjacoby/INF-122-Final", "Date": "2018-03-13T21:33:20Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aeonbits.owner.ConfigURIFactory.fixBackslashesToSlashes(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fixed.equals(org.aeonbits.owner.ConfigURIFactory.FILE_PROTOCOL)) { return new java.net.URI(\"\"); }else { java.lang.String path = fixSpacesToPercentTwenty(fixed); return new java.net.URI(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4100/buggy-version/owner.src.main.java.org.aeonbits.owner.ConfigURIFactory.java", "BodyUseAPI": ["org.aeonbits.owner.ConfigURIFactory.fixSpacesToPercentTwenty(java.lang.String)"], "Fixed commit": "20f085a1f20cfdc256f148243d7c0b0af9eb4e83", "Url": "https://api.github.com/repos/jonn-smith/owner", "Date": "2018-04-09T20:53:28Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.inventory.CraftItemEvent.getCurrentItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((jp.archesporeadventure.main.skills.fishing.FishingSkillController) (jp.archesporeadventure.main.ArchesporeAdventureMain.getSkillController(SkillType.FISHING))).getRegisteredRecipes().contains(craftedItem)) { if ((jp.archesporeadventure.main.ArchesporeAdventureMain.getPlayerSkillsController().getPlayerSkillStats(player, SkillType.FISHING).get(0)) >= (getMinimumLevel())) { return true; } craftEvent.setCancelled(true); player.closeInventory(); player.sendMessage(((((net.md_5.bungee.api.ChatColor.RED) + \"You must be level \") + (getMinimumLevel())) + \" in fishing to craft that item!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1207/buggy-version/src.jp.archesporeadventure.main.abilities.fishing.CulinaryFisherAbility.java", "BodyUseAPI": [], "Fixed commit": "f216d38d56fa14e473c1d52b87057182578ba9f2", "Url": "https://api.github.com/repos/Archespore/ArchesporeAdventure", "Date": "2018-08-22T07:37:05Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2875/buggy-version/lib.src.main.java.site.binghai.lib.service.BaseService.java", "BodyUseAPI": [], "Fixed commit": "757ef597cf44ea8c612a8361593648b5c334b934", "Url": "https://api.github.com/repos/IceSeaOnly/dayu", "Date": "2018-10-25T05:05:01Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((projectNameWithTeamPath) != null) { projectNameWithTeamPath = projectNameWithTeamPath.replaceAll(\"/\", \"\\\\\\\\\"); projectName = extractProjectName(projectNameWithTeamPath); team = extractTeamPath(projectNameWithTeamPath); project = new com.checkmarx.cxconsole.clients.general.dto.ProjectDTO(projectName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1065/buggy-version/cli.src.main.java.com.checkmarx.cxconsole.parameters.CLIMandatoryParameters.java", "BodyUseAPI": [], "Fixed commit": "4c249c884b126d17176afdd6d97bc33c3ce1aebf", "Url": "https://api.github.com/repos/CxRepositories/CLI", "Date": "2018-03-14T06:30:27Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3896/buggy-version/src.org.exist.xquery.value.AbstractSequence.java", "BodyUseAPI": [], "Fixed commit": "1cc84e9afcf0c609096ed0ceeea3e9bb6eee2408", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2018-07-05T11:41:42Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numChars == 0) { if (numGaps > 0) { return Nucleotides.INSTANCE; } numChars = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5030/buggy-version/src.dr.evolution.datatype.DataType.java", "BodyUseAPI": [], "Fixed commit": "2c8c479cf8db7befbbecf5f9fea3940c8c144fbd", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2018-06-10T10:05:55Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastThreeRolls[2]) != (lastThreeRolls[1])) { lastThreeRolls = new int[]{ 20, 30, 40 }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7105/buggy-version/src.main.java.com.infinity.euler.num080.Answer084.java", "BodyUseAPI": [], "Fixed commit": "09066d18d01f19687c30a811a090616d04a577eb", "Url": "https://api.github.com/repos/jeffrichley/euler", "Date": "2018-09-24T13:01:17Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ad.getId()) == null) ad.setId(0L);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9435/buggy-version/src.main.java.com.dhbw.wwi16.b2.portfolioaufgabe1.web.AdEditServlet.java", "BodyUseAPI": ["com.dhbw.wwi16.b2.portfolioaufgabe1.jpa.Ad.setId(long)"], "Fixed commit": "731adff8cd462d8413172e9ecf67a1405e0f5a8d", "Url": "https://api.github.com/repos/x7Git/PortfolioAufgabe_1", "Date": "2018-02-28T12:52:41Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uaa.service.login.UaaLoginService.verifyGraph(createUaaUserDTO.getGraphCaptchaCodeId(),createUaaUserDTO.getGraphCaptchaCode())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!b) { return prepareReturnResult(ReturnCode.ERROR_GRAPH_CODE, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1831/buggy-version/src.main.java.uaa.web.rest.UaaUserResource.java", "BodyUseAPI": [], "Fixed commit": "9e63bc64d0bc68eb32211453e81e72d0a4955908", "Url": "https://api.github.com/repos/xuxueyang/gediaoUaa", "Date": "2018-08-04T10:10:14Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cpjd.robluscouter.io.IO.deserializeObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cloudSettings == null) { cloudSettings = new com.cpjd.robluscouter.models.RSyncSettings(); saveCloudSettings(cloudSettings); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3528/buggy-version/app.src.main.java.com.cpjd.robluscouter.io.IO.java", "BodyUseAPI": [], "Fixed commit": "508c4c0de23f1d05a49ad9ff41836e08c67e414b", "Url": "https://api.github.com/repos/wdavies973/RobluScouter", "Date": "2018-03-06T14:10:09Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.storage.StorageHandlerCheckArchiveVersionWorkerImpl.getProperty(org.alfresco.service.cmr.repository.NodeRef,VgrMaModel.PROP_PUBLIC_INDEX_AVAILABLE_FROM)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (earlierVersionAvailableFrom != null) { if ((!(xmlService.updateValueInFoundNodes(indexXml, revisedAvailableToxPath, se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.storage.StorageHandlerCheckArchiveVersionWorkerImpl.DATE_ISO8601_FORMAT.format(date)))) || (!(xmlService.updateValueInFoundNodes(indexXml, revisedAvailableFromxPath, se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.storage.StorageHandlerCheckArchiveVersionWorkerImpl.DATE_ISO8601_FORMAT.format(earlierVersionAvailableFrom))))) { se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.storage.StorageHandlerCheckArchiveVersionWorkerImpl.LOG.error((\"Error updating revised available dates in index.xml for node: \" + archiveNode)); return new se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.IngestStatusObject(STATUS_STORAGE_HANDLER_ERROR_UPDATING_REVISED_DATE); }else { java.util.List<org.alfresco.service.cmr.repository.NodeRef> provXmlNodeRefs = getProvXmlNodeRefs(archiveNode); if ((provXmlNodeRefs == null) || (provXmlNodeRefs.isEmpty())) { return new se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.IngestStatusObject(STATUS_STORAGE_HANDLER_ERROR_PROV_MISSING_XML_FILE); } if (archivalFolderNodeRef != archiveNode) { result = updateIndexOfChanges(indexXml, nodeRef, provXmlNodeRefs.get(0), archivalObjectId, archiveNode, date); } } }else { if (!(xmlService.updateValueInFoundNodes(indexXml, revisedAvailableToxPath, se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.storage.StorageHandlerCheckArchiveVersionWorkerImpl.DATE_ISO8601_FORMAT.format(date)))) { se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.storage.StorageHandlerCheckArchiveVersionWorkerImpl.LOG.error((\"Error updating revised available dates in index.xml for node: \" + archiveNode)); return new se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.IngestStatusObject(STATUS_STORAGE_HANDLER_ERROR_UPDATING_REVISED_DATE); }else { java.util.List<org.alfresco.service.cmr.repository.NodeRef> provXmlNodeRefs = getProvXmlNodeRefs(archiveNode); if ((provXmlNodeRefs == null) || (provXmlNodeRefs.isEmpty())) { return new se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.IngestStatusObject(STATUS_STORAGE_HANDLER_ERROR_PROV_MISSING_XML_FILE); } if (archivalFolderNodeRef != archiveNode) { result = updateIndexOfChanges(indexXml, nodeRef, provXmlNodeRefs.get(0), archivalObjectId, archiveNode, date); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5683/buggy-version/platform-mellanarkiv.src.main.java.se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.storage.StorageHandlerCheckArchiveVersionWorkerImpl.java", "BodyUseAPI": ["se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.storage.StorageHandlerCheckArchiveVersionWorkerImpl.updateValueInFoundNodes(org.alfresco.service.cmr.repository.NodeRef,java.lang.String,java.lang.String)", "java.text.DateFormat.format(java.util.Date)"], "Fixed commit": "b57c6146613b6bc4a14837b98cc26f3f75f50308", "Url": "https://api.github.com/repos/Vastra-Gotalandsregionen/alfresco-mellanarkiv", "Date": "2018-05-31T09:56:48Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((com.badlogic.gdx.backends.android.AndroidGraphics) (app.getGraphics())).getView()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (view instanceof com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20) { if ((((com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20) (view)).preferredInputType) != preferredInputType) { ((com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20) (view)).preferredInputType = preferredInputType; manager.restartInput(view); } }else if (view instanceof com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18) { if ((((com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18) (view)).preferredInputType) != preferredInputType) { ((com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18) (view)).preferredInputType = preferredInputType; manager.restartInput(view); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5652/buggy-version/backends.gdx-backend-android.src.com.badlogic.gdx.backends.android.AndroidInput.java", "BodyUseAPI": ["android.view.inputmethod.InputMethodManager.restartInput(android.view.View)", "android.view.inputmethod.InputMethodManager.restartInput(android.view.View)"], "Fixed commit": "31364a5978ea2420b3d61398c8db110d5a06c15f", "Url": "https://api.github.com/repos/PokeMMO/libgdx", "Date": "2018-04-27T17:58:48Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(renameSingleFile(srcPath, destPath))) { throw new java.io.IOException((((\"Failed to rename \" + (srcPath)) + \" -> \") + (destPath))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3615/buggy-version/smart-hadoop-support.smart-hadoop.src.main.java.org.smartdata.hdfs.action.RenameFileAction.java", "BodyUseAPI": [], "Fixed commit": "df47926014e2b0423ebcdfe98486bb5fb8e46d8f", "Url": "https://api.github.com/repos/yaohuan771634/SSM", "Date": "2018-06-12T00:42:48Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) { android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.ciphra.android.memesmash.MemeActivity.class); startActivity(intent); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3265/buggy-version/app.src.main.java.com.ciphra.android.memesmash.MemeUploadActivity.java", "BodyUseAPI": [], "Fixed commit": "52d4577ee336b0fcc51f50fc6e26c4fefc17c149", "Url": "https://api.github.com/repos/clavio/MemeSmash", "Date": "2018-07-18T20:36:59Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fields.length()) > 1) { fieldString = fields.substring(0, ((fields.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5476/buggy-version/jrand-annotation-processor.src.main.java.me.xdrop.jrand.annotation.processing.ForkClassGenerator.java", "BodyUseAPI": ["java.lang.StringBuilder.substring(int,int)", "java.lang.StringBuilder.length()"], "Fixed commit": "a383d89e0ccebf009726d4693379163c274fffce", "Url": "https://api.github.com/repos/xdrop/jRand", "Date": "2018-01-08T21:03:29Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(Qmast.containsKey(p))) { Qmast.put(p, new javafx.util.Pair(0.0, 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6747/buggy-version/mastUtils.java", "BodyUseAPI": ["java.util.Map<javafx.util.Pair<java.lang.Integer, org.ggp.base.util.statemachine.Move>, javafx.util.Pair<java.lang.Double, java.lang.Integer>>.put(javafx.util.Pair<java.lang.Integer, org.ggp.base.util.statemachine.Move>,javafx.util.Pair)"], "Fixed commit": "ecec0930e18575ec8a864d67a585dce20effba56", "Url": "https://api.github.com/repos/Brynjars88/GAPL_project4", "Date": "2018-03-09T20:33:20Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(Qmast.containsKey(p))) { Qmast.put(p, new javafx.util.Pair(0.0, 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6747/buggy-version/mastUtils.java", "BodyUseAPI": ["java.util.Map<javafx.util.Pair<java.lang.Integer, org.ggp.base.util.statemachine.Move>, javafx.util.Pair<java.lang.Double, java.lang.Integer>>.put(javafx.util.Pair<java.lang.Integer, org.ggp.base.util.statemachine.Move>,javafx.util.Pair)"], "Fixed commit": "ecec0930e18575ec8a864d67a585dce20effba56", "Url": "https://api.github.com/repos/Brynjars88/GAPL_project4", "Date": "2018-03-09T20:33:20Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(redis.opsForSet().isMember(\"users\", username))) { return org.springframework.http.ResponseEntity.badRequest().build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9624/buggy-version/src.main.java.com.ecust.demo.LoginController.java", "BodyUseAPI": [], "Fixed commit": "58debd644f499e7ac537f4b34ca517f9fd650d54", "Url": "https://api.github.com/repos/yyecust/customer-server", "Date": "2018-09-13T02:33:55Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.Window.getDecorView()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (decorView != null) { if (android.support.v4.view.ViewCompat.isAttachedToWindow(decorView)) { com.qmuiteam.qmui.util.QMUIStatusBarHelper.realHandleDisplayCutoutMode(window, decorView); }else { decorView.addOnAttachStateChangeListener(new android.view.View.OnAttachStateChangeListener() { @java.lang.Override public void onViewAttachedToWindow(android.view.View v) { v.removeOnAttachStateChangeListener(this); com.qmuiteam.qmui.util.QMUIStatusBarHelper.realHandleDisplayCutoutMode(window, v); } @java.lang.Override public void onViewDetachedFromWindow(android.view.View v) { } }); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5656/buggy-version/qmui.src.main.java.com.qmuiteam.qmui.util.QMUIStatusBarHelper.java", "BodyUseAPI": ["android.view.View.addOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)", "android.support.v4.view.ViewCompat.isAttachedToWindow(android.view.View)", "com.qmuiteam.qmui.util.QMUIStatusBarHelper.realHandleDisplayCutoutMode(android.view.Window,android.view.View)"], "Fixed commit": "068e585e41b09f0a050cac3974d09b1c347e58cc", "Url": "https://api.github.com/repos/QMUI/QMUI_Android", "Date": "2018-08-14T05:54:07Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.google.common.base.Objects.equal(listener, null)) listener = new kr.projectn.vdl.core.event.DefaultSubmoduleEventListener();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7675/buggy-version/src.main.java.kr.projectn.vdl.core.RequestBuilder.java", "BodyUseAPI": [], "Fixed commit": "4dcbbbd0d79598d9addc910a04aa9e781e2fb322", "Url": "https://api.github.com/repos/polaris9017/vdl-core", "Date": "2018-09-02T17:29:35Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((imId.size()) > 1) { for (int idx = 0; idx < (imId.size()); idx++) { if (idx != position) { allPhotos.findViewWithTag((idx + 555)).setPadding(0, 0, 0, 0); } } allPhotos.findViewWithTag((position + 555)).setPadding(5, 0, 5, 20); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5796/buggy-version/app.src.main.java.com.example.activities.FullScreenImageActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.size()"], "Fixed commit": "063ddb3d3a86dd17f7fe70d45203ff290981d002", "Url": "https://api.github.com/repos/kupihse/test", "Date": "2018-05-13T11:03:58Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getStringArrayListExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((imId.size()) > 1) { allPhotos.findViewWithTag((position + 555)).setPadding(5, 0, 5, 20); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5796/buggy-version/app.src.main.java.com.example.activities.FullScreenImageActivity.java", "BodyUseAPI": [], "Fixed commit": "063ddb3d3a86dd17f7fe70d45203ff290981d002", "Url": "https://api.github.com/repos/kupihse/test", "Date": "2018-05-13T11:03:58Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((historyEvaluations.size()) > 0) { generateData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6791/buggy-version/app.src.main.java.com.custu.project.walktogether.EvaluationHistoryFragment.java", "BodyUseAPI": [], "Fixed commit": "7a80c61deac9a550b2e8c03a914aab99080a7153", "Url": "https://api.github.com/repos/gminemini/walk-together-android-app", "Date": "2018-03-08T18:42:13Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) { intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION); uri = android.support.v4.content.FileProvider.getUriForFile(this, ((BuildConfig.APPLICATION_ID) + \".fileprovider\"), file); }else { uri = android.net.Uri.fromFile(file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2472/buggy-version/app.src.main.java.com.meiliwu.installer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0d2ba3f240a6b50ad11491ce1de10883394bda1a", "Url": "https://api.github.com/repos/philadelphia/MVP", "Date": "2018-03-15T02:03:49Z"},
{"Line": "=>1388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["to.etc.domui.hibgen.ColumnWrapper.getPropertyType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == propertyType) throw new java.lang.IllegalStateException(((this) + \": property type unknown\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7304/buggy-version/utilities.hibernate-generator.src.main.java.to.etc.domui.hibgen.ColumnWrapper.java", "BodyUseAPI": [], "Fixed commit": "dccbeb3f1453c6c03d2ad30e3480ed2930df4860", "Url": "https://api.github.com/repos/fjalvingh/domui", "Date": "2018-02-23T14:56:21Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (interrupted) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5959/buggy-version/src.main.java.com.zhytnik.reactive.io.LineReader.java", "BodyUseAPI": [], "Fixed commit": "4e759280e391157a61adf9836c987a55dd5e7ad3", "Url": "https://api.github.com/repos/Alexey911/ReactiveIO", "Date": "2018-01-29T11:12:10Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (gameLevel != \"\") { GlobalElements.levelNumber = java.lang.Integer.parseInt(gameLevel); }else { GlobalElements.levelNumber = 1; java.lang.String levelString = java.lang.Integer.toString(GlobalElements.levelNumber); android.content.SharedPreferences.Editor editor = settings.edit(); editor.putString(\"gameLevel\", levelString); editor.commit(); gameLevel = \"1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7596/buggy-version/app.src.main.java.com.userinterface.android.popballoon.PlayGame.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "e7cef125288327efd2f7279dd0da53d02587cf06", "Url": "https://api.github.com/repos/sarthakbabbar/PopEm", "Date": "2018-01-08T22:35:49Z"},
{"Line": "=>907", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((null == currentCase) || ((currentCase.hasData()) == false)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5296/buggy-version/Core.src.org.sleuthkit.autopsy.directorytree.DirectoryTreeTopComponent.java", "BodyUseAPI": [], "Fixed commit": "9c5e612ffe4493736e4523da5629de8e66ad5f69", "Url": "https://api.github.com/repos/sleuthkit/autopsy", "Date": "2018-09-13T06:28:19Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((place_of_chop[0]) - (position[0])) == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5823/buggy-version/src.sample.Queen.java", "BodyUseAPI": [], "Fixed commit": "c038595e24841f024ecad6b77dca3a0294c8e9e8", "Url": "https://api.github.com/repos/DCCXXVI726/Checkers", "Date": "2018-05-13T11:45:48Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((place_of_move[0]) - (position[0])) == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5823/buggy-version/src.sample.Queen.java", "BodyUseAPI": [], "Fixed commit": "c038595e24841f024ecad6b77dca3a0294c8e9e8", "Url": "https://api.github.com/repos/DCCXXVI726/Checkers", "Date": "2018-05-13T11:45:48Z"},
{"Line": "=>1579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((task.isValid) && (!(task.shown))) && (!(task.isDone))) { android.util.Log.d(\"myLogs\", \"setReminder: 3\"); long alarmPeriodicTime = myCalender.getTimeInMillis(); if ((Build.VERSION.SDK_INT) >= 23) { com.example.delimes.flux.MainActivity.alarmManager.setExactAndAllowWhileIdle(AlarmManager.RTC_WAKEUP, alarmPeriodicTime, com.example.delimes.flux.MainActivity.pIntent); }else if ((Build.VERSION.SDK_INT) >= 19) { com.example.delimes.flux.MainActivity.alarmManager.setExact(AlarmManager.RTC_WAKEUP, alarmPeriodicTime, com.example.delimes.flux.MainActivity.pIntent); }else { com.example.delimes.flux.MainActivity.alarmManager.set(AlarmManager.RTC_WAKEUP, alarmPeriodicTime, com.example.delimes.flux.MainActivity.pIntent); } android.util.Log.d(\"myLogs\", (\"setReminder: Date: \" + (new java.util.Date(myCalender.getTimeInMillis())))); android.util.Log.d(\"myLogs\", (\"setReminder: notificationIntent.extra: \" + (notificationIntent.getStringExtra(\"extra\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1701/buggy-version/app.src.main.java.com.example.delimes.flux.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f9dc6c90e13d4dd391da8d8324f5f45f32d8322d", "Url": "https://api.github.com/repos/deLimes/Flux", "Date": "2018-09-29T10:02:29Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (appointment != null) { if (appointments.get(index).getUserID().equals(userToken)) { mAppointmentsFilteredByUser.add(appointment); index++; } }else index++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8744/buggy-version/AppCitas.app.src.main.java.com.example.sergiomoral.appcitas.presentation.ui.presenter.AppointmentsList.AppointmentsListPresenter.java", "BodyUseAPI": ["java.util.ArrayList<com.example.sergiomoral.appcitas.domain.entities.Appointment>.add(com.example.sergiomoral.appcitas.domain.entities.Appointment)"], "Fixed commit": "01d3d066526dba940fdefc35ef03b9c4de931783", "Url": "https://api.github.com/repos/smoralb/AppCitas", "Date": "2018-06-03T10:31:46Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (progress < 100) { progress = 100; pidKd.setProgress(progress); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1490/buggy-version/app.src.main.java.pegasus.bluetootharduino.AdvSettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "b4c957cb3f963492eb9752600c332467aeafad94", "Url": "https://api.github.com/repos/sesstigit/Android-Car-duino", "Date": "2018-05-03T16:00:59Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (progress < 100) { progress = 100; pidKi.setProgress(progress); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1490/buggy-version/app.src.main.java.pegasus.bluetootharduino.AdvSettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "b4c957cb3f963492eb9752600c332467aeafad94", "Url": "https://api.github.com/repos/sesstigit/Android-Car-duino", "Date": "2018-05-03T16:00:59Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((FRDL.App.pathToAllFiles) != null) { FRDL.App.sessionProperties.setProperty(\"lastPathToAllFiles\", FRDL.App.pathToAllFiles); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/4175/buggy-version/src.FRDL.App.java", "BodyUseAPI": [], "Fixed commit": "eb7bf9e87adf0d531469ecd3aa23002112d35985", "Url": "https://api.github.com/repos/jmlich/frdl", "Date": "2009-03-23T12:23:23Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (br != null) { try { br.close(); } catch (java.io.IOException e) { throw new org.ballerinalang.protobuf.exception.BalGenToolException(\"Error closing buffered reader.\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/903/buggy-version/misc.protobuf-ballerina.src.main.java.org.ballerinalang.protobuf.utils.BalFileGenerationUtils.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "73b5940ef179f34f80289690565899319a09740d", "Url": "https://api.github.com/repos/nadeeshaan/ballerina", "Date": "2018-04-26T12:31:56Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sanousun.com.guide_view.GuideBuilder.create()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (guideView == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6166/buggy-version/guide_view.src.main.java.sanousun.com.guide_view.GuideBuilder.java", "BodyUseAPI": [], "Fixed commit": "e247fdb64c4164aa3a6316ac6c68a7719f208edc", "Url": "https://api.github.com/repos/sanousun/GuideView", "Date": "2018-03-15T06:03:29Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getProperty(\"os.name\").indexOf(\"OS X\")) == 0) { if ((universe) != null) { universe.cleanup(); } while ((getComponentCount()) > 1) { remove(1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6185/buggy-version/ctSim.view.gui.WorldViewer.java", "BodyUseAPI": [], "Fixed commit": "13f032426fe50e70d15d6ad3982dcb277a1e081d", "Url": "https://api.github.com/repos/Nightwalker-87/ct-sim", "Date": "2018-04-28T10:00:31Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((previousStates.size()) == 1) { mT.get(index)[2] = mT.get(index)[2].split(\",\")[0]; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1116/buggy-version/T1.Automaton.java", "BodyUseAPI": [], "Fixed commit": "e4f6a4a50507ddab82ff321e3959c873834eb240", "Url": "https://api.github.com/repos/jzatta/INE5421", "Date": "2018-05-15T21:56:24Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (teamMember == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5605/buggy-version/cdmlib-model.src.main.java.eu.etaxonomy.cdm.strategy.cache.agent.TeamDefaultCacheStrategy.java", "BodyUseAPI": [], "Fixed commit": "02f58c709c8e2ea7cd2bc2a8e0fd529a80be54c2", "Url": "https://api.github.com/repos/cybertaxonomy/cdmlib", "Date": "2018-02-06T14:46:05Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (teamMember == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5605/buggy-version/cdmlib-model.src.main.java.eu.etaxonomy.cdm.strategy.cache.agent.TeamDefaultCacheStrategy.java", "BodyUseAPI": [], "Fixed commit": "02f58c709c8e2ea7cd2bc2a8e0fd529a80be54c2", "Url": "https://api.github.com/repos/cybertaxonomy/cdmlib", "Date": "2018-02-06T14:46:05Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.htmlcleaner.TagNode.findElementByAttValue(java.lang.String,java.lang.String,boolean,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (page == null) { throw new com.bukhmastov.cdoitmo.exceptions.SilentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3201/buggy-version/app.src.main.java.com.bukhmastov.cdoitmo.parse.RatingListParse.java", "BodyUseAPI": [], "Fixed commit": "77bd9f8e37616100e690245325d91ba99a81c835", "Url": "https://api.github.com/repos/bukhmastov/CDOITMO", "Date": "2018-03-31T15:23:04Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.htmlcleaner.TagNode.findElementByAttValue(java.lang.String,java.lang.String,boolean,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (page == null) { throw new com.bukhmastov.cdoitmo.exceptions.SilentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3201/buggy-version/app.src.main.java.com.bukhmastov.cdoitmo.parse.RatingTopListParse.java", "BodyUseAPI": [], "Fixed commit": "77bd9f8e37616100e690245325d91ba99a81c835", "Url": "https://api.github.com/repos/bukhmastov/CDOITMO", "Date": "2018-03-31T15:23:04Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (found != null) cars.remove(found);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/9510/buggy-version/car_server.src.cars.RemoteCarBase.java", "BodyUseAPI": ["java.util.LinkedList<cars.RemoteCar>.remove(cars.Car)"], "Fixed commit": "c5ccf9aece67ca395fd07f1546fe64b298230f66", "Url": "https://api.github.com/repos/olehougaard/sdj3-s18", "Date": "2018-02-14T09:47:35Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentNode.getChildNode()) != null) { currentNode.getChildNode().setParentNode(currentNode.getParentNode()); }else { currentNode.getParentNode().setChildNode(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2157/buggy-version/src.LinkedListMultiset.java", "BodyUseAPI": ["LinkedListMultiset<T>.LinkedNode.setChildNode(<nulltype>)", "LinkedListMultiset<T>.LinkedNode.getParentNode()", "LinkedListMultiset<T>.LinkedNode.setParentNode(LinkedListMultiset<T>.LinkedNode)", "LinkedListMultiset<T>.LinkedNode.getParentNode()", "LinkedListMultiset<T>.LinkedNode.getChildNode()"], "Fixed commit": "253ca9e5a4029e2217bc04235fd83b001de3f6ce", "Url": "https://api.github.com/repos/s3399752/multiset", "Date": "2018-09-04T10:13:41Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (initSymbolStage) initSet(node);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/146/buggy-version/src.Mstar.Worker.FrontEnd.OutputIrrelevantEliminator.java", "BodyUseAPI": [], "Fixed commit": "e9bdce595c27d5268e911c4edc12a9d2124bcf85", "Url": "https://api.github.com/repos/idy002/mstar-compiler", "Date": "2018-06-03T13:03:26Z"}]}
