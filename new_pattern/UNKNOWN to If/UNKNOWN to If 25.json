{"UNKNOWN to If":[{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasElement()) { getElementName().extendName(extension); }else { setElementName(new com.github.sommeri.less4j.core.ast.InterpolableName(getUnderlyingStructure(), new com.github.sommeri.less4j.core.ast.FixedNamePart(getUnderlyingStructure(), extension))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3071/buggy-version/src.main.java.com.github.sommeri.less4j.core.ast.SimpleSelector.java", "BodyUseAPI": [], "Fixed commit": "548ccd929aaed159be8348a4237facdb6f1d6fc9", "Url": "https://api.github.com/repos/SomMeri/less4j", "Date": "2013-11-20T16:21:13Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((links) == null) return new java.util.ArrayList<hudson.plugins.sidebar_link.LinkAction>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3905/buggy-version/src.main.java.hudson.plugins.sidebar_link.ProjectLinks.java", "BodyUseAPI": [], "Fixed commit": "c77f968cdaf7ac0e03b656fff7f84ce867acf091", "Url": "https://api.github.com/repos/daniel-beck/sidebar-link-plugin", "Date": "2015-04-21T14:40:52Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.getRefines()) == null) ret.add(generateInvariantFromState(s));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6455/buggy-version/ac.soton.eventb.statemachinesJ.generator.src.ac.soton.eventb.statemachinesJ.generator.rules.LiftedRootStatemachine2TypingInvariantRule.java", "BodyUseAPI": ["ac.soton.eventb.statemachinesJ.generator.rules.LiftedRootStatemachine2TypingInvariantRule.generateInvariantFromState(ac.soton.eventb.statemachines.State)", "java.util.List<org.eventb.emf.core.machine.Invariant>.add(org.eventb.emf.core.machine.Invariant)"], "Fixed commit": "bd95f7b5d98f3b47c5058f7c8f2414a07c52e883", "Url": "https://api.github.com/repos/mgt1g13/Statemachine-Java-Generator", "Date": "2014-06-24T15:51:55Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(Constants.DIRECTORIES)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (directories != null) { probe = new org.notificationengine.probes.probe.FolderProbe(topicName, directories); }else { org.notificationengine.probes.Launcher.LOGGER.warn(\"There was no directories set in the configuration, probe has not been instantiated\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2420/buggy-version/src.main.java.org.notificationengine.probes.Launcher.java", "BodyUseAPI": [], "Fixed commit": "c114fde4f04e69cafa675191ecda62aa76e8d245", "Url": "https://api.github.com/repos/matthis-d/NotificationEngineProbes", "Date": "2013-08-27T15:30:59Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.groovy.ast.stmt.ReturnStatement.getExpression()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((expression.getNodeMetaData(\"CallsiteReturnType\")) == null) { expression.setNodeMetaData(\"CallsiteReturnType\", returnType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2276/buggy-version/src.main.org.codehaus.groovy.classgen.asm.StatementWriter.java", "BodyUseAPI": ["org.codehaus.groovy.ast.expr.Expression.setNodeMetaData(java.lang.String,org.codehaus.groovy.ast.ClassNode)"], "Fixed commit": "47600b84c9fb1c22fdc95c9b7a3f1570a8eb169a", "Url": "https://api.github.com/repos/blackdrag/groovy-core", "Date": "2012-06-01T16:13:31Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.bigint.imagemask.MaskMapImageView.getDrawable()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (drawable == null) { return new fr.bigint.imagemask.Mask.Point(java.lang.Float.MIN_VALUE, java.lang.Float.MIN_VALUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2510/buggy-version/imagemask.src.main.java.fr.bigint.imagemask.MaskMapImageView.java", "BodyUseAPI": [], "Fixed commit": "6c4dd7e143d834004c3144994d830ab8e7d25557", "Url": "https://api.github.com/repos/BigInt-NCY/ImageMask", "Date": "2016-07-13T08:33:09Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedList<jsettlers.logic.map.newGrid.partition.manager.objects.BricklayerRequest>.poll()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(bricklayerRequest.isCreationRequested())) { createNewToolUserIfLimitNotExceeded(EMovableType.BRICKLAYER, bricklayerRequest.getPos()); bricklayerRequest.creationRequested(); bricklayerRequests.offerLast(bricklayerRequest); }else { bricklayerRequests.offerLast(bricklayerRequest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5683/buggy-version/jsettlers.logic.src.jsettlers.logic.map.newGrid.partition.manager.PartitionManager.java", "BodyUseAPI": ["java.util.LinkedList<jsettlers.logic.map.newGrid.partition.manager.objects.BricklayerRequest>.offerLast(jsettlers.logic.map.newGrid.partition.manager.objects.BricklayerRequest)", "jsettlers.logic.map.newGrid.partition.manager.PartitionManager.createNewToolUserIfLimitNotExceeded(EMovableType.BRICKLAYER,bricklayerRequest.getPos())", "jsettlers.logic.map.newGrid.partition.manager.objects.BricklayerRequest.creationRequested()", "java.util.LinkedList<jsettlers.logic.map.newGrid.partition.manager.objects.BricklayerRequest>.offerLast(jsettlers.logic.map.newGrid.partition.manager.objects.BricklayerRequest)", "jsettlers.logic.map.newGrid.partition.manager.objects.BricklayerRequest.getPos()"], "Fixed commit": "448520ad3afc2d2a9f1b632571b1a07b0536777b", "Url": "https://api.github.com/repos/jsettlers/settlers-remake", "Date": "2015-04-07T18:23:12Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.isCancelled()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6745/buggy-version/src.com.gmail.zariust.bukkit.otherblocks.OtherBlocksBlockListener.java", "BodyUseAPI": [], "Fixed commit": "5fed666b265c67e058dcd0ddb49e9e36dad91bb0", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2011-09-05T09:28:07Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((map.getGroup()) != null) && ((map.getGroup().getId()) != null)) { com.denimgroup.threadfix.service.AccessControlTeamMap dbMap = accessControlMapDao.retrieveTeamMapByGroupTeamAndRole(map.getGroup().getId(), org.getId(), role.getId()); if ((dbMap != null) && (dbMap.getId().equals(mapId))) { return \"That team / role combination already exists for this group.\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1119/buggy-version/threadfix-main.src.main.java.com.denimgroup.threadfix.service.AccessControlMapServiceImpl.java", "BodyUseAPI": ["com.denimgroup.threadfix.service.AccessControlTeamMap.getGroup()", "map.getGroup().getId()", "com.denimgroup.threadfix.data.dao.AccessControlMapDao.retrieveTeamMapByGroupTeamAndRole(map.getGroup().getId(),org.getId(),role.getId())"], "Fixed commit": "d51e38511c38b9c7b05563a15c50b5c6d63d93f2", "Url": "https://api.github.com/repos/denimgroup/threadfix", "Date": "2015-05-01T21:26:00Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((news.data.getmLstNewPhotos()) != null) { mLstNewsPhotos = news.data.getmLstNewPhotos(); mNewsPhotoPagerAdapter.updatePhotos(mLstNewsPhotos); mRlPhotos.setVisibility(View.VISIBLE); }else { mRlPhotos.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2563/buggy-version/Android.PON.app.src.main.java.com.hunters.pon.activities.NewsDetailActivity.java", "BodyUseAPI": ["news.data.getmLstNewPhotos()"], "Fixed commit": "d52266b533608fbf863bc89b5dd22f2f663ad3d9", "Url": "https://api.github.com/repos/HUNTERS1984/PON_APP", "Date": "2016-12-29T07:59:33Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["au.com.codeka.warworlds.client.opengl.SceneObject.getTag()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (star != null) { starSceneObjects.remove(star.id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4550/buggy-version/client.src.main.java.au.com.codeka.warworlds.client.starfield.StarfieldManager.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, au.com.codeka.warworlds.client.opengl.SceneObject>.remove(star.id)"], "Fixed commit": "324201c84197752abd7a57bccc1a8b05fd24bca8", "Url": "https://api.github.com/repos/codeka/wwmmo", "Date": "2016-05-30T12:25:15Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (dates != null) { photo.setDateTaken(dates.optString(\"taken\")); photo.setDatePosted(dates.optString(\"posted\")); photo.setLastUpdate(dates.optString(\"lastupdate\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1060/buggy-version/flickrj-android.src.main.java.com.gmail.yuyang226.flickr.photos.PhotoUtils.java", "BodyUseAPI": ["org.json.JSONObject.optString(java.lang.String)", "org.json.JSONObject.optString(java.lang.String)", "com.gmail.yuyang226.flickr.photos.Photo.setDateTaken(dates.optString(\"taken\"))", "org.json.JSONObject.optString(java.lang.String)", "com.gmail.yuyang226.flickr.photos.Photo.setLastUpdate(dates.optString(\"lastupdate\"))", "com.gmail.yuyang226.flickr.photos.Photo.setDatePosted(dates.optString(\"posted\"))"], "Fixed commit": "f9954bee0e4199e0a2ae080fb9b7f3242282e5b4", "Url": "https://api.github.com/repos/yuyang226/FlickrjApi4Android", "Date": "2012-04-11T11:42:47Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rapidoid.process.Processes.find(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (proc != null) { org.rapidoid.log.Log.info(\"Stopping application\", \"id\", proc.id(), \"process\", proc.params().command()); proc.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8935/buggy-version/rapidoid-commons.src.main.java.org.rapidoid.deploy.AppDeployer.java", "BodyUseAPI": ["java.lang.ProcessHandle.destroy()", "proc.params().command()", "java.lang.ProcessHandle.id()", "org.rapidoid.log.Log.info(java.lang.String,java.lang.String,proc.id(),java.lang.String,proc.params().command())", "java.lang.ProcessHandle.params()"], "Fixed commit": "bfd2d4f1e21ac614ff70aebf44c64a32ef2ca033", "Url": "https://api.github.com/repos/rapidoid/rapidoid", "Date": "2017-01-30T07:38:40Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cachedProjectBase) != null) { return cachedProjectBase; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5762/buggy-version/src.main.java.org.infernus.idea.checkstyle.model.FileConfigurationLocation.java", "BodyUseAPI": [], "Fixed commit": "d8a02dbbb3cb9be335a261315747f9f9d41b6e1e", "Url": "https://api.github.com/repos/jshiell/checkstyle-idea", "Date": "2011-09-11T10:59:48Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((head) != null) head = head.next;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6151/buggy-version/src.main.java.com.structures.queue.QueueImpl.java", "BodyUseAPI": [], "Fixed commit": "c0a9abeee408ef7a728e25eb1860acd2563eb4af", "Url": "https://api.github.com/repos/thorneenroht/Structures", "Date": "2015-12-23T06:00:35Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (note.isPersonalizedMode()) { broadcastParagraphs(p.getUserParagraphMap(), p); }else { broadcast(note.getId(), new org.apache.zeppelin.notebook.socket.Message(org.apache.zeppelin.notebook.socket.Message.OP.PARAGRAPH).put(\"paragraph\", p)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2675/buggy-version/zeppelin-server.src.main.java.org.apache.zeppelin.socket.NotebookServer.java", "BodyUseAPI": ["org.apache.zeppelin.socket.NotebookServer.broadcast(note.getId(),new org.apache.zeppelin.notebook.socket.Message(org.apache.zeppelin.notebook.socket.Message.OP.PARAGRAPH).put(\"paragraph\", p))", "org.apache.zeppelin.notebook.Note.getId()"], "Fixed commit": "a1b858560d19257b1f5dbc294c2d6deb2d4a46fc", "Url": "https://api.github.com/repos/jongyoul/zeppelin", "Date": "2016-12-13T16:12:50Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getWhoClicked().getGameMode()) != (org.bukkit.GameMode.CREATIVE)) { if ((event.getCurrentItem()) != null) { for (org.bukkit.Material i : ids) { if (i == (item.getType())) { { event.setCancelled(true); break; } } } if ((item.getType()) == (org.bukkit.Material.STICK)) { if (!(item.getEnchantments().isEmpty())) { event.setCancelled(true); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9013/buggy-version/LockItem.src.io.github.fokolo.inventoryclicks.java", "BodyUseAPI": ["org.bukkit.event.inventory.InventoryClickEvent.setCancelled(boolean)", "org.bukkit.event.inventory.InventoryClickEvent.getCurrentItem()", "org.bukkit.event.inventory.InventoryClickEvent.setCancelled(boolean)"], "Fixed commit": "b7bb76ca2d47a493ef8d366b54c8c366112cd6ca", "Url": "https://api.github.com/repos/fokolo/itemlock", "Date": "2013-09-17T10:50:30Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getKey()) != null) { normalizedColumnMap.put(e.getKey().trim().toLowerCase(), e.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7056/buggy-version/src.main.java.com.univocity.parsers.common.ColumnMap.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Integer>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getValue()", "java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,java.lang.Integer)", "java.lang.String.toLowerCase()", "java.lang.String.trim()"], "Fixed commit": "8d730f7c327391fa09e7b5728857e4cb85d91e75", "Url": "https://api.github.com/repos/uniVocity/univocity-parsers", "Date": "2016-08-02T00:26:42Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((work.getMinSplitSize()) != null) { org.apache.hadoop.hive.conf.HiveConf.setLongVar(job, HiveConf.ConfVars.MAPREDMINSPLITSIZE, work.getMinSplitSize().longValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1010/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.io.merge.MergeFileTask.java", "BodyUseAPI": ["org.apache.hadoop.hive.ql.io.merge.MergeFileTask.getMinSplitSize()", "work.getMinSplitSize().longValue()", "org.apache.hadoop.hive.conf.HiveConf.setLongVar(org.apache.hadoop.mapred.JobConf,HiveConf.ConfVars.MAPREDMINSPLITSIZE,work.getMinSplitSize().longValue())"], "Fixed commit": "494e2b9eaaf4dfa1afbb46e58d58a581c909939e", "Url": "https://api.github.com/repos/brokenbowl/hive", "Date": "2016-12-13T10:29:45Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((work.getMinSplitSizePerRack()) != null) { org.apache.hadoop.hive.conf.HiveConf.setLongVar(job, HiveConf.ConfVars.MAPREDMINSPLITSIZEPERRACK, work.getMinSplitSizePerRack().longValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1010/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.io.merge.MergeFileTask.java", "BodyUseAPI": ["work.getMinSplitSizePerRack().longValue()", "org.apache.hadoop.hive.ql.io.merge.MergeFileTask.getMinSplitSizePerRack()", "org.apache.hadoop.hive.conf.HiveConf.setLongVar(org.apache.hadoop.mapred.JobConf,HiveConf.ConfVars.MAPREDMINSPLITSIZEPERRACK,work.getMinSplitSizePerRack().longValue())"], "Fixed commit": "494e2b9eaaf4dfa1afbb46e58d58a581c909939e", "Url": "https://api.github.com/repos/brokenbowl/hive", "Date": "2016-12-13T10:29:45Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((work.getMaxSplitSize()) != null) { org.apache.hadoop.hive.conf.HiveConf.setLongVar(job, HiveConf.ConfVars.MAPREDMAXSPLITSIZE, work.getMaxSplitSize().longValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1010/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.io.merge.MergeFileTask.java", "BodyUseAPI": ["org.apache.hadoop.hive.ql.io.merge.MergeFileTask.getMaxSplitSize()", "work.getMaxSplitSize().longValue()", "org.apache.hadoop.hive.conf.HiveConf.setLongVar(org.apache.hadoop.mapred.JobConf,HiveConf.ConfVars.MAPREDMAXSPLITSIZE,work.getMaxSplitSize().longValue())"], "Fixed commit": "494e2b9eaaf4dfa1afbb46e58d58a581c909939e", "Url": "https://api.github.com/repos/brokenbowl/hive", "Date": "2016-12-13T10:29:45Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((work.getMinSplitSizePerNode()) != null) { org.apache.hadoop.hive.conf.HiveConf.setLongVar(job, HiveConf.ConfVars.MAPREDMINSPLITSIZEPERNODE, work.getMinSplitSizePerNode().longValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1010/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.io.merge.MergeFileTask.java", "BodyUseAPI": ["org.apache.hadoop.hive.conf.HiveConf.setLongVar(org.apache.hadoop.mapred.JobConf,HiveConf.ConfVars.MAPREDMINSPLITSIZEPERNODE,work.getMinSplitSizePerNode().longValue())", "org.apache.hadoop.hive.ql.io.merge.MergeFileTask.getMinSplitSizePerNode()", "work.getMinSplitSizePerNode().longValue()"], "Fixed commit": "494e2b9eaaf4dfa1afbb46e58d58a581c909939e", "Url": "https://api.github.com/repos/brokenbowl/hive", "Date": "2016-12-13T10:29:45Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jaci.openrio.toast.core.script.js.JavaScript.getEngine()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((engine.get(\"__MODULES\")) == null) engine.put(\"__MODULES\", new java.util.HashMap<java.lang.String, java.io.File>());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/814/buggy-version/src.main.java.jaci.openrio.toast.core.script.ScriptLoader.java", "BodyUseAPI": ["javax.script.ScriptEngine.put(java.lang.String,java.util.HashMap<java.lang.String, java.io.File>)"], "Fixed commit": "30fcafd88d21e2b031fc72d3e28bbff6a70d7e2f", "Url": "https://api.github.com/repos/Open-RIO/ToastAPI", "Date": "2015-10-27T13:43:17Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((mapRecord != null) && ((mapRecord.getId()) != null)) { for (org.ihtsdo.otf.mapping.model.MapRecord mr : mapRecords) { if (mr.getId().equals(mapRecord.getId())) { mapRecords.remove(mr); mapRecords.add(mapRecord); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9174/buggy-version/jpa-services.src.main.java.org.ihtsdo.otf.mapping.jpa.services.WorkflowServiceJpa.java", "BodyUseAPI": ["org.ihtsdo.otf.mapping.model.MapRecord.getId()", "mr.getId().equals(mapRecord.getId())", "java.util.Set<org.ihtsdo.otf.mapping.model.MapRecord>.add(org.ihtsdo.otf.mapping.model.MapRecord)"], "Fixed commit": "f31aabdafbd7968d905a66da830b9bd9aaa72c0e", "Url": "https://api.github.com/repos/WestCoastInformatics/OTF-Mapping-Service", "Date": "2014-05-14T16:32:46Z"},
{"Line": "=>580", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (mapRecord != null) java.lang.System.out.println(mapRecord.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9174/buggy-version/jpa-services.src.main.java.org.ihtsdo.otf.mapping.jpa.services.WorkflowServiceJpa.java", "BodyUseAPI": ["java.io.PrintStream.println(mapRecord.toString())", "org.ihtsdo.otf.mapping.model.MapRecord.toString()"], "Fixed commit": "f31aabdafbd7968d905a66da830b9bd9aaa72c0e", "Url": "https://api.github.com/repos/WestCoastInformatics/OTF-Mapping-Service", "Date": "2014-05-14T16:32:46Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.JELLY_BEAN)) { ((android.widget.FrameLayout.LayoutParams) (mProgressBar.getLayoutParams())).setMargins(0, net.fred.feedex.utils.UiUtils.dpToPixel((-4)), 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4972/buggy-version/src.net.fred.feedex.activity.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "bffa02583a676be26e147e6d38c62722012e6b05", "Url": "https://api.github.com/repos/HoloAddict/FeedEx", "Date": "2013-12-28T01:31:43Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o instanceof java.lang.Boolean) { return ((boolean) (o)) ? \"1\" : \"0\"; }else { return java.lang.String.valueOf(((int) (o))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/359/buggy-version/WelikeAndroid.src.com.lody.welike.database.ValueConvertor.java", "BodyUseAPI": [], "Fixed commit": "6d4ecb964f26127fb4e531d3d98f513a54c4f1c9", "Url": "https://api.github.com/repos/FinalLody/WelikeAndroid", "Date": "2015-08-17T08:53:09Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (generatedKeys.next()) { autoGeneratedKey = generatedKeys.getInt(1); generatedKeys.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5959/buggy-version/src.org.wso2.carbon.social.adaptor.OracleQueryAdaptor.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(int)", "java.sql.ResultSet.close()"], "Fixed commit": "fc4fbdf26fd4cd6278ebcc08ee7d915ac9559863", "Url": "https://api.github.com/repos/udarakr/social-db-adaptor", "Date": "2015-04-13T18:40:15Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (baseElement instanceof org.activiti.bpmn.model.FlowElement) { org.activiti.editor.language.json.converter.BpmnJsonConverterUtil.convertListenersToJson(((org.activiti.bpmn.model.FlowElement) (baseElement)).getExecutionListeners(), true, propertiesNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5951/buggy-version/modules.activiti-json-converter.src.main.java.org.activiti.editor.language.json.converter.BaseBpmnJsonConverter.java", "BodyUseAPI": [], "Fixed commit": "cbb4ec8ef6302f11845079ab70ae20c66f9923de", "Url": "https://api.github.com/repos/AngelaG1/Activiti", "Date": "2017-02-10T10:31:08Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(undoer.undoCommand())) { undoer.prepareUndoUndone(\"deadline\", undoTarget); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2989/buggy-version/src.main.java.seedu.Tdoo.model.ModelManager.java", "BodyUseAPI": ["seedu.Tdoo.model.Undoer.prepareUndoUndone(java.lang.String,int)"], "Fixed commit": "97330fb2ac7aafe675c5d2909ebc56715651807a", "Url": "https://api.github.com/repos/CS2103AUG2016-T14-C1/Tdoo", "Date": "2016-11-07T14:54:52Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(undoer.undoCommand())) { undoer.prepareUndoDone(\"event\", undoTarget); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2989/buggy-version/src.main.java.seedu.Tdoo.model.ModelManager.java", "BodyUseAPI": ["seedu.Tdoo.model.Undoer.prepareUndoDone(java.lang.String,int)"], "Fixed commit": "97330fb2ac7aafe675c5d2909ebc56715651807a", "Url": "https://api.github.com/repos/CS2103AUG2016-T14-C1/Tdoo", "Date": "2016-11-07T14:54:52Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(undoer.undoCommand())) { undoer.prepareUndoUndone(\"event\", undoTarget); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2989/buggy-version/src.main.java.seedu.Tdoo.model.ModelManager.java", "BodyUseAPI": ["seedu.Tdoo.model.Undoer.prepareUndoUndone(java.lang.String,int)"], "Fixed commit": "97330fb2ac7aafe675c5d2909ebc56715651807a", "Url": "https://api.github.com/repos/CS2103AUG2016-T14-C1/Tdoo", "Date": "2016-11-07T14:54:52Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(undoer.undoCommand())) { undoer.prepareUndoDone(\"deadline\", undoTarget); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2989/buggy-version/src.main.java.seedu.Tdoo.model.ModelManager.java", "BodyUseAPI": ["seedu.Tdoo.model.Undoer.prepareUndoDone(java.lang.String,int)"], "Fixed commit": "97330fb2ac7aafe675c5d2909ebc56715651807a", "Url": "https://api.github.com/repos/CS2103AUG2016-T14-C1/Tdoo", "Date": "2016-11-07T14:54:52Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(undoer.undoCommand())) { undoer.prepareUndoUndone(\"todo\", undoTarget); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2989/buggy-version/src.main.java.seedu.Tdoo.model.ModelManager.java", "BodyUseAPI": ["seedu.Tdoo.model.Undoer.prepareUndoUndone(java.lang.String,int)"], "Fixed commit": "97330fb2ac7aafe675c5d2909ebc56715651807a", "Url": "https://api.github.com/repos/CS2103AUG2016-T14-C1/Tdoo", "Date": "2016-11-07T14:54:52Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(undoer.undoCommand())) { undoer.prepareUndoDone(\"todo\", undoTarget); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2989/buggy-version/src.main.java.seedu.Tdoo.model.ModelManager.java", "BodyUseAPI": ["seedu.Tdoo.model.Undoer.prepareUndoDone(java.lang.String,int)"], "Fixed commit": "97330fb2ac7aafe675c5d2909ebc56715651807a", "Url": "https://api.github.com/repos/CS2103AUG2016-T14-C1/Tdoo", "Date": "2016-11-07T14:54:52Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ednovo.gooru.client.gin.AppClientFactory.getPlaceManager().getRequestParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((subjectName != null) && (subjectName.equalsIgnoreCase(org.ednovo.gooru.client.mvp.home.library.LibraryLessonUc.STANDARDS))) { conceptTitle = conceptDo.getCode(); }else { conceptTitle = conceptDo.getLabel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7719/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.home.library.LibraryLessonUc.java", "BodyUseAPI": [], "Fixed commit": "53d130b2f562104df82047e10055a05a631764a4", "Url": "https://api.github.com/repos/nutan-gooru/Gooru-Web", "Date": "2014-07-31T11:38:51Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(config.hasPath(org.apache.drill.exec.ExecConstants.USER_AUTHENTICATOR_IMPL))) { throw new org.apache.drill.exec.exception.DrillbitStartupException(java.lang.String.format(\"BOOT option '%s' is missing in config.\", org.apache.drill.exec.ExecConstants.USER_AUTHENTICATOR_IMPL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3225/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.rpc.user.security.UserAuthenticatorFactory.java", "BodyUseAPI": [], "Fixed commit": "6bd5cf271e973abffa137abb95ebad1d70c6f009", "Url": "https://api.github.com/repos/sohami/drill", "Date": "2017-02-28T07:28:14Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((compareProductColorId != null) && (!(compareProductColorId.equals(\"_NA_\")))) { similarProductList = com.zuczug.analysis.AnalysisProductDistancesService.setSimilarProduct(similarProductList, compareProductId, tempDistancesValue, compareProductColorId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5682/buggy-version/hot-deploy.zuczugetl.src.com.zuczug.analysis.AnalysisProductDistancesService.java", "BodyUseAPI": ["com.zuczug.analysis.AnalysisProductDistancesService.setSimilarProduct(java.util.List<java.util.Map<java.lang.String, java.lang.Object>>,java.lang.String,java.math.BigDecimal,java.lang.String)"], "Fixed commit": "731475d9834f50ca61fe585116009a666385d44d", "Url": "https://api.github.com/repos/zuczug/bluemountain", "Date": "2016-09-02T08:53:58Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (passwordBean.getOldPassword().equals(passwordBean.getNewPassword())) return javax.ws.rs.core.Response.serverError().entity(\"old password and new password can't be same\").build();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7900/buggy-version/software.cananolab-webapp.src.gov.nih.nci.cananolab.restful.SecurityServices.java", "BodyUseAPI": [], "Fixed commit": "2495aa08e23d1e3107dd95a754064e1380ab3895", "Url": "https://api.github.com/repos/CBIIT/cananolab", "Date": "2015-05-12T14:06:26Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((org.openflexo.foundation.viewpoint.DataPropertyPatternRole) (getPatternRole())).getParentProperty()) != null) { return ((org.openflexo.foundation.viewpoint.DataPropertyPatternRole) (getPatternRole())).getParentProperty(); }else { return getPatternRole().getAccessedClass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9088/buggy-version/flexodesktop.model.flexofoundation.src.main.java.org.openflexo.foundation.viewpoint.binding.OntologicObjectPatternRolePathElement.java", "BodyUseAPI": [], "Fixed commit": "4c1478b7b9a748bf1644f190d742c95fff3ad399", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2012-05-07T12:20:50Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((org.openflexo.foundation.viewpoint.ObjectPropertyPatternRole) (getPatternRole())).getParentProperty()) != null) { return ((org.openflexo.foundation.viewpoint.ObjectPropertyPatternRole) (getPatternRole())).getParentProperty(); }else { return getPatternRole().getAccessedClass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9088/buggy-version/flexodesktop.model.flexofoundation.src.main.java.org.openflexo.foundation.viewpoint.binding.OntologicObjectPatternRolePathElement.java", "BodyUseAPI": [], "Fixed commit": "4c1478b7b9a748bf1644f190d742c95fff3ad399", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2012-05-07T12:20:50Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["BinaryMapIndexReader.MapIndex.decodeType(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((pair != null) && (mask == (net.osmand.render.OsmandRenderingRulesParser.POINT_STATE))) && (renderingType.isObjectVisible(pair.tag, pair.value, zoom, OsmandRenderingRulesParser.TEXT_STATE))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6741/buggy-version/OsmAnd.src.net.osmand.plus.render.MapRenderRepositories.java", "BodyUseAPI": [], "Fixed commit": "6904de140c66383a2ec56d952388e1af6db49f8b", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2011-04-24T14:23:52Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (aux.getRange().isDatatype()) { org.semanticweb.owlapi.model.OWLDatatype rangeDatatype = aux.getRange().asOWLDatatype(); if (rangeDatatype.isBuiltIn()) { it.unibz.krdb.obda.model.Predicate.COL_TYPE columnType = getColumnType(rangeDatatype); it.unibz.krdb.obda.ontology.DataType datatype = it.unibz.krdb.obda.owlapi3.OWLAPI3Translator.ofac.createDataType(it.unibz.krdb.obda.owlapi3.OWLAPI3Translator.dfac.getTypePredicate(columnType)); addSubclassAxiom(dl_onto, subclass, datatype); }else { it.unibz.krdb.obda.owlapi3.OWLAPI3Translator.log.warn((\"Ignoring range axiom since it refers to a non-supported datatype: \" + (axiom.toString()))); } }else { it.unibz.krdb.obda.owlapi3.OWLAPI3Translator.log.warn((\"Ignoring range axiom since it is not a datatype: \" + (axiom.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7996/buggy-version/obdalib-owlapi3.src.main.java.it.unibz.krdb.obda.owlapi3.OWLAPI3Translator.java", "BodyUseAPI": ["org.semanticweb.owlapi.model.OWLDataPropertyRangeAxiom.getRange()", "aux.getRange().asOWLDatatype()"], "Fixed commit": "a63e9a4790d6745b923b473e1f200be0cc84ec4b", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2014-06-04T14:33:06Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.umass.cs.contextservice.config.ContextServiceConfig.QUERY_ALL_ENABLED) { }else { assert false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3279/buggy-version/src.edu.umass.cs.contextservice.updates.UpdateInfo.java", "BodyUseAPI": [], "Fixed commit": "4dcfbd257bd18f710311e5e2c80b030a56b5e347", "Url": "https://api.github.com/repos/ayadavumass/CNS", "Date": "2016-11-25T22:32:11Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.verapdf.pd.PDExtGState.getNonStrokingOverprintControl()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (oFNS != null) { this.overprintingFlagNonStroke = oFNS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8702/buggy-version/validation-model.src.main.java.org.verapdf.model.factory.operators.GraphicState.java", "BodyUseAPI": [], "Fixed commit": "fd1aea84227b22584528175e0c62343527a9e0dd", "Url": "https://api.github.com/repos/timurkamalov/veraPDF-validation", "Date": "2016-09-09T12:08:45Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.verapdf.pd.PDExtGState.getOverprintMode()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (opm != null) { this.opm = opm.intValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8702/buggy-version/validation-model.src.main.java.org.verapdf.model.factory.operators.GraphicState.java", "BodyUseAPI": ["java.lang.Long.intValue()"], "Fixed commit": "fd1aea84227b22584528175e0c62343527a9e0dd", "Url": "https://api.github.com/repos/timurkamalov/veraPDF-validation", "Date": "2016-09-09T12:08:45Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.verapdf.pd.PDExtGState.getStrokingOverprintControl()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (oFS != null) { this.overprintingFlagStroke = oFS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8702/buggy-version/validation-model.src.main.java.org.verapdf.model.factory.operators.GraphicState.java", "BodyUseAPI": [], "Fixed commit": "fd1aea84227b22584528175e0c62343527a9e0dd", "Url": "https://api.github.com/repos/timurkamalov/veraPDF-validation", "Date": "2016-09-09T12:08:45Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (counter == (custList.getNumberOfEntries())) { javax.swing.JOptionPane.showMessageDialog(null, \"Record Not Found\"); mainform.phoneNo = null; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3771/buggy-version/src.PART_C.GetCustInfo.java", "BodyUseAPI": [], "Fixed commit": "652f26ab51c2628badebe76412a5f17127cc54a2", "Url": "https://api.github.com/repos/jiaweiloo/FoodDeliverySystem", "Date": "2017-12-20T02:25:04Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (u != (findVertex(src, vertices))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2237/buggy-version/src.ch.bfh.sevennotseven.Game.java", "BodyUseAPI": [], "Fixed commit": "78eddfe5d23e4e2a09d637c6377a0bf0416e3849", "Url": "https://api.github.com/repos/id101010/7not7", "Date": "2016-06-16T23:06:01Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((defaultThumbNail) == null) || ((defaultThumbNail.getByteCount()) == 0)) { defaultThumbNail = android.graphics.BitmapFactory.decodeResource(application.getResources(), R.drawable.no_photo_clip); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1431/buggy-version/RapidFTR-Android.src.main.java.com.rapidftr.utils.PhotoCaptureHelper.java", "BodyUseAPI": [], "Fixed commit": "05f338ebd3990a7b8224945e421fa43ebd694bb4", "Url": "https://api.github.com/repos/tomclement/RapidFTR-Android", "Date": "2014-10-10T15:37:08Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((ingredients.length) > 3) for (int i = 0; i < (ingredients.length); i = i + 4) { ingredient = (((ingredient) + count) + \": \") + (ingredients[(i + 1)]); int j = ingredients[(i + 1)].length(); while (j < 25) { ingredient += \" \"; j++; } if ((i + 3) < (ingredients.length)) ingredient += (ingredients[(i + 3)]) + \"\\n\"; count++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4393/buggy-version/app.src.main.java.com.greatsky.kitcheninpocket.RecipeActivity.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "b835760e2fecee52aae5e0ca2ec8d1ac2e217199", "Url": "https://api.github.com/repos/hongjic/KitchenInPocket", "Date": "2016-12-06T06:22:33Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.walkmod.javalang.ast.body.ModifierSet.isPrivate(n.getModifiers())) { boolean isRemovable = true; if (\"readObject\".equals(n.getName())) { java.util.List<org.walkmod.javalang.ast.body.Parameter> params = n.getParameters(); if ((params != null) && ((params.size()) == 1)) { org.walkmod.javalang.ast.type.Type type = params.get(0).getType(); org.walkmod.javalang.ast.SymbolData sd = type.getSymbolData(); isRemovable = !((sd != null) && (\"java.io.ObjectInputStream\".equals(sd.getName()))); } }else if (\"writeObject\".equals(n.getName())) { java.util.List<org.walkmod.javalang.ast.body.Parameter> params = n.getParameters(); if ((params != null) && ((params.size()) == 1)) { org.walkmod.javalang.ast.type.Type type = params.get(0).getType(); org.walkmod.javalang.ast.SymbolData sd = type.getSymbolData(); isRemovable = !((sd != null) && (\"java.io.ObjectOutputStream\".equals(sd.getName()))); } } if (isRemovable) { java.util.List<org.walkmod.javalang.ast.SymbolReference> usages = n.getUsages(); if ((usages == null) || (usages.isEmpty())) { n.remove(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4993/buggy-version/src.main.java.org.walkmod.pmd.ruleset.java.unusedcode.visitors.UnusedPrivateMethod.java", "BodyUseAPI": ["org.walkmod.javalang.ast.body.MethodDeclaration.getParameters()", "java.lang.String.equals(n.getName())", "java.lang.String.equals(n.getName())", "org.walkmod.javalang.ast.body.MethodDeclaration.getUsages()", "org.walkmod.javalang.ast.body.MethodDeclaration.getName()", "org.walkmod.javalang.ast.body.MethodDeclaration.getName()", "org.walkmod.javalang.ast.body.MethodDeclaration.remove()", "org.walkmod.javalang.ast.body.MethodDeclaration.getParameters()"], "Fixed commit": "1c0ad1f51aa709c267ad1dc213f5e3045e56225b", "Url": "https://api.github.com/repos/walkmod/walkmod-pmd-plugin", "Date": "2017-03-08T11:00:32Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalRecordsRead >= (nMatches.longValue())) { readNext = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/590/buggy-version/src.main.java.com.bmc.truesight.remedy.App.java", "BodyUseAPI": [], "Fixed commit": "83e76d327f8f44e9cf961bdf5eccda92065759c0", "Url": "https://api.github.com/repos/boundary/remedy-tsi-bulkingestion-script", "Date": "2017-06-27T05:11:40Z"},
{"Line": "=>799", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(e.isAltDown())) && (!(e.isControlDown()))) { java.lang.String title = frame.getTitle(); if (!(title.contains(\"*\"))) frame.setTitle(((frame.getTitle()) + \"*\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3381/buggy-version/src.gsingh.learnkirtan.Main.java", "BodyUseAPI": [], "Fixed commit": "934fd1312f7348e58f19872d9d28fabf0c48299f", "Url": "https://api.github.com/repos/gsingh93/Learn-Kirtan", "Date": "2012-04-03T06:01:42Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(observers.containsKey(obs.getId()))) { this.resultProxy.addObserver(obs.getObserver()); observers.put(obs.getId(), obs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6598/buggy-version/src.main.java.polimi.deib.rsp_services_csparql.commons.Csparql_Query.java", "BodyUseAPI": ["polimi.deib.rsp_services_csparql.queries.utilities.Csparql_Observer_Descriptor.getId()", "eu.larkc.csparql.core.engine.CsparqlQueryResultProxy.addObserver(obs.getObserver())", "polimi.deib.rsp_services_csparql.queries.utilities.Csparql_Observer_Descriptor.getObserver()", "java.util.HashMap<java.lang.String, polimi.deib.rsp_services_csparql.queries.utilities.Csparql_Observer_Descriptor>.put(obs.getId(),polimi.deib.rsp_services_csparql.queries.utilities.Csparql_Observer_Descriptor)"], "Fixed commit": "7017d9c061c35f2adae0a56bd3301ebd8dfb990e", "Url": "https://api.github.com/repos/streamreasoning/rsp-services-csparql", "Date": "2013-11-18T17:42:28Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2223/buggy-version/src.main.java.fi.helsinki.cs.okkopa.mail.writeToDisk.FileSaver.java", "BodyUseAPI": [], "Fixed commit": "add77066c1539943e10225b8151ceddd7252d0f8", "Url": "https://api.github.com/repos/ohtuprojekti/OKKoPa", "Date": "2013-08-08T11:43:54Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((freeCores) == (cores.size())) { OSTrace.set(((OSTrace.size()) - 1), (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4406/buggy-version/src.main.model.process.Scheduler.java", "BodyUseAPI": [], "Fixed commit": "ccda46179feb35017f70f60a5519e4ab48eb1245", "Url": "https://api.github.com/repos/adebrouvier/SO-Scheduling", "Date": "2017-05-28T00:41:28Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"author\".equals(name)) inAuthor = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5162/buggy-version/railo-java.railo-core.src.railo.runtime.text.feed.FeedHandler.java", "BodyUseAPI": [], "Fixed commit": "985202efb7452a7f88cc2069773d69d41ae9f73f", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-03-12T14:39:37Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"author\".equals(name)) inAuthor = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5162/buggy-version/railo-java.railo-core.src.railo.runtime.text.feed.FeedHandler.java", "BodyUseAPI": [], "Fixed commit": "985202efb7452a7f88cc2069773d69d41ae9f73f", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-03-12T14:39:37Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.psddev.dari.util.FormFilter.BufferedResponse.getResponseString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((responseString.length()) > 0) { response.getWriter().write(responseString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4913/buggy-version/util.src.main.java.com.psddev.dari.util.FormFilter.java", "BodyUseAPI": ["response.getWriter().write(java.lang.String)"], "Fixed commit": "81bf6b9f57aa7e8bafabfc0c0a6a199a2b4693f8", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2013-04-25T16:18:26Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((query.getVariant()) == null) && ((query.getProteinStart()) == null)) && ((query.getProteinEnd()) == null)) { alterationSet.addAll(allAlterations); }else { org.mskcc.cbio.oncokb.bo.AlterationBo alterationBo = new org.mskcc.cbio.oncokb.util.ApplicationContextSingleton().getAlterationBo(); java.util.List<org.mskcc.cbio.oncokb.model.Alteration> alterations = org.mskcc.cbio.oncokb.util.AlterationUtils.lookupVariant(query.getVariant(), true, allAlterations); if ((alterations == null) || (alterations.isEmpty())) { org.mskcc.cbio.oncokb.model.Alteration alteration = org.mskcc.cbio.oncokb.util.AlterationUtils.getAlteration(gene.getHugoSymbol(), query.getVariant(), query.getVariantType(), query.getConsequence(), query.getProteinStart(), query.getProteinEnd()); if (alteration != null) { alterations.add(alteration); } } for (org.mskcc.cbio.oncokb.model.Alteration alteration : alterations) { alterationSet.addAll(alterationBo.findRelevantAlterations(alteration, new java.util.ArrayList<org.mskcc.cbio.oncokb.model.Alteration>(allAlterations))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3215/buggy-version/web.src.main.java.org.mskcc.cbio.oncokb.api.pub.v1.VariantsApiController.java", "BodyUseAPI": ["org.mskcc.cbio.oncokb.model.VariantSearchQuery.getProteinEnd()", "org.mskcc.cbio.oncokb.util.AlterationUtils.getAlteration(gene.getHugoSymbol(),query.getVariant(),query.getVariantType(),query.getConsequence(),query.getProteinStart(),query.getProteinEnd())", "org.mskcc.cbio.oncokb.util.AlterationUtils.lookupVariant(query.getVariant(),boolean,java.util.Set<org.mskcc.cbio.oncokb.model.Alteration>)", "org.mskcc.cbio.oncokb.model.VariantSearchQuery.getVariant()", "org.mskcc.cbio.oncokb.model.VariantSearchQuery.getVariantType()", "org.mskcc.cbio.oncokb.model.VariantSearchQuery.getVariant()", "org.mskcc.cbio.oncokb.model.VariantSearchQuery.getProteinStart()", "org.mskcc.cbio.oncokb.model.VariantSearchQuery.getConsequence()"], "Fixed commit": "958ec5f8ac5342d9d864f3828b25f88d755abbfc", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2017-07-20T21:55:24Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { adapter = new android.widget.ArrayAdapter(getActivity(), R.layout.list_textview, subCategories.keySet().toArray()); }else { android.util.TypedValue typedValue = new android.util.TypedValue(); android.content.res.Resources.Theme theme = getActivity().getTheme(); theme.resolveAttribute(android.R.attr.textColorSecondary, typedValue, true); final int textColor = typedValue.data; adapter = new android.widget.ArrayAdapter<java.lang.Object>(getActivity(), R.layout.list_textview, subCategories.keySet().toArray()) { @java.lang.Override public android.view.View getView(int position, android.view.View convertView, android.view.ViewGroup parent) { final android.view.View view = super.getView(position, convertView, parent); ((android.widget.TextView) (view.findViewById(R.id.textView))).setTextColor(textColor); return view; } }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5879/buggy-version/OsmAnd.src.net.osmand.plus.osmedit.EditPoiDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "c0ee60824ab167dcb439106eacf5995cc9842085", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2015-10-30T17:15:54Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(utilities.General.validateEmail(email))) throw new exception.InvalidQueryParamsException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6976/buggy-version/app.controllers.EmailController.java", "BodyUseAPI": [], "Fixed commit": "b60916c9708dbb23bf92d89ad86ef7c87e4ab198", "Url": "https://api.github.com/repos/genxium/PlayHongKongResort", "Date": "2015-02-28T14:18:24Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (seriesGenres != null) { if (seriesGenres.equals(\"\")) { seriesGenres = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2787/buggy-version/app.src.main.java.com.android.rotem.showme.AddNewSeriesActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "9198ee3ed1bee5a01d85d457a757e98e829c1a6b", "Url": "https://api.github.com/repos/RotemShaanan/SHOWme", "Date": "2016-04-30T10:10:00Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (seriesGrade != null) { if (seriesGrade.equals(\"\")) { seriesGrade = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2787/buggy-version/app.src.main.java.com.android.rotem.showme.AddNewSeriesActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "9198ee3ed1bee5a01d85d457a757e98e829c1a6b", "Url": "https://api.github.com/repos/RotemShaanan/SHOWme", "Date": "2016-04-30T10:10:00Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (seriesPeople != null) { if (seriesPeople.equals(\"\")) { seriesPeople = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2787/buggy-version/app.src.main.java.com.android.rotem.showme.AddNewSeriesActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "9198ee3ed1bee5a01d85d457a757e98e829c1a6b", "Url": "https://api.github.com/repos/RotemShaanan/SHOWme", "Date": "2016-04-30T10:10:00Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (curEpisodeName != null) { if (!(curEpisodeName.equals(\"\"))) { mListDataChild.get((\"Season \" + curSeasonNum)).add((((\"e\" + curEpisodeNum) + \" - \") + curEpisodeName)); }else { mListDataChild.get((\"Season \" + curSeasonNum)).add((\"e\" + curEpisodeNum)); } }else { mListDataChild.get((\"Season \" + curSeasonNum)).add((\"e\" + curEpisodeNum)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2787/buggy-version/app.src.main.java.com.android.rotem.showme.ExpandableListAdapter.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "9198ee3ed1bee5a01d85d457a757e98e829c1a6b", "Url": "https://api.github.com/repos/RotemShaanan/SHOWme", "Date": "2016-04-30T10:10:00Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((path.charAt(0)) != '/') { return (homeDir + \"/\") + path; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5455/buggy-version/primitiveFTPd.src.org.primftpd.filesystem.Utils.java", "BodyUseAPI": [], "Fixed commit": "46697423bc102052a625b3454dd8784f455f5c34", "Url": "https://api.github.com/repos/wolpi/prim-ftpd", "Date": "2017-11-07T22:04:54Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (methodName.isEmpty()) throw new java.lang.IllegalArgumentException(\"empty method name\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6689/buggy-version/src.main.java.repairer.JmlProgram.java", "BodyUseAPI": [], "Fixed commit": "62d08ac08c93c8221e07e66d38f789b6c1255e0f", "Url": "https://api.github.com/repos/zeminlu/stryker", "Date": "2014-09-25T18:52:09Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((matchDocs == null) || (matchDocs.isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1013/buggy-version/app.src.main.java.org.wildstang.wildrank.androidv2.views.data.StackDataView.java", "BodyUseAPI": [], "Fixed commit": "5956cf9ee896f043a4bf2fad97d41ba26fb02270", "Url": "https://api.github.com/repos/wildstang/wildrank-android", "Date": "2015-04-03T13:09:32Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (printMessage) java.lang.System.out.println(message);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7882/buggy-version/Grappler.src.main.Debug.java", "BodyUseAPI": [], "Fixed commit": "22669469840f853567e92bd686a4659edebc6bd8", "Url": "https://api.github.com/repos/eacoeytaux/grappler", "Date": "2015-05-17T17:10:39Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loggerSummary.lastNErrors.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((errors != null) && ((errors.length) > 0)) { for (int i = 0; i < (errors.length); i++) { if ((errors[i]) == null) { errors[i] = \"\"; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5128/buggy-version/upena-main.src.main.java.com.jivesoftware.os.upena.main.Deployable.java", "BodyUseAPI": [], "Fixed commit": "7320d204c52fb1afd4cc911f3e15058805aa2a8b", "Url": "https://api.github.com/repos/jivesoftware/upena", "Date": "2015-05-19T19:13:18Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showDefaultColumn) { configureDefaultColumn(tableViewerCreator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4890/buggy-version/main.plugins.org.talend.core.ui.src.main.java.org.talend.core.ui.metadata.editor.AbstractMetadataTableEditorView.java", "BodyUseAPI": [], "Fixed commit": "66ab81df03f814e74b6706d19007e80f5550ad47", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2015-01-23T10:57:21Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((notebook.getNumeroPatrimonial()) != null) { chaveSerial = chaveSerialDao.buscaPorNotebook(notebook.getNumeroPatrimonial()); java.lang.System.out.println((\"serial \" + (chaveSerial.getChaveSerial()))); return chaveSerial; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2202/buggy-version/src.mb.dsam.mb.NotebookBean.java", "BodyUseAPI": ["mb.dsam.dao.ChaveSerialDao.buscaPorNotebook(notebook.getNumeroPatrimonial())", "mb.dsam.modelo.Notebook.getNumeroPatrimonial()"], "Fixed commit": "6b85c5e7a385fcafbd8ff6f3e3aa9114509e167d", "Url": "https://api.github.com/repos/adilsonoj/ControleEquipamentos", "Date": "2015-02-05T12:39:23Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((core.currentScreen) == null) { java.lang.System.out.println(\"3 Current Screen is null\"); }else { java.lang.System.out.println(\"3 Current Screen is NOT null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3870/buggy-version/core.src.com.ubuntuserver.frontend.pages.Widgets_Login2.java", "BodyUseAPI": [], "Fixed commit": "be5c10eca4ea9186c18e14a1e5fe42c5ecc6bcfe", "Url": "https://api.github.com/repos/abbott221/JohnMaddenWasHere", "Date": "2014-08-04T19:08:11Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getCurrentResultSet().next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hasNext) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7199/buggy-version/sharding-jdbc-core.src.main.java.com.dangdang.ddframe.rdb.sharding.merger.iterator.IteratorStreamResultSetMerger.java", "BodyUseAPI": [], "Fixed commit": "8bdbfa6f3da5931be9df62037cae3b8ed1be91eb", "Url": "https://api.github.com/repos/sharding-sphere/sharding-sphere", "Date": "2017-07-12T04:11:07Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ui.ProjectList.newTaskList.contains(tasks.get(((tasks.size()) - 1))))) { ui.ProjectList.newTaskList.add(tasks.get(((tasks.size()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/641/buggy-version/src.ui.TaskList.java", "BodyUseAPI": ["ui.TaskList.TaskListListener.add(java.lang.Object[])", "java.util.ArrayList<java.lang.Object[]>.get(int)", "java.util.ArrayList<java.lang.Object[]>.size()"], "Fixed commit": "57c75303b341df0b759719b78d22f440dceb7d4d", "Url": "https://api.github.com/repos/dzhangd/task-manager", "Date": "2016-03-29T09:10:00Z"},
{"Line": "=>885", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(origValue.contains(\"localhost:\"))) && (\"ZOOKEEPER_SERVER\".equals(component))) { return origValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9255/buggy-version/ambari-server.src.main.java.org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor.java", "BodyUseAPI": [], "Fixed commit": "8eb23bfd0e9e9a3e8c13f63c52aede6412fd7d24", "Url": "https://api.github.com/repos/fanzhidongyzby/ambari", "Date": "2015-12-04T04:42:34Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (suffix.equalsIgnoreCase(\"\")) { suffix = ratpack.thymeleaf.ThymeleafModule.DEFAULT_TEMPLATE_SUFFIX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1322/buggy-version/ratpack-thymeleaf.src.main.java.ratpack.thymeleaf.ThymeleafModule.java", "BodyUseAPI": [], "Fixed commit": "0b9ee275404c55990dc0fabceac5570701d82740", "Url": "https://api.github.com/repos/rhart/ratpack", "Date": "2013-12-04T11:29:33Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((contactPojo.phone) != null) { if ((android.os.Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { contactPojo.phone = android.telephony.PhoneNumberUtils.formatNumber(contactPojo.phone, java.util.Locale.getDefault().getCountry()); }else { contactPojo.phone = android.telephony.PhoneNumberUtils.formatNumber(contactPojo.phone); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7957/buggy-version/app.src.main.java.fr.neamar.kiss.result.ContactResult.java", "BodyUseAPI": [], "Fixed commit": "2b353718e8dd3636b5b0f7ba19c5c98194efca82", "Url": "https://api.github.com/repos/Neamar/KISS", "Date": "2015-06-06T21:45:33Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (get != null) get.abort();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/892/buggy-version/src.main.java.org.giiwa.framework.utils.Http.java", "BodyUseAPI": ["org.apache.http.client.methods.HttpGet.abort()"], "Fixed commit": "a4d78dd1ee15f1a1b334c8ed5fa7496e3b768cdd", "Url": "https://api.github.com/repos/giiwa/giiwa", "Date": "2016-07-24T01:19:15Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sources[source]) >= ((cgpParameters.numInputs()) + (layer * (cgpParameters.numNodesPerLayer())))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1644/buggy-version/src.SigmaEC.represent.cgp.CartesianIndividual.java", "BodyUseAPI": [], "Fixed commit": "2e02aaf65bf77a2344b97f3b12eecfa39773c896", "Url": "https://api.github.com/repos/SigmaX/SigmaEC", "Date": "2016-03-21T09:13:26Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((layer < (cgpParameters.levelsBack())) && ((sources[source]) < 0)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1644/buggy-version/src.SigmaEC.represent.cgp.CartesianIndividual.java", "BodyUseAPI": [], "Fixed commit": "2e02aaf65bf77a2344b97f3b12eecfa39773c896", "Url": "https://api.github.com/repos/SigmaX/SigmaEC", "Date": "2016-03-21T09:13:26Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (view == null) { return super.onKeyDown(keyCode, event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7782/buggy-version/serenity-app.src.main.java.us.nineworlds.serenity.ui.browser.tv.seasons.TVShowSeasonBrowserActivity.java", "BodyUseAPI": [], "Fixed commit": "cb4e029ade3dabc2d7e0fd3338c455711c6db86f", "Url": "https://api.github.com/repos/kingargyle/serenity-android", "Date": "2013-10-06T18:43:45Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkType) { sb.append(\"', type: '\").append(fr.lirmm.graphik.graal.store.gdb.Neo4jStore.getType(t)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7305/buggy-version/graal-store.graal-store-neo4j.src.main.java.fr.lirmm.graphik.graal.store.gdb.Neo4jStore.java", "BodyUseAPI": [], "Fixed commit": "64eb9bc33e6eed13aa1879b9f34762e19ad98fdf", "Url": "https://api.github.com/repos/graphik-team/graal", "Date": "2017-06-09T12:40:12Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getMaterial().toString().toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (mat == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3191/buggy-version/src.net.krinsoft.simplehealth.PListener.java", "BodyUseAPI": [], "Fixed commit": "4016d9c13a0d34b56bd203a9ba533dbc8b278b25", "Url": "https://api.github.com/repos/krinsdeath/simplehealth", "Date": "2011-07-23T11:55:07Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Settings.basic.getKeys(((\"groups.\" + (sPlayer.getGroup())) + \".items\"))) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3191/buggy-version/src.net.krinsoft.simplehealth.PListener.java", "BodyUseAPI": [], "Fixed commit": "4016d9c13a0d34b56bd203a9ba533dbc8b278b25", "Url": "https://api.github.com/repos/krinsdeath/simplehealth", "Date": "2011-07-23T11:55:07Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (possi_percentage >= 1) { possi_percentage = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2248/buggy-version/src.SecondStage.java", "BodyUseAPI": [], "Fixed commit": "c89f3470193c85b90676cb5ebe78d97de1a6864c", "Url": "https://api.github.com/repos/sharonWU0505/SMART", "Date": "2016-12-01T11:45:40Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String,org.springframework.jdbc.core.BeanPropertyRowMapper<com.jh.vo.Item>,request.getSku())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(items.isEmpty())) { item = items.get(0); item.setImage(commonUtil.getImageUrl(item.getSku(), \"jpg\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1848/buggy-version/jhplugins.src.main.java.com.jh.dao.orgilldb.item.ItemDAOImpl.java", "BodyUseAPI": ["java.util.List<com.jh.vo.Item>.get(int)"], "Fixed commit": "868408818b8d98da4335dcc40d27f61733bc4eaf", "Url": "https://api.github.com/repos/huzefapoonawala/huzefarepo", "Date": "2017-10-30T17:36:36Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rythmengine.spring.util.SessionManager.request()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (null != request) { C.Map<java.lang.String, java.lang.Object> params = renderArgs; params.put((u ? \"_request\" : \"request\"), request); params.put(\"__request\", request); params.put((u ? \"_response\" : \"response\"), org.rythmengine.spring.util.SessionManager.response()); javax.servlet.http.HttpSession httpSession = request.getSession(false); params.put((u ? \"_httpSession\" : \"httpSession\"), httpSession); if (org.rythmengine.spring.util.MailerBase.enableSessionManager) { params.put((u ? \"_session\" : \"session\"), org.rythmengine.spring.util.Session.current()); params.put((u ? \"_flash\" : \"flash\"), org.rythmengine.spring.util.Flash.current()); } if (org.rythmengine.spring.util.MailerBase.enableUserAgentDetector) { params.put((u ? \"_userAgent\" : \"userAgent\"), org.rythmengine.spring.util.UADetector.get()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9168/buggy-version/src.main.java.org.rythmengine.spring.util.MailerBase.java", "BodyUseAPI": ["params.put((u ? \"_request\" : \"request\"),javax.servlet.http.HttpServletRequest)", "javax.servlet.http.HttpServletRequest.getSession(boolean)", "params.put(java.lang.String,javax.servlet.http.HttpServletRequest)"], "Fixed commit": "4e09a00182951ce340c8dc26784af9639b1e5136", "Url": "https://api.github.com/repos/greenlaw110/spring-rythm", "Date": "2014-02-27T23:38:33Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5995/buggy-version/src.model.Board.java", "BodyUseAPI": [], "Fixed commit": "0b1c22834cfca4614173cb25a2c27f365a4f13b3", "Url": "https://api.github.com/repos/pacarvalho/SixesWild", "Date": "2015-04-26T21:04:58Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.threebars.worldclock2.TimeUtil.getTimeZone(cityTimeZone.getTimezoneName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (timeZoneName != null) { clock.setTimeZone(org.joda.time.DateTimeZone.forID(timeZoneName).toTimeZone()); }else { clock.setTimeZone(cityTimeZone.getTimezone()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/533/buggy-version/src.com.threebars.worldclock2.IconicAdapter.java", "BodyUseAPI": ["org.joda.time.DateTimeZone.forID(timeZoneName).toTimeZone()", "com.threebars.worldclock2.CustomDigitalClock.setTimeZone(org.joda.time.DateTimeZone.forID(timeZoneName).toTimeZone())", "org.joda.time.DateTimeZone.forID(java.lang.String)"], "Fixed commit": "d8e103049ca78dc4101b5cdd429fc93ccf65fcc7", "Url": "https://api.github.com/repos/knadjafloo/worldclock", "Date": "2013-05-30T05:39:00Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 0) ans[i] += ans[(i - 1)];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6271/buggy-version/src.Solution63.java", "BodyUseAPI": [], "Fixed commit": "9bea596d93872054642c8fea3014b1a06b8ad66d", "Url": "https://api.github.com/repos/haezh/leetcodeJ", "Date": "2017-02-17T09:32:58Z"},
{"Line": "=>820", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameState) != (com.dbash.models.TurnProcessor.GameState.NO_SAVED_GAME)) { currentCharacter.setCharacterisUsingEye(usingEye); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3588/buggy-version/core.src.com.dbash.models.TurnProcessor.java", "BodyUseAPI": [], "Fixed commit": "fe06e17bf51048f88a1fa41540119b83e3684c10", "Url": "https://api.github.com/repos/stefoid/dungeonbash", "Date": "2015-05-02T02:26:43Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (imput[0].equals(\"--help\")) { java.lang.System.out.println((\"to create the vocavulary chart in the terminal\\n\" + (((((((((((\"\\t\\tfirst parameter \\\"<text/>\\\"\\n\" + \"\\t\\n\") + \"\\t-s saves the vocavulary chart into a file in the actual path\\n\") + \"\\t\\tfirst \\\"<text/>\\\"\\n\") + \"\\t\\n\") + \"\\t-p saves the vocavulary chart into the especified paht\\n\") + \"\\t\\tfirst \\\"<text/>\\\"\\n\") + \"\\t\\tsecond \\\"paht\\\"\\n\") + \"\\t\\n\") + \"\\t-v vervose, shows the vocavulary chart into the terminal\\n\") + \"\\t\\n\") + \" --xml create chart in a xml format(NotImplemented)\"))); }else if (((opcion.charAt(0)) == '-') && ((imput.length) == 2)) { switch (opcion.charAt(1)) { case 's' : if ((imput.length) > 2) { sacarvocabulario.MakeVocabulary.saveFile(sacarvocabulario.MakeVocabulary.makeVocabulary(imput[1]), (((java.lang.System.getProperty(\"user.dir\")) + \"/\") + (imput[2]))); java.lang.System.out.println(((\"File \" + (imput[2])) + \" saved!\")); }else java.lang.System.out.println(\"you must indicate the name of the file!\"); break; case 'p' : if ((imput.length) > 3) { sacarvocabulario.MakeVocabulary.saveFile(sacarvocabulario.MakeVocabulary.makeVocabulary(imput[1]), (((imput[2]) + \"/\") + (imput[3]))); java.lang.System.out.println((\"File saved in \" + (imput[2]))); }else java.lang.System.out.println(\"you must to indicate the paht and the name of the file!\"); break; case 'v' : java.util.ArrayList<java.lang.String> l = sacarvocabulario.MakeVocabulary.makeVocabulary(imput[1]); sacarvocabulario.SacarVocabulario.printVocavulary(l); break; } }else if (((opcion.charAt(0)) == '-') && ((opcion.length()) == 3)) { switch (opcion.charAt(1)) { case 's' : switch (opcion.charAt(2)) { case 'v' : if ((imput.length) > 2) { java.util.ArrayList<java.lang.String> l = sacarvocabulario.MakeVocabulary.makeVocabulary(imput[1]); sacarvocabulario.SacarVocabulario.printVocavulary(l); sacarvocabulario.MakeVocabulary.saveFile(l, (((java.lang.System.getProperty(\"user.dir\")) + \"/\") + (imput[2]))); java.lang.System.out.println(((\"File \" + (imput[2])) + \" saved!\")); }else java.lang.System.out.println(\"you must indicate the name of the file!\"); break; default : java.lang.System.out.println(\"Option not recognized\"); break; } break; case 'p' : switch (opcion.charAt(2)) { case 'v' : if ((imput.length) > 3) { java.util.ArrayList<java.lang.String> l = sacarvocabulario.MakeVocabulary.makeVocabulary(imput[1]); sacarvocabulario.SacarVocabulario.printVocavulary(l); sacarvocabulario.MakeVocabulary.saveFile(l, (((imput[2]) + \"/\") + (imput[3]))); java.lang.System.out.println((\"File saved in \" + (imput[2]))); }else java.lang.System.out.println(\"you must indicate the name of the file!\"); break; default : java.lang.System.out.println(\"Option not recognized\"); break; } break; case 'v' : java.util.ArrayList<java.lang.String> l = sacarvocabulario.MakeVocabulary.makeVocabulary(imput[1]); switch (opcion.charAt(2)) { case 's' : if ((imput.length) > 2) { sacarvocabulario.MakeVocabulary.saveFile(l, (((java.lang.System.getProperty(\"user.dir\")) + \"/\") + (imput[2]))); java.lang.System.out.println(((\"File \" + (imput[2])) + \" saved!\")); }else java.lang.System.out.println(\"you must indicate the name of the file!\"); break; case 'p' : if ((imput.length) > 3) { sacarvocabulario.MakeVocabulary.saveFile(l, (((imput[2]) + \"/\") + (imput[3]))); java.lang.System.out.println((\"File saved in \" + (imput[2]))); }else java.lang.System.out.println(\"you must to indicate the paht and the name of the file!\"); break; default : java.lang.System.out.println(\"Not recognized option\"); break; } sacarvocabulario.SacarVocabulario.printVocavulary(l); break; } }else { java.util.ArrayList<java.lang.String> l = sacarvocabulario.MakeVocabulary.makeVocabulary(imput[0]); sacarvocabulario.SacarVocabulario.printVocavulary(l); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1817/buggy-version/src.sacarvocabulario.SacarVocabulario.java", "BodyUseAPI": ["sacarvocabulario.MakeVocabulary.makeVocabulary(java.lang.String)", "sacarvocabulario.MakeVocabulary.saveFile(sacarvocabulario.MakeVocabulary.makeVocabulary(imput[1]),java.lang.String)", "sacarvocabulario.MakeVocabulary.makeVocabulary(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "sacarvocabulario.MakeVocabulary.saveFile(java.util.ArrayList<java.lang.String>,java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "sacarvocabulario.MakeVocabulary.makeVocabulary(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "sacarvocabulario.MakeVocabulary.saveFile(java.util.ArrayList<java.lang.String>,java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "sacarvocabulario.MakeVocabulary.saveFile(java.util.ArrayList<java.lang.String>,java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "sacarvocabulario.MakeVocabulary.saveFile(sacarvocabulario.MakeVocabulary.makeVocabulary(imput[1]),java.lang.String)", "sacarvocabulario.MakeVocabulary.makeVocabulary(java.lang.String)", "sacarvocabulario.MakeVocabulary.makeVocabulary(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "sacarvocabulario.MakeVocabulary.makeVocabulary(java.lang.String)", "sacarvocabulario.MakeVocabulary.makeVocabulary(java.lang.String)", "sacarvocabulario.MakeVocabulary.saveFile(java.util.ArrayList<java.lang.String>,java.lang.String)"], "Fixed commit": "3d0a13b2431582c64add12257bf54b5e0acba94d", "Url": "https://api.github.com/repos/pedrob1ih/VocabularyChart", "Date": "2016-04-13T21:53:21Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inhaltKlasseStundenPerso.get(s).get(k)) != null) { neuHash = inhaltKlasseStundenPerso.get(s); neuHash.put(k, ((inhaltKlasseStundenPerso.get(s).get(k)) + (pe.duration()))); }else { neuHash = new java.util.HashMap<>(); neuHash.put(k, pe.duration()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3908/buggy-version/stundenplan.git.src.main.java.de.unibremen.swp.stundenplan.gui.LehreransichtPanel.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.HashMap<java.lang.String, java.lang.Integer>>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Integer>.put(java.lang.String,pe.duration())", "java.util.HashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.HashMap<java.lang.String, java.lang.Integer>>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Integer>.put(java.lang.String,((inhaltKlasseStundenPerso.get(s).get(k)) + (pe.duration())))"], "Fixed commit": "dd20a35cd50f53646fb1462e921ca77693a8f45a", "Url": "https://api.github.com/repos/OliverBe/stundenplanswp", "Date": "2015-01-20T12:27:24Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.apprentice.ti8m.myfirstrestclient.validator.LoginValidator.isBothPasswordsValid(password, confirmPassword))) { onInvalidPassword(); onInvalidConfirmPassword(); temp = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7377/buggy-version/app.src.main.java.com.apprentice.ti8m.myfirstrestclient.screens.signup.SignUpPresenterImpl.java", "BodyUseAPI": [], "Fixed commit": "2dabd398dfe35f5e696808d257ca1ed8429fb059", "Url": "https://api.github.com/repos/LGoyvaerts/FirstWebserviceClient", "Date": "2017-11-01T13:29:59Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.apprentice.ti8m.myfirstrestclient.validator.LoginValidator.isLoginEmailValid(email))) { onInvalidEmail(); temp = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7377/buggy-version/app.src.main.java.com.apprentice.ti8m.myfirstrestclient.screens.signup.SignUpPresenterImpl.java", "BodyUseAPI": [], "Fixed commit": "2dabd398dfe35f5e696808d257ca1ed8429fb059", "Url": "https://api.github.com/repos/LGoyvaerts/FirstWebserviceClient", "Date": "2017-11-01T13:29:59Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!temp) { com.apprentice.ti8m.myfirstrestclient.validator.LoginValidator.isSignupValid(email, password, confirmPassword, new com.apprentice.ti8m.myfirstrestclient.screens.signup.SignUpPresenterImpl.ValidatorCallback(this, email, password, confirmPassword)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7377/buggy-version/app.src.main.java.com.apprentice.ti8m.myfirstrestclient.screens.signup.SignUpPresenterImpl.java", "BodyUseAPI": [], "Fixed commit": "2dabd398dfe35f5e696808d257ca1ed8429fb059", "Url": "https://api.github.com/repos/LGoyvaerts/FirstWebserviceClient", "Date": "2017-11-01T13:29:59Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((null != keepAliveStrategyCopy) || (null != targetAuthStrategyCopy)) { return new microsoft.exchange.webservices.data.core.EwsSSLProtocolSocketFactory(sslContext, keepAliveStrategyCopy, targetAuthStrategyCopy, hostnameVerifier); }else { return new microsoft.exchange.webservices.data.core.EwsSSLProtocolSocketFactory(sslContext, hostnameVerifier); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4148/buggy-version/src.main.java.microsoft.exchange.webservices.data.core.EwsSSLProtocolSocketFactory.java", "BodyUseAPI": [], "Fixed commit": "de58c0207f016502b925f3329cc2fc732aa231e2", "Url": "https://api.github.com/repos/pheenomenon/ews-java-api", "Date": "2017-08-22T21:29:14Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sabres.Sabres.self()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (com.sabres.SqliteMaster.tableExists(sabres, name)) { return sabres.count(command.toSql()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5367/buggy-version/sabres.src.main.java.com.sabres.SabresQuery.java", "BodyUseAPI": ["com.sabres.Sabres.count(command.toSql())"], "Fixed commit": "3048eeb3cd334a33ee2c090bf2538a79e5b3c8f8", "Url": "https://api.github.com/repos/tamir7/Sabres", "Date": "2015-07-19T14:09:26Z"},
{"Line": "=>879", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (first) { s.append(\"'' \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1254/buggy-version/graal.graal-store.graal-store-rdbms.src.main.java.fr.lirmm.graphik.graal.store.rdbms.DefaultRdbmsStore.java", "BodyUseAPI": [], "Fixed commit": "66f9c5713c66bbfb89e2c343d3bbd17684345585", "Url": "https://api.github.com/repos/graphik-team/graal", "Date": "2015-09-21T12:58:34Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getLife()) > 0) { this.setAppearance(new org.uqbar.arkanoid.appearences.RectangleWithBorder(this.determineColor(), ((int) (this.getAppearance().getWidth())), ((int) (this.getAppearance().getHeight())))); this.getScene().addPoint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1804/buggy-version/src.main.java.org.uqbar.arkanoid.components.StaticBlock.java", "BodyUseAPI": [], "Fixed commit": "624c4eec6c4b136611710a3c2a41bbe02888ca3f", "Url": "https://api.github.com/repos/Syndeh/IPV-6-TP1", "Date": "2014-04-18T21:41:57Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (yflip) tile = ((32768 + (tile * 16)) + 14) - ((((currentLine) - y) % 8) * 2); else tile = (32768 + (tile * 16)) + ((((currentLine) - y) % 8) * 2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7559/buggy-version/src.main.java.gbemu.graphics.GameBoyLCD.java", "BodyUseAPI": [], "Fixed commit": "5a7da15cd213ca2dd8763ee682cef94c0e489add", "Url": "https://api.github.com/repos/ExPixel/gbemu", "Date": "2015-11-23T07:10:54Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (props.isEmpty()) { java.lang.System.err.println(\"[ERROR]\\tproperties could not be loaded :\\'(\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8884/buggy-version/ang.analyzer.src.main.java.ang.analyzer.Analyzer.java", "BodyUseAPI": [], "Fixed commit": "0229b9a59a74530f8024d51248c348e0d91b205e", "Url": "https://api.github.com/repos/spinfo/ang", "Date": "2016-11-09T15:01:38Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.springframework.util.StringUtils.hasLength(name))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4067/buggy-version/core.src.main.java.com.ywc.mgt.processcontrol.base.util.BeanFactoryUtil.java", "BodyUseAPI": [], "Fixed commit": "114a604ad5bffc29e8f829961d0866c4429cde46", "Url": "https://api.github.com/repos/Yanweichen/SimpleProcessControl", "Date": "2017-12-25T02:29:04Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.lsts.neptus.comm.manager.imc.ImcMsgManager.getManager().getState(v.getName()).last(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((state != null) && ((state.getOpMode()) == (VehicleState.OP_MODE.SERVICE))) { vehicles.put(v.getName(), v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5745/buggy-version/plugins-dev.groovy.pt.lsts.neptus.plugins.groovy.GroovyEngine.java", "BodyUseAPI": [], "Fixed commit": "931abd2c5e0bdee3f2b8c1bd645d067c8d86976a", "Url": "https://api.github.com/repos/kmolima/neptus", "Date": "2017-06-06T01:19:26Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((output.size()) > i) { output.set(i, new java.util.ArrayList<uk.ac.kent.dover.fastGraph.FastGraph>()); }else { output.add(new java.util.ArrayList<uk.ac.kent.dover.fastGraph.FastGraph>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7517/buggy-version/src.uk.ac.kent.dover.fastGraph.KMedoids.java", "BodyUseAPI": ["java.util.ArrayList<java.util.ArrayList<uk.ac.kent.dover.fastGraph.FastGraph>>.add(java.util.ArrayList<uk.ac.kent.dover.fastGraph.FastGraph>)", "java.util.ArrayList<java.util.ArrayList<uk.ac.kent.dover.fastGraph.FastGraph>>.set(int,java.util.ArrayList<uk.ac.kent.dover.fastGraph.FastGraph>)"], "Fixed commit": "5856503e9b765a2c6d8e8efa38b1a1bac8892a31", "Url": "https://api.github.com/repos/peterrodgers/dover", "Date": "2017-01-26T16:54:01Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.canSprinkle()) counter = ((counter) + 1) % 60;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1646/buggy-version/src.main.java.com.InfinityRaider.AgriCraft.tileentity.TileEntitySprinkler.java", "BodyUseAPI": [], "Fixed commit": "9083539662d936359b51ccc07abf3dd6e0be69a3", "Url": "https://api.github.com/repos/AgriCraft/AgriCraft", "Date": "2015-01-09T22:44:45Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e != null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5381/buggy-version/app.src.main.java.com.clothapp.settings.UserSettingsUtil.java", "BodyUseAPI": [], "Fixed commit": "9dfc2e70415a50f093e46df0ddfc380946a50648", "Url": "https://api.github.com/repos/ClothAppProject/ClothAppAndroid", "Date": "2016-05-26T18:27:59Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e != null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5381/buggy-version/app.src.main.java.com.clothapp.settings.UserSettingsUtil.java", "BodyUseAPI": [], "Fixed commit": "9dfc2e70415a50f093e46df0ddfc380946a50648", "Url": "https://api.github.com/repos/ClothAppProject/ClothAppAndroid", "Date": "2016-05-26T18:27:59Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e != null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5381/buggy-version/app.src.main.java.com.clothapp.settings.UserSettingsUtil.java", "BodyUseAPI": [], "Fixed commit": "9dfc2e70415a50f093e46df0ddfc380946a50648", "Url": "https://api.github.com/repos/ClothAppProject/ClothAppAndroid", "Date": "2016-05-26T18:27:59Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/852/buggy-version/de.bund.bfr.knime.src.de.bund.bfr.knime.XmlConverter.java", "BodyUseAPI": [], "Fixed commit": "c5f1a29acd5baab295995ce7c4c6d9f4306381d5", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2014-05-21T10:35:01Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/852/buggy-version/de.bund.bfr.knime.src.de.bund.bfr.knime.XmlConverter.java", "BodyUseAPI": [], "Fixed commit": "c5f1a29acd5baab295995ce7c4c6d9f4306381d5", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2014-05-21T10:35:01Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInEditMode()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6001/buggy-version/android-pdf-viewer.src.main.java.com.github.barteksc.pdfviewer.PDFView.java", "BodyUseAPI": [], "Fixed commit": "46e2dde664964efae35c2c0dec5d22ef24f4c752", "Url": "https://api.github.com/repos/barteksc/AndroidPdfViewer", "Date": "2017-11-11T17:30:08Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == (R.id.change_range_button)) { android.content.Intent intent = new android.content.Intent(this, com.csci3130_group11.csci3130_group11.SetRanges.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6116/buggy-version/app.src.main.java.com.csci3130_group11.csci3130_group11.DisplayCurrentData.java", "BodyUseAPI": [], "Fixed commit": "92be1aea16fda9b870ed98f26e8d337f0816e456", "Url": "https://api.github.com/repos/alex-clarke/CSCI3130-Group11", "Date": "2017-06-13T18:14:02Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reset) { org.xnio.IoUtils.safeClose(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6364/buggy-version/core.src.main.java.io.undertow.protocols.http2.Http2StreamSinkChannel.java", "BodyUseAPI": [], "Fixed commit": "fea26deb412f59dbec17294868b95780569a71f0", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2015-06-01T08:24:22Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isReadyForFlush())) { org.xnio.IoUtils.safeClose(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6364/buggy-version/core.src.main.java.io.undertow.protocols.http2.Http2StreamSinkChannel.java", "BodyUseAPI": [], "Fixed commit": "fea26deb412f59dbec17294868b95780569a71f0", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2015-06-01T08:24:22Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mysql.MySQL_Use) { fr.skyost.auth.AuthPlugin.stat = java.sql.DriverManager.getConnection((((((\"jdbc:mysql://\" + (mysql.MySQL_Host)) + \":\") + (mysql.MySQL_Port)) + \"/\") + (mysql.MySQL_Database)), mysql.MySQL_Username, mysql.MySQL_Password).createStatement(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/689/buggy-version/src.fr.skyost.auth.AuthPlugin.java", "BodyUseAPI": ["java.sql.DriverManager.getConnection((((((\"jdbc:mysql://\" + (mysql.MySQL_Host)) + \":\") + (mysql.MySQL_Port)) + \"/\") + (mysql.MySQL_Database)),mysql.MySQL_Username,mysql.MySQL_Password)", "java.sql.Connection.createStatement()"], "Fixed commit": "1574421be9787148fa7a764bda3e536d03640c35", "Url": "https://api.github.com/repos/Skyost/Skyauth", "Date": "2013-11-09T21:09:02Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.wicket.util.string.Strings.isEmpty(endpoint.getInputAsOClass()))) { ((java.util.Map<java.lang.Object, java.lang.Object>) (input)).put(ODocumentHelper.ATTRIBUTE_CLASS, endpoint.getInputAsOClass()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3267/buggy-version/orienteer-camel.src.main.java.org.orienteer.camel.component.OrientDBProducer.java", "BodyUseAPI": ["java.lang.Object.put(ODocumentHelper.ATTRIBUTE_CLASS,endpoint.getInputAsOClass())", "org.orienteer.camel.component.OrientDBEndpoint.getInputAsOClass()"], "Fixed commit": "49d9258e9670d9af73689b848b59d286c2431366", "Url": "https://api.github.com/repos/OrienteerBAP/Orienteer", "Date": "2017-01-19T23:00:03Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.orienteer.camel.component.OrientDBProducer.fromMap(entry.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((value instanceof java.lang.String) && (org.apache.wicket.util.string.Strings.isEmpty(((java.lang.String) (value))))) { value = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3267/buggy-version/orienteer-camel.src.main.java.org.orienteer.camel.component.OrientDBProducer.java", "BodyUseAPI": [], "Fixed commit": "49d9258e9670d9af73689b848b59d286c2431366", "Url": "https://api.github.com/repos/OrienteerBAP/Orienteer", "Date": "2017-01-19T23:00:03Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.mn.state.health.lims.common.util.ConfigurationProperties.getInstance().getPropertyValueUpperCase(Property.FormFieldSet)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (IActionConstants.FORM_FIELD_SET_CI_IPCI.equals(fieldSet)) { return new us.mn.state.health.lims.common.formfields.CI_IPCIFormFields().getImplementationAttributes(); }else if (IActionConstants.FORM_FIELD_SET_CI_REGIONAL.equals(fieldSet)) { return new us.mn.state.health.lims.common.formfields.CI_RegionalFormFields().getImplementationAttributes(); }else if (IActionConstants.FORM_FIELD_SET_KENYA.equals(fieldSet)) { return new us.mn.state.health.lims.common.formfields.KenyaFormFields().getImplementationAttributes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5695/buggy-version/app.src.us.mn.state.health.lims.common.formfields.DefaultFormFields.java", "BodyUseAPI": ["IActionConstants.FORM_FIELD_SET_KENYA.equals(java.lang.String)", "IActionConstants.FORM_FIELD_SET_CI_REGIONAL.equals(java.lang.String)"], "Fixed commit": "d0437ccfb4da4ef4f52cf863528b839eb0d0664d", "Url": "https://api.github.com/repos/pfschwartz/openelisglobal-core", "Date": "2015-02-20T20:36:20Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.mn.state.health.lims.common.util.ConfigurationProperties.getInstance().getPropertyValueUpperCase(Property.FormFieldSet)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (IActionConstants.FORM_FIELD_SET_CI_IPCI.equals(fieldSet)) { return new us.mn.state.health.lims.common.formfields.CI_IPCIAdminFormFields().getImplementationAttributes(); }else if (IActionConstants.FORM_FIELD_SET_CI_REGIONAL.equals(fieldSet)) { return new us.mn.state.health.lims.common.formfields.CI_RegionalAdminFormFields().getImplementationAttributes(); }else if (IActionConstants.FORM_FIELD_SET_KENYA.equals(fieldSet)) { return new us.mn.state.health.lims.common.formfields.KenyaAdminFormFields().getImplementationAttributes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5695/buggy-version/app.src.us.mn.state.health.lims.common.formfields.DefaultAdminFormFields.java", "BodyUseAPI": ["IActionConstants.FORM_FIELD_SET_CI_REGIONAL.equals(java.lang.String)", "IActionConstants.FORM_FIELD_SET_KENYA.equals(java.lang.String)"], "Fixed commit": "d0437ccfb4da4ef4f52cf863528b839eb0d0664d", "Url": "https://api.github.com/repos/pfschwartz/openelisglobal-core", "Date": "2015-02-20T20:36:20Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.memtrip.sqlking.preprocessor.processor.freemarker.method.JoinReferencesMethod.getTableFromName(java.lang.String,java.util.List<com.memtrip.sqlking.preprocessor.processor.data.Table>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (joinTable != null) { java.util.List<com.memtrip.sqlking.preprocessor.processor.data.Column> columns = joinTable.getColumns(); for (com.memtrip.sqlking.preprocessor.processor.data.Column column : columns) { if (column.isJoinable(tables)) { java.lang.System.out.println((\"++ \" + (column.getName()))); com.memtrip.sqlking.preprocessor.processor.data.Table columnTable = column.getRootTable(tables); sb.append(buildJoinTable(joinTableName, columnTable)); sb.append(build(column.getClassName(), tables)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2917/buggy-version/preprocessor.src.main.java.com.memtrip.sqlking.preprocessor.processor.freemarker.method.JoinReferencesMethod.java", "BodyUseAPI": ["com.memtrip.sqlking.preprocessor.processor.data.Table.getColumns()"], "Fixed commit": "cc3ca4cf63b00690eec188e83e7d3be32f42760b", "Url": "https://api.github.com/repos/memtrip/SQLKing", "Date": "2016-09-02T14:19:31Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (unit == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4488/buggy-version/expenditure-tracking.src.main.java.pt.ist.expenditureTrackingSystem.domain.organization.Unit.java", "BodyUseAPI": [], "Fixed commit": "7210c7412490c125e3f1aa42dd8814129780ddfa", "Url": "https://api.github.com/repos/ist-dsi/expenditures", "Date": "2014-10-21T14:15:34Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (unit != null) { for (final module.organization.domain.Accountability accountability : unit.getAllParentAccountabilities()) { if ((!(accountability.isErased())) && ((accountability.getAccountabilityType()) == (pt.ist.expenditureTrackingSystem.domain.ExpenditureTrackingSystem.getInstance().getOrganizationalAccountabilityType()))) { final module.organization.domain.Party parent = accountability.getParent(); if (parent.isUnit()) { final module.organization.domain.Unit parentUnit = ((module.organization.domain.Unit) (parent)); if ((parentUnit.getExpenditureUnit()) != null) { return parentUnit.getExpenditureUnit(); } final pt.ist.expenditureTrackingSystem.domain.organization.Unit result = pt.ist.expenditureTrackingSystem.domain.organization.Unit.getParentUnitSafe(parentUnit); if (result != null) { return result; } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4488/buggy-version/expenditure-tracking.src.main.java.pt.ist.expenditureTrackingSystem.domain.organization.Unit.java", "BodyUseAPI": ["module.organization.domain.Unit.getAllParentAccountabilities()"], "Fixed commit": "7210c7412490c125e3f1aa42dd8814129780ddfa", "Url": "https://api.github.com/repos/ist-dsi/expenditures", "Date": "2014-10-21T14:15:34Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Snowball.getShooter()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(co.networkery.uvbeenzaned.SnowballerListener.hitcnts.containsKey(plenemy.getName()))) { co.networkery.uvbeenzaned.SnowballerListener.hitcnts.put(plenemy.getName(), 1); }else { co.networkery.uvbeenzaned.SnowballerListener.hitcnts.put(plenemy.getName(), ((co.networkery.uvbeenzaned.SnowballerListener.hitcnts.get(plenemy.getName())) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6547/buggy-version/src.co.networkery.uvbeenzaned.SnowballerListener.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.put(plenemy.getName(),int)", "org.bukkit.entity.Player.getName()", "org.bukkit.entity.Player.getName()", "java.util.HashMap<java.lang.String, java.lang.Integer>.get(plenemy.getName())", "java.util.HashMap<java.lang.String, java.lang.Integer>.put(plenemy.getName(),((co.networkery.uvbeenzaned.SnowballerListener.hitcnts.get(plenemy.getName())) + 1))", "org.bukkit.entity.Player.getName()"], "Fixed commit": "b01478f748cbff0084ef9fd95dffcb82d7beeb57", "Url": "https://api.github.com/repos/uvbeenzaned/SnowballER", "Date": "2013-01-03T21:07:56Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getProfessorship().getExecutionCourse().getUnitCreditValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (unitCreditValue != null) { return (getEfectiveLoad()) * (unitCreditValue.doubleValue()); }else { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5675/buggy-version/src.main.java.net.sourceforge.fenixedu.domain.teacher.DegreeTeachingService.java", "BodyUseAPI": ["java.math.BigDecimal.doubleValue()"], "Fixed commit": "81acb3fa4288f1415fcc4ea25f45492ed6212dd0", "Url": "https://api.github.com/repos/andre-nunes/fenixedu-academic", "Date": "2015-01-06T15:17:21Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ThreadLocal<rubah.io.RubahIO.ThreadInterruptibleStatus>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (status.interrupted) { status.interrupted = false; throw new java.lang.InterruptedException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3061/buggy-version/src.main.java.rubah.io.RubahIO.java", "BodyUseAPI": [], "Fixed commit": "ff656ebda89a8b6b7022035a22c822628d459890", "Url": "https://api.github.com/repos/lusagent/lusagent-rubah", "Date": "2015-01-02T16:20:38Z"},
{"Line": "=>1010", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ZombieAwareness.config.ZAConfigFeatures.awareness_Sound)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8227/buggy-version/src.main.java.ZombieAwareness.ZAUtil.java", "BodyUseAPI": [], "Fixed commit": "8e10a75d051ab0338c795ffcff5cae2a24f62c99", "Url": "https://api.github.com/repos/Corosauce/ZombieAwareness", "Date": "2016-02-26T03:16:35Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.beans.PropertyDescriptor.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"class\".equals(fieldName)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6158/buggy-version/src.main.java.com.kepler.KeplerGenericException.java", "BodyUseAPI": [], "Fixed commit": "b9038b453bb537a120cb0391c29f0329def0a95c", "Url": "https://api.github.com/repos/Kepler-Framework/Kepler-All", "Date": "2016-08-16T06:38:33Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(m_iterator.hasNext())) { return inData; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1513/buggy-version/org.knime.knip.base.src.org.knime.knip.base.nodes.util.slicelooper.SliceIteratorLoopEndNodeModel.java", "BodyUseAPI": [], "Fixed commit": "3e1d61a88b6b057f013de7721f32fb4ae623ba6b", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2014-09-05T08:41:32Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.knime.knip.base.nodes.util.slicelooper.SliceIteratorUtils.getSelectedAndValidIdx(org.knime.core.data.DataTableSpec,org.knime.core.node.defaultnodesettings.SettingsModelFilterString,org.knime.core.node.NodeLogger)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((validIdx.length) == 0) { throw new java.lang.IllegalArgumentException(\"No valid columns available! (At least one image or labeling is required)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1513/buggy-version/org.knime.knip.base.src.org.knime.knip.base.nodes.util.slicelooper.SliceIteratorLoopStartNodeModel.java", "BodyUseAPI": [], "Fixed commit": "3e1d61a88b6b057f013de7721f32fb4ae623ba6b", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2014-09-05T08:41:32Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((catShelter.size()) == 0) { result = dogShelter.getFirst().animal; dogShelter.removeFirst(); }else { kru.ctci.chapter3.problem7.AnimaleShelter.ArrivalTimestamp dogArrival = dogShelter.getFirst(); kru.ctci.chapter3.problem7.AnimaleShelter.ArrivalTimestamp catArrival = catShelter.getFirst(); if ((dogArrival.timestamp) < (catArrival.timestamp)) { result = dogArrival.animal; dogShelter.removeFirst(); }else { result = catArrival.animal; catShelter.removeFirst(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4432/buggy-version/src.kru.ctci.chapter3.problem7.AnimaleShelter.java", "BodyUseAPI": ["kru.collections.LinkedList<kru.ctci.chapter3.problem7.AnimaleShelter.ArrivalTimestamp>.removeFirst()", "kru.collections.LinkedList<kru.ctci.chapter3.problem7.AnimaleShelter.ArrivalTimestamp>.getFirst()"], "Fixed commit": "d188a013d86e4096eee14d5feb39c231178bb45a", "Url": "https://api.github.com/repos/krukru/LearningJava", "Date": "2015-10-17T21:06:24Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chat.getTopic().trim().equals(\"\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/478/buggy-version/IntTe_MP_01.src.chatlobby.ChatManagerBean.java", "BodyUseAPI": [], "Fixed commit": "8c5171f17d9685820f599deb70eb9567b5bddfc6", "Url": "https://api.github.com/repos/mailhaufen/ZeLaSe-IntTe-Miniprojekt-1", "Date": "2012-11-05T16:39:25Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((textField.getText().length()) > 0) && ((passwordfield.getText().length()) > 0)) { if (cp.logIn(textField.getText(), passwordfield.getText())) { lp.setVisible(false); cp.CreateMainProgram(); }else { java.lang.System.out.println(\"invalid login\"); } }else { java.lang.System.out.println(\"no data\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4932/buggy-version/src.gui.LoginPanel.java", "BodyUseAPI": ["javax.swing.JPasswordField.getText()", "core.CalendarProgram.logIn(java.lang.String,java.lang.String)", "javax.swing.JTextField.getText()"], "Fixed commit": "1ea1853c8ecc4c45a1b241896cf4624ec4f731de", "Url": "https://api.github.com/repos/aleksanb/fellesprosjektet", "Date": "2013-03-21T22:10:15Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(player.capabilities.isCreativeMode)) && ((player.experienceLevel) < (uncraftingResult.experienceCost))) { uncraftingResult.resultType = org.jglrxavpok.mods.decraft.item.uncrafting.UncraftingResult.ResultType.NOT_ENOUGH_XP; }else { for (net.minecraft.item.ItemStack recipeStack : uncraftingResult.getCraftingGrid()) { if ((recipeStack != (net.minecraft.item.ItemStack.EMPTY)) && (recipeStack.getItem().hasContainerItem(null))) { uncraftingResult.resultType = org.jglrxavpok.mods.decraft.item.uncrafting.UncraftingResult.ResultType.NEED_CONTAINER_ITEMS; break; } } if ((uncraftingResult.resultType) != (org.jglrxavpok.mods.decraft.item.uncrafting.UncraftingResult.ResultType.NEED_CONTAINER_ITEMS)) { uncraftingResult.resultType = org.jglrxavpok.mods.decraft.item.uncrafting.UncraftingResult.ResultType.VALID; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7680/buggy-version/src.main.java.org.jglrxavpok.mods.decraft.item.uncrafting.UncraftingManager.java", "BodyUseAPI": ["org.jglrxavpok.mods.decraft.item.uncrafting.UncraftingResult.getCraftingGrid()"], "Fixed commit": "5bcd0aa923b919d18fe0ee348fcb0b3379596acf", "Url": "https://api.github.com/repos/crazysnailboy/UncraftingTable", "Date": "2017-01-22T15:57:31Z"},
{"Line": "=>1141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Sirius.navigator.connection.SessionManager.getProxy().executeTask(java.lang.String,java.lang.String,<nulltype>,de.cismet.cids.server.actions.ServerActionParameter,de.cismet.cids.server.actions.ServerActionParameter,de.cismet.cids.server.actions.ServerActionParameter,de.cismet.cids.server.actions.ServerActionParameter,de.cismet.cids.server.actions.ServerActionParameter,de.cismet.cids.server.actions.ServerActionParameter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((result != null) && (!(result.isSuccessfull()))) { res.setSuccessful(false); res.setProtokoll(result.getProtokoll()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8663/buggy-version/src.main.java.de.cismet.cids.custom.nas.PointNumberDialog.java", "BodyUseAPI": ["de.cismet.cids.custom.utils.pointnumberreservation.PointNumberReservationRequest.getProtokoll()", "de.cismet.cids.custom.utils.pointnumberreservation.PointNumberReservationRequest.setProtokoll(result.getProtokoll())"], "Fixed commit": "13028427a065d106001f01bc38fd5a27fb6edfcf", "Url": "https://api.github.com/repos/cismet/cids-custom-wuppertal", "Date": "2013-11-18T13:23:33Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (additLocationDevice != null) { if (root.filesystem(additLocationDevice).isMounted()) { diskStat = root.filesystem(additLocationDevice).statDisk(); if (diskStat != null) { loopContainer[i] = diskStat.location(); continue; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4437/buggy-version/src.com.spazedog.mounts2sd.tools.Preferences.java", "BodyUseAPI": ["root.filesystem(additLocationDevice).isMounted()", "com.spazedog.lib.rootfw3.RootFW.filesystem(java.lang.String)", "com.spazedog.lib.rootfw3.RootFW.filesystem(java.lang.String)", "root.filesystem(additLocationDevice).statDisk()"], "Fixed commit": "a2ef1aa97f7f33ab42ab2cb58605195794d7de3e", "Url": "https://api.github.com/repos/SpazeDog/mounts2sd", "Date": "2013-09-18T08:08:39Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.callback) != null) { callback.requestFinished(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1255/buggy-version/app.src.main.java.com.gamble.unopp.connection.RequestProcessor.java", "BodyUseAPI": [], "Fixed commit": "7d84d338fa08507c7c8004e1b367f0b406c02e17", "Url": "https://api.github.com/repos/hawk23/unopp", "Date": "2015-05-20T17:54:38Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (notificationId >= (oldNotificationId)) { oldNotificationId = notificationId; return originalResponse.newBuilder().body(new org.catrobat.catroid.web.ProgressResponseBody(originalResponse.body(), receiver, notificationId)).build(); }else { return originalResponse; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2145/buggy-version/catroid.src.org.catrobat.catroid.web.ServerCalls.java", "BodyUseAPI": ["originalResponse.newBuilder().body(new org.catrobat.catroid.web.ProgressResponseBody(originalResponse.body(), receiver, notificationId)).build()", "originalResponse.newBuilder().body(org.catrobat.catroid.web.ProgressResponseBody)"], "Fixed commit": "a6803b0f1192228cacbe29739f0e47a2dca1ab0b", "Url": "https://api.github.com/repos/Manu91/Catroid", "Date": "2015-06-22T09:46:15Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (whitespace != (-1)) { neighbour = java.lang.Integer.parseInt(temp.substring(0, whitespace)); }else { neighbour = java.lang.Integer.parseInt(temp.substring(0, temp.length())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4870/buggy-version/DBL-TaxiscannerNB.src.Bruwmbruwm.Input.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "3329a487a4eafa38d52a100ad9dac51eaa3e0482", "Url": "https://api.github.com/repos/Shviam/DBL-taxiScanner", "Date": "2016-12-19T18:24:39Z"},
{"Line": "=>704", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFmOn()) { setLowPowerMode(false); startFM(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8666/buggy-version/fmapp2.src.com.caf.fmradio.FMRadioService.java", "BodyUseAPI": [], "Fixed commit": "b3eeee2f4612855ab7ec223547f55513d6fab6df", "Url": "https://api.github.com/repos/TeamHorizon/android_hardware_qcom_fm", "Date": "2014-11-27T02:30:30Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((context) != null) && ((com.sun.jna.Pointer.NULL) == (context.getValue()))) { context = org.apache.commons.crypto.jna.OpensslNativeJna.EVP_CIPHER_CTX_new(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8627/buggy-version/src.main.java.org.apache.commons.crypto.jna.OpensslJnaCipher.java", "BodyUseAPI": [], "Fixed commit": "5b4c302d87b5039258fb3785c0d1e18775e4cf7d", "Url": "https://api.github.com/repos/sundapeng/commons-crypto", "Date": "2016-06-30T05:54:44Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mKeyboardSwitcher.isMorseMode()) { mTeclaMorse.getMorseChart().restore(); mIMEView.invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7082/buggy-version/source.src.ca.idi.tekla.ime.TeclaIME.java", "BodyUseAPI": [], "Fixed commit": "c6cda44bb10dccc131aaa4047bfcc2b5646544ec", "Url": "https://api.github.com/repos/elyas-bhy/TeclaAccess", "Date": "2012-07-03T12:13:00Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hasId) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6401/buggy-version/compile.src.main.java.me.tatarka.socket.compile.SocketViewParser.java", "BodyUseAPI": [], "Fixed commit": "576c3964fdde55a489c432c0a1098165b4816927", "Url": "https://api.github.com/repos/evant/socket", "Date": "2014-08-24T07:14:42Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (defaultInclude) { return ((include == (me.tatarka.socket.compile.SocketViewParser.SocketInclude.VIEW)) || hasIncludeChildrenTag) || ((ignore == (me.tatarka.socket.compile.SocketViewParser.SocketIgnore.NONE)) && (!hasIgnoreChildrenTag)); }else { return (include != (me.tatarka.socket.compile.SocketViewParser.SocketInclude.NONE)) || (hasIncludeChildrenTag && (!hasIgnoreChildrenTag)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6401/buggy-version/compile.src.main.java.me.tatarka.socket.compile.SocketViewParser.java", "BodyUseAPI": [], "Fixed commit": "576c3964fdde55a489c432c0a1098165b4816927", "Url": "https://api.github.com/repos/evant/socket", "Date": "2014-08-24T07:14:42Z"},
{"Line": "=>711", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.keycloak.services.validation.Validation.isBlank(pass.getValue())) { throw new org.jboss.resteasy.spi.BadRequestException(\"Empty password not allowed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5566/buggy-version/services.src.main.java.org.keycloak.services.resources.admin.UsersResource.java", "BodyUseAPI": [], "Fixed commit": "e7a5b88b2d6fa3b25b115eec20900b8a3525bd0e", "Url": "https://api.github.com/repos/tkyjovsk/keycloak", "Date": "2016-02-26T17:14:24Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.portlet.ActionRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((title == null) || (title.isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/672/buggy-version/webapp.src.main.java.org.exoplatform.codefest.GitMaster.java", "BodyUseAPI": [], "Fixed commit": "a932935c9aac1a8eb2863316511b1d5b3882b8cf", "Url": "https://api.github.com/repos/exo-codefest/2014-team-E", "Date": "2014-06-29T04:49:36Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (petMove) { getPetOwnership().getPet().makeBestDecision(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7533/buggy-version/src.model.entity.ClassicEntity.java", "BodyUseAPI": [], "Fixed commit": "058ed11c978bbf107f22e1e127572ad9e33941a0", "Url": "https://api.github.com/repos/JohnReedLOL/Iteration_3", "Date": "2015-04-20T14:58:26Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"aeiou\u00fc\".contains((\"\" + originalChar)))) { return originalChar; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3488/buggy-version/HanziToAnki.HanziToAnki.DeckFactory.java", "BodyUseAPI": [], "Fixed commit": "aab424aa05747c3cf7d8a440aaba2dbf7491210e", "Url": "https://api.github.com/repos/danielt998/HanziToAnki", "Date": "2017-08-15T12:17:39Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(asciiEncoder.canEncode(auxsid))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7048/buggy-version/src.main.CommandLineParser.java", "BodyUseAPI": [], "Fixed commit": "6822b79dd8b92bbb7dbb96d72e51ca791165220c", "Url": "https://api.github.com/repos/tagel/Verifier", "Date": "2013-01-19T10:05:10Z"},
{"Line": "=>1506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mUseWhiteIconsList.get(mCurrentTabPosition))) { drawable.mutate(); drawable.setColorFilter(new android.graphics.PorterDuffColorFilter(android.graphics.Color.BLACK, PorterDuff.Mode.SRC_ATOP)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2177/buggy-version/bottom-bar.src.main.java.com.roughike.bottombar.BottomBar.java", "BodyUseAPI": [], "Fixed commit": "3f7cdca2c74d2c25eb7853a709d159f5a852191a", "Url": "https://api.github.com/repos/karlszwillus/BottomBar", "Date": "2016-06-07T21:21:01Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.mOverThresholdInfluenceVertices) != null) { this.mOverThresholdInfluenceVertices = this.mOverThresholdInfluenceVertices.union(KeyPlayer.sc.parallelizePairs(list)); }else { this.mOverThresholdInfluenceVertices = KeyPlayer.sc.parallelizePairs(list); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2315/buggy-version/src.islab.keyplayer.IndirectInfluence.java", "BodyUseAPI": [], "Fixed commit": "abc757562c15ab91b07b6dad0ecf75d6383569b5", "Url": "https://api.github.com/repos/trinhd/Spark_KeyPlayerFromGraph", "Date": "2016-02-16T11:47:09Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.n52.sos.ds.hibernate.dao.observation.series.SeriesObservationDAO.getLastObservationFor(org.n52.sos.ds.hibernate.entities.observation.series.Series,org.hibernate.Session)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (latestObservation != null) { series.setLastTimeStamp(latestObservation.getPhenomenonTimeEnd()); if (latestObservation instanceof org.n52.sos.ds.hibernate.entities.observation.full.NumericObservation) { series.setLastNumericValue(((org.n52.sos.ds.hibernate.entities.observation.full.NumericObservation) (latestObservation)).getValue()); } }else { series.setLastTimeStamp(null); if (observation instanceof org.n52.sos.ds.hibernate.entities.observation.full.NumericObservation) { series.setLastNumericValue(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/454/buggy-version/hibernate.common.src.main.java.org.n52.sos.ds.hibernate.dao.observation.series.AbstractSeriesDAO.java", "BodyUseAPI": ["org.n52.sos.ds.hibernate.entities.observation.series.Series.setLastTimeStamp(latestObservation.getPhenomenonTimeEnd())", "org.n52.sos.ds.hibernate.entities.observation.series.SeriesObservation<?>.getPhenomenonTimeEnd()"], "Fixed commit": "0e65d7975320d9c83cf258bc5a05bc3995679da1", "Url": "https://api.github.com/repos/52North/SOS", "Date": "2016-04-06T13:49:49Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (series.getFirstTimeStamp().equals(observation.getPhenomenonTimeStart())) { org.n52.sos.ds.hibernate.entities.observation.series.SeriesObservation<?> firstObservation = seriesObservationDAO.getFirstObservationFor(series, session); if (firstObservation != null) { series.setFirstTimeStamp(firstObservation.getPhenomenonTimeStart()); if (firstObservation instanceof org.n52.sos.ds.hibernate.entities.observation.full.NumericObservation) { series.setFirstNumericValue(((org.n52.sos.ds.hibernate.entities.observation.full.NumericObservation) (firstObservation)).getValue()); } }else { series.setFirstTimeStamp(null); if (observation instanceof org.n52.sos.ds.hibernate.entities.observation.full.NumericObservation) { series.setFirstNumericValue(null); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/454/buggy-version/hibernate.common.src.main.java.org.n52.sos.ds.hibernate.dao.observation.series.AbstractSeriesDAO.java", "BodyUseAPI": ["org.n52.sos.ds.hibernate.entities.observation.series.Series.setFirstNumericValue(<nulltype>)", "org.n52.sos.ds.hibernate.entities.observation.series.Series.setFirstTimeStamp(firstObservation.getPhenomenonTimeStart())", "org.n52.sos.ds.hibernate.dao.observation.series.SeriesObservationDAO.getFirstObservationFor(org.n52.sos.ds.hibernate.entities.observation.series.Series,org.hibernate.Session)", "org.n52.sos.ds.hibernate.entities.observation.series.Series.setFirstNumericValue(((org.n52.sos.ds.hibernate.entities.observation.full.NumericObservation) (firstObservation)).getValue())", "org.n52.sos.ds.hibernate.entities.observation.series.Series.setFirstTimeStamp(<nulltype>)"], "Fixed commit": "0e65d7975320d9c83cf258bc5a05bc3995679da1", "Url": "https://api.github.com/repos/52North/SOS", "Date": "2016-04-06T13:49:49Z"},
{"Line": "=>3878", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bento.runtime.ParameterList.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (n > ((entry.origParamsSize) + 1)) { pop(); }else if (n > 0) { entry.params.remove((n - 1)); entry.args.remove(((entry.args.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7490/buggy-version/src.bento.runtime.Context.java", "BodyUseAPI": ["bento.runtime.ArgumentList.remove(((entry.args.size()) - 1))", "bento.runtime.ArgumentList.size()", "bento.runtime.ParameterList.remove(int)"], "Fixed commit": "80a60007e0e950b68d30d8b12095f5b87fb7bc36", "Url": "https://api.github.com/repos/bentodev/bentolang", "Date": "2015-12-16T14:02:10Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (method.getName().equals(\"equals\")) { return this.equals(args[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8070/buggy-version/src.main.java.com.alibaba.fastjson.JSONObject.java", "BodyUseAPI": [], "Fixed commit": "34e58dd86fee8666a55eb889889d3c4214130f34", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2014-10-03T10:27:06Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name.startsWith(\"hashCode\")) { return this.hashCode(); }else if (name.startsWith(\"toString\")) { return this.toString(); }else { throw new com.alibaba.fastjson.JSONException(\"illegal getter\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8070/buggy-version/src.main.java.com.alibaba.fastjson.JSONObject.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "34e58dd86fee8666a55eb889889d3c4214130f34", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2014-10-03T10:27:06Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getElementsByTagName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((simpleSectNodes.getLength()) > 0) { rootEle = ((org.w3c.dom.Element) (refEntryNodes.item(((refEntryNodes.getLength()) - 1)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4753/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.builder.DocBookXMLPreProcessor.java", "BodyUseAPI": [], "Fixed commit": "6e0ee80de07b042fd817051235fafc95a504e917", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSBuilder", "Date": "2014-03-19T04:12:01Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((licenseManager.getLicense(WindowsDeviceManagementService.DEVICE_TYPE_WINDOWS, \"en_US\")) == null) { licenseManager.addLicense(WindowsDeviceManagementService.DEVICE_TYPE_WINDOWS, defaultLicense); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4023/buggy-version/components.device-mgt.org.wso2.carbon.device.mgt.mobile.impl.src.main.java.org.wso2.carbon.device.mgt.mobile.impl.windows.WindowsDeviceManager.java", "BodyUseAPI": [], "Fixed commit": "75d35dadca6f1872be6746724a5f98ecb61ec3df", "Url": "https://api.github.com/repos/Shabirmean/carbon-device-mgt-plugins", "Date": "2015-12-04T05:32:40Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((licenseManager.getLicense(AndroidDeviceManagementService.DEVICE_TYPE_ANDROID, \"en_US\")) == null) { defaultLicense = org.wso2.carbon.device.mgt.mobile.impl.android.util.AndroidPluginUtils.getDefaultLicense(); licenseManager.addLicense(AndroidDeviceManagementService.DEVICE_TYPE_ANDROID, defaultLicense); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4023/buggy-version/components.device-mgt.org.wso2.carbon.device.mgt.mobile.impl.src.main.java.org.wso2.carbon.device.mgt.mobile.impl.android.AndroidDeviceManager.java", "BodyUseAPI": [], "Fixed commit": "75d35dadca6f1872be6746724a5f98ecb61ec3df", "Url": "https://api.github.com/repos/Shabirmean/carbon-device-mgt-plugins", "Date": "2015-12-04T05:32:40Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isBreaking) { java.util.Set<org.bukkit.Material> doubleAttachables = controller.getMaterialSet(\"attachable_double\"); isBreaking = doubleAttachables.contains(spawnedItem.getType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3034/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.magic.listener.EntityController.java", "BodyUseAPI": [], "Fixed commit": "a14240070e0be699cdbc862a728c1333dae8c9dd", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2017-07-02T16:38:06Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (v instanceof java.util.Collection) jsonObject.put(key, ((java.util.Collection<?>) (v))); else if (v instanceof java.util.Map) jsonObject.put(key, ((java.util.Map<?, ?>) (v))); else jsonObject.put(key, v);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2022/buggy-version/src.java.com.splunk.shuttl.server.mbeans.rest.RestUtil.java", "BodyUseAPI": ["com.amazonaws.util.json.JSONObject.put(java.lang.String,java.lang.Object)"], "Fixed commit": "7ee2ab40d3b7040e384d634a685fe3e22e1d2b10", "Url": "https://api.github.com/repos/splunk/splunk-shuttl", "Date": "2013-01-23T16:04:18Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endOffset < startOffset) { endOffset = startOffset + (term.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1205/buggy-version/src.main.java.org.elasticsearch.index.analysis.PinyinTokenizer.java", "BodyUseAPI": [], "Fixed commit": "2f513043f17d7bd32d8b8ff58484887d930fc764", "Url": "https://api.github.com/repos/medcl/elasticsearch-analysis-pinyin", "Date": "2016-10-25T03:26:17Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startOffset < 0) { startOffset = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1205/buggy-version/src.main.java.org.elasticsearch.index.analysis.PinyinTokenizer.java", "BodyUseAPI": [], "Fixed commit": "2f513043f17d7bd32d8b8ff58484887d930fc764", "Url": "https://api.github.com/repos/medcl/elasticsearch-analysis-pinyin", "Date": "2016-10-25T03:26:17Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((parBird.getState()) == (com.blogspot.jabelarminecraft.wildanimals.entities.ai.birdofprey.AIStates.STATE_PERCHED)) || ((parBird.getState()) == (com.blogspot.jabelarminecraft.wildanimals.entities.ai.birdofprey.AIStates.STATE_PERCHED_TAMED))) { org.lwjgl.opengl.GL11.glTranslatef(0.0F, (0.2F * (parBird.getScaleFactor())), 0.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5223/buggy-version/src.main.java.com.blogspot.jabelarminecraft.wildanimals.models.ModelBirdOfPrey.java", "BodyUseAPI": ["org.lwjgl.opengl.GL11.glTranslatef(float,(0.2F * (parBird.getScaleFactor())),float)", "com.blogspot.jabelarminecraft.wildanimals.entities.birdsofprey.EntityBirdOfPrey.getScaleFactor()"], "Fixed commit": "d1f5f2353947c85604a92112be19a92e843dcc0d", "Url": "https://api.github.com/repos/jabelar/WildAnimalsPlus-1.7.10", "Date": "2015-08-24T04:38:49Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_head.data()) == (node.data())) { _head = _head.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4653/buggy-version/Java.DSTalk.LinkedListSolution.java", "BodyUseAPI": ["LinkedListSolution.Node.next()"], "Fixed commit": "6a054ef01021b0dbc627c27c08a88d0783fb2d39", "Url": "https://api.github.com/repos/janvmusic/Algorithm", "Date": "2017-09-17T22:48:11Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_head.data()) == (node.data())) { _head = _head.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4653/buggy-version/Java.DSTalk.LinkedList.java", "BodyUseAPI": ["LinkedList.Node.next()"], "Fixed commit": "6a054ef01021b0dbc627c27c08a88d0783fb2d39", "Url": "https://api.github.com/repos/janvmusic/Algorithm", "Date": "2017-09-17T22:48:11Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outputImage.getColorModel()) instanceof java.awt.image.IndexColorModel) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7983/buggy-version/modules.library.render.src.main.java.org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.java", "BodyUseAPI": [], "Fixed commit": "cddc4985fcbf477c0f3f7dee3992ee616e1c1f52", "Url": "https://api.github.com/repos/roarbra/geotools", "Date": "2014-03-18T12:23:42Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gobliip.chronos.server.entities.Tracking.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(Tracking.TrackingStatus.RUNNING.equals(trackingStatus))) { com.gobliip.chronos.server.service.MomentsService.LOGGER.error(\"Tracking currently not running, impossible to create new heartbeat moment: {}\", moment); throw new com.gobliip.chronos.server.service.exception.InvalidTrackingStateException(tracking, com.gobliip.chronos.server.service.MomentsService.TrackingAction.HEARTBEAT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4071/buggy-version/src.main.java.com.gobliip.chronos.server.service.MomentsService.java", "BodyUseAPI": [], "Fixed commit": "a0cc2d17081ae6420c40d424ba3b5ad6cc03063c", "Url": "https://api.github.com/repos/Gobliip/time-tracker", "Date": "2015-07-20T06:26:25Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.apache.uima.fit.util.JCasUtil.exists(jcas, de.unistuttgart.quadrama.graph.ext.api.GraphMetaData.class))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5807/buggy-version/de.unistuttgart.ims.drama.graph.src.main.java.de.unistuttgart.quadrama.graph.ext.GraphImporter.java", "BodyUseAPI": [], "Fixed commit": "e2999b9f87700accb717fa103797d04a30468f96", "Url": "https://api.github.com/repos/quadrama/DramaNLP", "Date": "2016-05-06T08:30:00Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(graph.edgeSet().isEmpty())) graphAnnotation.setEdgeClassName(graph.edgeSet().iterator().next().getClass().getCanonicalName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5807/buggy-version/de.unistuttgart.ims.drama.graph.src.main.java.de.unistuttgart.quadrama.graph.ext.GraphExporter.java", "BodyUseAPI": ["graph.edgeSet().iterator()", "de.unistuttgart.quadrama.graph.ext.api.GraphMetaData.setEdgeClassName(graph.edgeSet().iterator().next().getClass().getCanonicalName())", "org.jgrapht.Graph<de.unistuttgart.ims.drama.api.Figure, ?>.edgeSet()", "graph.edgeSet().iterator().next().getClass().getCanonicalName()", "graph.edgeSet().iterator().next().getClass()", "graph.edgeSet().iterator().next()"], "Fixed commit": "e2999b9f87700accb717fa103797d04a30468f96", "Url": "https://api.github.com/repos/quadrama/DramaNLP", "Date": "2016-05-06T08:30:00Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((controller) != null) && ((controller.getStatus()) == (de.danoeh.antennapod.service.playback.PlayerStatus.PLAYING))) { controller.pause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8069/buggy-version/src.de.danoeh.antennapod.activity.VideoplayerActivity.java", "BodyUseAPI": ["de.danoeh.antennapod.activity.VideoplayerActivity.pause()"], "Fixed commit": "f278eaf74d266c7136e5f3d826be49760516076c", "Url": "https://api.github.com/repos/danieloeh/AntennaPod", "Date": "2014-02-10T18:25:43Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (instancesOfPath > remainingInstances) { instancesOfPath = remainingInstances; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6148/buggy-version/src.main.java.org.jbpm.simulation.SimulationRunner.java", "BodyUseAPI": [], "Fixed commit": "bfafd1fe110cc8b5fa47044dc9267cb588d611b1", "Url": "https://api.github.com/repos/mswiderski/jbpm-simulation", "Date": "2012-08-23T09:35:08Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,getResources().getString(R.string.home_address_text))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (homeAddressS.equals(getResources().getString(R.string.home_address_text))) { }else { com.google.android.gms.maps.model.LatLng g = getLocationFromAddress(homeAddressS); mMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(g)); mMap.getCameraPosition(); mMap.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(g, 13.0F)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1073/buggy-version/app.src.main.java.com.geeky7.rohit.flash_a.activities.HomeAddress.java", "BodyUseAPI": ["com.geeky7.rohit.flash_a.activities.HomeAddress.getLocationFromAddress(java.lang.String)"], "Fixed commit": "5de1e55e27928573093555b61f62b62515c2befc", "Url": "https://api.github.com/repos/kumar7rk/FLASH-A", "Date": "2017-10-14T11:59:44Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (path.endsWith(\".jar\")) { }else { path = path.replace(\"/bin/\", \"\"); path = path.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/371/buggy-version/src.fp.forevo.manager.MasterScript.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "5d00ff45681542beff26ee36c158fb4555af8cb6", "Url": "https://api.github.com/repos/ForProgress/ForEVO_LIB", "Date": "2015-12-28T09:53:08Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (choice.trim().toUpperCase().startsWith(\"Q\")) { java.lang.System.out.println(\"\uac10\uc0ac\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uc5d0 \ub610 \ub9cc\ub098\uc694.\"); break; }else { java.lang.System.out.println(\"\uc798\ubabb\ub20c\ub800\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \uc120\ud0dd\ud574 \uc8fc\uc138\uc694.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4338/buggy-version/src.kr.co.kosta.contact.view.ContactView.java", "BodyUseAPI": [], "Fixed commit": "273fb66817b04cfe99ed57df3dfc422bf7013051", "Url": "https://api.github.com/repos/soongon01/contact-java", "Date": "2016-08-17T04:41:03Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((currentText.length()) >= cursorPosition) { editText.setSelection(cursorPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5927/buggy-version/currencyedittext.src.main.java.com.blackcat.currencyedittext.CurrencyTextWatcher.java", "BodyUseAPI": ["com.blackcat.currencyedittext.CurrencyEditText.setSelection(int)"], "Fixed commit": "1f48063213f67c0185964210bbb9130eea597b65", "Url": "https://api.github.com/repos/BlacKCaT27/CurrencyEditText", "Date": "2017-09-24T02:11:10Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cojen.tupl.Cursor.find(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result == (LockResult.ACQUIRED)) { link().unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8539/buggy-version/src.main.java.org.cojen.tupl.Cursor.java", "BodyUseAPI": [], "Fixed commit": "04fdc01c7f71a369f19cbbd499636c713e2f5acb", "Url": "https://api.github.com/repos/cojen/Tupl", "Date": "2016-08-24T04:51:49Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cojen.tupl.Cursor.find(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result == (LockResult.ACQUIRED)) { link().unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8539/buggy-version/src.main.java.org.cojen.tupl.Cursor.java", "BodyUseAPI": [], "Fixed commit": "04fdc01c7f71a369f19cbbd499636c713e2f5acb", "Url": "https://api.github.com/repos/cojen/Tupl", "Date": "2016-08-24T04:51:49Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (loggedInUsername.equals(username)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2958/buggy-version/src.com.livingoncodes.spring.web.validation.UniqueUsernameImpl.java", "BodyUseAPI": [], "Fixed commit": "63e325959205dfd96354d5ddbe839a9e7dba12c4", "Url": "https://api.github.com/repos/mozammel/bdchub", "Date": "2014-12-22T14:58:21Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.contentStream.getContentStream()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cStream != null) { org.apache.pdfbox.pdfparser.PDFStreamParser streamParser = new org.apache.pdfbox.pdfparser.PDFStreamParser(this.contentStream.getContentStream(), true); streamParser.parse(); java.util.List<org.verapdf.model.operator.Operator> result = org.verapdf.model.factory.operator.OperatorFactory.operatorsFromTokens(streamParser.getTokens(), this.contentStream.getResources()); return java.util.Collections.unmodifiableList(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5187/buggy-version/model-implementation.src.main.java.org.verapdf.model.impl.pb.pd.PBoxPDContentStream.java", "BodyUseAPI": [], "Fixed commit": "2c69eeff9457d606f7cda113f0fc4916d07403a1", "Url": "https://api.github.com/repos/carlwilson/veraPDF-library", "Date": "2015-09-28T10:34:26Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(t.atom(0))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (label != null) ret.append(label); else ret.append(t.atom(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2137/buggy-version/minsolver.MinSolver.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "cd032c69488f9c60395bfe597151431c95e91174", "Url": "https://api.github.com/repos/salmans/MinSolver", "Date": "2012-08-01T02:11:20Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endIdx) >= (memory.length)) { endIdx = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4331/buggy-version/spf4j-core.src.main.java.org.spf4j.io.MemorizingBufferedInputStream.java", "BodyUseAPI": [], "Fixed commit": "3dd0f6a27f78a069c09efb20df983848e7e95ba0", "Url": "https://api.github.com/repos/zolyfarkas/spf4j", "Date": "2016-08-17T01:18:32Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pictureDAO.getPicturePath(tripId, stepId, pictureName).toFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(picture.exists())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1011/buggy-version/triplog-server.triplog-server-core.src.main.java.ch.exq.triplog.server.core.control.controller.PictureController.java", "BodyUseAPI": [], "Fixed commit": "9f63068553df030d4144194b55ba725ef71a0b11", "Url": "https://api.github.com/repos/nioe/triplog", "Date": "2016-04-08T15:55:26Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intent == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/516/buggy-version/app.src.main.java.simararora.puautologin.NotificationService.java", "BodyUseAPI": [], "Fixed commit": "d68fdcdf91bff8a79b1e28e9d6fa0b02644f6394", "Url": "https://api.github.com/repos/simararora7/puautologin", "Date": "2015-07-02T06:19:06Z"},
{"Line": "=>627", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.neo4j.graphdb.Relationship.getEndNode()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(processed.contains(parentNode))) { ancestorQueue.add(parentNode); processed.add(parentNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2879/buggy-version/src.core.src.main.java.org.geogit.storage.Neo4JGraphDatabase.java", "BodyUseAPI": ["java.util.List<org.neo4j.graphdb.Node>.add(org.neo4j.graphdb.Node)", "java.util.Queue<org.neo4j.graphdb.Node>.add(org.neo4j.graphdb.Node)"], "Fixed commit": "0a2af37e089c7970d0109b50481e79fe916061ee", "Url": "https://api.github.com/repos/ROGUE-JCTD/GeoGit", "Date": "2013-07-12T19:11:53Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (beginIndex != (-1)) beginIndex += startWord.length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2742/buggy-version/app.src.main.java.se.chalmers.group8.service.connectors.WearMessageListener.java", "BodyUseAPI": [], "Fixed commit": "4330b1e2d667eafe3cc78ae95ad692f92b19117f", "Url": "https://api.github.com/repos/Awarath/AgileDevelopmentProcesses", "Date": "2015-05-21T10:02:42Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((a[0]) == (b[0])) && ((a[1]) == (b[1]))) && ((a[2]) == (b[2]))) { b[0] = -(C); b[1] = 0; b[2] = A; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8839/buggy-version/src.ch.fhnw.muellerzumbrunn.Ebene.java", "BodyUseAPI": [], "Fixed commit": "91fb62e54fae7d270cef77924854da9f9762c636", "Url": "https://api.github.com/repos/benzumbrunn/SchnittVonEbenen", "Date": "2015-11-30T19:46:28Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.berkeley.security.eventtracker.eventdata.EventManager.findOrCreateByUUID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((event.mTag) != null) && ((event.mTag.length()) != 0)) EventActivity.mEventManager.addTag(event.mTag);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3374/buggy-version/src.edu.berkeley.security.eventtracker.network.Synchronizer.java", "BodyUseAPI": ["EventActivity.mEventManager.addTag(event.mTag)"], "Fixed commit": "a6f1c5c3db1b421f1b00137e845683e569bf5d8c", "Url": "https://api.github.com/repos/adegtiar/Android-Activity-Tracker", "Date": "2011-02-28T10:17:46Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getSerializable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (event != null) { if ((event.mTag) != null) { if (event.mTag.equals(\"Select a tag\")) { event.mTag = \"\"; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3374/buggy-version/src.edu.berkeley.security.eventtracker.network.Synchronizer.java", "BodyUseAPI": ["event.mTag.equals(java.lang.String)"], "Fixed commit": "a6f1c5c3db1b421f1b00137e845683e569bf5d8c", "Url": "https://api.github.com/repos/adegtiar/Android-Activity-Tracker", "Date": "2011-02-28T10:17:46Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(node.getDeclaringClass().equals(classNode))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6442/buggy-version/src.main.org.codehaus.groovy.classgen.Verifier.java", "BodyUseAPI": [], "Fixed commit": "a6c2201de96b884fde2c78bd88a076a80e8b08b5", "Url": "https://api.github.com/repos/groovy/groovy-core", "Date": "2013-01-18T12:12:38Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.nodes[i]) != null) { nodes[i] = this.nodes[i].clone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3716/buggy-version/src.redempt.tictactoe.ai.Stack.java", "BodyUseAPI": ["this.nodes[i].clone()"], "Fixed commit": "0e3cc3855987cec710e02ec9fcf418b761369146", "Url": "https://api.github.com/repos/Redempt/TicTacToe", "Date": "2016-07-02T18:36:33Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.ha3.matmos.engine0.core.implem.LongFloatSimplificator.longOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((longValue != null) && ((this.constantLongX) != null)) { if ((this.operatorX) == (Operator.NOT_EQUAL)) return longValue != (this.constantLongX); else if ((this.operatorX) == (Operator.EQUAL)) return longValue == (this.constantLongX); else if ((this.operatorX) == (Operator.GREATER)) return longValue > (this.constantLongX); else if ((this.operatorX) == (Operator.GREATER_OR_EQUAL)) return longValue >= (this.constantLongX); else if ((this.operatorX) == (Operator.LESSER)) return longValue < (this.constantLongX); else if ((this.operatorX) == (Operator.LESSER_OR_EQUAL)) return longValue <= (this.constantLongX); else return false; }else if ((this.operatorX) == (Operator.NOT_EQUAL)) return !(value.equals(this.constantX)); else if ((this.operatorX) == (Operator.EQUAL)) return value.equals(this.constantX); else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1206/buggy-version/main-src.eu.ha3.matmos.engine0.core.implem.Condition.java", "BodyUseAPI": [], "Fixed commit": "30c95fbe1a956340f28bcb25e2fb3e69c9c13ca3", "Url": "https://api.github.com/repos/Hurricaaane/MAtmos", "Date": "2014-02-22T10:32:35Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xyz.upperlevel.uppercore.config.Config.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (raw == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6379/buggy-version/src.main.java.xyz.upperlevel.uppercore.config.Config.java", "BodyUseAPI": [], "Fixed commit": "d006c7f3dff5cd92f19790ae51ac2efaaeda434a", "Url": "https://api.github.com/repos/upperlevel/uppercore", "Date": "2017-07-22T07:00:41Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xyz.upperlevel.uppercore.config.Config.getConfig(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (res == null) xyz.upperlevel.uppercore.config.Config.requiredPropertyNotFound(key);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6379/buggy-version/src.main.java.xyz.upperlevel.uppercore.config.Config.java", "BodyUseAPI": [], "Fixed commit": "d006c7f3dff5cd92f19790ae51ac2efaaeda434a", "Url": "https://api.github.com/repos/upperlevel/uppercore", "Date": "2017-07-22T07:00:41Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.reflect.Field>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.reflect.Field>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(org.fields.utils.fieldsCopier.FieldsCopier.isNull(fieldDest))) && (!(org.fields.utils.fieldsCopier.FieldsCopier.isNull(fieldOrig)))) org.fields.utils.fieldsCopier.FieldsCopier.setValue(dest, orig, fieldDest, fieldOrig);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4354/buggy-version/src.main.java.org.fields.utils.fieldsCopier.FieldsCopier.java", "BodyUseAPI": ["org.fields.utils.fieldsCopier.FieldsCopier.setValue(T,E,java.lang.reflect.Field,java.lang.reflect.Field)"], "Fixed commit": "1d0f6ee4e157ffad676484ee432c44c018077da5", "Url": "https://api.github.com/repos/ericbreno/FieldsCopier", "Date": "2017-04-01T14:23:37Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.hsr.waktu.services.IcsParser.stripTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ch.hsr.waktu.services.IcsParser.invalidDateTimeString(strippedDateTimeString)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4095/buggy-version/WaktuPrototyp.src.ch.hsr.waktu.services.IcsParser.java", "BodyUseAPI": [], "Fixed commit": "9145f5f34dd1e2f9a65996dac16ba077d983f96d", "Url": "https://api.github.com/repos/patriziaheer/waktu", "Date": "2011-04-29T11:41:28Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((professor != null) && (course != null)) { getProfessorDAO().addProfessorCourse(professor, course); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/954/buggy-version/src.main.java.com.drexelexp.ingest.SectionListing.java", "BodyUseAPI": [], "Fixed commit": "9753a8f7bdd64c6a91ba7303aef1a1c5b649d607", "Url": "https://api.github.com/repos/timothyhahn/DrexelEXP", "Date": "2012-09-04T00:43:09Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activePlayer) == 0) { java.lang.System.out.println(\"Zug nicht moeglich! Elf wird automatisch gelegt!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7239/buggy-version/src.control.Spiel.java", "BodyUseAPI": [], "Fixed commit": "a207b2f2c2892b3b01fc6a0c070adcc78f8514ce", "Url": "https://api.github.com/repos/pixelvektor/elferraus", "Date": "2015-06-17T12:10:05Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSetSpatialFilteringProfileAdder()) { getSpatialFilteringProfileAdder().add(resultObject.getObservationId(), observation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5275/buggy-version/hibernate.dao.src.main.java.org.n52.sos.ds.hibernate.values.series.HibernateChunkSeriesStreamingValue.java", "BodyUseAPI": [], "Fixed commit": "6216e1d0a63271a96422ab5b9786249e3136bf85", "Url": "https://api.github.com/repos/shane-axiom/SOS", "Date": "2014-06-05T14:53:49Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSetSpatialFilteringProfileAdder()) { getSpatialFilteringProfileAdder().add(resultObject.getObservationId(), observation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5275/buggy-version/hibernate.dao.src.main.java.org.n52.sos.ds.hibernate.values.HibernateChunkStreamingValue.java", "BodyUseAPI": [], "Fixed commit": "6216e1d0a63271a96422ab5b9786249e3136bf85", "Url": "https://api.github.com/repos/shane-axiom/SOS", "Date": "2014-06-05T14:53:49Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Http.Context.current.get().request().headers().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (request[0].contains(\"/login\")) { return redirect(routes.Application.index()); }else { return redirect(request[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3935/buggy-version/app.controllers.Login.java", "BodyUseAPI": ["controllers.Login.redirect(java.lang.String)"], "Fixed commit": "6bf46e3160ce9e2a9bf173244d4c4dcd6729c446", "Url": "https://api.github.com/repos/mean2k/NaKaSaSchool_Play", "Date": "2014-07-28T19:00:21Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (targetChildArray == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6814/buggy-version/src.main.java.de.clemensloos.folder_sync.Sync.java", "BodyUseAPI": [], "Fixed commit": "ca4ec109bc629118c34be2f10433cbf72a346b17", "Url": "https://api.github.com/repos/Clerenz/folder-sync", "Date": "2017-09-08T19:35:43Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((f.listFiles()) == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6814/buggy-version/src.main.java.de.clemensloos.folder_sync.Sync.java", "BodyUseAPI": [], "Fixed commit": "ca4ec109bc629118c34be2f10433cbf72a346b17", "Url": "https://api.github.com/repos/Clerenz/folder-sync", "Date": "2017-09-08T19:35:43Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list(config.getFilenameFilter())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (sourceChildArray != null) { java.util.List<java.lang.String> sourceChildList = java.util.Arrays.asList(sourceChildArray); if (config.isRandom()) { java.util.Collections.shuffle(sourceChildList); } for (java.lang.String child : sourceChildList) { resursiveSync(t, ((file + (de.clemensloos.folder_sync.Sync.SLASH)) + child)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6814/buggy-version/src.main.java.de.clemensloos.folder_sync.Sync.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.String[])"], "Fixed commit": "ca4ec109bc629118c34be2f10433cbf72a346b17", "Url": "https://api.github.com/repos/Clerenz/folder-sync", "Date": "2017-09-08T19:35:43Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["brooklyn.catalog.internal.BasicBrooklynCatalog.BrooklynLoaderTracker.getLoader()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (next == null) next = brooklyn.management.classloading.JavaBrooklynClassLoadingContext.newDefault(mgmt);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6863/buggy-version/core.src.main.java.brooklyn.catalog.internal.CatalogItemDtoAbstract.java", "BodyUseAPI": [], "Fixed commit": "9528445c297d9a909f7a0852e561c8ebf989e407", "Url": "https://api.github.com/repos/neykov/incubator-brooklyn", "Date": "2014-07-08T05:03:25Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(item.get(\"tags\").toString().equals(\"\"))) { tags = ((java.util.ArrayList<java.lang.String>) (item.get(\"tags\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4395/buggy-version/src.main.java.Items.java", "BodyUseAPI": ["org.bson.Document.get(java.lang.String)"], "Fixed commit": "09416844ded879cb33037dbe5340809d89f30801", "Url": "https://api.github.com/repos/PEACSC590/server", "Date": "2016-11-19T06:48:42Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (token == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3796/buggy-version/para-server.src.main.java.com.erudika.para.utils.RequestLogImpl.java", "BodyUseAPI": [], "Fixed commit": "2bafdc0328b0bde7399fc9dbf5c43bea5ddf03dd", "Url": "https://api.github.com/repos/zhouzhizhen/para", "Date": "2017-11-15T07:51:26Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ImageListContent.SELECTED_IMAGES.size()) == (SelectorSettings.mMaxImageNumber)) { com.zfdang.multiple_images_selector.models.ImageListContent.bReachMaxNumber = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1035/buggy-version/multiple-images-selector.src.main.java.com.zfdang.multiple_images_selector.ImageRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "627733dccd43d517d2f6156ec36fa53564d506bd", "Url": "https://api.github.com/repos/khizarhayat/android-multiple-images-selector", "Date": "2017-09-14T09:31:39Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bilateralContractProposalName) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7214/buggy-version/impactPathways.src.main.java.org.cgiar.ccafs.ap.data.model.Project.java", "BodyUseAPI": [], "Fixed commit": "97a926cd3626d2bc1204d5f984d8b51021875f9f", "Url": "https://api.github.com/repos/CCAFS/ccafs-ap", "Date": "2015-07-27T20:06:57Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getInt(StringConstants.REQUEST_CODE,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (requestCode == (com.prasanna.android.stacknetwork.service.WriteIntentService.ACTION_ADD_COMMENT)) { com.prasanna.android.http.HttpException e = ((com.prasanna.android.http.HttpException) (resultData.getSerializable(StringConstants.EXCEPTION))); java.lang.String errorMsg = \"Request failed for unknown reason\"; if (e != null) postCommentFragment.setSendError(e.getErrorResponse()); else postCommentFragment.setSendError(errorMsg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2249/buggy-version/stackx-app.src.com.prasanna.android.stacknetwork.fragment.CommentFragment.java", "BodyUseAPI": [], "Fixed commit": "2f16725e06f4b2094a0e6565d5e4e0716d45d388", "Url": "https://api.github.com/repos/prasannata/StackX", "Date": "2013-04-17T16:05:57Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eventLoopGroup) != null) { eventLoopGroup.shutdownGracefully(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8329/buggy-version/catalog.video.video-mpegts-stream.src.main.java.org.codice.alliance.video.stream.mpegts.UdpStreamMonitor.java", "BodyUseAPI": [], "Fixed commit": "b2747eca7899f6781017af0478d85c050e54ce6f", "Url": "https://api.github.com/repos/troymohl/alliance", "Date": "2016-09-29T13:47:16Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((udpStreamProcessor) != null) { udpStreamProcessor.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8329/buggy-version/catalog.video.video-mpegts-stream.src.main.java.org.codice.alliance.video.stream.mpegts.UdpStreamMonitor.java", "BodyUseAPI": [], "Fixed commit": "b2747eca7899f6781017af0478d85c050e54ce6f", "Url": "https://api.github.com/repos/troymohl/alliance", "Date": "2016-09-29T13:47:16Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(bf1.maxCounterValue.equals(bf2.maxCounterValue))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6049/buggy-version/src.main.java.org.ipn.cic.ndsrg.BloomFilter.java", "BodyUseAPI": [], "Fixed commit": "3cead64a26f6daed0c0653dfb92d8980544398a7", "Url": "https://api.github.com/repos/jairosh/java-bloomfilter", "Date": "2017-04-23T05:17:55Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstance == null) { com.firebase.ui.auth.util.smartlock.SignInDelegate.delegate(this, mActivityHelper.getFlowParams()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2560/buggy-version/auth.src.main.java.com.firebase.ui.auth.ui.KickoffActivity.java", "BodyUseAPI": [], "Fixed commit": "80a4cb09ff9f606739198f6ec261740ff523f78a", "Url": "https://api.github.com/repos/SUPERCILEX/FirebaseUI-Android", "Date": "2016-11-23T03:58:20Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (facingRight) { g.drawImage(animation.getImage(), ((int) (((x) + (xmap)) - ((width) / 2))), ((int) (((y) + (ymap)) - ((height) / 2))), null); }else { g.drawImage(animation.getImage(), ((int) ((((x) + (xmap)) - ((width) / 2)) + (width))), ((int) (((y) + (ymap)) - ((height) / 2))), (-(width)), height, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5191/buggy-version/src.entity.MapObject.java", "BodyUseAPI": [], "Fixed commit": "643c4292cc05591bbed3b02c76847b82a9280968", "Url": "https://api.github.com/repos/DaveLillo/Projekt2016_Dave_Fero", "Date": "2016-04-12T07:15:00Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(profilePicture.isEmpty())) { try { profilePicture.transferTo(new java.io.File((((imageUploadDir) + \"/\") + (profilePicture.getOriginalFilename())))); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8420/buggy-version/src.main.java.com.martinrist.springInAction.spittr.web.SpitterController.java", "BodyUseAPI": ["org.springframework.web.multipart.MultipartFile.transferTo(java.io.File)", "org.springframework.web.multipart.MultipartFile.getOriginalFilename()"], "Fixed commit": "c9f038836b9bd28c99266267f7e1651d49c7c0f8", "Url": "https://api.github.com/repos/martinrist/java-sandbox", "Date": "2016-01-11T13:40:36Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actionBar) != null) { actionBar.setTitle(\"Search\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8364/buggy-version/app.src.main.java.com.NathanOdong.londonbushunter.fragments.SearchFragment.java", "BodyUseAPI": [], "Fixed commit": "bdf8600cfa1726ab7161c648bc081d9d92e482cc", "Url": "https://api.github.com/repos/NathanO14/London-Bus-Hunter", "Date": "2016-09-20T21:26:21Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.nio.file.Files.isDirectory(java.nio.file.Paths.get(pathToFolder))) { paths = java.nio.file.Files.walk(java.nio.file.Paths.get(pathToFolder)); }else { java.lang.System.out.println(\"Not a directory, please check the path.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7960/buggy-version/src.SearchwiseEngine.java", "BodyUseAPI": ["java.nio.file.Files.walk(java.nio.file.Path)", "java.nio.file.Paths.get(java.lang.String)"], "Fixed commit": "8f9528ea4813b6c6b4b1ffcf0ab2bb3987f993e7", "Url": "https://api.github.com/repos/RHellgren/simple_search_engine", "Date": "2017-03-27T10:16:05Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.nio.file.Files.exists(java.nio.file.Paths.get(fileName))) { pathToFile = java.nio.file.Paths.get(fileName); }else { java.lang.System.out.println(\"Not a file, please check the path.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7960/buggy-version/src.SearchwiseEngine.java", "BodyUseAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Fixed commit": "8f9528ea4813b6c6b4b1ffcf0ab2bb3987f993e7", "Url": "https://api.github.com/repos/RHellgren/simple_search_engine", "Date": "2017-03-27T10:16:05Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resulting_documents.isEmpty()) java.lang.System.out.println(\"Could not find that word in any document listed.\"); else resulting_documents.forEach(java.lang.System.out::println);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7960/buggy-version/src.SearchwiseIO.java", "BodyUseAPI": ["java.util.List<java.lang.String>.forEach(java.util.function.Consumer<? super java.lang.String>)"], "Fixed commit": "8f9528ea4813b6c6b4b1ffcf0ab2bb3987f993e7", "Url": "https://api.github.com/repos/RHellgren/simple_search_engine", "Date": "2017-03-27T10:16:05Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (fabIconDrawable != null) { fabIconDrawable = com.robertlevonyan.views.customfloatingactionbutton.CustomFloatingActionButtonUtils.resize(getContext(), fabIconDrawable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/334/buggy-version/CustomFloatingActionButton.app.src.main.java.com.robertlevonyan.views.customfloatingactionbutton.CustomFloatingActionButton.java", "BodyUseAPI": ["com.robertlevonyan.views.customfloatingactionbutton.CustomFloatingActionButtonUtils.resize(getContext(),android.graphics.drawable.Drawable)"], "Fixed commit": "bb0ee0f92511dd277241d9793d6d56cf219554c3", "Url": "https://api.github.com/repos/robertlevonyan/customFloatingActionButton", "Date": "2017-03-10T12:01:04Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (fabIconDrawable != null) { fabIconDrawable = com.robertlevonyan.views.customfloatingactionbutton.CustomFloatingActionButtonUtils.resize(getContext(), fabIconDrawable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/334/buggy-version/CustomFloatingActionButton.app.src.main.java.com.robertlevonyan.views.customfloatingactionbutton.CustomFloatingActionButton.java", "BodyUseAPI": ["com.robertlevonyan.views.customfloatingactionbutton.CustomFloatingActionButtonUtils.resize(getContext(),android.graphics.drawable.Drawable)"], "Fixed commit": "bb0ee0f92511dd277241d9793d6d56cf219554c3", "Url": "https://api.github.com/repos/robertlevonyan/customFloatingActionButton", "Date": "2017-03-10T12:01:04Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((field.type) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8655/buggy-version/src.FE_SRC_COMMON.com.ForgeEssentials.data.ForgeConfigDataDriver.java", "BodyUseAPI": [], "Fixed commit": "cc88bc6d6cee0091087a8a4e771315e3b95f763e", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentialsMain", "Date": "2012-12-29T22:14:31Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.clientIsStopped)) { org.smartflow.MessageHandler.getInstance().messageReceived(\"Next\"); }else { this.sendMessage(this.previousMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7471/buggy-version/SmartFlow.src.org.smartflow.server.HttpServer.java", "BodyUseAPI": [], "Fixed commit": "c7c21fd6944258cabd03e9b047a35bc7f29e5d11", "Url": "https://api.github.com/repos/tsarni/smartflow", "Date": "2013-01-24T09:05:20Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (optionalArgs) { main.java.latexee.declareast.MacroDeclaration md = ((main.java.latexee.declareast.MacroDeclaration) (declaration)); meaning = md.getOptionalMeaning(); }else { meaning = declaration.getMeaning(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8131/buggy-version/src.main.java.latexee.utils.OpenMathTranslator.java", "BodyUseAPI": [], "Fixed commit": "3ab2b97bdad2b7820cde29c107d238df2b3d7869", "Url": "https://api.github.com/repos/raulmrebane/LaTeXEE", "Date": "2015-12-04T17:51:02Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.eclipse.jgit.lib.ObjectId.isId(stringValue)) { store = determineStoreFromRevision(stringValue); }else { store = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4263/buggy-version/src.main.java.com.indeed.proctor.webapp.controllers.AbstractController.java", "BodyUseAPI": [], "Fixed commit": "169c6c6fe64ee2b5b7652480e9d3d8a8b3c2bdb7", "Url": "https://api.github.com/repos/indeedeng/proctor-webapp-library", "Date": "2016-11-11T08:20:30Z"},
{"Line": "=>2001", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (style instanceof org.geotools.styling.StyleImpl) { style = ((org.geotools.styling.Style) (((org.geotools.styling.StyleImpl) (style)).clone())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6807/buggy-version/src.main.src.main.java.org.geoserver.catalog.ResourcePool.java", "BodyUseAPI": [], "Fixed commit": "5a953357c12a1289830305baecd209615c3a3ecd", "Url": "https://api.github.com/repos/boundlessgeo/geoserver", "Date": "2017-08-25T16:35:19Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (percentage < 1) { Penalty[ideal_day] += task_details.get(8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2680/buggy-version/src.SecondStage.java", "BodyUseAPI": [], "Fixed commit": "5cadd69101dd8854d9db9376bfc05014838183c5", "Url": "https://api.github.com/repos/sharonWU0505/SMART", "Date": "2016-12-18T03:43:36Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (section > 1) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6416/buggy-version/src.openie.databuilder.Treebank_EN_DataBuilder.java", "BodyUseAPI": [], "Fixed commit": "1441f5aa48c12617e93f0a08823e7a724cdc3c24", "Url": "https://api.github.com/repos/minwoo/bitextOpenIE", "Date": "2011-03-23T06:17:08Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.startsWith(\"#\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6416/buggy-version/src.openie.text.UnitextCorpus.java", "BodyUseAPI": [], "Fixed commit": "1441f5aa48c12617e93f0a08823e7a724cdc3c24", "Url": "https://api.github.com/repos/minwoo/bitextOpenIE", "Date": "2011-03-23T06:17:08Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataSnapshot.child(\"ratingCount\").getValue(java.lang.Integer.class)) != null) { ratingCount = dataSnapshot.child(\"ratingCount\").getValue(java.lang.Integer.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8239/buggy-version/app.src.main.java.com.iti.finalproject.DatabaseAdapter.java", "BodyUseAPI": ["com.google.firebase.database.DataSnapshot.child(java.lang.String)", "dataSnapshot.child(\"ratingCount\").getValue(java.lang.Class)"], "Fixed commit": "06b17a043b5bd7274548c22cab3853d7aeabcf06", "Url": "https://api.github.com/repos/Mostafa-MA-Saleh/FinalProject", "Date": "2017-04-02T08:39:44Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataSnapshot.child(\"rating\").getValue(java.lang.Float.class)) != null) { previousRating = dataSnapshot.child(\"rating\").getValue(java.lang.Float.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8239/buggy-version/app.src.main.java.com.iti.finalproject.DatabaseAdapter.java", "BodyUseAPI": ["dataSnapshot.child(\"rating\").getValue(java.lang.Class)", "com.google.firebase.database.DataSnapshot.child(java.lang.String)"], "Fixed commit": "06b17a043b5bd7274548c22cab3853d7aeabcf06", "Url": "https://api.github.com/repos/Mostafa-MA-Saleh/FinalProject", "Date": "2017-04-02T08:39:44Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tndata.android.compass.model.UserData.getAction(org.tndata.android.compass.model.Action)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (userAction != null) { mAction = userAction; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1058/buggy-version/src.main.java.org.tndata.android.compass.activity.TriggerActivity.java", "BodyUseAPI": [], "Fixed commit": "12499e8e6c607ce13f35d7976d5faebb9d062d1f", "Url": "https://api.github.com/repos/tndatacommons/android-app", "Date": "2015-11-23T21:05:45Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.equals(Material.WATER)) type = org.bukkit.Material.STATIONARY_WATER; else if (type.equals(Material.LAVA)) type = org.bukkit.Material.STATIONARY_LAVA;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2589/buggy-version/ClassicPhysics.src.main.java.me.eddiep.handles.ClassicPhysicsHandler.java", "BodyUseAPI": ["org.bukkit.Material.equals(Material.LAVA)"], "Fixed commit": "412af55740da308cb330a062823a8e1050ec75c0", "Url": "https://api.github.com/repos/pupnewfster/Lavasurvival", "Date": "2015-12-28T23:30:29Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["testsTable.getSelectionModel().getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (testResult.get(selectedTest.getInfo().getId()).isEmpty()) { setDisableResultButtons(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2060/buggy-version/src.main.java.io.github.patrnk.checkmate.MainSceneController.java", "BodyUseAPI": [], "Fixed commit": "fae51ad55253305f2120e25b75777bb62eef26b7", "Url": "https://api.github.com/repos/vergeev/checkmate", "Date": "2016-07-28T10:44:09Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(receiverPortString)) { receiverPortString = org.droidplanner.android.utils.prefs.DroidPlannerPrefs.DEFAULT_UDP_SERVER_PORT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1865/buggy-version/Android.src.org.droidplanner.android.utils.prefs.DroidPlannerPrefs.java", "BodyUseAPI": [], "Fixed commit": "13c8edab5f021978330a689f7f77fbd4126e1da5", "Url": "https://api.github.com/repos/DroidPlanner/Tower", "Date": "2015-10-08T08:08:26Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAdded())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1865/buggy-version/Android.src.org.droidplanner.android.fragments.FlightDataFragment.java", "BodyUseAPI": [], "Fixed commit": "13c8edab5f021978330a689f7f77fbd4126e1da5", "Url": "https://api.github.com/repos/DroidPlanner/Tower", "Date": "2015-10-08T08:08:26Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.emm.agent.utils.CommonUtils.createExplicitFromImplicitIntent(android.content.Context,android.content.Intent)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (explicitIntent != null) { intent = explicitIntent; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/112/buggy-version/modules.mobile-agents.android.client.client.src.main.java.org.wso2.emm.agent.utils.CommonUtils.java", "BodyUseAPI": [], "Fixed commit": "6472f62c240385f9dd6590b7810af3d6f8a408eb", "Url": "https://api.github.com/repos/wso2-attic/product-emm", "Date": "2016-04-26T06:02:31Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (model.hasValidations()) { fi.vincit.jmobster.backbone.ValidationSectionWriter validationSectionWriter = new fi.vincit.jmobster.backbone.ValidationSectionWriter(writer, annotationProcessor); validationSectionWriter.writeValidators(model.getFields()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/89/buggy-version/src.main.java.fi.vincit.jmobster.backbone.BackboneModelProcessor.java", "BodyUseAPI": ["fi.vincit.jmobster.backbone.ValidationSectionWriter.writeValidators(model.getFields())", "fi.vincit.jmobster.processor.Model.getFields()"], "Fixed commit": "375a5939802b14db79d87c04c0b068b99ba70606", "Url": "https://api.github.com/repos/juhasipo/JMobster", "Date": "2012-06-19T19:49:52Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (temp != null) { owner = org.bukkit.Bukkit.getServer().getPlayer(temp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/153/buggy-version/src.com.afforess.minecartmaniachestcontrol.itemcontainer.ItemCollectionContainer.java", "BodyUseAPI": ["org.bukkit.Bukkit.getServer().getPlayer(java.lang.String)"], "Fixed commit": "4f26e8723caeb0a6127be79ff6e98c161f4856bd", "Url": "https://api.github.com/repos/N3X15/MinecartMania-Chest-Control", "Date": "2011-05-23T00:53:28Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerMoveEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (player.hasPermission(com.mcmiddleearth.thegaffer.utilities.PermissionsUtil.getIgnoreWorldProtection())) { playersSwitchedToCreative.remove(player.getUniqueId()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8423/buggy-version/src.main.java.com.mcmiddleearth.thegaffer.listeners.PlayerListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.getUniqueId()", "java.util.List<java.util.UUID>.remove(player.getUniqueId())"], "Fixed commit": "f35fd03e988b2d641f6f9a2530fd6635dde54a1d", "Url": "https://api.github.com/repos/MCME/TheGaffer", "Date": "2016-06-13T22:12:11Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase.convertEmptyViewLayoutParams(newEmptyView.getLayoutParams())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (null != lp) { refreshableViewWrapper.addView(newEmptyView, lp); }else { refreshableViewWrapper.addView(newEmptyView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3228/buggy-version/library.src.com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase.java", "BodyUseAPI": ["android.widget.FrameLayout.addView(android.view.View,FrameLayout.LayoutParams)"], "Fixed commit": "e10106bfdbc5ac337b0d87c0622dca2ebf3e9b64", "Url": "https://api.github.com/repos/kidfolk/Android-PullToRefresh", "Date": "2012-12-29T16:49:58Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["play.mvc.Http.Header.value()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (play.modules.excel.Plugin.pIE678_.matcher(userAgent).matches()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1939/buggy-version/src.play.modules.excel.Plugin.java", "BodyUseAPI": [], "Fixed commit": "417003b3278b252ad715771e85d842405a93c94e", "Url": "https://api.github.com/repos/codeborne/play-excel", "Date": "2011-07-18T00:31:17Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.headers.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == h) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1939/buggy-version/src.play.modules.excel.Plugin.java", "BodyUseAPI": [], "Fixed commit": "417003b3278b252ad715771e85d842405a93c94e", "Url": "https://api.github.com/repos/codeborne/play-excel", "Date": "2011-07-18T00:31:17Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (graphQLType instanceof graphql.execution.GraphQLNonNull) { java.lang.Object returnValue = coerceValue(((graphql.execution.GraphQLNonNull) (graphQLType)).getWrappedType(), value); if (returnValue == null) { throw new graphql.GraphQLException((\"Null value for NonNull type \" + graphQLType)); } return returnValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4620/buggy-version/src.main.java.graphql.execution.ValuesResolver.java", "BodyUseAPI": [], "Fixed commit": "f56171f47a050bd1f35ce7d28109c7ff685a3ccf", "Url": "https://api.github.com/repos/jackielii/graphql-java", "Date": "2016-02-20T09:32:24Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == value) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7873/buggy-version/core.src.main.java.org.apache.carbondata.core.util.DataTypeUtil.java", "BodyUseAPI": [], "Fixed commit": "32bb7fef13ab6810a48584f045f7131674e91906", "Url": "https://api.github.com/repos/manishgupta88/carbondata", "Date": "2017-03-30T05:17:09Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mPath.exists()) { loadFileList(); showFileChoosingDialog(); }else { android.widget.Toast.makeText(getApplicationContext(), \"No file to upload.\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1063/buggy-version/mobile.src.main.java.com.example.richardjiang.comotion.shareHandler.UploadActivity.java", "BodyUseAPI": [], "Fixed commit": "f2ea0046d13d9f0438598f7abb64880b8addd7ff", "Url": "https://api.github.com/repos/RichardeJiang/cooMotion", "Date": "2015-07-11T01:00:02Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mPath.exists()) { loadFileList(); showFileChoosingDialog(); }else { android.widget.Toast.makeText(getApplicationContext(), \"No file to upload.\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1063/buggy-version/mobile.src.main.java.com.example.richardjiang.comotion.shareHandler.UploadActivity.java", "BodyUseAPI": [], "Fixed commit": "f2ea0046d13d9f0438598f7abb64880b8addd7ff", "Url": "https://api.github.com/repos/RichardeJiang/cooMotion", "Date": "2015-07-11T01:00:02Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openbaton.nfvo.repositories.NetworkServiceDescriptorRepository.findFirstById(newNsd.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (updatingNsd == null) { throw new org.openbaton.exceptions.NotFoundException((\"Not found NSD with id \" + (newNsd.getId()))); }else if (!(newNsd.getProjectId().equals(projectId))) { throw new org.springframework.security.oauth2.common.exceptions.UnauthorizedUserException(\"NSD not under the project chosen, are you trying to hack us? Just kidding, it's a bug :)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5865/buggy-version/core.core-impl.src.main.java.org.openbaton.nfvo.core.api.NetworkServiceDescriptorManagement.java", "BodyUseAPI": [], "Fixed commit": "11de1a8574c04ae59c3a64904f83b5d33367a892", "Url": "https://api.github.com/repos/openbaton/NFVO", "Date": "2017-03-15T14:40:10Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.keycloak.storage.ldap.idm.model.LDAPObject.getAttributeAsString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rdnAttrVal == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7135/buggy-version/federation.ldap.src.main.java.org.keycloak.storage.ldap.idm.store.ldap.LDAPIdentityStore.java", "BodyUseAPI": [], "Fixed commit": "73cad40fb788eb92cccced02919bbc55cfcaf473", "Url": "https://api.github.com/repos/frelibert/keycloak", "Date": "2017-02-02T21:21:18Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jenkinsci.plugins.environmentdashboard.DashboardBuilder.DescriptorImpl.getNumberOfDays()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (numberOfDays == null) { numberOfDays = 30; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2477/buggy-version/src.main.java.org.jenkinsci.plugins.environmentdashboard.DashboardBuilder.java", "BodyUseAPI": [], "Fixed commit": "ff5f4a043e94896a9768bdbe00b56a6f680c23cc", "Url": "https://api.github.com/repos/kramos/environment-dashboard", "Date": "2014-11-19T18:34:34Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof java.lang.Number) { return java.lang.Integer.valueOf(((java.lang.Number) (value)).intValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3409/buggy-version/poseidon-core.src.main.java.com.voxlearning.poseidon.core.convert.converter.NumberEnum.java", "BodyUseAPI": [], "Fixed commit": "0a7caaa92c23c10f308a9e7bc37a6ac06a2a5c26", "Url": "https://api.github.com/repos/jettyaway/poseidon", "Date": "2017-12-05T06:31:02Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.voxlearning.poseidon.core.convert.converter.NumberEnum.3.convertToString(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.voxlearning.poseidon.core.util.StrUtil.isBlank(valueStr)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3409/buggy-version/poseidon-core.src.main.java.com.voxlearning.poseidon.core.convert.converter.NumberEnum.java", "BodyUseAPI": [], "Fixed commit": "0a7caaa92c23c10f308a9e7bc37a6ac06a2a5c26", "Url": "https://api.github.com/repos/jettyaway/poseidon", "Date": "2017-12-05T06:31:02Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fields.get(j).equals(Tempo.Logic.Calendar.PARAM_RECURRING)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2791/buggy-version/src.Tempo.Logic.Calendar.java", "BodyUseAPI": [], "Fixed commit": "9513aaef063b2813136be77780ff913c49658b02", "Url": "https://api.github.com/repos/cs2103aug2015-f10-2j/main", "Date": "2015-11-08T08:49:57Z"},
{"Line": "=>742", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.mVolume) != (comp.mVolume)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1340/buggy-version/models.BasicShape.java", "BodyUseAPI": [], "Fixed commit": "e82c1c0dc9eacac3cc703f31e7fd76c8e9a991c7", "Url": "https://api.github.com/repos/EricChang1/P1.3_Rev2", "Date": "2016-03-06T12:35:43Z"},
{"Line": "=>748", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.adjMatrix.equals(comp.adjMatrix))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1340/buggy-version/models.BasicShape.java", "BodyUseAPI": [], "Fixed commit": "e82c1c0dc9eacac3cc703f31e7fd76c8e9a991c7", "Url": "https://api.github.com/repos/EricChang1/P1.3_Rev2", "Date": "2016-03-06T12:35:43Z"},
{"Line": "=>744", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getNumberOfVertices()) != (comp.getNumberOfVertices())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1340/buggy-version/models.BasicShape.java", "BodyUseAPI": [], "Fixed commit": "e82c1c0dc9eacac3cc703f31e7fd76c8e9a991c7", "Url": "https://api.github.com/repos/EricChang1/P1.3_Rev2", "Date": "2016-03-06T12:35:43Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.springframework.cloud.netflix.zuul.filters.route.ZuulFallbackProvider>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (provider == null) { provider = defaultFallbackProvider; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4509/buggy-version/spring-cloud-netflix-core.src.main.java.org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommandFactory.java", "BodyUseAPI": [], "Fixed commit": "731c8bf0fde6b597299ec20ff937e81f8b677abf", "Url": "https://api.github.com/repos/rterentiev/spring-cloud-netflix", "Date": "2017-02-14T18:59:25Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((\"*\".equals(route)) || (route == null)) { defaultFallbackProvider = provider; }else { fallbackProviderCache.put(route, provider); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4509/buggy-version/spring-cloud-netflix-core.src.main.java.org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommandFactory.java", "BodyUseAPI": [], "Fixed commit": "731c8bf0fde6b597299ec20ff937e81f8b677abf", "Url": "https://api.github.com/repos/rterentiev/spring-cloud-netflix", "Date": "2017-02-14T18:59:25Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sprite) == null) return new android.graphics.Rect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3307/buggy-version/sidescroller.sidescroller.src.main.java.com.example.sidescroller.game.entities.Entity.java", "BodyUseAPI": [], "Fixed commit": "6f2e45d65c6c851777ac0c9f9cd3d67076e3d062", "Url": "https://api.github.com/repos/Soote/game-3v97", "Date": "2013-12-08T22:28:39Z"},
{"Line": "=>890", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedAreaX2) <= (selectedAreaX)) selectedAreaX2 -= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3517/buggy-version/src.gui.MapPanel.java", "BodyUseAPI": [], "Fixed commit": "591d5fd6fb6bd58f8a8ff0f6bae4b1041af6e74d", "Url": "https://api.github.com/repos/zear/fled", "Date": "2015-03-28T16:58:53Z"},
{"Line": "=>1009", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y2 > y1) y2 -= 16;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3517/buggy-version/src.gui.MapPanel.java", "BodyUseAPI": [], "Fixed commit": "591d5fd6fb6bd58f8a8ff0f6bae4b1041af6e74d", "Url": "https://api.github.com/repos/zear/fled", "Date": "2015-03-28T16:58:53Z"},
{"Line": "=>892", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedAreaY2) <= (selectedAreaY)) selectedAreaY2 -= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3517/buggy-version/src.gui.MapPanel.java", "BodyUseAPI": [], "Fixed commit": "591d5fd6fb6bd58f8a8ff0f6bae4b1041af6e74d", "Url": "https://api.github.com/repos/zear/fled", "Date": "2015-03-28T16:58:53Z"},
{"Line": "=>1007", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x2 > x1) x2 -= 16;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3517/buggy-version/src.gui.MapPanel.java", "BodyUseAPI": [], "Fixed commit": "591d5fd6fb6bd58f8a8ff0f6bae4b1041af6e74d", "Url": "https://api.github.com/repos/zear/fled", "Date": "2015-03-28T16:58:53Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.elasticsearch.client.Requests.bulkRequest()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((bulkRequest.numberOfActions()) > 0) { client.bulk(bulkRequest, new org.elasticsearch.action.ActionListener<org.elasticsearch.action.bulk.BulkResponse>() { public void onResponse(org.elasticsearch.action.bulk.BulkResponse response) { logger.info(\"Bulk request completed\"); for (org.elasticsearch.action.bulk.BulkItemResponse itemResponse : response) { if (itemResponse.failed()) { logger.error(\"Index request failed {index:{}, type:{}, id:{}, reason:{}}\", itemResponse.index(), itemResponse.type(), itemResponse.id(), itemResponse.failure().message()); } } } public void onFailure(java.lang.Throwable e) { logger.error(\"Bulk request failed\", e); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8522/buggy-version/src.main.java.co.diji.rest.SolrUpdateHandlerRestAction.java", "BodyUseAPI": ["co.diji.rest.SolrUpdateHandlerRestAction.bulk(org.elasticsearch.action.bulk.BulkRequest,org.elasticsearch.action.ActionListener<org.elasticsearch.action.bulk.BulkResponse>)"], "Fixed commit": "59d328f56dd4694d9cd0359635940fc9e38ad32b", "Url": "https://api.github.com/repos/mattweber/elasticsearch-mocksolrplugin", "Date": "2011-12-13T21:39:53Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"chrome\".equalsIgnoreCase(conf.getBrowser()))) { driver.manage().timeouts().pageLoadTimeout(conf.getPageLoadTimeout(), java.util.concurrent.TimeUnit.SECONDS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4231/buggy-version/src.main.java.tk.yourchanges.clicker.clicker.Clicker.java", "BodyUseAPI": ["driver.manage().timeouts().pageLoadTimeout(conf.getPageLoadTimeout(),java.util.concurrent.TimeUnit)", "tk.yourchanges.clicker.clicker.ClickerConfig.getPageLoadTimeout()"], "Fixed commit": "60100ecb503e321854e21e473b1e067668463712", "Url": "https://api.github.com/repos/yourchanges/clicker", "Date": "2012-09-18T03:59:35Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.Hudson.getInstance().getItem(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((forceSave) && (null != newJob)) { newJob.save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/9195/buggy-version/hudson-core.src.main.java.hudson.cli.CopyJobCommand.java", "BodyUseAPI": ["hudson.model.Job.save()"], "Fixed commit": "a40c4fe8087973780509cca1b4bb64458baa25db", "Url": "https://api.github.com/repos/mcculls/hudson", "Date": "2011-12-01T13:16:46Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getBoolean(PBSettingsFragment.PREF_SERVICE_RUNNING,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (running) { final android.content.Intent startServiceIntent = new android.content.Intent(context, fr.s13d.photobackup.PBService.class); context.startService(startServiceIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8399/buggy-version/src.fr.s13d.photobackup.PBBootBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "2dd370a12ec670dbeb1fc41cb1dc4c73e94016ce", "Url": "https://api.github.com/repos/PhotoBackup/client-android", "Date": "2015-08-18T12:19:43Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(activeGame.getState().equals(GameState.FINISHED))) { org.codedefenders.singleplayer.SinglePlayerGame spg = ((org.codedefenders.singleplayer.SinglePlayerGame) (activeGame)); if (spg.getAi().makeTurn()) { messages.addAll(spg.getAi().getMessagesLastTurn()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8371/buggy-version/src.main.java.org.codedefenders.GameManager.java", "BodyUseAPI": [], "Fixed commit": "8dd751a315dff4345630bfe8d309068d7c7e5daa", "Url": "https://api.github.com/repos/CodeDefenders/CodeDefenders", "Date": "2017-03-03T16:46:43Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zkoss.zk.ui.Component.getAttribute(BinderCtrl.CHILDREN_BINDING_RENDERED_COMPONENTS)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (cbrCompsList != null) cbrCompsList.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8055/buggy-version/zkbind.src.org.zkoss.bind.impl.LoadChildrenBindingImpl.java", "BodyUseAPI": ["java.util.List<org.zkoss.zk.ui.Component[]>.clear()"], "Fixed commit": "15f52a4755a0cb0b7cfd1c9638ec0560466d3eb4", "Url": "https://api.github.com/repos/wenninghsu/zk", "Date": "2015-10-21T03:57:50Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zkoss.zk.ui.Component.setAttribute(BinderCtrl.CHILDREN_BINDING_MODEL_LISTENER,org.zkoss.zul.event.ListDataListener)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (attribute instanceof org.zkoss.zul.event.ListDataListener) ((org.zkoss.zul.ListModel<?>) (old)).removeListDataListener(((org.zkoss.zul.event.ListDataListener) (attribute)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8055/buggy-version/zkbind.src.org.zkoss.bind.impl.LoadChildrenBindingImpl.java", "BodyUseAPI": [], "Fixed commit": "15f52a4755a0cb0b7cfd1c9638ec0560466d3eb4", "Url": "https://api.github.com/repos/wenninghsu/zk", "Date": "2015-10-21T03:57:50Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zkoss.zk.ui.Component.setAttribute(BinderCtrl.CHILDREN_BINDING_MODEL_LISTENER,org.zkoss.zul.event.ListDataListener)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (attribute instanceof org.zkoss.zul.event.ListDataListener) ((org.zkoss.zul.ListModel<?>) (old)).removeListDataListener(((org.zkoss.zul.event.ListDataListener) (attribute)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8055/buggy-version/zkbind.src.org.zkoss.bind.impl.InitChildrenBindingImpl.java", "BodyUseAPI": [], "Fixed commit": "15f52a4755a0cb0b7cfd1c9638ec0560466d3eb4", "Url": "https://api.github.com/repos/wenninghsu/zk", "Date": "2015-10-21T03:57:50Z"},
{"Line": "=>1832", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bytedeco.javacpp.tools.Generator.by(methodInfo.annotations)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (returnBy instanceof org.bytedeco.javacpp.annotation.ByRef) { returnPrefix = \"std::string rstr(\"; }else if (returnBy instanceof org.bytedeco.javacpp.annotation.ByPtrPtr) { returnPrefix = \"rptr = NULL; const char** rptrptr = (const char**)\"; }else { returnPrefix += \"(const char*)\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7747/buggy-version/src.main.java.org.bytedeco.javacpp.tools.Generator.java", "BodyUseAPI": [], "Fixed commit": "c3e75adbdfec0d09a6b1ca3af0b616ac437fbd78", "Url": "https://api.github.com/repos/bytedeco/javacpp", "Date": "2017-12-21T08:09:52Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.Ben12345rocks.VotingPlugin.Objects.Reward.getRandomRewards()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rewards.size()) > 0) { user.giveReward(com.Ben12345rocks.VotingPlugin.Config.ConfigRewards.getInstance().getReward(rewards.get((((int) (java.lang.Math.random())) * (rewards.size()))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8705/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.Reward.java", "BodyUseAPI": ["com.Ben12345rocks.VotingPlugin.Config.ConfigRewards.getInstance().getReward(java.lang.String)", "java.util.ArrayList<java.lang.String>.size()", "com.Ben12345rocks.VotingPlugin.Objects.User.giveReward(com.Ben12345rocks.VotingPlugin.Config.ConfigRewards.getInstance().getReward(rewards.get((((int) (java.lang.Math.random())) * (rewards.size())))))", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "2d21e3e9bc94c4b7d5d3fa13087628f94bd633bb", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-07-10T19:14:15Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(Config.IMEI)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mDeviceInfo.isEmpty()) || (android.text.TextUtils.isEmpty(p_key))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4836/buggy-version/src.com.android.settings.changephone.ChangePhoneCtrl.java", "BodyUseAPI": [], "Fixed commit": "829c5b15786bc05ed08f78e49fc9053672474a25", "Url": "https://api.github.com/repos/ssun125/platform_settings", "Date": "2016-08-15T03:20:47Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vx) > 0) vx = maxSprintVelX; else vx = -(maxSprintVelX);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5618/buggy-version/src.net.maker.object.entity.Player.java", "BodyUseAPI": [], "Fixed commit": "f962b21ff1101ee73e31f15d9e38170098568661", "Url": "https://api.github.com/repos/jalako/maker", "Date": "2017-09-09T14:18:43Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.maker.Input.isKeyDown(GLFW.GLFW_KEY_A)) || (net.maker.Input.isKeyDown(GLFW.GLFW_KEY_LEFT))) { if (inAir) vx -= (airAccX) * dt; else vx -= (accX) * dt; moved = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5618/buggy-version/src.net.maker.object.entity.Player.java", "BodyUseAPI": [], "Fixed commit": "f962b21ff1101ee73e31f15d9e38170098568661", "Url": "https://api.github.com/repos/jalako/maker", "Date": "2017-09-09T14:18:43Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.maker.Input.isKeyDown(GLFW.GLFW_KEY_S)) { if (lastDirLeft) currentAnim = net.maker.animation.PlayerAnim.SNEAK_LEFT; else currentAnim = net.maker.animation.PlayerAnim.SNEAK_RIGHT; }else if (inAir) { if ((vx) > 0) currentAnim = net.maker.animation.PlayerAnim.JUMP_RIGHT; else if ((vx) < 0) currentAnim = net.maker.animation.PlayerAnim.JUMP_LEFT; else if (onWall) { if (wallIsLeft) currentAnim = net.maker.animation.PlayerAnim.STILL_LEFT; else currentAnim = net.maker.animation.PlayerAnim.STILL_RIGHT; }else { if (lastDirLeft) currentAnim = net.maker.animation.PlayerAnim.STILL_LEFT; else currentAnim = net.maker.animation.PlayerAnim.STILL_RIGHT; } }else { if ((vx) == 0) { if (lastDirLeft) currentAnim = net.maker.animation.PlayerAnim.STILL_LEFT; else currentAnim = net.maker.animation.PlayerAnim.STILL_RIGHT; }else { runTime += dt; if ((runTime) >= 0.1F) { runTime -= 0.1F; (runID)++; runID %= 3; } if ((vx) > 0) switch (runID) { case 0 : currentAnim = net.maker.animation.PlayerAnim.RUN_RIGHT_3; break; case 1 : currentAnim = net.maker.animation.PlayerAnim.RUN_RIGHT_2; break; case 2 : currentAnim = net.maker.animation.PlayerAnim.RUN_RIGHT_1; break; } else switch (runID) { case 0 : currentAnim = net.maker.animation.PlayerAnim.RUN_LEFT_3; break; case 1 : currentAnim = net.maker.animation.PlayerAnim.RUN_LEFT_2; break; case 2 : currentAnim = net.maker.animation.PlayerAnim.RUN_LEFT_1; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5618/buggy-version/src.net.maker.object.entity.Player.java", "BodyUseAPI": [], "Fixed commit": "f962b21ff1101ee73e31f15d9e38170098568661", "Url": "https://api.github.com/repos/jalako/maker", "Date": "2017-09-09T14:18:43Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.maker.Input.isKeyDown(GLFW.GLFW_KEY_W)) || (net.maker.Input.isKeyDown(GLFW.GLFW_KEY_UP))) { if ((!(jumped)) && ((!(inAir)) || ((onWall) && ((vy) < 0)))) { jumped = true; vy = jumpStrength; inAir = true; if (onWall) { if (wallIsLeft) vx = wallJumpStrength; else vx = -(wallJumpStrength); } }else if (jumped) { } }else { jumped = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5618/buggy-version/src.net.maker.object.entity.Player.java", "BodyUseAPI": [], "Fixed commit": "f962b21ff1101ee73e31f15d9e38170098568661", "Url": "https://api.github.com/repos/jalako/maker", "Date": "2017-09-09T14:18:43Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(vx)) > (maxVelX)) { if ((!(wasSprinting)) && (!(sprint))) { if ((vx) > 0) vx = maxVelX; else vx = -(maxVelX); }else if (sprint) { if ((vx) > 0) vx = maxSprintVelX; else vx = -(maxSprintVelX); } }else if (wasSprinting) { wasSprinting = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5618/buggy-version/src.net.maker.object.entity.Player.java", "BodyUseAPI": [], "Fixed commit": "f962b21ff1101ee73e31f15d9e38170098568661", "Url": "https://api.github.com/repos/jalako/maker", "Date": "2017-09-09T14:18:43Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sprint) && (!(net.maker.Input.isKeyDown(GLFW.GLFW_KEY_LEFT_SHIFT)))) wasSprinting = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5618/buggy-version/src.net.maker.object.entity.Player.java", "BodyUseAPI": [], "Fixed commit": "f962b21ff1101ee73e31f15d9e38170098568661", "Url": "https://api.github.com/repos/jalako/maker", "Date": "2017-09-09T14:18:43Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.maker.Input.isKeyDown(GLFW.GLFW_KEY_D)) || (net.maker.Input.isKeyDown(GLFW.GLFW_KEY_RIGHT))) { if (inAir) vx += (airAccX) * dt; else vx += (accX) * dt; moved = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5618/buggy-version/src.net.maker.object.entity.Player.java", "BodyUseAPI": [], "Fixed commit": "f962b21ff1101ee73e31f15d9e38170098568661", "Url": "https://api.github.com/repos/jalako/maker", "Date": "2017-09-09T14:18:43Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxX >= minX) && (maxY >= minY)) { boolean collision = false; for (int yy = minY; yy < maxY; yy++) { for (int xx = minX; xx < maxX; xx++) { if (level.isSolid(xx, yy)) { collision = true; net.maker.elements.Element e = elements[xx][yy][0]; if (e.getID().isDeadly()) { dead = true; return; } float dcx = (((x) + ((width) / 2)) - (e.getX())) - ((net.maker.elements.Element.SIZE) / 2.0F); float dcy = (((y) + ((height) / 2)) - (e.getY())) - ((net.maker.elements.Element.SIZE) / 2.0F); float dx; float dy; if (dcx >= 0) { if (dcy >= 0) { dx = ((e.getX()) + (net.maker.elements.Element.SIZE)) - (x); dy = ((e.getY()) + (net.maker.elements.Element.SIZE)) - (y); boolean right = level.isSolid((xx + 1), yy); boolean top = level.isSolid(xx, (yy + 1)); if (right && top) { x = (e.getX()) + (net.maker.elements.Element.SIZE); y = (e.getY()) + (net.maker.elements.Element.SIZE); vx = 0; vy = 0; inAir = false; onWall = true; wallIsLeft = true; }else if (right) { y = (e.getY()) + (net.maker.elements.Element.SIZE); vy = 0; inAir = false; }else if (top) { x = (e.getX()) + (net.maker.elements.Element.SIZE); vx = 0; onWall = true; wallIsLeft = true; }else if (dx > dy) { y = (e.getY()) + (net.maker.elements.Element.SIZE); vy = 0; inAir = false; }else { x = (e.getX()) + (net.maker.elements.Element.SIZE); vx = 0; onWall = true; wallIsLeft = true; } }else { dx = ((e.getX()) + (net.maker.elements.Element.SIZE)) - (x); dy = ((y) + (height)) - (e.getY()); boolean right = level.isSolid((xx + 1), yy); boolean bottom = level.isSolid(xx, (yy - 1)); if (right && bottom) { x = (e.getX()) + (net.maker.elements.Element.SIZE); y = (e.getY()) - (height); vx = 0; vy = 0; onWall = true; wallIsLeft = true; }else if (right) { y = (e.getY()) - (height); vy = 0; }else if (bottom) { x = (e.getX()) + (net.maker.elements.Element.SIZE); vx = 0; onWall = true; wallIsLeft = true; }else if (dx > dy) { y = (e.getY()) - (height); vy = 0; }else { x = (e.getX()) + (net.maker.elements.Element.SIZE); vx = 0; onWall = true; wallIsLeft = true; } } }else { if (dcy >= 0) { dx = ((x) + (width)) - (e.getX()); dy = ((e.getY()) + (net.maker.elements.Element.SIZE)) - (y); boolean left = level.isSolid((xx - 1), yy); boolean top = level.isSolid(xx, (yy + 1)); if (left && top) { x = (e.getX()) - (width); y = (e.getY()) + (net.maker.elements.Element.SIZE); vx = 0; vy = 0; inAir = false; onWall = true; wallIsLeft = false; }else if (left) { y = (e.getY()) + (net.maker.elements.Element.SIZE); vy = 0; inAir = false; }else if (top) { x = (e.getX()) - (width); vx = 0; onWall = true; wallIsLeft = false; }else if (dx > dy) { y = (e.getY()) + (net.maker.elements.Element.SIZE); vy = 0; inAir = false; }else { x = (e.getX()) - (width); vx = 0; onWall = true; wallIsLeft = false; } }else { dx = ((x) + (width)) - (e.getX()); dy = ((y) + (height)) - (e.getY()); boolean left = level.isSolid((xx - 1), yy); boolean bottom = level.isSolid(xx, (yy - 1)); if (left && bottom) { x = (e.getX()) - (width); y = (e.getY()) - (height); vx = 0; vy = 0; onWall = true; wallIsLeft = false; }else if (left) { y = (e.getY()) - (height); vy = 0; }else if (bottom) { x = (e.getX()) - (width); vx = 0; onWall = true; wallIsLeft = false; }else if (dx > dy) { y = (e.getY()) - (height); vy = 0; }else { x = (e.getX()) - (width); vx = 0; onWall = true; wallIsLeft = false; } } } } } } if (!collision) inAir = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5618/buggy-version/src.net.maker.object.entity.Player.java", "BodyUseAPI": [], "Fixed commit": "f962b21ff1101ee73e31f15d9e38170098568661", "Url": "https://api.github.com/repos/jalako/maker", "Date": "2017-09-09T14:18:43Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!moved) || (wasSprinting)) && (!(inAir))) { if ((vx) > 0) { vx -= (deaccX) * dt; if ((vx) < 0) vx = 0; }else { vx += (deaccX) * dt; if ((vx) > 0) vx = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5618/buggy-version/src.net.maker.object.entity.Player.java", "BodyUseAPI": [], "Fixed commit": "f962b21ff1101ee73e31f15d9e38170098568661", "Url": "https://api.github.com/repos/jalako/maker", "Date": "2017-09-09T14:18:43Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((y) < 0) { dead = true; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5618/buggy-version/src.net.maker.object.entity.Player.java", "BodyUseAPI": [], "Fixed commit": "f962b21ff1101ee73e31f15d9e38170098568661", "Url": "https://api.github.com/repos/jalako/maker", "Date": "2017-09-09T14:18:43Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.floor(((x) / (net.maker.elements.Element.SIZE)))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (minX < 0) minX = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5618/buggy-version/src.net.maker.object.entity.Player.java", "BodyUseAPI": [], "Fixed commit": "f962b21ff1101ee73e31f15d9e38170098568661", "Url": "https://api.github.com/repos/jalako/maker", "Date": "2017-09-09T14:18:43Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.floor(((y) / (net.maker.elements.Element.SIZE)))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (minY < 0) minY = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5618/buggy-version/src.net.maker.object.entity.Player.java", "BodyUseAPI": [], "Fixed commit": "f962b21ff1101ee73e31f15d9e38170098568661", "Url": "https://api.github.com/repos/jalako/maker", "Date": "2017-09-09T14:18:43Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (maxX > (level.getWidth())) maxX = level.getWidth();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5618/buggy-version/src.net.maker.object.entity.Player.java", "BodyUseAPI": ["net.maker.Level.getWidth()"], "Fixed commit": "f962b21ff1101ee73e31f15d9e38170098568661", "Url": "https://api.github.com/repos/jalako/maker", "Date": "2017-09-09T14:18:43Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (maxY > (level.getHeight())) maxY = level.getHeight();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5618/buggy-version/src.net.maker.object.entity.Player.java", "BodyUseAPI": ["net.maker.Level.getHeight()"], "Fixed commit": "f962b21ff1101ee73e31f15d9e38170098568661", "Url": "https://api.github.com/repos/jalako/maker", "Date": "2017-09-09T14:18:43Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(listOfRegions.contains(region))) { listOfRegions.add(region); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/9125/buggy-version/app.src.main.java.com.scv.slackgo.helpers.Preferences.java", "BodyUseAPI": ["java.util.ArrayList<com.scv.slackgo.models.Region>.add(com.scv.slackgo.models.Region)"], "Fixed commit": "4e04b06ff366aff61245e1229fd96618ee948175", "Url": "https://api.github.com/repos/scvsoft/SlackGo-Android", "Date": "2016-10-19T19:09:26Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((regionsList) == null) { return true; }else { for (com.scv.slackgo.models.Region regionInList : regionsList) { if (region.getName().equals(regionInList.getName())) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/9125/buggy-version/app.src.main.java.com.scv.slackgo.activities.DetailRegionActivity.java", "BodyUseAPI": [], "Fixed commit": "4e04b06ff366aff61245e1229fd96618ee948175", "Url": "https://api.github.com/repos/scvsoft/SlackGo-Android", "Date": "2016-10-19T19:09:26Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entries.size()) <= 1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/9129/buggy-version/server.src.main.java.org.opentosca.toscana.plugins.kubernetes.docker.dockerfile.builder.DockerfileBuilder.java", "BodyUseAPI": [], "Fixed commit": "5ac27fbfcad701275470c69770d0e62002485a66", "Url": "https://api.github.com/repos/StuPro-TOSCAna/TOSCAna", "Date": "2017-12-10T03:25:23Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Server.ActiveHendelse.exists(\"Hendelse\", avtale.getAvtaleId())) { Server.ActiveHendelse.updateAvtale(avtale); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6529/buggy-version/src.Server.ObjectManager.java", "BodyUseAPI": ["Server.ActiveHendelse.updateAvtale(no.ntnu.fp.model.Avtale)"], "Fixed commit": "a004024d60f1297536e48c6a31ab195e942ab37d", "Url": "https://api.github.com/repos/gruppe10/Fellesprosjekt", "Date": "2011-04-05T15:00:53Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (oldSubNames == null) { oldSubNames = new Creator.Circuit(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8481/buggy-version/PanelCreator.src.Creator.GlycolSettings.java", "BodyUseAPI": [], "Fixed commit": "3a3cece8cf3f77943025f20cbaf2338e0d475475", "Url": "https://api.github.com/repos/NeelandsEric/BackgroundCreator", "Date": "2016-07-07T18:44:36Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.item.EntityItem.f()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((itemstack.b) - left) > 0) { if ((this.d) instanceof net.minecraft.entity.player.EntityPlayerMP) { return !(((net.canarymod.hook.player.ItemPickupHook) (new net.canarymod.hook.player.ItemPickupHook(((net.minecraft.entity.player.EntityPlayerMP) (this.d)).getPlayer(), ((net.canarymod.api.entity.EntityItem) (entityitem.getCanaryEntity()))).call())).isCanceled()); } return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/335/buggy-version/src.main.java.net.minecraft.entity.player.InventoryPlayer.java", "BodyUseAPI": [], "Fixed commit": "1dfc7f6595a7ac251b3f14a07f2cb0fdbf0fda9c", "Url": "https://api.github.com/repos/CanaryModTeam/CanaryMod", "Date": "2014-02-25T22:17:54Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((cachedValue == null) && (value != null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8040/buggy-version/bundles.binding.org.openhab.binding.weather.src.main.java.org.openhab.binding.weather.internal.bus.WeatherPublisher.java", "BodyUseAPI": [], "Fixed commit": "3780e18dbd576d2f817a46779865d3f8302d5969", "Url": "https://api.github.com/repos/gerrieg/openhab", "Date": "2015-03-13T09:43:11Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.equaleyes.bugreporter.MainButtonActivity.isSystemAlertPermissionGranted(this))) { com.equaleyes.bugreporter.MainButtonActivity.requestSystemAlertPermission(this, com.equaleyes.bugreporter.MainButtonActivity.SYSTEM_PERMISSION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/680/buggy-version/app.src.main.java.com.equaleyes.bugreporter.MainButtonActivity.java", "BodyUseAPI": [], "Fixed commit": "9f34a5bf516d2ad75b56ddeb7cf5969d6f10dc8b", "Url": "https://api.github.com/repos/equaleyes/BugReporter2", "Date": "2017-05-04T08:35:11Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tripleplay.ui.layout.TableLayout.colspan(elem)) == 1) { metrics.columnWidths[col] = java.lang.Math.max(metrics.columnWidths[col], psize.width()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7899/buggy-version/core.src.main.java.tripleplay.ui.layout.TableLayout.java", "BodyUseAPI": [], "Fixed commit": "4d4e93a54965f3abb200674064a6b08a5ae0631f", "Url": "https://api.github.com/repos/threerings/tripleplay", "Date": "2013-11-05T18:05:57Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<javax.swing.KeyStroke, org.freeplane.core.ui.AFreeplaneAction>.get(javax.swing.KeyStroke)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (action == null) { action = accelerators.get(org.freeplane.core.ui.components.FreeplaneMenuBar.derive(ks, event.getKeyChar())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6213/buggy-version/freeplane.src.org.freeplane.core.ui.ribbon.RibbonAcceleratorManager.java", "BodyUseAPI": [], "Fixed commit": "7098b7b3d9bf5f41869da5026fa112332ba42b23", "Url": "https://api.github.com/repos/Docear/Desktop", "Date": "2013-08-16T11:40:23Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_input.LA(1)) != (IntStream.EOF)) { getInterpreter().consume(_input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3866/buggy-version/runtime.Java.src.org.antlr.v4.runtime.Lexer.java", "BodyUseAPI": ["getInterpreter().consume(org.antlr.v4.runtime.CharStream)"], "Fixed commit": "b917c01bbae1531037f554d56324dc69bc1fe1d3", "Url": "https://api.github.com/repos/antlr/antlr4", "Date": "2012-11-04T17:29:00Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (found) message = \"Good code\"; else message = \"Sorry code not found\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1277/buggy-version/DebuggingExercises.DebugEight1.java", "BodyUseAPI": [], "Fixed commit": "8e8f5b07056b6d025358db70815b1b4a9ec8b39e", "Url": "https://api.github.com/repos/zola-jane/cp2406_farrell8_ch08", "Date": "2016-09-05T05:00:18Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actualWidth < 0) || (actualHeight < 0)) { android.graphics.Bitmap bitmap2 = android.graphics.BitmapFactory.decodeFile(filePath); actualWidth = bitmap2.getWidth(); actualHeight = bitmap2.getHeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2075/buggy-version/qiscus-sdk.src.main.java.com.qiscus.sdk.util.QiscusImageUtil.java", "BodyUseAPI": [], "Fixed commit": "7caf2bd13c5c9298a08b9421c5b6606be8aa7fd7", "Url": "https://api.github.com/repos/qiscus/qiscus-sdk-android", "Date": "2016-10-11T08:49:51Z"},
{"Line": "=>2065", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(expression instanceof org.codehaus.groovy.ast.expr.MethodCallExpression)) { tlr = lookupExpressionType(expression, null, false, scopes.getLast()); }else { org.codehaus.groovy.ast.expr.MethodCallExpression call = ((org.codehaus.groovy.ast.expr.MethodCallExpression) (expression)); tlr = lookupExpressionType(call.getObjectExpression(), null, false, scopes.getLast()); tlr = lookupExpressionType(call.getMethod(), tlr.type, ((call.getObjectExpression()) instanceof org.codehaus.groovy.ast.expr.ClassExpression), scopes.getLast()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1495/buggy-version/base.org.eclipse.jdt.groovy.core.src.org.eclipse.jdt.groovy.search.TypeInferencingVisitorWithRequestor.java", "BodyUseAPI": ["org.eclipse.jdt.groovy.search.TypeInferencingVisitorWithRequestor.lookupExpressionType(org.codehaus.groovy.ast.expr.Expression,<nulltype>,boolean,scopes.getLast())"], "Fixed commit": "58b638286d6a1eb5b6597916ef62f2b73314d8fb", "Url": "https://api.github.com/repos/groovy/groovy-eclipse", "Date": "2017-11-07T23:07:37Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ai.gzesp.dao.service.CommonDao.queryForList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((list != null) && ((list.size()) > 0)) { goodsDefaultPhoto = list.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5101/buggy-version/src.main.java.com.ai.gzesp.dao.sql.GoodsSql.java", "BodyUseAPI": ["java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.get(int)"], "Fixed commit": "5e2c60acdeefb14992017d65cec9bc900a6753a8", "Url": "https://api.github.com/repos/aiced/gzesp", "Date": "2015-04-15T13:54:35Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tenantId == (-1L)) { resolvedTenantId = org.bonitasoft.console.common.server.utils.TenantsManagementUtils.getDefaultTenantId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6147/buggy-version/common.src.main.java.org.bonitasoft.console.common.server.login.LoginManagerPropertiesFactory.java", "BodyUseAPI": [], "Fixed commit": "8b0f0be031f533d1995c99ecdbae878c5c8268cb", "Url": "https://api.github.com/repos/bonitasoft/bonita-web", "Date": "2015-01-20T08:41:17Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Set<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (inflectedWordsOfSyns != null) { for (java.lang.String inflectedWord : inflectedWordsOfSyns) { newWords.add(inflectedWord); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/9134/buggy-version/src.edu.iitd.cse.open_nre.onre_analysis_helper.runner.CleanPatterns.java", "BodyUseAPI": [], "Fixed commit": "8412315bad3a7fd47d88ff1ea507b438cc651732", "Url": "https://api.github.com/repos/Open-NRE/ONRE_ANALYSIS_HELPER", "Date": "2016-10-30T18:52:28Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((columns.isEmpty()) && ((mapping.getSource().getName()) != null)) { addActionWarning(((\"Source \" + (mapping.getSource().getName())) + \" has no columns available to map. Please check that it has been configured correctly.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1629/buggy-version/src.main.java.org.gbif.ipt.action.manage.MappingAction.java", "BodyUseAPI": ["org.gbif.ipt.model.ExtensionMapping.getSource()", "mapping.getSource().getName()", "org.gbif.ipt.action.manage.MappingAction.addActionWarning(((\"Source \" + (mapping.getSource().getName())) + \" has no columns available to map. Please check that it has been configured correctly.\"))"], "Fixed commit": "b1bb17d97cab4e9d0e1d32d8ee8da912f5bce331", "Url": "https://api.github.com/repos/SIB-Colombia/ipt", "Date": "2015-09-15T09:47:32Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (columns.isEmpty()) { return mapped; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1629/buggy-version/src.main.java.org.gbif.ipt.action.manage.MappingAction.java", "BodyUseAPI": [], "Fixed commit": "b1bb17d97cab4e9d0e1d32d8ee8da912f5bce331", "Url": "https://api.github.com/repos/SIB-Colombia/ipt", "Date": "2015-09-15T09:47:32Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Calendar.Type.UNDEFINED.equals(type)) || (Calendar.Type.PERSONAL.equals(type))) { events.addAll(dataStorage.getUserEvents(query.getOwner(), eventQuery)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1054/buggy-version/calendar-service.src.main.java.org.exoplatform.calendar.storage.jcr.JCREventDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "6e833f3c217049c20ee66134f3601084332d5161", "Url": "https://api.github.com/repos/exodev/calendar", "Date": "2015-08-10T07:53:33Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (query instanceof org.exoplatform.calendar.storage.jcr.JCREventQuery) { type = ((org.exoplatform.calendar.storage.jcr.JCREventQuery) (query)).getCalendarType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1054/buggy-version/calendar-service.src.main.java.org.exoplatform.calendar.storage.jcr.JCREventDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "6e833f3c217049c20ee66134f3601084332d5161", "Url": "https://api.github.com/repos/exodev/calendar", "Date": "2015-08-10T07:53:33Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Calendar.Type.UNDEFINED.equals(type)) || (Calendar.Type.GROUP.equals(type))) { events.addAll(dataStorage.getPublicEvents(eventQuery)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1054/buggy-version/calendar-service.src.main.java.org.exoplatform.calendar.storage.jcr.JCREventDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "6e833f3c217049c20ee66134f3601084332d5161", "Url": "https://api.github.com/repos/exodev/calendar", "Date": "2015-08-10T07:53:33Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(me.dmillerw.storage.lib.compat.ItemStackHelper.isEmpty(item))) net.minecraft.inventory.InventoryHelper.spawnItemStack(getWorld(), ((pos.getX()) + 0.5), ((pos.getY()) + 0.5), ((pos.getZ()) + 0.5), item);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3286/buggy-version/src.main.java.me.dmillerw.storage.block.tile.TileController.java", "BodyUseAPI": ["net.minecraft.inventory.InventoryHelper.spawnItemStack(getWorld(),((pos.getX()) + 0.5),((pos.getY()) + 0.5),((pos.getZ()) + 0.5),net.minecraft.item.ItemStack)"], "Fixed commit": "f28597fd7bf1efc7fdda2ef8edaef7a506ba8e84", "Url": "https://api.github.com/repos/dmillerw/Impractical-Storage", "Date": "2017-03-23T03:44:42Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.edad) > (persona.edad)) { return 1; }else if ((this.edad) < (persona.edad)) { return -1; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2065/buggy-version/src.persona.Persona.java", "BodyUseAPI": [], "Fixed commit": "52e64e167dbe53b2a966b7d262baf6f8bc8f19f9", "Url": "https://api.github.com/repos/Tremas/EjemploPersonaHashMap", "Date": "2016-06-29T11:46:22Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.umn.cs.spatialHadoop.core.Shape.getMBR()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (shapeMBR == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6419/buggy-version/src.edu.umn.cs.spatialHadoop.operations.SJMR.java", "BodyUseAPI": [], "Fixed commit": "4c0ef014fea53af295c069a3f3d55d54cb744db2", "Url": "https://api.github.com/repos/aseldawy/spatialhadoop2", "Date": "2013-12-07T20:54:31Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newName.length()) > 100) newName = newName.substring(0, 100);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5352/buggy-version/RequirementManager.src.edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.Requirement.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "8ca27ef294a03b477642fb108dff869a22cbcdc4", "Url": "https://api.github.com/repos/djkirby/wpi-suite-tng", "Date": "2013-04-27T23:17:09Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cloudml.deployer.Scaler.findVMGenerated(vmi.getName(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (temp == null) { org.cloudml.connectors.Connector c = org.cloudml.connectors.ConnectorFactory.createIaaSConnector(vmi.getType().getProvider()); java.lang.String ID = c.createImage(vmi); c.closeConnection(); v.setImageId(ID); }else { v.setImageId(temp.getImageId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2929/buggy-version/deployer.src.main.java.org.cloudml.deployer.Scaler.java", "BodyUseAPI": ["org.cloudml.deployer.VM.getImageId()", "org.cloudml.deployer.VM.setImageId(temp.getImageId())"], "Fixed commit": "7437a0d04fccb445a578f15d6bc3866dfd157775", "Url": "https://api.github.com/repos/SINTEF-9012/cloudml", "Date": "2015-03-17T09:52:03Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (position != null) for (int i = 0; i < (PointGridSpace.NB_POINTS); i++) if ((pointManager.get(i).computeVec2().distanceFast(position)) < (rayonRobotObstaclesFixes)) grilleStatiqueModif.clear(i);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1878/buggy-version/pc.src.pathfinding.dstarlite.gridspace.GridSpace.java", "BodyUseAPI": ["pointManager.get(i).computeVec2().distanceFast(utils.Vec2RO)"], "Fixed commit": "d6f3a635ed687ec5c3515d1f09e7b724d18038f0", "Url": "https://api.github.com/repos/INTechSenpai/moon-rover", "Date": "2017-05-13T12:47:55Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentOp) == null) { if (isDotLast) finalExpression = finalExpression.substring(0, ((finalExpression.length()) - 1)); }else finalExpression = finalExpression.substring(0, ((finalExpression.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1586/buggy-version/src.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "cee89a3a923a54d40d3eab6d92e2fc6f4625a3d1", "Url": "https://api.github.com/repos/DeveloperXY/SwingCalculator", "Date": "2016-11-27T18:19:39Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (validYearsCount == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1540/buggy-version/FHRecorder.src.main.java.org.fhaes.FHRecorder.GraphicsPanel.java", "BodyUseAPI": [], "Fixed commit": "43e4901c81f4a5bbb0c9dbfcc82aa3313946abac", "Url": "https://api.github.com/repos/purpleplatypus/FHAES", "Date": "2014-05-05T21:50:12Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!insideChord) { container = timeSlot; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3666/buggy-version/abcconverter.main.src.no.itema.abcconverter.AWEToABCParser.java", "BodyUseAPI": [], "Fixed commit": "3e4d23ecfe26b6002905dd36f42656eb28876e2b", "Url": "https://api.github.com/repos/Itema-as/music-generator", "Date": "2017-03-11T12:49:22Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (te instanceof simElectricity.API.IUpdateOnWatch) ((simElectricity.API.IUpdateOnWatch) (te)).onWatch();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1560/buggy-version/simElectricity.src.main.java.simElectricity.GlobalEventHandler.java", "BodyUseAPI": [], "Fixed commit": "7b08084b03b934c6dadee190434c9260a071d05a", "Url": "https://api.github.com/repos/RoyalAliceAcademyOfSciences/SimElectricity", "Date": "2014-07-20T14:44:34Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input.startsWith(\"at\")) { return input.replaceFirst(\"at\", \"\").trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1604/buggy-version/src.parser.DateTimeParser.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "634b49f5160c1cb0bad9ec63b9c45bf1117c65fd", "Url": "https://api.github.com/repos/cs2103jan2016-t11-3j/main", "Date": "2016-04-07T02:45:39Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((fromDC == null) || (fromDC.equals(\"\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2196/buggy-version/dspace-api.src.main.java.org.dspace.content.DCPagenumber.java", "BodyUseAPI": [], "Fixed commit": "c1c9b8293b2b4d38882c77a45acd28687bafa630", "Url": "https://api.github.com/repos/sandropinna/DSpace", "Date": "2013-01-26T22:59:41Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.isValid())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3995/buggy-version/plugins.properties.properties-psi-impl.src.com.intellij.lang.properties.xml.XmlPropertiesIndex.java", "BodyUseAPI": [], "Fixed commit": "6e3557905105bbf1431832f572dc522b8eca7e59", "Url": "https://api.github.com/repos/fitermay/intellij-community", "Date": "2015-04-29T10:35:49Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resource.isSuspended()) { try { countDownLatch.await(); } catch (java.lang.InterruptedException e) { org.atmosphere.samples.pubsub.utils.AtmosphereUtils.LOG.error(\"Interrupted while trying to suspend resource {}\", resource); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1014/buggy-version/spring.samples.spring-websocket.src.main.java.org.atmosphere.samples.pubsub.utils.AtmosphereUtils.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,org.atmosphere.cpr.AtmosphereResource)"], "Fixed commit": "768f30477a071ab64375d2804a7b23a7fd4595cc", "Url": "https://api.github.com/repos/Atmosphere/atmosphere-extensions", "Date": "2013-03-12T15:55:21Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alesegdia.asroth.ecs.Entity.getComponent(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (plc.dashingWall) { ac.currentAnim = com.alesegdia.asroth.asset.Gfx.playerWall; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5915/buggy-version/game.core.src.com.alesegdia.asroth.systems.HumanControllerSystem.java", "BodyUseAPI": [], "Fixed commit": "920424faf7684e718bfe19d721a40171278f9cbc", "Url": "https://api.github.com/repos/alesegdia/gbjam-asroth", "Date": "2015-08-18T19:36:50Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (division == 0) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1018/buggy-version/src.util.Vector2.java", "BodyUseAPI": [], "Fixed commit": "427f29f58c4ffd299eba95e95a824e0fc573087e", "Url": "https://api.github.com/repos/SeanFC/Fusion_and_Gravity", "Date": "2013-12-26T03:29:56Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (key.equals(\"date\")) { java.lang.Long longValue = extrasJson.getLong(key); mIntent.putExtra(key, new java.text.SimpleDateFormat(\"yyyy-MMM-dd\").format(new java.util.Date(longValue)).toString()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7161/buggy-version/app.src.main.java.com.venomeye.icmsbulgaria.BroadcastReceivers.ParsePushCustomReceiver.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,java.lang.String)", "org.json.JSONObject.getLong(java.lang.String)"], "Fixed commit": "f1171fc2e0879116c94adf030ad186d19dd24477", "Url": "https://api.github.com/repos/bojidartonchev/ICMSBulgaria-Android", "Date": "2017-04-23T13:01:09Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userPratilipiData.hasReviewState()) userPratilipi.setReviewState(userPratilipiData.getReviewState());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7936/buggy-version/src.main.java.com.pratilipi.data.util.UserPratilipiDataUtil.java", "BodyUseAPI": ["com.pratilipi.data.type.UserPratilipi.setReviewState(userPratilipiData.getReviewState())", "com.pratilipi.data.client.UserPratilipiData.getReviewState()"], "Fixed commit": "6e5cd19ef18b37b86eb47c6fe9178f48cda2541c", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-01-19T08:06:05Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_requestImpl.isSignal()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5946/buggy-version/jactor2-core.src.main.java.org.agilewiki.jactor2.core.impl.IsolationInbox.java", "BodyUseAPI": [], "Fixed commit": "32e90e6ab3c687fcbfde2c0677b06a2a4880632b", "Url": "https://api.github.com/repos/laforge49/JActor2", "Date": "2014-02-09T14:53:05Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_message.isSignal()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5946/buggy-version/jactor2-core.src.main.java.org.agilewiki.jactor2.core.impl.IsolationInbox.java", "BodyUseAPI": [], "Fixed commit": "32e90e6ab3c687fcbfde2c0677b06a2a4880632b", "Url": "https://api.github.com/repos/laforge49/JActor2", "Date": "2014-02-09T14:53:05Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((magazine.stackSize) == 0) player.inventory.mainInventory[slot] = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6801/buggy-version/src.main.java.xreliquary.items.ItemHandgun.java", "BodyUseAPI": [], "Fixed commit": "a0174517c709c7cdce5005a5a94045097c30de51", "Url": "https://api.github.com/repos/P3pp3rF1y/Reliquary", "Date": "2016-09-13T21:23:37Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.protostuff.compiler.parser.Util.removeFirstAndLastChar(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (name.startsWith(\".\")) { name = name.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4373/buggy-version/protostuff-parser.src.main.java.io.protostuff.compiler.model.DynamicMessage.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "861eec23f0c3e5702eeb5d308dae4e55f9f7a2a7", "Url": "https://api.github.com/repos/protostuff/protostuff-compiler", "Date": "2016-11-07T14:43:43Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fullyQualifiedName.startsWith(\".\")) { newKey = io.protostuff.compiler.model.DynamicMessage.Key.extension(fullyQualifiedName.substring(1)); }else { newKey = io.protostuff.compiler.model.DynamicMessage.Key.extension(fullyQualifiedName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4373/buggy-version/protostuff-parser.src.main.java.io.protostuff.compiler.model.DynamicMessage.java", "BodyUseAPI": ["java.lang.String.substring(int)", "io.protostuff.compiler.model.DynamicMessage.Key.extension(java.lang.String)", "io.protostuff.compiler.model.DynamicMessage.Key.extension(java.lang.String)"], "Fixed commit": "861eec23f0c3e5702eeb5d308dae4e55f9f7a2a7", "Url": "https://api.github.com/repos/protostuff/protostuff-compiler", "Date": "2016-11-07T14:43:43Z"},
{"Line": "=>578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["asl.sensor.input.DataStore.getBlock(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (end > (db.getEndTime())) { end = db.getEndTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6458/buggy-version/src.main.java.asl.sensor.input.DataStore.java", "BodyUseAPI": ["asl.sensor.input.DataBlock.getEndTime()"], "Fixed commit": "88be2562ff6526da918585b5f4fad8eba5a870bc", "Url": "https://api.github.com/repos/kschramm-usgs/asl_sensor_suite", "Date": "2017-08-17T16:41:53Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((serverResponse != null) && ((serverResponse.body()) != null)) resp = serverResponse.body().getResponse();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3107/buggy-version/ISSPass.app.src.main.java.com.example.isspass.presenter.ISSPassPresenterImpl.java", "BodyUseAPI": ["serverResponse.body().getResponse()", "retrofit2.Response<com.example.isspass.Beans.ISSPassModelResponse>.body()"], "Fixed commit": "4f73da3e394dd9ba3bf5fa13bd7bfac743ba5a84", "Url": "https://api.github.com/repos/ashinus/ISSPassProject", "Date": "2017-11-30T17:11:15Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isConnected)) { java.lang.Runnable checkInternet = new java.lang.Runnable() { @java.lang.Override public void run() { onCheckInternetConnection(softwareengineering.assignment.sharify.LoginActivity.this); } }; new java.lang.Thread(checkInternet).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5833/buggy-version/app.src.main.java.softwareengineering.assignment.sharify.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "a91e7a3ce455156757131022cb57c200e6c70596", "Url": "https://api.github.com/repos/hotdroid3/Sharify", "Date": "2017-06-19T03:12:27Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.text.TextUtils.isEmpty(mCurrentLatitude)) || (android.text.TextUtils.isEmpty(mCurrentLongitude))) { mErrorMessage += \"Report cannot be submitted as the system is still trying to find a location, and none was selected manually\" + \"\\n\"; mError = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6428/buggy-version/Core.src.com.ushahidi.android.app.IncidentAdd.java", "BodyUseAPI": [], "Fixed commit": "3eaa7c63967f88566dcf20416e171cfdcc4a1a42", "Url": "https://api.github.com/repos/pdestefanis/Ushahidi_Android", "Date": "2012-04-13T19:27:31Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (arguments == null) { this.argumentCount = 0; }else { this.argumentCount = arguments.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/361/buggy-version/mists-game.src.main.java.com.nkoiv.mists.game.AI.Task.java", "BodyUseAPI": [], "Fixed commit": "f50f937197f5d7ba84871eed216320a1230618fc", "Url": "https://api.github.com/repos/nkoiv/mists", "Date": "2016-01-12T04:19:43Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (line == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/503/buggy-version/src.main.java.uk.ac.ebi.pride.spectracluster.io.ParserUtilities.java", "BodyUseAPI": [], "Fixed commit": "b37166f071a2bb1fe49654184316d5ece742d559", "Url": "https://api.github.com/repos/spectra-cluster/spectra-cluster", "Date": "2015-05-13T09:30:14Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((API_GHSC.DataAccess.conn) == null) API_GHSC.DataAccess.conn = API_GHSC.DataAccess.getConnection();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4009/buggy-version/src.main.java.BaseObjects.DataAccess.java", "BodyUseAPI": [], "Fixed commit": "f187e8c7a880fc3a8cb38a4a93b85237a92c0f1e", "Url": "https://api.github.com/repos/guycurry/api-ghsc", "Date": "2016-06-12T16:06:09Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (relativeUrl.contains(\"?\")) { relativeUrl = org.apache.camel.util.ObjectHelper.before(relativeUrl, \"?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1317/buggy-version/components.camel-http-common.src.main.java.org.apache.camel.http.common.HttpHelper.java", "BodyUseAPI": ["org.apache.camel.util.ObjectHelper.before(java.lang.String,java.lang.String)"], "Fixed commit": "92b137d4c87da8b0f21d2e4e53623361d6aa0f68", "Url": "https://api.github.com/repos/apache/camel", "Date": "2016-01-10T09:53:19Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((butterfly == null) || (serum == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5955/buggy-version/src.main.java.forestry.lepidopterology.MatingRecipe.java", "BodyUseAPI": [], "Fixed commit": "4cfa8f733871c9faf625cacd770391f0d4652431", "Url": "https://api.github.com/repos/ForestryMC/ForestryMC", "Date": "2014-12-20T11:59:47Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(cur.getElement().getType().equals(Consts.SUBELEMENT_TYPE_LINE))) && hasEffect) && ((cur.getElement().getFrom()) > (firstSubEle.getElement().getFrom()))) { (coveredExons)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7608/buggy-version/filereaders.individual.ToolClasses.java", "BodyUseAPI": [], "Fixed commit": "3dd006d4293dfb9b2cbf49c4dfc04ee7a76f2c26", "Url": "https://api.github.com/repos/ljuan/gbhit", "Date": "2013-07-16T14:44:59Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4624/buggy-version/src.alexanderraymartin.searchalgorithm.Building.java", "BodyUseAPI": [], "Fixed commit": "e864582111d77161dcc5eda9ddb916f457cdd8fd", "Url": "https://api.github.com/repos/cpe305/fall2016-project-AlexanderRayMartin", "Date": "2016-11-30T08:19:25Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.monsterbutt.homeview.ui.PlexItemRow.RowItem>.get(update.key)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (rowItem != null) { java.lang.Object obj = adapter.get(rowItem.index); if (((obj != null) && (obj instanceof com.monsterbutt.homeview.presenters.PosterCard)) && (((com.monsterbutt.homeview.presenters.PosterCard) (obj)).getRatingsKey().equals(update.key))) { ((com.monsterbutt.homeview.presenters.PosterCard) (obj)).setUpdateStatus(update); rowItem.item.setStatus(update); indexList.add(rowItem.index); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/9045/buggy-version/app.src.main.java.com.monsterbutt.homeview.ui.PlexItemRow.java", "BodyUseAPI": ["android.support.v17.leanback.widget.ArrayObjectAdapter.get(int)", "com.monsterbutt.homeview.plex.media.PlexLibraryItem.setStatus(WatchedStatusHandler.UpdateStatus)", "java.util.List<java.lang.Integer>.add(int)"], "Fixed commit": "c9a7aa3583dabf250ce153de0903bc16128396c0", "Url": "https://api.github.com/repos/drhill/homeview", "Date": "2016-05-14T00:23:53Z"},
{"Line": "=>632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((studentOffSet) == 0) { org.ednovo.gooru.client.mvp.classpages.edit.EditClasspageView.panelSutdentsList.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5357/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.classpages.edit.EditClasspageView.java", "BodyUseAPI": [], "Fixed commit": "2af5f839571abf9f258269b0afe2fb6cacfcabde", "Url": "https://api.github.com/repos/VinRudramurthy/Gooru-Web", "Date": "2014-09-24T07:15:24Z"},
{"Line": "=>685", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Looper.myLooper()) == null) android.os.Looper.prepare();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2147/buggy-version/LimeStudio.app.src.main.java.net.toload.main.hd.limedb.LimeDB.java", "BodyUseAPI": [], "Fixed commit": "33810564f7f38c4767646e09f6578c2299eb331f", "Url": "https://api.github.com/repos/lime-ime/limeime", "Date": "2015-06-24T15:06:05Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sharedPreferenceManager.preferences.getString(\"isFirstTime\", null)) != null) { android.util.Log.d(\"FBLOG\", \"in onCreate SP - isFirstTime == false\"); dataBaseSource.populateDataNodeLists(); populateListView(); }else { android.util.Log.d(\"FBLOG\", \"in onCreate SP - isFirstTime == true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2854/buggy-version/Android.ValveLeakage.app.src.main.java.com.rubbersoft.android.valveleakage.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7ecd83cf58c4144574d14781bd3f660763389b5f", "Url": "https://api.github.com/repos/faiz636/Valve-Leakage", "Date": "2015-12-29T07:47:36Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkIsDataAlreadyInDBorNot(tableName, \"timestamp\", java.lang.String.valueOf(data.getTimestamp()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2854/buggy-version/Android.ValveLeakage.app.src.main.java.com.rubbersoft.android.valveleakage.utils.DataBaseSource.java", "BodyUseAPI": [], "Fixed commit": "7ecd83cf58c4144574d14781bd3f660763389b5f", "Url": "https://api.github.com/repos/faiz636/Valve-Leakage", "Date": "2015-12-29T07:47:36Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.jfree.data.xy.XYDataItem, jsprit.analysis.toolbox.Plotter.Activity>.get(org.jfree.data.xy.XYDataItem)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (activity.equals(jsprit.analysis.toolbox.Plotter.Activity.END)) return jsprit.analysis.toolbox.Plotter.END_COLOR;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/960/buggy-version/jsprit-analysis.src.main.java.jsprit.analysis.toolbox.Plotter.java", "BodyUseAPI": [], "Fixed commit": "34abc1b73710e8a6681850513c83e46932d89f3b", "Url": "https://api.github.com/repos/jsprit/jsprit", "Date": "2014-07-03T08:02:35Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck.getBlockEndToken(com.puppycrawl.tools.checkstyle.api.DetailAST,com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (blockEndToken != null) { final java.util.Set<com.puppycrawl.tools.checkstyle.api.DetailAST> variableUsagesInsideBlock = com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck.getAllTokensWhichAreEqualToCurrent(definitionToken, ident, blockEndToken.getLineNo()); for (com.puppycrawl.tools.checkstyle.api.DetailAST variableUsage : variableUsagesInsideBlock) { final com.puppycrawl.tools.checkstyle.api.DetailAST prevSibling = variableUsage.getPreviousSibling(); if ((prevSibling != null) && ((prevSibling.getType()) == (com.puppycrawl.tools.checkstyle.api.TokenTypes.LITERAL_THIS))) { userDefinedArrangementOfThis = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3361/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck.getAllTokensWhichAreEqualToCurrent(com.puppycrawl.tools.checkstyle.api.DetailAST,com.puppycrawl.tools.checkstyle.api.DetailAST,blockEndToken.getLineNo())", "com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()"], "Fixed commit": "98bedc35f113c4d00401e664e5fff4b25ea2b8a9", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2016-07-01T20:44:03Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mAuth.getCurrentUser()) != null) { android.widget.Toast.makeText(this, (\"Signed in as \" + (mAuth.getCurrentUser().getEmail())), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8694/buggy-version/app.src.main.java.com.jumproper.videofeedback.SignIn.java", "BodyUseAPI": ["android.widget.Toast.makeText(com.jumproper.videofeedback.SignIn,(\"Signed in as \" + (mAuth.getCurrentUser().getEmail())),Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(this, (\"Signed in as \" + (mAuth.getCurrentUser().getEmail())), Toast.LENGTH_SHORT).show()", "com.google.firebase.auth.FirebaseAuth.getCurrentUser()", "mAuth.getCurrentUser().getEmail()"], "Fixed commit": "84740ecec3a6330349a32115bcc672e07c16b299", "Url": "https://api.github.com/repos/jumproper/VideoFeedbackAndroid", "Date": "2016-10-20T19:48:00Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((responseData.getStatusCode()) == 403) { }else { android.widget.Toast.makeText(orderActivity, getString(R.string.internal_error), Toast.LENGTH_LONG).show(); android.content.Intent intent = new android.content.Intent(orderActivity, com.archide.hsb.view.activities.HomeActivity.class); intent.setFlags(((android.content.Intent.FLAG_ACTIVITY_NEW_TASK) | (android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK))); startActivity(intent); orderActivity.finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8608/buggy-version/hsb.app.src.main.java.com.archide.hsb.view.fragments.OrderPlaceFragment.java", "BodyUseAPI": [], "Fixed commit": "91fc6666063a1b8ae3b4b5ec582afce8d085a574", "Url": "https://api.github.com/repos/snithishkumar/hsb-android", "Date": "2017-02-18T04:28:22Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listView) == null) { givenTrips = new java.util.ArrayList<com.fmt.cheaptrip.entities.Trip>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7889/buggy-version/app.src.main.java.com.fmt.cheaptrip.fragments.trips.GivenTripsFragment.java", "BodyUseAPI": [], "Fixed commit": "597778e4e30a9ebf50bb4641c42c4d8be76c564b", "Url": "https://api.github.com/repos/TCM5/CheapTrip", "Date": "2016-05-29T14:16:13Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openrdf.query.BindingSet.getValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (valueOfY.toString().contains(\"lobid\")) { return new java.net.URL(valueOfY.stringValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7071/buggy-version/regal-archive.src.main.java.de.nrw.hbz.regal.fedora.RdfUtils.java", "BodyUseAPI": ["org.openrdf.model.Value.stringValue()"], "Fixed commit": "e2f0b3b892b50a2eb5537f084a16b1b2b25b02f8", "Url": "https://api.github.com/repos/edoweb/regal", "Date": "2014-03-11T07:50:35Z"},
{"Line": "=>829", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sort0 == (org.elasticsearch.painless.Definition.Sort.DEF)) || (sort1 == (org.elasticsearch.painless.Definition.Sort.DEF))) { return Definition.DEF_TYPE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6899/buggy-version/modules.lang-painless.src.main.java.org.elasticsearch.painless.AnalyzerCaster.java", "BodyUseAPI": [], "Fixed commit": "cd4f4594d61912682fa9c1626b90fecf55d3d713", "Url": "https://api.github.com/repos/javanna/elasticsearch", "Date": "2016-06-14T23:19:50Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((modelClass) == (de.btu.openinfra.backend.db.jpa.model.AttributeTypeGroupToTopicCharacteristic.class)) && ((schema) == (OpenInfraSchemas.SYSTEM))) { tmv = ((TypeModelValue) (em.createNativeQuery((\"select id, description, topic \" + \"from topic_characteristic where id = ?\"), de.btu.openinfra.backend.db.jpa.model.TopicCharacteristic.class).setParameter(1, valueId).getSingleResult())); }else { tmv = em.find(valueClass, valueId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/338/buggy-version/openinfra_core.src.main.java.de.btu.openinfra.backend.db.daos.OpenInfraValueDao.java", "BodyUseAPI": [], "Fixed commit": "802e71983ab5325098b9b0adf7b3d470ee71ee54", "Url": "https://api.github.com/repos/PhilippE11/core", "Date": "2015-07-20T09:30:32Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmojiLayoutShow) { if ((mOnSoftInputChangeListener) != null) { mOnSoftInputChangeListener.onEmojiLayoutChange(false, mRawLayoutHeight, 0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/613/buggy-version/rsen.src.main.java.com.rsen.viewgroup.SoftInputLayout.java", "BodyUseAPI": [], "Fixed commit": "aef407ed10f4ebd3d6e6fd4ccc3b708f34509293", "Url": "https://api.github.com/repos/angcyo/RJcenter", "Date": "2016-11-21T05:19:58Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tempCardId.add(((int) (cart.getId())))) { dtoList.add(cartDTO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6269/buggy-version/ShoppingCart.ShoppingCart.src.main.java.com.yash.shop.service.CartServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "58c22125cee21bb568f8d6d9e0d59d88da8eb55a", "Url": "https://api.github.com/repos/mital7559/ShoppingCart", "Date": "2017-12-18T14:32:43Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.SUPPORTED_64_BIT_ABIS.length) > 0) { mOomMinFreeHigh[4] = 225000; mOomMinFreeHigh[5] = 325000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4479/buggy-version/services.core.java.com.android.server.am.ProcessList.java", "BodyUseAPI": [], "Fixed commit": "316209e52ed5a1afc04420e63c7c24c4228e5b85", "Url": "https://api.github.com/repos/marlontoe/frameworks_base", "Date": "2015-02-14T15:34:21Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (genero == null) genero = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5736/buggy-version/MagisterWeb.src.cl.uchile.dcc.cc5401.filters.ValidationFilter.java", "BodyUseAPI": [], "Fixed commit": "901abc8a75958eba4ba7cb6f556baf71d8a6a6be", "Url": "https://api.github.com/repos/CC5401-MagisterTI-DCC/WEB", "Date": "2015-06-03T04:36:10Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tknzr.getCurrToken()) == 'b') if (isA()) { tknzr.getNextToken(); if ((tknzr.getCurrToken()) == 'a') { tknzr.getNextToken(); if (isB()) { tknzr.getNextToken(); if ((tknzr.getCurrToken()) == 'b') { tknzr.getNextToken(); if (tknzr.isEndOfString()) { returnVal = true; } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3879/buggy-version/inclass.prog1.Language1.java", "BodyUseAPI": ["Tokenizer.getNextToken()", "Tokenizer.isEndOfString()", "Tokenizer.getNextToken()", "Tokenizer.getCurrToken()", "Tokenizer.getCurrToken()", "Tokenizer.getNextToken()", "Tokenizer.getNextToken()"], "Fixed commit": "ae01ca67914338e9e250af97d17e0f9003c8c39f", "Url": "https://api.github.com/repos/MacDeth/pixel-sticks-group", "Date": "2016-09-22T00:32:38Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (i != ((lineList.size()) - 1)) { tknzr.resetTokenizer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3879/buggy-version/inclass.prog1.Language4.java", "BodyUseAPI": [], "Fixed commit": "ae01ca67914338e9e250af97d17e0f9003c8c39f", "Url": "https://api.github.com/repos/MacDeth/pixel-sticks-group", "Date": "2016-09-22T00:32:38Z"},
{"Line": "=>679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((curl == null) || (!(curl.equals(nurl)))) wv.loadUrl(nurl);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2891/buggy-version/src.com.wanikani.androidnotifier.WebReviewActivity.java", "BodyUseAPI": ["com.wanikani.androidnotifier.FocusWebView.loadUrl(java.lang.String)"], "Fixed commit": "d47cecb19b780ab1e8d411e2bd47bcf99ef9d404", "Url": "https://api.github.com/repos/WaniKani/Android-Notification", "Date": "2013-12-06T18:10:48Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lit == null) return lit;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4121/buggy-version/org.osate.aadl2.src.org.osate.aadl2.operations.UnitLiteralOperations.java", "BodyUseAPI": [], "Fixed commit": "801a918bcf312148312246b405e712020006c5e1", "Url": "https://api.github.com/repos/osate/osate2-core", "Date": "2014-12-15T02:41:03Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.lodder.subtools.multisubdownloader.gui.extra.table.ZebraJTable.getPreferredSize()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (preferredSize == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7588/buggy-version/MultiSubDownloader.src.main.java.org.lodder.subtools.multisubdownloader.gui.extra.table.ZebraJTable.java", "BodyUseAPI": [], "Fixed commit": "6a92a882f523267f831f46bdca75e322126975e5", "Url": "https://api.github.com/repos/phdelodder/SubTools", "Date": "2015-03-04T14:31:14Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pontos.getJSONObject(i).getBoolean(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (privado) { org.json.JSONObject usuario = pontos.getJSONObject(i).getJSONObject(\"usuario\"); nome = usuario.getString(\"nome\"); email = usuario.getString(\"email\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7127/buggy-version/android.src.br.com.onsoftwares.coletacolaborativa.MapaFragment.java", "BodyUseAPI": [], "Fixed commit": "a79202f0a86d714b08103be71a1e64c29cfe9b16", "Url": "https://api.github.com/repos/LucasSoaresAmaral/HackathonColeta", "Date": "2014-07-06T12:22:37Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((coeff.get(key)) == (java.lang.Double.POSITIVE_INFINITY)) { coeff.replace(key, 1.0); score.put(key, 0.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6984/buggy-version/src.calculator.SimCalculator.java", "BodyUseAPI": ["struct.ScoreTable.replace(java.lang.String,double)", "struct.ScoreTable.put(java.lang.String,double)"], "Fixed commit": "e7dc2e35d4b752cdfd9db58672a3eb4fcc45576e", "Url": "https://api.github.com/repos/CiccioTecchio/simrankJava", "Date": "2017-10-17T11:17:06Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nuxeo.ecm.core.api.DocumentModel.getAdapter(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (mavenDeliverable == null) { throw new java.lang.NullPointerException(\"Failed to get Maven deliverable adapter (invalid Maven ID?)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2356/buggy-version/easysoa-registry-v1.easysoa-registry-defaults.src.main.java.org.easysoa.registry.systems.MavenHierarchyClassifier.java", "BodyUseAPI": [], "Fixed commit": "50e1eee9d92d9bc1cbf2bc235e07b6e6b626bd59", "Url": "https://api.github.com/repos/easysoa/EasySOA-Incubation", "Date": "2012-11-22T10:35:06Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (biome != null) { allbiomes.pckgNames.add(jas.common.spawner.biome.group.BiomeHelper.getPackageName(biome)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/9230/buggy-version/src.jas.common.spawner.biome.group.BiomeGroupRegistry.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(jas.common.spawner.biome.group.BiomeHelper.getPackageName(biome))", "jas.common.spawner.biome.group.BiomeHelper.getPackageName(net.minecraft.world.biome.BiomeGenBase)"], "Fixed commit": "db1da5b0f7a4b5d86f5d2f3f915fd4ffcc1c8847", "Url": "https://api.github.com/repos/Crudedragos/JustAnotherSpawner", "Date": "2013-06-12T17:41:48Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(key))) { value += \"_\" + (entry.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1746/buggy-version/app.src.main.java.nerd.tuxmobil.fahrplan.congress.TrackBackgrounds.java", "BodyUseAPI": [], "Fixed commit": "9601e92fce4cf6774960710d96cf2ea310f18b3c", "Url": "https://api.github.com/repos/johnjohndoe/CampFahrplan", "Date": "2015-03-06T19:02:14Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MealStatus.COOKING.equals(com.rns.tiffeat.web.util.CommonUtil.getMealStatus(mealType, mealToCook))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3804/buggy-version/tiffinapp.src.main.java.com.rns.tiffeat.web.bo.impl.VendorBoImpl.java", "BodyUseAPI": [], "Fixed commit": "3a653e0c0cf29320a9a708067dc2a997ac0e8dba", "Url": "https://api.github.com/repos/ajaxkulkarni/dabbaweb", "Date": "2016-05-11T18:30:24Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.shinemo.mydb.common.Result<com.shinemo.mydb.meta.domain.SqlTaskDO>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sqlTaskDO.getTaskStatusEnum().equals(TaskStatusEnum.WAIT_EXE)) { if ((sqlTaskDO.getCreateUid().equals(com.shinemo.mydb.common.context.UserContextHolder.getUserId())) || (sqlTaskDO.getApproveUid().equals(com.shinemo.mydb.common.context.UserContextHolder.getUserId()))) { long dbId = sqlTaskDO.getDbId(); com.shinemo.mydb.common.Result<com.shinemo.mydb.meta.domain.DataBaseDO> dataBaseRet = dataBaseService.get(dbId); if (((dataBaseRet != null) && (dataBaseRet.isSuccess())) && ((dataBaseRet.getValue()) != null)) { result = webSqlService.execute(sqlTaskDO.getSql(), dataBaseRet.getValue(), com.shinemo.mydb.common.context.UserContextHolder.getUserId(), com.shinemo.mydb.common.context.UserContextHolder.getName()); }else { result = com.shinemo.mydb.meta.facade.domain.DynamicColumnResult.getErrorResult(dataBaseRet.getError().toString()); } }else { result = com.shinemo.mydb.meta.facade.domain.DynamicColumnResult.getErrorResult(Errors.ERROR_NOT_RIGHT.toString()); } }else { result = com.shinemo.mydb.meta.facade.domain.DynamicColumnResult.getErrorResult(Errors.ERROR_SQL_STATUS.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1689/buggy-version/mydb-web.src.main.java.com.shinemo.mydb.websql.controller.SqlTaskController.java", "BodyUseAPI": ["com.shinemo.mydb.meta.domain.SqlTaskDO.getSql()", "com.shinemo.mydb.meta.domain.SqlTaskDO.getCreateUid()", "sqlTaskDO.getCreateUid().equals(com.shinemo.mydb.common.context.UserContextHolder.getUserId())", "sqlTaskDO.getApproveUid().equals(com.shinemo.mydb.common.context.UserContextHolder.getUserId())", "com.shinemo.mydb.meta.facade.service.WebSqlService.execute(sqlTaskDO.getSql(),dataBaseRet.getValue(),com.shinemo.mydb.common.context.UserContextHolder.getUserId(),com.shinemo.mydb.common.context.UserContextHolder.getName())", "com.shinemo.mydb.meta.domain.SqlTaskDO.getDbId()", "com.shinemo.mydb.meta.domain.SqlTaskDO.getApproveUid()"], "Fixed commit": "a83e33981f7adcea716631e0974bc3e9eec8eac6", "Url": "https://api.github.com/repos/zhileihuang/mydb", "Date": "2015-07-12T03:51:23Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.Hudson.getInstance().getDescriptorByType(CoverityPublisher.DescriptorImpl.class).getInstance(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (instance.isUseSSL()) { header = \"https\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7426/buggy-version/src.main.java.jenkins.plugins.coverity.CoverityBuildAction.java", "BodyUseAPI": [], "Fixed commit": "789dbacc37f52093dd393b00821d90affa8d3381", "Url": "https://api.github.com/repos/jenkinsci/coverity-plugin", "Date": "2014-12-11T19:11:28Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cursorPlacement) > 0) { text = (text.substring(0, ((cursorPlacement) - 1))) + (text.substring(cursorPlacement, text.length())); (cursorPlacement)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/9156/buggy-version/src.uk.co.newagedev.hieranarchy.ui.TextBox.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "78b853b6f33c0838f6632046225ad57b340dbc83", "Url": "https://api.github.com/repos/JoshuaBradbury/Hieranarchy", "Date": "2015-12-20T19:47:16Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.openwide.core.wicket.more.markup.html.form.AbstractAjaxInputPrerequisiteBehavior<T>.getAjaxTarget(org.apache.wicket.Component)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fr.openwide.core.wicket.more.util.visit.VisitFilters.renderedComponents().visitObject(reloadedComponent)) { target.add(reloadedComponent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8489/buggy-version/owsi-core.owsi-core-components.owsi-core-component-wicket-more.src.main.java.fr.openwide.core.wicket.more.markup.html.form.AbstractAjaxInputPrerequisiteBehavior.java", "BodyUseAPI": ["org.apache.wicket.ajax.AjaxRequestTarget.add(org.apache.wicket.Component)"], "Fixed commit": "bb71ac70a666b06cd6ec90dee2663c786f5b57f3", "Url": "https://api.github.com/repos/openwide-java/owsi-core-parent", "Date": "2017-02-24T18:24:41Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f instanceof eg.edu.guc.rolltheball.logic.grammer.ForAll) { ret = new eg.edu.guc.rolltheball.logic.grammer.ForAll(((eg.edu.guc.rolltheball.logic.grammer.ForAll) (f)).var.clone(), eg.edu.guc.rolltheball.logic.grammer.Cloner.clone(((eg.edu.guc.rolltheball.logic.grammer.ForAll) (f)).formula)); }else if (f instanceof eg.edu.guc.rolltheball.logic.grammer.ThereExist) { ret = new eg.edu.guc.rolltheball.logic.grammer.ThereExist(((eg.edu.guc.rolltheball.logic.grammer.ThereExist) (f)).var.clone(), eg.edu.guc.rolltheball.logic.grammer.Cloner.clone(((eg.edu.guc.rolltheball.logic.grammer.ThereExist) (f)).formula)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3217/buggy-version/src.eg.edu.guc.rolltheball.logic.grammer.Cloner.java", "BodyUseAPI": [], "Fixed commit": "f99e37a9f4d90bca97299988ad8a57a7542d6b17", "Url": "https://api.github.com/repos/medo/RollTheBall", "Date": "2015-12-01T21:02:03Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMap) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4830/buggy-version/app.src.main.java.com.mmm.parq.fragments.DriverHomeFragment.java", "BodyUseAPI": [], "Fixed commit": "c91fbcb1c64eb7a371fe054e5a8125b7fa59acec", "Url": "https://api.github.com/repos/parq-app/parq-android", "Date": "2016-03-26T17:08:23Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == 0) { ((android.widget.LinearLayout) (parent.getParent())).setBackground(getDrawable(R.drawable.elementbackground)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/9112/buggy-version/app.src.main.java.com.self_employed.stase.universityhelper.PaperGpaCalc.java", "BodyUseAPI": [], "Fixed commit": "11d6175a9f8874a02c001833d0b0bbb33809a09a", "Url": "https://api.github.com/repos/Stanislav-Pankrashin/UniversityHelper", "Date": "2017-09-10T23:57:22Z"},
{"Line": "=>605", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["module1.Client.copyState(module1.PSNode[][])", "java.util.Arrays.copyOf(int[],int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newState[pos[0]][pos[1]].isFinal) { max = 100; move = d.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5179/buggy-version/src.module1.Client.java", "BodyUseAPI": [], "Fixed commit": "1ae0a667bb3f843669c652f3432d114b737ada0d", "Url": "https://api.github.com/repos/Kevin-Tang/AI-Project", "Date": "2015-12-05T11:14:03Z"},
{"Line": "=>609", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.copyOf(int[],int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (state[pos[0]][pos[1]].visited) { temp = minimaxValue(newState, pos, true, 0); }else { temp = minimaxValue(newState, pos, false, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5179/buggy-version/src.module1.Client.java", "BodyUseAPI": ["module1.Client.minimaxValue(module1.PSNode[][],int[],boolean,int)", "module1.Client.minimaxValue(module1.PSNode[][],int[],boolean,int)"], "Fixed commit": "1ae0a667bb3f843669c652f3432d114b737ada0d", "Url": "https://api.github.com/repos/Kevin-Tang/AI-Project", "Date": "2015-12-05T11:14:03Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.content.ContextCompat.checkSelfPermission(getActivity(), Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { PermissionUtils.PermissionDeniedDialog.newInstance(true).show(getActivity().getSupportFragmentManager(), \"dialog\"); }else mGoogleApiClient.connect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3160/buggy-version/app.src.main.java.com.capstone.while1.beaconandroidstudio.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "8c151b05399cef0096dbb640bc7ff38f0a895577", "Url": "https://api.github.com/repos/Beacon-Capstone/BeaconAndroidStudio", "Date": "2017-04-20T08:26:15Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.game.Game.getPermanent(source.getSourceId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sourcePermanent == null) { sourcePermanent = game.getPermanentEntering(source.getSourceId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8747/buggy-version/Mage.src.mage.abilities.effects.common.ChooseModeEffect.java", "BodyUseAPI": [], "Fixed commit": "1758b62f5844a11dd9bc43ef59d861b0e4a4c8be", "Url": "https://api.github.com/repos/PwnedGalaxy/mage", "Date": "2015-10-21T22:07:30Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mRunning) { jobs.add(job); this.notify(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8050/buggy-version/de.neo.remote.src.de.neo.remote.mediaserver.ThumbnailHandler.java", "BodyUseAPI": [], "Fixed commit": "39e81a78bbc621a36671648aa53319212cd04ade", "Url": "https://api.github.com/repos/dabastynator/RemoteControlSystem", "Date": "2014-09-13T14:20:58Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((DeviceManageActivity.instance) != null) { DeviceManageActivity.instance.adapter.syncDevices(); DeviceManageActivity.instance.adapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5917/buggy-version/iair.src.com.txmcu.iair.activity.DeviceModifyActivity.java", "BodyUseAPI": [], "Fixed commit": "9cd87171f70d39edf78c2e6b2432bb71c4494af4", "Url": "https://api.github.com/repos/arventwei/iAirAndroid", "Date": "2014-03-28T16:22:50Z"},
{"Line": "=>1086", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getArguments()) instanceof org.codehaus.groovy.ast.expr.TupleExpression) { org.codehaus.groovy.ast.expr.TupleExpression tuple = ((org.codehaus.groovy.ast.expr.TupleExpression) (node.getArguments())); if (org.eclipse.jdt.groovy.search.TypeInferencingVisitorWithRequestor.isNotEmpty(tuple.getExpressions())) { if ((((tuple.getExpressions().size()) == 1) && ((tuple.getExpressions().get(0)) instanceof org.codehaus.groovy.ast.expr.MapExpression)) || ((tuple.getExpression(((tuple.getExpressions().size()) - 1))) instanceof org.codehaus.groovy.ast.expr.NamedArgumentListExpression)) { enclosingConstructorCall = node; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4641/buggy-version/base.org.eclipse.jdt.groovy.core.src.org.eclipse.jdt.groovy.search.TypeInferencingVisitorWithRequestor.java", "BodyUseAPI": ["org.codehaus.groovy.ast.expr.ConstructorCallExpression.getArguments()"], "Fixed commit": "9e7e49c65749dd467cb2d743b11c97426c485ec1", "Url": "https://api.github.com/repos/groovy/groovy-eclipse", "Date": "2017-05-07T15:38:23Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fa.getGame().getGamePlayer(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (player.isGuest()) { tvPlayerName.setVisibility(View.VISIBLE); etPlayerName.setVisibility(View.VISIBLE); etPlayerName.setText(player.getDisplayName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6415/buggy-version/app.src.main.java.de.renekolb.loopinglouieextreme.ui.PlayerSettingsFragment.java", "BodyUseAPI": ["de.renekolb.loopinglouieextreme.GamePlayer.getDisplayName()", "android.widget.EditText.setText(player.getDisplayName())"], "Fixed commit": "37f897e09c8c655d88bd1d72c57c0831c4b7d822", "Url": "https://api.github.com/repos/ReneKolb/LoopingLouieExtremeApp", "Date": "2016-03-02T22:43:03Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pModel.isState(de.engineapp.controls.SHOW_ARROWS_ALWAYS)) { pModel.setState(de.engineapp.controls.SHOW_ARROWS_ALWAYS, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3799/buggy-version/PhysicsApplication.src.de.engineapp.controls.MainToolBar.java", "BodyUseAPI": ["de.engineapp.controls.PresentationModel.setState(de.engineapp.controls.SHOW_ARROWS_ALWAYS,boolean)"], "Fixed commit": "d89a90b37ad5ec10f4ba899cbd9093cbe152a735", "Url": "https://api.github.com/repos/FrecherxDachs/PhysicsEngine", "Date": "2012-11-12T20:12:54Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.uberverse.arkcraft.common.container.inventory.InventoryAttachment.create(net.minecraft.item.ItemStack)", "net.minecraft.entity.player.EntityPlayer.getCurrentEquippedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((att != null) || (stack.getItem().equals(ARKCraftItems.spy_glass))) { showScopeOverlap = evt.buttonstate; selected = stack; if (showScopeOverlap) evt.setCanceled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2010/buggy-version/src.main.java.com.uberverse.arkcraft.client.event.ClientEventHandler.java", "BodyUseAPI": [], "Fixed commit": "f9a87e5bf0cbe5be1475f7ec1f63f23ea7f1af92", "Url": "https://api.github.com/repos/BubbleTrouble14/ARKCraft", "Date": "2016-08-25T15:06:39Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.restcomm.connect.telephony.api.util.B2BUAHelper.getOrganizationSidBySipURIHost(((javax.servlet.sip.SipURI) (request.getTo().getURI())))", "org.restcomm.connect.telephony.api.util.B2BUAHelper.getOrganizationSidBySipURIHost(((javax.servlet.sip.SipURI) (request.getTo().getURI())))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(toOrganizationSid.equals(fromOrganizationSid))) { org.restcomm.connect.telephony.api.util.B2BUAHelper.logger.warn(java.lang.String.format(\"B2B clients do not belong to same organization. from-client: %s belong to %s . where as to-client %s belong to %s\", client.getLogin(), fromOrganizationSid, user, toOrganizationSid)); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/9158/buggy-version/restcomm.restcomm.telephony.api.src.main.java.org.restcomm.connect.telephony.api.util.B2BUAHelper.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,client.getLogin(),org.restcomm.connect.commons.dao.Sid,java.lang.String,org.restcomm.connect.commons.dao.Sid)", "org.apache.log4j.Logger.warn(java.lang.String)"], "Fixed commit": "91127a224d0f0bc43b591f99a3a92019b15939e6", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2017-06-19T21:33:06Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a.getUserList().get(listUsers.getSelectedValue())) != (gruppe19.client.ktn.ServerAPI.Status.APPROVED)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1608/buggy-version/src.gruppe19.client.gui.CalendarImportDialog.java", "BodyUseAPI": [], "Fixed commit": "91eed6b11fa13d8aa308ec416fa695cd17a46125", "Url": "https://api.github.com/repos/LeoWestby/Kalendersystem", "Date": "2012-03-27T13:03:01Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.oscarehr.common.dao.DrugProductDao.find(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((drugProduct != null) && ((drugProduct.getDispensingEvent()) != null)) { throw new java.lang.RuntimeException(\"Cannot delete a dispensed drug\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1514/buggy-version/src.main.java.org.oscarehr.managers.DrugProductManager.java", "BodyUseAPI": [], "Fixed commit": "ac7e70304b0818badec4f5f922e4ce82a522a4d2", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2015-10-06T17:52:08Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerChoice == 3) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4120/buggy-version/src.main.Cluedo.java", "BodyUseAPI": [], "Fixed commit": "e1a6c9f96f9d4d5fbbbbd56643db05b631d70543", "Url": "https://api.github.com/repos/scwe/cluedo", "Date": "2013-08-11T18:34:39Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.Color) != color) { this.PreviousColor = this.Color; this.Color = color; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/648/buggy-version/app.src.main.java.com.somestupidappproject.betago.Point.java", "BodyUseAPI": [], "Fixed commit": "bd52792baf2583015e5b48ba1fd7a261b39ef017", "Url": "https://api.github.com/repos/sshwang/BetaGo", "Date": "2017-07-14T03:12:41Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPlayer) == null) currentPlayer = p;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3460/buggy-version/CityGenJava.src.gameObjects.world.GameWorld.java", "BodyUseAPI": [], "Fixed commit": "c0bfcae74876291c5a09e0ca7b8f6610e1e46a8b", "Url": "https://api.github.com/repos/TanaTanoi/keycard-adventure", "Date": "2015-09-30T21:54:02Z"},
{"Line": "=>2168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (statements.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6957/buggy-version/core.src.main.java.org.teavm.javascript.Renderer.java", "BodyUseAPI": [], "Fixed commit": "732957cd84908b034c36f0eddee159f3c1c97204", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2015-10-15T13:03:11Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((level) == 0) && ((path.length()) == 1)) { if (com.alibaba.fastjson.JSONPath.JSONPathParser.isDigitFirst(ch)) { int index = (ch) - '0'; return new com.alibaba.fastjson.JSONPath.ArrayAccessSegement(index); }else if ((((ch) >= 'a') && ((ch) <= 'z')) || (((ch) >= 'A') && ((ch) <= 'Z'))) { return new com.alibaba.fastjson.JSONPath.PropertySegement(java.lang.Character.toString(ch)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/47/buggy-version/src.main.java.com.alibaba.fastjson.JSONPath.java", "BodyUseAPI": [], "Fixed commit": "74e8fd2fa8a13cc3e35ca25b31ce3ba3de8dd695", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2015-08-26T05:17:01Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (unique.toString().contains(\"http://www.w3.org/2000/01/rdf-schema#Literal\")) { uniqueValue = \"http://www.w3.org/2000/01/rdf-schema#Literal\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6118/buggy-version/src.main.java.eu.delving.x3ml.engine.EntityResolver.java", "BodyUseAPI": [], "Fixed commit": "83c39a8db2743ca6da77a24b64234318cf563ce8", "Url": "https://api.github.com/repos/isl/x3ml", "Date": "2016-01-12T15:16:24Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.StringUtils.substringAfter(token, \"=\").trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (defaultValue.startsWith(\"'\")) { setDefaultValue(org.apache.commons.lang3.StringUtils.substringBetween(defaultValue, \"'\", \"'\")); }else if (defaultValue.startsWith(\"\\\"\")) { setDefaultValue(org.apache.commons.lang3.StringUtils.substringBetween(defaultValue, \"\\\"\", \"\\\"\")); }else { setDefaultValue(defaultValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1500/buggy-version/src.main.java.com.kentchiu.jpa.domain.Column.java", "BodyUseAPI": ["com.kentchiu.jpa.domain.Column.setDefaultValue(org.apache.commons.lang3.StringUtils.substringBetween(defaultValue, \"'\", \"'\"))", "org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)", "org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)", "com.kentchiu.jpa.domain.Column.setDefaultValue(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "com.kentchiu.jpa.domain.Column.setDefaultValue(org.apache.commons.lang3.StringUtils.substringBetween(defaultValue, \"\\\"\", \"\\\"\"))"], "Fixed commit": "350318f28a4225ffef87a2fc1e313402b7d389a8", "Url": "https://api.github.com/repos/kentchiu/table-to-jpa-entity", "Date": "2016-05-02T07:56:04Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.contains(comment, \";\")) { logger.warn(\"comment\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1500/buggy-version/src.main.java.com.kentchiu.jpa.domain.Column.java", "BodyUseAPI": [], "Fixed commit": "350318f28a4225ffef87a2fc1e313402b7d389a8", "Url": "https://api.github.com/repos/kentchiu/table-to-jpa-entity", "Date": "2016-05-02T07:56:04Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSwipeFreshLayout) != null) mSwipeFreshLayout.post(new java.lang.Runnable() { @java.lang.Override public void run() { mSwipeFreshLayout.setRefreshing(true); } });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1343/buggy-version/app.src.main.java.com.ozj.baby.mvp.views.home.activity.CommentActivity.java", "BodyUseAPI": [], "Fixed commit": "30498f645e47132fcc819eca8b8cfc6430e15083", "Url": "https://api.github.com/repos/rogerou/Baby", "Date": "2016-05-31T02:28:01Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jobName.contains(\"template\")) { newName = jobName.replace(\"template\", jobNameAppend); }else { newName = jobName + jobNameAppend; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1603/buggy-version/src.main.java.com.attask.jenkins.scaffolding.ScaffoldAction.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "dffc1742707e13e7b91b988dbb34034e577a5aec", "Url": "https://api.github.com/repos/cpf/Templating", "Date": "2013-05-21T15:27:09Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["drexel.edu.blackjack.db.game.FlatfileGameManager.getDefaultGameManager()", "java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (gm.remove(s.trim())) { java.lang.System.out.println(\"Game removed.\"); }else { java.lang.System.out.println(\"No such game exists.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/514/buggy-version/blackjack.src.drexel.edu.blackjack.db.game.GameHelper.java", "BodyUseAPI": [], "Fixed commit": "be85d99366100e4210b297d4cc226f931e300b39", "Url": "https://api.github.com/repos/rabidstoat/blackjack", "Date": "2013-05-27T17:13:39Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (version.contains(LaunchUtils.MACOS_GDB_MARKER)) { java.lang.String[] versions = version.split(LaunchUtils.MACOS_GDB_MARKER); if ((versions.length) == 2) { return new melnorme.lang.ide.debug.core.GdbLaunchDelegateExtension.MacOSGdbDebugServicesFactory_LangExtension(versions[0], versions[1]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5175/buggy-version/org.dsource.ddt.ide.debug.src-lang.melnorme.lang.ide.debug.core.GdbLaunchDelegateExtension.java", "BodyUseAPI": ["java.lang.String.split(LaunchUtils.MACOS_GDB_MARKER)"], "Fixed commit": "28ef4afa5fedcc9bc80aaa3ee3d091367e87591f", "Url": "https://api.github.com/repos/bruno-medeiros/DDT", "Date": "2014-04-10T05:15:02Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.item.ItemStack.getTagCompound()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tagCompound == null) { tagCompound = new net.minecraft.nbt.NBTTagCompound(); shapeCard.setTagCompound(tagCompound); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3389/buggy-version/src.main.java.mcjty.rftools.blocks.builder.BuilderTileEntity.java", "BodyUseAPI": [], "Fixed commit": "bc75d9cebd8b4be3be1c04ef50f2214608460cfe", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2016-03-16T07:38:36Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nu.xom.Element.getFirstChildElement(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (goals == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/782/buggy-version/src.coq.ProofError.java", "BodyUseAPI": [], "Fixed commit": "c608af44463507ae57e8c9783321d14f5548b3c7", "Url": "https://api.github.com/repos/aa755/nbcoq", "Date": "2013-07-19T23:46:48Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListeners) != null) mListeners.add(showcaseListener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5975/buggy-version/library.src.main.java.uk.co.deanwild.materialshowcaseview.MaterialShowcaseView.java", "BodyUseAPI": [], "Fixed commit": "5084745c8fca73e0eefa2627116cc2eec0ce7d69", "Url": "https://api.github.com/repos/iambalu/MaterialShowcaseView", "Date": "2016-03-14T15:00:20Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListeners) != null) { for (uk.co.deanwild.materialshowcaseview.IShowcaseListener listener : mListeners) { listener.onShowcaseDisplayed(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5975/buggy-version/library.src.main.java.uk.co.deanwild.materialshowcaseview.MaterialShowcaseView.java", "BodyUseAPI": [], "Fixed commit": "5084745c8fca73e0eefa2627116cc2eec0ce7d69", "Url": "https://api.github.com/repos/iambalu/MaterialShowcaseView", "Date": "2016-03-14T15:00:20Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["crawl.CrawlStatusFromOneBug.crawlOneBug(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (bugStatus != null) { buginfoService.updateStatus(java.lang.Integer.valueOf(id), bugId, bugStatus); }else { bugStatus = buginfoService.getBuginfoByBugId(bugId).getStatus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/727/buggy-version/src.resource.BugStatusResource.java", "BodyUseAPI": ["service.IBuginfoService.updateStatus(java.lang.Integer,java.lang.String,java.lang.String)"], "Fixed commit": "98d696872a98cedfa971954670fe0b1a3be621f6", "Url": "https://api.github.com/repos/yinshunming/BugTrackingSystem", "Date": "2014-04-14T07:56:13Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["crawl.CrawlStatusFromOneBug.crawlOneBug(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (bugStatus != null) { buginfoService.updateStatus(java.lang.Integer.valueOf(id), bugId, bugStatus); }else { bugStatus = buginfoService.getBuginfoByBugId(bugId).getStatus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/727/buggy-version/src.resource.BugStatusResource.java", "BodyUseAPI": ["service.IBuginfoService.updateStatus(java.lang.Integer,java.lang.String,java.lang.String)"], "Fixed commit": "98d696872a98cedfa971954670fe0b1a3be621f6", "Url": "https://api.github.com/repos/yinshunming/BugTrackingSystem", "Date": "2014-04-14T07:56:13Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().getBackStackEntryCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (entryCount == 1) { mActionBar.setTitle(R.string.app_name); mActionBar.setDisplayHomeAsUpEnabled(false); }else if (entryCount == 0) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8118/buggy-version/Filmgur.src.foo.filmgur.FilmgurActivity.java", "BodyUseAPI": [], "Fixed commit": "55bb5a8dcd3890adf70df72a198f4f0f569d2a09", "Url": "https://api.github.com/repos/jonni-larjomaa/filmgur", "Date": "2013-04-10T16:10:47Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.Entity.getEquipmentInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(stack.getTagCompound().hasKey(\"display\"))) { stack.getTagCompound().setTag(\"display\", new net.minecraft.nbt.NBTTagCompound()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5148/buggy-version/java.net.reederhome.colin.theandrewmod.BlockRainbowMachine.java", "BodyUseAPI": ["stack.getTagCompound().setTag(java.lang.String,net.minecraft.nbt.NBTTagCompound)", "net.minecraft.item.ItemStack.getTagCompound()"], "Fixed commit": "385d5cf962b6c34ee69833137b5c4b5129929468", "Url": "https://api.github.com/repos/vpzomtrrfrt/theandrewmod", "Date": "2014-07-13T23:40:21Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ltc) != (world.getTotalWorldTime())) { (nc)--; if ((nc) < 0) { nc = 15; } ltc = world.getTotalWorldTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5148/buggy-version/java.net.reederhome.colin.theandrewmod.BlockRainbowMachine.java", "BodyUseAPI": ["net.minecraft.world.World.getTotalWorldTime()"], "Fixed commit": "385d5cf962b6c34ee69833137b5c4b5129929468", "Url": "https://api.github.com/repos/vpzomtrrfrt/theandrewmod", "Date": "2014-07-13T23:40:21Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(saved)) { populateDeliveryInfo(); main.CourierSystem.SaveDelivery(delivery); saved = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6723/buggy-version/AcmeCourierSystem.src.view.DeliveryTicketEditor.java", "BodyUseAPI": [], "Fixed commit": "be7e6d1235c29c48c78de9687add213ce35ee6ca", "Url": "https://api.github.com/repos/zkastl/AcmeCourierService", "Date": "2017-06-29T00:04:08Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newState != (io.grpc.ConnectivityState.SHUTDOWN)) { checkState(((state) != null), \"ConnectivityStateManager is already disabled\"); }else if ((state) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4322/buggy-version/core.src.main.java.io.grpc.internal.ConnectivityStateManager.java", "BodyUseAPI": [], "Fixed commit": "d37a39a3f38425dcbbe9c8915f66332611928b21", "Url": "https://api.github.com/repos/dapengzhang0/grpc-java", "Date": "2017-07-27T21:28:16Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.fau.cs.mad.fablab.android.view.fragments.categorysearch.CategoryDialogFragmentViewModel.getRootCategories()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(roots.isEmpty())) { currentCategory = roots.get(0).getName(); statusBarTextView.setText(currentCategory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2380/buggy-version/app.src.main.java.de.fau.cs.mad.fablab.android.view.fragments.categorysearch.CategoryDialogFragment.java", "BodyUseAPI": ["java.util.List<de.fau.cs.mad.fablab.rest.core.Category>.get(int)", "roots.get(0).getName()"], "Fixed commit": "5df37c30a8c08e2f0fc3a346d319e83d485b24dd", "Url": "https://api.github.com/repos/FAU-Inf2/fablab-android", "Date": "2015-09-18T19:09:50Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((c == '(') && (!stringParsing)) && (!insideFunction)) { insideFunction = true; }else if (((c == ')') && (!stringParsing)) && insideFunction) { insideFunction = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1734/buggy-version/src.jask.Helpers.java", "BodyUseAPI": [], "Fixed commit": "36ebf764c1aa15110f22c92762e9b5baeda5fff5", "Url": "https://api.github.com/repos/jpaffrath/jask", "Date": "2016-10-21T07:41:09Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((iconElem) != null) && (!(this.icon.isEmpty()))) iconElem.removeStyleName(this.icon);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4595/buggy-version/src.main.java.gwt.material.design.client.ui.MaterialButton.java", "BodyUseAPI": ["gwt.material.design.client.custom.CustomIcon.removeStyleName(java.lang.String)"], "Fixed commit": "e94e9d3a539a8d195a883a852966707847acb9ce", "Url": "https://api.github.com/repos/guibertjulien/gwt-material", "Date": "2015-07-09T22:29:26Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(org.walkmod.javalang.compiler.symbols.AnonymousClassUtil.isAnonymousClass(n))) || (org.walkmod.javalang.compiler.symbols.AnonymousClassUtil.needsSymbolData(n))) { org.walkmod.javalang.compiler.symbols.SymbolType st = ((org.walkmod.javalang.compiler.symbols.SymbolType) (n.getType().getSymbolData())); resolveConstructor(n, n.getArgs(), st, arg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5397/buggy-version/src.main.java.org.walkmod.javalang.compiler.types.TypeVisitorAdapter.java", "BodyUseAPI": ["n.getType().getSymbolData()", "org.walkmod.javalang.ast.expr.ObjectCreationExpr.getType()", "org.walkmod.javalang.ast.expr.ObjectCreationExpr.getArgs()", "org.walkmod.javalang.compiler.types.TypeVisitorAdapter<A>.resolveConstructor(org.walkmod.javalang.ast.expr.ObjectCreationExpr,n.getArgs(),org.walkmod.javalang.compiler.symbols.SymbolType,A)"], "Fixed commit": "7bee561298c32bc45c9c51e3dc914e13e3b4fbe6", "Url": "https://api.github.com/repos/cal101/javalang-compiler", "Date": "2017-06-01T07:09:23Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.globalParameters) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3761/buggy-version/src.main.java.com.lolay.android.tracker.LolayOmnitureTracker.java", "BodyUseAPI": [], "Fixed commit": "121023e6c1b96a074424225d73fca77861ccfe0e", "Url": "https://api.github.com/repos/lolay/investigo-android", "Date": "2011-11-03T18:47:15Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (jmeterPlugins)) { for (com.lazerycode.jmeter.configuration.JMeterPlugins identifiedPlugin : jmeterPlugins) { if (identifiedPlugin.toString().equals((((artifact.getGroupId()) + \":\") + (artifact.getArtifactId())))) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5957/buggy-version/src.main.java.com.lazerycode.jmeter.JMeterAbstractMojo.java", "BodyUseAPI": [], "Fixed commit": "c954795d404e2e3144a091412fdaa37b7bc7927e", "Url": "https://api.github.com/repos/Ronnie76er/jmeter-maven-plugin", "Date": "2014-01-09T22:54:04Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input.isEmpty()) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7349/buggy-version/simmetrics-core.src.main.java.org.simmetrics.tokenizers.WhitespaceTokenizer.java", "BodyUseAPI": [], "Fixed commit": "878982d44ed0ccd1f0aa0db7c8b6e83f57cee825", "Url": "https://api.github.com/repos/mpkorstanje/simmetrics", "Date": "2015-02-11T17:29:28Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.araqne.logdb.query.expr.Expression.eval(org.araqne.logdb.Row)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (o instanceof java.util.List) return \"list\"; else if (o.getClass().isArray()) { java.lang.Class<?> c = o.getClass().getComponentType(); if (c == (byte.class)) { return \"byte[]\"; }else if (c == (int.class)) { return \"int[]\"; }else if (c == (long.class)) { return \"long[]\"; }else if (c == (short.class)) { return \"short[]\"; }else if (c == (boolean.class)) { return \"bool[]\"; }else if (c == (double.class)) { return \"double[]\"; }else if (c == (float.class)) { return \"float[]\"; }else { return \"object[]\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1358/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.expr.Typeof.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.isArray()", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getComponentType()", "java.lang.Object.getClass()"], "Fixed commit": "a4d4404f4546b8f9256c86ce9d6410924a6e9833", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2014-11-18T08:33:11Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.araqne.logdb.query.expr.Expression.eval(org.araqne.logdb.Row)", "org.araqne.logdb.query.expr.Expression.eval(org.araqne.logdb.Row)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((c.getClass().isArray()) && (k instanceof java.lang.Integer)) { int index = ((java.lang.Integer) (k)); java.lang.Class<?> cl = c.getClass().getComponentType(); if (cl == (byte.class)) { byte[] arr = ((byte[]) (c)); if ((index >= 0) && (index < (arr.length))) return arr[index]; }else if (cl == (int.class)) { int[] arr = ((int[]) (c)); if ((index >= 0) && (index < (arr.length))) return arr[index]; }else if (cl == (long.class)) { long[] arr = ((long[]) (c)); if ((index >= 0) && (index < (arr.length))) return arr[index]; }else if (cl == (short.class)) { short[] arr = ((short[]) (c)); if ((index >= 0) && (index < (arr.length))) return arr[index]; }else if (cl == (boolean.class)) { boolean[] arr = ((boolean[]) (c)); if ((index >= 0) && (index < (arr.length))) return arr[index]; }else if (cl == (double.class)) { double[] arr = ((double[]) (c)); if ((index >= 0) && (index < (arr.length))) return arr[index]; }else if (cl == (float.class)) { float[] arr = ((float[]) (c)); if ((index >= 0) && (index < (arr.length))) return arr[index]; }else { java.lang.Object[] arr = ((java.lang.Object[]) (c)); if ((index >= 0) && (index < (arr.length))) return arr[index]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1358/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.expr.ValueOf.java", "BodyUseAPI": ["java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getComponentType()"], "Fixed commit": "a4d4404f4546b8f9256c86ce9d6410924a6e9833", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2014-11-18T08:33:11Z"},
{"Line": "=>987", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value != null) originXYRegion = new java.awt.Rectangle(value); else originXYRegion = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/9004/buggy-version/icy.sequence.Sequence.java", "BodyUseAPI": [], "Fixed commit": "5ed1051512c883c3e352d10dcd644811b6e8af06", "Url": "https://api.github.com/repos/Icy-imaging/Icy-Kernel", "Date": "2017-08-10T15:01:16Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dp.hasDatePassed(endTime, endTime)) { endTime = dp.getNextDay(endTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8548/buggy-version/src.tucklife.parser.Parser.java", "BodyUseAPI": ["tucklife.parser.DateParser.getNextDay(java.util.Calendar)"], "Fixed commit": "424789a85236be3864a72b8194d1e5feb09b7ba6", "Url": "https://api.github.com/repos/cs2103jan2016-w09-2j/main", "Date": "2016-04-08T10:08:52Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vertex.getValue().getGraphs()) == null) { vertex.getValue().setGraphs(new java.util.HashSet<java.lang.Long>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8171/buggy-version/gradoop-flink.src.main.java.org.gradoop.model.impl.OverlapSplitBy.java", "BodyUseAPI": ["org.apache.flink.graph.Vertex<java.lang.Long, VD>.getValue()", "vertex.getValue().setGraphs(java.util.HashSet<java.lang.Long>)"], "Fixed commit": "2365766bdb8980de7dad6b8307f784ccfb776b8f", "Url": "https://api.github.com/repos/dbs-leipzig/gradoop", "Date": "2015-09-01T22:06:13Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.otavanopisto.kuntaapi.server.integrations.management.ManagementPageProvider.translatePage(fi.otavanopisto.kuntaapi.server.id.OrganizationId,fi.otavanopisto.kuntaapi.server.rest.model.Page)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (page != null) { result.add(page); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1901/buggy-version/src.main.java.fi.otavanopisto.kuntaapi.server.integrations.management.ManagementPageProvider.java", "BodyUseAPI": ["java.util.List<fi.otavanopisto.kuntaapi.server.rest.model.Page>.add(fi.otavanopisto.kuntaapi.server.rest.model.Page)"], "Fixed commit": "49009fb6c53798a44120d613b3fb6e504462a067", "Url": "https://api.github.com/repos/City-of-Mikkeli/kunta-api-server", "Date": "2016-11-23T14:53:06Z"},
{"Line": "=>1208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.druid.stat.JdbcSqlStat.getContextSqlFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (sqlFile != null) { com.alibaba.druid.stat.JdbcSqlStat.setContextSqlFile(sqlFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6803/buggy-version/src.main.java.com.alibaba.druid.pool.DruidAbstractDataSource.java", "BodyUseAPI": ["com.alibaba.druid.stat.JdbcSqlStat.setContextSqlFile(java.lang.String)"], "Fixed commit": "65b505acc70394e8227346fb824a4d7b9dec6f7f", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2013-04-13T15:37:22Z"},
{"Line": "=>1168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.druid.stat.JdbcSqlStat.getContextSqlFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sqlFile != null) { com.alibaba.druid.stat.JdbcSqlStat.setContextSqlFile(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6803/buggy-version/src.main.java.com.alibaba.druid.pool.DruidAbstractDataSource.java", "BodyUseAPI": [], "Fixed commit": "65b505acc70394e8227346fb824a4d7b9dec6f7f", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2013-04-13T15:37:22Z"},
{"Line": "=>1211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.druid.stat.JdbcSqlStat.getContextSqlName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (sqlName != null) { com.alibaba.druid.stat.JdbcSqlStat.setContextSqlName(sqlName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6803/buggy-version/src.main.java.com.alibaba.druid.pool.DruidAbstractDataSource.java", "BodyUseAPI": ["com.alibaba.druid.stat.JdbcSqlStat.setContextSqlName(java.lang.String)"], "Fixed commit": "65b505acc70394e8227346fb824a4d7b9dec6f7f", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2013-04-13T15:37:22Z"},
{"Line": "=>1171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.druid.stat.JdbcSqlStat.getContextSqlName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sqlName != null) { com.alibaba.druid.stat.JdbcSqlStat.setContextSqlName(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6803/buggy-version/src.main.java.com.alibaba.druid.pool.DruidAbstractDataSource.java", "BodyUseAPI": [], "Fixed commit": "65b505acc70394e8227346fb824a4d7b9dec6f7f", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2013-04-13T15:37:22Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((breakPointTable) != null) { java.lang.Integer row = this.addressBreakPoints.get(n); if (row != null) { if ((breakPointTable.getRowCount()) > row) { breakPointTable.removeRow(row); } this.addressBreakPoints.remove(n); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2449/buggy-version/src.Memory.java", "BodyUseAPI": [], "Fixed commit": "25414508f048d8a246f9f3a62ad67848b32842fd", "Url": "https://api.github.com/repos/Maknee/PennSim-Debugger", "Date": "2017-09-26T00:00:57Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target instanceof net.minecraft.tileentity.TileEntity) { net.minecraft.tileentity.TileEntity tile = ((net.minecraft.tileentity.TileEntity) (target)); energyTarget = EnergyNet.instance.getTileEntity(tile.getWorldObj(), tile.xCoord, tile.yCoord, tile.zCoord); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2569/buggy-version/src.main.java.openccsensors.common.util.Ic2Utils.java", "BodyUseAPI": [], "Fixed commit": "15d567de5c625d6f96fe881b8192e08da44520fd", "Url": "https://api.github.com/repos/lyqyd/OpenCCSensors", "Date": "2014-12-06T01:36:11Z"},
{"Line": "=>925", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getBoardID()) == 1) { android.util.Log.w(com.mantz_it.hackrf_android.Hackrf.logTag, \"setAntennaPower: Antenna Power is not supported for HackRF Jawbreaker. Ignore.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4778/buggy-version/src.com.mantz_it.hackrf_android.Hackrf.java", "BodyUseAPI": [], "Fixed commit": "4e11c8a5bf58282a3046a9986090e861ad8cc8f0", "Url": "https://api.github.com/repos/demantz/hackrf_android", "Date": "2014-11-28T04:42:53Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(result.contains(nowLine))) result.add(nowLine);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6866/buggy-version/AliveLibrary.src.main.java.org.ancode.alivelib.utils.AliveStatsUtils.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "8f423d6eee371bd42ab8c3869ec1976fe31249e2", "Url": "https://api.github.com/repos/AnromOS/AliveHelper", "Date": "2016-11-21T08:38:23Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.sandia.cognition.learning.algorithm.clustering.OptimizedKMeansClusterer<DataType>.getClusterCentroid(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (clusterI == null) { clusterDistances[i][i] = 0.0; for (int j = i + 1; j < (this.getNumClusters()); j++) { clusterDistances[i][j] = java.lang.Double.POSITIVE_INFINITY; } continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7045/buggy-version/Components.LearningCore.Source.gov.sandia.cognition.learning.algorithm.clustering.OptimizedKMeansClusterer.java", "BodyUseAPI": [], "Fixed commit": "e9ed21d97b7cf7c44f56cf113818f27ac3ec06e1", "Url": "https://api.github.com/repos/jbasilico/Foundry", "Date": "2015-08-13T06:58:31Z"},
{"Line": "=>1569", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mPersistenceManager.getStorageManager().getFile(trip.getDirectory(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(file.exists())) { if (co.smartreceipts.android.BuildConfig.DEBUG) { android.util.Log.e(co.smartreceipts.android.persistence.DatabaseHelper.TAG, (((\"Changing image name from: \" + (img.getName())) + \" to: \") + newName)); } img = mPersistenceManager.getStorageManager().rename(img, newName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3009/buggy-version/SmartReceiptsLibrary.src.co.smartreceipts.android.persistence.DatabaseHelper.java", "BodyUseAPI": [], "Fixed commit": "7472f1da4ef380f8295b5e51fca2059248504b81", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2014-06-05T01:26:54Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id instanceof java.lang.String) id = (\"'\" + id) + \"'\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1795/buggy-version/src.main.java.org.coral.core.service.BaseService.java", "BodyUseAPI": [], "Fixed commit": "274b2c862629254daf6020746b563ac8f90bad5a", "Url": "https://api.github.com/repos/marc126/coral-core", "Date": "2016-04-13T06:52:49Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (message instanceof java.lang.Throwable) { java.lang.Throwable t = ((java.lang.Throwable) (message)); java.io.StringWriter sw = new java.io.StringWriter(); java.io.PrintWriter pw = new java.io.PrintWriter(sw); t.printStackTrace(pw); toPrint = sw.toString(); }else { toPrint = message.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8203/buggy-version/src.main.java.gui.GUIMain.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "2c3dbcce7efb724c66a6dfdd86f4438bcbb713ef", "Url": "https://api.github.com/repos/Palehors68/Palehorsbot", "Date": "2015-07-15T00:40:28Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((task) == null) { task = new com.pachira.spider.core.Spider.Task(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6265/buggy-version/src.com.pachira.spider.core.Spider.java", "BodyUseAPI": [], "Fixed commit": "9762d0222375962f45fce8f61afd27926a71041a", "Url": "https://api.github.com/repos/luceneSDK/Tokenizer", "Date": "2014-12-16T10:13:45Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((posVariantInCDS % 3) == 0) aavarpos = posVariantInCDS / 3; else aavarpos = ((int) (java.lang.Math.floor((posVariantInCDS / 3)))) + 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7993/buggy-version/src.main.java.jannovar.annotation.DeletionAnnotation.java", "BodyUseAPI": ["java.lang.Math.floor(int)"], "Fixed commit": "bc61af1dd7c700e8fdf6b622b0fe5061b14298d1", "Url": "https://api.github.com/repos/charite/jannovar", "Date": "2014-03-30T19:52:38Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((posVariantInCDS % 3) == 0) aavarpos = posVariantInCDS / 3; else aavarpos = ((int) (java.lang.Math.floor((posVariantInCDS / 3)))) + 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7993/buggy-version/src.main.java.jannovar.annotation.DeletionAnnotation.java", "BodyUseAPI": ["java.lang.Math.floor(int)"], "Fixed commit": "bc61af1dd7c700e8fdf6b622b0fe5061b14298d1", "Url": "https://api.github.com/repos/charite/jannovar", "Date": "2014-03-30T19:52:38Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (result == null) { result = invoker.invoke(inv); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5589/buggy-version/dubbo-rpc.dubbo-rpc-api.src.main.java.com.alibaba.dubbo.rpc.filter.AccessLogFilter.java", "BodyUseAPI": [], "Fixed commit": "685ad2c26b0a3f85fa3fb5fa0b092c0702a3c0a7", "Url": "https://api.github.com/repos/itxman/dubbo", "Date": "2017-02-08T00:56:09Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (it.hasNext()) { it.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5222/buggy-version/src.main.java.xyz.hitpy.seproject.controller.UserController.java", "BodyUseAPI": ["java.util.Iterator<java.lang.String>.next()"], "Fixed commit": "84f234a1c3ae9f4629a2321e08a12afb62136603", "Url": "https://api.github.com/repos/Arcink/SE-project", "Date": "2017-11-12T13:02:36Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shutdownTime) == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5560/buggy-version/appenders.src.main.java.com.kdgregory.log4j.aws.internal.cloudwatch.CloudWatchLogWriter.java", "BodyUseAPI": [], "Fixed commit": "9afac2e622b02813ea2803cc7779ea7e24c9af82", "Url": "https://api.github.com/repos/kdgregory/log4j-aws-appenders", "Date": "2017-07-20T10:41:22Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.eyeseetea.malariacare.data.database.utils.PreferencesState.getCredentialsFromPreferences()) == null) { launchAutoconfigure(); }else { executeLogout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5877/buggy-version/app.src.cnm.java.org.eyeseetea.malariacare.strategies.SettingsActivityStrategy.java", "BodyUseAPI": [], "Fixed commit": "b71966b9a76197e48fd8b370663b6c12b8dd7b43", "Url": "https://api.github.com/repos/EyeSeeTea/pictureapp", "Date": "2017-10-27T07:11:33Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sourceHits) == null) return size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/9215/buggy-version/src.nl.inl.blacklab.perdocument.DocResults.java", "BodyUseAPI": [], "Fixed commit": "8baeeb6f3b67a9317f07a9a4a0b56d57d9c0fb6d", "Url": "https://api.github.com/repos/INL/BlackLab", "Date": "2013-08-12T12:53:02Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sourceHits) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/9215/buggy-version/src.nl.inl.blacklab.perdocument.DocResults.java", "BodyUseAPI": [], "Fixed commit": "8baeeb6f3b67a9317f07a9a4a0b56d57d9c0fb6d", "Url": "https://api.github.com/repos/INL/BlackLab", "Date": "2013-08-12T12:53:02Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sourceHits) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/9215/buggy-version/src.nl.inl.blacklab.perdocument.DocResults.java", "BodyUseAPI": [], "Fixed commit": "8baeeb6f3b67a9317f07a9a4a0b56d57d9c0fb6d", "Url": "https://api.github.com/repos/INL/BlackLab", "Date": "2013-08-12T12:53:02Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.aFlag) < (o.aFlag)) { return -1; }else if ((this.aFlag) > (o.aFlag)) { return +1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6862/buggy-version/hadoop-mapreduce-project.hadoop-mapreduce-examples.src.main.java.org.apache.hadoop.examples.ParSpMM.SpMMMR.SpMMTypes.java", "BodyUseAPI": [], "Fixed commit": "9a51c88ec6f9b3f102d030aa2c5a68de6031a7a9", "Url": "https://api.github.com/repos/sandy197/Phadoop-2.2.0-src", "Date": "2014-03-31T00:23:29Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((parts.length) > 1) { name = parts[1]; }else { name = URL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1525/buggy-version/app.src.main.java.io.github.cms_dev.cmsscoreboard.Scoreboard.java", "BodyUseAPI": [], "Fixed commit": "47a2a7b3b6fb482988a1499ecc2bd0ff555f62f7", "Url": "https://api.github.com/repos/veluca93/CMSScoreboard", "Date": "2015-08-17T23:41:19Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clickTypeIn == (net.minecraft.inventory.ClickType.PICKUP_ALL)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8446/buggy-version/src.main.java.gunn.modcurrency.common.containers.ContainerBuySell.java", "BodyUseAPI": [], "Fixed commit": "78cea212a99eb1f5bce7a482122477253f8d5e69", "Url": "https://api.github.com/repos/BeardlessBrady/Currency-Mod", "Date": "2017-01-20T17:59:16Z"},
{"Line": "=>915", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ClientUDP.ClientAccountWindow.open) { Menu.MainMenu.newLogin.setVisible(true); Menu.MainMenu.newLogin.toFront(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/716/buggy-version/Source.Menu.MainMenu.java", "BodyUseAPI": [], "Fixed commit": "a329390f896b2afb76358dc1afa2b143d19560cd", "Url": "https://api.github.com/repos/Williamxu98/WorldQuestOnline", "Date": "2017-01-06T18:15:37Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.brweber2.kb.impl.GoalList.getNextClause(com.brweber2.rule.Goal)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (clauses == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6281/buggy-version/src.main.java.com.brweber2.kb.impl.AKnowledgeBase.java", "BodyUseAPI": [], "Fixed commit": "f1a2e59289a986eb7fc7f1a293abb00419e3f562", "Url": "https://api.github.com/repos/brweber2/logic-redux", "Date": "2012-03-28T02:25:32Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.brweber2.kb.KnowledgeBase.getClauses(com.brweber2.rule.Goal)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (clauses != null) { if (!(clausesMap.containsKey(next))) { clausesMap.put(next, new com.brweber2.kb.impl.Clauses(clauses)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6281/buggy-version/src.main.java.com.brweber2.kb.impl.GoalList.java", "BodyUseAPI": ["java.util.Map<com.brweber2.rule.Goal, com.brweber2.kb.impl.Clauses>.put(com.brweber2.rule.Goal,com.brweber2.kb.impl.Clauses)"], "Fixed commit": "f1a2e59289a986eb7fc7f1a293abb00419e3f562", "Url": "https://api.github.com/repos/brweber2/logic-redux", "Date": "2012-03-28T02:25:32Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == ((photos.size()) - 1)) { albumCount.setPadding(0, 0, 0, 200); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3525/buggy-version/app.src.main.java.com.voidgreen.friendsrelations.GridAdapter.java", "BodyUseAPI": [], "Fixed commit": "690432b8c2ce7254265579b3285534f167b6a553", "Url": "https://api.github.com/repos/yaroslav-shlapak/FaceRelations", "Date": "2016-05-26T22:20:36Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((table != null) && (!(table.isEmpty()))) { java.lang.String[] row = table.split(\"],\\\\[\"); for (int i = 0; i < (row.length); i++) { java.lang.String[] col = row[i].split(\",(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)\", (-1)); for (int j = 0; j < (col.length); j++) { if ((col[j]) != null) { col[j] = col[j].replaceAll(\"^\\\"|\\\"$\", \"\"); } res.append(((col[j]) + \" \\t\")); } res.append(\" \\n\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4736/buggy-version/kylin.src.main.java.org.apache.zeppelin.kylin.KylinInterpreter.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "d20872c5014e66ffcaf9d3bb51193ca3023bce92", "Url": "https://api.github.com/repos/jinxliu/zeppelin", "Date": "2017-10-27T07:03:26Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mobicents.servlet.sip.restcomm.xml.TagIterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(tag instanceof org.mobicents.servlet.sip.restcomm.xml.rcml.Pause)) { if (((Call.Status.RINGING) != (call.getStatus())) && ((Call.Status.IN_PROGRESS) != (call.getStatus()))) { setState(org.mobicents.servlet.sip.restcomm.interpreter.RcmlInterpreter.FINISHED); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4670/buggy-version/restcomm.rcml.src.main.java.org.mobicents.servlet.sip.restcomm.interpreter.RcmlInterpreter.java", "BodyUseAPI": [], "Fixed commit": "da25da65c29bdeda8e464d540eed14662e6de2a9", "Url": "https://api.github.com/repos/Mobicents/RestComm", "Date": "2012-09-28T09:55:30Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c == '_') return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2494/buggy-version/app.src.main.java.me.blog.hgl1002.lboard.expression.StringRecursionTreeBuilder.java", "BodyUseAPI": [], "Fixed commit": "143219a68d7a65308c810cb04db51646244836a0", "Url": "https://api.github.com/repos/Lee0701/LBoard", "Date": "2017-08-27T02:59:23Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wilson.world.manager.TaskTagManager.getInstance().getTaskTagByTaskId(task.id)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (oldTag != null) { org.wilson.world.manager.TaskTagManager.getInstance().deleteTaskTag(oldTag.id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3752/buggy-version/src.main.java.org.wilson.world.manager.TaskManager.java", "BodyUseAPI": ["org.wilson.world.manager.TaskTagManager.getInstance().deleteTaskTag(oldTag.id)"], "Fixed commit": "642a9c99f2b1c72461a3b20611d0a4d8621dd758", "Url": "https://api.github.com/repos/liumiaowilson/world", "Date": "2016-08-01T14:37:12Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.attr(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (title.toLowerCase().contains(\"n\u1eb5ng\")) { com.chickensoups.crawler.GoldCrawler.dataUtil.insertGold(new com.chickensoups.crawler.Gold(\"gold_sjcdn\", eachData.attr(\"buy\"), eachData.attr(\"sell\"), com.chickensoups.crawler.GoldCrawler.date)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/858/buggy-version/src.main.java.com.chickensoups.crawler.GoldCrawler.java", "BodyUseAPI": [], "Fixed commit": "7ef3c1cb2538844d1d963787fe540ba3d939ab27", "Url": "https://api.github.com/repos/chickensoups/gold-crawler", "Date": "2016-03-27T15:12:12Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (roles.isEmpty()) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1419/buggy-version/player.Heuristic.java", "BodyUseAPI": [], "Fixed commit": "e9ff1df743b87bf1a8ea765083ea719aa2132a1b", "Url": "https://api.github.com/repos/brianhzhang/ggp-base", "Date": "2016-04-18T04:49:21Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game.distance(center.x, center.y, target.getX(), target.getY())) > (scan_range)) target = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/159/buggy-version/StarshipArena.src.Battleship.java", "BodyUseAPI": [], "Fixed commit": "541416c039423b0596e8965c28eea43b5c4615de", "Url": "https://api.github.com/repos/ShatteredIce/StarshipArena", "Date": "2017-08-04T17:42:25Z"},
{"Line": "=>776", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reverse) { return ((blockNumber - limit) + 1) < 0 ? ((int) (blockNumber + 1)) : limit; }else { if (((blockNumber + limit) - 1) > bestNumber) { return ((int) ((bestNumber - blockNumber) + 1)); }else { return limit; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/34/buggy-version/ethereumj-core.src.main.java.org.ethereum.core.BlockchainImpl.java", "BodyUseAPI": [], "Fixed commit": "e5e609b80e312a4c6308fbaf3f34f2df8010581c", "Url": "https://api.github.com/repos/ethereum/ethereumj", "Date": "2015-12-09T18:32:03Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getResources().getConfiguration().locale.getLanguage()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((lang.equals(\"ru\")) || (lang.equals(\"uk\"))) { gameTitle.setBackgroundResource(R.drawable.ru_title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7649/buggy-version/app.src.main.java.com.alexkaz.barleybreak.LaunchActivity.java", "BodyUseAPI": [], "Fixed commit": "a255cc954a851723ccc9e5c04c660809f7bd5822", "Url": "https://api.github.com/repos/AlexKazmirchuk/BarleyBreak", "Date": "2016-10-21T16:27:16Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.raizlabs.android.dbflow.sql.language.SQLite.select().from(at.sw2017.nodinero.model.Template.class).where(Template_Table.id.is(templateId)).querySingle()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((t2.categoryId) != null) { templateCategory.setSelection(categoryAdapter.getPos(t2.categoryId.id)); android.util.Log.e(TAG, (\"FOUND CATEGORY \" + (categoryAdapter.getPos(t2.categoryId.id)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8100/buggy-version/app.src.main.java.at.sw2017.nodinero.fragment.TemplateFormFragment.java", "BodyUseAPI": ["at.sw2017.nodinero.adapter.CategoryAdapter.getPos(t2.categoryId.id)", "at.sw2017.nodinero.adapter.CategoryAdapter.getPos(t2.categoryId.id)", "android.util.Log.e(java.lang.String,(\"FOUND CATEGORY \" + (categoryAdapter.getPos(t2.categoryId.id))))", "android.support.v7.widget.AppCompatSpinner.setSelection(categoryAdapter.getPos(t2.categoryId.id))"], "Fixed commit": "afc29e6e9689699bc74c4f6d47b7b51589da5b96", "Url": "https://api.github.com/repos/paierlep/GroupFive", "Date": "2017-06-06T08:44:48Z"},
{"Line": "=>969", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getCause().equals(TeleportCause.UNKNOWN)) && (pli.spectator_mode_1_8)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5307/buggy-version/API.src.main.java.com.comze_instancelabs.minigamesapi.ArenaListener.java", "BodyUseAPI": [], "Fixed commit": "4604ff68412cd90444ce71237d0e8c11f7790a1c", "Url": "https://api.github.com/repos/instance01/MinigamesAPI", "Date": "2014-12-28T15:04:07Z"},
{"Line": "=>1072", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pli.spectator_mode_1_8) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5307/buggy-version/API.src.main.java.com.comze_instancelabs.minigamesapi.Arena.java", "BodyUseAPI": [], "Fixed commit": "4604ff68412cd90444ce71237d0e8c11f7790a1c", "Url": "https://api.github.com/repos/instance01/MinigamesAPI", "Date": "2014-12-28T15:04:07Z"},
{"Line": "=>560", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.migi_1.Context.server.ServerWrapper.getServer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (server.isRunning()) { server.broadcast(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/468/buggy-version/ContextDesktop.src.main.java.com.github.migi_1.Context.model.MainEnvironment.java", "BodyUseAPI": ["com.jme3.network.Server.broadcast(com.github.migi_1.ContextMessages.ImmobilisedMessage)"], "Fixed commit": "32add803263f87b520bd3696ec49715ea4263fa2", "Url": "https://api.github.com/repos/LMiljak/ContextMigi-1", "Date": "2016-06-17T13:25:58Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPlayerIndex) >= (players.size())) currentPlayerIndex = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2759/buggy-version/src.main.java.thmuggleton.model.impl.MatchImpl.java", "BodyUseAPI": [], "Fixed commit": "a4f63a5411a9b9497fed6c0370dc867dbbee0c5f", "Url": "https://api.github.com/repos/thmuggleton/bowling-desktop", "Date": "2015-03-04T20:27:30Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((smilesBuffer.length()) == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2173/buggy-version/lucenechemistry.src.main.java.org.molecularlucene.tokenizer.SmilesTokenizer.java", "BodyUseAPI": [], "Fixed commit": "fdbf2f6c0c15ccf03a4253ff34a10f687f68c743", "Url": "https://api.github.com/repos/AlexanderSavochkin/MolecularLucene", "Date": "2013-07-02T06:24:12Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((writer) != null) writer.sync();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4427/buggy-version/araqne-logstorage.src.main.java.org.araqne.logstorage.engine.OnlineWriter.java", "BodyUseAPI": [], "Fixed commit": "df0ffe605e2effdfd17e94455d37a55da01bf297", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2014-09-08T13:07:44Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getCursorPosition()) > cursorMaxPosition) { moveCursor(cursorMaxPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5281/buggy-version/src.com.github.dreamrec.Model.java", "BodyUseAPI": ["com.github.dreamrec.Model.moveCursor(int)"], "Fixed commit": "251f2c81c38f355349490e63e2b236848c1d0094", "Url": "https://api.github.com/repos/Alvw/dreamrec", "Date": "2012-04-26T10:58:32Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCursorPosition()) < 0) { moveCursor(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5281/buggy-version/src.com.github.dreamrec.Model.java", "BodyUseAPI": [], "Fixed commit": "251f2c81c38f355349490e63e2b236848c1d0094", "Url": "https://api.github.com/repos/Alvw/dreamrec", "Date": "2012-04-26T10:58:32Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["elem.getXref().getId().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((elem.getDataSource().getFullName().equals(\"ChEBI\")) && (!(id.startsWith(\"ChEBI:\")))) id = \"CHEBI:\" + id;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5428/buggy-version/WP2RDF.src.main.java.org.wikipathways.wp2rdf.converter.DataNodeConverter.java", "BodyUseAPI": [], "Fixed commit": "b504d35748dc373886b44aad6b3c0310a38287da", "Url": "https://api.github.com/repos/wikipathways/GPML2RDF", "Date": "2015-10-06T10:23:54Z"},
{"Line": "=>662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOnDrawerItemClickListener) != null) mOnDrawerItemClickListener.onItemClick(parent, view, groupPosition, id, drawerItem);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7606/buggy-version/library.src.main.java.com.mikepenz.materialdrawer.Drawer.java", "BodyUseAPI": [], "Fixed commit": "938c9583c48463c7047b68fe018115c9f5950d95", "Url": "https://api.github.com/repos/dgrigutsch/MaterialDrawer", "Date": "2015-03-16T07:12:52Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((action.eContainer()) instanceof org.bonitasoft.studio.model.form.Widget) { final org.bonitasoft.studio.model.form.Widget widget = ((org.bonitasoft.studio.model.form.Widget) (action.eContainer())); addConditionExpression(builder, widget); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1620/buggy-version/bundles.plugins.org.bonitasoft.studio.exporter.src.org.bonitasoft.studio.exporter.form.FormsExporter.java", "BodyUseAPI": ["org.bonitasoft.studio.model.expression.Operation.eContainer()"], "Fixed commit": "3de2153b78f1bd937aea8a0bae51291f46535961", "Url": "https://api.github.com/repos/bonitasoft/bonita-studio", "Date": "2014-12-12T17:10:36Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskCount) > 0) { line_graph.getViewport().setXAxisBoundsManual(true); line_graph.getViewport().setMinX(1); line_graph.getViewport().setMaxX(taskCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6187/buggy-version/Application.ToDoApp.app.src.main.java.com.cse110.team1.todoapp.PerformanceFragment.java", "BodyUseAPI": [], "Fixed commit": "e6966164b03678a4188a862ea8596af7184118ff", "Url": "https://api.github.com/repos/ucsdCSE110wi16/CSE110M240T1", "Date": "2016-03-04T05:03:44Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count != 1) { highlightedProfiles = io.fabric8.commands.Strings.rpad(\" \", highlightedProfiles, 17); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/236/buggy-version/fabric.fabric-commands.src.main.java.io.fabric8.commands.ContainerListAction.java", "BodyUseAPI": [], "Fixed commit": "3497aa51c0aa82172a27eab9c270896e40fe9cf3", "Url": "https://api.github.com/repos/paoloantinori/fabric8", "Date": "2014-06-18T17:26:22Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.hasPermission(\"mcprison.mine.reset.broadcast\")) p.sendMessage(com.wolvencraft.prison.mines.util.Util.parseColors(message));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7400/buggy-version/src.com.wolvencraft.prison.mines.util.Message.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(com.wolvencraft.prison.mines.util.Util.parseColors(message))"], "Fixed commit": "424cc46b783d1d9459e03e1fe6a2b4b94235735f", "Url": "https://api.github.com/repos/bitWolfy/PrisonMine", "Date": "2012-11-27T00:56:52Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cl.firstRun()) cl.getLogDialog().show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1421/buggy-version/src.de.azapps.mirakel.main_activity.MainActivity.java", "BodyUseAPI": ["cl.getLogDialog().show()", "de.azapps.mirakel.helper.ChangeLog.getLogDialog()"], "Fixed commit": "dbc644700bdf3a9e5991715dc0536ce13cad7641", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-05-29T14:00:38Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLocationEnabled()) { if (((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)) == (android.content.pm.PackageManager.PERMISSION_GRANTED)) && ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION)) == (android.content.pm.PackageManager.PERMISSION_GRANTED))) { locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 5, locationListenerGPS); } }else showAlertToEnableGPS();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5602/buggy-version/app.src.main.java.kg.kloop.android.redbutton.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9e01b4a2a93c9f8c6f794a4f68ad818cd99bb221", "Url": "https://api.github.com/repos/AlexWalker28/REDbutton", "Date": "2017-04-18T12:49:19Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((gen.charAt((is - 1))) == 's') && ((gen.charAt((is - 2))) == 'l')) && ((gen.charAt((is - 3))) == 'e')) { b1 = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/506/buggy-version/src.org.avuna.httpd.com.base.CommandComp.java", "BodyUseAPI": [], "Fixed commit": "fe26c8e19ea673f03b607f1e083aaaab9bc39d88", "Url": "https://api.github.com/repos/paullaz/Avuna-HTTPD", "Date": "2015-07-08T03:15:57Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anyAreSet(channelState, ((org.jboss.remoting3.remote.RemoteConnectionHandler.RECEIVED_CLOSE_REQ) | (org.jboss.remoting3.remote.RemoteConnectionHandler.SENT_CLOSE_REQ)))) { pendingChannels.remove(pendingChannel); result.setCancelled(); return org.xnio.IoUtils.nullCancellable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1554/buggy-version/src.main.java.org.jboss.remoting3.remote.RemoteConnectionHandler.java", "BodyUseAPI": [], "Fixed commit": "97d5373447333c5ddd1b5839d15fe9131d54289d", "Url": "https://api.github.com/repos/jboss-remoting/jboss-remoting", "Date": "2016-01-28T18:13:55Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["compiler.semanal.SemDesc.getNameDecl(compiler.abstree.tree.AbsValName)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (decl instanceof compiler.abstree.tree.AbsFunDecl) { type = compiler.semanal.SemDesc.getActualType(((compiler.abstree.tree.AbsFunDecl) (decl)).type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7267/buggy-version/src.compiler.semanal.SemTypeChecker.java", "BodyUseAPI": [], "Fixed commit": "e73c3aae14d1d2f51678a02ae0a3ac4a8ee74879", "Url": "https://api.github.com/repos/zidarsk8/compiler", "Date": "2012-05-12T20:51:10Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(info.getClientId().equals(Context.SERVER_ID))) { it.cnr.istc.ale.server.Context.getContext().addConnection(info.getClientId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6015/buggy-version/server.src.main.java.it.cnr.istc.ale.server.App.java", "BodyUseAPI": ["it.cnr.istc.ale.server.Context.getContext().addConnection(info.getClientId())", "org.apache.activemq.command.ConnectionInfo.getClientId()"], "Fixed commit": "a951fa74629c8b0d3dd224ccbd753d2f309e63f8", "Url": "https://api.github.com/repos/pstlab/LECTurE", "Date": "2017-10-16T09:22:49Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(info.getClientId().equals(Context.SERVER_ID))) { it.cnr.istc.ale.server.Context.getContext().removeConnection(info.getClientId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6015/buggy-version/server.src.main.java.it.cnr.istc.ale.server.App.java", "BodyUseAPI": ["org.apache.activemq.command.ConnectionInfo.getClientId()", "it.cnr.istc.ale.server.Context.getContext().removeConnection(info.getClientId())"], "Fixed commit": "a951fa74629c8b0d3dd224ccbd753d2f309e63f8", "Url": "https://api.github.com/repos/pstlab/LECTurE", "Date": "2017-10-16T09:22:49Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (closed == false) { output.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6536/buggy-version/asakusa-runtime.src.main.java.com.asakusafw.runtime.stage.output.BridgeOutputFormat.java", "BodyUseAPI": [], "Fixed commit": "9bbf3104ea025673d9e27e5c9d7125f5e5a9e1ff", "Url": "https://api.github.com/repos/asakusafw/asakusafw", "Date": "2012-05-18T07:41:17Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (allCards != null) { mAllCards = new java.util.ArrayList<java.lang.String[]>(); mAllCards.addAll(allCards); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6160/buggy-version/src.com.ichi2.anki.DeckTask.java", "BodyUseAPI": [], "Fixed commit": "53753795b7a1c8d837429f98e8fc9347e3f359c7", "Url": "https://api.github.com/repos/cyrilmhansen/Anki-Android", "Date": "2011-03-10T08:48:31Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (running.compareAndSet(false, true)) { try { realClock.setTime(java.lang.System.currentTimeMillis(), false); } finally { running.set(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/9154/buggy-version/araqne-logdb-cep.src.main.java.org.araqne.logdb.cep.engine.MemoryEventContextStorage.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicBoolean.set(boolean)"], "Fixed commit": "18939100830383c04b2c2ee864fe48c5713480bd", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-02-14T14:44:45Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (medicineQuantityEt.getText().toString().matches(\"[0]+\")) { medicineQuantityEt.setError(\"Quantity Required\"); }else { java.lang.String msgBody = (((((((((\"My malaria pills will last for the coming \" + \"<b>\") + (medicineStore)) + \"</b>\") + \" days only.<br> Send the following immediately: <br>\") + \"Medicine Name: \") + \"<b>\") + (drugName)) + \"</b>\") + \"<br>\") + \"Quantity: \"; android.content.Intent emailIntent = new android.content.Intent(android.content.Intent.ACTION_SEND); emailIntent.setData(android.net.Uri.parse(\"mailto:\")); emailIntent.setType(\"text/plain\"); emailIntent.putExtra(Intent.EXTRA_EMAIL, new java.lang.String[]{ \"yatnavermaa@gmail.com\", \"yatna.verma.ece13@itbhu.ac.in\" }); emailIntent.putExtra(Intent.EXTRA_SUBJECT, \"URGENT: Reqiured Malaria Medicines\"); emailIntent.putExtra(Intent.EXTRA_TEXT, android.text.Html.fromHtml((((msgBody + \"<b>\") + (java.lang.Integer.parseInt(medicineQuantityEt.getText().toString()))) + \"</b>\"))); startActivity(android.content.Intent.createChooser(emailIntent, \"Send mail via...\")); orderMedicineDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4273/buggy-version/malaria-app-android.src.main.java.com.peacecorps.malaria.activities.MedicineStore.java", "BodyUseAPI": ["medicineQuantityEt.getText().toString()", "android.content.Intent.putExtra(Intent.EXTRA_TEXT,android.text.Html.fromHtml((((msgBody + \"<b>\") + (java.lang.Integer.parseInt(medicineQuantityEt.getText().toString()))) + \"</b>\")))", "java.lang.Integer.parseInt(medicineQuantityEt.getText().toString())", "android.widget.EditText.setError(java.lang.String)", "android.text.Html.fromHtml((((msgBody + \"<b>\") + (java.lang.Integer.parseInt(medicineQuantityEt.getText().toString()))) + \"</b>\"))", "android.widget.EditText.getText()"], "Fixed commit": "f942ee2467d029d3a9d70370351c5f83d9a78c8f", "Url": "https://api.github.com/repos/top-gun007/malaria-app-android", "Date": "2016-12-19T19:08:37Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (medicineQuantityEt.getText().toString().matches(\"[0]+\")) { medicineQuantityEt.setError(\"Quantity Required\"); }else { java.lang.String msgBody = (((((\"My malaria pills will last for the coming \" + (medicineStore)) + \" days only.\\n Send the following immediately: \\n\") + \"Medicine Name: \") + (drugName)) + \"\\n\") + \"Quantity: \"; android.telephony.SmsManager smsManager = android.telephony.SmsManager.getDefault(); smsManager.sendTextMessage(\"123\", null, (msgBody + (java.lang.Integer.parseInt(medicineQuantityEt.getText().toString()))), null, null); android.widget.Toast.makeText(this, \"SMS sent.\", Toast.LENGTH_SHORT).show(); orderMedicineDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4273/buggy-version/malaria-app-android.src.main.java.com.peacecorps.malaria.activities.MedicineStore.java", "BodyUseAPI": ["android.widget.EditText.getText()", "android.widget.EditText.setError(java.lang.String)", "java.lang.Integer.parseInt(medicineQuantityEt.getText().toString())", "android.telephony.SmsManager.sendTextMessage(java.lang.String,<nulltype>,(msgBody + (java.lang.Integer.parseInt(medicineQuantityEt.getText().toString()))),<nulltype>,<nulltype>)", "medicineQuantityEt.getText().toString()"], "Fixed commit": "f942ee2467d029d3a9d70370351c5f83d9a78c8f", "Url": "https://api.github.com/repos/top-gun007/malaria-app-android", "Date": "2016-12-19T19:08:37Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getDamager()) instanceof org.bukkit.entity.Projectile) { event.getDamager().remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8579/buggy-version/src.main.java.org.bitbucket.ucchy.sl.StandLockListener.java", "BodyUseAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()", "event.getDamager().remove()"], "Fixed commit": "0397a1dfae6bfc07145554154af58cf89b85ed9a", "Url": "https://api.github.com/repos/ucchyocean/StandLock", "Date": "2016-04-02T08:53:55Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input.isConnected()) { output.disconnect(input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8728/buggy-version/src.main.java.se.openflisp.sls.simulation.Circuit.java", "BodyUseAPI": ["se.openflisp.sls.Output.disconnect(se.openflisp.sls.Input)"], "Fixed commit": "a904f87a4b9f963abb2297d3c68f5f5dcff9cc9e", "Url": "https://api.github.com/repos/DAT055-2/OpenFlisp", "Date": "2014-03-01T19:15:25Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input.isConnected()) { input.disconnect(input.getConnection()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8728/buggy-version/src.main.java.se.openflisp.sls.simulation.Circuit.java", "BodyUseAPI": ["se.openflisp.sls.Input.disconnect(input.getConnection())", "se.openflisp.sls.Input.getConnection()"], "Fixed commit": "a904f87a4b9f963abb2297d3c68f5f5dcff9cc9e", "Url": "https://api.github.com/repos/DAT055-2/OpenFlisp", "Date": "2014-03-01T19:15:25Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.cornell.scholars.journalsubjectareamapper.Journal.getIssn()", "edu.cornell.scholars.journalsubjectareamapper.Journal.getEissn()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((issn.equals(\"1468-0777\")) || (eissn.equals(\"1471-5902\"))) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1298/buggy-version/WorkFlowProject1.src.edu.cornell.scholars.journalsubjectareamapper.JournalToSubjectAreaMapEntryPoint.java", "BodyUseAPI": [], "Fixed commit": "dc2b8fe4f16d5c44a7d0af257c7b3b9634fd30ea", "Url": "https://api.github.com/repos/mjaved495/PostProcessersCode", "Date": "2017-03-16T20:07:13Z"},
{"Line": "=>1416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.storage.ceph.backup.CephBackupStorageVO.getFsid()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((org.zstack.core.db.Q.New(org.zstack.storage.ceph.primary.CephPrimaryStorageVO.class).eq(CephPrimaryStorageVO_.fsid, fsid).find()) == null) { dbf.removeByPrimaryKey(fsid, org.zstack.storage.ceph.backup.CephCapacityVO.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1641/buggy-version/plugin.ceph.src.main.java.org.zstack.storage.ceph.backup.CephBackupStorageBase.java", "BodyUseAPI": ["org.zstack.storage.ceph.backup.CephBackupStorageBase.removeByPrimaryKey(java.lang.String,java.lang.Class)"], "Fixed commit": "2fd0378a35ce32a39a41cff2a77f8df84024f512", "Url": "https://api.github.com/repos/MaJin1996/zstack", "Date": "2017-03-20T01:34:58Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((array.size()) == 1) return array.get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/9081/buggy-version/src.main.java.org.roaringbitmap.FastAggregation.java", "BodyUseAPI": ["java.util.ArrayList<org.roaringbitmap.RoaringBitmap>.get(int)"], "Fixed commit": "1ff4d0b7d304f678b07905f4c6a0df695a3fd618", "Url": "https://api.github.com/repos/RoaringBitmap/RoaringBitmap", "Date": "2015-08-06T21:37:28Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameWorld.getCurrentGameState()) == (com.esbjon.gameworld.GameWorld.GameState.INITIAL)) { this.transition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6034/buggy-version/core.src.com.esbjon.gameworld.UIHandler.java", "BodyUseAPI": [], "Fixed commit": "7103f8f50486052f3de37a04baafbe12b5774ec5", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2017-12-30T19:58:43Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (posOffsetY == (-(micdoodle8.mods.galacticraft.core.util.WorldUtil.getGravityForEntity(p)))) posOffsetY = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5849/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.entities.player.FreefallHandler.java", "BodyUseAPI": [], "Fixed commit": "1b09f037966941664c25ecf29a648c713163e4f7", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2017-03-19T17:12:34Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.jaschastarke.minecraft.vive.modules.BowHeadshot.getPlayerViveProperties(((de.jaschastarke.minecraft.vive.modules.Player) (arrow.getShooter())))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((playerViveProperties == null) || (!(playerViveProperties.isLongbowShooting()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7007/buggy-version/src.main.java.de.jaschastarke.minecraft.vive.modules.BowHeadshot.java", "BodyUseAPI": [], "Fixed commit": "b68efa15c995d5635e1457f1c99008097fed2089", "Url": "https://api.github.com/repos/possi/MineVive", "Date": "2016-07-04T22:12:40Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.iquanwai.platon.biz.domain.fragmentation.operation.GroupPromotionService.checkGroupPromotionAuthority(loginUser.getOpenId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (checkGroupPromotionAuthority) { com.iquanwai.platon.biz.po.GroupPromotion groupPromotion = groupPromotionService.createGroup(loginUser.getId()); if (groupPromotion != null) { return com.iquanwai.platon.web.util.WebUtils.result(groupPromotion.getGroupCode()); }else { return com.iquanwai.platon.web.util.WebUtils.error(\"\u521b\u5efa\u56e2\u961f\u5931\u8d25\"); } }else { com.iquanwai.platon.biz.po.RiseMember riseMember = accountService.getValidRiseMember(loginUser.getId()); if ((riseMember != null) && (((riseMember.getMemberTypeId()) == (com.iquanwai.platon.biz.po.RiseMember.ELITE)) || ((riseMember.getMemberTypeId()) == (com.iquanwai.platon.biz.po.RiseMember.HALF_ELITE)))) { return com.iquanwai.platon.web.util.WebUtils.error(\"\u4f60\u5df2\u7ecf\u662f\u5546\u5b66\u9662\u4f1a\u5458\uff0c\u62e5\u67091\u6708\u8bad\u7ec3\u8425\u5b66\u4e60\u8d44\u683c\uff0c\u65e0\u9700\u8bd5\u5b66\"); }else { return com.iquanwai.platon.web.util.WebUtils.error(\"\u7528\u6237\u65e0\u53c2\u52a0\u6d3b\u52a8\u6743\u9650\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7146/buggy-version/platon-web.src.main.java.com.iquanwai.platon.web.fragmentation.controller.operation.GroupPromotionController.java", "BodyUseAPI": [], "Fixed commit": "85cd85f588ef00c8f5e673f8e754ebfcf739d2c3", "Url": "https://api.github.com/repos/sfwind/platon", "Date": "2017-12-28T13:12:44Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gameCount > 1000) { gameCount = 1000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4413/buggy-version/workspace.mkhx.src.cfvbaibai.cardfantasy.web.controller.AutoBattleController.java", "BodyUseAPI": [], "Fixed commit": "76e703c42eb326faad22ac2d5d16ab94d133fbea", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2015-09-10T18:29:50Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((attachments.getSize()) > 0) { try { councilMember.setPhoto(fileStoreService.store(attachments.getInputStream(), attachments.getOriginalFilename(), attachments.getContentType(), org.egov.council.web.controller.CouncilMemberController.MODULE_NAME)); } catch (java.io.IOException e) { org.egov.council.web.controller.CouncilMemberController.LOGGER.error((\"Error in loading Employee photo\" + (e.getMessage())), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2294/buggy-version/egov.egov-councilweb.src.main.java.org.egov.council.web.controller.CouncilMemberController.java", "BodyUseAPI": ["org.egov.council.entity.CouncilMember.setPhoto(fileStoreService.store(attachments.getInputStream(), attachments.getOriginalFilename(), attachments.getContentType(), org.egov.council.web.controller.CouncilMemberController.MODULE_NAME))", "org.springframework.web.multipart.MultipartFile.getOriginalFilename()", "org.egov.infra.filestore.service.FileStoreService.store(attachments.getInputStream(),attachments.getOriginalFilename(),attachments.getContentType(),java.lang.String)", "org.springframework.web.multipart.MultipartFile.getInputStream()", "org.springframework.web.multipart.MultipartFile.getContentType()"], "Fixed commit": "a4208a31e1ad8f5343004179d91fb6eccc09cd7b", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-06-30T12:18:29Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ref.WeakReference<android.support.v4.app.Fragment>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (f instanceof net.osmand.plus.download.LocalIndexesFragment) { if (!(f.isDetached())) { ((net.osmand.plus.download.LocalIndexesFragment) (f)).reloadData(); } }else if (f instanceof net.osmand.plus.download.DownloadIndexFragment) { if (!(f.isDetached())) { net.osmand.plus.download.DownloadIndexAdapter adapter = ((net.osmand.plus.download.DownloadIndexAdapter) (((net.osmand.plus.download.DownloadIndexFragment) (f)).getExpandableListAdapter())); if (adapter != null) { adapter.setLoadedFiles(getIndexActivatedFileNames(), getIndexFileNames()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6113/buggy-version/OsmAnd.src.net.osmand.plus.download.DownloadActivity.java", "BodyUseAPI": ["android.support.v4.app.Fragment.isDetached()", "android.support.v4.app.Fragment.isDetached()"], "Fixed commit": "2b6698d7bf0af87a6ed4d0d131a40bc55d850bf0", "Url": "https://api.github.com/repos/Zahnstocher/Osmand", "Date": "2014-11-17T11:27:44Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.apimgt.impl.template.ThrottlePolicyTemplateBuilder.getPolicyConditionForDefault(pipeline.getConditions())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isEmpty(conditionString))) { conditionsSet.add(conditionString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6522/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.template.ThrottlePolicyTemplateBuilder.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "75e433cddf9e04c76e985a834e586342adcf7233", "Url": "https://api.github.com/repos/harsha89/carbon-apimgt", "Date": "2016-07-29T13:43:31Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Ally instanceof pieces.King) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1360/buggy-version/src.pieces.ChessPiece.java", "BodyUseAPI": [], "Fixed commit": "70ef09dbcd70ddf530ed8cf08eeb3247922b4408", "Url": "https://api.github.com/repos/ngonalex/RealTimeChess", "Date": "2017-02-23T07:53:43Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this._ArgumentHoldersByFlag.isEmpty())) { for (mks.arguments.holders.ArgumentHolder argument_holder : this._ArgumentHoldersByFlag.values()) { to_string += (((\" \" + (argument_holder.getFlag())) + \": \") + argument_holder) + \",\"; } to_string = to_string.substring(1, ((to_string.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5236/buggy-version/JittyJ.Parser.src.main.java.mks.arguments.ArgumentsContainer.java", "BodyUseAPI": ["java.util.Map<java.lang.String, mks.arguments.holders.ArgumentHolder>.values()"], "Fixed commit": "4b5edccd9410d4e43a13218d62e5e76c6ef7f0c0", "Url": "https://api.github.com/repos/MarkoPaul0/Jiffy-J", "Date": "2017-03-26T00:37:36Z"},
{"Line": "=>2365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toMonitor) { subMonitor.worked(10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8259/buggy-version/clouddesigner.org.occiware.clouddesigner.occi.infrastructure.connector.vmware.src.org.occiware.clouddesigner.occi.infrastructure.connector.vmware.ComputeConnector.java", "BodyUseAPI": [], "Fixed commit": "1bf5902f791397e58a90f91b06a730c368e5e513", "Url": "https://api.github.com/repos/occiware/ecore", "Date": "2016-09-26T12:34:36Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msg.obj) != null) { handleInput(((com.squareup.wire.Message) (msg.obj))); }else { org.microg.gms.gcm.McsService.mainHandler.dispatchMessage(org.microg.gms.gcm.McsService.mainHandler.obtainMessage(org.microg.gms.gcm.Constants.MSG_TEARDOWN, \"null message\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6326/buggy-version/play-services-core.src.main.java.org.microg.gms.gcm.McsService.java", "BodyUseAPI": ["org.microg.gms.gcm.McsService.handleInput(((com.squareup.wire.Message) (msg.obj)))"], "Fixed commit": "c826702bb90f91ba6eb2993224bd441df9585f34", "Url": "https://api.github.com/repos/julienschmidt/android_packages_apps_GmsCore", "Date": "2015-08-16T23:03:06Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gui.SearchViewController.getTaskResults(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(InterfaceController.logicControl.isTitleOrDate(taskResults.get(i)))) { numOfResults++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8754/buggy-version/src.gui.SearchViewController.java", "BodyUseAPI": [], "Fixed commit": "4590d69fcfeaffffa0411fa1990806f15066b7eb", "Url": "https://api.github.com/repos/cs2103aug2015-w15-2j/WhatToDo", "Date": "2015-10-30T11:55:54Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.ships.get(i).battle(otherArmada.ships.get(j)))) { java.lang.System.out.println(\"The armada's last ship has fallen!\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3241/buggy-version/week-04.day-01.pirates.src.Armada.java", "BodyUseAPI": [], "Fixed commit": "19034791105eaad6ff940923d45613cdeec09496", "Url": "https://api.github.com/repos/green-fox-academy/zandraaperjesi", "Date": "2017-04-04T05:32:14Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.ships.get(i).battle(otherArmada.ships.get(j))) { java.lang.System.out.println(\"The other armada has lost all of its ships!\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3241/buggy-version/week-04.day-01.pirates.src.Armada.java", "BodyUseAPI": [], "Fixed commit": "19034791105eaad6ff940923d45613cdeec09496", "Url": "https://api.github.com/repos/green-fox-academy/zandraaperjesi", "Date": "2017-04-04T05:32:14Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (keyValueMap.containsKey(key)) { return java.util.Optional.of(this.getValue(key, type)); }else { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5132/buggy-version/src.main.java.io.github.xinyangpan.cucumber.element.BaseElement.java", "BodyUseAPI": ["java.util.Optional.of(T)", "io.github.xinyangpan.cucumber.element.BaseElement.getValue(java.lang.String,java.lang.Class<T>)"], "Fixed commit": "1958a0f7d3429efc150983d74026f413fb112cdc", "Url": "https://api.github.com/repos/XinYang-Pan/cucumber-ext", "Date": "2017-05-08T10:18:18Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (model == 0) spim.fiji.plugin.Apply_Transformation.defaultModels = null; else spim.fiji.plugin.Apply_Transformation.defaultModels = models;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/126/buggy-version/src.main.java.spim.fiji.plugin.Apply_Transformation.java", "BodyUseAPI": [], "Fixed commit": "5086b66fd9ccd2c5a0333a60f02c6259deea4c1f", "Url": "https://api.github.com/repos/fiji/SPIM_Registration", "Date": "2015-02-02T22:42:17Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((afpChain.getAlnLength()) < 1) { return map; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4123/buggy-version/biojava3-structure.src.main.java.org.biojava.bio.structure.align.util.AlignmentTools.java", "BodyUseAPI": [], "Fixed commit": "168019e2f627b06ca48269236d0238b44049550b", "Url": "https://api.github.com/repos/josemduarte/biojava", "Date": "2014-03-14T20:42:48Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getStartTime().getDay()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (day == 0) { day = 7; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8523/buggy-version/src.gui.Calendar.java", "BodyUseAPI": [], "Fixed commit": "83ee86eb2640460d4ede78ca257bf61fbde86809", "Url": "https://api.github.com/repos/Raane/fellesprosjekt", "Date": "2012-03-30T00:41:14Z"},
{"Line": "=>1115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mongodb.client.FindIterable<org.bson.Document>.first()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (contactDoc.containsKey(\"phone\")) { contactObj.put(\"phone\", contactDoc.get(\"phone\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/535/buggy-version/textit.textit-api.src.main.java.edu.indiana.d2i.textit.api.service.TextItRest.java", "BodyUseAPI": ["org.bson.Document.get(java.lang.String)", "org.json.JSONObject.put(java.lang.String,contactDoc.get(\"phone\"))"], "Fixed commit": "71423c729e04b1c5e4d6eff9b93b8909def3c42b", "Url": "https://api.github.com/repos/Data-to-Insight-Center/smallholder-ag", "Date": "2016-08-15T18:41:28Z"},
{"Line": "=>1112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mongodb.client.FindIterable<org.bson.Document>.first()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (contactDoc.containsKey(\"name\")) { contactObj.put(\"name\", contactDoc.get(\"name\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/535/buggy-version/textit.textit-api.src.main.java.edu.indiana.d2i.textit.api.service.TextItRest.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,contactDoc.get(\"name\"))", "org.bson.Document.get(java.lang.String)"], "Fixed commit": "71423c729e04b1c5e4d6eff9b93b8909def3c42b", "Url": "https://api.github.com/repos/Data-to-Insight-Center/smallholder-ag", "Date": "2016-08-15T18:41:28Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i.range()) != null) { annotation.registerFix(new org.sonarlint.intellij.actions.NoSonarIntentionAction(i.range())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8241/buggy-version/src.main.java.org.sonarlint.intellij.editor.SonarExternalAnnotator.java", "BodyUseAPI": ["com.intellij.lang.annotation.Annotation.registerFix(org.sonarlint.intellij.actions.NoSonarIntentionAction)", "org.sonarlint.intellij.issue.IssuePointer.range()"], "Fixed commit": "09e08647ec7fc514fdb3e11e9b08cd9aa75e3983", "Url": "https://api.github.com/repos/SonarSource/sonarlint-intellij", "Date": "2016-01-13T08:20:55Z"},
{"Line": "=>649", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((obj == null) || (eSeq.isPrimitive(obj))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8127/buggy-version/src.main.java.randoop.generation.AbstractGenerator.java", "BodyUseAPI": [], "Fixed commit": "24cb24a0c1dfe35ca1d781d5e1ef2c66c742adda", "Url": "https://api.github.com/repos/nmaguirre/randoop", "Date": "2017-08-04T05:41:24Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.inventory.getCurrentItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((s != null) && ((s.getItem()) instanceof powercrystals.minefactoryreloaded.api.IToolHammer)) { byte mode = cable.getMode(); mode++; if (mode > 2) { mode = 0; } cable.setMode(mode); if (!(world.isRemote)) { cpw.mods.fml.common.network.PacketDispatcher.sendPacketToAllAround(x, y, z, 50, world.provider.dimensionId, cable.getDescriptionPacket()); if (mode == 0) { player.sendChatToPlayer(\"Set cable to standard connection mode\"); }else if (mode == 1) { player.sendChatToPlayer(\"Set cable to forced-connection mode\"); }else if (mode == 2) { player.sendChatToPlayer(\"Set cable to cable-only connection mode\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6594/buggy-version/src.powercrystals.minefactoryreloaded.block.BlockRedNetCable.java", "BodyUseAPI": [], "Fixed commit": "bdafb816d91b93f818c36a4e0c3d6cba9a47bf91", "Url": "https://api.github.com/repos/Kobata/MineFactoryReloaded", "Date": "2013-05-18T19:06:50Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((com.corsework.notepad.application.NotePadApplication) (context.getApplicationContext())).getReminderD().getById(pos)) == null) { ((com.corsework.notepad.application.NotePadApplication) (context.getApplicationContext())).startNotify((-1)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/450/buggy-version/NotePad.src.com.corsework.notepad.activity.TimeNotification.java", "BodyUseAPI": ["((com.corsework.notepad.application.NotePadApplication) (context.getApplicationContext())).startNotify(int)", "android.content.Context.getApplicationContext()"], "Fixed commit": "bc894dafe6b904d84ee56b62e919ef41f237e8ae", "Url": "https://api.github.com/repos/bsucourse2012/Calendar-1.0", "Date": "2012-05-23T17:32:47Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((left != null) && (right != null)) { if ((org.ihtsdo.otf.tcc.api.refexDynamic.data.RefexDynamicValidatorType.compare(left, right)) > 0) { throw new java.lang.RuntimeException(\"Invalid INTERVAL definition the left value should be <= the right value\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8443/buggy-version/tcc-api.src.main.java.org.ihtsdo.otf.tcc.api.refexDynamic.data.RefexDynamicValidatorType.java", "BodyUseAPI": ["org.ihtsdo.otf.tcc.api.refexDynamic.data.RefexDynamicValidatorType.compare(java.lang.Number,java.lang.Number)"], "Fixed commit": "a2c6da4024c585149dad1a3d02365def943d7fd2", "Url": "https://api.github.com/repos/Apelon-VA/OTF-Versioning-Service", "Date": "2014-08-25T16:14:43Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedDimIndices.length) == 0) { selectedDimIndices = new int[in.numDimensions()]; for (int d = 0; d < (selectedDimIndices.length); d++) { selectedDimIndices[d] = d; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7687/buggy-version/org.knime.knip.base.src.org.knime.knip.base.node.IterableIntervalsNodeModel.java", "BodyUseAPI": [], "Fixed commit": "f729e8e367a45fb4840c677c99100638eb509f77", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2013-12-05T15:58:07Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!scroll) com.jayway.android.robotium.solo.MatchCounter.resetCount();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3842/buggy-version/robotium-solo.src.main.java.com.jayway.android.robotium.solo.Waiter.java", "BodyUseAPI": [], "Fixed commit": "f24c095c037fe3f73a9afebf8dbc4d6d9d1514a9", "Url": "https://api.github.com/repos/thorikawa/robotium", "Date": "2010-11-27T11:12:24Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((matcher) != null) { description.appendText(\" with \"); matcher.describeTo(description); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4442/buggy-version/rest-server-driver.src.main.java.com.github.restdriver.serverdriver.matchers.HasJsonPath.java", "BodyUseAPI": [], "Fixed commit": "1c89b78b9a6ea11d4cb3bb0c8e6a709ec60edd9a", "Url": "https://api.github.com/repos/kelveden/rest-driver", "Date": "2011-06-23T21:14:39Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position) != null) { Cell target = position.getNeighbor(d); if (target != null) target.action(this, position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2239/buggy-version/Projektlabor.src.Replicator.java", "BodyUseAPI": [], "Fixed commit": "22c1c6a85f872e3ce9d8a3e4a0f46770eb474c62", "Url": "https://api.github.com/repos/gerloss/projlab16alfa", "Date": "2016-04-27T17:51:47Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type == (java.lang.String.class)) || (type == (org.elasticsearch.common.geo.GeoPoint.class))) engine.eval((\"var result = \" + currentValueCode)); else engine.eval(((\"var result = JSON.stringify(\" + currentValueCode) + \")\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4155/buggy-version/src.main.java.com.servioticy.dispatcher.SOProcessor010.java", "BodyUseAPI": [], "Fixed commit": "b1854c3740eed6ca02b99b6ce767b43137250d0a", "Url": "https://api.github.com/repos/servioticy/servioticy-dispatcher", "Date": "2015-09-22T12:31:41Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type.getType()) == (org.elasticsearch.common.geo.GeoPoint.class)) result = ((((org.elasticsearch.common.geo.GeoPoint) (result)).getLat()) + \",\") + (((org.elasticsearch.common.geo.GeoPoint) (result)).getLon());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4155/buggy-version/src.main.java.com.servioticy.dispatcher.SOProcessor020.java", "BodyUseAPI": [], "Fixed commit": "b1854c3740eed6ca02b99b6ce767b43137250d0a", "Url": "https://api.github.com/repos/servioticy/servioticy-dispatcher", "Date": "2015-09-22T12:31:41Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((type.getType()) == (java.lang.String.class)) || ((type.getType()) == (org.elasticsearch.common.geo.GeoPoint.class))) engine.eval(((((((((initializationCode(inputSUs, origin)) + \"var \") + resultVar) + \" = \") + currentValueCode) + \"(\") + (com.servioticy.dispatcher.SOProcessor020.functionArgsString(currentValueCode))) + \")\")); else engine.eval((((((((((initializationCode(inputSUs, origin)) + \"var \") + resultVar) + \" = JSON.stringify(\") + currentValueCode) + \"(\") + (com.servioticy.dispatcher.SOProcessor020.functionArgsString(currentValueCode))) + \")\") + \")\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4155/buggy-version/src.main.java.com.servioticy.dispatcher.SOProcessor020.java", "BodyUseAPI": [], "Fixed commit": "b1854c3740eed6ca02b99b6ce767b43137250d0a", "Url": "https://api.github.com/repos/servioticy/servioticy-dispatcher", "Date": "2015-09-22T12:31:41Z"},
{"Line": "=>927", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.clarkparsia.empire.annotation.RdfGenerator.ValueToObject.apply(org.openrdf.model.Value)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (aListValue instanceof java.util.Collection) { aValues.addAll(((java.util.Collection) (aListValue))); }else { aValues.add(aListValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8174/buggy-version/core.src.com.clarkparsia.empire.annotation.RdfGenerator.java", "BodyUseAPI": ["java.util.Collection<java.lang.Object>.add(java.lang.Object)"], "Fixed commit": "83c7650ee1a8587864d68d12b25f5ca089086277", "Url": "https://api.github.com/repos/ewpatton/Empire", "Date": "2012-03-28T17:32:33Z"},
{"Line": "=>633", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (icon == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5165/buggy-version/src.main.java.mekanism.client.render.RenderPartTransmitter.java", "BodyUseAPI": [], "Fixed commit": "e18570b679669dec53bc88b852ff5f725096263a", "Url": "https://api.github.com/repos/TehStoneMan/Mekanism", "Date": "2016-06-10T15:11:41Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.qcadoo.model.api.BigDecimalUtils.tryParse(order.getField(OrderFields.PLANNED_QUANTITY).toString(), org.springframework.context.i18n.LocaleContextHolder.getLocale()).isRight()) { order.setField(OrderFields.COMMISSIONED_PLANNED_QUANTITY, numberService.setScale(order.getDecimalField(OrderFields.PLANNED_QUANTITY))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3677/buggy-version/mes-plugins.mes-plugins-orders.src.main.java.com.qcadoo.mes.orders.hooks.OrderHooks.java", "BodyUseAPI": ["com.qcadoo.model.api.NumberService.setScale(order.getDecimalField(OrderFields.PLANNED_QUANTITY))", "com.qcadoo.model.api.Entity.setField(OrderFields.COMMISSIONED_PLANNED_QUANTITY,numberService.setScale(order.getDecimalField(OrderFields.PLANNED_QUANTITY)))", "com.qcadoo.model.api.Entity.getDecimalField(OrderFields.PLANNED_QUANTITY)"], "Fixed commit": "55cea32b3ca3ee509b805e5f90b5fa86a000386a", "Url": "https://api.github.com/repos/qcadoo/mes", "Date": "2014-08-28T09:38:14Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetLine < 1) { java.lang.System.out.println(this.solverA.getStatementWrapperList().size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2945/buggy-version/src.learning.generateUserStudy.Type2Question.java", "BodyUseAPI": [], "Fixed commit": "de94a6c52f788f93f253c1fa5ecfd9b71170d56d", "Url": "https://api.github.com/repos/BinhangYuan/JavaMethodAutoAbridging", "Date": "2017-02-20T16:33:02Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.chemistry.opencmis.client.api.Property<java.lang.Object>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (val instanceof java.util.Calendar) { java.util.Calendar cal = ((java.util.Calendar) (val)); java.text.SimpleDateFormat df = new java.text.SimpleDateFormat(); return df.format(cal.getTime()); }else { return val != null ? val.toString() : \"[null]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7352/buggy-version/src.main.java.org.apache.chemistry.shell.util.SimplePropertyManager.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "782bd0a0857c56d540ee23914de77dfc13c14d0b", "Url": "https://api.github.com/repos/OpenDataSpace/chemistry-shell", "Date": "2013-07-08T16:53:47Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.chemistry.opencmis.client.api.Property<?>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (value instanceof java.util.Calendar) { java.util.Calendar cal = ((java.util.Calendar) (value)); java.text.SimpleDateFormat df = new java.text.SimpleDateFormat(); valueAsString = df.format(cal.getTime()); }else if (value != null) { valueAsString = value.toString(); }else { valueAsString = \"[null]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7352/buggy-version/src.main.java.org.apache.chemistry.shell.util.SimplePropertyManager.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "782bd0a0857c56d540ee23914de77dfc13c14d0b", "Url": "https://api.github.com/repos/OpenDataSpace/chemistry-shell", "Date": "2013-07-08T16:53:47Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((arguments[0]) instanceof org.hl7.v3.RespondingGatewayPRPAIN201306UV02SecuredRequestType) { org.hl7.v3.RespondingGatewayPRPAIN201306UV02SecuredRequestType request = ((org.hl7.v3.RespondingGatewayPRPAIN201306UV02SecuredRequestType) (arguments[0])); getDelegate().setReturnValue(request.getPRPAIN201306UV02()); }else if ((arguments[0]) instanceof org.hl7.v3.RespondingGatewayPRPAIN201306UV02RequestType) { org.hl7.v3.RespondingGatewayPRPAIN201306UV02RequestType request = ((org.hl7.v3.RespondingGatewayPRPAIN201306UV02RequestType) (arguments[0])); getDelegate().setReturnValue(request.getPRPAIN201306UV02()); }else { throw new java.lang.IllegalArgumentException((\"Did not expect arguments[0] to be of type: \" + (arguments[0].getClass()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/677/buggy-version/Product.Production.Services.PatientDiscoveryCore.src.main.java.gov.hhs.fha.nhinc.patientdiscovery.aspect.RespondingGatewayPRPAIN201306UV02Builder.java", "BodyUseAPI": ["java.lang.Object.getClass()"], "Fixed commit": "b823880097d54bc0f9f2639b525581b316a7df73", "Url": "https://api.github.com/repos/CONNECT-Solution/CONNECT", "Date": "2012-11-27T22:58:58Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(snapshotsAllowed)) && (version.toString().contains(\"SNAPSHOT\"))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4522/buggy-version/aether-util.src.main.java.org.sonatype.aether.util.version.GenericVersionRange.java", "BodyUseAPI": [], "Fixed commit": "8325526751423046c476b591906391023ab43261", "Url": "https://api.github.com/repos/hegewald/sonatype-aether", "Date": "2012-06-05T08:03:50Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.JELLY_BEAN)) { notification = notificationBuilder.build(); }else { notification = notificationBuilder.getNotification(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4973/buggy-version/app.src.main.java.com.multunus.onemdm.app.AppInstallerService.java", "BodyUseAPI": [], "Fixed commit": "00041999ba5972d44a6bbb9ef3ab653674dddf12", "Url": "https://api.github.com/repos/multunus/onemdm-client", "Date": "2015-12-10T11:53:52Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((studyEvent.getSubjectEventStatus()) == (org.akaza.openclinica.bean.core.SubjectEventStatus.COMPLETED)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5541/buggy-version/core.src.main.java.org.akaza.openclinica.service.ParticipantEventService.java", "BodyUseAPI": [], "Fixed commit": "857b15050bc401889408561dd3aefad4b93f00a6", "Url": "https://api.github.com/repos/rooney/OpenClinica", "Date": "2015-11-30T07:47:47Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sg.ncl.service.user.data.jpa.entities.UserEntity.getUserDetails()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((userUserDetails.getLastName()) != null) { one.getUserDetails().setLastName(userUserDetails.getLastName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2343/buggy-version/service-user.src.main.java.sg.ncl.service.user.UserService.java", "BodyUseAPI": ["one.getUserDetails().setLastName(userUserDetails.getLastName())", "sg.ncl.service.user.domain.UserDetails.getLastName()"], "Fixed commit": "99b1e7c63b6241eaeaebaf2a93255782fc68e6c1", "Url": "https://api.github.com/repos/nus-ncl/services-in-one", "Date": "2016-05-26T08:57:27Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["user.getUserDetails().getAddress()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (userAddress != null) { if ((userAddress.getAddress1()) != null) { one.getUserDetails().getAddress().setAddress1(userAddress.getAddress1()); } if ((userAddress.getAddress2()) != null) { one.getUserDetails().getAddress().setAddress2(userAddress.getAddress2()); } if ((userAddress.getCountry()) != null) { one.getUserDetails().getAddress().setCountry(userAddress.getCountry()); } if ((userAddress.getRegion()) != null) { one.getUserDetails().getAddress().setRegion(userAddress.getRegion()); } if ((userAddress.getZipCode()) != null) { one.getUserDetails().getAddress().setZipCode(userAddress.getZipCode()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2343/buggy-version/service-user.src.main.java.sg.ncl.service.user.UserService.java", "BodyUseAPI": ["sg.ncl.service.user.domain.Address.getCountry()", "sg.ncl.service.user.domain.Address.getCountry()", "sg.ncl.service.user.domain.Address.getAddress1()", "sg.ncl.service.user.domain.Address.getRegion()", "one.getUserDetails().getAddress().setAddress1(userAddress.getAddress1())", "sg.ncl.service.user.domain.Address.getRegion()", "sg.ncl.service.user.domain.Address.getAddress2()", "one.getUserDetails().getAddress().setAddress2(userAddress.getAddress2())", "one.getUserDetails().getAddress().setCountry(userAddress.getCountry())", "sg.ncl.service.user.domain.Address.getZipCode()", "sg.ncl.service.user.domain.Address.getAddress1()", "one.getUserDetails().getAddress().setZipCode(userAddress.getZipCode())", "sg.ncl.service.user.domain.Address.getZipCode()", "sg.ncl.service.user.domain.Address.getAddress2()", "one.getUserDetails().getAddress().setRegion(userAddress.getRegion())"], "Fixed commit": "99b1e7c63b6241eaeaebaf2a93255782fc68e6c1", "Url": "https://api.github.com/repos/nus-ncl/services-in-one", "Date": "2016-05-26T08:57:27Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sg.ncl.service.user.data.jpa.entities.UserEntity.getUserDetails()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((userUserDetails.getEmail()) != null) { one.getUserDetails().setEmail(userUserDetails.getEmail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2343/buggy-version/service-user.src.main.java.sg.ncl.service.user.UserService.java", "BodyUseAPI": ["one.getUserDetails().setEmail(userUserDetails.getEmail())", "sg.ncl.service.user.domain.UserDetails.getEmail()"], "Fixed commit": "99b1e7c63b6241eaeaebaf2a93255782fc68e6c1", "Url": "https://api.github.com/repos/nus-ncl/services-in-one", "Date": "2016-05-26T08:57:27Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sg.ncl.service.user.data.jpa.entities.UserEntity.getUserDetails()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((userUserDetails.getFirstName()) != null) { one.getUserDetails().setFirstName(userUserDetails.getFirstName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2343/buggy-version/service-user.src.main.java.sg.ncl.service.user.UserService.java", "BodyUseAPI": ["one.getUserDetails().setFirstName(userUserDetails.getFirstName())", "sg.ncl.service.user.domain.UserDetails.getFirstName()"], "Fixed commit": "99b1e7c63b6241eaeaebaf2a93255782fc68e6c1", "Url": "https://api.github.com/repos/nus-ncl/services-in-one", "Date": "2016-05-26T08:57:27Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sg.ncl.service.user.data.jpa.entities.UserEntity.getUserDetails()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((userUserDetails.getPhone()) != null) { one.getUserDetails().setPhone(userUserDetails.getPhone()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2343/buggy-version/service-user.src.main.java.sg.ncl.service.user.UserService.java", "BodyUseAPI": ["one.getUserDetails().setPhone(userUserDetails.getPhone())", "sg.ncl.service.user.domain.UserDetails.getPhone()"], "Fixed commit": "99b1e7c63b6241eaeaebaf2a93255782fc68e6c1", "Url": "https://api.github.com/repos/nus-ncl/services-in-one", "Date": "2016-05-26T08:57:27Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.scrounger.countrycurrencypicker.library.Country.getCountry(java.lang.String,android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (country != null) { com.scrounger.countrycurrencypicker.library.Currency currency = com.scrounger.countrycurrencypicker.library.Currency.getCurrency(countryCode, context); if (currency != null) { country.setCurrency(currency); return country; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1251/buggy-version/library.src.main.java.com.scrounger.countrycurrencypicker.library.Country.java", "BodyUseAPI": ["com.scrounger.countrycurrencypicker.library.Country.setCurrency(com.scrounger.countrycurrencypicker.library.Currency)"], "Fixed commit": "e57ca241497ad5f8b1a47d35221e9b1c29952557", "Url": "https://api.github.com/repos/Scrounger/CountryCurrencyPicker", "Date": "2017-10-28T12:40:16Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (fieldObject != null) { com.jsonrpclib.JsonConnector.processingMethod(fieldObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1286/buggy-version/src.com.jsonrpclib.JsonConnector.java", "BodyUseAPI": ["com.jsonrpclib.JsonConnector.processingMethod(java.lang.Object)"], "Fixed commit": "1f81d6599d526d8a2b60285966a43d326fc50622", "Url": "https://api.github.com/repos/kubatatami/JsonCallbacks", "Date": "2013-12-03T08:38:13Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(task.isSuccessful())) { android.util.Log.w(luck.materialdesign.tabsnavigator.LoginActivity.TAG, \"signInWithEmail:failed\", task.getException()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7730/buggy-version/app.src.main.java.luck.materialdesign.tabsnavigator.LoginActivity.java", "BodyUseAPI": ["com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult>.getException()", "android.util.Log.w(java.lang.String,java.lang.String,task.getException())"], "Fixed commit": "f0f88a71008e663cdbe0ad5d34309f413aaa6962", "Url": "https://api.github.com/repos/sk17ab/jamshed_blood", "Date": "2017-07-23T16:21:55Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tools != null) { for (int j = 0; j < (tools.tools.length); j++) { if (((tools.tools[j]) != null) && (tools.tools[j].isItemEnchanted())) { addApToItem(tools.tools[j]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3853/buggy-version/ak.EnchantChanger.EcEntityApOrb.java", "BodyUseAPI": ["tools.tools[j].isItemEnchanted()", "ak.EnchantChanger.EcEntityApOrb.addApToItem(tools.tools[j])"], "Fixed commit": "f5ee8493596555225d99041e9c267f4574209a1a", "Url": "https://api.github.com/repos/aksource/EnchantChanger161", "Date": "2013-10-28T04:25:36Z"},
{"Line": "=>1414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.pressgang.ccms.contentspec.SpecTopic.getXMLDocument()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (validateTopicXML(buildData, specTopic, doc)) { xmlPreProcessor.processTopicAdditionalInfo(buildData, specTopic, doc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5290/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.builder.DocBookBuilder.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.contentspec.builder.DocBookXMLPreProcessor.processTopicAdditionalInfo(org.jboss.pressgang.ccms.contentspec.builder.structures.BuildData,org.jboss.pressgang.ccms.contentspec.SpecTopic,org.w3c.dom.Document)"], "Fixed commit": "56dda98c91a1ab91225897b4dd9d09aca4b9dbaf", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSBuilder", "Date": "2014-03-19T03:45:48Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msgs == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2233/buggy-version/src.main.java.com.sam.yh.common.msg.FetchReplaySmsTask.java", "BodyUseAPI": [], "Fixed commit": "2fa2dd4d84a8abd60af4bc64f0e0dfa1ddba0b87", "Url": "https://api.github.com/repos/booleguo/asm", "Date": "2015-07-23T08:40:14Z"},
{"Line": "=>2029", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opencps.dossiermgt.service.impl.DossierLocalServiceImpl.findByPrimaryKey(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (dossier.getDossierStatus().equals(PortletConstants.DOSSIER_STATUS_NEW)) { dossier.setSubmitDatetime(now); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4855/buggy-version/portlets.opencps-portlet.docroot.WEB-INF.src.org.opencps.dossiermgt.service.impl.DossierLocalServiceImpl.java", "BodyUseAPI": ["org.opencps.dossiermgt.model.Dossier.setSubmitDatetime(java.util.Date)"], "Fixed commit": "4867ada8f6be783ae9efc322ef0eeffb1fcfb49d", "Url": "https://api.github.com/repos/FDSService/opencps", "Date": "2016-09-20T11:47:25Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4270/buggy-version/opacclient.opacapp.src.main.java.de.geeksfactory.opacclient.frontend.SearchResultDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "73b351ff632947cca27ff5a9fa6a60af758e3252", "Url": "https://api.github.com/repos/opacapp/opacclient", "Date": "2015-05-19T17:21:24Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (null != (m.group(2))) { mask = java.lang.Integer.parseInt(m.group(2)); }else { mask = 32; java.lang.String[] parts = m.group(1).split(\"\\\\.\"); int i = (parts.length) - 1; while ((0 <= i) && (\"0\".equals(parts[i]))) { mask -= 8; --i; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/452/buggy-version/code.jims.jims-crossbow.jims-crossbow-model.src.main.java.org.jims.modules.crossbow.objectmodel.filters.address.IpAddress.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.util.regex.Matcher.group(int)", "java.lang.String.split(java.lang.String)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "b4b03417b2285a492f52234a746c8c82e9b3a1ae", "Url": "https://api.github.com/repos/robertboczek/solaris-crossbow", "Date": "2011-06-04T17:31:53Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yahoo.sketches.theta.PreambleUtil.extractLgArrLongs(java.lang.Object,long)", "com.yahoo.sketches.ResizeFactor.getRF(int)", "com.yahoo.sketches.theta.PreambleUtil.extractLgNomLongs(java.lang.Object,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((myRF == (com.yahoo.sketches.ResizeFactor.X1)) && (lgArrLongs != (com.yahoo.sketches.Util.startingSubMultiple((lgNomLongs + 1), myRF, com.yahoo.sketches.Util.MIN_LG_ARR_LONGS)))) { throw new com.yahoo.sketches.SketchesArgumentException((\"Possible corruption: ResizeFactor X1, but provided \" + \"array too small for sketch size\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4230/buggy-version/src.main.java.com.yahoo.sketches.theta.HeapAlphaSketch.java", "BodyUseAPI": [], "Fixed commit": "960cdcf920ef964cf2217ae7fd3ebee772c67588", "Url": "https://api.github.com/repos/DataSketches/sketches-core", "Date": "2017-10-18T06:30:15Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.owasp.dependencycheck.dependency.Dependency.getActualFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(file.isFile())) || ((file.length()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3358/buggy-version/dependency-check-core.src.main.java.org.owasp.dependencycheck.analyzer.NodePackageAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "07f838ccf395b7c3679645858c3ee5d2e99f5b6d", "Url": "https://api.github.com/repos/jeremylong/DependencyCheck", "Date": "2017-08-19T21:18:48Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.owasp.dependencycheck.dependency.Dependency.getActualFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(file.isFile())) || ((file.length()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3358/buggy-version/dependency-check-core.src.main.java.org.owasp.dependencycheck.analyzer.NspAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "07f838ccf395b7c3679645858c3ee5d2e99f5b6d", "Url": "https://api.github.com/repos/jeremylong/DependencyCheck", "Date": "2017-08-19T21:18:48Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.compareTo(configuration1.getEstimatedDuration())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (comparation != 0) return comparation;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1572/buggy-version/src.main.java.org.jenkinsci.plugin.matrixconfigsorter.TimeStampAxisSorter.java", "BodyUseAPI": [], "Fixed commit": "63584e099e4fffc084a60519337295df0d37775c", "Url": "https://api.github.com/repos/jenkinsci/Matrix-sorter-plugin", "Date": "2012-12-18T17:05:54Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.endsWith(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!sufd) { org.tempestdesign.sendmail.NoReply.UN += suf; }else if ((org.tempestdesign.sendmail.NoReply.UN.length()) < 11) { org.tempestdesign.sendmail.NoReply.UN += suf; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3017/buggy-version/org.tempestdesign.sendmail.NoReply.java", "BodyUseAPI": [], "Fixed commit": "c33bd33f58a1bfcff8253eb856f8edcb77dbeeda", "Url": "https://api.github.com/repos/philly-phyre/SendMail", "Date": "2015-12-12T17:51:07Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.canarymod.api.nbt.CanaryCompoundTag.getListTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (list.isEmpty()) { return new java.lang.String[]{ logic.e() }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1214/buggy-version/src.main.java.net.canarymod.api.CanaryMobSpawnerLogic.java", "BodyUseAPI": [], "Fixed commit": "a6ce1cf491570db6b41e0dbd212c6848bf0b3e01", "Url": "https://api.github.com/repos/FallenMoonNetwork/CanaryRecode", "Date": "2013-08-17T16:13:51Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.muyunluan.bakingapp.MainActivity.isTablet)) { android.content.Intent intent = new android.content.Intent(this, com.muyunluan.bakingapp.ui.StepDetailsActivity.class); intent.putExtra(\"position\", position); intent.putExtra(\"steps\", mSteps); startActivity(intent); }else { com.muyunluan.bakingapp.ui.StepDetailsFragment stepDetailsFragment = new com.muyunluan.bakingapp.ui.StepDetailsFragment(); android.os.Bundle b = new android.os.Bundle(); b.putInt(\"position\", position); b.putParcelableArrayList(\"steps\", mSteps); stepDetailsFragment.setArguments(b); getSupportFragmentManager().beginTransaction().replace(R.id.frame_step, stepDetailsFragment).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3713/buggy-version/app.src.main.java.com.muyunluan.bakingapp.ui.RecipeDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "0a898fe0329d004f760ee5b742f304d2357a0dff", "Url": "https://api.github.com/repos/muyunluan/BakingAPP", "Date": "2017-07-14T21:58:13Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.swt.custom.StyledText.getBackground()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((lastBackground) == null) || (!(lastBackground.equals(background)))) { fCanvas.setBackground(background); lastBackground = background; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/373/buggy-version/plugins.org.python.pydev.shared_ui.src_overview_ruler.org.python.pydev.overview_ruler.MinimapOverviewRuler.java", "BodyUseAPI": ["org.python.pydev.overview_ruler.MinimapOverviewRuler.setBackground(org.eclipse.swt.graphics.Color)"], "Fixed commit": "d1e958ff032813a235461c277c4fd4cfffb5c1e5", "Url": "https://api.github.com/repos/fabioz/Pydev", "Date": "2014-11-11T11:49:37Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.swt.custom.StyledText.getForeground()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((lastForeground) == null) || (!(lastForeground.equals(foreground)))) { fCanvas.setForeground(foreground); lastForeground = foreground; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/373/buggy-version/plugins.org.python.pydev.shared_ui.src_overview_ruler.org.python.pydev.overview_ruler.MinimapOverviewRuler.java", "BodyUseAPI": ["org.python.pydev.overview_ruler.MinimapOverviewRuler.setForeground(org.eclipse.swt.graphics.Color)"], "Fixed commit": "d1e958ff032813a235461c277c4fd4cfffb5c1e5", "Url": "https://api.github.com/repos/fabioz/Pydev", "Date": "2014-11-11T11:49:37Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((root) == null) { org.python.pydev.shared_core.log.Log.log(((\"null root created in: \" + (this)) + \" (should not happen).\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/373/buggy-version/plugins.org.python.pydev.shared_ui.src.org.python.pydev.shared_ui.outline.BaseModel.java", "BodyUseAPI": [], "Fixed commit": "d1e958ff032813a235461c277c4fd4cfffb5c1e5", "Url": "https://api.github.com/repos/fabioz/Pydev", "Date": "2014-11-11T11:49:37Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ParseExpression.nextParen(expr, expr.indexOf('(', i))) != ((expr.length()) - 1)) { java.lang.Throwable up = new java.lang.Throwable(); throw up; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1558/buggy-version/ParseExpression.java", "BodyUseAPI": [], "Fixed commit": "94f754f270a19f9e6e04089cab8c8a55a37cfe8a", "Url": "https://api.github.com/repos/chess123/Grapher", "Date": "2015-11-18T05:43:42Z"},
{"Line": "=>604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.druid.indexing.overlord.RemoteTaskRunnerWorkQueue.remove(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (workItem != null) { taskComplete(workItem, null, io.druid.indexing.common.TaskStatus.failure(taskId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4648/buggy-version/indexing-service.src.main.java.io.druid.indexing.overlord.RemoteTaskRunner.java", "BodyUseAPI": ["io.druid.indexing.overlord.RemoteTaskRunner.3.taskComplete(io.druid.indexing.overlord.RemoteTaskRunnerWorkItem,<nulltype>,io.druid.indexing.common.TaskStatus.failure(taskId))"], "Fixed commit": "5a9d469ff61715b41fe8351b4170523da741f02d", "Url": "https://api.github.com/repos/himanshug/druid", "Date": "2016-04-19T03:59:41Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client.level) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/397/buggy-version/src.engine.network.packet.Packet3AObjectInteract.java", "BodyUseAPI": [], "Fixed commit": "bfd6518c236cfa5bcd09aab53b727b26ab318ff8", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-12-16T11:33:15Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((fieldType().indexOptions()) != (org.apache.lucene.index.IndexOptions.NONE)) || (fieldType().stored())) { context.doc().add(new org.apache.lucene.document.Field(fieldType().name(), (value ? \"T\" : \"F\"), fieldType())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2538/buggy-version/core.src.main.java.org.elasticsearch.index.mapper.BooleanFieldMapper.java", "BodyUseAPI": [], "Fixed commit": "91239d08d0f52d31634fec9a94c4e7e6e9a6a666", "Url": "https://api.github.com/repos/strapdata/elassandra5-rc", "Date": "2017-11-12T21:09:40Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((popupState.offset) != null) { popupOptions.setProperty(\"offset\", new org.discotools.gwt.leaflet.client.types.Point(popupState.offset.getLat(), popupState.offset.getLon())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/243/buggy-version/src.main.java.org.vaadin.addon.leaflet.client.vaadin.LeafletMarkerConnector.java", "BodyUseAPI": ["org.discotools.gwt.leaflet.client.popup.PopupOptions.setProperty(java.lang.String,org.discotools.gwt.leaflet.client.types.Point)", "popupState.offset.getLat()", "popupState.offset.getLon()"], "Fixed commit": "1d7d163c1e2cf4119765abb5d36c8ccea5719036", "Url": "https://api.github.com/repos/jtreml/v-leaflet", "Date": "2013-06-01T15:15:08Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((popupState.autoPanPadding) != null) { popupOptions.setProperty(\"autoPanPadding\", new org.discotools.gwt.leaflet.client.types.Point(popupState.autoPanPadding.getLat(), popupState.autoPanPadding.getLon())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/243/buggy-version/src.main.java.org.vaadin.addon.leaflet.client.vaadin.LeafletMarkerConnector.java", "BodyUseAPI": ["org.discotools.gwt.leaflet.client.popup.PopupOptions.setProperty(java.lang.String,org.discotools.gwt.leaflet.client.types.Point)", "popupState.autoPanPadding.getLat()", "popupState.autoPanPadding.getLon()"], "Fixed commit": "1d7d163c1e2cf4119765abb5d36c8ccea5719036", "Url": "https://api.github.com/repos/jtreml/v-leaflet", "Date": "2013-06-01T15:15:08Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (manual) { this.syncAllContacts = false; }else { this.syncAllContacts = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2018/buggy-version/src.src.de.tubs.ibr.android.ldap.auth.ServerInstance.java", "BodyUseAPI": [], "Fixed commit": "51de59dfee0dded58c9c8f3af48ce93b9ec4e2cc", "Url": "https://api.github.com/repos/soneyworld/AndroidLab", "Date": "2011-07-12T06:19:33Z"},
{"Line": "=>997", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (returned == null) { throw new org.openflexo.connie.exception.NullReferenceException((((\"null occured when evaluating \" + lastEvaluatedPathElement) + \" from \") + lastEvaluated)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5981/buggy-version/connie-core.src.main.java.org.openflexo.connie.expr.BindingValue.java", "BodyUseAPI": [], "Fixed commit": "66ff2ac0f7cc2809fa5a94842e0714c566995d76", "Url": "https://api.github.com/repos/openflexo-team/connie", "Date": "2016-02-23T07:29:55Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((SystemUtils.IS_OS_WINDOWS) && (applicationDir.startsWith(\"/\"))) applicationDir = applicationDir.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/911/buggy-version/engine.src.main.java.pl.edu.uj.jnode.jarpath.JarPathServices.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "2e60fa8d0758bf59befea06f8918c26449ecd528", "Url": "https://api.github.com/repos/msemik/jNode", "Date": "2016-05-01T17:14:07Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_stage.timer) != null) _stage.timer.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3243/buggy-version/src.com.spantons.stagesLevel.StagesLevelUtils.java", "BodyUseAPI": ["_stage.timer.stop()"], "Fixed commit": "093ac4951fb42dfacb46dd877ace09134d56cd3a", "Url": "https://api.github.com/repos/spantons/Dude-Game", "Date": "2014-06-24T17:34:43Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_stage.timerAwakeningDialogues) != null) _stage.timerAwakeningDialogues.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3243/buggy-version/src.com.spantons.stagesLevel.StagesLevelUtils.java", "BodyUseAPI": ["_stage.timerAwakeningDialogues.stop()"], "Fixed commit": "093ac4951fb42dfacb46dd877ace09134d56cd3a", "Url": "https://api.github.com/repos/spantons/Dude-Game", "Date": "2014-06-24T17:34:43Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<org.zkoss.zss.model.impl.statistic.AbstractStatistic>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lo >= hi) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5853/buggy-version/zssmodel.src.org.zkoss.zss.model.impl.statistic.CountStatistic.java", "BodyUseAPI": [], "Fixed commit": "eb4766e06540d6b388da1642433c0c65cd45ba39", "Url": "https://api.github.com/repos/dataspread/dataspread-web", "Date": "2017-12-29T06:08:31Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (running()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2995/buggy-version/ext.sampling_prof.SamplingProf.java", "BodyUseAPI": [], "Fixed commit": "36292d4a36daca2a696716c9f73886024789c4a4", "Url": "https://api.github.com/repos/xli/sampling_prof", "Date": "2014-03-22T16:56:15Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result == null) || (isFinishing())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3619/buggy-version/src.pro.schmid.android.solde.Main.java", "BodyUseAPI": [], "Fixed commit": "985e3f4ab1a4a9f314ad758def76090553d37023", "Url": "https://api.github.com/repos/jschmid/SwisscomStatus", "Date": "2012-03-17T07:11:46Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(currency.equals(\"USD\"))) || (!(money.getCurrency().equals(\"USD\")))) { money.changeCurrency(\"USD\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3388/buggy-version/bankingproject.src.main.java.bankingproject.domain.customer.money.Money.java", "BodyUseAPI": ["bankingproject.domain.customer.money.Money.changeCurrency(java.lang.String)"], "Fixed commit": "fe50fef4a80086e2e651e76a457924754f680cb2", "Url": "https://api.github.com/repos/Zn0w/BankingProject", "Date": "2017-07-27T11:13:55Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(currency.equals(\"USD\"))) || (!(money.getCurrency().equals(\"USD\")))) { money.changeCurrency(\"USD\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3388/buggy-version/bankingproject.src.main.java.bankingproject.domain.customer.money.Money.java", "BodyUseAPI": ["bankingproject.domain.customer.money.Money.changeCurrency(java.lang.String)"], "Fixed commit": "fe50fef4a80086e2e651e76a457924754f680cb2", "Url": "https://api.github.com/repos/Zn0w/BankingProject", "Date": "2017-07-27T11:13:55Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (request.getRequestURI().startsWith(Urls.IFRAME_SV_BASE)) { return fi.om.initiative.util.Locales.LOCALE_SV; }else if (request.getRequestURI().startsWith(Urls.IFRAME_FI_BASE)) { return fi.om.initiative.util.Locales.LOCALE_FI; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8351/buggy-version/src.main.java.fi.om.initiative.web.URILocaleResolver.java", "BodyUseAPI": ["request.getRequestURI().startsWith(Urls.IFRAME_FI_BASE)", "javax.servlet.http.HttpServletRequest.getRequestURI()"], "Fixed commit": "3431e89e24b1bc2eee50dc997c483060695955e6", "Url": "https://api.github.com/repos/solita/kansalaisaloite", "Date": "2015-07-02T07:43:21Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6991/buggy-version/src.io.github.zachohara.bukkit.craftban.MaterialsList.java", "BodyUseAPI": [], "Fixed commit": "061538149aefec5937e80b429912ec50b119df10", "Url": "https://api.github.com/repos/ZachOhara/Bukkit-CraftBan", "Date": "2015-07-27T09:54:11Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.lp20.aikuma.util.SyncUtil.serverCredentials) != null) date = org.lp20.aikuma.util.SyncUtil.serverCredentials.getLastSyncDate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/558/buggy-version/Aikuma.src.org.lp20.aikuma.util.SyncUtil.java", "BodyUseAPI": [], "Fixed commit": "e5fcb2ad2e9b518bb2b399af65c4bc70ddbc8b92", "Url": "https://api.github.com/repos/lisaslyis/aikuma", "Date": "2014-08-18T11:40:50Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((noPlayer) == 0) { editor.putInt(\"idUtilisateur\", db.getUtilisateurFromName(nomUtil[1], nomUtil[0]).getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5810/buggy-version/app.src.main.java.com.iutbmteprow.shootingarchery.PlayerSelectionFragment.java", "BodyUseAPI": [], "Fixed commit": "b4c235ea66c181861eca0593d4e1ec2dfb7b9a83", "Url": "https://api.github.com/repos/antoinedanois/shooting-archery-android", "Date": "2016-03-01T18:49:50Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.datatransfer.Transferable.getTransferData(java.awt.datatransfer.DataFlavor)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((files == null) || ((files.size()) == 0)) { javax.swing.JOptionPane.showMessageDialog(this, \"Sorry, this did not work.\\nTry downloading the image first and then dragging the file into Magarena.\", \"Drag & drop failed!\", javax.swing.JOptionPane.ERROR_MESSAGE); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6577/buggy-version/src.magic.ui.MagicFrame.java", "BodyUseAPI": [], "Fixed commit": "ce5bb29511f62714e693e0ad98a04d769689b19b", "Url": "https://api.github.com/repos/magarena/magarena", "Date": "2014-05-29T16:16:50Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.laxio.piston.piston.util.Environment.isDebugMode())) { java.util.logging.Logger.getGlobal().setLevel(java.util.logging.Level.INFO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4425/buggy-version/src.main.java.org.laxio.piston.ignition.PistonIgnition.java", "BodyUseAPI": [], "Fixed commit": "8229cc3c891acbe96b0585429f5a668eea14ebaa", "Url": "https://api.github.com/repos/Laxio/PistonIgnition", "Date": "2017-12-31T14:30:11Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.Run.getExecution()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (flowExecution == null) { throw new java.lang.Exception(\"Upstream flow execution is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5954/buggy-version/src.main.java.org.jenkinsci.plugins.ewm.steps.ExwsAllocateExecution.java", "BodyUseAPI": [], "Fixed commit": "534b0bece548503f12abb27229f008188c932791", "Url": "https://api.github.com/repos/alexsomai/external-workspace-manager-plugin", "Date": "2016-06-06T15:45:01Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jenkinsci.plugins.ewm.steps.ExwsAllocateExecution.findAction(flowExecution.getCurrentHeads())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (exwsAllocateAction == null) { java.lang.String message = java.lang.String.format(\"The Jenkins job '%s' does not have registered any 'External Workspace Allocate' action\", upstreamName); throw new hudson.AbortException(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5954/buggy-version/src.main.java.org.jenkinsci.plugins.ewm.steps.ExwsAllocateExecution.java", "BodyUseAPI": [], "Fixed commit": "534b0bece548503f12abb27229f008188c932791", "Url": "https://api.github.com/repos/alexsomai/external-workspace-manager-plugin", "Date": "2016-06-06T15:45:01Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return null; }else if (de.metas.ui.web.window.datatypes.LookupValue.class.isAssignableFrom(valueClass)) { return ((de.metas.ui.web.window.datatypes.LookupValue) (value)).getIdAsString(); }else if (java.util.Map.class.isAssignableFrom(valueClass)) { @java.lang.SuppressWarnings(\"unchecked\") final java.util.Map<java.lang.String, java.lang.String> map = ((java.util.Map<java.lang.String, java.lang.String>) (value)); final de.metas.ui.web.window.datatypes.LookupValue.StringLookupValue lookupValue = de.metas.ui.web.window.datatypes.json.JSONLookupValue.stringLookupValueFromJsonMap(map); return lookupValue == null ? null : lookupValue.getIdAsString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5272/buggy-version/metasfresh-webui-api.src.main.java.de.metas.ui.web.window.model.sql.SqlDocumentRepository.java", "BodyUseAPI": [], "Fixed commit": "7d85194ca1d8aeb88d21c28c333d0929fe6e5a4d", "Url": "https://api.github.com/repos/metasfresh/metasfresh-webui-api", "Date": "2016-09-15T10:52:11Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return null; }else if (de.metas.ui.web.window.datatypes.LookupValue.class.isAssignableFrom(valueClass)) { return ((de.metas.ui.web.window.datatypes.LookupValue) (value)).getIdAsInt(); }else if (java.lang.Number.class.isAssignableFrom(valueClass)) { return ((java.lang.Number) (value)).intValue(); }else if (java.lang.String.class.equals(valueClass)) { return java.lang.Integer.parseInt(((java.lang.String) (value))); }else if (java.util.Map.class.isAssignableFrom(valueClass)) { @java.lang.SuppressWarnings(\"unchecked\") final java.util.Map<java.lang.String, java.lang.String> map = ((java.util.Map<java.lang.String, java.lang.String>) (value)); final de.metas.ui.web.window.datatypes.LookupValue.IntegerLookupValue lookupValue = de.metas.ui.web.window.datatypes.json.JSONLookupValue.integerLookupValueFromJsonMap(map); return lookupValue == null ? null : lookupValue.getIdAsInt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5272/buggy-version/metasfresh-webui-api.src.main.java.de.metas.ui.web.window.model.sql.SqlDocumentRepository.java", "BodyUseAPI": [], "Fixed commit": "7d85194ca1d8aeb88d21c28c333d0929fe6e5a4d", "Url": "https://api.github.com/repos/metasfresh/metasfresh-webui-api", "Date": "2016-09-15T10:52:11Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["application.getDbHelper().insertUserTrack(com.oneminutebefore.workout.models.CompletedWorkout)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (id > 0) { boolean isPaused = com.oneminutebefore.workout.helpers.SharedPrefsUtil.getBooleanPreference(this, Keys.KEY_IS_PAUSED, false); if (!isPaused) { addNotification(selectedWorkout, timeMillis, id); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3403/buggy-version/app.src.main.java.com.oneminutebefore.workout.services.WorkoutNotificationService.java", "BodyUseAPI": ["com.oneminutebefore.workout.services.WorkoutNotificationService.addNotification(com.oneminutebefore.workout.models.SelectedWorkout,long,int)"], "Fixed commit": "88d67951295ca2903c175d77d235b1bfb3857e7d", "Url": "https://api.github.com/repos/GrexoftDevelopers/omb", "Date": "2017-08-25T18:55:13Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(result.moveToFirst())) { db.insert(com.oneminutebefore.workout.helpers.DBHelper.USER_TRACK, null, values); result = db.rawQuery((\"select max(user_track_id) as user_track_id from \" + (com.oneminutebefore.workout.helpers.DBHelper.USER_TRACK)), null); if (result.moveToFirst()) { return result.getInt(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3403/buggy-version/app.src.main.java.com.oneminutebefore.workout.helpers.DBHelper.java", "BodyUseAPI": [], "Fixed commit": "88d67951295ca2903c175d77d235b1bfb3857e7d", "Url": "https://api.github.com/repos/GrexoftDevelopers/omb", "Date": "2017-08-25T18:55:13Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (requestURI.startsWith(\"/\")) { requestURI = requestURI.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2201/buggy-version/src.main.java.org.topbraid.mauiserver.MauiServer.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "f6ee2f1dc4177edd743cd02812df111fc6b99b1d", "Url": "https://api.github.com/repos/TopQuadrant/MauiServer", "Date": "2016-01-19T17:06:53Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gCal.withExistingToken()) { logic.LogicController.logger.log(java.util.logging.Level.INFO, \"Deleting all events - sync with google.\"); gCal.deleteAllEntries(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3973/buggy-version/src.logic.LogicController.java", "BodyUseAPI": ["logic.google.GoogleCal.deleteAllEntries()"], "Fixed commit": "54fc5a276f5fe31118df628590b3be52606c63f1", "Url": "https://api.github.com/repos/cs2103aug2014-t16-4j/main", "Date": "2014-11-09T08:22:22Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((triggers) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6274/buggy-version/src.main.java.net.citizensnpcs.trait.waypoint.Waypoint.java", "BodyUseAPI": [], "Fixed commit": "dc0cb7b7e0c292ec784e947a182a81cdbac61c7b", "Url": "https://api.github.com/repos/CitizensDev/Citizens2", "Date": "2012-10-15T12:31:22Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getNavigator().getTargetAsLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((finished == null) || ((currentDestination) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6274/buggy-version/src.main.java.net.citizensnpcs.trait.waypoint.LinearWaypointProvider.java", "BodyUseAPI": [], "Fixed commit": "dc0cb7b7e0c292ec784e947a182a81cdbac61c7b", "Url": "https://api.github.com/repos/CitizensDev/Citizens2", "Date": "2012-10-15T12:31:22Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getNavigator().getTargetAsLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((finished.getWorld()) != (currentDestination.getLocation().getWorld())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6274/buggy-version/src.main.java.net.citizensnpcs.trait.waypoint.LinearWaypointProvider.java", "BodyUseAPI": [], "Fixed commit": "dc0cb7b7e0c292ec784e947a182a81cdbac61c7b", "Url": "https://api.github.com/repos/CitizensDev/Citizens2", "Date": "2012-10-15T12:31:22Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (groupLevel > 0) { java.lang.Integer groupingStart = groupedRows.pollFirst(); result.addRowGrouping(groupingStart, (previousRow - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6791/buggy-version/src.net.ssehub.kernel_haven.io.excel.SimpleExcelReader.java", "BodyUseAPI": [], "Fixed commit": "e408c19ac258f5a1c0c87f201cd0bcb9d9150f83", "Url": "https://api.github.com/repos/KernelHaven/IOUtils", "Date": "2017-09-04T07:16:00Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aLenght == (i + 1)) { aLenght--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1143/buggy-version/chapter_001.src.main.java.ru.job4j.array.BubbleSort.java", "BodyUseAPI": [], "Fixed commit": "69966a4b301fc96a2b30961a49de42f7ed35bf95", "Url": "https://api.github.com/repos/simvip/isliusar", "Date": "2017-06-08T06:08:10Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { mainWebView.loadUrl(\"http://ficbook.net\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6214/buggy-version/app.src.main.java.net.ficbook.gfoxsh.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9963a93d18235df723a5ce635cf3e95122796f76", "Url": "https://api.github.com/repos/GFOXSH/Ficbook", "Date": "2017-10-28T12:37:39Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (retVal.contains(this)) retVal.remove(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7823/buggy-version/src.Block.java", "BodyUseAPI": ["java.util.Set<Block>.remove(Block)"], "Fixed commit": "018bf4ecf49d8c241daa9754f9a62fa08ce0fb4c", "Url": "https://api.github.com/repos/Ben8520/jBPM", "Date": "2016-09-02T08:11:02Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me.ibhh.xpShop.Tools.Tools.packagesExists(\"net.minecraft.server.v1_4_R1.EntityPlayer\", \"net.minecraft.server.v1_4_R1.PlayerInteractManager\", \"net.minecraft.server.v1_4_R1.MinecraftServer\", \"org.bukkit.Bukkit\", \"org.bukkit.OfflinePlayer\", \"org.bukkit.craftbukkit.v1_4_R1.CraftServer\", \"org.bukkit.entity.Player\")) { return new me.ibhh.xpShop.Tools.Tools147(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3387/buggy-version/src.me.ibhh.xpShop.Tools.ToolUtility.java", "BodyUseAPI": [], "Fixed commit": "b965990e4934261b597897f17741ab1ad0eb1c27", "Url": "https://api.github.com/repos/ibhh/xpShop", "Date": "2013-01-28T20:03:06Z"},
{"Line": "=>2183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (BroadcastDomainType.Vlan.scheme().equals(com.cloud.network.Networks.BroadcastDomainType.getSchemeValue(network.getBroadcastUri()))) { vlan = com.cloud.network.Networks.BroadcastDomainType.getValue(network.getBroadcastUri()); }else if (BroadcastDomainType.Vxlan.scheme().equals(com.cloud.network.Networks.BroadcastDomainType.getSchemeValue(network.getBroadcastUri()))) { vlan = com.cloud.network.Networks.BroadcastDomainType.getValue(network.getBroadcastUri()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8863/buggy-version/server.src.com.cloud.api.ApiResponseHelper.java", "BodyUseAPI": ["com.cloud.network.Networks.BroadcastDomainType.getValue(network.getBroadcastUri())", "com.cloud.network.Network.getBroadcastUri()", "BroadcastDomainType.Vxlan.scheme().equals(com.cloud.network.Networks.BroadcastDomainType.getSchemeValue(network.getBroadcastUri()))", "com.cloud.network.Networks.BroadcastDomainType.getSchemeValue(network.getBroadcastUri())", "com.cloud.network.Network.getBroadcastUri()", "com.cloud.network.Network.getBroadcastUri()", "com.cloud.network.Networks.BroadcastDomainType.getValue(network.getBroadcastUri())"], "Fixed commit": "e434a2a78613830d51c256b3ef0e8d946d78ad54", "Url": "https://api.github.com/repos/verio-cloudstack/cloudstack", "Date": "2013-10-23T03:09:27Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (settings.Settings.IS_WINDOWS) rendering.RenderUpdater.gl.glFlush(); else rendering.RenderUpdater.gl.glFinish();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5951/buggy-version/src.rendering.RenderUpdater.java", "BodyUseAPI": [], "Fixed commit": "8fdef2a38d569a7f28934f99ef6b000863bb28fa", "Url": "https://api.github.com/repos/david-westreicher/fungine", "Date": "2013-11-18T11:46:23Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity instanceof org.apache.cloudstack.api.InternalIdentity) { entityType += ((org.apache.cloudstack.api.InternalIdentity) (entity)).getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7555/buggy-version/services.iam.plugin.src.org.apache.cloudstack.iam.RoleBasedEntityAccessChecker.java", "BodyUseAPI": [], "Fixed commit": "4889031492e543c318fcd639d7491cfb2013eb76", "Url": "https://api.github.com/repos/SungardAS-CloudDevelopers/cloudstack", "Date": "2014-05-09T18:10:26Z"},
{"Line": "=>817", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.egov.collection.utils.CollectionsUtil.LOGGER.isDebugEnabled()) org.egov.collection.utils.CollectionsUtil.LOGGER.info((\"updateReceiptDetailsAndGetReceiptAmountInfo - response\" + receiptAmountInfo));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/872/buggy-version/egov.egov-collection.src.main.java.org.egov.collection.utils.CollectionsUtil.java", "BodyUseAPI": ["org.apache.log4j.Logger.info((\"updateReceiptDetailsAndGetReceiptAmountInfo - response\" + receiptAmountInfo))"], "Fixed commit": "2a4805f8d489fa8c9eb2d35539e36d81ccf383b3", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2017-06-01T11:12:17Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((transcriptConsequence.getHgvspShort()) != null) { this.setAlteration(transcriptConsequence.getHgvspShort()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5791/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.model.Alteration.java", "BodyUseAPI": [], "Fixed commit": "fcd8c6cddfa8cec196c8750fd759dc4b1e3c924a", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2017-07-20T19:00:34Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((transcriptConsequence.getProteinStart()) != null) { this.proteinStart = java.lang.Integer.parseInt(transcriptConsequence.getProteinStart()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5791/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.model.Alteration.java", "BodyUseAPI": [], "Fixed commit": "fcd8c6cddfa8cec196c8750fd759dc4b1e3c924a", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2017-07-20T19:00:34Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((transcriptConsequence.getProteinEnd()) != null) { this.proteinEnd = java.lang.Integer.parseInt(transcriptConsequence.getProteinEnd()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5791/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.model.Alteration.java", "BodyUseAPI": [], "Fixed commit": "fcd8c6cddfa8cec196c8750fd759dc4b1e3c924a", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2017-07-20T19:00:34Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((transcriptConsequence.getConsequence()) != null) { this.consequence = org.mskcc.cbio.oncokb.util.VariantConsequenceUtils.findVariantConsequenceByTerm(transcriptConsequence.getConsequence()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5791/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.model.Alteration.java", "BodyUseAPI": [], "Fixed commit": "fcd8c6cddfa8cec196c8750fd759dc4b1e3c924a", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2017-07-20T19:00:34Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(budget.isEmpty())) { this.budget = java.lang.Integer.parseInt(budget); }else { this.budget = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3279/buggy-version/app.src.main.java.cs465.tripplanner.TripItem.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "975050e9a795278c2bbfa1e97654d1591b085c06", "Url": "https://api.github.com/repos/cs465plana/tripplanner", "Date": "2017-12-01T05:42:02Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.joakimpersson.tda367.model.utils.FileScanner.readObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (object != null) { playerList = ((java.util.List<com.github.joakimpersson.tda367.model.Score>) (object)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2036/buggy-version/src.com.github.joakimpersson.tda367.model.Highscore.java", "BodyUseAPI": [], "Fixed commit": "d9cfb9ab7b297123dfb762b962fc9a5deabb772f", "Url": "https://api.github.com/repos/joakimpersson/TDA367", "Date": "2012-05-09T20:34:39Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["get().getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files != null) { for (java.io.File file : files) { model.addElement(file); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5119/buggy-version/src.main.java.org.scijava.ui.swing.widget.SwingFileListWidget.java", "BodyUseAPI": [], "Fixed commit": "391b0fce789e9aad531636bf1082f5d2ed21f03d", "Url": "https://api.github.com/repos/imagejan/scijava-ui-swing", "Date": "2017-07-19T08:17:52Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["app.board.Board.getPits()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((pits.size()) - 1) == chosenPit) { chosenPit = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/9224/buggy-version/src.main.java.app.player.PlayerService.java", "BodyUseAPI": [], "Fixed commit": "849a9c608f9de2a10c8b2b35d2cfab269dc0778e", "Url": "https://api.github.com/repos/michaelmeelis/kalahan-game", "Date": "2017-11-02T10:25:43Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fixturesResponse.getResults().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((result.getOpponent().getShortName()) == null) || (result.getOpponent().getShortName().isEmpty())) holder.eplMatchweekHomeTeamShortName.setText(result.getOpponent().getName().substring(0, 3).toUpperCase()); else holder.eplMatchweekHomeTeamShortName.setText(result.getOpponent().getShortName().toUpperCase());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1511/buggy-version/app.src.main.java.com.awecode.muscn.adapter.FixturesRecyclerViewAdapter.java", "BodyUseAPI": ["com.awecode.muscn.model.http.fixtures.Result.getOpponent()", "result.getOpponent().getName().substring(int,int)", "result.getOpponent().getName()", "result.getOpponent().getShortName()", "result.getOpponent().getName().substring(0, 3).toUpperCase()", "android.widget.TextView.setText(result.getOpponent().getName().substring(0, 3).toUpperCase())", "android.widget.TextView.setText(result.getOpponent().getShortName().toUpperCase())", "com.awecode.muscn.model.http.fixtures.Result.getOpponent()", "result.getOpponent().getShortName().toUpperCase()"], "Fixed commit": "899fc6f0b11a62ad14412822d0cb75f3276eb2f4", "Url": "https://api.github.com/repos/muscn/muscn4android", "Date": "2016-10-03T09:04:19Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fixturesResponse.getResults().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((result.getOpponent().getShortName()) == null) || (result.getOpponent().getShortName().isEmpty())) holder.eplMatchweekAwayTeamShortName.setText(result.getOpponent().getName().substring(0, 3).toUpperCase()); else holder.eplMatchweekAwayTeamShortName.setText(result.getOpponent().getShortName().toUpperCase());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1511/buggy-version/app.src.main.java.com.awecode.muscn.adapter.FixturesRecyclerViewAdapter.java", "BodyUseAPI": ["result.getOpponent().getName()", "result.getOpponent().getShortName().toUpperCase()", "android.widget.TextView.setText(result.getOpponent().getName().substring(0, 3).toUpperCase())", "com.awecode.muscn.model.http.fixtures.Result.getOpponent()", "result.getOpponent().getShortName()", "com.awecode.muscn.model.http.fixtures.Result.getOpponent()", "result.getOpponent().getName().substring(int,int)", "result.getOpponent().getName().substring(0, 3).toUpperCase()", "android.widget.TextView.setText(result.getOpponent().getShortName().toUpperCase())"], "Fixed commit": "899fc6f0b11a62ad14412822d0cb75f3276eb2f4", "Url": "https://api.github.com/repos/muscn/muscn4android", "Date": "2016-10-03T09:04:19Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.dimanolog.flickr.imageloader.ImageRequest.getCallback()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (callback != null) { com.github.dimanolog.flickr.util.LogUtil.e(com.github.dimanolog.flickr.imageloader.VanGogh.TAG, \"Error downloading image\", pE); callback.onError(pE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7139/buggy-version/app.src.main.java.com.github.dimanolog.flickr.imageloader.VanGogh.java", "BodyUseAPI": ["com.github.dimanolog.flickr.imageloader.VanGoghCallback.onError(java.io.IOException)"], "Fixed commit": "c5035129d303b52f959bca43377b7352338e5446", "Url": "https://api.github.com/repos/Dimanolog/Flickr", "Date": "2017-12-31T13:15:05Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fingerStart == (fingerTable[k].n)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3133/buggy-version/src.hw8.ChordNode.java", "BodyUseAPI": [], "Fixed commit": "6a35d0b7c5dbc12db3326bd534e3f1d77ae73683", "Url": "https://api.github.com/repos/kohloderso/DistributedSystems", "Date": "2016-05-14T11:22:06Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (eArgument.hasAttribute(\"type\")) { this.type = Request.Argument.Argument.SqlArgumentType.valueOf(eArgument.getAttribute(\"type\")); }else { this.type = Request.Argument.Argument.SqlArgumentType.String; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7162/buggy-version/src.Request.Argument.Argument.java", "BodyUseAPI": [], "Fixed commit": "84ea26d422f6d0e870a1802f9185de2144eb6a10", "Url": "https://api.github.com/repos/edigotlieb/Talnet-Server-Backend", "Date": "2014-12-31T23:51:52Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (message.contains(\"played\")) { gui.appendToDisplay(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2107/buggy-version/src.Client.java", "BodyUseAPI": ["GUI.appendToDisplay(java.lang.String)"], "Fixed commit": "dc86219d6d61b731bc1545edc631f66ecdfff0f0", "Url": "https://api.github.com/repos/bandrewss/CS410CardGameSimulator", "Date": "2017-10-07T23:55:43Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((com.jetbrains.jetpad.vclang.term.Abstract.FunctionDefinition) (unit.getDefinition())).getResultType()) == null) { errorReporter.report(new com.jetbrains.jetpad.vclang.typechecking.error.local.LocalTypeCheckingError(\"Cannot infer the result type of a recursive function\", unit.getDefinition())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6846/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.typechecking.DefinitionCheckType.java", "BodyUseAPI": ["com.jetbrains.jetpad.vclang.typechecking.error.LocalErrorReporter.report(com.jetbrains.jetpad.vclang.typechecking.error.local.LocalTypeCheckingError)", "com.jetbrains.jetpad.vclang.typechecking.TypecheckingUnit.getDefinition()"], "Fixed commit": "30489c449a7da18d25641bfdd8fea6ef3800dfc4", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2017-02-16T17:56:01Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((PaintroidApplication.currentTool.getToolType()) == (org.catrobat.paintroid.tools.ToolType.ERASER)) && ((mCanvasPaint.getColor()) != (android.graphics.Color.TRANSPARENT))) changePaintColor(Color.TRANSPARENT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/4126/buggy-version/Paintroid.src.main.java.org.catrobat.paintroid.tools.implementation.DrawTool.java", "BodyUseAPI": [], "Fixed commit": "675e874038bd968b985c02ede59f3bff7f172bc7", "Url": "https://api.github.com/repos/joschi2804/Paintroid", "Date": "2017-02-20T13:41:10Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((origUser.getSonucKodu()) == (com.evolveum.polygon.connector.proik.ProIKConnector.CODE_USER_DOES_NOT_EXIST)) { throw new org.identityconnectors.framework.common.exceptions.UnknownUidException((((((\"User \" + targetUserId) + \" does not exists, SonucKodu: \") + (origUser.getSonucKodu())) + \", Hata: \") + (origUser.getHata()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/146/buggy-version/src.main.java.com.evolveum.polygon.connector.proik.ProIKConnector.java", "BodyUseAPI": ["com.evolveum.polygon.connector.proik.soap.ProUser.getSonucKodu()", "com.evolveum.polygon.connector.proik.soap.ProUser.getHata()"], "Fixed commit": "ccecb7a0f17e610c051dc1054fc7e23b6bca6cb6", "Url": "https://api.github.com/repos/Evolveum/connector-proik", "Date": "2016-07-25T05:13:52Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.evolveum.polygon.connector.proik.service.Service.getUser(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((existUser.getSonucKodu()) == (com.evolveum.polygon.connector.proik.ProIKConnector.CODE_USER_DOES_NOT_EXIST)) { com.evolveum.polygon.connector.proik.ProIKConnector.LOG.info((((\"user doesn't exists, SonucKodu: \" + (existUser.getSonucKodu())) + \", Hata: \") + (existUser.getHata()))); }else { throw new org.identityconnectors.framework.common.exceptions.AlreadyExistsException((((((\"User '\" + uid) + \"' already exists, SonucKodu: \") + (existUser.getSonucKodu())) + \", Hata: \") + (existUser.getHata()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/146/buggy-version/src.main.java.com.evolveum.polygon.connector.proik.ProIKConnector.java", "BodyUseAPI": ["com.evolveum.polygon.connector.proik.soap.ProUser.getSonucKodu()", "com.evolveum.polygon.connector.proik.soap.ProUser.getHata()", "com.evolveum.polygon.connector.proik.soap.ProUser.getHata()", "com.evolveum.polygon.connector.proik.soap.ProUser.getSonucKodu()", "org.identityconnectors.common.logging.Log.info((((\"user doesn't exists, SonucKodu: \" + (existUser.getSonucKodu())) + \", Hata: \") + (existUser.getHata())))"], "Fixed commit": "ccecb7a0f17e610c051dc1054fc7e23b6bca6cb6", "Url": "https://api.github.com/repos/Evolveum/connector-proik", "Date": "2016-07-25T05:13:52Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.evolveum.polygon.connector.proik.service.Service.getUser(query.byUid)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (user == null) { throw new org.identityconnectors.framework.common.exceptions.InvalidAttributeValueException((\"getUser must return ProUser with SonucKodu, but returned: \" + user)); }else if ((user.getSonucKodu()) == (com.evolveum.polygon.connector.proik.ProIKConnector.CODE_USER_DOES_NOT_EXIST)) { throw new org.identityconnectors.framework.common.exceptions.UnknownUidException((((((\"User \" + user) + \" does not exists, SonucKodu: \") + (user.getSonucKodu())) + \", Hata: \") + (user.getHata()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/146/buggy-version/src.main.java.com.evolveum.polygon.connector.proik.ProIKConnector.java", "BodyUseAPI": ["com.evolveum.polygon.connector.proik.soap.ProUser.getHata()", "com.evolveum.polygon.connector.proik.soap.ProUser.getSonucKodu()", "com.evolveum.polygon.connector.proik.soap.ProUser.getSonucKodu()"], "Fixed commit": "ccecb7a0f17e610c051dc1054fc7e23b6bca6cb6", "Url": "https://api.github.com/repos/Evolveum/connector-proik", "Date": "2016-07-25T05:13:52Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tachyon.client.WritableBlockChannel.write(java.nio.ByteBuffer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (r > 0) { mWritten.addAndGet(r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6631/buggy-version/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicLong.addAndGet(int)"], "Fixed commit": "841d4f1aab750bf0c34c6302e50a9747d45d6b12", "Url": "https://api.github.com/repos/dcapwell/tachyon", "Date": "2014-09-11T03:46:38Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ImageView.getMaxHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newImageSize <= (maxImageSize / 2)) { imageView.getLayoutParams().height = newImageSize - 5; imageView.getLayoutParams().width = newImageSize - 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6188/buggy-version/app.src.main.java.com.fatburner.fatburner.Water.java", "BodyUseAPI": [], "Fixed commit": "0cca99e40181339d7af4c18a05c80b9c2e2e555a", "Url": "https://api.github.com/repos/steperchuk/FatBurner", "Date": "2017-11-01T20:15:54Z"},
{"Line": "=>1071", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.voltdb.catalog.CatalogDiffEngine.checkAddDropIfTableIsEmptyWhitelist(org.voltdb.catalog.CatalogType,org.voltdb.catalog.CatalogDiffEngine.ChangeType)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (response != null) { responseList = new java.util.ArrayList<>(); responseList.add(response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2113/buggy-version/src.catgen.in.javasrc.CatalogDiffEngine.java", "BodyUseAPI": ["java.util.List<java.lang.String[]>.add(java.lang.String[])"], "Fixed commit": "c18ad8e23cfd745c16a27d538167653f803dfc04", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2015-07-02T21:05:27Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.droidlover.xdroidmvp.net.RequestHandler.onAfterRequest(okhttp3.Response,cn.droidlover.xdroidmvp.net.Chain)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tmp != null) { return tmp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/9057/buggy-version/mvp.src.main.java.cn.droidlover.xdroidmvp.net.XInterceptor.java", "BodyUseAPI": [], "Fixed commit": "38550972a04434b79d7229a61581b666e5fe2e2e", "Url": "https://api.github.com/repos/limedroid/XDroidMvp", "Date": "2017-07-04T15:26:28Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.http.ResponseEntity.getBody()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == responseBody) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1588/buggy-version/rdap-webapp.src.main.java.org.restfulwhois.rdap.filters.queryFilter.CustomColumnPolicyQueryFilter.java", "BodyUseAPI": [], "Fixed commit": "091459c4b0b0a8ed926d6682fd9f57f6e899ca67", "Url": "https://api.github.com/repos/cnnic/rdap", "Date": "2014-11-14T05:49:13Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.http.ResponseEntity.getBody()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (responseBody instanceof org.restfulwhois.rdap.core.common.model.ErrorMessage) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1588/buggy-version/rdap-webapp.src.main.java.org.restfulwhois.rdap.filters.queryFilter.CustomColumnPolicyQueryFilter.java", "BodyUseAPI": [], "Fixed commit": "091459c4b0b0a8ed926d6682fd9f57f6e899ca67", "Url": "https://api.github.com/repos/cnnic/rdap", "Date": "2014-11-14T05:49:13Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type.equals(\"banner\")) { resourceId = getResources().getIdentifier(resourceName, \"drawable\", getPackageName()); }else { resourceId = getResources().getIdentifier(resourceName, \"raw\", getPackageName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/2347/buggy-version/app.src.main.java.com.example.laura.newmog.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "20140869ec3f7336c49359b272e3a4d9a2052ffa", "Url": "https://api.github.com/repos/sdspacecowboy/jandj_podcast", "Date": "2015-09-14T18:58:38Z"},
{"Line": "=>3475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.enough.polish.ui.Container.minimumDragDistance) == 0) { de.enough.polish.ui.Container.minimumDragDistance = (java.lang.Math.min(de.enough.polish.ui.Display.getScreenWidth(), de.enough.polish.ui.Display.getScreenHeight())) / 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3410/buggy-version/enough-polish-j2me.source.src.de.enough.polish.ui.Container.java", "BodyUseAPI": [], "Fixed commit": "1235ae32dd5404c150f7f0518ca95db05d8a4b07", "Url": "https://api.github.com/repos/Enough-Software/j2mepolish", "Date": "2011-11-17T21:19:26Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataAtPos.getNicknameEn()) != null) { title.setText(((((dataAtPos.getFullNameEn()) + \" (\") + (dataAtPos.getNicknameEn())) + \")\")); }else { title.setText(dataAtPos.getFullNameEn()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/5170/buggy-version/app.src.main.java.com.appman.intern.adapters.ContactListAdapter.java", "BodyUseAPI": ["com.appman.intern.models.AppContactData.getFullNameEn()", "com.appman.intern.models.AppContactData.getNicknameEn()", "android.widget.TextView.setText(dataAtPos.getFullNameEn())", "com.appman.intern.models.AppContactData.getFullNameEn()", "android.widget.TextView.setText(((((dataAtPos.getFullNameEn()) + \" (\") + (dataAtPos.getNicknameEn())) + \")\"))"], "Fixed commit": "f63870d3a9ceedf3d6a22146a581b80518bdfc4f", "Url": "https://api.github.com/repos/ultimagz/AppManHR", "Date": "2016-07-14T17:37:41Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.kylin.storage.tuple.TupleInfo.getDataType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((\"integer\".equals(dataType)) && (!(fieldValue instanceof java.lang.Integer))) { fieldValue = ((java.lang.Number) (fieldValue)).intValue(); }else if ((\"float\".equals(dataType)) && (fieldValue instanceof java.math.BigDecimal)) { fieldValue = ((java.math.BigDecimal) (fieldValue)).floatValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8285/buggy-version/storage.src.main.java.org.apache.kylin.storage.tuple.Tuple.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "4f6869e1f1f6b2ed22e6d3b638a4048905d27e49", "Url": "https://api.github.com/repos/KylinOLAP/Kylin", "Date": "2015-03-13T18:24:29Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listOfAllTasks) != null) for (EzTask task1 : listOfAllTasks) if ((task1.getId()) > largeTaskId) largeTaskId = task1.getId();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7481/buggy-version/src.EzStorage.java", "BodyUseAPI": [], "Fixed commit": "1a565c270e796d74191249a57972e1318936f2a6", "Url": "https://api.github.com/repos/cs2103aug2014-t09-3j/main", "Date": "2014-11-06T07:02:19Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (largeTaskId != ((getLargestId()) - 1)) setLargestId((largeTaskId + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7481/buggy-version/src.EzStorage.java", "BodyUseAPI": ["EzStorage.setLargestId(int)"], "Fixed commit": "1a565c270e796d74191249a57972e1318936f2a6", "Url": "https://api.github.com/repos/cs2103aug2014-t09-3j/main", "Date": "2014-11-06T07:02:19Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.resources.IFile.getFullPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (project.getBuildFolder().getFullPath().isPrefixOf(filePath)) { segments = project.getBuildFolder().getFullPath().segmentCount(); }else { segments = (project.getSourceFolder().getFullPath().segmentCount()) + (project.getComposer().createFolderForFeatures() ? 1 : 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6927/buggy-version/plugins.de.ovgu.featureide.core.src.de.ovgu.featureide.core.fstmodel.FSTModel.java", "BodyUseAPI": ["project.getBuildFolder().getFullPath()", "de.ovgu.featureide.core.IFeatureProject.getBuildFolder()", "de.ovgu.featureide.core.IFeatureProject.getComposer()", "project.getComposer().createFolderForFeatures()", "project.getBuildFolder().getFullPath().segmentCount()", "project.getSourceFolder().getFullPath().segmentCount()", "de.ovgu.featureide.core.IFeatureProject.getSourceFolder()", "project.getSourceFolder().getFullPath()"], "Fixed commit": "f4d5154d077dac7721e312241380b574f4098d4d", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2016-07-22T10:41:44Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(object.getString(\"beaconId\").equals(\"null\"))) { java.lang.String[] beaconsIds = object.getJSONObject(\"beacon\").getString(\"uuid\").split(\":\"); beaconNotificationsManager.addNotification(new com.kaoba.expocr.estimote.Beacon(beaconsIds[0], java.lang.Integer.parseInt(beaconsIds[1]), java.lang.Integer.parseInt(beaconsIds[2])), object.getString(\"nombre\"), object.getString(\"tipo\"), object.getString(\"brouchureId\")); android.util.Log.d(\"Ne\", object.getJSONObject(\"beacon\").getString(\"uuid\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7362/buggy-version/ExpoCR.app.src.main.java.com.kaoba.expocr.estimote.BeaconAppManager.java", "BodyUseAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "object.getJSONObject(\"beacon\").getString(\"uuid\").split(java.lang.String)", "object.getJSONObject(\"beacon\").getString(java.lang.String)", "object.getJSONObject(\"beacon\").getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "com.kaoba.expocr.estimote.BeaconNotificationsManager.addNotification(com.kaoba.expocr.estimote.Beacon,object.getString(\"nombre\"),object.getString(\"tipo\"),object.getString(\"brouchureId\"))", "org.json.JSONObject.getJSONObject(java.lang.String)", "android.util.Log.d(java.lang.String,object.getJSONObject(\"beacon\").getString(\"uuid\"))"], "Fixed commit": "e31f9e7fbf8a26977ce6ef59da5f7367db421794", "Url": "https://api.github.com/repos/K-oba/ExpoApp", "Date": "2017-08-07T04:48:21Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(x)) >= (Main.GamePanel.WIDTH)) { x = dx; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6087/buggy-version/src.TileMap.Background.java", "BodyUseAPI": [], "Fixed commit": "21b8805d71d86dfe89271468ca80d71069ca1f6a", "Url": "https://api.github.com/repos/bakulevalena/The-Christmas-adventure", "Date": "2016-11-08T21:31:55Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(src instanceof org.spongepowered.api.entity.living.player.Player)) { pb.linesPerPage((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8261/buggy-version/src.main.java.io.github.nucleuspowered.nucleus.modules.warp.commands.ListWarpCommand.java", "BodyUseAPI": [], "Fixed commit": "b25414d5b2fd2400dc683a9ddf22349389a866b2", "Url": "https://api.github.com/repos/NucleusPowered/Nucleus", "Date": "2016-05-20T19:17:16Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(src instanceof org.spongepowered.api.entity.living.player.Player)) { pb.linesPerPage((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8261/buggy-version/src.main.java.io.github.nucleuspowered.nucleus.modules.rules.commands.RulesCommand.java", "BodyUseAPI": [], "Fixed commit": "b25414d5b2fd2400dc683a9ddf22349389a866b2", "Url": "https://api.github.com/repos/NucleusPowered/Nucleus", "Date": "2016-05-20T19:17:16Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isLoaded(module)) { _modules.get(module).getFlexoFrame().toFront(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6766/buggy-version/flexodesktop.GUI.flexo.src.main.java.org.openflexo.module.ModuleLoader.java", "BodyUseAPI": ["_modules.get(module).getFlexoFrame()", "java.util.Map<java.lang.Module, org.openflexo.module.FlexoModule>.get(java.lang.Module)", "_modules.get(module).getFlexoFrame().toFront()"], "Fixed commit": "ad33073cbcc481526be6308583b6cb5e879ec421", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-02-08T17:57:21Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context instanceof android.app.Activity) { ((android.app.Activity) (context)).overridePendingTransition(options.enterAnim, options.exitAnim); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/841/buggy-version/saf-router.src.main.java.com.safframework.router.Router.java", "BodyUseAPI": [], "Fixed commit": "b4cd667c170abb9bb0dced05a743c643f705ee3b", "Url": "https://api.github.com/repos/fengzhizi715/SAF-Kotlin-Router", "Date": "2017-08-26T04:43:55Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (connectedApps != null) { for (android.os.Bundle appInfo : connectedApps) { appInfo.setClassLoader(com.o3dr.services.android.lib.drone.connection.ConnectionParameter.class.getClassLoader()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1062/buggy-version/ClientLib.mobile.src.main.java.com.o3dr.android.client.ControlTower.java", "BodyUseAPI": [], "Fixed commit": "ebf15ec64fff29c20a57bc57948e1e9ad00863c1", "Url": "https://api.github.com/repos/dronekit/dronekit-android", "Date": "2015-02-08T23:26:23Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<model.State>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (s.equals(this.currState)) this.currState = this.stateStack.pop(); else this.currState = s;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7991/buggy-version/JavaEx3.src.model.AbsModel.java", "BodyUseAPI": [], "Fixed commit": "6da412165cb9f74aebab5f3926bef54bc710fc63", "Url": "https://api.github.com/repos/miri86kn/JAVA_Ex3", "Date": "2014-04-24T20:12:37Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((arg.args.size()) > 0) { currentOp = stack.peek(); currentOp.add(arg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6271/buggy-version/src.QryEval.java", "BodyUseAPI": ["Qryop.add(Qryop)"], "Fixed commit": "87b6e9d004571fbc1d18aeaf56237c899d1fb7fc", "Url": "https://api.github.com/repos/KyleMao/search-engine", "Date": "2015-03-31T00:46:55Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.entity.players.Player.getCandyData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((candyData.size()) > 0) { data = candyData.get(0); }else { return \"not\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6146/buggy-version/src.main.java.model.CandyShop.java", "BodyUseAPI": ["java.util.ArrayList<int[]>.get(int)"], "Fixed commit": "1f6baca6a04d74438a05e693c1dd70f1984b4f9a", "Url": "https://api.github.com/repos/mightoz/Killer-kidz", "Date": "2015-05-30T19:25:06Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enemy.enemyIsDead()) == true) { Chest chest = enemy.treasure.chest; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3908/buggy-version/src.GamePlay.java", "BodyUseAPI": [], "Fixed commit": "d80809ffc39bde7d8d81d8ad8c7d17f279c2e912", "Url": "https://api.github.com/repos/adamfollmer/DiceGame", "Date": "2016-03-09T19:23:32Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_bgs) != null) throw new java.lang.IllegalArgumentException(\"Missing vector of penalties (rho) in beta_constraints file.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1052/buggy-version/src.main.java.hex.glm.GLM2.java", "BodyUseAPI": [], "Fixed commit": "8e0e38300d5bdd9b293f3872b799502619d216aa", "Url": "https://api.github.com/repos/h2oai/h2o-2", "Date": "2015-03-02T22:08:15Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ttl) == null) return us.dot.its.jpo.ode.plugin.SituationDataWarehouse.SDW.TimeToLive.THIRTYMINUTES;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/7591/buggy-version/jpo-ode-plugins.src.main.java.us.dot.its.jpo.ode.plugin.SituationDataWarehouse.java", "BodyUseAPI": [], "Fixed commit": "b00fb082412c75813b30c99033322d9044906a80", "Url": "https://api.github.com/repos/usdot-jpo-ode/jpo-ode", "Date": "2017-09-25T15:23:43Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((analogClock.getVisibility()) == (android.view.View.VISIBLE)) { whichClockIsVisible = \"analog\"; }else { whichClockIsVisible = \"digital\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6397/buggy-version/app.src.main.java.fr.neamar.kiss.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e98471d66be0530e1663a5a7a6ea2d8d7fde1a93", "Url": "https://api.github.com/repos/theevanelement/Apollo-Launcher", "Date": "2016-03-23T21:33:13Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.jaychang.srv.Utils.isScrollable(this)) { setOnTouchListener(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/1457/buggy-version/library.src.main.java.com.jaychang.srv.SimpleRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "02bdcbf53a2218b3df5341d4867cdd52992c46d4", "Url": "https://api.github.com/repos/jaychang0917/SimpleRecyclerView", "Date": "2017-02-09T10:03:44Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (getDeckClassId == (-1)) { java.lang.System.out.println(\"USING DEFAULT CLASS FOR STUDENT IN GET STUDENT DECK.\"); getDeckClassId = edu.virginia.bookmark.DatabaseManager.getClassContainingStudent(getDeckStudentId); if (getDeckClassId == (-1)) { return new edu.virginia.bookmark.ResponseInfo(400, (\"Could not find class containing student with id #\" + getDeckStudentId)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3287/buggy-version/src.edu.virginia.bookmark.BookmarkServlet.java", "BodyUseAPI": [], "Fixed commit": "14abb5b6b8bca970f342d6f4465e99a6cf6e2323", "Url": "https://api.github.com/repos/tws2xa/BookmarkServer", "Date": "2016-01-08T07:24:46Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(PROCESSING_SCRIPTS)) { if (sp.topPriority) { scripts.add(0, sp); }else { scripts.add(sp); } }else { toExecute.add(sp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8397/buggy-version/zildo.src.main.java.zildo.fwk.script.command.ScriptExecutor.java", "BodyUseAPI": [], "Fixed commit": "9d483b58111c89ed77d7bac6b4717cf59c95bef3", "Url": "https://api.github.com/repos/tchegito/zildo", "Date": "2017-06-22T19:11:41Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.groovy.eclipse.codeassist.processors.GroovyProposalTypeSearchRequestor.proposeConstructor(char[],int,char[],char[][],char[][],int,char[],int,int,char[],char[],boolean,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (constructorProposal != null) { proposals.add(constructorProposal); if (contextOnly) { org.codehaus.groovy.ast.ClassNode resolved = resolver.resolve(java.lang.String.valueOf(fullyQualifiedName)); if (resolved != null) { java.util.List<org.codehaus.groovy.ast.ConstructorNode> constructors = resolved.getDeclaredConstructors(); if ((constructors != null) && ((constructors.size()) == 1)) { org.codehaus.groovy.ast.ConstructorNode constructor = constructors.get(0); org.codehaus.groovy.ast.Parameter[] parameters = constructor.getParameters(); if ((parameters == null) || ((parameters.length) == 0)) { proposals.remove(constructorProposal); for (org.codehaus.groovy.ast.PropertyNode prop : resolved.getProperties()) { if ((!(\"metaClass\".equals(prop.getName()))) && (!(usedParams.contains(prop.getName())))) { org.codehaus.groovy.eclipse.codeassist.proposals.GroovyNamedArgumentProposal namedArgument = new org.codehaus.groovy.eclipse.codeassist.proposals.GroovyNamedArgumentProposal(prop.getName(), prop.getType(), null, java.lang.String.valueOf(simpleTypeName)); proposals.add(namedArgument.createJavaProposal(context, javaContext)); } } for (org.codehaus.groovy.ast.MethodNode meth : resolved.getMethods()) { if ((!(meth.isStatic())) && (org.eclipse.jdt.groovy.search.AccessorSupport.isSetter(meth))) { java.lang.String name = (java.lang.Character.toLowerCase(meth.getName().charAt(3))) + (meth.getName().substring(4)); if (((!(\"metaClass\".equals(name))) && (!(usedParams.contains(name)))) && ((resolved.getProperty(name)) == null)) { org.codehaus.groovy.eclipse.codeassist.proposals.GroovyNamedArgumentProposal namedArgument = new org.codehaus.groovy.eclipse.codeassist.proposals.GroovyNamedArgumentProposal(name, meth.getParameters()[0].getType(), null, java.lang.String.valueOf(simpleTypeName)); proposals.add(namedArgument.createJavaProposal(context, javaContext)); } } } } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/8926/buggy-version/ide.org.codehaus.groovy.eclipse.codeassist.completion.src.org.codehaus.groovy.eclipse.codeassist.processors.GroovyProposalTypeSearchRequestor.java", "BodyUseAPI": ["java.util.List<org.eclipse.jface.text.contentassist.ICompletionProposal>.add(org.eclipse.jface.text.contentassist.ICompletionProposal)", "java.util.List<org.eclipse.jface.text.contentassist.ICompletionProposal>.remove(org.eclipse.jface.text.contentassist.ICompletionProposal)"], "Fixed commit": "489479f187e408e49024a4209018b8ba3f6beb1e", "Url": "https://api.github.com/repos/groovy/groovy-eclipse", "Date": "2017-09-04T17:22:05Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) instanceof net.tridentsdk.server.player.TridentPlayer) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/6941/buggy-version/src.main.java.net.tridentsdk.server.entity.TridentEntity.java", "BodyUseAPI": [], "Fixed commit": "4f86d021f7138d7d0934718576b861f1a15fb208", "Url": "https://api.github.com/repos/lenis0012/Trident", "Date": "2014-12-19T08:56:25Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fiveSecsLessTimer) != null) { fiveSecsLessTimer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3222/buggy-version/app.src.main.java.mygames.lineball.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2b5433b4c920d78f8d45b1acbfd8f87c10334608", "Url": "https://api.github.com/repos/nicot95/LineBall", "Date": "2015-09-28T21:21:15Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) { timer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V132/3222/buggy-version/app.src.main.java.mygames.lineball.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2b5433b4c920d78f8d45b1acbfd8f87c10334608", "Url": "https://api.github.com/repos/nicot95/LineBall", "Date": "2015-09-28T21:21:15Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.numKeyBytes) != 0) { this.comparator.putNormalizedKey(record, this.currentSortIndexSegment, ((this.currentSortIndexOffset) + (eu.stratosphere.pact.runtime.sort.NormalizedKeySorter.OFFSET_LEN)), this.numKeyBytes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2700/buggy-version/stratosphere-runtime.src.main.java.eu.stratosphere.pact.runtime.sort.NormalizedKeySorter.java", "BodyUseAPI": [], "Fixed commit": "0942dbcddd351122a239d85b4f9d765efb265a8e", "Url": "https://api.github.com/repos/atsikiridis/stratosphere", "Date": "2014-03-12T10:26:55Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (iCoLand.tmpCuboidMap.containsKey(player.getName())) { mess.send(\"{}Changing selection height to full height.\"); iCoLand.tmpCuboidMap.get(player.getName()).setFullHeight(); int id = iCoLand.landMgr.intersectsExistingLand(iCoLand.tmpCuboidMap.get(player.getName())); if (id > 0) { mess.send(\"{ERR}Intersects existing land!\"); iCoLand.tmpCuboidMap.put(player.getName(), iCoLand.landMgr.getLandById(id).location); }else { mess.send(\"{}Selecting full height\"); } }else { mess.send(\"{ERR}No currently selected land.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1580/buggy-version/src.me.slaps.iCoLand.iCoLandCommandListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.getName()", "iCoLand.landMgr.intersectsExistingLand(iCoLand.tmpCuboidMap.get(player.getName()))", "iCoLand.tmpCuboidMap.get(player.getName())", "org.bukkit.entity.Player.getName()", "iCoLand.tmpCuboidMap.get(player.getName()).setFullHeight()", "iCoLand.tmpCuboidMap.put(player.getName(),iCoLand.landMgr.getLandById(id).location)", "org.bukkit.entity.Player.getName()", "iCoLand.tmpCuboidMap.get(player.getName())"], "Fixed commit": "b7c7fa944ec38d540dbe97dfe6ec8e5d786141c4", "Url": "https://api.github.com/repos/iConomy/iCoLand", "Date": "2011-04-18T05:33:42Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contentsToRemove == null) { controller.addException(new news.api.vault.VaultException(\"GUIContent to remove are null.\")); }else { for (final news.api.implementation.GUIContent content : contentsToRemove) { try { vault.removeContent(content); } catch (news.api.vault.VaultException e) { controller.addException(e); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/22/buggy-version/api.src.main.java.news.api.vault.implementation.AbstractContentRemovalThread.java", "BodyUseAPI": [], "Fixed commit": "655f0b8c514e5ae7754ca6e1643bb5b71a95189e", "Url": "https://api.github.com/repos/thebrunner/news", "Date": "2012-07-30T20:30:04Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.specProperties.containsKey(key)) && (this.commonProperties.get(key).equals(this.specProperties.get(key)))) { this.specProperties.remove(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6090/buggy-version/gobblin-api.src.main.java.gobblin.configuration.State.java", "BodyUseAPI": [], "Fixed commit": "f23df6dd136e9a62d3fb16520c18356a8a425545", "Url": "https://api.github.com/repos/PKRoma/gobblin", "Date": "2017-04-06T16:48:32Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.reactome.web.elv.client.manager.ga.GAManager.TRACK_GA_MANAGER) && (org.reactome.web.elv.client.common.utils.Console.VERBOSE)) { org.reactome.web.elv.client.common.utils.Console.info(((((org.reactome.web.elv.client.manager.ga.GAManager.PREFIX) + \"Event tracked: [ Page name changed to : \\\"\") + (event.getTitle())) + \"\\\"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3211/buggy-version/src.main.java.org.reactome.web.elv.client.manager.ga.GAManager.java", "BodyUseAPI": [], "Fixed commit": "6a9122b309f8221570422805b8ec122e5dd86d74", "Url": "https://api.github.com/repos/reactome/browser-curator", "Date": "2015-02-02T16:14:42Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gaTrackerActive) { uk.ac.ebi.pwp.utils.analytics.client.GATracker.trackPageview(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3211/buggy-version/src.main.java.org.reactome.web.elv.client.manager.ga.GAManager.java", "BodyUseAPI": [], "Fixed commit": "6a9122b309f8221570422805b8ec122e5dd86d74", "Url": "https://api.github.com/repos/reactome/browser-curator", "Date": "2015-02-02T16:14:42Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentParticlesRadius) != (this.lastParticlesRadius)) { if ((this.lastTextureSet) == null) { this.tmpTextureSet.textures[0] = texture; this.lastTextureSet = tmpTextureSet; } this.flush(); this.lastParticlesRadius = this.currentParticlesRadius; }else if (((this.lastTextureSet) == null) || (texture != (this.lastTextureSet.textures[0]))) { this.flush(); this.tmpTextureSet.textures[0] = texture; this.lastTextureSet = tmpTextureSet; }else { remainingVertices -= this.idx; if (remainingVertices == 0) { this.flush(); remainingVertices = this.vertices.length; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/74/buggy-version/core.src.com.thommil.libgdx.runtime.graphics.renderer.particles.TexturedParticlesBatchRenderer.java", "BodyUseAPI": [], "Fixed commit": "1d7690e8bf0a22ae57f2f33bf3763879eea0cd53", "Url": "https://api.github.com/repos/Thommil/GameRuntime", "Date": "2016-04-16T22:12:05Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentParticlesRadius) != (this.lastParticlesRadius)) { if ((this.lastTextureSet) == null) { this.lastTextureSet = textureSet; } this.flush(); this.lastParticlesRadius = this.currentParticlesRadius; }else if (textureSet != (this.lastTextureSet)) { this.flush(); this.lastTextureSet = textureSet; }else { remainingVertices -= this.idx; if (remainingVertices == 0) { this.flush(); remainingVertices = this.vertices.length; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/74/buggy-version/core.src.com.thommil.libgdx.runtime.graphics.renderer.particles.TexturedParticlesBatchRenderer.java", "BodyUseAPI": [], "Fixed commit": "1d7690e8bf0a22ae57f2f33bf3763879eea0cd53", "Url": "https://api.github.com/repos/Thommil/GameRuntime", "Date": "2016-04-16T22:12:05Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getUrl()) == null) { return (org.sparkleshare.android.utils.ExternalDirectory.getExternalRootDirectory()) + (item.getTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5911/buggy-version/src.org.sparkleshare.android.utils.ExternalDirectory.java", "BodyUseAPI": ["org.sparkleshare.android.ui.ListEntryItem.getTitle()"], "Fixed commit": "d50aaf2adce5d75b2d5a0037fef9533539c54cf9", "Url": "https://api.github.com/repos/NewProggie/SparkleShare-Android", "Date": "2013-02-22T18:56:46Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.agiletec.plugins.jacms.aps.system.services.dispenser.IContentDispenser.getAuthorizationInfo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == authInfo) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7517/buggy-version/entando-plugin-jpcontentfeedback.src.main.java.com.agiletec.plugins.jpcontentfeedback.aps.internalservlet.feedback.ContentFeedbackAction.java", "BodyUseAPI": [], "Fixed commit": "12e4952b08840ec90d91b3cf43a320dacd832dbc", "Url": "https://api.github.com/repos/entando/entando-plugins-parent", "Date": "2013-03-08T13:23:34Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.entityManagerCriteria) != null) { return this.entityManagerCriteria.setResultTransformer(resultTransformer); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3491/buggy-version/framework.impl.jboss-hibernate.src.cc.alcina.framework.entity.impl.cache.MemCacheCriteria.java", "BodyUseAPI": [], "Fixed commit": "d5c66dc351953ff1e1d6f18065a723caac745a52", "Url": "https://api.github.com/repos/nevella/alcina", "Date": "2015-08-18T19:22:24Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSlideShowSize()) > 0) { return slideList.get(slideIndex); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4939/buggy-version/SeniorSlideshowProject.src.Slides.SlideShowStateMachine.java", "BodyUseAPI": [], "Fixed commit": "d91e161c598c9f4c30fe8c4cb75315a85cd98129", "Url": "https://api.github.com/repos/WilliamParsons/SlideShow", "Date": "2017-04-15T18:28:52Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flag) == 0) { loadData(((java.util.ArrayList<com.example.amitdasgupta.newsappusingretrofit.model.Sources>) (com.example.amitdasgupta.newsappusingretrofit.MainActivity.sources))); flag = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2238/buggy-version/app.src.main.java.com.example.amitdasgupta.newsappusingretrofit.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "dd3810807469f09db01f32c8f870b670efbddcae", "Url": "https://api.github.com/repos/amitdasgupta/NewsAppUsingRetrofit", "Date": "2017-10-05T08:49:29Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) > 0) { ipAddress = args[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4794/buggy-version/src.main.net.bieli.bot.IpBot.java", "BodyUseAPI": [], "Fixed commit": "dc8702c1860466795a065716663019d099a91f07", "Url": "https://api.github.com/repos/bieli/java--http-header-ip-bot", "Date": "2014-03-01T20:27:46Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (verbose) { java.lang.System.out.println((\"ipAddress: \" + ipAddress)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4794/buggy-version/src.main.net.bieli.bot.IpBot.java", "BodyUseAPI": [], "Fixed commit": "dc8702c1860466795a065716663019d099a91f07", "Url": "https://api.github.com/repos/bieli/java--http-header-ip-bot", "Date": "2014-03-01T20:27:46Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (verbose) { java.lang.System.out.println((\"rawHeaders: \\n\" + rawHeaders)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4794/buggy-version/src.main.net.bieli.bot.IpBot.java", "BodyUseAPI": [], "Fixed commit": "dc8702c1860466795a065716663019d099a91f07", "Url": "https://api.github.com/repos/bieli/java--http-header-ip-bot", "Date": "2014-03-01T20:27:46Z"},
{"Line": "=>1716", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wyil.lang.Type.isSubtype(Type.T_STRING,wyil.lang.Type)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!lhs_str) { checkIsSubtype(Type.T_CHAR, lhs, context); }else if (!rhs_str) { checkIsSubtype(Type.T_CHAR, rhs, context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/645/buggy-version/modules.wyc.src.wyc.builder.FlowTypeChecker.java", "BodyUseAPI": [], "Fixed commit": "13d9c8b448324b1b03fbce84885da7e2b312b509", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2014-11-25T00:49:30Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((terminus1.getOutboundLanes().size()) == 0) || ((terminus2.getInboundLanes().size()) == 0)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6703/buggy-version/src.org.pavement.intersections.IntersectionStrategy.java", "BodyUseAPI": [], "Fixed commit": "9e883cc483c16f4fa0e509d408e908b32c09d29a", "Url": "https://api.github.com/repos/LiviasSecret/Pavement", "Date": "2014-05-15T00:02:30Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInited)) { initData(); isInited = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/131/buggy-version/src.main.java.com.github.shynoo.ooad.service.UserService.java", "BodyUseAPI": [], "Fixed commit": "ac6c8d33a35bc312f2c628c3168b0bf0492c232a", "Url": "https://api.github.com/repos/Shynoo/oo-project-server", "Date": "2016-12-29T13:53:09Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(new java.io.File(arg_mod).isAbsolute())) && (!(new java.io.File(arg_mod).exists()))) && (new java.io.File((\"../\" + arg_mod)).exists())) arg_mod = \"../\" + arg;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6650/buggy-version/src.main.java.dpfmanager.shell.modules.interfaces.CommandLine.java", "BodyUseAPI": [], "Fixed commit": "1621c0ea33fac9a5a5aab3abd0daa565a71a32d0", "Url": "https://api.github.com/repos/EasyinnovaSL/DPFManager", "Date": "2015-08-24T11:08:04Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((((this.start_arabic_unit_cn) != (-1)) && ((this.end_arabic_unit_cn) != (-1))) && ((this.start_arabic_unit_num) != (-1))) && ((this.end_arabic_unit_num) != (-1))) && (this.matche)) { org.wltea.analyzer.core.Lexeme newLexeme = new org.wltea.analyzer.core.Lexeme(context.getBufferOffset(), this.start_arabic_unit_num, (((this.end_arabic_unit_cn) - (this.start_arabic_unit_num)) + 1), Lexeme.TYPE_ARABIC_COUNT); context.addLexeme(newLexeme); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2893/buggy-version/src.org.wltea.analyzer.core.CN_QuantifierSegmenter.java", "BodyUseAPI": [], "Fixed commit": "01ae7a99857bd7606672efb04eec474f465b700c", "Url": "https://api.github.com/repos/yida-lxw/IK", "Date": "2016-09-14T03:09:54Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (task.getTaskType().equals(ParsedCommand.TaskType.DEADLINE_TASK)) { task = ((logic.Task) (gson.fromJson(currentLine, logic.DeadlineTask.class))); }else if (task.getTaskType().equals(ParsedCommand.TaskType.EVENT)) { task = ((logic.Task) (gson.fromJson(currentLine, logic.Event.class))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/614/buggy-version/storage.Storage.java", "BodyUseAPI": ["logic.Task.getTaskType()", "task.getTaskType().equals(ParsedCommand.TaskType.EVENT)"], "Fixed commit": "96acb7857af1704fedf3c8c82b5c34245cd47920", "Url": "https://api.github.com/repos/CS2103-Aug2015-w15-4j/main", "Date": "2015-10-27T03:17:57Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fm) != null) { return ((com.sefford.fraggle.interfaces.FraggleFragment) (fm.findFragmentByTag(tag))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3600/buggy-version/fraggle.src.main.java.com.sefford.fraggle.FraggleManager.java", "BodyUseAPI": [], "Fixed commit": "d1b65a99ecc3c3faeef8f288ca6225bbf475c3a3", "Url": "https://api.github.com/repos/Sefford/fraggle", "Date": "2016-08-23T09:42:15Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.oracle.truffle.api.frame.FrameInstance.getFrame(FrameAccess.MATERIALIZE,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((materialized.getFrameDescriptor().findFrameSlot(som.vm.Universe.frameOnStackSlotName())) == null) { com.oracle.truffle.api.frame.FrameSlot frameOnStackMarker = materialized.getFrameDescriptor().addFrameSlot(som.vm.Universe.frameOnStackSlotName(), FrameSlotKind.Object); frame.setObject(frameOnStackMarker, new som.interpreter.FrameOnStackMarker()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1120/buggy-version/src.som.interpreter.nodes.ArgumentReadNode.java", "BodyUseAPI": ["materialized.getFrameDescriptor().addFrameSlot(som.vm.Universe.frameOnStackSlotName(),FrameSlotKind.Object)", "com.oracle.truffle.api.frame.Frame.getFrameDescriptor()"], "Fixed commit": "89411375789e8c33725b2b3c5adeaa7f4f1ed71f", "Url": "https://api.github.com/repos/charig/TruffleMATE", "Date": "2016-06-04T19:23:54Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((mRepeatType) != 0) && ((java.lang.Integer.parseInt(times)) == (mTimesShown))) && (!(mForeverSwitch.isChecked()))) { android.widget.Toast.makeText(getApplicationContext(), getResources().getString(R.string.toast_higher_number), Toast.LENGTH_SHORT).show(); mImageWarningShow.setVisibility(View.VISIBLE); }else if (mTitleEditText.getText().toString().trim().isEmpty()) { android.widget.Toast.makeText(getApplicationContext(), getResources().getString(R.string.toast_title_empty), Toast.LENGTH_SHORT).show(); com.bleyl.recurrence.util.AnimationUtil.shakeView(mTitleEditText, getApplicationContext()); }else { saveNotification(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9076/buggy-version/app.src.main.java.com.bleyl.recurrence.ui.EditActivity.java", "BodyUseAPI": [], "Fixed commit": "9a8dbd74acfa4d758f200b81369c02399e512373", "Url": "https://api.github.com/repos/TheNephilim88/Recurrence", "Date": "2015-08-20T15:34:10Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (extras == null) { android.util.Log.d(\"Extras in Campsite: \", \" NULL\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3001/buggy-version/app.src.main.java.com.example.sombra.myapplication.Campsite.java", "BodyUseAPI": [], "Fixed commit": "48c0538a27a63ca21d2dd31c97197bd844660a3b", "Url": "https://api.github.com/repos/kristofferbjorklund85/campsites", "Date": "2017-11-24T13:04:47Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (extras == null) { android.util.Log.d(\"Extras in Maps: \", \" NULL\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3001/buggy-version/app.src.main.java.com.example.sombra.myapplication.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "48c0538a27a63ca21d2dd31c97197bd844660a3b", "Url": "https://api.github.com/repos/kristofferbjorklund85/campsites", "Date": "2017-11-24T13:04:47Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numShards.decrementAndGet()) <= 0) { onAllShardsFinished(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7213/buggy-version/sql.src.main.java.io.crate.operation.collect.ShardCollectFuture.java", "BodyUseAPI": [], "Fixed commit": "54d2d02e45595dd6b6545085f5c3e30f226798fa", "Url": "https://api.github.com/repos/crate/crate", "Date": "2014-11-25T20:22:15Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(com.google.gson.JsonElement,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9149/buggy-version/models.src.org.idiginfo.docsvc.svcapi.springer.SpringerService.java", "BodyUseAPI": [], "Fixed commit": "472bbeeb6bc7ef010542613527bd2109ffc5c21d", "Url": "https://api.github.com/repos/idiginfo/citagora", "Date": "2013-04-02T18:01:22Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fieldMapping.fields.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((i.dataType().getTypeCategory()) == (DataTypes.TypeCategory.ENUM)) || ((i.dataType().getTypeCategory()) == (DataTypes.TypeCategory.PRIMITIVE))) { }else { throw new org.apache.atlas.AtlasException(java.lang.String.format(\"Unknown datatype %s\", i.dataType())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5750/buggy-version/typesystem.src.main.java.org.apache.atlas.typesystem.persistence.StructInstance.java", "BodyUseAPI": ["org.apache.atlas.typesystem.types.AttributeInfo.dataType()", "java.lang.String.format(java.lang.String,i.dataType())"], "Fixed commit": "42968cc230a473c2d2fc85c272f09110304fba23", "Url": "https://api.github.com/repos/jnhagelberg/incubator-atlas", "Date": "2016-04-19T13:30:03Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (returnPotentialCandidates) { return ((T) (getRootCheck(map))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/778/buggy-version/XText.org.xtext.urdf.dsl.src.org.xtext.urdf.validation.CyclesValidator.java", "BodyUseAPI": [], "Fixed commit": "a00ceadcf3d040c4ad2e202925300793eaad3427", "Url": "https://api.github.com/repos/susieagerholm/URDF2", "Date": "2017-08-20T12:13:05Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.block.Block.getBlockFromName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (b == null) { TFC.log.warn((\"Block not found for dungeon generation: \" + (blockString[0]))); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4250/buggy-version/src.API.com.bioxx.jmapgen.dungeon.RoomSchematic.java", "BodyUseAPI": [], "Fixed commit": "9d29bd6428e07ba492c6322f1e3727068dc78555", "Url": "https://api.github.com/repos/Deadrik/TFC2", "Date": "2017-03-11T12:04:20Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (start != (-1)) { end = getEndIndex(start, token); tokens.add(new org.elasticsearch.index.analysis.url.Token(token, org.elasticsearch.index.analysis.URLPart.WHOLE, start, end)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5310/buggy-version/src.main.java.org.elasticsearch.index.analysis.url.URLTokenizer.java", "BodyUseAPI": ["java.util.List<org.elasticsearch.index.analysis.url.Token>.add(org.elasticsearch.index.analysis.url.Token)", "org.elasticsearch.index.analysis.url.URLTokenizer.getEndIndex(int,java.lang.String)"], "Fixed commit": "78a0286d80a598ea28547a6f6cd352a2907c02f1", "Url": "https://api.github.com/repos/jlinn/elasticsearch-analysis-url", "Date": "2017-09-25T21:59:47Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (targetParam != null) { try { target = java.net.URLDecoder.decode(targetParam, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { target = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4098/buggy-version/pubman.pubman_presentation.src.main.java.de.mpg.escidoc.pubman.desktop.EscidocLogin.java", "BodyUseAPI": [], "Fixed commit": "0084d59ddbf41c8db3778fe325bf620ddbbbe7bf", "Url": "https://api.github.com/repos/MPDL/PubMan", "Date": "2017-04-07T09:16:27Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.googlecode.lanterna.graphics.ThemedTextGraphics.getCharacter(upperRight.getColumn(),int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (tc != null) { characterToDraw = tc.getCharacter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1785/buggy-version/src.main.java.com.googlecode.lanterna.gui2.WindowShadowRenderer.java", "BodyUseAPI": ["com.googlecode.lanterna.gui2.TextCharacter.getCharacter()"], "Fixed commit": "f8c2e47cdcc86948a52647abd3b6e6ee5b58d481", "Url": "https://api.github.com/repos/cnVintage/lanterna", "Date": "2016-08-10T01:37:17Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.googlecode.lanterna.graphics.ThemedTextGraphics.getCharacter(int,lowerLeft.getRow())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (tc != null) { characterToDraw = tc.getCharacter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1785/buggy-version/src.main.java.com.googlecode.lanterna.gui2.WindowShadowRenderer.java", "BodyUseAPI": ["com.googlecode.lanterna.gui2.TextCharacter.getCharacter()"], "Fixed commit": "f8c2e47cdcc86948a52647abd3b6e6ee5b58d481", "Url": "https://api.github.com/repos/cnVintage/lanterna", "Date": "2016-08-10T01:37:17Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.googlecode.lanterna.graphics.ThemedTextGraphics.getCharacter(upperRight.getColumn(),int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (tc != null) { characterToDraw = tc.getCharacter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1785/buggy-version/src.main.java.com.googlecode.lanterna.gui2.WindowShadowRenderer.java", "BodyUseAPI": ["com.googlecode.lanterna.gui2.TextCharacter.getCharacter()"], "Fixed commit": "f8c2e47cdcc86948a52647abd3b6e6ee5b58d481", "Url": "https://api.github.com/repos/cnVintage/lanterna", "Date": "2016-08-10T01:37:17Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mProgressDialog) == null) mProgressDialog = new android.app.ProgressDialog(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8971/buggy-version/OrderProcessingApp.app.src.main.java.com.munchado.orderprocess.ui.activity.print.SearchPrinterActivity.java", "BodyUseAPI": [], "Fixed commit": "dc0ae45ab18edf1ac395da5cc7b97b5087fd84a5", "Url": "https://api.github.com/repos/deepakappdev/Munchado_order_process", "Date": "2017-06-15T05:35:43Z"},
{"Line": "=>537", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smi.travel.datalayer.dao.impl.ReceiveTableImpl.getReceivePeriod(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (advanceReceivePeriod != null) { receiptSummary.setObanktransfer(((advanceReceivePeriod.getBankTransfer()) != null ? java.lang.String.valueOf(advanceReceivePeriod.getBankTransfer()) : \"0.00\")); receiptSummary.setOcash(((advanceReceivePeriod.getCashAmount()) != null ? java.lang.String.valueOf(advanceReceivePeriod.getCashAmount()) : \"0.00\")); receiptSummary.setOchq(((advanceReceivePeriod.getChqAmount()) != null ? java.lang.String.valueOf(advanceReceivePeriod.getChqAmount()) : \"0.00\")); receiptSummary.setOcredit(((advanceReceivePeriod.getCreditAmount()) != null ? java.lang.String.valueOf(advanceReceivePeriod.getCreditAmount()) : \"0.00\")); }else { receiptSummary.setObanktransfer(\"0.00\"); receiptSummary.setOcash(\"0.00\"); receiptSummary.setOchq(\"0.00\"); receiptSummary.setOcredit(\"0.00\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5034/buggy-version/src.java.com.smi.travel.datalayer.dao.impl.ReceiveTableImpl.java", "BodyUseAPI": ["java.lang.String.valueOf(advanceReceivePeriod.getBankTransfer())", "com.smi.travel.datalayer.view.entity.CollectionView.setObanktransfer(((advanceReceivePeriod.getBankTransfer()) != null ? java.lang.String.valueOf(advanceReceivePeriod.getBankTransfer()) : \"0.00\"))", "java.lang.String.valueOf(advanceReceivePeriod.getCreditAmount())", "java.lang.String.valueOf(advanceReceivePeriod.getChqAmount())", "com.smi.travel.datalayer.entity.AdvanceReceivePeriod.getCreditAmount()", "com.smi.travel.datalayer.entity.AdvanceReceivePeriod.getBankTransfer()", "com.smi.travel.datalayer.view.entity.CollectionView.setOcredit(((advanceReceivePeriod.getCreditAmount()) != null ? java.lang.String.valueOf(advanceReceivePeriod.getCreditAmount()) : \"0.00\"))", "com.smi.travel.datalayer.view.entity.CollectionView.setOcash(((advanceReceivePeriod.getCashAmount()) != null ? java.lang.String.valueOf(advanceReceivePeriod.getCashAmount()) : \"0.00\"))", "java.lang.String.valueOf(advanceReceivePeriod.getCashAmount())", "com.smi.travel.datalayer.entity.AdvanceReceivePeriod.getCashAmount()", "com.smi.travel.datalayer.entity.AdvanceReceivePeriod.getCashAmount()", "com.smi.travel.datalayer.view.entity.CollectionView.setOchq(((advanceReceivePeriod.getChqAmount()) != null ? java.lang.String.valueOf(advanceReceivePeriod.getChqAmount()) : \"0.00\"))", "com.smi.travel.datalayer.entity.AdvanceReceivePeriod.getChqAmount()", "com.smi.travel.datalayer.entity.AdvanceReceivePeriod.getCreditAmount()", "com.smi.travel.datalayer.entity.AdvanceReceivePeriod.getBankTransfer()", "com.smi.travel.datalayer.entity.AdvanceReceivePeriod.getChqAmount()"], "Fixed commit": "2da7787c1f9803a3e78d270d6e1b3dcff27b6dad", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-12-28T11:23:47Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pircbotx.FeatureInterface.loadFeature(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (status == 1) { bot.log(((\"Feature '\" + featureName) + \"' is already loaded\"), \"server\"); }else if (status == 2) { bot.log(((\"Feature '\" + featureName) + \"' does not exist\"), \"server\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4582/buggy-version/src.org.pircbotx.FeatureInterface.java", "BodyUseAPI": [], "Fixed commit": "8ea2bade9726987b7c085c05112f0265809e8343", "Url": "https://api.github.com/repos/Heufneutje/HeufyBot", "Date": "2013-05-18T10:15:01Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((permission.getPermissionScope()) == (net.hawkengine.model.enums.PermissionScope.PIPELINE_GROUP)) && ((permission.getPermissionType()) == (net.hawkengine.model.enums.PermissionType.ADMIN))) { pipelineDefinition.setPermissionType(permission.getPermissionType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6388/buggy-version/Server.src.main.java.net.hawkengine.services.filters.EntityPermissionTypeService.java", "BodyUseAPI": ["net.hawkengine.model.payload.Permission.getPermissionType()", "net.hawkengine.services.filters.PipelineDefinition.setPermissionType(permission.getPermissionType())"], "Fixed commit": "d1d028a89f28084b170985aac602cf0ad5648d7d", "Url": "https://api.github.com/repos/rndsolutions/hawkcd", "Date": "2016-09-15T13:17:18Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getDateRangeType()) != null) { if (this.getDateRangeType().equals(\"LAST_MONTH\")) { this.setMonth(com.google.api.ads.adwords.jaxws.extensions.report.model.util.DateUtil.lastMonthInYearMonthFormat()); return \"-\" + (com.google.api.ads.adwords.jaxws.extensions.report.model.util.DateUtil.lastMonthInYearMonthFormat()); } if (this.getDateRangeType().equals(\"THIS_MONTH\")) { this.setMonth(com.google.api.ads.adwords.jaxws.extensions.report.model.util.DateUtil.formatYearMonth(org.joda.time.DateTime.now())); return \"-\" + (com.google.api.ads.adwords.jaxws.extensions.report.model.util.DateUtil.formatYearMonth(org.joda.time.DateTime.now())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2584/buggy-version/aw-report-model.src.main.java.com.google.api.ads.adwords.jaxws.extensions.report.model.entities.ReportBase.java", "BodyUseAPI": [], "Fixed commit": "3dc9ea7674ca26fce6ea222507a3c435a305795a", "Url": "https://api.github.com/repos/googleads/aw-reporting", "Date": "2013-12-02T14:26:20Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((month) != null) { return com.google.api.ads.adwords.jaxws.extensions.report.model.util.DateUtil.formatYearMonthDay(month); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2584/buggy-version/aw-report-model.src.main.java.com.google.api.ads.adwords.jaxws.extensions.report.model.entities.ReportBase.java", "BodyUseAPI": [], "Fixed commit": "3dc9ea7674ca26fce6ea222507a3c435a305795a", "Url": "https://api.github.com/repos/googleads/aw-reporting", "Date": "2013-12-02T14:26:20Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(keyOrder.contains(name))) keyOrder.add(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3556/buggy-version/src.main.java.com.mashape.unirest.request.body.MultipartBody.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "01056457611230e1c21b3128df85695878462dff", "Url": "https://api.github.com/repos/bingoohuang/unirest-java", "Date": "2015-06-16T06:27:34Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["logic.Navigation.getInnerJSON(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(element.containsKey(\"duration\"))) || (!(((org.json.simple.JSONObject) (element.get(\"duration\"))).containsKey(\"value\")))) return java.lang.Integer.MAX_VALUE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2829/buggy-version/src.logic.Navigation.java", "BodyUseAPI": [], "Fixed commit": "78efb7881d0cc80b4b537258c4e09ac702adb234", "Url": "https://api.github.com/repos/TechnionYP5777/SmartCity-ParkingManagement", "Date": "2017-01-15T23:51:06Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activePlayers.size()) != 1) { startFlop(game); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4986/buggy-version/src.poker.Hand.java", "BodyUseAPI": [], "Fixed commit": "e52f9d28105a2ea8ef757c77db1562fadd08472b", "Url": "https://api.github.com/repos/BrianLee608/PokerApp", "Date": "2015-09-06T19:52:22Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) != null) { adapter.setJobList(jobList); adapter.notifyDataSetChanged(); }else { setupRecyclerView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2350/buggy-version/app.src.main.java.com.zekisanmobile.petsitter2.fragment.sitter.JobListFragment.java", "BodyUseAPI": [], "Fixed commit": "6aca76ef7471a9961c348e779312b6dcf854ba72", "Url": "https://api.github.com/repos/zekisan/PetSitter2", "Date": "2016-05-07T23:21:04Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(players.contains(p))) { p.sendMessage((((Main.helper) + (org.bukkit.ChatColor.RED)) + \"Quit it you nigger.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4697/buggy-version/src.com.agodwin.hideseek.Arena.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage((((Main.helper) + (org.bukkit.ChatColor.RED)) + \"Quit it you nigger.\"))"], "Fixed commit": "68b1c14a0356708ed3c015cda4dec0e3884f3171", "Url": "https://api.github.com/repos/agodwin987/Hide-and-Seek-Plugin", "Date": "2013-03-26T01:53:19Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (childInstance != null) { return childInstance; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5925/buggy-version/src.main.java.com.thoughtworks.maomao.container.WheelContainer.java", "BodyUseAPI": [], "Fixed commit": "0c206ea287475695055044b497d6e0ed80fb41c4", "Url": "https://api.github.com/repos/maomaoliu/ioc-container", "Date": "2013-04-10T15:04:01Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thoughtworks.maomao.container.WheelFinder.findImplementation(java.lang.Class<T>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (childImplementation != null) { childInstance = createInstance(childImplementation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5925/buggy-version/src.main.java.com.thoughtworks.maomao.container.WheelContainer.java", "BodyUseAPI": ["com.thoughtworks.maomao.container.WheelContainer.createInstance(java.lang.Class)"], "Fixed commit": "0c206ea287475695055044b497d6e0ed80fb41c4", "Url": "https://api.github.com/repos/maomaoliu/ioc-container", "Date": "2013-04-10T15:04:01Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dozuki.ifixit.guide_create.ui.GuideCreateStepEditFragment.getGuideChanges()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((obj.getLines().size()) == 0) { org.holoeverywhere.widget.Toast.makeText(this, getResources().getString(R.string.guide_create_edit_must_add_line_content), Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4042/buggy-version/App.src.com.dozuki.ifixit.guide_create.ui.GuideCreateStepsEditActivity.java", "BodyUseAPI": [], "Fixed commit": "e8faa1cc5cf23fc52c4b2dc93a083f08baffb133", "Url": "https://api.github.com/repos/mpaddon/iFixitAndroid", "Date": "2013-03-14T04:32:53Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((chat_client.Client.message.indexOf(':')) < 0) { javax.swing.JOptionPane.showMessageDialog(null, \"Wrong message format\\n Use \\':\\' after nickname\"); }else { newMessage = chat_client.Protocol.createMessage(Protocol.privateMessage, from, chat_client.Client.message); chat_client.Client.appendTextToChatArea(((\"[private] \" + (chat_client.Client.message)) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5177/buggy-version/src.chat_client.Client.java", "BodyUseAPI": ["chat_client.Protocol.createMessage(Protocol.privateMessage,java.lang.String,java.lang.String)"], "Fixed commit": "c4fb13e0091327ef139a5ed5afe64ff40616877a", "Url": "https://api.github.com/repos/iedenis/Client", "Date": "2016-09-03T16:24:05Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((t >= 200) && (t < 300)) { timestamp = conn.getLastModified(); }else { throw new org.owasp.dependencycheck.utils.DownloadFailedException(\"HEAD request returned a non-200 status code\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2981/buggy-version/dependency-check-utils.src.main.java.org.owasp.dependencycheck.utils.Downloader.java", "BodyUseAPI": [], "Fixed commit": "a46e1eeb8187acddc78fb451a7b239bd4113eb11", "Url": "https://api.github.com/repos/jeremylong/DependencyCheck", "Date": "2014-05-24T11:06:46Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (end >= (str.length())) { end = (str.length()) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7247/buggy-version/richedit.src.com.commonsware.cwac.richedit.ListEffect.java", "BodyUseAPI": ["android.text.Editable.length()"], "Fixed commit": "037a1d9f3f31b1dd33d6413ebea3e26a4d765b13", "Url": "https://api.github.com/repos/fstech/cwac-richedit", "Date": "2014-12-15T10:33:57Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.widget.RecyclerView.getChildAdapterPosition(android.view.View)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!headerDrawn) || (hasHeader(adapterPos))) { c.save(); left = child.getLeft(); top = getHeaderTop(parent, child, header, subHeader, adapterPos, layoutPos); c.translate(left, top); header.setTranslationX(left); header.setTranslationY(top); header.draw(c); if (((((getBetweenHeadersMargin()) != 0) && (top <= (-(getBetweenHeadersMargin())))) && (adapterPos > 0)) && ((mAdapter.getHeaderId(adapterPos)) != (mAdapter.getHeaderId((adapterPos - 1))))) { header = getHeader(parent, (adapterPos - 1)).itemView; child = parent.getChildAt(layoutPos); c.save(); left = child.getLeft(); top = getHeaderTop(parent, child, header, subHeader, (adapterPos - 1), layoutPos); top += (getBetweenHeadersMargin()) * 2; c.translate(left, top); header.setTranslationX(left); header.setTranslationY(top); header.draw(c); c.restore(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5576/buggy-version/lib.src.main.java.ca.barrenechea.widget.recyclerview.decoration.DoubleHeaderDecoration.java", "BodyUseAPI": ["ca.barrenechea.widget.recyclerview.decoration.DoubleHeaderDecoration.getHeaderTop(android.support.v7.widget.RecyclerView,android.view.View,android.view.View,android.view.View,int,int)", "ca.barrenechea.widget.recyclerview.decoration.DoubleHeaderAdapter.getHeaderId(int)", "ca.barrenechea.widget.recyclerview.decoration.DoubleHeaderDecoration.getHeader(android.support.v7.widget.RecyclerView,int)", "ca.barrenechea.widget.recyclerview.decoration.DoubleHeaderDecoration.getHeaderTop(android.support.v7.widget.RecyclerView,android.view.View,android.view.View,android.view.View,int,int)", "ca.barrenechea.widget.recyclerview.decoration.DoubleHeaderAdapter.getHeaderId(int)"], "Fixed commit": "b89e6a9e559699e5ced9e6e1b66be5c61d5f6c52", "Url": "https://api.github.com/repos/maxxx/header-decor", "Date": "2017-05-16T10:10:46Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["elcon.mods.elconqore.blocks.BlockExtendedMetadata.getTileEntity(net.minecraft.world.World,int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((((drops.size()) > 0) && ((player == null) || (!(player.capabilities.isCreativeMode)))) && (shouldDropItems(world, x, y, z, tile.getTileMetadata(), player, player.getCurrentEquippedItem()))) { float chance = net.minecraftforge.event.ForgeEventFactory.fireBlockHarvesting(drops, world, this, x, y, z, tile.getTileMetadata(), net.minecraft.enchantment.EnchantmentHelper.getFortuneModifier(player), 1.0F, false, player); for (net.minecraft.item.ItemStack drop : drops) { if ((world.rand.nextFloat()) <= chance) { dropBlockAsItem(world, x, y, z, drop); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1158/buggy-version/src.main.java.elcon.mods.elconqore.blocks.BlockExtendedMetadata.java", "BodyUseAPI": ["elcon.mods.elconqore.tileentities.TileEntityMetadata.getTileMetadata()", "world.rand.nextFloat()", "net.minecraft.enchantment.EnchantmentHelper.getFortuneModifier(net.minecraft.entity.player.EntityPlayer)", "net.minecraftforge.event.ForgeEventFactory.fireBlockHarvesting(java.util.ArrayList<net.minecraft.item.ItemStack>,net.minecraft.world.World,elcon.mods.elconqore.blocks.BlockExtendedMetadata,int,int,int,tile.getTileMetadata(),net.minecraft.enchantment.EnchantmentHelper.getFortuneModifier(player),float,boolean,net.minecraft.entity.player.EntityPlayer)", "elcon.mods.elconqore.blocks.BlockExtendedMetadata.dropBlockAsItem(net.minecraft.world.World,int,int,int,net.minecraft.item.ItemStack)"], "Fixed commit": "c0f0851fcbcb2db8d5030e7e60509a961c754f04", "Url": "https://api.github.com/repos/ItsMeElConquistador/ElConQore", "Date": "2014-04-09T17:51:55Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getPreviousSibling()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (previousSibling == null) { mapClassName = null; }else { mapClassName = previousSibling.getText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9201/buggy-version/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.MapIterationInForEachLoopCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getText()"], "Fixed commit": "3756da7e25c97008ea97544e68b692904dddb1df", "Url": "https://api.github.com/repos/rnveach/sevntu.checkstyle", "Date": "2017-05-14T16:54:03Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cguess == 10) { java.lang.System.out.println(\"Congratulations! You have found all the mirrors, you have won the day!\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7233/buggy-version/BlackBox.src.blackbox.java", "BodyUseAPI": [], "Fixed commit": "802484f3c771bcfc7a7cb074a689bc17abdfdf57", "Url": "https://api.github.com/repos/saladenicoise/APCompSciProjects", "Date": "2017-12-05T21:26:55Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.spazedog.lib.reflecttools.ReflectField.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userid < 0) { userid = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2460/buggy-version/src.com.spazedog.xposed.additionsgb.utils.android.UserHandleHelper.java", "BodyUseAPI": [], "Fixed commit": "8dcd23910b6b5171978de75ee7a182846ae10f7b", "Url": "https://api.github.com/repos/gerhardol/xposed-additions", "Date": "2015-03-28T19:33:17Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.jboss.tools.central.internal.dnd.ChromeURLTransfer.isLinuxGTK()) { transfers = new org.eclipse.swt.dnd.Transfer[]{ org.eclipse.swt.dnd.URLTransfer.getInstance(), org.jboss.tools.central.internal.dnd.ChromeURLTransfer.getInstance() }; }else { transfers = new org.eclipse.swt.dnd.Transfer[]{ org.eclipse.swt.dnd.URLTransfer.getInstance() }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2428/buggy-version/central.plugins.org.jboss.tools.central.src.org.jboss.tools.central.internal.dnd.JBossCentralDropTarget.java", "BodyUseAPI": [], "Fixed commit": "f63265c2991b72cdf6cc833da4967249c5a9d4e3", "Url": "https://api.github.com/repos/snjeza/jbosstools-central", "Date": "2013-11-06T10:26:04Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.kenyaemr.calculation.EmrCalculationUtils.obsResultForPatient(org.openmrs.calculation.result.CalculationResultMap,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (whoStageObs != null) { java.lang.Integer whoStage = org.openmrs.module.kenyaemr.util.EmrUtils.whoStage(whoStageObs.getValueCoded()); if (whoStage != null) { result = new org.openmrs.calculation.result.SimpleResult(whoStage, this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2606/buggy-version/api.src.main.java.org.openmrs.module.kenyaemr.calculation.library.hiv.art.WhoStageAtArtStartCalculation.java", "BodyUseAPI": ["org.openmrs.Obs.getValueCoded()", "org.openmrs.module.kenyaemr.util.EmrUtils.whoStage(whoStageObs.getValueCoded())"], "Fixed commit": "6068f082b99d4612c69c61bd908671bfb73f17fd", "Url": "https://api.github.com/repos/ningosi/openmrs-module-kenyaemr", "Date": "2013-12-09T13:21:19Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.parseLong(sharedPref.getString((\"lastMessageTextForChannelid\" + (id)), \"0\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (Test.localSettings.identity2Name.containsKey(identity)) { from = Test.localSettings.identity2Name.get(identity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7582/buggy-version/src.org.redPanda.ChannelViewElement.java", "BodyUseAPI": ["Test.localSettings.identity2Name.get(long)"], "Fixed commit": "5c6bb0256de0a6d34a2705fb48d241ee5c52544a", "Url": "https://api.github.com/repos/redPanda-project/android", "Date": "2014-04-25T10:40:49Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Test.localSettings.identity2Name.containsKey(identity)) { return Test.localSettings.identity2Name.get(identity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7582/buggy-version/src.org.redPanda.ChatMsg.java", "BodyUseAPI": ["Test.localSettings.identity2Name.get(long)"], "Fixed commit": "5c6bb0256de0a6d34a2705fb48d241ee5c52544a", "Url": "https://api.github.com/repos/redPanda-project/android", "Date": "2014-04-25T10:40:49Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getValueType().getJavaType().equals(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isRootDataSetProperty) { final com.enonic.wem.api.data.Value value = this.getValue(); final com.enonic.wem.api.data.RootDataSet rootDataSetValue = value.asData().copy().toRootDataSet(); return new com.enonic.wem.api.data.Property(this.getName(), com.enonic.wem.api.data.Value.newValue(value.getType(), rootDataSetValue)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/626/buggy-version/modules.wem-api.src.main.java.com.enonic.wem.api.data.Property.java", "BodyUseAPI": [], "Fixed commit": "d0d1f76150b3237ba8b854370ad77248658815c9", "Url": "https://api.github.com/repos/enonic/wem-ce", "Date": "2014-11-13T08:21:46Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tessellator.isDrawing)) { tessellator.startDrawingQuads(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6519/buggy-version/LB-client.littleblocks.render.TileEntityLittleBlocksRenderer.java", "BodyUseAPI": ["net.minecraft.src.Tessellator.startDrawingQuads()"], "Fixed commit": "a973d422c89cbe84b5cba9a498a5ce2f089b2003", "Url": "https://api.github.com/repos/SlimeVoid/LittleBlocks-FML", "Date": "2012-12-02T03:00:03Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tessellator.isDrawing) { tessellator.draw(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6519/buggy-version/LB-client.littleblocks.render.TileEntityLittleBlocksRenderer.java", "BodyUseAPI": ["net.minecraft.src.Tessellator.draw()"], "Fixed commit": "a973d422c89cbe84b5cba9a498a5ce2f089b2003", "Url": "https://api.github.com/repos/SlimeVoid/LittleBlocks-FML", "Date": "2012-12-02T03:00:03Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tessellator.isDrawing) { tessellator.draw(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6519/buggy-version/LB-client.littleblocks.render.TileEntityLittleBlocksRenderer.java", "BodyUseAPI": ["net.minecraft.src.Tessellator.draw()"], "Fixed commit": "a973d422c89cbe84b5cba9a498a5ce2f089b2003", "Url": "https://api.github.com/repos/SlimeVoid/LittleBlocks-FML", "Date": "2012-12-02T03:00:03Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.Rectangle.getSize()", "java.awt.Rectangle.getSize()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((packedWindowSize.getWidth()) > (currentWindowSize.getWidth())) { this.setSize(new java.awt.Dimension(((int) (packedWindowSize.getWidth())), ((int) (currentWindowSize.getHeight())))); }else { this.setSize(currentWindowSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/368/buggy-version/src.pl.polsl.pl.java.serial.terminal.view.MainFrame.java", "BodyUseAPI": ["pl.polsl.pl.java.serial.terminal.view.MainFrame.setSize(java.awt.Dimension)", "java.awt.Dimension.getHeight()", "java.awt.Dimension.getWidth()", "pl.polsl.pl.java.serial.terminal.view.MainFrame.setSize(java.awt.Dimension)"], "Fixed commit": "0cbb73385b13b186a15b0d0c54cb3529757b406a", "Url": "https://api.github.com/repos/19majkel94/Java-Serial-Terminal", "Date": "2016-05-15T17:45:47Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (findex >= 0) { m = _data.get(call).telemetryConfig.getFieldScale(findex); c = _data.get(call).telemetryConfig.getFieldOffset(findex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8942/buggy-version/habmodem.src.com.brejza.matt.habmodem.LineGraph.java", "BodyUseAPI": ["_data.get(call).telemetryConfig.getFieldScale(int)", "_data.get(call).telemetryConfig.getFieldOffset(int)"], "Fixed commit": "c281a30118f20182a130a59e007767fd810ae665", "Url": "https://api.github.com/repos/mattbrejza/rtty_modem", "Date": "2013-02-16T23:47:16Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isJBoss())) { javax.naming.InitialContext ctx; try { ctx = new javax.naming.InitialContext(); javax.management.MBeanServer server = ((javax.management.MBeanServer) (ctx.lookup(\"java:comp/env/jmx/runtime\"))); if (server != null) { servers.add(server); } } catch (javax.naming.NamingException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5036/buggy-version/agent.core.src.main.java.org.jolokia.detector.WeblogicDetector.java", "BodyUseAPI": [], "Fixed commit": "c7eedaf6a9ff82232eb63919d29185bc7173ca05", "Url": "https://api.github.com/repos/rhuss/jolokia", "Date": "2014-04-10T14:00:41Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { getSupportFragmentManager().beginTransaction().add(R.id.fragment_container, com.greysonparrelli.mynews.fragments.FeedFragment.newInstance(), FeedFragment.TAG).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6041/buggy-version/app.src.main.java.com.greysonparrelli.mynews.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "bee0f1c0697a0827df974ef9c7dcb1cdff3c35f1", "Url": "https://api.github.com/repos/greysonp/my-news-android", "Date": "2016-08-18T02:43:45Z"},
{"Line": "=>566", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path == null) { throw new java.lang.IllegalArgumentException(\"Path may not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6897/buggy-version/src.main.java.nl.esciencecenter.xenon.util.Utils.java", "BodyUseAPI": [], "Fixed commit": "f4c4f83132b0c482c56291d72a992f819e017ec4", "Url": "https://api.github.com/repos/NLeSC/Xenon", "Date": "2017-04-25T14:12:33Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (files == null) { throw new java.lang.IllegalArgumentException(\"Files may not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6897/buggy-version/src.main.java.nl.esciencecenter.xenon.util.Utils.java", "BodyUseAPI": [], "Fixed commit": "f4c4f83132b0c482c56291d72a992f819e017ec4", "Url": "https://api.github.com/repos/NLeSC/Xenon", "Date": "2017-04-25T14:12:33Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (job == null) { throw new nl.esciencecenter.xenon.jobs.NoSuchJobException(GridEngineAdaptor.ADAPTOR_NAME, \"Job <null> not found on server\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6897/buggy-version/src.main.java.nl.esciencecenter.xenon.adaptors.gridengine.GridEngineSchedulerConnection.java", "BodyUseAPI": [], "Fixed commit": "f4c4f83132b0c482c56291d72a992f819e017ec4", "Url": "https://api.github.com/repos/NLeSC/Xenon", "Date": "2017-04-25T14:12:33Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5710/buggy-version/src.main.java.com.mridang.address.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "87080d973006602277a9b3123549656ebf1c2455", "Url": "https://api.github.com/repos/mridang/dashclock-address", "Date": "2015-03-28T13:56:29Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mediaFileCache.isElementInMemory(trackId))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2881/buggy-version/subsonic-main.src.main.java.net.sourceforge.subsonic.service.MediaFileService.java", "BodyUseAPI": [], "Fixed commit": "0b3a8d40f3ffe87689c42bb2a48fa4cc1a704fbe", "Url": "https://api.github.com/repos/hakko/subsonic", "Date": "2012-10-14T09:26:58Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.topsun.posclient.sales.ui.print.SamplePrintProcessor.getCurrentInvoice()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == invoice) { throw new com.topsun.posclient.common.POSException(\"\u672c\u5730\u53d1\u7968\u6570\u636e\u4e3a\u7a7a\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1090/buggy-version/com.topsun.posclient.sales.ui.src.com.topsun.posclient.sales.ui.print.SamplePrintProcessor.java", "BodyUseAPI": [], "Fixed commit": "02e3c0fed28898082b7f72bc8e43896fc82cb3c1", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2013-12-30T00:19:26Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.ws.rs.ext.WriterInterceptorContext.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (b == null) { b = new java.lang.StringBuilder(); writerInterceptorContext.setProperty(ameba.message.filtering.LoggingFilter.LOGGER_BUFFER_PROPERTY, b); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5293/buggy-version/src.main.java.ameba.message.filtering.LoggingFilter.java", "BodyUseAPI": [], "Fixed commit": "e24f72dcc4266de5857999b33011c9a091c34601", "Url": "https://api.github.com/repos/icode/ameba", "Date": "2017-07-13T10:15:12Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((text == null) || ((text.length()) == 0)) { return EcorePackage.eINSTANCE.getEObject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3262/buggy-version/sherlock.eclipse.com.xored.sherlock.eclipse.core.src.com.xored.sherlock.internal.eclipse.core.DataSourceDescriptor.java", "BodyUseAPI": [], "Fixed commit": "6802f1d8da5332b0b0e542c65df0ad5fd78a91ca", "Url": "https://api.github.com/repos/xored/synergy", "Date": "2011-09-09T13:24:40Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((drone) == null) || (!(drone.isConnected()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6809/buggy-version/Android.src.org.droidplanner.android.AppService.java", "BodyUseAPI": [], "Fixed commit": "3dd33be03bc7876010055c21fc3951541207bbc3", "Url": "https://api.github.com/repos/DroidPlanner/Tower", "Date": "2016-08-21T22:03:24Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (table == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3704/buggy-version/src.ru.fizteh.fivt.students.standy66_new.storage.structured.StructuredDatabase.java", "BodyUseAPI": [], "Fixed commit": "7b35d604610b513c0c17a73b72b716b25cdd12fe", "Url": "https://api.github.com/repos/standy66/fizteh-java-2014", "Date": "2014-11-14T09:36:41Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.fizteh.fivt.students.standy66_new.storage.strings.StringDatabase.createTable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (table == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3704/buggy-version/src.ru.fizteh.fivt.students.standy66_new.storage.structured.StructuredDatabase.java", "BodyUseAPI": [], "Fixed commit": "7b35d604610b513c0c17a73b72b716b25cdd12fe", "Url": "https://api.github.com/repos/standy66/fizteh-java-2014", "Date": "2014-11-14T09:36:41Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(mTypeName.isPrimitive())) && checkIfNull) { if (writeIfNull) { builder.nextControlFlow(\"else\"); if (isObjectProperty) { builder.addStatement(\"$L.writeFieldName($S)\", com.bluelinelabs.logansquare.processor.ObjectMapperInjector.JSON_GENERATOR_VARIABLE_NAME, fieldName); } builder.addStatement(\"$L.writeNull()\", com.bluelinelabs.logansquare.processor.ObjectMapperInjector.JSON_GENERATOR_VARIABLE_NAME); } builder.endControlFlow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6686/buggy-version/processor.src.main.java.com.bluelinelabs.logansquare.processor.type.field.TypeConverterFieldType.java", "BodyUseAPI": [], "Fixed commit": "4b030b3af58b0f0db9454b183acde7ef8d61d8b8", "Url": "https://api.github.com/repos/ZuZuK/LoganSquare", "Date": "2017-02-27T11:41:41Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(mTypeName.isPrimitive())) && checkIfNull) { builder.beginControlFlow(\"if ($L != null)\", getter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6686/buggy-version/processor.src.main.java.com.bluelinelabs.logansquare.processor.type.field.TypeConverterFieldType.java", "BodyUseAPI": [], "Fixed commit": "4b030b3af58b0f0db9454b183acde7ef8d61d8b8", "Url": "https://api.github.com/repos/ZuZuK/LoganSquare", "Date": "2017-02-27T11:41:41Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pair.getValue()) instanceof com.orientechnologies.orient.core.sql.functions.OSQLFunctionRuntime) v = ((com.orientechnologies.orient.core.sql.functions.OSQLFunctionRuntime) (v)).execute(record, null, context); else if (v instanceof com.orientechnologies.orient.core.command.OCommandRequest) v = ((com.orientechnologies.orient.core.command.OCommandRequest) (v)).execute(record, null, context);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5158/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OCommandExecutorSQLUpdate.java", "BodyUseAPI": [], "Fixed commit": "c5c0c2be4534c21a777a4a90fb8d157ddf94da20", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-01-05T22:24:39Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((conn.getLoadedPosition()) != null) conPosition.setLocation(conn.getLoadedPosition()); else conPosition.setLocation(((java.awt.geom.Point2D) (element.getProperty(GraphElementProperties.POSITION))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2639/buggy-version/GraphEdit.src.graphedit.layout.adding.AddingLayouter.java", "BodyUseAPI": ["java.awt.geom.Point2D.setLocation(conn.getLoadedPosition())", "graphedit.model.components.Connector.getLoadedPosition()"], "Fixed commit": "5c01628acb4dfd910431390d62843ffc270d1540", "Url": "https://api.github.com/repos/KROKIteam/KROKI-mockup-tool", "Date": "2014-07-13T17:11:32Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((countValue != null) && (countValue > 0)) { addMeasurement(new com.librato.metrics.MultiSampleGaugeMeasurement(name, countValue, summarizable.sum(), summarizable.max(), summarizable.min(), null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7601/buggy-version/src.main.java.com.librato.metrics.MetricsLibratoBatch.java", "BodyUseAPI": ["com.librato.metrics.MetricsLibratoBatch.addMeasurement(com.librato.metrics.MultiSampleGaugeMeasurement)"], "Fixed commit": "f50d180cf0538e8a5ec39bde8ccd1bfcdc7d3a70", "Url": "https://api.github.com/repos/sclasen/metrics-librato", "Date": "2012-09-13T03:12:24Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (period.getPeriodType().isWeek()) { periodLabel.append(bundle.getString((\"GML.mois\" + (period.getBeginDate().getMonth())))); if ((period.getBeginDate().getMonth()) != (period.getEndDate().getMonth())) { displayWeek = true; if ((period.getBeginDate().getYear()) != (period.getEndDate().getYear())) { periodLabel.append(\" \").append(period.getBeginDate().getYear()); } periodLabel.append(\" / \").append(bundle.getString((\"GML.mois\" + (period.getEndDate().getMonth())))); } periodLabel.append(\" \").append(period.getEndDate().getYear()); if (displayWeek) { periodLabel.append(\" - \").append(bundle.getString(\"GML.week\")).append(' ').append(period.getBeginDate().getWeekOfYear()); } }else if (period.getPeriodType().isMonth()) { periodLabel.append(bundle.getString((\"GML.mois\" + (period.getBeginDate().getMonth())))).append(\" \").append(period.getBeginDate().getYear()); }else if (period.getPeriodType().isYear()) { periodLabel.append(period.getBeginDate().getYear()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3337/buggy-version/web-core.src.main.java.org.silverpeas.calendar.CalendarViewContext.java", "BodyUseAPI": ["java.lang.StringBuilder.append(bundle.getString((\"GML.mois\" + (period.getBeginDate().getMonth()))))", "org.silverpeas.calendar.CalendarPeriod.getEndDate()", "java.lang.StringBuilder.append(period.getBeginDate().getYear())", "period.getBeginDate().getYear()", "period.getPeriodType().isMonth()", "period.getEndDate().getMonth()", "java.lang.StringBuilder.append(period.getBeginDate().getYear())", "periodLabel.append(\" - \").append(bundle.getString(\"GML.week\")).append(' ').append(period.getBeginDate().getWeekOfYear())", "period.getBeginDate().getWeekOfYear()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "org.silverpeas.calendar.CalendarPeriod.getEndDate()", "java.lang.StringBuilder.append(period.getEndDate().getYear())", "periodLabel.append(bundle.getString((\"GML.mois\" + (period.getBeginDate().getMonth())))).append(\" \").append(period.getBeginDate().getYear())", "period.getEndDate().getMonth()", "java.lang.StringBuilder.append(java.lang.String)", "com.stratelia.webactiv.util.ResourceLocator.getString((\"GML.mois\" + (period.getEndDate().getMonth())))", "period.getEndDate().getYear()", "period.getBeginDate().getYear()", "com.stratelia.webactiv.util.ResourceLocator.getString((\"GML.mois\" + (period.getBeginDate().getMonth())))", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "java.lang.StringBuilder.append(bundle.getString((\"GML.mois\" + (period.getBeginDate().getMonth()))))", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "java.lang.StringBuilder.append(bundle.getString((\"GML.mois\" + (period.getEndDate().getMonth()))))", "period.getBeginDate().getYear()", "org.silverpeas.calendar.CalendarPeriod.getEndDate()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "period.getBeginDate().getMonth()", "org.silverpeas.calendar.CalendarPeriod.getPeriodType()", "period.getBeginDate().getMonth()", "org.silverpeas.calendar.CalendarPeriod.getPeriodType()", "com.stratelia.webactiv.util.ResourceLocator.getString((\"GML.mois\" + (period.getBeginDate().getMonth())))", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "org.silverpeas.calendar.CalendarPeriod.getEndDate()", "period.getBeginDate().getMonth()", "period.getBeginDate().getYear()", "period.getPeriodType().isYear()", "period.getEndDate().getYear()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()"], "Fixed commit": "f1b1e9d4ed18257e876492e5230a01ad712fa8e6", "Url": "https://api.github.com/repos/mmoqui/Silverpeas-Core", "Date": "2016-01-29T11:14:35Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((value) instanceof com.orientechnologies.orient.core.sql.parser.OBaseExpression) && (((com.orientechnologies.orient.core.sql.parser.OBaseExpression) (value)).isBaseIdentifier())) { return ((com.orientechnologies.orient.core.sql.parser.OBaseExpression) (value)).identifier.suffix.identifier; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4395/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.parser.OExpression.java", "BodyUseAPI": [], "Fixed commit": "93926f4330ac8430c6586ef2b349f46a99897621", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-07-15T09:35:09Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.tomer.alwayson.Globals.waitingForApp) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7214/buggy-version/app.src.main.java.com.tomer.alwayson.Receivers.ScreenReceiver.java", "BodyUseAPI": [], "Fixed commit": "d010370a768374b999623da348de45f80c0739d4", "Url": "https://api.github.com/repos/rosenpin/AlwaysOnDisplayAmoled", "Date": "2016-08-09T07:37:40Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["e.select(\"a[href]\").text()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(current.equals(\"Top of Page\"))) { foodNames.add(e.select(\"a[href]\").text()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8920/buggy-version/SlugTracker.app.src.main.java.edu.soe.ucsc.slugtracker.Tracker.java", "BodyUseAPI": [], "Fixed commit": "7746c3b55ecd17d0027a77567eaa3fcf2688b83c", "Url": "https://api.github.com/repos/Talal-A/HackUCSC2016", "Date": "2016-01-30T03:27:27Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (user != null) { leave(user, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4474/buggy-version/src.net.stormdev.mario.mariokart.Race.java", "BodyUseAPI": ["net.stormdev.mario.mariokart.Race.3.leave(net.stormdev.mario.mariokart.User,boolean)"], "Fixed commit": "00c57cb3538da7ea501b6491476e632ddf3407eb", "Url": "https://api.github.com/repos/storm345dev/MarioKart", "Date": "2013-12-10T16:53:07Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (java.lang.System.getProperty(\"os.name\").toLowerCase().contains(\"windows\")) { path = path.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5712/buggy-version/src.main.java.net.xdefine.XFContext.java", "BodyUseAPI": [], "Fixed commit": "f3bfc3bbe61e3c6cef5cece707470c99f24d3554", "Url": "https://api.github.com/repos/xdefine/Framework4J", "Date": "2017-02-05T16:09:30Z"},
{"Line": "=>903", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hintsMap.getWeighting().toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"short_fastest\".equalsIgnoreCase(weightingStr)) { weighting = new com.graphhopper.ShortFastestWeighting(encoder, hintsMap); }else if (\"silliest\".equalsIgnoreCase(weightingStr)) { weighting = new com.graphhopper.SilliestWeighting(encoder, hintsMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3391/buggy-version/core.src.main.java.com.graphhopper.GraphHopper.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "20a3a8b1e7aca3c41c7027253ffbdba09db892fc", "Url": "https://api.github.com/repos/JadeDickinson/graphhopper", "Date": "2017-07-31T19:26:18Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mSharedDataItems)) { mSharedDataItems.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5270/buggy-version/vector.src.main.java.im.vector.util.VectorRoomMediasSender.java", "BodyUseAPI": [], "Fixed commit": "dabe6efbd7c3b3309cbb7b0652e6b20b22995e42", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2016-07-27T06:44:56Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null != (mSharedDataItems)) && ((mSharedDataItems.size()) > 0)) { mSharedDataItems.remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5270/buggy-version/vector.src.main.java.im.vector.util.VectorRoomMediasSender.java", "BodyUseAPI": ["java.util.ArrayList<im.vector.util.SharedDataItem>.remove(int)"], "Fixed commit": "dabe6efbd7c3b3309cbb7b0652e6b20b22995e42", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2016-07-27T06:44:56Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((slave1Result.getMsgType()) != null) && ((slave2Result.getMsgType()) != null)) { if ((slave1Result.getMsgType().equals(kvstore.READY)) && (slave2Result.getMsgType().equals(kvstore.READY))) { doCommit = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6722/buggy-version/kvstore.src.kvstore.TPCMaster.java", "BodyUseAPI": ["kvstore.KVMessage.getMsgType()", "slave2Result.getMsgType().equals(kvstore.READY)", "kvstore.KVMessage.getMsgType()", "slave1Result.getMsgType().equals(kvstore.READY)"], "Fixed commit": "084179420b08aa747b20fe6ec8d3e6ee883fe8a6", "Url": "https://api.github.com/repos/QAQO-O/KVStore", "Date": "2014-06-23T02:36:56Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((feed) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3224/buggy-version/app.src.main.java.com.rsw.vtifeed.PackageFeed.java", "BodyUseAPI": [], "Fixed commit": "7d72476eaf0b25512d5c9d2c8ce3f302e11e8e97", "Url": "https://api.github.com/repos/rswmajor/VtiFeed", "Date": "2016-05-08T14:48:05Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["graph.Graph.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (v == null) { java.lang.System.out.println((\"No Vertex #\" + next)); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/532/buggy-version/src.examples.PathVerification.java", "BodyUseAPI": [], "Fixed commit": "fe55c68471aa7889d99e400e6781bb86859559a6", "Url": "https://api.github.com/repos/profolsen/graphs", "Date": "2017-04-10T19:11:20Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(name.contains(\":\"))) && (beanFactory.containsBean(fullName))) { result = beanFactory.getBean(fullName); }else { java.lang.String[] parts = name.split(\":\"); if ((parts.length) == 2) { java.lang.String pluginId = parts[0].trim(); java.lang.String beanId = parts[1].trim(); java.lang.String compositeName = ((\"org.walkmod:walkmod-\" + pluginId) + \"-plugin:\") + beanId; if ((((pluginId.length()) > 0) && ((beanId.length()) > 0)) && (beanFactory.containsBean(compositeName))) { result = beanFactory.getBean(compositeName); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1445/buggy-version/src.main.java.org.walkmod.conf.entities.impl.ConfigurationImpl.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)", "org.springframework.beans.factory.BeanFactory.containsBean(java.lang.String)", "org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)"], "Fixed commit": "fa79e6ac2bf4c4504bd697bd3ebfe0e25dcc7419", "Url": "https://api.github.com/repos/walkmod/walkmod-core", "Date": "2015-11-24T21:09:24Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.mikephil.charting.listener.BarLineChartTouchListener.getOnChartGestureListener()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (l != null) { l.onChartSingleTapped(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3530/buggy-version/MPChartLib.src.main.java.com.github.mikephil.charting.listener.BarLineChartTouchListener.java", "BodyUseAPI": ["com.github.mikephil.charting.listener.OnChartGestureListener.onChartSingleTapped(android.view.MotionEvent)"], "Fixed commit": "e61e8bb81fc602e9d90152358c8dafe21cc643ba", "Url": "https://api.github.com/repos/happyjosh/MPAndroidChart", "Date": "2017-10-30T10:35:48Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.co.haradan.octgnimageloader.OCTGNImageLoader.loadSets(uk.co.haradan.octgnimageloader.LogOutput,java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sets == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3340/buggy-version/src.uk.co.haradan.octgnimageloader.OCTGNImageLoaderUI.java", "BodyUseAPI": [], "Fixed commit": "43da50ee3bd4317b31019eec94255d8832d0564c", "Url": "https://api.github.com/repos/haradan/OCTGNImageLoader", "Date": "2015-04-23T23:04:16Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.keycloak.services.managers.ClientSessionCode.getClientSession()", "org.keycloak.authentication.authenticators.broker.util.SerializedBrokeredIdentityContext.deserialize(org.keycloak.models.KeycloakSession,org.keycloak.models.ClientSessionModel)", "org.keycloak.models.ClientSessionModel.getAuthenticatedUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((context.getIdpConfig().isTrustEmail()) && (!(org.keycloak.services.validation.Validation.isBlank(federatedUser.getEmail())))) && (!(java.lang.Boolean.parseBoolean(clientSession.getNote(AbstractIdpAuthenticator.UPDATE_PROFILE_EMAIL_CHANGED))))) { org.keycloak.services.resources.IdentityBrokerService.LOGGER.debugf(\"Email verified automatically after registration of user '%s' through Identity provider '%s' \", federatedUser.getUsername(), context.getIdpConfig().getAlias()); federatedUser.setEmailVerified(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3441/buggy-version/services.src.main.java.org.keycloak.services.resources.IdentityBrokerService.java", "BodyUseAPI": ["org.jboss.logging.Logger.debugf(java.lang.String,federatedUser.getUsername(),context.getIdpConfig().getAlias())", "org.keycloak.models.UserModel.setEmailVerified(boolean)", "org.keycloak.models.UserModel.getUsername()", "org.keycloak.broker.provider.BrokeredIdentityContext.getIdpConfig()", "context.getIdpConfig().getAlias()"], "Fixed commit": "35a51c0b52e323376f3c80e47912ade7930abc17", "Url": "https://api.github.com/repos/mposolda/keycloak", "Date": "2015-11-09T08:19:07Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.ws.rs.core.MultivaluedMap<java.lang.String, java.lang.String>.getFirst(UserModel.EMAIL)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.keycloak.common.util.ObjectUtil.isEqualOrBothNull(email, userCtx.getEmail()))) { if (org.keycloak.authentication.authenticators.broker.IdpUpdateProfileAuthenticator.logger.isTraceEnabled()) { org.keycloak.authentication.authenticators.broker.IdpUpdateProfileAuthenticator.logger.tracef(\"Email updated on updateProfile page to '%s' \", email); } userCtx.setEmail(email); context.getClientSession().setNote(org.keycloak.authentication.authenticators.broker.UPDATE_PROFILE_EMAIL_CHANGED, \"true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3441/buggy-version/services.src.main.java.org.keycloak.authentication.authenticators.broker.IdpUpdateProfileAuthenticator.java", "BodyUseAPI": ["org.keycloak.authentication.authenticators.broker.util.SerializedBrokeredIdentityContext.setEmail(java.lang.String)", "org.jboss.logging.Logger.tracef(java.lang.String,java.lang.String)"], "Fixed commit": "35a51c0b52e323376f3c80e47912ade7930abc17", "Url": "https://api.github.com/repos/mposolda/keycloak", "Date": "2015-11-09T08:19:07Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openalpr.Alpr.recognizeWithCountryRegionNConfig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((alprResult == null) || (alprResult.equals(\"\"))) result = null; else result = com.southwaterfront.parkingtracker.jsonify.AlprParser.parseAlprResult(alprResult);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4534/buggy-version/src.com.southwaterfront.parkingtracker.alpr.AlprEngine.java", "BodyUseAPI": ["com.southwaterfront.parkingtracker.jsonify.AlprParser.parseAlprResult(java.lang.String)"], "Fixed commit": "b33317efed1c95a41b62209674df7013b3ea24b2", "Url": "https://api.github.com/repos/WSUV-CS420-Team4/ParkingTracker", "Date": "2015-01-27T02:33:56Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) instanceof ir.pegahtech.neveshtanak.fragments.UserJomlesFragment) adapter = new ir.pegahtech.neveshtanak.util.ui.JomleListAdapter(this, false); else adapter = new ir.pegahtech.neveshtanak.util.ui.JomleListAdapter(this, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6342/buggy-version/src.ir.pegahtech.neveshtanak.fragments.BasicJomleFragment.java", "BodyUseAPI": [], "Fixed commit": "ca518b2e3c9a9800d54421f55e91872dbde3fe39", "Url": "https://api.github.com/repos/backtory/neveshtanak-Deprecated-", "Date": "2015-07-28T12:21:10Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(openNewUserPage)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6342/buggy-version/src.ir.pegahtech.neveshtanak.util.ui.JomleListAdapter.java", "BodyUseAPI": [], "Fixed commit": "ca518b2e3c9a9800d54421f55e91872dbde3fe39", "Url": "https://api.github.com/repos/backtory/neveshtanak-Deprecated-", "Date": "2015-07-28T12:21:10Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((responsePattern.size()) >= 1) { this.normalizedResponsePattern = newNormalizedList; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/211/buggy-version/Gestures.java_scripts.UD-PUF.src.dataTypes.Response.java", "BodyUseAPI": [], "Fixed commit": "e777172464e7e62ab528e79715602b8744108872", "Url": "https://api.github.com/repos/akhileshtyagi/PUF", "Date": "2016-02-01T19:14:54Z"},
{"Line": "=>2455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.ex.chips.Tokenizer.findTokenEnd(com.android.ex.chips.Editable,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tokenEnd != 0) && (tokenStart == tokenEnd)) { tokenStart = mTokenizer.findTokenStart(editable, (tokenEnd - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8568/buggy-version/library.chips.src.com.android.ex.chips.RecipientEditTextView.java", "BodyUseAPI": ["com.android.ex.chips.Tokenizer.findTokenStart(com.android.ex.chips.Editable,int)"], "Fixed commit": "b4450c79625872416969bd0a771ec3fd7c40d3b9", "Url": "https://api.github.com/repos/jbir789/android-chips", "Date": "2015-02-05T19:06:01Z"},
{"Line": "=>2446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.ex.chips.RecipientEditTextView.RecipientTextWatcher.getText()", "com.android.ex.chips.RecipientEditTextView.RecipientTextWatcher.getSelectionStart()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (selStart == (editable.length())) { tokenStart = mTokenizer.findTokenStart(editable, selStart); }else if (selStart != 0) { tokenStart = mTokenizer.findTokenStart(editable, (selStart - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8568/buggy-version/library.chips.src.com.android.ex.chips.RecipientEditTextView.java", "BodyUseAPI": ["com.android.ex.chips.Tokenizer.findTokenStart(com.android.ex.chips.Editable,int)", "com.android.ex.chips.Tokenizer.findTokenStart(com.android.ex.chips.Editable,int)"], "Fixed commit": "b4450c79625872416969bd0a771ec3fd7c40d3b9", "Url": "https://api.github.com/repos/jbir789/android-chips", "Date": "2015-02-05T19:06:01Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.core.resource.ResourceDao.getRootProjectByComponentKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rootProject == null) { throw new org.sonar.api.utils.SonarException(((\"Unable to find root project for component with [key=\" + resourceKey) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9223/buggy-version/sonar-core.src.main.java.org.sonar.core.dryrun.DryRunCache.java", "BodyUseAPI": [], "Fixed commit": "1e27df11e1c8f5e0be5b5e1abc3c2c7f1e5b42c6", "Url": "https://api.github.com/repos/SonarSource/sonar", "Date": "2013-09-05T07:36:23Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((me.crafter.mc.lockettepro.Dependency.simpleclans) != null) { me.crafter.mc.lockettepro.Dependency.clanmanager = ((net.sacredlabyrinth.phaed.simpleclans.SimpleClans) (me.crafter.mc.lockettepro.Dependency.simpleclans)).getClanManager(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7696/buggy-version/src.me.crafter.mc.lockettepro.Dependency.java", "BodyUseAPI": [], "Fixed commit": "b7ea2901e3f4c64198896e2e0ce0cb3cbad84f1c", "Url": "https://api.github.com/repos/connection-lost/LockettePro", "Date": "2017-06-19T18:47:04Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.crafter.mc.lockettepro.Dependency.simpleclans) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7696/buggy-version/src.me.crafter.mc.lockettepro.Dependency.java", "BodyUseAPI": [], "Fixed commit": "b7ea2901e3f4c64198896e2e0ce0cb3cbad84f1c", "Url": "https://api.github.com/repos/connection-lost/LockettePro", "Date": "2017-06-19T18:47:04Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((editor) != null) && ((editor.getEditorInput()) != null)) && ((dataSetComponent) != null)) { dataSetComponent.setFileName(editor.getEditorInput().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/895/buggy-version/org.dawb.workbench.ui.src.org.dawb.workbench.ui.views.PlotDataPage.java", "BodyUseAPI": ["org.dawb.workbench.ui.editors.PlotDataComponent.setFileName(editor.getEditorInput().getName())", "org.dawb.workbench.ui.editors.IDatasetEditor.getEditorInput()", "editor.getEditorInput().getName()"], "Fixed commit": "2d920488243e043b2848cdd977e308194d9db294", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2012-11-23T15:43:20Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((plotImageEditor) != null) return plotImageEditor.getAdapter(clazz);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/895/buggy-version/org.dawb.workbench.ui.src.org.dawb.workbench.ui.editors.ZipEditor.java", "BodyUseAPI": [], "Fixed commit": "2d920488243e043b2848cdd977e308194d9db294", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2012-11-23T15:43:20Z"},
{"Line": "=>1310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ggp.base.util.gdl.transforms.CommonTransforms.replaceVariables(org.ggp.base.util.gdl.grammar.GdlSentence,java.util.Map<org.ggp.base.util.gdl.grammar.GdlVariable, org.ggp.base.util.gdl.grammar.GdlConstant>)", "java.util.Map<org.ggp.base.util.gdl.grammar.GdlSentence, org.ggp.base.util.propnet.polymorphic.PolymorphicComponent>.get(org.ggp.base.util.gdl.grammar.GdlSentence)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((positive == null) && ((transformed.arity()) == 0)) { positive = components.get(org.ggp.base.util.gdl.grammar.GdlPool.getProposition(transformed.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8020/buggy-version/src.org.ggp.base.util.propnet.polymorphic.factory.OptimizingPolymorphicPropNetFactory.java", "BodyUseAPI": ["org.ggp.base.util.gdl.grammar.GdlPool.getProposition(transformed.getName())", "org.ggp.base.util.gdl.grammar.GdlSentence.getName()", "java.util.Map<org.ggp.base.util.gdl.grammar.GdlSentence, org.ggp.base.util.propnet.polymorphic.PolymorphicComponent>.get(org.ggp.base.util.gdl.grammar.GdlPool.getProposition(transformed.getName()))"], "Fixed commit": "6c0c06ff68770cdd1979f1b86662c27b35b294ea", "Url": "https://api.github.com/repos/SteveDraper/ggp-base", "Date": "2014-04-11T17:24:11Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (arg_object.has(\"icon\")) { iconBase64 = arg_object.getString(\"icon\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6440/buggy-version/src.android.ShortcutPlugin.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "4a94db2f0cda1e75893d6b0dd9f798103223dedc", "Url": "https://api.github.com/repos/paul-em/ShortcutPlugin", "Date": "2014-10-19T19:54:12Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (emptyLightValueHasAdjust) { if ((!errorFlag) && ((defaultLightValue < bloodLightValue) || ((emptyLightValue + 30) > bloodLightValue))) { errorFlag = true; } }else { if ((!errorFlag) && ((defaultLightValue < bloodLightValue) || (emptyLightValue > bloodLightValue))) { errorFlag = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3395/buggy-version/src.main.java.guard.guardshow.GuardConfigShow.java", "BodyUseAPI": [], "Fixed commit": "7f1d2c69b29bdbe45f0887db8ddc233c76640105", "Url": "https://api.github.com/repos/TimeEraser/BlackHole", "Date": "2016-06-09T04:41:58Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((traceManager) != null) { traceManager.coreUpdateNotify(EHMIProxy.getCurrentTimeInMillis(), objectId, coreType, userType, name, description, \"new\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2533/buggy-version/sources.appsgate-project.communication-components.EHMIProxyImpl.src.main.java.appsgate.lig.ehmi.impl.listeners.ObjectUpdateListener.java", "BodyUseAPI": [], "Fixed commit": "b1bbc928a6fed9a8b29a9fe417a5a456abd771d3", "Url": "https://api.github.com/repos/appsgate2015/appsgate", "Date": "2014-09-18T12:33:31Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((traceManager) != null) { traceManager.coreEventNotify(EHMIProxy.getCurrentTimeInMillis(), srcId, varName, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2533/buggy-version/sources.appsgate-project.communication-components.EHMIProxyImpl.src.main.java.appsgate.lig.ehmi.impl.listeners.ObjectEventListener.java", "BodyUseAPI": [], "Fixed commit": "b1bbc928a6fed9a8b29a9fe417a5a456abd771d3", "Url": "https://api.github.com/repos/appsgate2015/appsgate", "Date": "2014-09-18T12:33:31Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.grails.web.servlet.view.GroovyPageView.LOG.isDebugEnabled()) { org.grails.web.servlet.view.GroovyPageView.LOG.debug((\"Error processing GroovyPageView: \" + (exception.getMessage())), exception); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3884/buggy-version/grails-web-gsp.src.main.groovy.org.grails.web.servlet.view.GroovyPageView.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String,java.lang.Exception)"], "Fixed commit": "19aa5a8defb80000d9de8381e345a98797172911", "Url": "https://api.github.com/repos/grails/grails-core", "Date": "2014-12-01T08:56:15Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((leftCID.compareTo(rightBetweenScan.getCurrentDimension())) < 0) { suadb.query.afl.JoinScan.stopRight = true; rightBetweenScan = new suadb.query.afl.BetweenScan(this.right, leftChunkRegion, schema); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8163/buggy-version/suadb-server.src.suadb.query.afl.JoinScan.java", "BodyUseAPI": [], "Fixed commit": "94b807f756fb6a3451e3b691b3edb2bd43813e6e", "Url": "https://api.github.com/repos/RonyK/SuaDB", "Date": "2016-12-12T10:54:22Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ftb.lib.api.GameModes.gameModes) == null) ftb.lib.api.GameModes.reload();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8589/buggy-version/src.main.java.ftb.lib.api.GameModes.java", "BodyUseAPI": [], "Fixed commit": "24be05282b278cc22be99a526d30ccef033f6901", "Url": "https://api.github.com/repos/LatvianModder/FTBLib", "Date": "2016-01-14T23:42:45Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sTableMarker.equalsIgnoreCase(\"INTO\")) { metaFields = parseInsertColumns(sql, \"(\"); stringToParse = sql.substring(indexToBeginParse); if (stringToParse.trim().toLowerCase().startsWith(\"values\")) { parseInsertColumns(stringToParse, \"(\"); stringToParse = stringToParse.substring(indexToBeginParse); } }else { metaFields = parseColumns(sql, \"WHERE\"); stringToParse = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9235/buggy-version/src.main.java.com.microsoft.sqlserver.jdbc.SQLServerParameterMetaData.java", "BodyUseAPI": [], "Fixed commit": "935d242bfd97ecdf21d0b645ff0cf71f53bff71d", "Url": "https://api.github.com/repos/v-PATHngs/mssql-jdbc-PATHngs", "Date": "2017-06-19T21:01:33Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (locale.contains(\"_\")) { request.setAttribute(\"lang\", locale.substring(0, locale.indexOf(\"_\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6840/buggy-version/src.main.java.com.fzb.blog.util.I18NUtil.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "c43832b46698ee371e99f5f2be5c0edcff28e367", "Url": "https://api.github.com/repos/94fzb/zrlog", "Date": "2017-03-04T11:24:00Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_OK)) { jetucker.cmput293assignment1.Util.Assert(((m_photoPath) != null)); SetSelectedImage(m_photoPath); AddToGallery(m_photoPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1865/buggy-version/CMPUT493Assignment_1.app.src.main.java.jetucker.cmput293assignment1.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "975f5a36d48ea970fde5fca9b3320dfa9b2ad2fa", "Url": "https://api.github.com/repos/jesseDtucker/ECE493", "Date": "2015-02-08T22:45:04Z"},
{"Line": "=>1423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.apimgt.impl.API.getVisibility()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(org.apache.commons.lang.StringUtils.isEmpty(apiVisibility))) && (!(APIConstants.API_GLOBAL_VISIBILITY.equalsIgnoreCase(apiVisibility)))) { java.lang.String providerDomain = org.wso2.carbon.utils.multitenancy.MultitenantUtils.getTenantDomain(org.wso2.carbon.apimgt.impl.APIUtil.replaceEmailDomainBack(providerId)); java.lang.String loginUserDomain = org.wso2.carbon.utils.multitenancy.MultitenantUtils.getTenantDomain(loggedUsername); if (((!(org.apache.commons.lang.StringUtils.isEmpty(providerDomain))) && (!(org.apache.commons.lang.StringUtils.isEmpty(loginUserDomain)))) && (!(providerDomain.equals(loginUserDomain)))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5926/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.APIConsumerImpl.java", "BodyUseAPI": [], "Fixed commit": "7d5cfe6edd5a85781ed0f4a5de08d8c21cc2efff", "Url": "https://api.github.com/repos/harsha89/carbon-apimgt", "Date": "2016-01-04T13:54:11Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.stage.FileChooser.showSaveDialog(proj10BeckChanceRemondiSalerno.Main.getPrimaryStage())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (file != null) { marshaller.marshal(composition, file); currentSavePath = java.util.Optional.of(file.getAbsolutePath()); proj10BeckChanceRemondiSalerno.Main.setPrimaryStageTitle(file.getName()); return currentSavePath.isPresent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1692/buggy-version/src.proj10BeckChanceRemondiSalerno.CompositionFileManager.java", "BodyUseAPI": ["proj10BeckChanceRemondiSalerno.Main.setPrimaryStageTitle(java.lang.String)", "java.util.Optional.of(java.lang.String)", "java.io.File.getName()", "java.io.File.getAbsolutePath()", "proj10BeckChanceRemondiSalerno.Marshaller.marshal(proj10BeckChanceRemondiSalerno.Composition,java.io.File)"], "Fixed commit": "26ff16affb5df7d956758443060cc46e51dc1b8e", "Url": "https://api.github.com/repos/mremondi/CS361", "Date": "2016-12-17T17:43:05Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.event.ListSelectionEvent.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (listSelectionModel.isSelectionEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4448/buggy-version/src.org.kepler.diagnosis.gui.DiagnosisGraphPanel.java", "BodyUseAPI": [], "Fixed commit": "b98a1f6dd0a1775211f9975bc944640d8769cd08", "Url": "https://api.github.com/repos/rob2468/kepler-2.4-diagnosis", "Date": "2014-08-04T03:01:03Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fileToDelete != null) activity.deleteGroupFile(fileToDelete);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/764/buggy-version/app.src.main.java.com.csus.csc258.csc258_group_project.GroupFileView.java", "BodyUseAPI": ["com.csus.csc258.csc258_group_project.MainActivity.deleteGroupFile(com.csus.csc258.csc258_group_project.GroupFile)"], "Fixed commit": "6b937b637882f1c1017f3be2ae5fa371126e416a", "Url": "https://api.github.com/repos/Yulonggg/CSc258_Group_Project", "Date": "2016-04-25T00:22:20Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.groovy.runtime.MetaClassHelper.getMaximumInterfaceDistance(java.lang.Class,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (superClassMax != (-1)) superClassMax++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4793/buggy-version/src.main.org.codehaus.groovy.runtime.MetaClassHelper.java", "BodyUseAPI": [], "Fixed commit": "23d4d6ab5b70a4c857cc9723565abdb3f4433ea0", "Url": "https://api.github.com/repos/groovy/groovy-core", "Date": "2013-02-18T15:56:07Z"},
{"Line": "=>581", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(rs.next())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5511/buggy-version/src.main.java.tigase.db.derby.StoredProcedures.java", "BodyUseAPI": [], "Fixed commit": "d61abaf319b1ec62b21e1cd4fbbc0e3a2362bf66", "Url": "https://api.github.com/repos/KZax1l/server", "Date": "2017-06-05T01:03:42Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n < 3) { java.lang.System.out.print(\"Minimum number of players are 3 \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5865/buggy-version/Game.java", "BodyUseAPI": [], "Fixed commit": "45798ef2ff0b5212e8c28fc93e8c3d9c29d6af3c", "Url": "https://api.github.com/repos/Tanujshahh/CP2406Assignment1-and-2Tanuj-Shah", "Date": "2017-09-10T09:23:24Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (FinalProjectile.multiplayer) { userShots[1] = _uc2.shots; userHits[1] = _uc2.hits; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7499/buggy-version/Working.Simulator.java", "BodyUseAPI": [], "Fixed commit": "a29128c38fd92c6e3339a85d86da67550d8c058e", "Url": "https://api.github.com/repos/5yler/FinalProjectile", "Date": "2015-05-14T18:13:23Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerList) == null) playerList = new java.util.ArrayList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8164/buggy-version/src.de.haw.ttv2.main.GameState.java", "BodyUseAPI": [], "Fixed commit": "46ddffd9832eeae827fe40457b4e3664af6d1895", "Url": "https://api.github.com/repos/lgmtr/ttv2", "Date": "2016-12-02T10:34:45Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.chalmers.tendu.network.bluetooth.BluetoothHandler.findFirstAvailableDevice()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (bd != null) { bgs.connect(bd, true); }else { android.util.Log.d(TAG, \"No device to connect to\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3627/buggy-version/Tendu-android.src.it.chalmers.tendu.network.bluetooth.BluetoothHandler.java", "BodyUseAPI": ["it.chalmers.tendu.network.bluetooth.BluetoothGameService.connect(android.bluetooth.BluetoothDevice,boolean)"], "Fixed commit": "97d5250779b4be1746e6eac801ab7793f0e329e7", "Url": "https://api.github.com/repos/tortal/IT2-LP1-Tendu", "Date": "2013-09-25T13:10:04Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (startingAddress != (-1)) { sos.siodrum(job.jobnum, job.jobsize, startingAddress, 0); job.posInMemory = startingAddress; os.swapIn = true; job.SWAPPING = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/993/buggy-version/os.java", "BodyUseAPI": ["os.siodrum(job.jobnum,job.jobsize,int,int)"], "Fixed commit": "041881cc14342aabdd21454833daa5a0e65e6775", "Url": "https://api.github.com/repos/ngbrandon1994/osProject", "Date": "2016-05-08T19:47:01Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (c == (quoteChar)) { if (((charIndex > 2) && ((line.charAt((charIndex - 2))) == '\\\\')) && ((line.charAt((charIndex - 1))) == '\\\\')) { state = com.treasure_data.td_import.reader.CSVFileReader.Tokenizer.TokenizerState.NORMAL; quoteScopeStartingLine = -1; }else if ((charIndex > 1) && ((line.charAt((charIndex - 1))) == '\\\\')) { currentColumn.append(c); }else if ((line.charAt((charIndex + 1))) == (quoteChar)) { currentColumn.append(c); charIndex++; }else { state = com.treasure_data.td_import.reader.CSVFileReader.Tokenizer.TokenizerState.NORMAL; quoteScopeStartingLine = -1; } }else { currentColumn.append(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/430/buggy-version/src.main.java.com.treasure_data.td_import.reader.CSVFileReader.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(char)"], "Fixed commit": "4d64d8e115de8c184d3a97751573f3350f52b0a0", "Url": "https://api.github.com/repos/treasure-data/td-import-java", "Date": "2013-11-30T07:36:48Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (throwableConstructorFor(failureClass).isPresent()) { return ((T) (throwableConstructorFor(failureClass).get().newInstance(new java.lang.AssertionError(testFailureMessage)))); }else if (java.lang.AssertionError.class.isAssignableFrom(failureClass)) { return ((T) (new java.lang.AssertionError(testFailureMessage))); }else if (defaultConstructorFor(failureClass).isPresent()) { return ((T) (defaultConstructorFor(failureClass).get().newInstance())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3292/buggy-version/serenity-core.src.main.java.net.thucydides.core.model.stacktrace.FailureCause.java", "BodyUseAPI": ["net.thucydides.core.model.stacktrace.FailureCause.defaultConstructorFor(java.lang.Class)", "com.google.common.base.Optional<java.lang.reflect.Constructor>.get()", "com.google.common.base.Optional<java.lang.reflect.Constructor>.get()", "net.thucydides.core.model.stacktrace.FailureCause.throwableConstructorFor(java.lang.Class)", "com.google.common.base.Optional<java.lang.reflect.Constructor>.isPresent()", "net.thucydides.core.model.stacktrace.FailureCause.defaultConstructorFor(java.lang.Class)", "defaultConstructorFor(failureClass).get().newInstance()", "throwableConstructorFor(failureClass).get().newInstance(java.lang.AssertionError)", "java.lang.Class.isAssignableFrom(java.lang.Class)"], "Fixed commit": "0a183ff32db818975f06fd046e76d7f7c84340b3", "Url": "https://api.github.com/repos/robertzett/serenity-core", "Date": "2016-02-28T13:14:45Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((proxy) == null) { return java.net.Proxy.NO_PROXY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5252/buggy-version/src.main.java.com.object0r.TorRange.connections.ProxyConnection.java", "BodyUseAPI": [], "Fixed commit": "ba8da4a668cb4eeb1de5431d277faeef2e983ec8", "Url": "https://api.github.com/repos/nikos-glikis/TorRange", "Date": "2016-06-10T16:46:42Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fos != null) { try { fos.close(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7704/buggy-version/extra.java.com.oinux.android.ConfigLoader.java", "BodyUseAPI": ["java.io.FileOutputStream.close()"], "Fixed commit": "a6050198e975a96e7e3505f84ee9b78195d82c59", "Url": "https://api.github.com/repos/ssun125/platform_frameworks_base", "Date": "2016-05-27T17:30:21Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (count == 0) { _averageBins[tx][ty] = 0.0; }else { _averageBins[tx][ty] = total / count; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6462/buggy-version/binning-utilities.src.main.java.com.oculusinfo.binning.impl.AverageTileBucketView.java", "BodyUseAPI": [], "Fixed commit": "a6dff65aa2684f117ec4429c7a95b1c1c7ac4f17", "Url": "https://api.github.com/repos/unchartedsoftware/aperture-tiles", "Date": "2015-05-14T12:28:56Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MainActivity.data.hasUser()) { MainActivity.data.newUser(null); loginGreetings.setText(getGreeting()); android.widget.Toast.makeText(getActivity(), \"Sign out successfully !\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1533/buggy-version/app.src.main.java.ca.uottawa.ljin027.myrestaurant.LoginFragment.java", "BodyUseAPI": [], "Fixed commit": "103434d722021b7c7389ee7245c0bc8bc9c6f582", "Url": "https://api.github.com/repos/ljin027/MyRestaurant", "Date": "2015-02-15T17:10:10Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newNet) { this.outputLayer.put(i, edgeList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6922/buggy-version/Network.java", "BodyUseAPI": [], "Fixed commit": "4be4805b7c41cbb564de014f383151374a2603aa", "Url": "https://api.github.com/repos/mbucci/Neurolution", "Date": "2015-05-10T21:56:27Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newNet) { this.hiddenLayer.put(i, edgeList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6922/buggy-version/Network.java", "BodyUseAPI": [], "Fixed commit": "4be4805b7c41cbb564de014f383151374a2603aa", "Url": "https://api.github.com/repos/mbucci/Neurolution", "Date": "2015-05-10T21:56:27Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.ecn.urbapp.activities.MainActivity.internet) { i = new android.content.Intent(this.getActivity(), com.ecn.urbapp.activities.LoadExternalProjectsActivity.class); getActivity().startActivityForResult(i, Cst.CODE_LOAD_EXTERNAL_PROJECT); }else { i = new android.content.Intent(this.getActivity(), com.ecn.urbapp.activities.LoadLocalProjectsActivity.class); getActivity().startActivityForResult(i, Cst.CODE_LOAD_LOCAL_PROJECT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2416/buggy-version/Code.src.com.ecn.urbapp.fragments.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "1b8a46fc28e2aac3c7cb0e17bfb2d435399fd824", "Url": "https://api.github.com/repos/gab-y/FeatureApp", "Date": "2013-12-14T17:40:56Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isArmorSlots) button.setHelpMode(((com.phylogeny.extrabitmanipulation.client.gui.armor.GuiInventoryArmorSlots) (gui)).isInHelpMode());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4844/buggy-version/src.main.java.com.phylogeny.extrabitmanipulation.armor.capability.ChiseledArmorSlotsEventHandler.java", "BodyUseAPI": [], "Fixed commit": "fff11b398011f9c53b56e22de8b3ece186232af0", "Url": "https://api.github.com/repos/Phylogeny/ExtraBitManipulation", "Date": "2017-08-29T13:38:33Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (classifierFormatOutputFile.exists()) { org.apache.commons.io.FileUtils.forceDelete(classifierFormatOutputFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6822/buggy-version/dkpro-tc-ml-liblinear.src.main.java.org.dkpro.tc.ml.liblinear.LiblinearDataStreamWriter.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.forceDelete(java.io.File)"], "Fixed commit": "2afc54c6e02df0126a16ee6a151d5ec01dc2f7e3", "Url": "https://api.github.com/repos/dkpro/dkpro-tc", "Date": "2017-05-06T17:09:45Z"},
{"Line": "=>717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startMenu) { inMenu = false; startMenu = false; startPlatColor = 0; }else { inMenu = false; startMenu = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8753/buggy-version/src.com.fac.main.AnimRunner.java", "BodyUseAPI": [], "Fixed commit": "3887fe8a7bb32268a2671289fbeb45e6778f8a72", "Url": "https://api.github.com/repos/ThatIanGuy/Robot-Factory-2", "Date": "2017-04-27T15:17:59Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((field_based_gen_keep_non_contributing_tests_percentage) == 1) || (coinFlipRes)) processSequence(eSeq);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2349/buggy-version/src.main.java.randoop.generation.ForwardGenerator.java", "BodyUseAPI": [], "Fixed commit": "2812d4e7b40d0bb6e051f94c168207b16d8c5b07", "Url": "https://api.github.com/repos/nmaguirre/randoop", "Date": "2017-01-25T04:00:39Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cfg.getTopologyType().equals(\"VM\")) { java.lang.Runtime.getRuntime().exec(((\"ssh \" + (cfg.getHOST_SSH())) + \" sudo mn -c\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4755/buggy-version/manager.src.main.java.org.deltaproject.manager.core.HostAgentManager.java", "BodyUseAPI": ["java.lang.Runtime.exec(((\"ssh \" + (cfg.getHOST_SSH())) + \" sudo mn -c\"))", "org.deltaproject.manager.core.Configuration.getHOST_SSH()"], "Fixed commit": "9c5c22810c30e1414cb4ffbd577bf1313769d739", "Url": "https://api.github.com/repos/OpenNetworkingFoundation/DELTA", "Date": "2017-08-08T04:28:47Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (n != null) { java.lang.System.out.println(n); local.writeJson_launcher_profiles(OperatingSystemToUse, (((\"_Cracked_\" + (utils.nextSessionId())) + \"_\") + (n.toString())), n.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6586/buggy-version/src.tagapi_3.API_Interface.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.Object)", "java.lang.Object.toString()", "tagapi_3.Local.writeJson_launcher_profiles(java.lang.String,(((\"_Cracked_\" + (utils.nextSessionId())) + \"_\") + (n.toString())),java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "9a3ce1f57dcd6b5338769ca4d893c56b294ae628", "Url": "https://api.github.com/repos/ammarx/TagAPI_3", "Date": "2016-08-15T22:26:12Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (card == null) { fileName = \"ace_of_spades\"; output.add(fileName); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7698/buggy-version/Poker.src.poker.GUI.ClientView.java", "BodyUseAPI": [], "Fixed commit": "00c503f23c9c1aa078e41ea59c99cb21924204e5", "Url": "https://api.github.com/repos/Alekseylv/Poker-game", "Date": "2013-07-19T12:12:57Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.secGameState) != (data.GameControlData.STATE2_PENALTYSHOOT)) { data.remainingKickoffBlocked = (data.Rules.KICKOFF_TIME) * 1000; }else { data.remainingKickoffBlocked = (-10) * 1000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8928/buggy-version/src.controller.action.ui.state.Play.java", "BodyUseAPI": [], "Fixed commit": "2d069cd380fbd6ddc4659428fb2187027fab71ba", "Url": "https://api.github.com/repos/yuzong/GameController2", "Date": "2013-04-06T19:21:55Z"},
{"Line": "=>596", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.fastCapacityUpdate) { flowcap_accumulate.setValue(flowCapacityPerTimeStep); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4269/buggy-version/matsim.src.main.java.org.matsim.core.mobsim.qsim.qnetsimengine.QueueWithBuffer.java", "BodyUseAPI": [], "Fixed commit": "5e7ee8982d6af281954424d2d597333db8c81d2f", "Url": "https://api.github.com/repos/sebhoerl/matsim", "Date": "2015-08-10T11:23:43Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Preparation.eventsLoader.getContestData().getParticipant(data.teamData.teamId)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (team == null) { setVisible(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8027/buggy-version/src.main.java.ru.ifmo.acm.backend.player.widgets.TeamInfoWidget.java", "BodyUseAPI": [], "Fixed commit": "19f679da21b71751196c272d62bbad57b03bca37", "Url": "https://api.github.com/repos/Aksenov239/icpc-live-v2", "Date": "2015-12-11T19:02:53Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pcdLoader.Finder.findFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (file == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6327/buggy-version/src.launch.Launcher.java", "BodyUseAPI": [], "Fixed commit": "c53b5d95ccb22a5454c0c87a89a1cb429d6a9f70", "Url": "https://api.github.com/repos/HugoAlder/PointCloud-Renderer", "Date": "2016-05-03T12:27:56Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((destination.exists()) == false) { try { org.codehaus.plexus.util.FileUtils.forceMkdir(destination.getParentFile()); } catch (java.io.IOException e) { throw new org.apache.maven.wagon.TransferFailedException((\"Failed to mk dir: \" + destination), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9152/buggy-version/src.main.java.org.springframework.build.aws.maven.AbstractWagon.java", "BodyUseAPI": ["org.codehaus.plexus.util.FileUtils.forceMkdir(java.io.File)", "java.io.File.getParentFile()"], "Fixed commit": "8c0ed5162f34499b4566c8a457df9eeabbac400e", "Url": "https://api.github.com/repos/yunglin/aws-maven", "Date": "2013-05-29T08:19:20Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { mWebView.restoreState(savedInstanceState); }else if ((mUrl) != null) { mWebView.loadUrl(mUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4682/buggy-version/src.com.airlocksoftware.hackernews.fragment.WebFragment.java", "BodyUseAPI": ["android.webkit.WebView.restoreState(android.os.Bundle)"], "Fixed commit": "7a40063e5062215d249576c959c480123844c424", "Url": "https://api.github.com/repos/pkillian/HackerNews", "Date": "2013-12-31T01:26:59Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arrTimeAtNextOnDirectRouteWithNewVehicle > (nextAct.getTheoreticalLatestOperationStartTime())) { return ConstraintsStatus.NOT_FULFILLED_BREAK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5235/buggy-version/jsprit-core.src.main.java.jsprit.core.problem.constraint.TimeWindowConstraint.java", "BodyUseAPI": [], "Fixed commit": "312ebc8313934481734b30078eb7c8660e28155e", "Url": "https://api.github.com/repos/jsprit/jsprit", "Date": "2014-05-14T21:53:26Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["iFacts.getNewVehicle().getLatestArrival()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((latestVehicleArrival < (prevAct.getTheoreticalEarliestOperationStartTime())) || (latestVehicleArrival < (newAct.getTheoreticalEarliestOperationStartTime()))) || (latestVehicleArrival < (nextAct.getTheoreticalEarliestOperationStartTime()))) { return ConstraintsStatus.NOT_FULFILLED_BREAK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5235/buggy-version/jsprit-core.src.main.java.jsprit.core.problem.constraint.TimeWindowConstraint.java", "BodyUseAPI": [], "Fixed commit": "312ebc8313934481734b30078eb7c8660e28155e", "Url": "https://api.github.com/repos/jsprit/jsprit", "Date": "2014-05-14T21:53:26Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sendMode) == (SendMode.UPDATE)) { offersModel.replaceOffer(singleOffer.getOffer()); }else { offersModel.addOffer(singleOffer.getOffer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9134/buggy-version/app.src.main.java.neeedo.imimaprx.htw.de.neeedo.rest.offer.PostCreateUpdateOfferAsyncTask.java", "BodyUseAPI": [], "Fixed commit": "4979411289950a41710de4cbdfa6fe4742dff9e0", "Url": "https://api.github.com/repos/neeedo/neeedo-android", "Date": "2015-07-28T08:16:39Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (notfound) { offers.add(offer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9134/buggy-version/app.src.main.java.neeedo.imimaprx.htw.de.neeedo.entities.offer.Offers.java", "BodyUseAPI": [], "Fixed commit": "4979411289950a41710de4cbdfa6fe4742dff9e0", "Url": "https://api.github.com/repos/neeedo/neeedo-android", "Date": "2015-07-28T08:16:39Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["redis.clients.jedis.Jedis.sentinelGetMasterAddrByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((masterAddr == null) || ((masterAddr.size()) != 2)) { log.warning(((((\"Can not get master addr, master name: \" + masterName) + \". Sentinel: \") + hap) + \".\")); jedis.disconnect(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2715/buggy-version/src.main.java.redis.clients.jedis.JedisSentinelPool.java", "BodyUseAPI": [], "Fixed commit": "ab2f43b8c0155f03c8b8f3932141630e1c825f65", "Url": "https://api.github.com/repos/conflictpredictor/jedis", "Date": "2014-05-23T08:18:07Z"},
{"Line": "=>741", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<mage.abilities.effects.ContinuousEffect, java.util.List<mage.abilities.Ability>>.get(mage.abilities.effects.ContinuousEffect)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((appliedAbilities == null) || (!(appliedAbilities.contains(ability)))) { if (appliedAbilities == null) { appliedAbilities = new java.util.ArrayList<mage.abilities.Ability>(); appliedEffects.put(effect, appliedAbilities); } appliedAbilities.add(ability); effect.apply(Layer.AbilityAddingRemovingEffects_6, SubLayer.NA, ability, game); effectApplied = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1546/buggy-version/Mage.src.mage.abilities.effects.ContinuousEffects.java", "BodyUseAPI": ["java.util.List<mage.abilities.Ability>.add(mage.abilities.Ability)", "mage.abilities.effects.ContinuousEffect.apply(Layer.AbilityAddingRemovingEffects_6,SubLayer.NA,mage.abilities.Ability,mage.game.Game)"], "Fixed commit": "463cec87544a683ce8b2447816066c28aa7f822e", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-01-07T14:23:33Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (roomed) java.lang.System.out.println(((((((p.getName()) + \" joined the room \") + (room)) + \". There are \") + (rm.getRoomByID(room).getNbPlayers())) + \" players in the room.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9021/buggy-version/src.thefuryoftherabbidgrans.server.RoomMatching.java", "BodyUseAPI": [], "Fixed commit": "0db66382c3f7d602590a56a23f0406ae377ba426", "Url": "https://api.github.com/repos/UCDP-Brony/FuryOfTheRabbidGransServer", "Date": "2016-07-21T16:40:47Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.cristhian.weathervacations.fragments.HomeFragment.weathers.get(0).getMain().getPlaceName()) != null) { textViewName2.setText(com.cristhian.weathervacations.fragments.HomeFragment.weathers.get(0).getMain().getPlaceName().toString()); }else { textViewName2.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/822/buggy-version/app.src.main.java.com.cristhian.weathervacations.fragments.HomeFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(com.cristhian.weathervacations.fragments.HomeFragment.weathers.get(0).getMain().getPlaceName().toString())", "com.cristhian.weathervacations.fragments.HomeFragment.weathers.get(0).getMain().getPlaceName()", "java.util.List<com.cristhian.weathervacations.models.WeatherData>.get(int)", "com.cristhian.weathervacations.fragments.HomeFragment.weathers.get(0).getMain()", "com.cristhian.weathervacations.fragments.HomeFragment.weathers.get(0).getMain().getPlaceName().toString()"], "Fixed commit": "e8ec47e3c4bc1566527e14ae9e592e766c2dc11d", "Url": "https://api.github.com/repos/cristh18/WeatherVacations", "Date": "2016-02-15T03:41:41Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.cristhian.weathervacations.fragments.HomeFragment.weathers.get(1).getMain().getPlaceName()) != null) { textViewName3.setText(com.cristhian.weathervacations.fragments.HomeFragment.weathers.get(1).getMain().getPlaceName().toString()); }else { textViewName3.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/822/buggy-version/app.src.main.java.com.cristhian.weathervacations.fragments.HomeFragment.java", "BodyUseAPI": ["java.util.List<com.cristhian.weathervacations.models.WeatherData>.get(int)", "android.widget.TextView.setText(com.cristhian.weathervacations.fragments.HomeFragment.weathers.get(1).getMain().getPlaceName().toString())", "com.cristhian.weathervacations.fragments.HomeFragment.weathers.get(1).getMain().getPlaceName().toString()", "com.cristhian.weathervacations.fragments.HomeFragment.weathers.get(1).getMain().getPlaceName()", "com.cristhian.weathervacations.fragments.HomeFragment.weathers.get(1).getMain()"], "Fixed commit": "e8ec47e3c4bc1566527e14ae9e592e766c2dc11d", "Url": "https://api.github.com/repos/cristh18/WeatherVacations", "Date": "2016-02-15T03:41:41Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prefix == null) || ((org.exist.dom.persistent.NodeImpl.getNodeType()) == (org.w3c.dom.Node.DOCUMENT_NODE))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6548/buggy-version/src.org.exist.dom.persistent.NodeImpl.java", "BodyUseAPI": [], "Fixed commit": "26e68fd551d3b717664972533aa8cdaa54b15ab5", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-09T00:03:28Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isReserved && (!(reserves.contains(newCard)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4906/buggy-version/Project.src.Model.Player.java", "BodyUseAPI": [], "Fixed commit": "10e169d21b76fa5c40d03615a7d97bd2dd79a8b2", "Url": "https://api.github.com/repos/zhby99/CS242Project", "Date": "2017-04-24T23:44:14Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (reserves.contains(newCard)) { reserves.remove(newCard); addNewCard(newCard); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4906/buggy-version/Project.src.Model.Player.java", "BodyUseAPI": ["Model.Player.addNewCard(Model.Card)", "java.util.ArrayList<Model.Card>.remove(Model.Card)"], "Fixed commit": "10e169d21b76fa5c40d03615a7d97bd2dd79a8b2", "Url": "https://api.github.com/repos/zhby99/CS242Project", "Date": "2017-04-24T23:44:14Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((turnCount) > 0) { chessai.Move lm = moves[((turnCount) - 1)]; if (((((((turnCount) > 0) && ((lm.piece.name) == 'P')) && ((java.lang.Math.abs(((lm.ey) - (lm.sy)))) == 2)) && ((lm.piece.color) == (((turnCount) % 2) == 0 ? Color.BLACK : Color.WHITE))) && ((lm.ex) == (m.ex))) && ((lm.ey) == (m.sy))) { break; }else if ((board[m.ex][m.ey].name) == ' ') return false; }else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8487/buggy-version/Java.Board.java", "BodyUseAPI": [], "Fixed commit": "ba040386a64b6ba36ad35fce7515d3e4404eae13", "Url": "https://api.github.com/repos/nanoandrew4/ChessAI", "Date": "2016-04-11T23:18:02Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_descripcion == null) _descripcion = \"Solicitud de Aportaci\u00f3n de Documentaci\u00f3n \" + (properties.FapProperties.get(\"application.name\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5087/buggy-version/fap.app.services.RegistroService.java", "BodyUseAPI": [], "Fixed commit": "0c14a93ccae79f9477fc6f1d734591adbf9f76be", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2012-03-29T13:10:56Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jump.isPressed(scaledX2, scaledY2)) { jump.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4371/buggy-version/app.src.main.java.com.megamal.game.state.MenuState.java", "BodyUseAPI": ["com.megamal.framework.util.UIButton.cancel()"], "Fixed commit": "70e10870575cef1cac4a9ec0a2f86cb2242bac72", "Url": "https://api.github.com/repos/MalBerbatovci/Mawi", "Date": "2015-11-02T13:43:45Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lcs == null) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6833/buggy-version/src.main.java.jp.ac.osaka_u.ist.sdl.scanalyzer.metrics.ModificationAnalyzeHelper.java", "BodyUseAPI": [], "Fixed commit": "71dfbe7ff72ab02ef05c517d1fd004034d1f062e", "Url": "https://api.github.com/repos/k-hotta/SCAnalyzer", "Date": "2014-12-11T10:19:47Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isMatchedDevice(device))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6753/buggy-version/src.com.wm.activity.AddDeviceActivity.java", "BodyUseAPI": [], "Fixed commit": "45229788c6bbb9f283ab27efdb820ca9824408f4", "Url": "https://api.github.com/repos/lk5103613/WMBloodPressureMeasurement", "Date": "2015-04-16T08:26:28Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msg instanceof org.ws4d.coap.interfaces.CoapRequest) lastRequest = ((org.ws4d.coap.interfaces.CoapRequest) (msg));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8599/buggy-version/ws4d-jcoap.src.main.java.org.ws4d.coap.connection.BasicCoapClientChannel.java", "BodyUseAPI": [], "Fixed commit": "c3e51bc9b146e224acc5fe297b46838fc4854591", "Url": "https://api.github.com/repos/tst3000/ws4d-jcoap-clone", "Date": "2013-06-04T16:46:40Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((errors.getSubtermCount()) == 0) return noError; else for (org.spoofax.interpreter.terms.IStrategoTerm note : errors.getAllSubterms()) { if ((note.getTermType()) == (org.spoofax.interpreter.terms.IStrategoTerm.LIST)) { if ((note.getSubtermCount()) > 0) { for (org.spoofax.interpreter.terms.IStrategoTerm deepNote : note.getAllSubterms()) { org.sugarj.driver.cli.DriverCLI.reportCLI(deepNote, type); } noError = false; } }else { org.sugarj.driver.cli.DriverCLI.reportCLI(note, type); noError = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9135/buggy-version/src.org.sugarj.driver.cli.DriverCLI.java", "BodyUseAPI": ["org.spoofax.interpreter.terms.IStrategoList.getAllSubterms()"], "Fixed commit": "97e3e2787c73fd6bbf5559c2a753938d1a6898af", "Url": "https://api.github.com/repos/sugar-lang/compiler", "Date": "2015-05-05T07:54:53Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(locationClient.isConnected())) { locationClient.connect(); android.util.Log.w(com.mac.SafeWalk.HomeScreenActivity.class.toString(), \"Location client connected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8254/buggy-version/src.com.mac.SafeWalk.HomeScreenActivity.java", "BodyUseAPI": ["com.google.android.gms.location.LocationClient.connect()"], "Fixed commit": "66b9d24abcd205684711c65199852f44a7dba045", "Url": "https://api.github.com/repos/SafeWalk/SafeWalk", "Date": "2014-05-03T21:45:21Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getParameterTypes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (paramTypes[j].equals(java.lang.Integer.class)) { paramTypes[j] = int.class; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3995/buggy-version/OLD.ReflectiveParser.src.Parser.java", "BodyUseAPI": [], "Fixed commit": "583b51f9d03a300910afc5d49624a29e50043193", "Url": "https://api.github.com/repos/chocolatethunder/Java-Parser", "Date": "2017-03-15T18:53:44Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getParameterTypes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (paramTypes[j].equals(java.lang.Float.class)) { paramTypes[j] = float.class; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3995/buggy-version/OLD.ReflectiveParser.src.Parser.java", "BodyUseAPI": [], "Fixed commit": "583b51f9d03a300910afc5d49624a29e50043193", "Url": "https://api.github.com/repos/chocolatethunder/Java-Parser", "Date": "2017-03-15T18:53:44Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<ch.cern.dbod.db.entity.Job>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((job.getCompletionDate()) != null) completioncell.setLabel(dateTimeFormatter.format(job.getCompletionDate())); else completioncell.setLabel(\"-\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6917/buggy-version/src.main.java.ch.cern.dbod.ui.controller.InstanceController.java", "BodyUseAPI": ["ch.cern.dbod.ui.controller.Listcell.setLabel(java.lang.String)", "java.text.DateFormat.format(job.getCompletionDate())", "ch.cern.dbod.db.entity.Job.getCompletionDate()"], "Fixed commit": "70e88c6120414a02339339303e72140d57d02449", "Url": "https://api.github.com/repos/cerndb/dbod-webapp", "Date": "2015-11-17T14:10:40Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tlen <= (aDateStr.length())) dstr = aDateStr.substring(0, tlen); else dstr = aDateStr;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8410/buggy-version/src.trajstat.forms.FrmAddData.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "d6545efa8b29adeb3ca611151ad70e2ae9d1179b", "Url": "https://api.github.com/repos/Yaqiang/TrajStat", "Date": "2015-09-17T03:27:57Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tlen <= (aDateStr.length())) dstr = aDateStr.substring(0, tlen); else dstr = aDateStr;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8410/buggy-version/src.trajstat.forms.FrmAddData.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "d6545efa8b29adeb3ca611151ad70e2ae9d1179b", "Url": "https://api.github.com/repos/Yaqiang/TrajStat", "Date": "2015-09-17T03:27:57Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == parentId) { return startTestItem(rq); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7727/buggy-version/src.main.java.com.epam.reportportal.service.LaunchImpl.java", "BodyUseAPI": [], "Fixed commit": "50f12f502d732d05e8965324089d2a644c70f425", "Url": "https://api.github.com/repos/reportportal/client-java", "Date": "2017-12-28T11:57:51Z"},
{"Line": "=>1056", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(linkTitleUrl)) { subdrawerpanel.setProperty(\"linkTitleUrl\", linkTitleUrl); if (subdrawerpanel.hasNode(\"titlelink\")) { javax.jcr.Node titleLinkNode = subdrawerpanel.getNode(\"titlelink\"); titleLinkNode.setProperty(\"url\", linkTitleUrl); } }else { linkUrlNotFoundFlag = true; com.cisco.dse.global.migration.rproductlanding.RProductLandingVariation1.log.debug((\"linkurl property is not set at \" + (subdrawerpanel.getPath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2027/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.rproductlanding.RProductLandingVariation1.java", "BodyUseAPI": ["javax.jcr.Node.setProperty(java.lang.String,java.lang.String)", "javax.jcr.Node.setProperty(java.lang.String,java.lang.String)"], "Fixed commit": "dc16c2022a241fa638bf3a0647f77b6f6850e0f1", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2016-02-18T11:45:52Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logger.isDebugEnabled()) { java.lang.StringBuilder sb = new java.lang.StringBuilder(); sb.append(filterConfig.getFilterName()).append(\" load lookup rules as follows :\\n\"); for (java.util.Map.Entry<java.lang.String, com.github.obase.webc.ServletMethodObject[]> entry : rules.entrySet()) { sb.append(entry.getKey()).append(\": \").append(java.util.Arrays.toString(entry.getValue())).append('\\n'); } sb.deleteCharAt(((sb.length()) - 1)); logger.debug(sb.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5017/buggy-version/obase-webc.src.main.java.com.github.obase.webc.support.BaseServletMethodProcessor.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "5a0be0897ca18f80110f7a4294c8b757ddb45167", "Url": "https://api.github.com/repos/obase/java", "Date": "2016-12-05T13:46:01Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6702/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "6dc6da37025a7a73f7ef360e322bff9fda0eec2f", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-04-23T19:37:30Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (arguments == null) { throw new java.lang.IllegalArgumentException(\"One argument is expected\"); }else if ((arguments.size()) != 2) { throw new java.lang.IllegalArgumentException(((\"Two arguments were expected, \" + (arguments.size())) + \" were supplied\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5603/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionLeft.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "afda90ed8ab58124bd7073961ec5abb6b1d9a0e1", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-22T05:57:58Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (over.equals(\"2\")) { over = \"\u03b4\ufffd\ufffd\ufffd\"; }else if (over.equals(\"3\")) { over = \"\ufffd\ufffd\ufffd\"; }else if (over.equals(\"0\")) { over = \"\u03b4\ufffd\ufffd\ufffd\ufffd\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8419/buggy-version/ArcProject.src.org.sdu.view.taskshow.TaskDetialShow.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "06ddaf0bf545faa12dfa4435e2014f4ee2514af8", "Url": "https://api.github.com/repos/sdujq/ArcGisProject", "Date": "2012-07-17T03:14:36Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(task.getState().trim())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (state == 0) { b1.setEnabled(false); b3.setEnabled(false); TabHomeActivity.home.mPager.setCurrentItem(0, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8419/buggy-version/ArcProject.src.org.sdu.view.taskshow.TaskDetialShow.java", "BodyUseAPI": [], "Fixed commit": "06ddaf0bf545faa12dfa4435e2014f4ee2514af8", "Url": "https://api.github.com/repos/sdujq/ArcGisProject", "Date": "2012-07-17T03:14:36Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((value.length()) == 4) { value = (((((\"#\" + (value.charAt(1))) + '0') + (value.charAt(2))) + '0') + (value.charAt(3))) + '0'; }else if ((value.length()) == 5) { value = (((((((\"#\" + (value.charAt(1))) + '0') + (value.charAt(2))) + '0') + (value.charAt(3))) + '0') + (value.charAt(4))) + '0'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4644/buggy-version/src.com.excelsecu.axml.BaseTranslator.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.length()"], "Fixed commit": "8f5352e39e3358f26d59a4902d18b5a41d23ae0d", "Url": "https://api.github.com/repos/sickworm/AndroidXMLToJava", "Date": "2015-01-28T01:58:20Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(recordingSession.isAudioReady(recordingSession.getTrack()))) { view.displayAlertDialog(R.string.dialog_title_failure, R.string.error_finalization_failed); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4563/buggy-version/app.src.main.java.io.github.dstrekelj.pajamas.screens.record.RecordPresenter.java", "BodyUseAPI": [], "Fixed commit": "4d17443539e1f39cf0aa878a31aad44eb2767954", "Url": "https://api.github.com/repos/dstrekelj/Pajamas", "Date": "2016-08-27T15:48:06Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((register.isSpilled()) != (other.register.isSpilled())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6823/buggy-version/Compiler.src.compiler.firm.backend.operations.dummy.PhiGraphSolver.java", "BodyUseAPI": [], "Fixed commit": "a089d3827d98f6fca16ff70a097996444ff5392a", "Url": "https://api.github.com/repos/replimoc/compiler", "Date": "2015-02-01T13:50:18Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (register.isSpilled()) { if ((register.getMemoryPointer().getOffset()) != (other.register.getMemoryPointer().getOffset())) return false; }else { if ((register.getRegisterBundle()) == null) { if ((other.register.getRegisterBundle()) != null) return false; }else if (!(register.getRegisterBundle().equals(other.register.getRegisterBundle()))) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6823/buggy-version/Compiler.src.compiler.firm.backend.operations.dummy.PhiGraphSolver.java", "BodyUseAPI": ["compiler.firm.backend.storage.RegisterBased.getRegisterBundle()", "register.getMemoryPointer().getOffset()", "register.getRegisterBundle().equals(other.register.getRegisterBundle())", "compiler.firm.backend.storage.RegisterBased.getMemoryPointer()", "compiler.firm.backend.storage.RegisterBased.getRegisterBundle()"], "Fixed commit": "a089d3827d98f6fca16ff70a097996444ff5392a", "Url": "https://api.github.com/repos/replimoc/compiler", "Date": "2015-02-01T13:50:18Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (baseUrl == null) { baseUrl = (org.overlord.commons.config.JBossServer.getBaseUrl()) + \"/s-ramp-server\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5130/buggy-version/s-ramp-common.src.main.java.org.overlord.sramp.common.Sramp.java", "BodyUseAPI": [], "Fixed commit": "acf98a659606288b6a9f224263afa46fefef3e60", "Url": "https://api.github.com/repos/Governance/s-ramp", "Date": "2013-12-03T16:07:40Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recipe == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3594/buggy-version/src.main.java.mariculture.core.handlers.CrucibleHandler.java", "BodyUseAPI": [], "Fixed commit": "ca479864bd3bace19ab14a930caaac64900868f2", "Url": "https://api.github.com/repos/joshiejack/Mariculture", "Date": "2015-02-24T12:01:55Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vat == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3594/buggy-version/src.main.java.mariculture.core.handlers.VatHandler.java", "BodyUseAPI": [], "Fixed commit": "ca479864bd3bace19ab14a930caaac64900868f2", "Url": "https://api.github.com/repos/joshiejack/Mariculture", "Date": "2015-02-24T12:01:55Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getValue(i.getItem(1), true)) == 0) { i.setItem(0, null); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7613/buggy-version/src.main.java.com.github.maxopoly.WurstCivTools.anvil.AnvilHandler.java", "BodyUseAPI": ["org.bukkit.inventory.AnvilInventory.setItem(int,<nulltype>)"], "Fixed commit": "cc1cf86d14b4e953a36673be21aafc981caf7b0d", "Url": "https://api.github.com/repos/Civcraft/WurstCivTools", "Date": "2017-05-24T15:13:37Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.id.compareTo(highestId)) < 0) { highestId = this.id; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8639/buggy-version/src.paxos.Leader.java", "BodyUseAPI": [], "Fixed commit": "5649a8eace7dadc60832cf7110f97bf0ab40c2b9", "Url": "https://api.github.com/repos/JerameyATyler/Paxos", "Date": "2015-12-03T23:09:03Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["index.getDimension(dimension.toLowerCase()).get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (idObject == null) { if ((value == null) || (\"\".equals(value))) { final int dimIndex = dimIndexObject; return new com.metamx.druid.index.brita.ValueMatcher() { @java.lang.Override public boolean matches() { java.lang.String[][] dims = holder.getKey().getDims(); if ((dimIndex >= (dims.length)) || ((dims[dimIndex]) == null)) { return true; } return false; } }; } return new com.metamx.druid.index.brita.BooleanValueMatcher(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4186/buggy-version/server.src.main.java.com.metamx.druid.index.v1.IncrementalIndexStorageAdapter.java", "BodyUseAPI": [], "Fixed commit": "46011bcbadba4037588423c23defac9f31e1438d", "Url": "https://api.github.com/repos/metamx/druid", "Date": "2013-09-18T23:14:10Z"},
{"Line": "=>1087", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buschtrommel) != null) { java.util.Vector<java.lang.String> toBeRemoved = new java.util.Vector<>(); for (java.lang.String key : buschtrommel.getLocalShares().keySet()) { if (path.equals(buschtrommel.getLocalShares().get(key).getPath())) { toBeRemoved.add(key); } } for (java.lang.String bla : toBeRemoved) { if (path.equals(buschtrommel.getLocalShares().get(bla).getPath())) { buschtrommel.RemoveFileFromShare(bla); } } sharesModel.removeShare(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5720/buggy-version/Buschtrommel.src.de.tr0llhoehle.buschtrommel.gui.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "b61ebf22e2bf1b04655bc0dba52380c81b5df34a", "Url": "https://api.github.com/repos/toebbel/buschtrommel", "Date": "2013-01-25T14:42:01Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((au.com.mineauz.MobHunting.MobHunting.config().broadcastAchievement) && ((!(achievement instanceof au.com.mineauz.MobHunting.achievements.TheHuntBegins)) || (au.com.mineauz.MobHunting.MobHunting.config().broadcastFirstAchievement))) broadcast(((org.bukkit.ChatColor.GOLD) + (au.com.mineauz.MobHunting.Messages.getString(\"mobhunting.achievement.awarded.broadcast\", \"player\", player.getName(), \"name\", (((\"\" + (org.bukkit.ChatColor.WHITE)) + (org.bukkit.ChatColor.ITALIC)) + (achievement.getName()))))), player);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7710/buggy-version/src.au.com.mineauz.MobHunting.achievements.AchievementManager.java", "BodyUseAPI": ["au.com.mineauz.MobHunting.achievements.AchievementManager.broadcast(((org.bukkit.ChatColor.GOLD) + (au.com.mineauz.MobHunting.Messages.getString(\"mobhunting.achievement.awarded.broadcast\", \"player\", player.getName(), \"name\", (((\"\" + (org.bukkit.ChatColor.WHITE)) + (org.bukkit.ChatColor.ITALIC)) + (achievement.getName()))))),org.bukkit.entity.Player)", "au.com.mineauz.MobHunting.Messages.getString(java.lang.String,java.lang.String,player.getName(),java.lang.String,(((\"\" + (org.bukkit.ChatColor.WHITE)) + (org.bukkit.ChatColor.ITALIC)) + (achievement.getName())))", "au.com.mineauz.MobHunting.achievements.Achievement.getName()"], "Fixed commit": "ffbfc03f3fa7f475ce08d43bd5fda4bd6417b9a5", "Url": "https://api.github.com/repos/Schmoller/MobHunting", "Date": "2014-01-25T01:30:12Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Iterable<T>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(it.hasNext())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/426/buggy-version/src.main.java.com.alexrnl.commons.utils.CollectionUtils.java", "BodyUseAPI": [], "Fixed commit": "777794be730fea1b812e4dc6f388f0ec24217c45", "Url": "https://api.github.com/repos/AlexRNL/Commons", "Date": "2013-07-27T11:36:29Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (parameters != null) { for (int i = 0; i < (parameters.size()); i++) { ast.Type type = ((ast.Type) (((ast.Parameter) (parameters.get(i))).getType())); java.lang.String name = ((ast.Parameter) (parameters.get(i))).getVariable(); addToMemory(type, name, value.get(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2216/buggy-version/src.ast.AstTraverser.java", "BodyUseAPI": [], "Fixed commit": "7c2c5da73350897167eca47253c147a8a206edfe", "Url": "https://api.github.com/repos/joosephe/JavaQ", "Date": "2014-05-28T13:46:33Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dbConn)) { return com.blade.mvc.view.RestResponse.fail(\"\u8bf7\u68c0\u67e5\u6570\u636e\u5e93\u8fde\u63a5\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1577/buggy-version/src.main.java.com.tale.controller.InstallController.java", "BodyUseAPI": [], "Fixed commit": "2566f641c470e0c7b5c80965994622efd5a9d4f9", "Url": "https://api.github.com/repos/trytrytryiii/tale", "Date": "2017-03-02T09:29:28Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((helper._monthIncomeRecyclerView.getAdapter()) == null) { com.suzhou.carmanager.view.DividerItemDecoration itemDecoration = new com.suzhou.carmanager.view.DividerItemDecoration(_context, android.support.v7.widget.LinearLayoutManager.VERTICAL, R.drawable.recycle_item_divider_1); helper._monthIncomeRecyclerView.addItemDecoration(itemDecoration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8815/buggy-version/CarManager.CarManager.app.src.main.java.com.suzhou.carmanager.adapter.YearIncomeAdapter.java", "BodyUseAPI": ["android.support.v7.widget.RecyclerView.addItemDecoration(com.suzhou.carmanager.view.DividerItemDecoration)"], "Fixed commit": "5481bc4ea27edce930cc61c940d067f3eaf78357", "Url": "https://api.github.com/repos/v-jibfen/CarManager", "Date": "2017-12-01T08:00:11Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mBreedEditText.getText().toString().trim()", "mNameEditText.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((((mCurrentPetUri) == null) && (android.text.TextUtils.isEmpty(nameString))) && (android.text.TextUtils.isEmpty(breedString))) && (android.text.TextUtils.isEmpty(mWeightEditText.getText()))) && ((mGender) == (PetContract.PetEntry.GENDER_UNKNOWN))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6790/buggy-version/app.src.main.java.com.example.android.pets.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "860ca00eabdb24f6ba4501cb6d4903ccdb3d688d", "Url": "https://api.github.com/repos/toddskinner/petsapp", "Date": "2016-12-16T04:33:24Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(mWeightEditText.getText()))) { weightInteger = java.lang.Integer.parseInt(mWeightEditText.getText().toString().trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6790/buggy-version/app.src.main.java.com.example.android.pets.EditorActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(mWeightEditText.getText().toString().trim())", "mWeightEditText.getText().toString()", "android.widget.EditText.getText()", "mWeightEditText.getText().toString().trim()"], "Fixed commit": "860ca00eabdb24f6ba4501cb6d4903ccdb3d688d", "Url": "https://api.github.com/repos/toddskinner/petsapp", "Date": "2016-12-16T04:33:24Z"},
{"Line": "=>677", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.owner) != null) com.orientechnologies.orient.core.record.ORecordInternal.track(this.owner, identifiable);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6913/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.record.ridbag.sbtree.OSBTreeRidBag.java", "BodyUseAPI": [], "Fixed commit": "6f9cf694f4f679081c9e91889150b81265a92696", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-07-02T14:44:35Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (NoteType.EAVROP.equals(getNoteType())) { se.inera.fmu.domain.model.person.Person person = getPerson(); if ((getPerson()) != null) { if (person instanceof se.inera.fmu.domain.model.person.HoSPerson) { se.inera.fmu.domain.model.person.HoSPerson hosPerson = ((se.inera.fmu.domain.model.person.HoSPerson) (person)); if ((hosPerson.getHsaId()) != null) { return hosPerson.getHsaId().equals(hsaId); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/30/buggy-version/src.main.java.se.inera.fmu.domain.model.eavrop.note.Note.java", "BodyUseAPI": [], "Fixed commit": "1a4a73d838690d0748b50da05d9a0f12e04bd17e", "Url": "https://api.github.com/repos/rasheedamir/fmu", "Date": "2014-11-21T08:46:00Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.appphil.categories.utils.PlayGamesUtils.getOpponentsParticipantId(com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch,getCategoriesApplication())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (othersParticipantId != null) { com.google.android.gms.games.multiplayer.Participant other = match.getParticipant(othersParticipantId); java.lang.System.out.println((\"Completed match against \" + (other.getDisplayName()))); android.view.View view = getMatchCardView(other.getIconImageUri(), (((getResources().getString(R.string.completed_match_against)) + \" \") + (other.getDisplayName())), de.appphil.categories.utils.TimeUtils.getMatchLastUpdatedTime(this, match.getLastUpdatedTimestamp())); view.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { receivedMatch(match); } }); inputLayout.addView(view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5331/buggy-version/app.src.main.java.de.appphil.categories.activities.TurnBasedMenuActivity.java", "BodyUseAPI": ["com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch.getParticipant(java.lang.String)"], "Fixed commit": "e811f19e8444b0e081786395d419a6c66971cbbf", "Url": "https://api.github.com/repos/PhilippDE/Categories", "Date": "2017-04-06T15:12:51Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.equals(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (windows) { value = value.replace(\"\\\\\", \"/\"); java.lang.String winhome = java.lang.System.getProperty(\"user.home\").replace(\"\\\\\", \"/\"); if (value.startsWith(winhome)) { return value.replaceFirst(winhome, \"~\"); }else { return value.replace(\"\\\\\", \"/\"); } }else { if (value.startsWith(java.lang.System.getProperty(\"user.home\"))) { return value.replaceFirst(java.lang.System.getProperty(\"user.home\"), \"~\"); }else { return value; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/270/buggy-version/src.main.java.grisu.gricli.environment.DirVar.java", "BodyUseAPI": [], "Fixed commit": "83b1245f0e7ca5daeda7cff2cd9fade9308ad60f", "Url": "https://api.github.com/repos/sina-masoud-ansari/gricli", "Date": "2011-09-05T06:15:06Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((attName.size()) != (temp_tuple.tuple_values.size())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8768/buggy-version/src.kickassdb.Tuple.java", "BodyUseAPI": [], "Fixed commit": "fb32989b0c74ee36e31d4a24ff7b6e95adbdf3a3", "Url": "https://api.github.com/repos/ocampos16/KickAssDB", "Date": "2014-03-24T06:47:41Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((index > (dims.length)) || ((dims[index]) != null)) { throw new com.metamx.common.ISE(\"Dimension[%s] occurred more than once in InputRow\", dimension); }else { dims[index] = getDimVals(dimValues.get(dimension), dimensionValues); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3502/buggy-version/processing.src.main.java.io.druid.segment.incremental.IncrementalIndex.java", "BodyUseAPI": [], "Fixed commit": "ddca17801e891e3ba304179c07c3542e4648a448", "Url": "https://api.github.com/repos/dclim/druid", "Date": "2015-11-22T09:53:33Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MainActivity.jedn.equals(\"'c'\")) MainActivity.jedn = \"'f'\"; else MainActivity.jedn = \"'c'\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5780/buggy-version/app.src.main.java.a195054.astroweather_1.SettingsFragment.java", "BodyUseAPI": [], "Fixed commit": "61605a716fb5ff5724d427744e9a9d0da0c1e2aa", "Url": "https://api.github.com/repos/wujeksado/AstroWeather_2", "Date": "2017-03-14T21:34:23Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isAlive())) { return new se.liu.ida.tddd78.towerdefense.objects.commands.BountyCommand(this.bounty); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4903/buggy-version/src.se.liu.ida.tddd78.towerdefense.objects.monster.BasicMonster.java", "BodyUseAPI": [], "Fixed commit": "ec51bcf0c05109d14a4fab502e21686f901cc54d", "Url": "https://api.github.com/repos/SebastianCallh/java-tower-defense", "Date": "2015-04-04T16:34:32Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (quantity < 0) { Print(\"Invalid Number\", \"text/plain\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6029/buggy-version/src.main.java.me.stutiguias.webportal.webserver.request.type.MailRequest.java", "BodyUseAPI": [], "Fixed commit": "4392d0f6f6fc7bdc0fa55d308e1fc80003645466", "Url": "https://api.github.com/repos/stutiguias/webportal", "Date": "2013-05-16T18:11:17Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (qtd < 0) { Print(\"Invalid Number\", \"text/plain\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6029/buggy-version/src.main.java.me.stutiguias.webportal.webserver.request.type.MyItemsRequest.java", "BodyUseAPI": [], "Fixed commit": "4392d0f6f6fc7bdc0fa55d308e1fc80003645466", "Url": "https://api.github.com/repos/stutiguias/webportal", "Date": "2013-05-16T18:11:17Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((element.getAnnotation(com.raizlabs.android.dbflow.annotation.OneToMany.class)) != null) { com.raizlabs.android.dbflow.processor.definition.OneToManyDefinition oneToManyDefinition = new com.raizlabs.android.dbflow.processor.definition.OneToManyDefinition(((javax.lang.model.element.ExecutableElement) (element)), manager); if (oneToManyValidator.validate(manager, oneToManyDefinition)) { oneToManyDefinitions.add(oneToManyDefinition); } }else if ((element.getAnnotation(com.raizlabs.android.dbflow.annotation.ContainerKey.class)) != null) { com.raizlabs.android.dbflow.processor.definition.column.ContainerKeyDefinition containerKeyDefinition = new com.raizlabs.android.dbflow.processor.definition.column.ContainerKeyDefinition(element, manager, this, isPackagePrivateNotInSamePackage); containerKeyDefinitions.add(containerKeyDefinition); }else if ((element.getAnnotation(com.raizlabs.android.dbflow.annotation.ModelCacheField.class)) != null) { if (!(element.getModifiers().contains(javax.lang.model.element.Modifier.PUBLIC))) { manager.logError(\"ModelCacheField must be public\"); } if (!(element.getModifiers().contains(javax.lang.model.element.Modifier.STATIC))) { manager.logError(\"ModelCacheField must be static\"); } if (!(com.raizlabs.android.dbflow.processor.utils.StringUtils.isNullOrEmpty(customCacheFieldName))) { manager.logError(\"ModelCacheField can only be declared once\"); }else { customCacheFieldName = element.getSimpleName().toString(); } }else if ((element.getAnnotation(com.raizlabs.android.dbflow.annotation.MultiCacheField.class)) != null) { if (!(element.getModifiers().contains(javax.lang.model.element.Modifier.PUBLIC))) { manager.logError(\"MultiCacheField must be public\"); } if (!(element.getModifiers().contains(javax.lang.model.element.Modifier.STATIC))) { manager.logError(\"MultiCacheField must be static\"); } if (!(com.raizlabs.android.dbflow.processor.utils.StringUtils.isNullOrEmpty(customMultiCacheFieldName))) { manager.logError(\"MultiCacheField can only be declared once\"); }else { customMultiCacheFieldName = element.getSimpleName().toString(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9237/buggy-version/dbflow-processor.src.main.java.com.raizlabs.android.dbflow.processor.definition.TableDefinition.java", "BodyUseAPI": ["javax.lang.model.element.Element.getModifiers()", "javax.lang.model.element.Name.toString()", "javax.lang.model.element.Element.getAnnotation(java.lang.Class)", "java.util.Set<javax.lang.model.element.Modifier>.contains(javax.lang.model.element.Modifier)", "javax.lang.model.element.Element.getModifiers()", "javax.lang.model.element.Element.getSimpleName()", "javax.lang.model.element.Name.toString()", "javax.lang.model.element.Element.getAnnotation(java.lang.Class)", "java.util.Set<javax.lang.model.element.Modifier>.contains(javax.lang.model.element.Modifier)", "javax.lang.model.element.Element.getSimpleName()", "java.util.Set<javax.lang.model.element.Modifier>.contains(javax.lang.model.element.Modifier)", "javax.lang.model.element.Element.getAnnotation(java.lang.Class)", "javax.lang.model.element.Element.getModifiers()", "javax.lang.model.element.Element.getModifiers()", "java.util.Set<javax.lang.model.element.Modifier>.contains(javax.lang.model.element.Modifier)"], "Fixed commit": "702cd8f42e396d4ac134bc80eccb9dc026790717", "Url": "https://api.github.com/repos/Raizlabs/DBFlow", "Date": "2015-11-29T15:58:04Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.raizlabs.android.dbflow.processor.utils.StringUtils.isNullOrEmpty(customCacheFieldName))) { manager.logError(\"ModelCacheField can only be declared once\"); }else { customCacheFieldName = element.getSimpleName().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9237/buggy-version/dbflow-processor.src.main.java.com.raizlabs.android.dbflow.processor.definition.TableDefinition.java", "BodyUseAPI": [], "Fixed commit": "702cd8f42e396d4ac134bc80eccb9dc026790717", "Url": "https://api.github.com/repos/Raizlabs/DBFlow", "Date": "2015-11-29T15:58:04Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(element.getModifiers().contains(javax.lang.model.element.Modifier.STATIC))) { manager.logError(\"ModelCacheField must be static\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9237/buggy-version/dbflow-processor.src.main.java.com.raizlabs.android.dbflow.processor.definition.TableDefinition.java", "BodyUseAPI": [], "Fixed commit": "702cd8f42e396d4ac134bc80eccb9dc026790717", "Url": "https://api.github.com/repos/Raizlabs/DBFlow", "Date": "2015-11-29T15:58:04Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.raizlabs.android.dbflow.processor.utils.StringUtils.isNullOrEmpty(customMultiCacheFieldName))) { manager.logError(\"MultiCacheField can only be declared once\"); }else { customMultiCacheFieldName = element.getSimpleName().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9237/buggy-version/dbflow-processor.src.main.java.com.raizlabs.android.dbflow.processor.definition.TableDefinition.java", "BodyUseAPI": [], "Fixed commit": "702cd8f42e396d4ac134bc80eccb9dc026790717", "Url": "https://api.github.com/repos/Raizlabs/DBFlow", "Date": "2015-11-29T15:58:04Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(element.getModifiers().contains(javax.lang.model.element.Modifier.PUBLIC))) { manager.logError(\"ModelCacheField must be public\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9237/buggy-version/dbflow-processor.src.main.java.com.raizlabs.android.dbflow.processor.definition.TableDefinition.java", "BodyUseAPI": [], "Fixed commit": "702cd8f42e396d4ac134bc80eccb9dc026790717", "Url": "https://api.github.com/repos/Raizlabs/DBFlow", "Date": "2015-11-29T15:58:04Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(element.getModifiers().contains(javax.lang.model.element.Modifier.STATIC))) { manager.logError(\"MultiCacheField must be static\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9237/buggy-version/dbflow-processor.src.main.java.com.raizlabs.android.dbflow.processor.definition.TableDefinition.java", "BodyUseAPI": [], "Fixed commit": "702cd8f42e396d4ac134bc80eccb9dc026790717", "Url": "https://api.github.com/repos/Raizlabs/DBFlow", "Date": "2015-11-29T15:58:04Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.overlord.dtgov.ui.client.local.beans.UiConfiguration.getDeploymentTypes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (deploymentTypes.isEmpty()) { this.deploymentType.addItem(\"Java Web Application\", JavaModel.TYPE_WEB_APPLICATION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2710/buggy-version/dtgov-ui-war.src.main.java.org.overlord.dtgov.ui.client.local.pages.deployments.AddDeploymentDialog.java", "BodyUseAPI": [], "Fixed commit": "3555874b8fae9130c7bd73128f5a19813db1112f", "Url": "https://api.github.com/repos/KurtStam/dtgov", "Date": "2013-09-09T18:26:29Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (number == max) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3136/buggy-version/src.de.dmarcini.submatix.android4.gui.SPX42ReadLogFragment.java", "BodyUseAPI": [], "Fixed commit": "53b27187ea8048f864884f0eb2b23b96a248b485", "Url": "https://api.github.com/repos/dmarc0001/submatixBTAndroid4", "Date": "2013-08-19T20:56:59Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(e.getPlayer().getWorld().getName().startsWith(\"Classic\"))) gunpvp.inventories.Inventories.saveInventory(e.getPlayer());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5467/buggy-version/src.gunpvp.listener.PlayerQuitListener.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerQuitEvent.getPlayer()", "gunpvp.inventories.Inventories.saveInventory(e.getPlayer())"], "Fixed commit": "dbb14d244b2ab1dcbf5c18475e0fcabb8eaf7ead", "Url": "https://api.github.com/repos/Gunpvp/Gunpvp", "Date": "2017-07-19T20:36:04Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((tagNames.indexOf(tag)) >= 0) && ((tagNames.indexOf(tag)) < (tagNames.size()))) { (tagCounter[tagNames.indexOf(tag)])++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2729/buggy-version/src.main.java.seedu.address.ui.TagStatisticsPanel.java", "BodyUseAPI": ["javafx.collections.ObservableList<java.lang.String>.indexOf(java.lang.String)"], "Fixed commit": "b80c5c3f3ea82c0777e763cd06c97591212bad3d", "Url": "https://api.github.com/repos/pwenzhe/addressbook-level4", "Date": "2017-11-13T11:33:36Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getReturn()) != null) return this.getReturn().getExpression().evaluate(context);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5713/buggy-version/cql-engine.src.main.java.org.opencds.cqf.cql.elm.execution.QueryEvaluator.java", "BodyUseAPI": [], "Fixed commit": "c27ad43fc7de6e46c3ba6f287745378267609449", "Url": "https://api.github.com/repos/DBCG/cql_engine", "Date": "2016-12-06T22:04:00Z"},
{"Line": "=>978", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (access == (org.sandag.abm.accessibilities.BestTransitPathCalculator.WTW)) { bestAccessTime[i] = pWalkTime; bestEgressTime[i] = aWalkTime; }else if (access == (org.sandag.abm.accessibilities.BestTransitPathCalculator.DTW)) { bestAccessTime[i] = pDriveTime; bestEgressTime[i] = aWalkTime; }else if (access == (org.sandag.abm.accessibilities.BestTransitPathCalculator.WTD)) { bestAccessTime[i] = pWalkTime; bestEgressTime[i] = aDriveTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/611/buggy-version/src.main.java.org.sandag.abm.accessibilities.BestTransitPathCalculator.java", "BodyUseAPI": [], "Fixed commit": "b55eadc0b28834b0636350ee5f2ff1ee4cce9a71", "Url": "https://api.github.com/repos/SANDAG/ABM", "Date": "2014-06-17T18:20:41Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mPwdEdit.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((password.length()) < 1) { com.z299studio.pb.Application.showToast(this, R.string.pwd_wrong, Toast.LENGTH_SHORT); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1575/buggy-version/app.src.main.java.com.z299studio.pb.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "8dc2cc6315d3fa5c52cf4ab0a75ae37c507a7e04", "Url": "https://api.github.com/repos/zhuqianqian/Passbook", "Date": "2016-05-24T00:01:49Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.worldObj.isRemote)) { net.minecraft.block.Block currentBlock = this.worldObj.getBlock(this.xCoord, this.boreY, this.zCoord); if ((!(currentBlock.getMaterial().isLiquid())) && ((currentBlock.getBlockHardness(this.worldObj, this.xCoord, this.boreY, this.zCoord)) > 0)) { this.worldObj.func_147480_a(this.xCoord, this.boreY, this.zCoord, false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/436/buggy-version/java.de.teamdna.mf.tile.TileEntityBore.java", "BodyUseAPI": ["this.worldObj.getBlock(this.xCoord,int,this.zCoord)", "net.minecraft.block.Block.getBlockHardness(this.worldObj,this.xCoord,int,this.zCoord)", "this.worldObj.func_147480_a(this.xCoord,int,this.zCoord,boolean)"], "Fixed commit": "a3940461a6227dec8d3f8385053fa76aca4db027", "Url": "https://api.github.com/repos/websitenmaker12/MineFracturing", "Date": "2014-05-15T17:33:58Z"},
{"Line": "=>722", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (config.containsKey(\"bolt.alerts.indexing.timestamp\")) { dateFormat = config.getString(\"bolt.alerts.indexing.timestamp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6660/buggy-version/OpenSOC-Topologies.src.main.java.com.opensoc.topology.runner.TopologyRunner.java", "BodyUseAPI": ["org.apache.commons.configuration.Configuration.getString(java.lang.String)"], "Fixed commit": "e9f7d9b622de32be8aa629868090dc7caa4e06a5", "Url": "https://api.github.com/repos/OpenSOC/opensoc-streaming", "Date": "2015-03-05T19:32:16Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (config.containsKey(\"bolt.alerts.indexing.timestamp\")) { dateFormat = config.getString(\"bolt.alerts.indexing.timestamp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6660/buggy-version/OpenSOC-Topologies.src.main.java.com.opensoc.topology.runner.TopologyRunner.java", "BodyUseAPI": ["org.apache.commons.configuration.Configuration.getString(java.lang.String)"], "Fixed commit": "e9f7d9b622de32be8aa629868090dc7caa4e06a5", "Url": "https://api.github.com/repos/OpenSOC/opensoc-streaming", "Date": "2015-03-05T19:32:16Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r instanceof net.minecraft.src.buildcraft.krapht.routing.Router) { ((net.minecraft.src.buildcraft.krapht.routing.Router) (r)).reloadPipe(worldObj, xCoord, yCoord, zCoord); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3879/buggy-version/common.net.minecraft.src.buildcraft.krapht.routing.RouterManager.java", "BodyUseAPI": [], "Fixed commit": "07082c1484e3146e35ec10d20836b7f8d8db628a", "Url": "https://api.github.com/repos/AartBluestoke/LogisticsPipes", "Date": "2012-07-31T07:24:07Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nightwhistler.pageturner.catalog.CatalogListAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((entry.getAtomLink()) != null) { java.lang.String href = entry.getAtomLink().getHref(); loadURL(entry, href); }else { loadFakeFeed(entry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7808/buggy-version/src.main.java.net.nightwhistler.pageturner.activity.CatalogActivity.java", "BodyUseAPI": ["net.nightwhistler.nucular.atom.Entry.getAtomLink()", "entry.getAtomLink().getHref()", "net.nightwhistler.pageturner.activity.CatalogActivity.loadURL(net.nightwhistler.nucular.atom.Entry,java.lang.String)", "net.nightwhistler.pageturner.activity.CatalogActivity.loadFakeFeed(net.nightwhistler.nucular.atom.Entry)"], "Fixed commit": "26e12cff3b9f6abcf34506036fb9ae00c3966892", "Url": "https://api.github.com/repos/NightWhistler/PageTurner", "Date": "2012-05-31T07:18:15Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["VORSim.VOR.makeValidRadial(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((this.plane) >= (abeamRight - 1)) && ((this.plane) <= (abeamRight + 1))) { return true; }else if (((this.OBS) == 269) && ((this.plane) == 0)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6997/buggy-version/VORSim.src.VORSim.VOR.java", "BodyUseAPI": [], "Fixed commit": "dd2de331cb7243b95f147c7d3de151080774239d", "Url": "https://api.github.com/repos/kaquema/ICS314S14", "Date": "2014-05-05T11:51:39Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (json.equals(\"[]\")) { android.util.Log.i(\"test===========\", json); services.add(\"You don't have any services registered.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5705/buggy-version/app.src.main.java.com.example.carapp.My_calendar.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,java.lang.String)"], "Fixed commit": "a9638317e493d7fc291999b9ac7abb4fc46f0a4a", "Url": "https://api.github.com/repos/bagleric/CarApp", "Date": "2016-12-08T00:20:57Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.aufdemrand.denizen.listeners.core.KillListenerInstance.mirrorCitizensNPC(net.citizensnpcs.api.CitizensAPI.getNPCRegistry().getNPC(event.getEntity()))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (npc.getName().equalsIgnoreCase(target.toLowerCase().replace(\"n@\", \"\"))) count_it = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7316/buggy-version/src.main.java.net.aufdemrand.denizen.listeners.core.KillListenerInstance.java", "BodyUseAPI": [], "Fixed commit": "a2b0e1830a05128a241df5f19bb428ce2fb7ea13", "Url": "https://api.github.com/repos/aufdemrand/Denizen", "Date": "2013-10-15T22:05:27Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["input.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(inputString.isEmpty())) { android.content.Intent intent = new android.content.Intent(getApplicationContext(), co.miniforge.corey.stringanalyzer.AnalyzerActivity.class); intent.putExtra(co.miniforge.corey.stringanalyzer.InputActivity.intentTag, input.getText().toString()); startActivity(intent); }else { android.widget.Toast.makeText(getApplicationContext(), \"Message cannot be empty!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1690/buggy-version/StringAnalyzer.app.src.main.java.co.miniforge.corey.stringanalyzer.InputActivity.java", "BodyUseAPI": [], "Fixed commit": "2eed4a14c7a8de218b3746e8163a3c95a3f303c2", "Url": "https://api.github.com/repos/jmccoy11/Assignment03_StringAnalyzer", "Date": "2017-10-19T05:55:14Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 0) { parse(args); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4765/buggy-version/src.main.java.com.ericsson.eiffel.remrem.generate.cli.CLI.java", "BodyUseAPI": ["com.ericsson.eiffel.remrem.generate.cli.CLI.parse(java.lang.String[])"], "Fixed commit": "2503f4185cf78796a08b8b55a29ece1707068271", "Url": "https://api.github.com/repos/Ericsson/eiffel-remrem-generate", "Date": "2016-10-19T14:10:50Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outf.isDirectory()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6169/buggy-version/src.com.ds.avare.network.Download.java", "BodyUseAPI": [], "Fixed commit": "caef6b7efe4103601c5b78d0701cbaae8b6f43f1", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2014-07-03T17:18:06Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((damager.getType()) == (org.bukkit.entity.EntityType.SPIDER)) type = \"a spider\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.CREEPER)) type = \"a creeper\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.ENDER_DRAGON)) type = \"the dragon\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.ENDERMAN)) type = \"an enderman\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.GHAST)) type = \"a ghast\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.IRON_GOLEM)) type = \"an iron golem\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.MAGMA_CUBE)) type = \"a magma cube\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.PIG_ZOMBIE)) type = \"a zombie pigman\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.SILVERFISH)) type = \"a silverfish\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.SKELETON)) type = \"a skeleton\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.SLIME)) type = \"a slime\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.WITCH)) type = \"a witch\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.WITHER)) type = \"a wither\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.WITHER_SKULL)) type = \"a wither skull\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.ZOMBIE)) type = \"a zombie\"; else if ((damager.getType()) == (org.bukkit.entity.EntityType.WOLF)) { org.bukkit.entity.AnimalTamer owner = ((org.bukkit.entity.Wolf) (damager)).getOwner(); if (owner != null) type = (owner.getName()) + \"'s wolf\"; else type = \"a wolf\"; }else if ((damager.getType()) == (org.bukkit.entity.EntityType.PRIMED_TNT)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3352/buggy-version/src.com.martinbrook.tesseractuhc.notification.DamageNotification.java", "BodyUseAPI": ["org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()", "org.bukkit.entity.Entity.getType()"], "Fixed commit": "ed8c439cd8291d57531d3eac95b472c7547caed0", "Url": "https://api.github.com/repos/itsmartin/TesseractUHC", "Date": "2013-05-18T21:48:19Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, net.dankito.appdownloader.util.web.CurrentDownload>.remove(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (currentDownload != null) { net.dankito.appdownloader.app.AppInfo appInfo = downloadInfo.getAppInfo(); appInfo.setToItsDefaultState(); net.dankito.appdownloader.util.web.IDownloadCompletedCallback callback = currentDownload.getCallback(); callback.completed(new net.dankito.appdownloader.util.web.DownloadResult(downloadInfo, false, true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3179/buggy-version/AppDownloaderAndroid.src.main.java.net.dankito.appdownloader.util.web.AndroidDownloadManager.java", "BodyUseAPI": ["net.dankito.appdownloader.util.web.CurrentDownload.getCallback()"], "Fixed commit": "c549d67967db291af07d20ecc400eda64c99cd16", "Url": "https://api.github.com/repos/dankito/AppDownloader", "Date": "2016-11-20T00:08:13Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((this.urlMap) != null) && (!(android.text.TextUtils.isEmpty(fm.jiecao.jcvideoplayer_lib.JCUtils.getCurrentUrlFromMap(urlMap, currentUrlMapIndex))))) && (android.text.TextUtils.equals(fm.jiecao.jcvideoplayer_lib.JCUtils.getCurrentUrlFromMap(this.urlMap, currentUrlMapIndex), fm.jiecao.jcvideoplayer_lib.JCUtils.getCurrentUrlFromMap(urlMap, currentUrlMapIndex)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4985/buggy-version/jcvideoplayer-lib.src.main.java.fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "3954afccf6ce8cac537efd4aefa11c444b69d375", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2017-08-06T23:18:14Z"},
{"Line": "=>702", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["back_end.PostfixExpressionNode.getMethodName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (methodNameNoParam.getIdentifier().equals(\"next\")) { code.append(\".get()\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2811/buggy-version/Hog.src.back_end.CodeGeneratingVisitor.java", "BodyUseAPI": [], "Fixed commit": "0acd19fba639b12c41ff387f5ca95117db9971c0", "Url": "https://api.github.com/repos/smessing/Hog", "Date": "2012-05-05T05:00:20Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.corundumstudio.socketio.namespace.NamespacesHub.get(packet.getEndpoint())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ns == null) { log.warn(\"Can't find namespace for endpoint: {} probably it was removed.\", packet.getEndpoint()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3792/buggy-version/src.main.java.com.corundumstudio.socketio.handler.PacketHandler.java", "BodyUseAPI": [], "Fixed commit": "439504e3aee3d6eef8248f2aabe09e1ffe3fa2ce", "Url": "https://api.github.com/repos/mrniko/netty-socketio", "Date": "2013-12-07T10:31:05Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mediaPlayer) != null) { mediaPlayer.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3551/buggy-version/src.com.herokuapp.maintainenator.IndoorFormFragment.java", "BodyUseAPI": [], "Fixed commit": "72a5c88cf59647b56aeccf7542d2f82c31686966", "Url": "https://api.github.com/repos/forkloop/Maintain-e-nator", "Date": "2012-12-02T22:33:38Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cleanString.contains(\".\")) { parsed = java.lang.Double.parseDouble(cleanString.replace(\".\", \"\")); formatted = java.text.NumberFormat.getCurrencyInstance().format((parsed / 100)); }else { parsed = java.lang.Double.parseDouble(cleanString); formatted = java.text.NumberFormat.getCurrencyInstance().format(parsed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7378/buggy-version/app.src.main.java.edu.illinois.dscs.mypocket.utils.CurrencyTextWatcher.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "147fc7b16fe74484db298c2972305c026cea31be", "Url": "https://api.github.com/repos/cassioss/my-pocket", "Date": "2015-04-30T21:08:39Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (activeReminders.containsKey(key)) { removeReminderFor(activeReminders.get(key).second); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2747/buggy-version/src.de.azapps.mirakel.reminders.ReminderAlarm.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, android.util.Pair<java.lang.Long, de.azapps.mirakel.model.task.Task>>.get(java.lang.Long)", "de.azapps.mirakel.reminders.ReminderAlarm.ReminderHandler.removeReminderFor(activeReminders.get(key).second)"], "Fixed commit": "c0add8f584c41043f974ffbf1f348f5dfc85a49e", "Url": "https://api.github.com/repos/MirakelX/mirakel-android", "Date": "2015-07-27T09:05:00Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((n == (parseTree)) && (!(lexemes.peek().equals(RomanToArabic.END_OF_INPUT)))) { java.lang.Integer errorPosition = (parsed.length()) + 1; parseError(); throw new edu.compilers.teamb.RomanTranslationException(edu.compilers.teamb.Parser.TAG, java.lang.String.format(\"Parsing error at position %s: %s.\", errorPosition, parsed)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4218/buggy-version/src.edu.compilers.teamb.Parser.java", "BodyUseAPI": [], "Fixed commit": "14c9193115e5bf573570a9a664d4d66a4d84867a", "Url": "https://api.github.com/repos/parsonf/romantoarabic", "Date": "2015-04-27T23:37:49Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hasWrite + (org.gemini.httpengine.library.GMHttpEngine.WRITE_BYTE_COUNT)) > size) { perWrite = size - hasWrite; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3949/buggy-version/library.src.main.java.org.gemini.httpengine.library.GMHttpEngine.java", "BodyUseAPI": [], "Fixed commit": "736b66d3cc50a30553df3ff73034921e94b8e818", "Url": "https://api.github.com/repos/MyLifeForTheOrc/gm-httpengine-studio", "Date": "2015-08-24T09:49:24Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.romaframework.core.schema.SchemaField.getFeature(ViewFieldFeatures.DEPENDS)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fieldDepends == null) fieldDepends = new java.lang.String[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4031/buggy-version/src.org.romaframework.aspect.view.ViewAspectAbstract.java", "BodyUseAPI": [], "Fixed commit": "c250862d967d8bec49382d8ccc28ad394a4f62df", "Url": "https://api.github.com/repos/romaframework/frontend", "Date": "2012-04-10T15:35:05Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((root) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6699/buggy-version/kdtree.KdTree.java", "BodyUseAPI": [], "Fixed commit": "2e7372cd17a760330acd5142677df25c20036939", "Url": "https://api.github.com/repos/bamboo983/algorithms", "Date": "2016-12-09T08:58:20Z"},
{"Line": "=>839", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getFichePosteCourante().getIdNiveauManagement()) == null) { addZone(getNOM_LB_NIVEAU_MANAGEMENT_SELECT(), \"0\"); }else { for (int i = 0; i < (getListeNiveauManagement().size()); i++) { nc.mairie.gestionagent.process.poste.NiveauManagement nm = getListeNiveauManagement().get(i); if (nm.getIdNiveauManagement().toString().equals(getFichePosteCourante().getIdNiveauManagement().toString())) { addZone(getNOM_LB_NIVEAU_MANAGEMENT_SELECT(), java.lang.String.valueOf(i)); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1569/buggy-version/src.main.java.nc.mairie.gestionagent.process.poste.OePOSTEFichePoste.java", "BodyUseAPI": [], "Fixed commit": "d3588406d76187310f7144aa40fb0b9704e058cf", "Url": "https://api.github.com/repos/DSI-Ville-Noumea/sirh", "Date": "2017-08-18T04:22:01Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tiles) != null) tiles.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4641/buggy-version/src.main.java.com.creativemd.littletiles.common.structure.LittleStructure.java", "BodyUseAPI": [], "Fixed commit": "00f0a06d3be351d943f87aa27793d17d410142e5", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2017-07-25T15:03:02Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mult < 0) { dist = 1 / dist; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/149/buggy-version/src.cs4230.pedestrian.objects.Particle.java", "BodyUseAPI": [], "Fixed commit": "8802d7d4e91a88c0fd82953f630cf71782e8df41", "Url": "https://api.github.com/repos/cisprocess/skk-cs4230-project-1", "Date": "2014-02-03T16:17:36Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((day) != null) { java.lang.String toastText = formatToastText(day); android.widget.Toast.makeText(getActivity(), toastText, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1324/buggy-version/app.src.main.java.cz.jaro.alarmmorning.CalendarFragment.java", "BodyUseAPI": [], "Fixed commit": "27503a227b59a516f394c57c8450b1e913448a05", "Url": "https://api.github.com/repos/jmalenko/alarm-morning", "Date": "2016-08-02T11:29:14Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (noBody) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3151/buggy-version/src.main.java.com.turt2live.antishare.ASListener.java", "BodyUseAPI": [], "Fixed commit": "8b3034696298744cf2b5e441f532e13b465277c2", "Url": "https://api.github.com/repos/turt2live/AntiShare", "Date": "2013-01-13T22:22:34Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.filePath.equals(other.filePath))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9202/buggy-version/project.src.main.java.ch.unibe.ese.team3.model.Picture.java", "BodyUseAPI": [], "Fixed commit": "12ff0e3aaa5fc18f0a1da632214e22590df20d2e", "Url": "https://api.github.com/repos/scg-unibe-ch/ese2016-team3", "Date": "2016-12-04T20:59:33Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(nodes.isEmpty())) { applyLayout(LayoutType.ISOM_LAYOUT, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1114/buggy-version/de.bund.bfr.knime.gis.src.de.bund.bfr.knime.gis.views.canvas.GraphCanvas.java", "BodyUseAPI": [], "Fixed commit": "3a70ea01ac2fc982d3c8c53caeed2e6b50817622", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2015-05-04T10:37:16Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (life.equals(\"NF\")) { electronic.setFragile(false); }else { destination = fields[5].toUpperCase(); electronic.setStateTax(destination); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2980/buggy-version/PA3.Assignment3.A3Driver.java", "BodyUseAPI": [], "Fixed commit": "3367a3580f57559b870e8c1ff8cbb98544ee5c7a", "Url": "https://api.github.com/repos/ronny-macmaster/EE-422C", "Date": "2016-02-23T21:18:29Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((globalClass.getversetLast()) - (globalClass.getversetFirst())) == 0) { titleToolbar = ((((globalClass.getBookTitle()) + \" \") + (globalClass.getChapitre())) + \": \") + (globalClass.getversetFirst()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8891/buggy-version/app.src.main.java.com.patrick.developer.nybaiboliko.fragment.bible.BibleFragment.java", "BodyUseAPI": ["com.patrick.developer.nybaiboliko.tools.GlobalClass.getChapitre()", "com.patrick.developer.nybaiboliko.tools.GlobalClass.getversetFirst()", "com.patrick.developer.nybaiboliko.tools.GlobalClass.getBookTitle()"], "Fixed commit": "75fa419720faab98496074f54874c64ae4f37e80", "Url": "https://api.github.com/repos/alpatrick9/NyBaiboliko", "Date": "2016-10-10T11:12:56Z"},
{"Line": "=>2208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jpexs.decompiler.flash.xfl.XFLConverter.convertLabelsLayer(int,java.util.List<com.jpexs.decompiler.flash.tags.Tag>,java.util.List<com.jpexs.decompiler.flash.tags.Tag>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(labelsLayer.isEmpty())) { index++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6118/buggy-version/libsrc.ffdec_lib.src.com.jpexs.decompiler.flash.xfl.XFLConverter.java", "BodyUseAPI": [], "Fixed commit": "8ea8892dca154d74c160d168dff9b04b64d225e9", "Url": "https://api.github.com/repos/jindrapetrik/jpexs-decompiler", "Date": "2014-09-28T09:55:50Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, com.freeteam01.androidnewsgroupreader.Models.NewsGroupArticle>.get(ngArticle.getReferences().get(0))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (root == null) articles.put(article.getArticleId(), ngArticle); else root.addArticle(ngArticle);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5450/buggy-version/app.src.main.java.com.freeteam01.androidnewsgroupreader.Services.NewsGroupService.java", "BodyUseAPI": ["com.freeteam01.androidnewsgroupreader.Models.NewsGroupArticle.addArticle(com.freeteam01.androidnewsgroupreader.Models.NewsGroupArticle)"], "Fixed commit": "a5faf6d1e32d19127a2215cdcea4c2d6261a3ce5", "Url": "https://api.github.com/repos/cfkh/AndroidNewsGroupReader", "Date": "2017-04-27T08:22:57Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.iabako.shared.tools.GenericTools.isEmpty(comment))) { paymentOrInstallment.append(\"_r_\"); paymentOrInstallment.append(messages.getLabel(\"invoice_comment\")).append(\";;;\"); paymentOrInstallment.append((org.iabako.shared.tools.GenericTools.isEmpty(comment) ? \"\" : comment)).append(\";;;\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1019/buggy-version/src.main.java.org.iabako.server.serviceimpl.business.SaleHistoryServiceServiceImpl.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append((org.iabako.shared.tools.GenericTools.isEmpty(comment) ? \"\" : comment))", "org.iabako.shared.tools.GenericTools.isEmpty(java.lang.String)"], "Fixed commit": "8e1849ed409caa5571369e2fc10fd426391fd54d", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2017-11-01T09:18:00Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ScheduledFuture.cancel(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cancelled) { org.xlrnet.datac.vcs.services.ProjectSchedulingService.LOGGER.debug(\"Unscheduling automatic update of project {} [id={}] successfully\", project.getName(), project.getId()); }else { org.xlrnet.datac.vcs.services.ProjectSchedulingService.LOGGER.error(\"Unscheduling automatic update of project {} [id={}] failed for unknown reason\", project.getName(), project.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3154/buggy-version/src.main.java.org.xlrnet.datac.vcs.services.ProjectSchedulingService.java", "BodyUseAPI": [], "Fixed commit": "914258285eb1d3f3bb35aca79b3f40c829a22f73", "Url": "https://api.github.com/repos/jhendess/datac", "Date": "2017-07-04T18:11:10Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["intent.getExtras().getString(XenditActivity.MESSAGE_KEY)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((message != null) && (message.equals(context.getString(R.string.tokenization_error)))) { tokenCallback.onError(new com.xendit.Models.XenditError(\"TOKENIZATION_ERROR\", context.getString(R.string.tokenization_error))); }else { com.google.gson.Gson gson = new com.google.gson.Gson(); com.xendit.Models.Authentication authentication = gson.fromJson(message, com.xendit.Models.Authentication.class); if (authentication.getStatus().equals(\"VERIFIED\")) { tokenCallback.onSuccess(new com.xendit.Models.Token(authentication)); }else { try { org.json.JSONObject errorJson = new org.json.JSONObject(message); java.lang.String errorMessage = errorJson.getString(\"failure_reason\"); tokenCallback.onError(new com.xendit.Models.XenditError(errorMessage, authentication)); } catch (org.json.JSONException e) { e.printStackTrace(); tokenCallback.onError(new com.xendit.Models.XenditError(\"SERVER_ERROR\", context.getString(R.string.tokenization_error))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2257/buggy-version/xendit-android.src.main.java.com.xendit.TokenBroadcastReceiver.java", "BodyUseAPI": ["android.content.Context.getString(R.string.tokenization_error)", "com.xendit.TokenCallback.onError(com.xendit.Models.XenditError)", "com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)", "android.content.Context.getString(R.string.tokenization_error)", "com.xendit.TokenCallback.onError(com.xendit.Models.XenditError)"], "Fixed commit": "18f96a6a2c34a1bdc4f907c56d9fc9a41e7e7b0e", "Url": "https://api.github.com/repos/xendit/xendit-sdk-android", "Date": "2017-08-13T07:52:23Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rnd.nextInt(10000)) < ((gambling.getChance()) * 100)) { int minValue = gambling.getMinWinAmount(); int maxValue = gambling.getMaxWinAmount(); return (rnd.nextInt((maxValue - minValue))) + minValue; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5501/buggy-version/app.src.main.java.hu.uniobuda.nik.betherichest.GamblingListFragment.java", "BodyUseAPI": ["hu.uniobuda.nik.betherichest.GameObjects.Gambling.getMinWinAmount()", "hu.uniobuda.nik.betherichest.GameObjects.Gambling.getMaxWinAmount()", "java.util.Random.nextInt(int)"], "Fixed commit": "61198d2b463cc298e27eae86f4da20f0a1727944", "Url": "https://api.github.com/repos/krisz094/BeTheRichest", "Date": "2017-05-08T12:13:55Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getServletContext().getMimeType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (mimeType == null) { mimeType = \"application/octet-stream\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2696/buggy-version/src.main.java.command.DocumentHandler.java", "BodyUseAPI": [], "Fixed commit": "eb2960a64f7a50fe7113f09b543535b65be356ff", "Url": "https://api.github.com/repos/MaximMaltsev94/contacts", "Date": "2016-09-29T17:19:24Z"},
{"Line": "=>752", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.orcid.pojo.ajaxForm.PojoUtil.isEmpty(emailEntity.getClientSourceId()))) { if (org.orcid.utils.OrcidStringUtils.isValidOrcid(emailEntity.getClientSourceId())) { email.setSource(emailEntity.getClientSourceId()); }else { email.setSourceClientId(emailEntity.getClientSourceId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2911/buggy-version/orcid-core.src.main.java.org.orcid.core.adapter.impl.Jpa2JaxbAdapterImpl.java", "BodyUseAPI": ["org.orcid.core.adapter.impl.Email.setSource(emailEntity.getClientSourceId())", "org.orcid.utils.OrcidStringUtils.isValidOrcid(emailEntity.getClientSourceId())", "org.orcid.persistence.jpa.entities.EmailEntity.getClientSourceId()", "org.orcid.core.adapter.impl.Email.setSourceClientId(emailEntity.getClientSourceId())", "org.orcid.persistence.jpa.entities.EmailEntity.getClientSourceId()", "org.orcid.persistence.jpa.entities.EmailEntity.getClientSourceId()"], "Fixed commit": "35f5c90b2d754af1ddb94fdda76a98aa1ada49a7", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2017-10-06T23:11:30Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count % 100) == 0) { os.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8485/buggy-version/manifest.src.main.java.org.duracloud.manifest.impl.ManifestGeneratorImpl.java", "BodyUseAPI": [], "Fixed commit": "9d932edabb398b19eefb7acb67407ebc911d333b", "Url": "https://api.github.com/repos/duracloud/duracloud", "Date": "2015-01-22T17:44:30Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.mapred.JobClient.getJob(jobStatus.getJobID())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (runningJob == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6939/buggy-version/src.main.java.org.huahin.manager.rest.service.JobService.java", "BodyUseAPI": [], "Fixed commit": "e13751097d2ecf24e028df1ebf748ae2773f8f93", "Url": "https://api.github.com/repos/huahin/huahin-manager", "Date": "2012-05-17T06:16:10Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hook.whitelist()) == null) mresult.asked = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3596/buggy-version/src.biz.bokhorst.xprivacy.PrivacyService.java", "BodyUseAPI": [], "Fixed commit": "e94b9b0bd884621410d17848c8eee8ba1d644d85", "Url": "https://api.github.com/repos/M66B/XPrivacy", "Date": "2014-05-20T14:11:28Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getIndexOpPreviousElement(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (resultAst == null) { whitespaceFollowedAst = ast; }else { whitespaceFollowedAst = resultAst; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7990/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.java", "BodyUseAPI": [], "Fixed commit": "ed220fd813d69cf9e67c573925b3c0bdd79d4e79", "Url": "https://api.github.com/repos/sergileon/checkstyle", "Date": "2017-08-30T08:52:53Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event instanceof com.touchawesome.dotsandboxes.event_bus.events.TurnChangeEvent) { setTurnText(((com.touchawesome.dotsandboxes.event_bus.events.TurnChangeEvent) (event)).nextPlayer); }else if (event instanceof com.touchawesome.dotsandboxes.event_bus.events.ScoreMadeEvent) { com.touchawesome.dotsandboxes.event_bus.events.ScoreMadeEvent scoreEvent = ((com.touchawesome.dotsandboxes.event_bus.events.ScoreMadeEvent) (event)); if ((scoreEvent.scoringPlayer) == (Game.Player.PLAYER1)) { scorePlayer1.setText(java.lang.String.format(java.util.Locale.getDefault(), \"%d\", scoreEvent.score)); }else { scorePlayer2.setText(java.lang.String.format(java.util.Locale.getDefault(), \"%d\", scoreEvent.score)); } }else if (event instanceof com.touchawesome.dotsandboxes.event_bus.events.GameEndEvent) { android.os.Bundle args = getArguments(); if (args == null) args = new android.os.Bundle(); int player1Score = game.getBoard().getScore(Game.Player.PLAYER1); int player2Score = game.getBoard().getScore(Game.Player.PLAYER2); args.putInt(com.touchawesome.dotsandboxes.fragments.GameFragment.ARG_PLAYER1_SCORE, player1Score); args.putInt(com.touchawesome.dotsandboxes.fragments.GameFragment.ARG_PLAYER2_SCORE, player2Score); args.putSerializable(com.touchawesome.dotsandboxes.fragments.GameFragment.ARG_GAME_MODE, mode); long gameDurationMillis = (getContext().getSharedPreferences(Constants.PREFS_NAME_ANALYTICS, Context.MODE_PRIVATE).getLong(Constants.GAME_DURATION_START, java.lang.System.currentTimeMillis())) - (java.lang.System.currentTimeMillis()); com.google.android.gms.analytics.Tracker t = ((com.touchawesome.dotsandboxes.App) (getActivity().getApplication())).getTracker(App.TrackerName.APP_TRACKER); t.send(new com.google.android.gms.analytics.HitBuilders.TimingBuilder().setCategory(getString(R.string.game_stats_category)).setLabel(getString(R.string.game_duration_label)).setVariable(getString(R.string.game_duration_label)).setValue(gameDurationMillis).build()); getContext().getSharedPreferences(Constants.PREFS_NAME_ANALYTICS, Context.MODE_PRIVATE).edit().remove(Constants.GAME_DURATION_START).apply(); java.lang.String difficulty = getString(R.string.three_by_three); switch (game.getBoard().getRows()) { case 3 : difficulty = getString(R.string.three_by_three); break; case 4 : difficulty = getString(R.string.four_by_four); break; case 5 : difficulty = getString(R.string.five_by_five); break; } t.send(new com.google.android.gms.analytics.HitBuilders.EventBuilder().setCategory(getString(R.string.game_stats_category)).setLabel(getString(R.string.game_mode_label)).setAction(java.lang.String.format(java.util.Locale.ENGLISH, getString(R.string.game_mode_template), difficulty, mode.toString(), player1Score, player2Score)).build()); com.touchawesome.dotsandboxes.db.GameScore gameScore = new com.touchawesome.dotsandboxes.db.GameScore(); gameScore.setDate(new java.util.Date(java.lang.System.currentTimeMillis())); gameScore.setMode(difficulty); gameScore.setOpponent((((getString(R.string.versus)) + \" \") + (mode.toString()))); java.lang.String scoreString = ((((player1Score > player2Score ? getString(R.string.win) : player1Score == player2Score ? getString(R.string.tie) : getString(R.string.lost)) + \" \") + player1Score) + \":\") + player2Score; gameScore.setScore(scoreString); ((com.touchawesome.dotsandboxes.App) (getActivity().getApplication())).getDaoSession().getGameScoreDao().insert(gameScore); if ((mListener) != null) mListener.onWinFragmentLoad(ResultsFragment.FRAGMENT_ID, args); }else if (event instanceof com.touchawesome.dotsandboxes.event_bus.events.EmitSoundEvent) { if ((mListener) != null) { mListener.onSoundRequested(); } }else if (event instanceof com.touchawesome.dotsandboxes.event_bus.events.SquareCompletedEvent) { if (shouldVibrate) { vibrator.vibrate(getResources().getInteger(R.integer.vibrate_duration)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4461/buggy-version/app.src.main.java.com.touchawesome.dotsandboxes.fragments.GameFragment.java", "BodyUseAPI": [], "Fixed commit": "381bb9b199e109a50f94ac328cba6e0dd122ef2b", "Url": "https://api.github.com/repos/Georgi-TA/dots-and-boxes", "Date": "2017-05-05T11:03:45Z"},
{"Line": "=>1724", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.getFailReason()) != null) { net.sacredlabyrinth.Phaed.PreciousStones.listeners.ChatBlock.send(player, s.getFailReason()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3127/buggy-version/src.main.java.net.sacredlabyrinth.Phaed.PreciousStones.listeners.PSBlockListener.java", "BodyUseAPI": ["net.sacredlabyrinth.Phaed.PreciousStones.listeners.ChatBlock.send(org.bukkit.entity.Player,s.getFailReason())", "net.sacredlabyrinth.Phaed.PreciousStones.entries.FieldSign.getFailReason()"], "Fixed commit": "83316bf5bbd2a25e6a77ac120ce1cf39e4ef7f52", "Url": "https://api.github.com/repos/marcelo-mason/PreciousStones", "Date": "2015-02-07T08:44:26Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((workDir != null) && (\"/tmp\".equals(workDir))) && (java.lang.System.getProperty(\"os.name\").toLowerCase().contains(\"windows\"))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2440/buggy-version/kura.org.eclipse.kura.core.cloud.src.main.java.org.eclipse.kura.cloud.app.command.CommandCloudApp.java", "BodyUseAPI": [], "Fixed commit": "2dc14b250449118c5def8005d53dbbc0600fc9f5", "Url": "https://api.github.com/repos/markcullen/kura_Windows", "Date": "2015-10-29T14:13:18Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"main menu\".equalsIgnoreCase(mainMenu))) { android.widget.Toast.makeText(this, username, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5175/buggy-version/app.src.main.java.a00961774.comp3717.bcit.ca.newwestvoyager.HowToPlay.java", "BodyUseAPI": [], "Fixed commit": "74a2a6d1591ae854388ed6ead4ea793c749d79f3", "Url": "https://api.github.com/repos/TeamInfamous/new-west-voyager", "Date": "2017-02-07T03:16:19Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getAltLocs()) != null) && (!(getAltLocs().isEmpty()))) { for (org.biojava.nbio.structure.Group altLocGroup : this.getAltLocs()) { org.biojava.nbio.structure.Group nAltLocGroup = ((org.biojava.nbio.structure.Group) (altLocGroup.clone())); n.addAltLoc(nAltLocGroup); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/873/buggy-version/biojava-structure.src.main.java.org.biojava.nbio.structure.AminoAcidImpl.java", "BodyUseAPI": [], "Fixed commit": "818758ab46d29facf859c9111405043159ee0a9c", "Url": "https://api.github.com/repos/biojava/biojava", "Date": "2016-01-15T00:46:29Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((altLocs) != null) { for (org.biojava.nbio.structure.Group altLocGroup : this.altLocs) { org.biojava.nbio.structure.Group nAltLocGroup = ((org.biojava.nbio.structure.Group) (altLocGroup.clone())); n.addAltLoc(nAltLocGroup); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/873/buggy-version/biojava-structure.src.main.java.org.biojava.nbio.structure.HetatomImpl.java", "BodyUseAPI": [], "Fixed commit": "818758ab46d29facf859c9111405043159ee0a9c", "Url": "https://api.github.com/repos/biojava/biojava", "Date": "2016-01-15T00:46:29Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getAltLocs()) != null) && (!(getAltLocs().isEmpty()))) { for (org.biojava.nbio.structure.Group altLocGroup : this.getAltLocs()) { org.biojava.nbio.structure.Group nAltLocGroup = ((org.biojava.nbio.structure.Group) (altLocGroup.clone())); n.addAltLoc(nAltLocGroup); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/873/buggy-version/biojava-structure.src.main.java.org.biojava.nbio.structure.NucleotideImpl.java", "BodyUseAPI": [], "Fixed commit": "818758ab46d29facf859c9111405043159ee0a9c", "Url": "https://api.github.com/repos/biojava/biojava", "Date": "2016-01-15T00:46:29Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.taobao.weex.ui.component.WXIndicator.IndicatorDomNode.getStyles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(pendingStyles.containsKey(Constants.Name.BOTTOM))) map.put(Constants.Name.TOP, \"0\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3420/buggy-version/android.sdk.src.main.java.com.taobao.weex.ui.component.WXIndicator.java", "BodyUseAPI": [], "Fixed commit": "57b71fb6a584561734f78617bc25b9a8108f5651", "Url": "https://api.github.com/repos/sospartan/weex", "Date": "2016-08-19T10:40:47Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.emc.storageos.db.client.util.NullColumnValueGetter.isNotNullValue(fullCopyVolume.getReplicationGroupInstance())) { addConsistencyGroupTasks(java.util.Arrays.asList(fcSourceObj), taskList, taskId, ResourceOperationTypeEnum.DETACH_CONSISTENCY_GROUP_FULL_COPY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8019/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.fullcopy.AbstractBlockFullCopyApiImpl.java", "BodyUseAPI": [], "Fixed commit": "a5b2b87879b6e445933168ce98fd559c88d9c5f6", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-21T03:00:05Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.Query.uniqueResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (oi == null) { throw new edu.ualberta.med.biobank.common.action.exception.ActionException((\"No patient found with id:\" + (oiId))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5919/buggy-version/eclipse_ws.biobank.common.src.edu.ualberta.med.biobank.common.action.shipment.ShipmentGetInfoAction.java", "BodyUseAPI": [], "Fixed commit": "0bbdb31d5d2b9bbb20d9fc618ec0ac328ce93319", "Url": "https://api.github.com/repos/cbsrbiobank/biobank", "Date": "2012-07-25T22:41:44Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (config == 1) { this.addMarket(new tradingsimulation.StockExchange(\"The Best Stock Exchange\", csvStockDataFileName, csvExternalEventsFileName)); }else { throw new tradingsimulation.UnsupportedConfigurationValueError((\"Choose a valid configuration when using 3 arguments. 1, stockData.csv, externalevent.csv is the current\" + \"only accepted configuration.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3739/buggy-version/TradingSimulation.src.tradingsimulation.TradingExchange.java", "BodyUseAPI": [], "Fixed commit": "6fe00418b4394a6f441b8aa4fad6645638eff3fd", "Url": "https://api.github.com/repos/cjdudley1/WG_SoftwareEngineering", "Date": "2017-04-22T20:12:43Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bins.length) == 0) { boolean allSameValue = false; double sameVal = -1; if ((allValues.size()) > 0) { allSameValue = true; sameVal = allValues.get(0); for (java.lang.Double value : allValues) { if (sameVal != value) { allSameValue = false; break; } } } if (allSameValue) { be.bagofwords.ui.UI.write(((((\"no bins (all values have value=\" + sameVal) + \") found \") + (counts[0])) + \" instances\")); }else { be.bagofwords.ui.UI.write(((\"no bins? found \" + (counts[0])) + \" instances\")); } }else { for (int i = 0; i < (counts.length); i++) { if (i == 0) be.bagofwords.ui.UI.write(((((\"... to \" + (bins[i])) + \" has \") + (counts[i])) + \" instances.\")); else if (i == (bins.length)) be.bagofwords.ui.UI.write(((((bins[(i - 1)]) + \" to ... has \") + (counts[i])) + \" instances.\")); else be.bagofwords.ui.UI.write(((((((bins[(i - 1)]) + \" to \") + (bins[i])) + \" has \") + (counts[i])) + \" instances.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6085/buggy-version/src.main.java.be.bagofwords.counts.BinComputer.java", "BodyUseAPI": ["be.bagofwords.ui.UI.write(java.lang.String)", "be.bagofwords.ui.UI.write(java.lang.String)", "be.bagofwords.ui.UI.write(java.lang.String)"], "Fixed commit": "dd5dca2870fb861fc700a2deead05a2cfcbc26c5", "Url": "https://api.github.com/repos/koendeschacht/bow-utils", "Date": "2014-10-27T11:26:57Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mulampaka.spring.data.jdbc.codegen.Field.getDefaultValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.contains(val, \".\")) { java.lang.String[] tokens = org.apache.commons.lang.StringUtils.split(val, \".\"); val = tokens[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8007/buggy-version/src.main.java.com.mulampaka.spring.data.jdbc.codegen.DomainClass.java", "BodyUseAPI": ["org.apache.commons.lang.StringUtils.split(java.lang.String,java.lang.String)"], "Fixed commit": "a018af0bb236aacdafddcc334d34a00f7eebf68f", "Url": "https://api.github.com/repos/kalyanmulampaka/spring-data-jdbc-codegen", "Date": "2014-10-22T18:34:10Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getNodeDescendants(org.jetbrains.mps.openapi.model.SNode,jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(5460421959009980242L, -5200054053719426524L, 6772988411135920840L, \"jetbrains.mps.samples.VoiceMenu.structure.DirectCall\"),boolean,org.jetbrains.mps.openapi.language.SAbstractConcept[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (jetbrains.mps.internal.collections.runtime.ListSequence.fromList(descendants).isNotEmpty()) { for (org.jetbrains.mps.openapi.model.SNode call : jetbrains.mps.internal.collections.runtime.ListSequence.fromList(descendants)) { if (jetbrains.mps.samples.VoiceMenu.editor.FixAll.FixAll_CLICK.isNotEmptyString(jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations.getString(call, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getProperty(5460421959009980242L, -5200054053719426524L, 6772988411135920840L, 7733035612202996721L, \"number\")))) { jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations.set(call, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getProperty(5460421959009980242L, -5200054053719426524L, 6772988411135920840L, 7733035612202996721L, \"number\"), jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations.getString(call, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getProperty(5460421959009980242L, -5200054053719426524L, 6772988411135920840L, 7733035612202996721L, \"number\")).replaceAll(\" \", \"\")); jetbrains.mps.baseLanguage.logging.runtime.model.LoggingRuntime.logMsgView(Level.INFO, \"Direct call number formated\", jetbrains.mps.samples.VoiceMenu.editor.FixAll.class, null, null); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5957/buggy-version/languages.jetbrains.mps.samples.VoiceMenu.source_gen.jetbrains.mps.samples.VoiceMenu.editor.FixAll.java", "BodyUseAPI": ["jetbrains.mps.internal.collections.runtime.ListSequence.fromList(java.util.List<org.jetbrains.mps.openapi.model.SNode>)"], "Fixed commit": "46635d704b630e38f51d55d32dc8cdf2a7a4bb9c", "Url": "https://api.github.com/repos/vaclav/voicemenu", "Date": "2017-09-21T09:43:38Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getHttpRequest().isSecure()) { entity.setEmbedHtml(entity.getEmbedHtml().replaceAll(\"http://\", \"https://\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1223/buggy-version/gallery.gallery-war.src.main.java.com.silverpeas.gallery.web.GalleryResource.java", "BodyUseAPI": [], "Fixed commit": "b7b1797900f2e689c576980e150ebf8045f7014d", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Components", "Date": "2014-10-09T21:24:14Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (content != null) { this.content = org.apache.commons.lang3.StringUtils.replaceEach(content.trim(), new java.lang.String[]{ \"\\\\n\", \"\\\\\\\"\", \"\\b\" }, new java.lang.String[]{ \"\\n\", \"\\\"\", \"\" }); }else { this.content = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7487/buggy-version/src.de.azapps.mirakel.model.task.TaskBase.java", "BodyUseAPI": ["java.lang.String.trim()", "org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[])"], "Fixed commit": "69a74a38047c6ad202e9ec5b59dc7bda99180aad", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-10-05T20:48:02Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (elapsed > 5000) { org.fourthline.cling.transport.impl.apache.StreamClientImpl.log.warning((((\"HTTP request took a long time: \" + elapsed) + \"ms: \") + (httpRequest.getURI()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4678/buggy-version/core.src.main.java.org.fourthline.cling.transport.impl.apache.StreamClientImpl.java", "BodyUseAPI": ["java.util.logging.Logger.warning((((\"HTTP request took a long time: \" + elapsed) + \"ms: \") + (httpRequest.getURI())))"], "Fixed commit": "7ea824ff5d957831afe9ddb7f203b439a2da2769", "Url": "https://api.github.com/repos/ViToni/jupnp", "Date": "2012-12-13T14:40:39Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.fourthline.cling.transport.impl.apache.StreamClientImpl.log.isLoggable(java.util.logging.Level.FINEST)) org.fourthline.cling.transport.impl.apache.StreamClientImpl.log.finest((((\"Sent HTTP request, got response (\" + elapsed) + \"ms) :\") + (httpRequest.getURI())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4678/buggy-version/core.src.main.java.org.fourthline.cling.transport.impl.apache.StreamClientImpl.java", "BodyUseAPI": ["java.util.logging.Logger.finest((((\"Sent HTTP request, got response (\" + elapsed) + \"ms) :\") + (httpRequest.getURI())))"], "Fixed commit": "7ea824ff5d957831afe9ddb7f203b439a2da2769", "Url": "https://api.github.com/repos/ViToni/jupnp", "Date": "2012-12-13T14:40:39Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index < 0) || (index >= (this.array.length))) { throw new java.lang.IllegalArgumentException(\"Bad args.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5934/buggy-version/chapter7.Structure.src.main.java.structure.CopyOnWriteList.java", "BodyUseAPI": [], "Fixed commit": "8aee3fd07a5b881775ad5d01eb6d648360b52626", "Url": "https://api.github.com/repos/vrnsky/java-a-to-z", "Date": "2017-04-17T12:50:21Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isValid())) return true; else return !(getInitialValue().equals(getValue()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8494/buggy-version/src.main.de.linearbits.preferences.Editor.java", "BodyUseAPI": [], "Fixed commit": "fde86588338132d88a6334f41ac10f105c636d0c", "Url": "https://api.github.com/repos/prasser/swtpreferences", "Date": "2015-02-06T09:44:57Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((board[jumping_piece_current_row][jumping_piece_current_column].isKing()) != kingStatus) { java.lang.System.out.println(\"Turn completed.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4866/buggy-version/src.Checkers.CheckersGame.java", "BodyUseAPI": [], "Fixed commit": "47dd951d08c183caa7cca8dab000a2a000c51efc", "Url": "https://api.github.com/repos/ver09934/New_Checkers", "Date": "2017-10-18T17:01:25Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.collections4.CollectionUtils.isNotEmpty(elements)) { java.util.Collections.reverse(elements); return java.util.Optional.of(new au.com.anz.rpncalculator.history.record.OperationRecord(elements, this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7083/buggy-version/src.main.java.au.com.anz.rpncalculator.userenter.operator.Clear.java", "BodyUseAPI": ["java.util.Collections.reverse(java.util.List<java.math.BigDecimal>)", "java.util.Optional.of(au.com.anz.rpncalculator.history.record.OperationRecord)"], "Fixed commit": "8df7960fcce6df31deae9b99e8a1c7f772cf39c0", "Url": "https://api.github.com/repos/LiuJiang682/RpnCalculator", "Date": "2016-09-24T11:27:52Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(stackedDeck.empty())) { return stackedDeck.pop(); }else { java.lang.System.out.println(\"---shuffling a new deck---\"); stackedDeck = shuffleAndStack(); return stackedDeck.pop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7734/buggy-version/src.main.java.edu.luc.cs271.stackjack.Deck.java", "BodyUseAPI": ["java.util.Stack<Card>.pop()"], "Fixed commit": "86f341f3f47078024052ded30f29527c167b0acc", "Url": "https://api.github.com/repos/alifonti/cs271-anthony-ivan-project", "Date": "2017-11-28T21:35:23Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.root.calculatormvvm.Function.ConvertIdtoString.convertIdtoString(android.view.View)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hasilID.equalsIgnoreCase(\".\")) { if ((obs.getValue().charAt(((obs.getValue().length()) - 1))) == '.') { hasilID = \"\"; }else if (obs.getValue().toString().equalsIgnoreCase(\"\")) { hasilID = \"0.\"; }else { hasilID = \".\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/332/buggy-version/app.src.main.java.com.example.root.calculatormvvm.ViewModel.MainActivityVM.java", "BodyUseAPI": [], "Fixed commit": "6b54475edcbad02b60b2311d4891181e16a0f21c", "Url": "https://api.github.com/repos/radhikayusuf/CalculatorMVVM", "Date": "2016-10-06T09:48:56Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (noNewData) retransmitWindow();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6457/buggy-version/TCPClient.java", "BodyUseAPI": [], "Fixed commit": "488418837e7939296b2a988ed7953891cad7e4d4", "Url": "https://api.github.com/repos/sethkielbasa/network_design_project", "Date": "2017-12-11T06:44:06Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_injectables) != null) { injectValues(ctxt, bean); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9252/buggy-version/afterburner.src.main.java.com.fasterxml.jackson.module.afterburner.deser.SuperSonicBeanDeserializer.java", "BodyUseAPI": [], "Fixed commit": "48255d49105a1cb27f522eb0a83dbe54e28c0960", "Url": "https://api.github.com/repos/FasterXML/jackson-modules-base", "Date": "2017-04-21T20:37:27Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_injectables) != null) { injectValues(ctxt, bean); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9252/buggy-version/afterburner.src.main.java.com.fasterxml.jackson.module.afterburner.deser.SuperSonicBeanDeserializer.java", "BodyUseAPI": [], "Fixed commit": "48255d49105a1cb27f522eb0a83dbe54e28c0960", "Url": "https://api.github.com/repos/FasterXML/jackson-modules-base", "Date": "2017-04-21T20:37:27Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.util.SparseArray<android.view.View>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (header == (ptrFrameLayout.getHeaderView())) { android.util.Log.v(org.ptrheader.ultraptrheadercollection.MainActivity.LOG_TAG, \"Already this header\"); }else { ptrFrameLayout.setHeaderView(header); ptrFrameLayout.addPtrUIHandler(((in.srain.cube.views.ptr.PtrUIHandler) (header))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1315/buggy-version/app.src.main.java.org.ptrheader.ultraptrheadercollection.MainActivity.java", "BodyUseAPI": ["in.srain.cube.views.ptr.PtrFrameLayout.addPtrUIHandler(android.view.View)", "in.srain.cube.views.ptr.PtrFrameLayout.setHeaderView(android.view.View)"], "Fixed commit": "453da85df64aecd5035d4dc38da82e620c55da18", "Url": "https://api.github.com/repos/Muyangmin/UltraPtrHeaderCollection", "Date": "2016-03-04T02:49:12Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { notika.assignment_2.MasterFragment masterF = new notika.assignment_2.MasterFragment(); getSupportFragmentManager().beginTransaction().add(R.id.container, masterF).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5374/buggy-version/assignment_2.src.main.java.notika.assignment_2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "86dc3874a615036833dcda0f228e0a88baf6b748", "Url": "https://api.github.com/repos/Notika/DA401A_Nataliia_Mykhailovska", "Date": "2015-10-04T14:27:11Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.forName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(pt.ist.fenixframework.backend.jvstmojb.pstm.OneBoxDomainObject.class.isAssignableFrom(type))) { pt.ist.fenixframework.backend.jvstmojb.pstm.DomainClassInfo.logger.error(\"Type '{}' is no longer a domain object!\", classname); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8816/buggy-version/backend.jvstm-ojb.runtime.src.main.java.pt.ist.fenixframework.backend.jvstmojb.pstm.DomainClassInfo.java", "BodyUseAPI": [], "Fixed commit": "ef709d367d68e3d4ef36dba4068339cbb242390c", "Url": "https://api.github.com/repos/fenix-framework/fenix-framework", "Date": "2015-01-10T00:42:35Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.legible.seguridadargusapp.Controller.GuardiaListaRecyclerAdapter.mGuardiasList.size()) > 0) { for (com.example.legible.seguridadargusapp.Model.ObjectModel.guardias currentGuardia : com.example.legible.seguridadargusapp.Controller.GuardiaListaRecyclerAdapter.mGuardiasList) { if (currentGuardia.getUsuarioNombre().equals(guardia.getUsuarioNombre())) { bandera = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/985/buggy-version/app.src.main.java.com.example.legible.seguridadargusapp.Controller.GuardiaListaRecyclerAdapter.java", "BodyUseAPI": [], "Fixed commit": "799bf54a7f44d502e8873976ef7253dd5dce3c03", "Url": "https://api.github.com/repos/SergioSilvaL/ArgusSeguridadApp", "Date": "2017-03-31T22:02:39Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bandera == false) { com.example.legible.seguridadargusapp.Controller.GuardiaListaRecyclerAdapter.mGuardiasList.add(0, guardia); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/985/buggy-version/app.src.main.java.com.example.legible.seguridadargusapp.Controller.GuardiaListaRecyclerAdapter.java", "BodyUseAPI": [], "Fixed commit": "799bf54a7f44d502e8873976ef7253dd5dce3c03", "Url": "https://api.github.com/repos/SergioSilvaL/ArgusSeguridadApp", "Date": "2017-03-31T22:02:39Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uamsb.getUser(((int) (javax.faces.context.FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get(\"userId\")))).getUserType().equals(\"superuser\")) { javax.faces.context.FacesContext.getCurrentInstance().getExternalContext().redirect(((javax.faces.context.FacesContext.getCurrentInstance().getExternalContext().getRequestContextPath()) + \"/admin/dashboard.xhtml\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/944/buggy-version/MerlionPortal.MerlionPortal-war.src.merlionportal.managedbean.ci.LoginBean.java", "BodyUseAPI": [], "Fixed commit": "f30b66e3bde1636f9b7916fed8b620f01a5c635a", "Url": "https://api.github.com/repos/PATHolongba0/merlionPortal", "Date": "2014-09-18T03:36:28Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getTasks(c2).size()) < 1) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3852/buggy-version/app.src.main.java.com.commisso.francesco.courses.DBHelper.java", "BodyUseAPI": [], "Fixed commit": "e8214f376eccb185007ad606510409d16a4fcbf8", "Url": "https://api.github.com/repos/drceogodpope/Courses", "Date": "2016-11-14T23:49:02Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (localFilePath == null) { localFilePath = objectUri.getPathInRepository(localRepository); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7711/buggy-version/src.main.java.org.mvnsearch.ali.oss.spring.shell.commands.OssOperationCommands.java", "BodyUseAPI": [], "Fixed commit": "35c7e177a26f8f94bdf55bfe14d2def219245d91", "Url": "https://api.github.com/repos/linux-china/ali-oss-java-cli", "Date": "2012-09-21T09:04:49Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1730/buggy-version/src.main.java.com.spotify.docker.client.messages.RegistryConfigs.java", "BodyUseAPI": [], "Fixed commit": "8fea305da84ee80cca3e0456af20ae448a3abbb8", "Url": "https://api.github.com/repos/spotify/docker-client", "Date": "2017-05-22T20:52:54Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((onDemandCheckBox.isSelected()) && (started)) { startButtonActionPerformed(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/656/buggy-version/src.main.java.lmo.tcp.bridge.client.BridgeClientForm.java", "BodyUseAPI": [], "Fixed commit": "18547c3f2c3fb3b8232a18c947c4166f88f77d55", "Url": "https://api.github.com/repos/lmo0731/tcp-bridge", "Date": "2016-05-01T16:23:13Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.opengl.GLES20.glIsEnabled(GLES20.GL_BLEND)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isBlend) { android.opengl.GLES20.glEnable(GLES20.GL_BLEND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/147/buggy-version/aavt.src.main.java.com.wuwang.aavt.gl.YuvOutputFilter.java", "BodyUseAPI": [], "Fixed commit": "35f0bf317f395f0c2782163fc05b9cfb1d318ebc", "Url": "https://api.github.com/repos/doggycoder/AAVT", "Date": "2017-10-10T10:24:45Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["method.getParameterList().getParameters()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parameters.length) == 0) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/716/buggy-version/java-psi-impl.src.com.intellij.psi.impl.source.resolve.graphInference.InferenceSession.java", "BodyUseAPI": [], "Fixed commit": "289b7f3c803f137e61a902eb40ab7eada10890ca", "Url": "https://api.github.com/repos/consulo/consulo-java", "Date": "2017-04-02T17:52:53Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultObj.getInt(\"status\")) == 210) { java.lang.System.out.println(\"\u6ca1\u6709\u4fe1\u606f\"); pw.println(\"\u6ca1\u6709\u4fe1\u606f\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4885/buggy-version/src.main.java.verify_service.credit_check.java", "BodyUseAPI": [], "Fixed commit": "a64f8c07ec41f33193f31f2386e7a89afad65a51", "Url": "https://api.github.com/repos/fanfannnmn/aliyun-id-verify", "Date": "2017-10-23T04:46:22Z"},
{"Line": "=>1517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((currentLex.lexi.equals(\"-\")) && (previousLex.type.equals(LexicalAnalyzer.tokenTypesEnum.IDENTIFIER.name()))) || (previousLex.type.equals(LexicalAnalyzer.tokenTypesEnum.NUMBER.name()))) || (previousLex.lexi.equals(\")\"))) || (previousLex.type.equals(LexicalAnalyzer.tokenTypesEnum.MATH_OPR.name()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3525/buggy-version/4490.src.Compiler.java", "BodyUseAPI": [], "Fixed commit": "d5e9ad813f120ec592df5881909a2a8ccbf7827c", "Url": "https://api.github.com/repos/nickFr0st/Compiler", "Date": "2013-03-24T04:22:14Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextLexi.lexi.equals(\"-\")) { if (((tempList.get((i + 2))) != null) && (((tempList.get((i + 2)).type.equals(LexicalAnalyzer.tokenTypesEnum.IDENTIFIER.name())) || (tempList.get((i + 2)).type.equals(LexicalAnalyzer.tokenTypesEnum.NUMBER.name()))) || (tempList.get((i + 2)).lexi.equals(\"(\")))) { }else { errorList += (\"Both side of mathematical operation must be either an Identifier or a Number. Line: \" + (previousLex.lineNum)) + \"\\n\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3525/buggy-version/4490.src.Compiler.java", "BodyUseAPI": [], "Fixed commit": "d5e9ad813f120ec592df5881909a2a8ccbf7827c", "Url": "https://api.github.com/repos/nickFr0st/Compiler", "Date": "2013-03-24T04:22:14Z"},
{"Line": "=>1513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentLex.lexi.equals(\"-\")) && (previousLex == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3525/buggy-version/4490.src.Compiler.java", "BodyUseAPI": [], "Fixed commit": "d5e9ad813f120ec592df5881909a2a8ccbf7827c", "Url": "https://api.github.com/repos/nickFr0st/Compiler", "Date": "2013-03-24T04:22:14Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (commentTimeStamp.equals(\"\")) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5770/buggy-version/src.main.java.org.wso2.siddhi.debs2016.input.DataLoaderThread.java", "BodyUseAPI": [], "Fixed commit": "227f0db1ffb4fc309cfb0994e061e9bd16cdb682", "Url": "https://api.github.com/repos/miyurud/debs2016", "Date": "2016-04-12T03:08:57Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (friendshipsTimeStamp.equals(\"\")) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5770/buggy-version/src.main.java.org.wso2.siddhi.debs2016.input.DataLoaderThread.java", "BodyUseAPI": [], "Fixed commit": "227f0db1ffb4fc309cfb0994e061e9bd16cdb682", "Url": "https://api.github.com/repos/miyurud/debs2016", "Date": "2016-04-12T03:08:57Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (postsTimeStamp.equals(\"\")) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5770/buggy-version/src.main.java.org.wso2.siddhi.debs2016.input.DataLoaderThread.java", "BodyUseAPI": [], "Fixed commit": "227f0db1ffb4fc309cfb0994e061e9bd16cdb682", "Url": "https://api.github.com/repos/miyurud/debs2016", "Date": "2016-04-12T03:08:57Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTopNode(i, j)) { uf.union(site, virtualNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1111/buggy-version/src.main.java.Percolation.java", "BodyUseAPI": [], "Fixed commit": "d7ba506b5ce6be8d48c5bb495a926b9f5c3a0435", "Url": "https://api.github.com/repos/Xidai/algorithms_princeton", "Date": "2014-06-20T16:43:03Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isInMenu) == false) { g.setColor(java.awt.Color.BLACK); for (java.awt.Point p : rottenApples) { g.fillOval(((p.x) * (BOX_WIDTH)), ((p.y) * (BOX_HEIGHT)), BOX_WIDTH, BOX_HEIGHT); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8339/buggy-version/Snake.src.SnakeCanvas.java", "BodyUseAPI": [], "Fixed commit": "72c0e2a87d5274206ba8a10a2ef73451583ee26d", "Url": "https://api.github.com/repos/IvanKrastev/-Snake-Teamwork-Project--Team-Stonehenge", "Date": "2015-02-04T12:01:59Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7391/buggy-version/src.wrath.client.ClientUtils.java", "BodyUseAPI": [], "Fixed commit": "c6f801396e2334fe7b803d7ac88a80f3d3e2d023", "Url": "https://api.github.com/repos/nixfanboy/WrathEngine", "Date": "2015-01-21T03:32:34Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (image == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7391/buggy-version/src.wrath.client.ClientUtils.java", "BodyUseAPI": [], "Fixed commit": "c6f801396e2334fe7b803d7ac88a80f3d3e2d023", "Url": "https://api.github.com/repos/nixfanboy/WrathEngine", "Date": "2015-01-21T03:32:34Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(exists())) { try { createNewFile(); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(com.alternacraft.aclib.utils.PluginFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1724/buggy-version/src.main.java.com.alternacraft.aclib.utils.PluginFile.java", "BodyUseAPI": [], "Fixed commit": "5f53e42826db750c6d83500d38e55b53181de183", "Url": "https://api.github.com/repos/AlternaCraft/ACLIB", "Date": "2016-11-01T21:26:03Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((years) == null) { years = new boolean[((maxYear) - (minYear)) + 1]; for (int i = 0; i < (years.length); i++) years[i] = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2308/buggy-version/src.visualize.DateRange.java", "BodyUseAPI": [], "Fixed commit": "79d5c964f8b296f3759e0f0706785b0b789aab34", "Url": "https://api.github.com/repos/tgavankar/TimestampVisualizer", "Date": "2012-05-03T02:52:54Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (((transactionType == null) && (amount == null)) && (searchText == null)) { querySufix = \"where t.transactionParent is null \" + \"and t.dateCreated between :dateFrom and :dateTo\"; }else querySufix = \"where t.transactionParent is null \" + (\"and t.dateCreated between :dateFrom and :dateTo and (t.type =:type or t.amount =:amount \" + \"or t.subject like :searchText or t.currencyCode like :searchText)\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/421/buggy-version/CurrencyServer.src.main.java.org.votingsystem.web.currency.jaxrs.TransactionVSResource.java", "BodyUseAPI": [], "Fixed commit": "10cd63388bf827ad66829d2bbacdd29d7566d22e", "Url": "https://api.github.com/repos/votingsystem/votingsystem", "Date": "2015-11-18T23:24:37Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (transactionType != null) query.setParameter(\"type\", transactionType);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/421/buggy-version/CurrencyServer.src.main.java.org.votingsystem.web.currency.jaxrs.TransactionVSResource.java", "BodyUseAPI": ["javax.persistence.Query.setParameter(java.lang.String,TransactionVS.Type)"], "Fixed commit": "10cd63388bf827ad66829d2bbacdd29d7566d22e", "Url": "https://api.github.com/repos/votingsystem/votingsystem", "Date": "2015-11-18T23:24:37Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((transactionType == null) && (amount == null)) && (searchText == null)) { query = dao.getEM().createQuery((queryCountPrefix + querySufix)).setParameter(\"dateFrom\", dateFrom).setParameter(\"dateTo\", dateTo); }else { query = dao.getEM().createQuery((queryCountPrefix + querySufix)).setParameter(\"dateFrom\", dateFrom).setParameter(\"dateTo\", dateTo).setParameter(\"amount\", amount).setParameter(\"searchText\", searchText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/421/buggy-version/CurrencyServer.src.main.java.org.votingsystem.web.currency.jaxrs.TransactionVSResource.java", "BodyUseAPI": ["dao.getEM().createQuery((queryCountPrefix + querySufix)).setParameter(\"dateFrom\", dateFrom).setParameter(\"dateTo\", dateTo).setParameter(java.lang.String,java.math.BigDecimal)", "dao.getEM().createQuery((queryCountPrefix + querySufix)).setParameter(\"dateFrom\", dateFrom).setParameter(\"dateTo\", dateTo).setParameter(\"amount\", amount).setParameter(java.lang.String,java.lang.String)"], "Fixed commit": "10cd63388bf827ad66829d2bbacdd29d7566d22e", "Url": "https://api.github.com/repos/votingsystem/votingsystem", "Date": "2015-11-18T23:24:37Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (transactionType != null) query.setParameter(\"type\", transactionType);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/421/buggy-version/CurrencyServer.src.main.java.org.votingsystem.web.currency.jaxrs.TransactionVSResource.java", "BodyUseAPI": ["javax.persistence.Query.setParameter(java.lang.String,TransactionVS.Type)"], "Fixed commit": "10cd63388bf827ad66829d2bbacdd29d7566d22e", "Url": "https://api.github.com/repos/votingsystem/votingsystem", "Date": "2015-11-18T23:24:37Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.qudqj_000.a2017_05_11.MainActivity.nameFormat(java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (filename.equals(itemRightNow)) { }else deleteExternalFile((((path + \"diary/\") + (itemRightNow)) + \".txt\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4508/buggy-version/app.src.main.java.com.example.qudqj_000.a2017_05_11.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "98d8dc101742af6b610f9afa990306e2bd66e0c4", "Url": "https://api.github.com/repos/fxf24/TenthApplication", "Date": "2017-05-17T05:07:38Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(net.roryclaasen.rorysmod.util.NBTLaser.hasKeys(stack.stackTagCompound))) onCreated(stack, playerIn.worldObj, playerIn);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8230/buggy-version/src.main.java.net.roryclaasen.rorysmod.item.ItemRifle.java", "BodyUseAPI": ["net.roryclaasen.rorysmod.item.ItemRifle.onCreated(net.minecraft.item.ItemStack,playerIn.worldObj,net.minecraft.entity.player.EntityPlayer)"], "Fixed commit": "0b5f1477dc92125f664ec1cdd2c1038a6176b52a", "Url": "https://api.github.com/repos/roryclaasen/RorysMod", "Date": "2016-02-08T19:19:37Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ballerinalang.model.values.BStruct.getNativeData(org.ballerinalang.net.http.Constants.MESSAGE_OUTPUT_STREAM)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (messageOutputStream != null) { messageOutputStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/108/buggy-version/modules.ballerina-http.src.main.java.org.ballerinalang.net.http.HttpUtil.java", "BodyUseAPI": ["java.io.OutputStream.close()"], "Fixed commit": "bb9b599fd170edda5f129d5e28129c6968511056", "Url": "https://api.github.com/repos/ballerina-platform/ballerina-lang", "Date": "2017-12-15T03:55:52Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(checkIfInterfaceMethodWasImplemented(methodBuilder))) { builder.addMethod(methodBuilder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9051/buggy-version/addon-javabean.src.main.java.org.springframework.roo.addon.javabean.JavaBeanMetadata.java", "BodyUseAPI": [], "Fixed commit": "13b43a0a9c6d8491deca8af5bbb5c1afcbbc0498", "Url": "https://api.github.com/repos/spring-projects/spring-roo", "Date": "2015-01-14T16:04:09Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mapPageFragment) != null) { mapPageFragment.setProgressBarGone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8669/buggy-version/app.src.main.java.biz.aejis.gourmet.app.adapters.MainViewPagerAdapter.java", "BodyUseAPI": [], "Fixed commit": "2138413c4fa4ff0b5bade1f56455a061daad9ac3", "Url": "https://api.github.com/repos/sanchousese/GourmetAndroid", "Date": "2015-07-20T10:27:53Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((programmerUnit) != null) { te.translatedX = programmerUnit.getTranslatedX(); te.translatedY = programmerUnit.getTranslatedY(); te.zoomState = programmerUnit.getLastZoom(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8065/buggy-version/src.pneumaticCraft.client.gui.GuiProgrammer.java", "BodyUseAPI": [], "Fixed commit": "5f4ec34d4ee7bc6ca2cfd5029471c81b58d97469", "Url": "https://api.github.com/repos/AnodeCathode/PneumaticCraft", "Date": "2015-11-27T09:58:51Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nodes > 0) { int estimatedMeanSize = ((int) ((edges / nodes) * 1.1)); this.defaultListSizes.put(ListType.LocalEdgeList, estimatedMeanSize); this.defaultListSizes.put(ListType.LocalNodeList, estimatedMeanSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3975/buggy-version/src.dna.graph.datastructures.GraphDataStructure.java", "BodyUseAPI": [], "Fixed commit": "06c89853f8d85bc7e86aa44d474a17dfd75a67f6", "Url": "https://api.github.com/repos/BenjaminSchiller/DNA", "Date": "2014-03-18T10:20:55Z"},
{"Line": "=>887", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (profiles != null) { org.jetbrains.idea.maven.project.MavenProjectsTree.updateCrc(crc, profiles.hashCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6023/buggy-version/plugins.maven.src.main.java.org.jetbrains.idea.maven.project.MavenProjectsTree.java", "BodyUseAPI": ["org.jetbrains.idea.maven.project.MavenProjectsTree.updateCrc(java.util.zip.CRC32,int)", "java.util.Set<java.lang.String>.hashCode()"], "Fixed commit": "f05aa41bad94c709c203d599c4b278750f532539", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2012-11-15T10:38:35Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (predictionsReader.hasNext()) { predictions = predictionsReader.next(); }else { predictions = emptyList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2868/buggy-version/src.main.java.it.cnr.isti.hpc.dexter.eval.Evaluator.java", "BodyUseAPI": ["it.cnr.isti.hpc.dexter.eval.reader.AnnotatedSpotReader.next()"], "Fixed commit": "2c176aa685f4295014b429c17246fbd6d444e129", "Url": "https://api.github.com/repos/diegoceccarelli/dexter-eval", "Date": "2015-01-25T21:53:50Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arguments != null) { for (int i = 0; i < (arguments.length); i++) { java.lang.String argument = ((java.lang.String) (arguments[i])); message = message.replaceAll(((\"\\\\{\" + i) + \"\\\\}\"), argument); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4517/buggy-version/omod.src.main.java.org.openmrs.module.emr.page.controller.account.AccountPageController.java", "BodyUseAPI": [], "Fixed commit": "f6b421eb62ef0fe131de2fd769deeea8fac1f2b4", "Url": "https://api.github.com/repos/PIH/openmrs-module-emr", "Date": "2013-02-04T16:26:09Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(p.getLocation().getWorld().equals(getEmiterLocation().getWorld()))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8417/buggy-version/MangoStructures.src.main.java.com.kylantraynor.mangostructures.structures.Chimney.java", "BodyUseAPI": [], "Fixed commit": "b7178eef1cfd9d43547789ef4ac90382bdff4e36", "Url": "https://api.github.com/repos/KylanTraynor/MangoStructures", "Date": "2016-03-18T15:59:10Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(p.getLocation().getWorld().equals(getEmiterLocation().getWorld()))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8417/buggy-version/MangoStructures.src.main.java.com.kylantraynor.mangostructures.structures.Chimney.java", "BodyUseAPI": [], "Fixed commit": "b7178eef1cfd9d43547789ef4ac90382bdff4e36", "Url": "https://api.github.com/repos/KylanTraynor/MangoStructures", "Date": "2016-03-18T15:59:10Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((available()) == 0) && (!(isOpen))) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7656/buggy-version/src.main.java.alt.java.io.PipedInputStream.java", "BodyUseAPI": [], "Fixed commit": "4541e123f70a57e7426289ba68c3c17e4a19df89", "Url": "https://api.github.com/repos/edenrox/jdk1", "Date": "2013-11-28T16:08:38Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((in) == (-1)) { throw new alt.java.io.IOException(\"PipedInputStream is not connected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7656/buggy-version/src.main.java.alt.java.io.PipedInputStream.java", "BodyUseAPI": [], "Fixed commit": "4541e123f70a57e7426289ba68c3c17e4a19df89", "Url": "https://api.github.com/repos/edenrox/jdk1", "Date": "2013-11-28T16:08:38Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((available()) == 0) && (!(isOpen))) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7656/buggy-version/src.main.java.alt.java.io.PipedInputStream.java", "BodyUseAPI": [], "Fixed commit": "4541e123f70a57e7426289ba68c3c17e4a19df89", "Url": "https://api.github.com/repos/edenrox/jdk1", "Date": "2013-11-28T16:08:38Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isOpen)) { throw new alt.java.io.IOException(\"PipedInputStream is already closed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7656/buggy-version/src.main.java.alt.java.io.PipedInputStream.java", "BodyUseAPI": [], "Fixed commit": "4541e123f70a57e7426289ba68c3c17e4a19df89", "Url": "https://api.github.com/repos/edenrox/jdk1", "Date": "2013-11-28T16:08:38Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((in) < (out)) { java.lang.System.arraycopy(buffer, in, bytes, offset, numBytes); in += numBytes; }else { int firstCopy = java.lang.Math.min(numBytes, ((buffer.length) - (in))); java.lang.System.arraycopy(buffer, in, bytes, offset, firstCopy); int secondCopy = java.lang.Math.min((numBytes - firstCopy), out); java.lang.System.arraycopy(buffer, 0, bytes, (offset + firstCopy), secondCopy); in = ((in) + numBytes) % (buffer.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7656/buggy-version/src.main.java.alt.java.io.PipedInputStream.java", "BodyUseAPI": ["java.lang.Math.min(int,int)"], "Fixed commit": "4541e123f70a57e7426289ba68c3c17e4a19df89", "Url": "https://api.github.com/repos/edenrox/jdk1", "Date": "2013-11-28T16:08:38Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((in) == (-1)) { throw new alt.java.io.IOException(\"PipedInputStream is not connected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7656/buggy-version/src.main.java.alt.java.io.PipedInputStream.java", "BodyUseAPI": [], "Fixed commit": "4541e123f70a57e7426289ba68c3c17e4a19df89", "Url": "https://api.github.com/repos/edenrox/jdk1", "Date": "2013-11-28T16:08:38Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (envId != (-1)) { matchs.add(new com.baidu.unbiz.common.genericdao.operator.Match(com.baidu.dsp.common.dao.Columns.ENV_ID, envId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6280/buggy-version/disconf-web.src.main.java.com.baidu.disconf.web.service.config.dao.impl.ConfigDaoImpl.java", "BodyUseAPI": ["java.util.List<com.baidu.unbiz.common.genericdao.operator.Match>.add(com.baidu.unbiz.common.genericdao.operator.Match)"], "Fixed commit": "e77785500d8bc7684d73dc5eca2c3a8d8872a8bc", "Url": "https://api.github.com/repos/markyao/disconf", "Date": "2016-10-27T10:49:47Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(version))) { matchs.add(new com.baidu.unbiz.common.genericdao.operator.Match(com.baidu.dsp.common.dao.Columns.VERSION, version)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6280/buggy-version/disconf-web.src.main.java.com.baidu.disconf.web.service.config.dao.impl.ConfigDaoImpl.java", "BodyUseAPI": ["java.util.List<com.baidu.unbiz.common.genericdao.operator.Match>.add(com.baidu.unbiz.common.genericdao.operator.Match)"], "Fixed commit": "e77785500d8bc7684d73dc5eca2c3a8d8872a8bc", "Url": "https://api.github.com/repos/markyao/disconf", "Date": "2016-10-27T10:49:47Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (appId != (-1)) { matchs.add(new com.baidu.unbiz.common.genericdao.operator.Match(com.baidu.dsp.common.dao.Columns.APP_ID, appId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6280/buggy-version/disconf-web.src.main.java.com.baidu.disconf.web.service.config.dao.impl.ConfigDaoImpl.java", "BodyUseAPI": ["java.util.List<com.baidu.unbiz.common.genericdao.operator.Match>.add(com.baidu.unbiz.common.genericdao.operator.Match)"], "Fixed commit": "e77785500d8bc7684d73dc5eca2c3a8d8872a8bc", "Url": "https://api.github.com/repos/markyao/disconf", "Date": "2016-10-27T10:49:47Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (w_ref == (-1)) { org.agmip.util.MapUtil.LOG.warn(\"{} could not find weather data [{}] in the data set\", exname, (wst_id + clim_id)); }else { newExp.put(\"weather\", weathers.get(w_ref)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/823/buggy-version/src.main.java.org.agmip.util.MapUtil.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,java.util.HashMap<java.lang.String, java.lang.Object>)", "java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.Object>>.get(int)"], "Fixed commit": "06e8308a624722ff6fa7e9d2d60aee438b3e7272", "Url": "https://api.github.com/repos/agmip/agmip-core", "Date": "2016-02-17T18:40:49Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (progress[0].equals(\"d\")) { langButtonPressed(1); }else if (progress[0].equals(\"s\")) { langButtonPressed(2); }else if ((progress[0].equals(\"u\")) || (progress[0].equals(\"g\"))) { langButtonPressed(3); }else if ((progress[0].equals(\"i\")) || (progress[0].equals(\"a\"))) { langButtonPressed(4); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1215/buggy-version/app.src.main.java.com.giovanniburresi.hitme.HitmeMainActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "390e34990fcfd2bfa42546f18d4b1cc22074963b", "Url": "https://api.github.com/repos/Ekironji/HitMe", "Date": "2015-10-02T16:50:43Z"},
{"Line": "=>707", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCamera) != null) { mCamera.lock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3236/buggy-version/cameraview.src.main.java.com.otaliastudios.cameraview.Camera1.java", "BodyUseAPI": [], "Fixed commit": "15fac1b7a637c9c375f799a76a482f46151704cd", "Url": "https://api.github.com/repos/Johnson145/CameraView", "Date": "2017-10-10T19:21:26Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edu.gordian.values.expressions.NotEquals.is(e)) { return edu.gordian.values.expressions.NotEquals.valueOf(this, e); }else if (edu.gordian.values.expressions.StringConcat.is(this, e)) { return edu.gordian.values.expressions.StringConcat.valueOf(this, e); }else if (edu.gordian.values.calculations.Subtraction.is(this, e)) { return edu.gordian.values.calculations.Subtraction.valueOf(this, e); }else if (edu.gordian.values.calculations.Addition.is(this, e)) { return edu.gordian.values.calculations.Addition.valueOf(this, e); }else if (edu.gordian.values.calculations.Division.is(this, e)) { return edu.gordian.values.calculations.Division.valueOf(this, e); }else if (edu.gordian.values.calculations.Multiplication.is(this, e)) { return edu.gordian.values.calculations.Multiplication.valueOf(this, e); }else if (edu.gordian.values.calculations.Modulus.is(this, e)) { return edu.gordian.values.calculations.Modulus.valueOf(this, e); }else if (edu.gordian.values.Values.isLiteralValue(e)) { return edu.gordian.values.Values.literalValue(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1017/buggy-version/src.edu.gordian.scopes.Scope.java", "BodyUseAPI": ["edu.gordian.values.calculations.Multiplication.is(edu.gordian.scopes.Scope,java.lang.String)", "edu.gordian.values.calculations.Addition.is(edu.gordian.scopes.Scope,java.lang.String)", "edu.gordian.values.calculations.Multiplication.valueOf(edu.gordian.scopes.Scope,java.lang.String)", "edu.gordian.values.calculations.Division.valueOf(edu.gordian.scopes.Scope,java.lang.String)", "edu.gordian.values.Values.literalValue(java.lang.String)", "edu.gordian.values.calculations.Subtraction.is(edu.gordian.scopes.Scope,java.lang.String)", "edu.gordian.values.calculations.Modulus.valueOf(edu.gordian.scopes.Scope,java.lang.String)", "edu.gordian.values.expressions.StringConcat.valueOf(edu.gordian.scopes.Scope,java.lang.String)", "edu.gordian.values.calculations.Subtraction.valueOf(edu.gordian.scopes.Scope,java.lang.String)", "edu.gordian.values.expressions.StringConcat.is(edu.gordian.scopes.Scope,java.lang.String)", "edu.gordian.values.calculations.Modulus.is(edu.gordian.scopes.Scope,java.lang.String)", "edu.gordian.values.expressions.NotEquals.valueOf(edu.gordian.scopes.Scope,java.lang.String)", "edu.gordian.values.Values.isLiteralValue(java.lang.String)", "edu.gordian.values.calculations.Division.is(edu.gordian.scopes.Scope,java.lang.String)", "edu.gordian.values.calculations.Addition.valueOf(edu.gordian.scopes.Scope,java.lang.String)"], "Fixed commit": "082afbfbb40e0fb22385c033d2070994464fc402", "Url": "https://api.github.com/repos/Team4334/gordian", "Date": "2013-07-14T01:33:07Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.objectweb.asm.Type.getSort()", "org.objectweb.asm.Type.getSort()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((f == (org.objectweb.asm.Type.BOOLEAN)) && (t == (org.objectweb.asm.Type.INT))) { }else if ((f == (org.objectweb.asm.Type.INT)) && (t == (org.objectweb.asm.Type.BOOLEAN))) { }else if ((f == (org.objectweb.asm.Type.DOUBLE)) && (t == (org.objectweb.asm.Type.LONG))) { mg.visitInsn(Opcodes.D2L); }else if ((f == (org.objectweb.asm.Type.INT)) && (t == (org.objectweb.asm.Type.OBJECT))) { mg.visitMethodInsn(Opcodes.INVOKESTATIC, \"java/lang/Integer\", \"valueOf\", \"(I)Ljava/lang/Integer;\", false); }else if ((f == (org.objectweb.asm.Type.DOUBLE)) && (t == (org.objectweb.asm.Type.OBJECT))) { mg.visitMethodInsn(Opcodes.INVOKESTATIC, \"java/lang/Double\", \"valueOf\", \"(D)Ljava/lang/Double;\", false); }else if ((f == (org.objectweb.asm.Type.LONG)) && (t == (org.objectweb.asm.Type.OBJECT))) { mg.visitMethodInsn(Opcodes.INVOKESTATIC, \"java/lang/Long\", \"valueOf\", \"(J)Ljava/lang/Long;\", false); }else if ((f == (org.objectweb.asm.Type.BOOLEAN)) && (t == (org.objectweb.asm.Type.OBJECT))) { mg.visitMethodInsn(Opcodes.INVOKESTATIC, \"java/lang/Boolean\", \"valueOf\", \"(Z)Ljava/lang/Boolean;\", false); }else if ((from.equals(org.objectweb.asm.Type.getType(java.lang.String.class))) && (t == (org.objectweb.asm.Type.OBJECT))) { }else if ((from.equals(org.objectweb.asm.Type.getType(java.lang.Object.class))) && (t == (org.objectweb.asm.Type.INT))) { mg.visitMethodInsn(Opcodes.INVOKESTATIC, io.lambdacloud.BytecodeSupport.getMyName(), \"object2int\", \"(Ljava/lang/Object;)I\", false); }else if ((from.equals(org.objectweb.asm.Type.getType(java.lang.Object.class))) && (t == (org.objectweb.asm.Type.DOUBLE))) { mg.visitMethodInsn(Opcodes.INVOKESTATIC, io.lambdacloud.BytecodeSupport.getMyName(), \"object2double\", \"(Ljava/lang/Object;)D\", false); }else if ((from.equals(org.objectweb.asm.Type.getType(java.lang.Object.class))) && (t == (org.objectweb.asm.Type.LONG))) { mg.visitMethodInsn(Opcodes.INVOKESTATIC, io.lambdacloud.BytecodeSupport.getMyName(), \"object2long\", \"(Ljava/lang/Object;)J\", false); }else if ((from.equals(org.objectweb.asm.Type.getType(java.lang.Object.class))) && (t == (org.objectweb.asm.Type.BOOLEAN))) { mg.visitMethodInsn(Opcodes.INVOKESTATIC, io.lambdacloud.BytecodeSupport.getMyName(), \"object2boolean\", \"(Ljava/lang/Object;)Z\", false); }else { throw new java.lang.RuntimeException((((\"Cannot convert type \" + from) + \" to type \") + to)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/501/buggy-version/src.io.lambdacloud.node.Tools.java", "BodyUseAPI": [], "Fixed commit": "d76dd45777d1570e54bf74206f0bf40f57b9269d", "Url": "https://api.github.com/repos/yuemingl/ExprEngine", "Date": "2016-11-05T16:11:34Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.configuration.file.YamlConfiguration.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (oldLevel > newLevel) { player.sendMessage(((((org.bukkit.ChatColor.RED) + \"Leveled down to Level \") + newLevel) + \"!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3480/buggy-version/src.main.java.bluenova.fairytailcraft.config.PlayerConfig.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(((((org.bukkit.ChatColor.RED) + \"Leveled down to Level \") + newLevel) + \"!\"))"], "Fixed commit": "d6f293e61ca14aa16a7751f16f21176501e73803", "Url": "https://api.github.com/repos/bluenova/FairyTailCraft", "Date": "2012-03-21T10:57:50Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["FairyTailCraft.activeMagic.get(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (get != null) val = get[1];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3480/buggy-version/src.main.java.bluenova.fairytailcraft.commands.BasicCommands.java", "BodyUseAPI": [], "Fixed commit": "d6f293e61ca14aa16a7751f16f21176501e73803", "Url": "https://api.github.com/repos/bluenova/FairyTailCraft", "Date": "2012-03-21T10:57:50Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.ethan.myclub.main.MyApplication.isLogin()) mFabMenu.showMenuButton(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1279/buggy-version/app.src.main.java.com.ethan.myclub.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0c8c4a189fa2a17fae666c43dee844d7c5eb3022", "Url": "https://api.github.com/repos/Ethan-yt/MyClub", "Date": "2017-04-11T07:56:49Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentFragment) instanceof com.ethan.myclub.club.my.view.MyClubFragment) && (com.ethan.myclub.main.MyApplication.isLogin())) mFabMenu.showMenuButton(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1279/buggy-version/app.src.main.java.com.ethan.myclub.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0c8c4a189fa2a17fae666c43dee844d7c5eb3022", "Url": "https://api.github.com/repos/Ethan-yt/MyClub", "Date": "2017-04-11T07:56:49Z"},
{"Line": "=>605", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (keyString.equals(GlobalNames.numberThreads)) numThreads = java.lang.Integer.valueOf(java.lang.String.valueOf(value));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3500/buggy-version/src.main.java.com.silicolife.textmining.processes.ie.ner.linnaeus.LinnaeusTagger.java", "BodyUseAPI": [], "Fixed commit": "9720181a885d9ea89aa3acab547adfb0b224ef4a", "Url": "https://api.github.com/repos/biotextmining/processes", "Date": "2017-02-24T18:24:09Z"},
{"Line": "=>1052", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.spy.memcached.MemcachedConnection.getFailureMode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (failureMode == (FailureMode.Cancel)) { node = null; }else { for (java.util.Iterator<net.spy.memcached.MemcachedNode> i = locator.getSequence(key); (node == null) && (i.hasNext());) { net.spy.memcached.MemcachedNode n = i.next(); if (n.isActive()) { node = n; } } if (node == null) { node = primaryNode; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/714/buggy-version/src.main.java.net.spy.memcached.MemcachedClient.java", "BodyUseAPI": [], "Fixed commit": "83c53d5ea9b073adc5fc19bce751856b496d7aab", "Url": "https://api.github.com/repos/minkikim89/arcus-java-client", "Date": "2015-06-18T07:11:17Z"},
{"Line": "=>1103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((me.getKey()) == null) op.cancel(); else mops.put(me.getKey(), op);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/714/buggy-version/src.main.java.net.spy.memcached.MemcachedClient.java", "BodyUseAPI": ["java.util.Map.Entry<net.spy.memcached.MemcachedNode, java.util.Collection<java.lang.String>>.getKey()", "java.util.Map<net.spy.memcached.MemcachedNode, net.spy.memcached.ops.Operation>.put(me.getKey(),net.spy.memcached.ops.Operation)"], "Fixed commit": "83c53d5ea9b073adc5fc19bce751856b496d7aab", "Url": "https://api.github.com/repos/minkikim89/arcus-java-client", "Date": "2015-06-18T07:11:17Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (endLSN.get().equals(startLSN)) { return java.lang.Boolean.FALSE; }else com.orientechnologies.orient.server.distributed.impl.task.ODistributedServerLog.info(this, iManager.getLocalNodeName(), getNodeSource(), DIRECTION.OUT, \"Delta backup of database '%s' completed. range=%s-%s\", databaseName, startLSN, endLSN.get());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3658/buggy-version/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseDeltaTask.java", "BodyUseAPI": ["com.orientechnologies.orient.server.distributed.impl.task.ODistributedServerLog.info(com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseDeltaTask,iManager.getLocalNodeName(),getNodeSource(),DIRECTION.OUT,java.lang.String,java.lang.String,com.orientechnologies.orient.core.storage.impl.local.paginated.wal.OLogSequenceNumber,endLSN.get())", "java.util.concurrent.atomic.AtomicReference<com.orientechnologies.orient.core.storage.impl.local.paginated.wal.OLogSequenceNumber>.get()"], "Fixed commit": "b6c75205e4877e7af07adff1ae4036263bf1f4ea", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-08-08T14:02:46Z"},
{"Line": "=>843", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.storage.impl.local.OWriteAheadLog.end()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lsn.equals(endLsn)) { return endLsn; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3658/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.OAbstractPaginatedStorage.java", "BodyUseAPI": [], "Fixed commit": "b6c75205e4877e7af07adff1ae4036263bf1f4ea", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-08-08T14:02:46Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result == null) || (fields == null)) { return com.yahoo.ycsb.Status.OK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/973/buggy-version/tellstore.src.main.java.ch.ethz.tell.TellStore.java", "BodyUseAPI": [], "Fixed commit": "39bfb837459fe69aed5deb7252880b12176aa614", "Url": "https://api.github.com/repos/tellproject/YCSB", "Date": "2016-01-10T17:45:42Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getPrincipal()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) { log.info(GhapiStatusCodes.UNAUTHORIZED_REQUEST.getDescription()); throw new com.systems88.externalghapi.common.exception.GhapiException(new java.lang.IllegalArgumentException(), GhapiStatusCodes.UNAUTHORIZED_REQUEST.getCode(), GhapiStatusCodes.UNAUTHORIZED_REQUEST.getDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2073/buggy-version/src.main.java.com.systems88.externalghapi.providers.abstraction.ResourceAdvise.java", "BodyUseAPI": [], "Fixed commit": "cc3e7c5e352b0c2c57813d168f81226cb430afb7", "Url": "https://api.github.com/repos/lundagoliver/externalghapi", "Date": "2017-10-17T06:30:18Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((zEvent.getTarget()) != null) { perm = zEvent.getTarget(); }else { perm = game.getPermanent(event.getTargetId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6157/buggy-version/Mage.src.mage.abilities.common.ZoneChangeAllTriggeredAbility.java", "BodyUseAPI": ["mage.game.events.ZoneChangeEvent.getTarget()"], "Fixed commit": "2259a534b22be62544535ae1f00aab05db664c2d", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-06-03T22:55:50Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((thisPackage.getImplementationVersion()) != null) && ((thisPackage.getImplementationVendor()) != null)) { com.sun.media.imageioimpl.common.PackageUtil.version = thisPackage.getImplementationVersion(); com.sun.media.imageioimpl.common.PackageUtil.vendor = thisPackage.getImplementationVendor(); com.sun.media.imageioimpl.common.PackageUtil.specTitle = thisPackage.getSpecificationTitle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3541/buggy-version/src.main.java.com.sun.media.imageioimpl.common.PackageUtil.java", "BodyUseAPI": [], "Fixed commit": "a14462293975ef7dbd977afb2c97289b463e6b9c", "Url": "https://api.github.com/repos/stain/jai-imageio-core", "Date": "2014-09-12T09:00:45Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.System.getProperty(\"os.name\").equalsIgnoreCase(\"Linux\")) { trackDirectory = new java.io.File(((java.lang.System.getProperty(\"user.dir\")) + \"/Tracks\")); }else { trackDirectory = new java.io.File(((java.lang.System.getProperty(\"user.dir\")) + \"\\\\Tracks\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1493/buggy-version/Racetrack.src.main.java.logic.TrackFactory.java", "BodyUseAPI": [], "Fixed commit": "2453299ac645c1d762c98947de7b49948d21e370", "Url": "https://api.github.com/repos/michaelbekos/racetrack", "Date": "2016-01-12T10:44:55Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((metadata.getInheritance()) == null) { advancedSearch = config.isVisibleInAdvancedSearch(); }else { java.lang.String codeInDefaultSchema = (schemaTypeCode + \"_default_\") + (new com.constellio.model.services.schemas.SchemaUtils().getLocalCodeFromMetadataCode(code)); com.constellio.app.entities.schemasDisplay.MetadataDisplayConfig inheritanceConfig = configManager.getMetadata(metadata.getCollection(), codeInDefaultSchema); advancedSearch = inheritanceConfig.isVisibleInAdvancedSearch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4623/buggy-version/app.src.com.constellio.app.ui.framework.builders.MetadataToFormVOBuilder.java", "BodyUseAPI": ["com.constellio.model.entities.schemas.Metadata.getCollection()", "com.constellio.app.services.schemasDisplay.SchemasDisplayManager.getMetadata(metadata.getCollection(),java.lang.String)"], "Fixed commit": "4befbdf2261a5d6a270dc44fff2765b98d274a7e", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-07-20T01:40:40Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(e instanceof java.net.SocketException)) e.printStackTrace();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8505/buggy-version/src.tail.Tail.java", "BodyUseAPI": ["java.io.IOException.printStackTrace()"], "Fixed commit": "c21f7ac4640c34dc940ce0ef0314666c6dfb902a", "Url": "https://api.github.com/repos/tobiasschulz/tailserver", "Date": "2013-07-25T23:52:03Z"},
{"Line": "=>2046", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getEmpty()) { return ((ceylon.language.Sequential<? extends Element>) (empty_.get_())); }else { return new ceylon.language.ArraySequence<Element>($reifiedElement, new ceylon.language.Array<Element>($reifiedElement, copyArray())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4847/buggy-version/runtime.ceylon.language.Array.java", "BodyUseAPI": [], "Fixed commit": "bb7867af52179aa0dc271df5e1f8564c239cacd6", "Url": "https://api.github.com/repos/ceylon/ceylon.language", "Date": "2014-06-22T17:38:57Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDebugMode) { registrationUtil.clean(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1647/buggy-version/platform.src.main.java.org.jmade.platform.lifecycle.ApplicationStartupListener.java", "BodyUseAPI": [], "Fixed commit": "f90059245526c7ce44a1cec2bd4147498333b888", "Url": "https://api.github.com/repos/alex-sobol/jmade", "Date": "2017-05-15T16:20:34Z"},
{"Line": "=>850", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((target.getAttachment(\"AI\")) != null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/622/buggy-version/src.services.combat.CombatService.java", "BodyUseAPI": [], "Fixed commit": "01ffdb3c422cb7a063364207764fabe5cd6df727", "Url": "https://api.github.com/repos/ProjectSWGCore/NGECore2", "Date": "2014-03-29T15:59:19Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((totalRecords) == null) || ((totalRecords) == 0)) { return \"N/A\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8534/buggy-version/easybatch-core.src.main.java.io.github.benas.easybatch.core.api.EasyBatchReport.java", "BodyUseAPI": [], "Fixed commit": "f002c5fbfb874e4fb6ab4f7a9325356b2a51ed1d", "Url": "https://api.github.com/repos/benas/easy-batch", "Date": "2014-02-16T21:12:04Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((message.getAction()) != null) && (message.getAction().equals(\"leave\"))) { lobbyPlayer.getLobby().getPlayers().remove(lobbyPlayer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2099/buggy-version/werewolf.src.main.java.com.werewolf.controllers.StompMessageController.java", "BodyUseAPI": [], "Fixed commit": "ef565c82cee3340e333920b8e29a368c99443de5", "Url": "https://api.github.com/repos/runi95/werewolf", "Date": "2017-04-17T18:47:18Z"},
{"Line": "=>614", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nextQuestionView instanceof org.eyeseetea.malariacare.views.question.multiquestion.DropdownMultiQuestionView) { ((org.eyeseetea.malariacare.views.question.multiquestion.DropdownMultiQuestionView) (nextQuestionView)).getSpinnerOptions().requestFocusFromTouch(); }else if (nextQuestionView instanceof org.eyeseetea.malariacare.views.question.IMultiQuestionView) { ((org.eyeseetea.malariacare.views.question.IMultiQuestionView) (nextQuestionView)).requestAnswerFocus(); }else { nextView.requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7002/buggy-version/app.src.main.java.org.eyeseetea.malariacare.layout.adapters.survey.DynamicTabAdapter.java", "BodyUseAPI": [], "Fixed commit": "237348dc9d23fb9636238a54295f39100bb3294b", "Url": "https://api.github.com/repos/EyeSeeTea/pictureapp", "Date": "2017-11-28T18:22:02Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((previousLat) != (lat)) && ((previousLng) != (lng))) { requestVenues(query, lat, lng); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2112/buggy-version/app.src.main.java.com.tkpraktikum.activity.MapDemoActivity.java", "BodyUseAPI": [], "Fixed commit": "f7c2f81ed281bdcf4e5e3914983ff30c6a419c81", "Url": "https://api.github.com/repos/Abdul-Razzak/Project", "Date": "2017-08-27T11:46:50Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.length()) > 1) { org.biojava.bio.structure.io.SeqRes2AtomAligner.logger.info(\"Group '{}' maps to more than 1 standard aminoacid: {}.\", g.toString(), c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9176/buggy-version/biojava3-structure.src.main.java.org.biojava.bio.structure.io.SeqRes2AtomAligner.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,g.toString(),java.lang.String)"], "Fixed commit": "3f385237280af8a467b08c34480b8872915846e6", "Url": "https://api.github.com/repos/josemduarte/biojava", "Date": "2015-01-16T15:47:00Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (files != null) { java.util.Arrays.sort(files); for (java.io.File f : files) { java.lang.String fName = f.getName(); if (fName.endsWith(\"txt\")) { filenames.add(fName.substring(0, ((fName.length()) - 4))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3766/buggy-version/app.src.main.java.com.example.jwerner.mmd.data.FileLayer.java", "BodyUseAPI": ["java.util.Arrays.sort(java.io.File[])"], "Fixed commit": "19591c66b192875c2d90b2b04c6dc5107def00cd", "Url": "https://api.github.com/repos/jonathanglasmeyer/leadsheets", "Date": "2015-02-22T18:17:19Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files != null) { for (java.io.File f : files) { java.lang.String fName = f.getName(); if (f.isDirectory()) { folders.add(fName); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3766/buggy-version/app.src.main.java.com.example.jwerner.mmd.data.FileLayer.java", "BodyUseAPI": [], "Fixed commit": "19591c66b192875c2d90b2b04c6dc5107def00cd", "Url": "https://api.github.com/repos/jonathanglasmeyer/leadsheets", "Date": "2015-02-22T18:17:19Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edu.wpi.first.wpilibj.templates.Team2945Robot.DEBUG) && (edu.wpi.first.wpilibj.templates.Team2945Robot.DEBUG_CHASSIS)) { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putNumber(\"madcatz raw axis 1\", OI.madcatz.getRawAxis(RobotMap.MADCATZ_AXIS_LEFT_JOYSTICK_X)); edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putNumber(\"madcatz raw axis 2\", OI.madcatz.getRawAxis(RobotMap.MADCATZ_AXIS_LEFT_JOYSTICK_Y)); edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putNumber(\"madcatz raw axis 3\", OI.madcatz.getRawAxis(3)); edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putNumber(\"madcatz raw axis 4\", OI.madcatz.getRawAxis(RobotMap.MADCATZ_AXIS_RIGHT_JOYSTICK_X)); edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putNumber(\"madcatz raw axis 5\", OI.madcatz.getRawAxis(RobotMap.MADCATZ_AXIS_RIGHT_JOYSTICK_Y)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6311/buggy-version/src.edu.wpi.first.wpilibj.templates.subsystems.Chassis.java", "BodyUseAPI": [], "Fixed commit": "aed5e60dacd55ed3bbf90d8c327334fdfb727377", "Url": "https://api.github.com/repos/manitourobotics/2013-robot", "Date": "2013-01-12T21:24:40Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((details.size()) > 1) { selected = selectedEntity.getSelectedItems().iterator().next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6974/buggy-version/manager-ui.src.main.java.org.geant.sat.ui.ScheduleSurveyAssessorsViewer.java", "BodyUseAPI": [], "Fixed commit": "0612b025fb7a8c6bec011e5b27c27b0a2ac2ac76", "Url": "https://api.github.com/repos/GEANT/SAT-SurveyManager", "Date": "2017-05-18T06:00:06Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tachyon.util.network.NetworkAddressUtils.WINDOWS)) { java.util.List<java.net.NetworkInterface> netIFs = java.util.Collections.list(networkInterfaces); java.util.Collections.reverse(netIFs); networkInterfaces = java.util.Collections.enumeration(netIFs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5699/buggy-version/common.src.main.java.tachyon.util.network.NetworkAddressUtils.java", "BodyUseAPI": [], "Fixed commit": "6177ce78f169dc7a8534ccb1069e8c96b9c4bbdc", "Url": "https://api.github.com/repos/Alluxio/alluxio", "Date": "2015-08-20T15:04:44Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.micronurse.util.GsonUtil.getGson().fromJson(mqttIntent.getStringExtra(MQTTService.BUNDLE_KEY_MESSAGE),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((rawSensorData.getSensorType()) != null) && (sensorType.equals(rawSensorData.getSensorType().toLowerCase()))) onSensorDataReceived(org.micronurse.util.SensorUtil.parseRawSensorData(rawSensorData));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4806/buggy-version/app.src.main.java.org.micronurse.ui.activity.MonitorDetailActivity.java", "BodyUseAPI": ["org.micronurse.util.SensorUtil.parseRawSensorData(org.micronurse.model.RawSensorData)", "org.micronurse.ui.activity.MonitorDetailActivity.SensorDataReceiver.onSensorDataReceived(org.micronurse.util.SensorUtil.parseRawSensorData(rawSensorData))"], "Fixed commit": "ce1288cb3d384e0d1798b00b50d5fb8a05577174", "Url": "https://api.github.com/repos/micronurse-iot/micronurse-android", "Date": "2017-05-07T17:10:48Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.Integer, org.powertac.tournament.services.Forecaster.Forecast>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (forecast == null) { return new java.util.ArrayList<java.lang.Integer>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8180/buggy-version/src.main.java.org.powertac.tournament.services.MemStore.java", "BodyUseAPI": [], "Fixed commit": "3caa9da175b906725d28074bd2fb47c06893703f", "Url": "https://api.github.com/repos/powertac/powertac-tournament-scheduler", "Date": "2015-01-13T14:33:15Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTie) { statusMsg = (\"Game Over! \" + (usernames[winner])) + \" won!\"; }else { statusMsg = \"Game Over! Game was a tie!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5178/buggy-version/src.ca.claytonrogers.Client.Application.java", "BodyUseAPI": [], "Fixed commit": "631f7dc3f5d2f9b341e4f32644b5340590906941", "Url": "https://api.github.com/repos/clayton-rogers/12Golf", "Date": "2015-08-14T01:16:27Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (json.getString(\"flag\").equals(\"1\")) { edit.putString(\"sub_user_id\", json.getString(\"sub_user_id\")); edit.putString(\"subuser_name\", json.getString(\"subuser_name\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8016/buggy-version/app.src.main.java.fourever.textile.mainclasses.Login.java", "BodyUseAPI": ["SharedPreferences.Editor.putString(java.lang.String,json.getString(\"sub_user_id\"))", "org.json.JSONObject.getString(java.lang.String)", "SharedPreferences.Editor.putString(java.lang.String,json.getString(\"subuser_name\"))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "95db78c1beb164489909bc0b34abebbb0b667576", "Url": "https://api.github.com/repos/akhil1298/Textile", "Date": "2016-04-08T07:03:29Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((index) + 1) < (str.length())) && ((str.charAt(((index) + 1))) == 'o')) { match(\"bool\"); return T_BOOL; }else { match(\"byte\"); return T_BYTE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7222/buggy-version/src.wyil.util.TypeParser.java", "BodyUseAPI": [], "Fixed commit": "d6abac317a48ae3cc5600034cb40b3d7909d3de5", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-09-09T04:00:37Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == null) type = com.sk89q.craftbook.util.EntityType.MOB_HOSTILE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1037/buggy-version/src.main.java.com.sk89q.craftbook.circuits.gates.world.entity.EntityCannon.java", "BodyUseAPI": [], "Fixed commit": "3ef2796eeb0fff273cfa139408544d61ccc0cf9b", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-07-26T06:58:33Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((gameStatus) == (cardgames.BlackJack.BET)) && ((currentTurn) == 0)) { gameStatus = cardgames.BlackJack.PLAYER_TURN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5588/buggy-version/SharedClasses.src.cardgames.BlackJack.java", "BodyUseAPI": [], "Fixed commit": "9366a2f06b873577bebd28de58143c8c8220f32c", "Url": "https://api.github.com/repos/rsphifer/Cardglomerate", "Date": "2014-12-11T18:44:30Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((sitePath.length()) > 0) && ((sitePath.charAt(((sitePath.length()) - 1))) == '/')) { sitePath = sitePath.substring(0, ((sitePath.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3853/buggy-version/eCampus-Dmaa0214.src.dk.dmaa0214.controllerLayer.FileScraper.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "c6567fbcbf6492cd14d4ab3533a53ac40b63dadc", "Url": "https://api.github.com/repos/CodingDK/eCampus-Dmaa0214", "Date": "2014-10-28T08:00:30Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.length()) < 2) { return false; }else if (((data.charAt(0)) == '\\'') && ((data.charAt(((data.length()) - 1))) == '\\'')) { return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6443/buggy-version/src.com.github.taffy128s.tlcdbms.DataChecker.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)"], "Fixed commit": "b2654c1657d4a26a4cc365d3a8d40c89d1eb7316", "Url": "https://api.github.com/repos/taffy128s/TLC_DBMS", "Date": "2017-03-08T16:01:05Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.M)) { intent.setDataAndType(android.net.Uri.parse((\"file://\" + (file.getAbsolutePath()))), \"image/*\"); }else { intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION); intent.setDataAndType(android.support.v4.content.FileProvider.getUriForFile(getApplicationContext(), \"tech.iosd.gemselections.fileprovider\", file), \"image/*\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8633/buggy-version/app.src.main.java.tech.iosd.gemselections.MainContent.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "85a71f1242dcb6cd0a971571b7573e7ae66403f6", "Url": "https://api.github.com/repos/IOSD/GemSelections", "Date": "2017-12-21T00:03:27Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(p.getName().equals(player.PlayerName))) { java.lang.System.out.println((((\"Renaming \" + (player.PlayerName)) + \" to \") + (p.getName()))); com.palmergames.bukkit.towny.object.TownyUniverse tu = com.palmergames.bukkit.towny.Towny.getPlugin(com.palmergames.bukkit.towny.Towny.class).getTownyUniverse(); com.palmergames.bukkit.towny.object.Resident resident = tu.getResidentMap().get(player.PlayerName); if (resident == null) java.lang.System.out.println(\"Resident not found - couldn't rename in Towny.\"); else if (tu.getResidentMap().contains(p.getName())) java.lang.System.out.println(\"Target resident name is already in use.\"); else resident.setName(p.getName()); player.PlayerName = p.getName(); java.lang.System.out.println(\"Renaming done.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3753/buggy-version/src.buttondevteam.bucket.core.TBMCPlayer.java", "BodyUseAPI": ["tu.getResidentMap().get(java.lang.String)", "com.palmergames.bukkit.towny.object.Resident.setName(p.getName())", "org.bukkit.OfflinePlayer.getName()", "tu.getResidentMap().contains(p.getName())", "org.bukkit.OfflinePlayer.getName()", "org.bukkit.OfflinePlayer.getName()", "java.io.PrintStream.println((((\"Renaming \" + (player.PlayerName)) + \" to \") + (p.getName())))", "org.bukkit.OfflinePlayer.getName()"], "Fixed commit": "5cf3ecc008c11e951d96f626541c7961637effaa", "Url": "https://api.github.com/repos/TBMCPlugins/ButtonCore", "Date": "2016-09-01T16:48:11Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(org.mef.twixt.binder.TwixtForm)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (valueObj == null) { play.Logger.info(java.lang.String.format(\"field %s is null -- did you forget to initialize it?\", field.getName())); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4350/buggy-version/code.app.org.mef.twixt.binder.FormCopier.java", "BodyUseAPI": [], "Fixed commit": "97d01c66611ce6274919c96986c7b17c188f4f3d", "Url": "https://api.github.com/repos/ianrae/twixt", "Date": "2015-06-20T02:56:02Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((requestContext.getSourceURL()) != null) { if (requestContext.getSourceURL().startsWith(\"file://\")) { this.registry = org.wso2.carbon.registry.extensions.utils.CommonUtil.getRootUserRegistry(); this.systemRegistry = org.wso2.carbon.registry.extensions.utils.CommonUtil.getRootSystemRegistry(); }else if ((requestContext.getSourceURL().startsWith(\"http://\")) || (requestContext.getSourceURL().startsWith(\"https://\"))) { this.registry = requestContext.getRegistry(); this.systemRegistry = org.wso2.carbon.registry.extensions.utils.CommonUtil.getUnchrootedSystemRegistry(requestContext); } }else { this.registry = requestContext.getRegistry(); this.systemRegistry = org.wso2.carbon.registry.extensions.utils.CommonUtil.getUnchrootedSystemRegistry(requestContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6228/buggy-version/components.registry.org.wso2.carbon.registry.extensions.src.main.java.org.wso2.carbon.registry.extensions.handlers.utils.WSDLProcessor.java", "BodyUseAPI": [], "Fixed commit": "cef59520d276e1b9745da41ceb8de37524a70d59", "Url": "https://api.github.com/repos/denuwanthi/carbon-registry", "Date": "2014-06-30T11:16:40Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.getSourceURL()) != null) { if (context.getSourceURL().startsWith(\"file://\")) { registry = getRootUserRegistry(); }else if ((context.getSourceURL().startsWith(\"http://\")) || (context.getSourceURL().startsWith(\"https://\"))) { registry = context.getRegistry(); } }else { registry = context.getRegistry(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6228/buggy-version/components.registry.org.wso2.carbon.registry.extensions.src.main.java.org.wso2.carbon.registry.extensions.utils.CommonUtil.java", "BodyUseAPI": ["org.wso2.carbon.registry.core.jdbc.handlers.RequestContext.getSourceURL()", "org.wso2.carbon.registry.core.jdbc.handlers.RequestContext.getSourceURL()", "org.wso2.carbon.registry.core.jdbc.handlers.RequestContext.getRegistry()", "org.wso2.carbon.registry.core.jdbc.handlers.RequestContext.getRegistry()", "context.getSourceURL().startsWith(java.lang.String)", "context.getSourceURL().startsWith(java.lang.String)", "org.wso2.carbon.registry.core.jdbc.handlers.RequestContext.getSourceURL()", "context.getSourceURL().startsWith(java.lang.String)"], "Fixed commit": "cef59520d276e1b9745da41ceb8de37524a70d59", "Url": "https://api.github.com/repos/denuwanthi/carbon-registry", "Date": "2014-06-30T11:16:40Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((requestContext.getSourceURL()) != null) { if (requestContext.getSourceURL().startsWith(\"file://\")) { this.registry = org.wso2.carbon.registry.extensions.utils.CommonUtil.getRootUserRegistry(); this.systemRegistry = org.wso2.carbon.registry.extensions.utils.CommonUtil.getRootSystemRegistry(); }else if ((requestContext.getSourceURL().startsWith(\"http://\")) || (requestContext.getSourceURL().startsWith(\"https://\"))) { this.registry = requestContext.getRegistry(); this.systemRegistry = org.wso2.carbon.registry.extensions.utils.CommonUtil.getUnchrootedSystemRegistry(requestContext); } }else { this.registry = requestContext.getRegistry(); this.systemRegistry = org.wso2.carbon.registry.extensions.utils.CommonUtil.getUnchrootedSystemRegistry(requestContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6228/buggy-version/components.registry.org.wso2.carbon.registry.extensions.src.main.java.org.wso2.carbon.registry.extensions.handlers.utils.SchemaProcessor.java", "BodyUseAPI": [], "Fixed commit": "cef59520d276e1b9745da41ceb8de37524a70d59", "Url": "https://api.github.com/repos/denuwanthi/carbon-registry", "Date": "2014-06-30T11:16:40Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(forDesireDetail())) { updateLocation(tmp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/113/buggy-version/app.src.main.java.wanthavers.mad.cs.fau.de.wanthavers_android.maps.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "95589e676fe42712ab4147d1d7beddb63d68a82a", "Url": "https://api.github.com/repos/FAU-Inf2/wanthavers-android", "Date": "2016-06-28T21:36:16Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(forDesireDetail())) { updateLocation(latLng); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/113/buggy-version/app.src.main.java.wanthavers.mad.cs.fau.de.wanthavers_android.maps.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "95589e676fe42712ab4147d1d7beddb63d68a82a", "Url": "https://api.github.com/repos/FAU-Inf2/wanthavers-android", "Date": "2016-06-28T21:36:16Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (forDesireDetail()) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/113/buggy-version/app.src.main.java.wanthavers.mad.cs.fau.de.wanthavers_android.maps.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "95589e676fe42712ab4147d1d7beddb63d68a82a", "Url": "https://api.github.com/repos/FAU-Inf2/wanthavers-android", "Date": "2016-06-28T21:36:16Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(forDesireDetail())) && (!(forFilterSettings()))) { java.lang.String title = getIntent().getExtras().getString(\"desireTitle\"); java.lang.String description = getIntent().getExtras().getString(\"desireDescription\"); java.lang.String price = getIntent().getExtras().getString(\"desirePrice\"); java.lang.String currency = getIntent().getExtras().getString(\"desireCurrency\"); android.net.Uri image = getIntent().getExtras().getParcelable(\"desireImage\"); de.fau.cs.mad.wanthavers.common.Category cat = ((de.fau.cs.mad.wanthavers.common.Category) (getIntent().getSerializableExtra(\"desireCategory\"))); android.content.Intent intent = new android.content.Intent(this, wanthavers.mad.cs.fau.de.wanthavers_android.desirecreate.DesireCreateActivity3rdStep.class); intent.putExtra(\"desireTitle\", title); intent.putExtra(\"desireDescription\", description); intent.putExtra(\"desirePrice\", price); intent.putExtra(\"desireCurrency\", currency); intent.putExtra(\"desireImage\", image); intent.putExtra(\"desireLocation\", location); intent.putExtra(\"desireLocationLat\", java.lang.Double.toString(lat)); intent.putExtra(\"desireLocationLng\", java.lang.Double.toString(lng)); intent.putExtra(\"desireCategory\", cat); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/113/buggy-version/app.src.main.java.wanthavers.mad.cs.fau.de.wanthavers_android.maps.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "95589e676fe42712ab4147d1d7beddb63d68a82a", "Url": "https://api.github.com/repos/FAU-Inf2/wanthavers-android", "Date": "2016-06-28T21:36:16Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entry.getKey().equalsIgnoreCase(HttpHeaders.CONTENT_LENGTH))) { responseEx.addHeader(entry.getKey(), java.lang.String.valueOf(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8750/buggy-version/common.common-rest.src.main.java.io.servicecomb.common.rest.AbstractRestInvocation.java", "BodyUseAPI": ["io.servicecomb.foundation.vertx.http.HttpServletResponseEx.addHeader(java.lang.String,java.lang.String)", "java.util.Map.Entry<java.lang.String, java.util.List<java.lang.Object>>.getKey()"], "Fixed commit": "213e7b0eb7735224e8721b38fff910f763b23b29", "Url": "https://api.github.com/repos/apache/incubator-servicecomb-java-chassis", "Date": "2017-11-06T12:20:15Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o instanceof org.jtrfp.trcl.coll.ListActionTelemetry) o = ((org.jtrfp.trcl.coll.ListActionTelemetry) (o)).getDelegate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2813/buggy-version/src.main.java.org.jtrfp.trcl.coll.ListActionTelemetry.java", "BodyUseAPI": [], "Fixed commit": "d253dfe1e0849b5e692beed77771643428fea51f", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2015-05-10T21:12:21Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o instanceof org.jtrfp.trcl.coll.CollectionActionDispatcher) o = ((org.jtrfp.trcl.coll.CollectionActionDispatcher) (o)).cache;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2813/buggy-version/src.main.java.org.jtrfp.trcl.coll.CollectionActionDispatcher.java", "BodyUseAPI": [], "Fixed commit": "d253dfe1e0849b5e692beed77771643428fea51f", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2015-05-10T21:12:21Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toolInv) != null) toolInv.syncItemToList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6384/buggy-version/src.main.java.blusunrize.immersiveengineering.common.gui.ContainerModWorkbench.java", "BodyUseAPI": [], "Fixed commit": "c0c5b06eac66af6e6859115f6eca39c4f4f4fadc", "Url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering", "Date": "2017-08-26T14:51:24Z"},
{"Line": "=>572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lexer.token) == (com.alibaba.fastjson.parser.JSONToken.COLON)) { throw new com.alibaba.fastjson.JSONException(\"syntax error, unexpect token ':'\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7661/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.java", "BodyUseAPI": [], "Fixed commit": "e966595e906f66b623b65caf1dca1aab0bfe6634", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-08-28T04:37:56Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deleteProducer) { rwLock.writeLock().lock(); try { if (((counter.get()) == 0) && (null != (useCount.remove(producer)))) { org.zalando.nakadi.repository.kafka.KafkaFactory.LOG.info(((\"Stopping producer instance - It was reported that instance should be refreshed \" + \"and it is not used anymore: \") + producer)); producer.close(); } } finally { rwLock.writeLock().unlock(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4487/buggy-version/src.main.java.org.zalando.nakadi.repository.kafka.KafkaFactory.java", "BodyUseAPI": [], "Fixed commit": "590ae803cc44da870dbcb432c283718964b4ada2", "Url": "https://api.github.com/repos/zalando/nakadi", "Date": "2016-09-29T12:10:13Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.server.issue.DefaultIssueFinder.find(org.sonar.api.issue.IssueQuery)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((result.issues().size()) != 1) { throw new java.lang.IllegalStateException((\"Issue not found: \" + issueKey)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4139/buggy-version/sonar-server.src.main.java.org.sonar.server.issue.IssueService.java", "BodyUseAPI": [], "Fixed commit": "f279ef14ceb725c98e1e070515fd31bb81d3ba9e", "Url": "https://api.github.com/repos/SonarSource/sonar", "Date": "2013-06-02T22:33:31Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adminService.getNumPendingCompleteTransactions()) > 0) { throw new java.lang.IllegalStateException(\"There are still pending complete transactions\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5640/buggy-version/agent-parent.it-harness.src.main.java.org.glowroot.agent.it.harness.impl.JavaagentContainer.java", "BodyUseAPI": [], "Fixed commit": "c4665d94591a10bd2e4aa6b3c842778f461e8fbe", "Url": "https://api.github.com/repos/trask/glowroot", "Date": "2015-10-11T19:51:56Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adminService.getNumPendingCompleteTransactions()) > 0) { throw new java.lang.IllegalStateException(\"There are still pending complete transactions\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5640/buggy-version/agent-parent.it-harness.src.main.java.org.glowroot.agent.it.harness.impl.LocalContainer.java", "BodyUseAPI": [], "Fixed commit": "c4665d94591a10bd2e4aa6b3c842778f461e8fbe", "Url": "https://api.github.com/repos/trask/glowroot", "Date": "2015-10-11T19:51:56Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curTag) != null) { buffer.append(ch, start, length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8827/buggy-version/href-crawler.src.main.java.cn.seddat.href.crawler.spider.ShuimuSpider.java", "BodyUseAPI": [], "Fixed commit": "0a9161baab2b890c6973f2982811dd159587de05", "Url": "https://api.github.com/repos/gengmzh/href", "Date": "2013-02-18T03:54:24Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URI.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(newPath.endsWith(\"/\"))) return newPath + \"/\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7271/buggy-version/core.src.main.java.com.predic8.membrane.core.interceptor.server.WebServerInterceptor.java", "BodyUseAPI": [], "Fixed commit": "8b8e9e2da10f627dc158ed5bc9e55365ab88e213", "Url": "https://api.github.com/repos/membrane/service-proxy", "Date": "2016-07-04T10:38:58Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isGameOver) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3703/buggy-version/app.src.main.java.edu.msu.perrym23.project2.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "f3363af6ac418db5bce064ad91d540d475217b4c", "Url": "https://api.github.com/repos/royspartyman/project2-steampunked-game", "Date": "2016-12-05T22:22:00Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (from.equals(to)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5718/buggy-version/DailyCookApp.src.main.java.com.vn.dailycookapp.notification.NotificationActionImp.java", "BodyUseAPI": [], "Fixed commit": "e0c769baf2b25c5a886ee65d5cf3e1b95677f50e", "Url": "https://api.github.com/repos/duyetpt/dailycook_restructe", "Date": "2015-11-25T16:06:34Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bmp) != null) bmp = android.graphics.BitmapFactory.decodeStream(urlimage.openConnection().getInputStream());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7379/buggy-version/app.src.main.java.org.fossasia.susi.ai.adapters.recycleradapters.ChatFeedRecyclerAdapter.java", "BodyUseAPI": [], "Fixed commit": "d068a1f374623b872fea3151dad17284fa7f4e9d", "Url": "https://api.github.com/repos/anantprsd5/susi_android", "Date": "2016-12-14T06:48:12Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == ((Tuning.MAP_HEIGHT) / 2)) && (bridges < 1)) { convertCoords(x, y).setType(Tile.WOOD); bridges++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3946/buggy-version/src.gamelogic.SneakGame.java", "BodyUseAPI": [], "Fixed commit": "84a4902929f7d4e2a46869c802b037bff5ebc126", "Url": "https://api.github.com/repos/TheRealGangsir/SneakGame", "Date": "2017-05-11T19:22:05Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.SplashScreen.getSplashScreen()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (splashScreen != null) splashScreen.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2687/buggy-version/src.main.java.alexiil.mods.load.MinecraftDisplayer.java", "BodyUseAPI": ["java.awt.SplashScreen.close()"], "Fixed commit": "c4d76545043dd10648d24798802d1054ae02871b", "Url": "https://api.github.com/repos/AlexIIL/CustomLoadingScreen", "Date": "2015-07-15T13:54:20Z"},
{"Line": "=>712", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["search.system.peer.search.Search.getHigherTmanPartners()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((higherPeers.size()) > 1) { java.util.Random rand = new java.util.Random(); return higherPeers.get(rand.nextInt(((higherPeers.size()) - 1))); }else { return higherPeers.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/849/buggy-version/search.src.main.java.search.system.peer.search.Search.java", "BodyUseAPI": ["java.util.List<common.peer.PeerAddress>.get(int)", "java.util.Random.nextInt(((higherPeers.size()) - 1))", "java.util.List<common.peer.PeerAddress>.get(int)", "java.util.List<common.peer.PeerAddress>.size()"], "Fixed commit": "c30f593221c6fead1719f00c659359b44078312f", "Url": "https://api.github.com/repos/atamborrino/id2210-vt13", "Date": "2013-05-02T09:10:06Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (d == (-180.0)) return -180.0; else { double sign = java.lang.Math.signum(d); double x = (java.lang.Math.abs(d)) / 360; double x2 = (x - (java.lang.Math.floor(x))) * 360; if (x2 >= 180) x2 -= 360; return x2 * sign; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3966/buggy-version/src.main.java.com.github.davidmoten.rtree.geometry.Geometries.java", "BodyUseAPI": ["java.lang.Math.signum(double)", "java.lang.Math.abs(double)"], "Fixed commit": "adc99ad31b7a1b4debe74e84121c054c733cc829", "Url": "https://api.github.com/repos/davidmoten/rtree", "Date": "2015-09-22T08:41:03Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tokens.length) < 7) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3741/buggy-version/src.main.java.org.webjars.servlet.WebjarsServlet.java", "BodyUseAPI": [], "Fixed commit": "eeb5d6c78b8cf0def53af1e813e478705beb388d", "Url": "https://api.github.com/repos/chengchaos/webjars-servlet-2.x", "Date": "2015-11-27T02:30:14Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.webjars.servlet.WebjarsServlet.getETagName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (eTagName.equals(\"\")) { response.sendError(HttpServletResponse.SC_NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3741/buggy-version/src.main.java.org.webjars.servlet.WebjarsServlet.java", "BodyUseAPI": [], "Fixed commit": "eeb5d6c78b8cf0def53af1e813e478705beb388d", "Url": "https://api.github.com/repos/chengchaos/webjars-servlet-2.x", "Date": "2015-11-27T02:30:14Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.getResponseCode()) == 200) { this.allTimeTotal += this.cart.getPriceTotal(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1214/buggy-version/src.Main.Client.java", "BodyUseAPI": [], "Fixed commit": "38c7664c0bbe5b170da823397473b1a1c2cb4166", "Url": "https://api.github.com/repos/danog/WarehouseLibrary", "Date": "2017-11-06T12:03:42Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currDir.length()) == 0) { currDir = CONSTANTS.DIRMARKER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2241/buggy-version/jsh.JShellSystem.java", "BodyUseAPI": [], "Fixed commit": "1adc6ef3983b0fbd5a60bd854f0aa4f97ff97e21", "Url": "https://api.github.com/repos/elc1798/jShell", "Date": "2014-12-22T02:29:29Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (block != null) for (java.lang.Object o : block.statements()) this._statements.add(new edu.rice.cs.caper.bayou.application.dom_driver.DOMStatement(((org.eclipse.jdt.core.dom.Statement) (o))).handleAML());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/9216/buggy-version/src.main.java.edu.rice.cs.caper.bayou.application.dom_driver.DOMBlock.java", "BodyUseAPI": [], "Fixed commit": "17f1f64593c8ab0b07521c44e939903793f82eab", "Url": "https://api.github.com/repos/capergroup/bayou", "Date": "2017-10-17T22:59:45Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFeedItems.size()) == 0) { ViewFiles.emptyStatusTextView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3674/buggy-version/app.src.main.java.swati4star.createpdf.FilesAdapter.java", "BodyUseAPI": [], "Fixed commit": "0074628e3c88be86fd4e807ff55fe50f673a1046", "Url": "https://api.github.com/repos/flxwu/Images-to-PDF", "Date": "2017-10-20T14:00:45Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((replyAddress) != null) { sendReply(bus.createMessage(true, replyAddress, options.getHeaders(), message, options.getCodecName()), options, replyHandler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2586/buggy-version/src.main.java.io.vertx.core.eventbus.impl.MessageImpl.java", "BodyUseAPI": [], "Fixed commit": "a11699af1b044c1ee41e62b1509738ef322955f6", "Url": "https://api.github.com/repos/vietj/vert.x", "Date": "2014-11-19T12:30:04Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((replyAddress) != null) { sendReply(bus.createMessage(true, replyAddress, null, new io.vertx.core.eventbus.ReplyException(io.vertx.core.eventbus.ReplyFailure.RECIPIENT_FAILURE, failureCode, message), null), null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2586/buggy-version/src.main.java.io.vertx.core.eventbus.impl.MessageImpl.java", "BodyUseAPI": [], "Fixed commit": "a11699af1b044c1ee41e62b1509738ef322955f6", "Url": "https://api.github.com/repos/vietj/vert.x", "Date": "2014-11-19T12:30:04Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Boolean) (isPrimaryContact)) != null) { jsonObject.put(\"is_primary_contact\", isPrimaryContact); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2293/buggy-version/source.com.zoho.books.model.ContactPerson.java", "BodyUseAPI": [], "Fixed commit": "78f6eb9f4a5ed716152c9b1f3af508dd88bba020", "Url": "https://api.github.com/repos/zoho/books-java-wrappers", "Date": "2015-10-26T05:40:46Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (context == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7283/buggy-version/src.main.java.org.mamute.dto.KarmaByContextHistory.java", "BodyUseAPI": [], "Fixed commit": "01ce5401b59cb30cc935f023752377eee468f5f6", "Url": "https://api.github.com/repos/shomabegoo/shomabegoo", "Date": "2016-01-08T08:32:16Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fList != null) { for (java.io.File file : fList) { if (file.isDirectory()) mFolderList.put(file.getPath(), file.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2752/buggy-version/src.sage.pref.FolderPref.java", "BodyUseAPI": [], "Fixed commit": "73af2cd7f39529f860f830f023817d323d371871", "Url": "https://api.github.com/repos/sketchpunk/opencomicreader", "Date": "2012-09-24T22:13:08Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getIntent()) != null) { android.util.Log.d(com.step2hell.samples.firebasecloudmessaging.MainActivity.TAG, \"intent is not null!\"); if ((getIntent().getExtras()) != null) { android.util.Log.d(com.step2hell.samples.firebasecloudmessaging.MainActivity.TAG, (\"bundle is not null!\" + (getIntent().getExtras().toString()))); if ((getIntent().getExtras().get(com.step2hell.samples.firebasecloudmessaging.MainActivity.KEY)) != null) { android.util.Log.d(com.step2hell.samples.firebasecloudmessaging.MainActivity.TAG, (\"image is not null!\" + (getIntent().getExtras().get(com.step2hell.samples.firebasecloudmessaging.MainActivity.KEY)))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2469/buggy-version/FirebaseCloudMessaging.src.main.java.com.step2hell.samples.firebasecloudmessaging.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d55bf52f9145108a7be78cba678a54fdc06767b5", "Url": "https://api.github.com/repos/1step2hell/samples", "Date": "2017-11-30T00:59:32Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(editText.getText().toString().equals(\"\"))) { TeamPointsCounter.coef3 = java.lang.Integer.parseInt(editText.getText().toString()); }else { editText.setText(java.lang.String.valueOf(TeamPointsCounter.coef3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3031/buggy-version/app.src.main.java.pointscalculator.ttr_pc.SettingsActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(editText.getText().toString())", "android.widget.EditText.setText(java.lang.String)", "android.widget.EditText.getText()", "editText.getText().toString()"], "Fixed commit": "972c25ba47d466531361cd00d9703e707df5ab2e", "Url": "https://api.github.com/repos/stasyasin/TTC_PC", "Date": "2016-09-18T11:02:23Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(editText.getText().toString().equals(\"\"))) { TeamPointsCounter.coef6 = java.lang.Integer.parseInt(editText.getText().toString()); }else { editText.setText(java.lang.String.valueOf(TeamPointsCounter.coef6)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3031/buggy-version/app.src.main.java.pointscalculator.ttr_pc.SettingsActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "java.lang.Integer.parseInt(editText.getText().toString())", "editText.getText().toString()", "android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "972c25ba47d466531361cd00d9703e707df5ab2e", "Url": "https://api.github.com/repos/stasyasin/TTC_PC", "Date": "2016-09-18T11:02:23Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(editText.getText().toString().equals(\"\"))) { TeamPointsCounter.coef5 = java.lang.Integer.parseInt(editText.getText().toString()); }else { editText.setText(java.lang.String.valueOf(TeamPointsCounter.coef5)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3031/buggy-version/app.src.main.java.pointscalculator.ttr_pc.SettingsActivity.java", "BodyUseAPI": ["editText.getText().toString()", "java.lang.Integer.parseInt(editText.getText().toString())", "android.widget.EditText.getText()", "android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "972c25ba47d466531361cd00d9703e707df5ab2e", "Url": "https://api.github.com/repos/stasyasin/TTC_PC", "Date": "2016-09-18T11:02:23Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(editText.getText().toString().equals(\"\"))) { TeamPointsCounter.coef4 = java.lang.Integer.parseInt(editText.getText().toString()); }else { editText.setText(java.lang.String.valueOf(TeamPointsCounter.coef4)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3031/buggy-version/app.src.main.java.pointscalculator.ttr_pc.SettingsActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)", "java.lang.Integer.parseInt(editText.getText().toString())", "android.widget.EditText.getText()", "editText.getText().toString()"], "Fixed commit": "972c25ba47d466531361cd00d9703e707df5ab2e", "Url": "https://api.github.com/repos/stasyasin/TTC_PC", "Date": "2016-09-18T11:02:23Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(editText.getText().toString().equals(\"\"))) { TeamPointsCounter.coef2 = java.lang.Integer.parseInt(editText.getText().toString()); }else { editText.setText(java.lang.String.valueOf(TeamPointsCounter.coef2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3031/buggy-version/app.src.main.java.pointscalculator.ttr_pc.SettingsActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(editText.getText().toString())", "android.widget.EditText.getText()", "editText.getText().toString()", "android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "972c25ba47d466531361cd00d9703e707df5ab2e", "Url": "https://api.github.com/repos/stasyasin/TTC_PC", "Date": "2016-09-18T11:02:23Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(editText.getText().toString().equals(\"\"))) { TeamPointsCounter.coef1 = java.lang.Integer.parseInt(editText.getText().toString()); }else { editText.setText(java.lang.String.valueOf(TeamPointsCounter.coef1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3031/buggy-version/app.src.main.java.pointscalculator.ttr_pc.SettingsActivity.java", "BodyUseAPI": ["editText.getText().toString()", "java.lang.Integer.parseInt(editText.getText().toString())", "android.widget.EditText.setText(java.lang.String)", "android.widget.EditText.getText()"], "Fixed commit": "972c25ba47d466531361cd00d9703e707df5ab2e", "Url": "https://api.github.com/repos/stasyasin/TTC_PC", "Date": "2016-09-18T11:02:23Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.RadioGroup.getCheckedRadioButtonId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (checked != (-1)) { radioGroupBuild.check((-1)); radioGroupBuild.check(checked); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4456/buggy-version/CadeBuildOrders.src.com.yarakyo.cadebuildorders.RaceMenu.java", "BodyUseAPI": ["android.widget.RadioGroup.check(int)"], "Fixed commit": "f0404234e42803d8813fe3000f5c16f5bcd64e2a", "Url": "https://api.github.com/repos/yarakyo/CadeBuildOrders", "Date": "2013-01-24T21:57:11Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.mkdirs()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!success) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5153/buggy-version/app.src.main.java.com.dualcnhq.opencv.training.TrainingImageActivity.java", "BodyUseAPI": [], "Fixed commit": "6b9391fe6f5aea39385ee7c0c518b12f1223bffc", "Url": "https://api.github.com/repos/wkwan/facething", "Date": "2016-01-24T03:05:31Z"},
{"Line": "=>550", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dlg.codeLinesField.getText()) != null) { try { codeLines = java.lang.Integer.parseInt(dlg.codeLinesField.getText()); } catch (java.lang.NumberFormatException ex) { codeLines = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/834/buggy-version/src.net.sf.memoranda.ui.TaskPanel.java", "BodyUseAPI": ["dlg.codeLinesField.getText()", "java.lang.Integer.parseInt(dlg.codeLinesField.getText())"], "Fixed commit": "d8178e2b52c589ba528729989d2c19372ef20118", "Url": "https://api.github.com/repos/cst316/spring16project-Team-Juneau", "Date": "2016-02-24T21:25:00Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRunning()) pause();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6978/buggy-version/src.SimulationClock.java", "BodyUseAPI": [], "Fixed commit": "e0d15e8bdbda2430b26e64b755cbfe12e875a95c", "Url": "https://api.github.com/repos/RobertWarrenGilmore/CAndDProject1", "Date": "2014-10-27T17:30:34Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ic2.api.info.IC2Classic.getLoadedIC2Type()) == (IC2Classic.IC2Type.SpeigersClassic)) { return ic2.api.item.IC2Items.getItem(\"copperCableBlock\").getItem().getIcon(new net.minecraft.item.ItemStack(ic2.api.item.IC2Items.getItem(\"copperCableBlock\").getItem(), type), 1).getIconName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4127/buggy-version/src.main.java.techreborn.partSystem.parts.CablePart.java", "BodyUseAPI": [], "Fixed commit": "fd4f52e27e9d8db5e479498fbb85f196fa27ae53", "Url": "https://api.github.com/repos/TechReborn/TechReborn", "Date": "2015-10-03T18:21:28Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ic2.api.info.IC2Classic.getLoadedIC2Type()) == (IC2Classic.IC2Type.SpeigersClassic)) { return net.minecraft.block.Block.getBlockFromItem(ic2.api.item.IC2Items.getItem(\"copperCableBlock\").getItem()).getIcon(0, (cableType * 16)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4127/buggy-version/src.main.java.techreborn.client.render.RenderCablePart.java", "BodyUseAPI": [], "Fixed commit": "fd4f52e27e9d8db5e479498fbb85f196fa27ae53", "Url": "https://api.github.com/repos/TechReborn/TechReborn", "Date": "2015-10-03T18:21:28Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ComponentType.IDENTIFIER.equals(schema.getComponentType())) { currentId = (lineParts[0]) + (lineParts[1]); currentEffectiveTimeInt = java.lang.Integer.parseInt(lineParts[2]); }else { currentId = lineParts[0]; currentEffectiveTimeInt = java.lang.Integer.parseInt(lineParts[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2162/buggy-version/data-service.src.main.java.org.ihtsdo.buildcloud.service.build.database.Rf2FileWriter.java", "BodyUseAPI": [], "Fixed commit": "817a3ed1bb292aa82c9970128db338b6f50d8774", "Url": "https://api.github.com/repos/IHTSDO/snomed-release-service", "Date": "2016-09-20T10:57:47Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (folderId == null) { codeMessage.setting(0, \"\u5206\u7c7bId\u65e0\u6548\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2499/buggy-version/src.main.java.cn.jienhui.next.service.ItemServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "8c2f25a1350de8e72b770d2a15f6de8d7992e8cf", "Url": "https://api.github.com/repos/EnObj/next", "Date": "2016-09-25T10:31:36Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.jienhui.next.service.UserService.selectUserBySession(javax.servlet.http.HttpServletRequest,cn.jienhui.next.utils.CodeMessage)", "cn.jienhui.next.service.FolderService.selectFolderById(java.lang.Integer,javax.servlet.http.HttpServletRequest,cn.jienhui.next.utils.CodeMessage)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((folder == null) || ((folder.getUserId().intValue()) != (user.getUserId().intValue()))) { codeMessage.setting(0, \"\u5206\u7c7b\u67e5\u8be2\u5931\u8d25\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2499/buggy-version/src.main.java.cn.jienhui.next.service.ItemServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "8c2f25a1350de8e72b770d2a15f6de8d7992e8cf", "Url": "https://api.github.com/repos/EnObj/next", "Date": "2016-09-25T10:31:36Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tsrList != null) { model.Timesheet t = tManager.find(id); if (t == null) { return tsrList; } for (model.Tsrow tr : tsrList) { if (((tr.getTsrWkEnd()) != null) && (!(tr.getTsrWkEnd().equals(t.getId().getTsWkEnd())))) { getRowsFromDb = true; } } if (!getRowsFromDb) { return tsrList; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2563/buggy-version/src.main.java.controller.EmployeeController.java", "BodyUseAPI": [], "Fixed commit": "83e92f7e22c3e8393c0d10e93b909012713183fc", "Url": "https://api.github.com/repos/purebone00/Timely", "Date": "2017-04-10T02:16:23Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.angelsl.bukkit.jxpl.ScriptPlugin.getDefaultConfig()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (defaults != null) { config.setDefaults(defaults); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2674/buggy-version/src.org.angelsl.bukkit.jxpl.ScriptPlugin.java", "BodyUseAPI": ["org.bukkit.configuration.file.FileConfiguration.setDefaults(org.bukkit.configuration.file.YamlConfiguration)"], "Fixed commit": "1427c3af3e29a4b27ebfcd806af2ad41d15d8918", "Url": "https://api.github.com/repos/angelsl/jxpl", "Date": "2011-11-05T10:00:06Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ni) != null) { java.util.List<com.faren.gw2.gw2applicaton.DataImageToDl> imageToDls = new java.util.ArrayList<>(); imageToDls.add(new com.faren.gw2.gw2applicaton.DataImageToDl(new com.faren.gw2.gw2applicaton.ImageResource(currentListData.name, currentListData.iconUrl, path, 50, 50), name, 0)); new com.faren.gw2.gw2applicaton.DownloadImage(this, imageToDls, 0).execute(); }else { mViewHolder.itemIcon.setImageBitmap(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6657/buggy-version/app.src.main.java.com.faren.gw2.gw2applicaton.ItemCollection.java", "BodyUseAPI": [], "Fixed commit": "b0223dc5f883add0a88b5db40afd6e22eeaf9a54", "Url": "https://api.github.com/repos/F4r3n/GW2Application", "Date": "2016-02-03T21:30:07Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((i == firstSeparatorIndex) || (i == secondSeparatorIndex)) { continue; }else { portBytes[((i - secondSeparatorIndex) - 1)] = data[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5496/buggy-version/src.main.java.com.uzh.csg.overlaynetworks.p2p.PeerInfo.java", "BodyUseAPI": [], "Fixed commit": "4d2105d8465c41d10c6c70b10a478354bcfc8ba1", "Url": "https://api.github.com/repos/Overlay-Networks/challenge-task", "Date": "2017-05-30T11:09:14Z"},
{"Line": "=>1836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWellSampleDataSelection(selected)) { return; }else if (selected instanceof omero.gateway.model.DataObject) { org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor visitor = new org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor(parent, ((omero.gateway.model.DataObject) (selected))); accept(visitor); foundNode = visitor.getSelectedNode(); if (foundNode != null) { if (multiSelection) model.addFoundNode(foundNode); else model.setSelectedDisplay(foundNode, true); view.setFoundNode(model.getSelectedDisplays()); }else view.setFoundNode(null); }else if (selected instanceof org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay) { foundNode = ((org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay) (selected)); if (multiSelection) model.addFoundNode(foundNode); else model.setSelectedDisplay(foundNode, true); view.setFoundNode(model.getSelectedDisplays()); }else if (selected instanceof java.util.List) { org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor visitor = new org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor(parent, ((java.util.List<omero.gateway.model.DataObject>) (selected))); accept(visitor); java.util.List<org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay> nodes = visitor.getSelectedNodes(); if ((nodes.size()) == 0) { view.setFoundNode(null); }else if ((nodes.size()) == 1) { model.setSelectedDisplay(nodes.get(0), true); view.setFoundNode(model.getSelectedDisplays()); }else { model.setSelectedDisplay(null, true); java.util.Iterator<org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay> i = nodes.iterator(); while (i.hasNext()) model.addFoundNode(i.next()); view.setFoundNode(model.getSelectedDisplays()); } }else if (selected instanceof java.lang.String) { model.setSelectedDisplay(null, true); view.setFoundNode(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1501/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.agents.treeviewer.browser.BrowserComponent.java", "BodyUseAPI": [], "Fixed commit": "4487f3dcdbe6d7a40a28c2ec15123ec965660077", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2016-05-20T03:06:25Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (damager instanceof org.bukkit.entity.Projectile) { source = ((org.bukkit.entity.Projectile) (damager)).getShooter(); if (source instanceof org.bukkit.entity.Entity) { damager = ((org.bukkit.entity.Entity) (source)); }else { return; } projectile = true; }else { projectile = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4930/buggy-version/src.main.java.com.bendude56.goldenapple.area.AreaListener.java", "BodyUseAPI": [], "Fixed commit": "7a1a1d343b4ccb4e51f5255687376d0de034c913", "Url": "https://api.github.com/repos/bendude56/GoldenApple", "Date": "2014-07-17T03:57:24Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shown) { shown = false; setVisibility(View.GONE); plane.waiting.push(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5944/buggy-version/src.com.stuin.cleanvisuals.Drift.Object.java", "BodyUseAPI": [], "Fixed commit": "70b62b8a6aa9671d073d1cc8fb60d4a2c9ec57de", "Url": "https://api.github.com/repos/stuin/CleanVisuals", "Date": "2017-09-19T16:21:49Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jme3utilities.MyAnimation.findKeyframeIndex(com.jme3.animation.BoneTrack,float)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (frameIndex == (-1)) { newTrack = jme3utilities.MyAnimation.insertKeyframe(boneTrack, currentTime, user); }else { newTrack = maud.Util.replaceKeyframe(boneTrack, frameIndex, user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1314/buggy-version/src.main.java.maud.model.LoadedAnimation.java", "BodyUseAPI": ["maud.Util.replaceKeyframe(com.jme3.animation.BoneTrack,int,com.jme3.math.Transform)"], "Fixed commit": "ecb27390f90cdb5e24f7bc45a68583209c6649eb", "Url": "https://api.github.com/repos/stephengold/Maud", "Date": "2017-08-30T23:51:36Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (denom3 < 0) { num3 = -num3; denom3 = -denom3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4292/buggy-version/src.liberty.FracCalc.java", "BodyUseAPI": [], "Fixed commit": "7daafae7b6b3359d7f8c36bc50b9e0fa3401d535", "Url": "https://api.github.com/repos/endreman0/SimpleCalc", "Date": "2015-12-02T00:52:51Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (num3 < 0) finalWhole = -finalWhole;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4292/buggy-version/src.liberty.FracCalc.java", "BodyUseAPI": [], "Fixed commit": "7daafae7b6b3359d7f8c36bc50b9e0fa3401d535", "Url": "https://api.github.com/repos/endreman0/SimpleCalc", "Date": "2015-12-02T00:52:51Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sourcePath == null) { throw new java.lang.IllegalArgumentException(\"Please provide a sourceFilePath\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5796/buggy-version/src.main.java.com.duckma.duckzip.DuckZip.java", "BodyUseAPI": [], "Fixed commit": "72f3fc9d00c1f44059ea83dbc30e2358daf8f482", "Url": "https://api.github.com/repos/duckma/duckzip", "Date": "2016-11-23T16:31:07Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sourcePath == null) { throw new java.lang.IllegalArgumentException(\"Please provide a destinationFilePath\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5796/buggy-version/src.main.java.com.duckma.duckzip.DuckZip.java", "BodyUseAPI": [], "Fixed commit": "72f3fc9d00c1f44059ea83dbc30e2358daf8f482", "Url": "https://api.github.com/repos/duckma/duckzip", "Date": "2016-11-23T16:31:07Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(dbFolder.exists())) { dbFolder.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1144/buggy-version/src.main.java.install.FormplayerConfigEngine.java", "BodyUseAPI": [], "Fixed commit": "576a80da0a60018675b6949d240b4981ba011428", "Url": "https://api.github.com/repos/dimagi/formplayer", "Date": "2016-04-21T17:11:29Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6282/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "d57c096100642df649067b2ff28650297820dc99", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.marichely.repository.CategoryRepository.findOne(joke.getCategory())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (jokeCategory == null) { model.addAttribute(\"message\", \"You need to select a category\"); return \"newSuccess\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6576/buggy-version/src.main.java.me.marichely.controller.ViewNewController.java", "BodyUseAPI": [], "Fixed commit": "67f7c54c8369922055cefde61a84f27c9a459ce5", "Url": "https://api.github.com/repos/smaricev/jokes", "Date": "2017-09-18T02:03:18Z"},
{"Line": "=>767", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mode) == (edu.harvard.iq.dataverse.EditDatafilesPage.FileEditMode.UPLOAD)) { if ((dataset.getId()) != null) { dataset = datasetService.find(dataset.getId()); ingestService.startIngestJobs(dataset, ((edu.harvard.iq.dataverse.authorization.users.AuthenticatedUser) (session.getUser()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5590/buggy-version/src.main.java.edu.harvard.iq.dataverse.EditDatafilesPage.java", "BodyUseAPI": [], "Fixed commit": "fdb17dbc3d1d3f32f96c5c6d00aed2c207f912c1", "Url": "https://api.github.com/repos/IQSS/dataverse", "Date": "2015-09-16T14:27:29Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.impacts) != null) { for (java.lang.String selectedImpact : this.impacts) { if (this.impactMap.get(key).equals(selectedImpact)) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1948/buggy-version/src.main.java.jenkins.plugins.coverity.DefectFilters.java", "BodyUseAPI": [], "Fixed commit": "f5ebd1523428bcd6f6714af653bac8101c5bd9e0", "Url": "https://api.github.com/repos/jenkinsci/coverity-plugin", "Date": "2014-12-18T19:29:08Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ctx.getServerHandler().playerEntity.worldObj.getEntityByID(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((player.dimension) != 0) { player.changeDimension(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5907/buggy-version/src.main.java.common.legobmw99.stormlight.network.packets.TeleportPlayerPacket.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayerMP.changeDimension(int)"], "Fixed commit": "7f1c1e870ea60f87e0fa8c1c5cf9306984eb4828", "Url": "https://api.github.com/repos/legobmw99/Stormlight", "Date": "2016-08-31T21:05:06Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiType.getParameters()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (0 == (parameterTypes.length)) { classLoaderTypeName = presentableType; }else { classLoaderTypeName = parameterTypes[0].getPresentableText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5959/buggy-version/src.com.wangjie.androidparcelableplugin.types.common.CommonTypeGenerator.java", "BodyUseAPI": ["parameterTypes[0].getPresentableText()"], "Fixed commit": "08f975f6382e30317baa198db4e92611abed5ce2", "Url": "https://api.github.com/repos/wangjiegulu/AndroidParcelablePlugin", "Date": "2016-01-28T08:47:52Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getDamager()) instanceof org.bukkit.entity.Player) { org.bukkit.entity.Player attacker = ((org.bukkit.entity.Player) (event.getDamager())); if (com.gmail.nossr50.party.Party.getInstance().inSameParty(defender, attacker)) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7884/buggy-version/src.main.java.com.gmail.nossr50.skills.Acrobatics.java", "BodyUseAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()"], "Fixed commit": "0093f769f03e8a28ef3179586765b0cd0db611e8", "Url": "https://api.github.com/repos/mcMMO-Dev/mcMMO", "Date": "2012-03-12T07:26:39Z"},
{"Line": "=>715", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mClusterManager) == null) { mClusterManager = new com.google.maps.android.clustering.ClusterManager<com.petsociety.models.Lost>(this, getMap()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1194/buggy-version/petsociety.src.com.petsociety.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a8c18c83d866c57e20c64bf73e381a569b585e4c", "Url": "https://api.github.com/repos/MoistyMoist/PetSociety-for-Android", "Date": "2014-01-28T10:47:31Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.v) == 0) { this.s = 0; }else { this.s = ((this.v) - min) / (this.v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4854/buggy-version/src.controller.HSVConversion.java", "BodyUseAPI": [], "Fixed commit": "230fd6906e3a7ce313f1586a53e56ce33b448c2a", "Url": "https://api.github.com/repos/CarlMilette/GTI410-lab1", "Date": "2016-06-29T22:06:35Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (lastCompanyUpdate != null) { this.lastCompanyUpdate = ((java.util.Date) (lastCompanyUpdate.clone())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4054/buggy-version/StockTracker.src.fr.cph.stock.entities.Portfolio.java", "BodyUseAPI": ["java.util.Date.clone()"], "Fixed commit": "8d9858720dbf9ca71004390119ede26a17cab444", "Url": "https://api.github.com/repos/carlphilipp/Stock", "Date": "2014-10-10T01:00:56Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalLength > 0) { long total = 0; long res = 0; do { res = next.write(bufs, 0, bufs.length); total += res; if (res == 0) { return false; } } while (total < totalLength ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1903/buggy-version/core.src.main.java.io.undertow.conduits.DeflatingStreamSinkConduit.java", "BodyUseAPI": [], "Fixed commit": "a7cbc3c189a4bf573012ee9f192a19e876e86508", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2013-03-01T01:05:57Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sensor.isEnabled()) { caps.getPhenomenonTime().setEndNow(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2576/buggy-version/sensorhub-service-swe.src.main.java.org.sensorhub.impl.service.sos.SensorWithStorageProviderFactory.java", "BodyUseAPI": [], "Fixed commit": "07c0b256a9749b1ad246ec5366cd5b40ced81e7e", "Url": "https://api.github.com/repos/sensiasoft/sensorhub", "Date": "2015-01-16T14:35:01Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((input.equals(\"exit\")) || (input.equals(\"quit\"))) || (input.equals(\":q\"))) { return \"Goodbye.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2830/buggy-version/Server.CustomProtocol.java", "BodyUseAPI": [], "Fixed commit": "66f11f1481700240262e751b4d312517b29dbc57", "Url": "https://api.github.com/repos/panickeraj/Project-Chatter", "Date": "2013-04-08T21:21:16Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != col) { columns = col.split(\"\\\\.\\\\.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2645/buggy-version/src.main.java.com.tianli.dbhelper.AdminDBHelper.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "ce47213bcd683bdff7abd71198997e454b08d58f", "Url": "https://api.github.com/repos/tianliplus/appservice", "Date": "2014-06-22T12:44:53Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != arg) { args = arg.split(\"\\\\.\\\\.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2645/buggy-version/src.main.java.com.tianli.dbhelper.AdminDBHelper.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "ce47213bcd683bdff7abd71198997e454b08d58f", "Url": "https://api.github.com/repos/tianliplus/appservice", "Date": "2014-06-22T12:44:53Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player.getEquippedItem()) == null) { java.lang.System.out.println(\"I don't think my stomach will agree with that\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6052/buggy-version/src.main.java.game.zork.ZorkRunner.java", "BodyUseAPI": [], "Fixed commit": "0a044978171e8c43763b10bf7af4d078e7efdd25", "Url": "https://api.github.com/repos/dodinhtrung97/Zork", "Date": "2017-02-04T21:41:49Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(osmandSettings.FOLLOW_THE_ROUTE.get())) { osmandSettings.APPLICATION_MODE.set(osmandSettings.DEFAULT_APPLICATION_MODE.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/666/buggy-version/OsmAnd.src.net.osmand.plus.OsmandApplication.java", "BodyUseAPI": ["osmandSettings.APPLICATION_MODE.set(osmandSettings.DEFAULT_APPLICATION_MODE.get())", "osmandSettings.DEFAULT_APPLICATION_MODE.get()"], "Fixed commit": "6451eb624efb7c2522ec05fbf402cb38d8c99d7f", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2013-05-20T21:13:25Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((queryResponse == null) || ((queryResponse.getResults()) == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8013/buggy-version/src.main.java.com.micro.services.search.bl.impl.QueryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "b081a9d693269afa9beecc0800443e36f9c0e362", "Url": "https://api.github.com/repos/sekhrivijay/search-service", "Date": "2017-11-04T22:16:29Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.folioreader.model.event.AnchorIdEvent.getHref()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((href != null) && ((href.indexOf('#')) != (-1))) { if (spineItem.href.equals(href.substring(0, href.lastIndexOf('#')))) { mAnchorId = href.substring(((href.lastIndexOf('#')) + 1)); if (((mWebview.getContentHeight()) > 0) && ((mAnchorId) != null)) { mWebview.loadUrl(((\"javascript:document.getElementById(\\\"\" + (mAnchorId)) + \"\\\").scrollIntoView()\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6996/buggy-version/folioreader.src.main.java.com.folioreader.ui.folio.fragment.FolioPageFragment.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int)", "java.lang.String.lastIndexOf(char)", "java.lang.String.lastIndexOf(char)", "spineItem.href.equals(java.lang.String)"], "Fixed commit": "dfc252b29fd74ce7d91c848103b3072c06358009", "Url": "https://api.github.com/repos/codetoart/FolioReader-Android", "Date": "2017-09-09T06:51:07Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((500 - (((score) / 500) * 50)) != (timer.getDelay())) timer.setDelay((500 - (((score) / 500) * 50)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2237/buggy-version/src.TetrisGame.java", "BodyUseAPI": ["javax.swing.Timer.setDelay(int)"], "Fixed commit": "e282380056e9c3d011db670115b481755756c8fc", "Url": "https://api.github.com/repos/vgmoose/Compact-Tetris", "Date": "2012-12-20T09:53:22Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (creatingActivity) { firstRenderingAfterCreatingActivity = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3343/buggy-version/bilingual-reader.src.cz.metaverse.android.bilingualreader.panel.BookPanel.java", "BodyUseAPI": [], "Fixed commit": "1cd5f9f952995c184781986ad89a71e31533f284", "Url": "https://api.github.com/repos/tomparys/bilingual-reader", "Date": "2015-05-08T01:00:01Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.livotov.labs.android.robotools.services.download.RTDownloadService<P>.createNewTask(intent.getStringExtra(eu.livotov.labs.android.robotools.services.download.RTDownloadService.Extras.DownloadId))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((findDownloadTask(payload.getDownloadId())) == null) { queue.add(payload); }else { updateNotifications(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7159/buggy-version/src.eu.livotov.labs.android.robotools.services.download.RTDownloadService.java", "BodyUseAPI": ["java.util.Queue<P>.add(P)"], "Fixed commit": "6f72589ddbaf7fcea6190ea68421bd1f0eb6fb64", "Url": "https://api.github.com/repos/LivotovLabs/RoboTools", "Date": "2013-03-21T20:27:35Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(apc.mus.isPlaying())) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3631/buggy-version/desktop.src.ionium.desktop.GameLwjglApp.java", "BodyUseAPI": [], "Fixed commit": "d2ab4de3ff2dc44a96b27ee8d65cee0f96acdf5b", "Url": "https://api.github.com/repos/chrislo27/Ionium-Engine", "Date": "2016-03-24T21:13:01Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((blackMove.length()) > 1) { foogame.Move mBlack = foogame.TPNInput.simMove(b, blackMove).get(); b = foogame.BoardMoveImpl.makeMove(b, mBlack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2076/buggy-version/src.foogame.TPNInput.java", "BodyUseAPI": ["java.util.Optional<foogame.Move>.get()", "foogame.TPNInput.simMove(foogame.Board,java.lang.String)"], "Fixed commit": "58d917a756c718d3920d964338b5ea3918f37713", "Url": "https://api.github.com/repos/raptortech-js/Tak-AI", "Date": "2017-01-27T17:08:21Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMediaPlayer) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7134/buggy-version/app.src.main.java.com.framgia.englishconversation.screen.createPost.CreatePostViewModel.java", "BodyUseAPI": [], "Fixed commit": "962473e02f704b2b45acb2017dc0b74c388397dd", "Url": "https://api.github.com/repos/DoanVanToan/EnglishConversation", "Date": "2017-12-08T07:56:36Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mqttClient.isConnected())) { mqttClient.connect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5282/buggy-version/maestro-client.src.main.java.net.orpiske.mpt.maestro.client.MaestroClient.java", "BodyUseAPI": ["org.eclipse.paho.client.mqttv3.MqttClient.connect()"], "Fixed commit": "f9f5f64afd17b2f85ce1a6aa120187820ddf9c68", "Url": "https://api.github.com/repos/maestro-performance/maestro-java", "Date": "2017-11-22T23:42:05Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((optionsPane.getSelectedIndex()) == (gui.sysadmin.annotationview.SysadminAnnotationPopup.FREETEXT_TAB)) { return new java.lang.String[]{ \"freetext\" }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6141/buggy-version/src.gui.sysadmin.annotationview.SysadminAnnotationPopup.java", "BodyUseAPI": [], "Fixed commit": "6db862f062f1009ad90bcf6bc8e93b623f2e301a", "Url": "https://api.github.com/repos/genomizer/genomizer-desktop", "Date": "2014-05-16T10:16:44Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((x) == 0) degrees = 0; else { double slopePercent = java.lang.Math.abs(((y) / (x))); degrees = (java.lang.Math.toDegrees(java.lang.Math.atan(slopePercent))) + degBoost; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6700/buggy-version/src.com.fwumdegames.api.graphics.Vector2D.java", "BodyUseAPI": ["java.lang.Math.abs(double)"], "Fixed commit": "8881bd5d1a7eca46192ce2a90f7008cdfa3baa6e", "Url": "https://api.github.com/repos/fwumdegames/FwumDeAPI", "Date": "2014-10-22T22:52:05Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(ship.isDisabled())) && ((event.key()) == (playn.core.Key.SPACE))) shooting = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1483/buggy-version/core.src.main.java.net.littlecoder.core.GameHandler.java", "BodyUseAPI": [], "Fixed commit": "2bbe23b3db23a44bbc606918cc621e9bc90729ae", "Url": "https://api.github.com/repos/mbuechmann/space-shooter", "Date": "2012-06-28T13:11:51Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((integrationMessage.getUniqueFlowNodeId()) == null) { integrationMessage.setUniqueFlowNodeId(uniqueFlowNodeId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6988/buggy-version/src.main.java.com.catify.processengine.serviceproviders.CamelIntegrationImpl.java", "BodyUseAPI": ["com.catify.processengine.core.integration.IntegrationMessage.setUniqueFlowNodeId(java.lang.String)"], "Fixed commit": "a9896be417084620b217444cf684d484ec547dfd", "Url": "https://api.github.com/repos/catify/bpmn-engine-integration-spi-camel", "Date": "2013-01-10T17:10:20Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (configParameters == null) { return reportParameters; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3032/buggy-version/features.reporting.core.src.main.java.org.opennms.reporting.core.svclayer.support.DefaultParameterConversionService.java", "BodyUseAPI": [], "Fixed commit": "a8e281f97f8d5512dcfb53dd03aa4c8232a8b393", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2013-07-19T17:42:06Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.IndexerRegistry.nullSafeGetIndexer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (indexer.isPermissionAware()) { indexer.reindex(resourceName, com.liferay.portal.kernel.util.GetterUtil.getLong(resourceClassPK)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/592/buggy-version/modules.portal-search.portal-search.src.main.java.com.liferay.portal.search.internal.SearchPermissionCheckerImpl.java", "BodyUseAPI": ["com.liferay.portal.kernel.search.Indexer<?>.reindex(java.lang.String,com.liferay.portal.kernel.util.GetterUtil.getLong(resourceClassPK))"], "Fixed commit": "61a2518e347fc7d71067621699591ef0a604a138", "Url": "https://api.github.com/repos/Preston-Crary/liferay-portal", "Date": "2016-02-12T22:20:46Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (authzGrantHandler != null) { supportedGrantTypesTemp.put(entry.getKey(), authzGrantHandler); }else { org.wso2.carbon.identity.oauth.config.OAuthServerConfiguration.log.warn((((\"Grant type : \" + (entry.getKey())) + \", is not added as a supported grant type. \") + \"Relevant grant handler failed to initiate properly.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6189/buggy-version/components.org.wso2.carbon.identity.oauth.src.main.java.org.wso2.carbon.identity.oauth.config.OAuthServerConfiguration.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.wso2.carbon.identity.oauth2.token.handlers.grant.AuthorizationGrantHandler>.put(java.lang.String,org.wso2.carbon.identity.oauth2.token.handlers.grant.AuthorizationGrantHandler)"], "Fixed commit": "e55af298d653c1a70251db37c481666461d4091a", "Url": "https://api.github.com/repos/wso2-extensions/identity-inbound-auth-oauth", "Date": "2017-05-05T09:58:15Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((worldObj.isRemote) && ((liquidRenderAmount.getValue()) > 0)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5504/buggy-version/src.openblocks.common.tileentity.tank.TileEntityTank.java", "BodyUseAPI": [], "Fixed commit": "6a11af64a03341228b4790e410b39d136dd81967", "Url": "https://api.github.com/repos/mikeemoo/OpenBlocks", "Date": "2013-08-16T12:15:45Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.frostwire.android.gui.transfers.TransferManager.getTransfers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (someTransfersSeeding(transfers)) { menu.findItem(R.id.fragment_transfers_menu_stop_seeding_all).setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6188/buggy-version/android.src.com.frostwire.android.gui.fragments.TransfersFragment.java", "BodyUseAPI": [], "Fixed commit": "f239795248dbf8a18d178791a782360dee54c887", "Url": "https://api.github.com/repos/marcelinkaaa/frostwire", "Date": "2017-08-23T20:13:04Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(toClose)) { repaint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6165/buggy-version/src.core.runner.GameVisualisation.java", "BodyUseAPI": [], "Fixed commit": "bde375ee7684ae7c44af8907c8ebe3f3886c530a", "Url": "https://api.github.com/repos/dahlukeh/phais", "Date": "2013-12-18T05:05:08Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (workingDirectory.exists()) org.apache.commons.io.FileUtils.forceDelete(workingDirectory);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5431/buggy-version/src.tw.edu.ncku.csie.selab.jojs.Judger.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.forceDelete(java.io.File)"], "Fixed commit": "0a4984a0a37858c5bc6660c1b8cfe36ac9df1715", "Url": "https://api.github.com/repos/smilecatx3/Java-Online-Judge-System", "Date": "2016-02-26T17:33:26Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((color) != null) { graphics.setColor(color); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/287/buggy-version/src.com.hackbulgaria.paint.sprites.SpraySprite.java", "BodyUseAPI": [], "Fixed commit": "32e8c6dfd335839456189881116f4715e239c64f", "Url": "https://api.github.com/repos/rosen66/Paint", "Date": "2014-07-30T15:15:37Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (resultSet != null) { resultSet.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2182/buggy-version/server.src.main.java.postit.server.controller.DatabaseController.java", "BodyUseAPI": ["java.sql.ResultSet.close()"], "Fixed commit": "cb1ce0e66c85d47414ef41341688648ccc550822", "Url": "https://api.github.com/repos/jjl284/postit", "Date": "2017-05-17T01:14:18Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ch) <= 31) || ((ch) == 127)) { next(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/7431/buggy-version/src.main.java.com.alibaba.fastjson.parser.JSONLexerBase.java", "BodyUseAPI": [], "Fixed commit": "2b9e66dfa5f5d3edc8344421070eed271c23f7bd", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-13T14:01:28Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jactr.eclipse.core.bundles.descriptors.CommonExtensionDescriptor.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (name != null) return name;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6139/buggy-version/org.jactr.eclipse.bundles.src.org.jactr.eclipse.core.bundles.descriptors.CommonExtensionDescriptor.java", "BodyUseAPI": [], "Fixed commit": "e062358ecbd176d2c54abf66c70bf7fd6b7de79e", "Url": "https://api.github.com/repos/amharrison/jactr-eclipse", "Date": "2015-02-10T22:22:11Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"K\".equals(getMatrixType())) && (\"N\".equals(getQuintechType()))) { sb.append(\"quintech_type\").append(\"=\").append(getQuintechType()).append(com.rfview.conf.MatrixConfig.NEW_LINE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4759/buggy-version/src.main.java.com.rfview.conf.MatrixConfig.java", "BodyUseAPI": [], "Fixed commit": "89dbf48c0597199e82d5dfe5d563f7dd8d0652a5", "Url": "https://api.github.com/repos/rfmaze2012/rfmaze-client", "Date": "2017-11-03T02:22:02Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type.getBigCardBmp()) != null) { bigCardPic = type.getBigCardBmp(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5213/buggy-version/src.android.ygo.core.Card.java", "BodyUseAPI": ["android.ygo.core.CardType.getBigCardBmp()"], "Fixed commit": "e565cfb7d74798066094b12a0bfc9385d54b7b74", "Url": "https://api.github.com/repos/msk86/YGORoid", "Date": "2013-06-30T02:55:45Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/3894/buggy-version/input.javasrc.com.alvazan.orm.api.z8spi.conv.StandardConverters.java", "BodyUseAPI": [], "Fixed commit": "d460377fb676c87739bebab98f9b2e8c43249baf", "Url": "https://api.github.com/repos/easility/playorm", "Date": "2013-01-29T00:51:39Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ship.isValidShot(target)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/906/buggy-version/src.battleship.ShipMover.java", "BodyUseAPI": [], "Fixed commit": "b718d0ef098be3e6add88c98b3ada014aad6b808", "Url": "https://api.github.com/repos/svramusi/Ultimate-Salvo-Battleship", "Date": "2013-03-06T14:46:49Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getTarget()) != (Target.SELF)) interpret(((Jouable) (t)), player, Declancheur.MODIF);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/346/buggy-version/src.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "18dc80e7f4649185ca89f45f64380098b5cd151e", "Url": "https://api.github.com/repos/nyradr/TP8-Javastone", "Date": "2015-12-11T11:01:12Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentEvent()) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1648/buggy-version/src.edu.berkeley.security.eventtracker.EventActivity.java", "BodyUseAPI": [], "Fixed commit": "11ea038c98f0c7efd8b10beaf0f532f473f43a1d", "Url": "https://api.github.com/repos/adegtiar/Android-Activity-Tracker", "Date": "2011-07-16T04:11:22Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((firstArgsAndLast.length) == 1) { return args; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/686/buggy-version/src.main.java.net.boreeas.irc.IrcBot.java", "BodyUseAPI": [], "Fixed commit": "136d7f054ca0bef590262071316139c77c93782d", "Url": "https://api.github.com/repos/Boreeas/ircbot", "Date": "2012-12-13T08:46:01Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mob == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4941/buggy-version/src.engine.network.packet.Packet49MobBuffRemove.java", "BodyUseAPI": [], "Fixed commit": "e0f2e1ff6e8bd65b5622566ea8befe76773597e2", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-12-20T00:12:41Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getLayoutParams()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (layoutParams != null) { params.height = layoutParams.height; params.width = layoutParams.width; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2253/buggy-version/AnimateDemo.src.org.mazhuang.animatedemo.StickExpandListHead.java", "BodyUseAPI": [], "Fixed commit": "d37fc9c69d0775712b730ac661a883a2c37667a1", "Url": "https://api.github.com/repos/mzlogin/AndroidPractices", "Date": "2015-03-14T05:07:46Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.listenerMux) != null) { exoMediaPlayer.removeListener(this.listenerMux); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2307/buggy-version/library.src.main.java.com.devbrackets.android.exomedia.core.video.exo.ExoVideoDelegate.java", "BodyUseAPI": [], "Fixed commit": "4f82e384e1823a1ae2ea9e36a9c9b7fa3419949f", "Url": "https://api.github.com/repos/brianwernick/ExoMedia", "Date": "2017-07-10T18:12:53Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.listenerMux) != null) { exoMediaPlayer.removeListener(this.listenerMux); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2307/buggy-version/library.src.main.java.com.devbrackets.android.exomedia.core.audio.ExoAudioPlayer.java", "BodyUseAPI": [], "Fixed commit": "4f82e384e1823a1ae2ea9e36a9c9b7fa3419949f", "Url": "https://api.github.com/repos/brianwernick/ExoMedia", "Date": "2017-07-10T18:12:53Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentById(R.id.fragment_new_item)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (df != null) { df.onItemEdit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/1757/buggy-version/app.src.main.java.com.vickysy.ootd.NewItemActivity.java", "BodyUseAPI": ["com.vickysy.ootd.NewItemFragment.onItemEdit()"], "Fixed commit": "95ac5281df0d92d8e8f21e1bf402ced4c625700a", "Url": "https://api.github.com/repos/vickysy84/OOTD", "Date": "2015-03-12T07:49:21Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.json.JSONObject.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (startTimeAmPm == (java.util.Calendar.PM)) { startTimeHour += 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8953/buggy-version/shared.ct-time-rule.src.com.liferay.contenttargeting.rules.time.TimeRule.java", "BodyUseAPI": [], "Fixed commit": "0652edcf5e23fee6ae5e232c88d53f21054e2648", "Url": "https://api.github.com/repos/epgarcia/temp-wcm-plugins", "Date": "2014-01-29T09:20:25Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.json.JSONObject.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (endTimeAmPm == (java.util.Calendar.PM)) { endTimeHour += 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8953/buggy-version/shared.ct-time-rule.src.com.liferay.contenttargeting.rules.time.TimeRule.java", "BodyUseAPI": [], "Fixed commit": "0652edcf5e23fee6ae5e232c88d53f21054e2648", "Url": "https://api.github.com/repos/epgarcia/temp-wcm-plugins", "Date": "2014-01-29T09:20:25Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.itemTag) != null) { title = this.itemTag.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8122/buggy-version/app.src.main.java.com.naoto.yamaguchi.miita.activity.TagItemActivity.java", "BodyUseAPI": [], "Fixed commit": "a99ce98bbb226a6aa74125ed0ade61f571b357fb", "Url": "https://api.github.com/repos/naoto0822/miita-android", "Date": "2017-01-22T08:58:01Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.tag) != null) { title = this.tag.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/8122/buggy-version/app.src.main.java.com.naoto.yamaguchi.miita.activity.TagItemActivity.java", "BodyUseAPI": [], "Fixed commit": "a99ce98bbb226a6aa74125ed0ade61f571b357fb", "Url": "https://api.github.com/repos/naoto0822/miita-android", "Date": "2017-01-22T08:58:01Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.btnConnect.getText()) == \"DISCONNECT\") { this.PanelVoiture.setVisible(visible); leViewer.setVisible(visible); leViewer.changevisibility(visible); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/5684/buggy-version/src.view.mainWindow.java", "BodyUseAPI": [], "Fixed commit": "4c98e787f4c0d4cc6697d9cb9dceb1cbc63125d7", "Url": "https://api.github.com/repos/camillemuller/AffichageEtControlXbee", "Date": "2015-06-08T08:00:50Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dasein.cloud.aws.network.SecurityGroup.getFirewall(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.dasein.cloud.aws.network.SecurityGroup.isAwsEc2Classic(fw)) { throw new org.dasein.cloud.aws.network.OperationNotSupportedException(\"AWS does not support ANY protocol type for non-VPC security groups\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2250/buggy-version/src.main.java.org.dasein.cloud.aws.network.SecurityGroup.java", "BodyUseAPI": [], "Fixed commit": "f7880e537ce51321ad2933871dde6a0d48826e0f", "Url": "https://api.github.com/repos/TheWeatherCompany/dasein-cloud-aws", "Date": "2014-03-31T16:45:15Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.adlnet.xapi.model.adapters.JsonElement.getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (obj.has(gov.adlnet.xapi.model.adapters.ActorAdapter.OBJECT_TYPE)) { java.lang.String objectType = obj.get(gov.adlnet.xapi.model.adapters.ActorAdapter.OBJECT_TYPE).getAsJsonPrimitive().getAsString().toLowerCase(); if (objectType.equals(Agent.AGENT.toLowerCase())) { klass = java.lang.Class.forName(gov.adlnet.xapi.model.adapters.Agent.class.getCanonicalName()); }else if (objectType.equals(Group.GROUP.toLowerCase())) { klass = java.lang.Class.forName(gov.adlnet.xapi.model.adapters.Group.class.getCanonicalName()); } }else { klass = java.lang.Class.forName(gov.adlnet.xapi.model.adapters.Agent.class.getCanonicalName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/6668/buggy-version/src.main.java.gov.adlnet.xapi.model.adapters.ActorAdapter.java", "BodyUseAPI": ["obj.get(gov.adlnet.xapi.model.adapters.ActorAdapter.OBJECT_TYPE).getAsJsonPrimitive().getAsString()", "obj.get(gov.adlnet.xapi.model.adapters.ActorAdapter.OBJECT_TYPE).getAsJsonPrimitive()", "obj.get(gov.adlnet.xapi.model.adapters.ActorAdapter.OBJECT_TYPE).getAsJsonPrimitive().getAsString().toLowerCase()", "gov.adlnet.xapi.model.adapters.JsonObject.get(java.lang.String)"], "Fixed commit": "1379e5487124e5a6830e29b4cdaf61fcd9c0fac2", "Url": "https://api.github.com/repos/creighton/jxapi", "Date": "2014-06-05T13:37:09Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.content.ContextCompat.checkSelfPermission(org.fossasia.phimpme.base.BaseActivity,android.Manifest.permission.WRITE_EXTERNAL_STORAGE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (checkStoragePermission == (android.content.pm.PackageManager.PERMISSION_GRANTED)) presentShowcaseSequence();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2821/buggy-version/app.src.main.java.org.fossasia.phimpme.base.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "fa75546264c3b5d619df3c0baadd6b281bdf57c1", "Url": "https://api.github.com/repos/sridharjajoo/phimpme-android", "Date": "2017-09-29T14:14:25Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.lecteur.wStack.isEmpty())) this.lecteur.wStack.pop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/4880/buggy-version/src.model.WhileOut.java", "BodyUseAPI": ["this.lecteur.wStack.pop()"], "Fixed commit": "aa28395ac10e5797af330f6fc13a061880209d48", "Url": "https://api.github.com/repos/alex-87/BrainFInterpretor", "Date": "2016-05-27T23:27:00Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["inv.mainInventory.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (invStack.getItem().hasContainerItem(invStack)) { net.minecraft.item.ItemStack correctStack = invStack.copy(); containerItems.add(correctStack.getItem().getContainerItem(correctStack)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V133/2941/buggy-version/src.main.java.net.dark_roleplay.drpcore.common.crafting.SimpleCrafter.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.copy()"], "Fixed commit": "3d6d62bbc4df93451c194ee5157b9b35fd4d0f5d", "Url": "https://api.github.com/repos/DarkRoleplay/Dark-Roleplay-Core", "Date": "2017-04-23T19:20:13Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasMultipleExplicitCases()) { writer.println(\"</div><!-- case-content -->\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4130/buggy-version/jgiven-core.src.main.java.com.tngtech.jgiven.report.html.ScenarioHtmlWriter.java", "BodyUseAPI": [], "Fixed commit": "edba3be5c0ffd112deb7f382a6b847fc2f4e3bb0", "Url": "https://api.github.com/repos/TNG/JGiven", "Date": "2014-09-28T11:41:24Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.md2k.autosense.Configuration.getDataSources()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dataSources == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3026/buggy-version/autosense.src.main.java.org.md2k.autosense.devices.AutoSensePlatforms.java", "BodyUseAPI": [], "Fixed commit": "5258bf9465d47216e9a8711e95bdc6a54e49f70f", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-AutoSense", "Date": "2016-01-21T20:36:59Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value == \"\") { value = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/980/buggy-version/src.main.java.com.salesforce.scmt.utils.DeskJsonMapUtil.java", "BodyUseAPI": [], "Fixed commit": "df03b6bb89761199901d35061bf937fd0122f007", "Url": "https://api.github.com/repos/forcedotcom/scmt-server", "Date": "2017-05-17T16:47:54Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((node.getChildCount()) > 1) && ((node.getChild(1).getChildCount()) > 0)) arguments.put(key, node.getChild(1).getChild(0).toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1794/buggy-version/org.eclipse.symfony.core.src.org.eclipse.symfony.core.parser.antlr.AnnotationNodeVisitor.java", "BodyUseAPI": ["node.getChild(1).getChild(0).toString()", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,node.getChild(1).getChild(0).toString())", "node.getChild(1).getChild(int)", "org.eclipse.symfony.core.parser.antlr.AnnotationCommonTree.getChild(int)"], "Fixed commit": "a477d27a5eac9828b99edb58691619f40775e6d5", "Url": "https://api.github.com/repos/pulse00/Symfony-2-Eclipse-Plugin", "Date": "2011-06-29T10:37:20Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outputImage.getColorModel()) instanceof java.awt.image.IndexColorModel) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7468/buggy-version/modules.library.render.src.main.java.org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.java", "BodyUseAPI": [], "Fixed commit": "9ec388f06e135cc02ec0743b906df7b3a99b461b", "Url": "https://api.github.com/repos/n-lagomarsini/geotools", "Date": "2014-03-18T12:23:42Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.polimi.awt.repository.IJpaGenericAccess.mountainInDb(it.polimi.awt.domain.Mountain)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((mountainsFoundInDb.size()) > 0)) mountainsNotInDb.add(mountain);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4794/buggy-version/src.main.java.it.polimi.awt.web.FormController.java", "BodyUseAPI": [], "Fixed commit": "5859f9fe6ca50252630769b82d848e28785139a0", "Url": "https://api.github.com/repos/Mastrognu/mountainANALytics", "Date": "2015-07-04T16:37:21Z"},
{"Line": "=>1304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["util.ConnectionManager.getAnimeData(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((finishDate.equalsIgnoreCase(\"??/??/????\")) || (animeType.equalsIgnoreCase(\"?????\"))) list = ((java.lang.String) (util.window.AddAnimeDialog.listToAdd.getSelectedItem())); else list = util.window.AddAnimeDialog.checkDataConflict(finishDate, animeType);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8313/buggy-version/src.util.window.AddAnimeDialog.java", "BodyUseAPI": ["util.window.AddAnimeDialog.checkDataConflict(java.lang.String,java.lang.String)"], "Fixed commit": "1ab06842492c7ee247e01d2d6c847a34b5e45f77", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-08-29T18:56:36Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sr.firstUnknownWordMatches)) { sr.firstUnknownWordMatches = ((localeName.equals(getUnknownSearchWord())) || (getNameStringMatcher().matches(localeName))) || (getNameStringMatcher().matches(otherNames)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2097/buggy-version/OsmAnd-java.src.net.osmand.search.core.SearchPhrase.java", "BodyUseAPI": [], "Fixed commit": "90323336435487431c4edaccfe5314e1f72cf47f", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2017-04-17T16:43:49Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mComments.getComments().size()) == 0) mCommentsList.setEmptyView(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2570/buggy-version/src.com.manuelmaly.hn.CommentsActivity.java", "BodyUseAPI": [], "Fixed commit": "26fa279ae20ff3283a8233d8d6a994f999908970", "Url": "https://api.github.com/repos/jmaltz/hn-android", "Date": "2013-09-24T08:36:02Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(xmlrpcMessage))) { java.lang.String lowerCaseXmlrpcMessage = xmlrpcMessage.toLowerCase(); if ((lowerCaseXmlrpcMessage.contains(\"code 503\")) && ((lowerCaseXmlrpcMessage.contains(\"limit reached\")) || (lowerCaseXmlrpcMessage.contains(\"login limit\")))) isLoginLimitReached = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7144/buggy-version/src.org.wordpress.android.util.ToastUtils.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "7987957e800c9be6572ac4400f3aaafb73da20cf", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2014-02-19T12:25:46Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getActualMaximum(int)", "java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((monday_index + 7) < last_day_of_Month) { if ((((java.lang.Integer.valueOf(splitInfo[0])) >= monday_index) && ((java.lang.Integer.valueOf(splitInfo[0])) <= (monday_index + 7))) && ((java.lang.Integer.valueOf(splitInfo[1])) == month)) { days_working[((((java.lang.Integer.valueOf(splitInfo[0])) - monday_index) + 1) % 7)] = 1; if ((java.lang.Integer.valueOf(splitInfo[1])) < 10) { mProductList.add(new com.example.mushy.employeelogin.Product(java.lang.Integer.valueOf(splitInfo[0]), ((((nDate + \" \") + (splitInfo[0])) + \"/0\") + (splitInfo[1])), ((nSTime1 + \" - \") + nSTime2))); }else { mProductList.add(new com.example.mushy.employeelogin.Product(java.lang.Integer.valueOf(splitInfo[0]), ((((nDate + \" \") + (splitInfo[0])) + \"/\") + (splitInfo[1])), ((nSTime1 + \" - \") + nSTime2))); } } }else { if (((((java.lang.Integer.valueOf(splitInfo[0])) >= monday_index) && ((java.lang.Integer.valueOf(splitInfo[0])) <= last_day_of_Month)) && ((java.lang.Integer.valueOf(splitInfo[1])) == month)) || (((java.lang.Integer.valueOf(splitInfo[1])) == (month + 1)) && ((java.lang.Integer.valueOf(splitInfo[0])) <= ((monday_index + 7) - last_day_of_Month)))) { days_working[((((java.lang.Integer.valueOf(splitInfo[0])) - monday_index) + 1) % 7)] = 1; if ((java.lang.Integer.valueOf(splitInfo[1])) < 10) { mProductList.add(new com.example.mushy.employeelogin.Product(java.lang.Integer.valueOf(splitInfo[0]), ((((nDate + \" \") + (splitInfo[0])) + \"/0\") + (splitInfo[1])), ((nSTime1 + \" - \") + nSTime2))); }else { mProductList.add(new com.example.mushy.employeelogin.Product(java.lang.Integer.valueOf(splitInfo[0]), ((((nDate + \" \") + (splitInfo[0])) + \"/\") + (splitInfo[1])), ((nSTime1 + \" - \") + nSTime2))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3600/buggy-version/Mush.EmployeeLogin.app.src.main.java.com.example.mushy.employeelogin.secondActivity.java", "BodyUseAPI": [], "Fixed commit": "4df4e49d791e1a591d9b9fc81c75b08af0089253", "Url": "https://api.github.com/repos/ThomasDelaney/TapIn", "Date": "2017-04-18T18:36:35Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nz < 3) { this.zw = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8911/buggy-version/src.main.java.SIMcheck.Raw_ModContrast.java", "BodyUseAPI": [], "Fixed commit": "d9b68c3346c3e87a42f441f1c790e748b9c26ba6", "Url": "https://api.github.com/repos/MicronOxford/SIMcheck", "Date": "2014-07-03T20:01:21Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resumeGame) ((com.badlogic.gdx.Game) (Gdx.app.getApplicationListener())).setScreen(new com.esbjon.screens.MainMenuScreen()); else ((com.badlogic.gdx.Game) (Gdx.app.getApplicationListener())).setScreen(new com.esbjon.screens.SelectMapScreen(com.esbjon.Resc.Maps.getCasualPlayMaps(), false));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3342/buggy-version/core.src.com.esbjon.screens.MapPreviewScreen.java", "BodyUseAPI": [], "Fixed commit": "d303a3ebe5c16b2467fd0db8d4d3d57454c0b71c", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2017-12-04T00:31:41Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (reader != null) { try { reader.close(); } catch (java.lang.Exception r) { play.Logger.warn(r, \"Error closing reader\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3914/buggy-version/app.press.PressFileWriter.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "fbc327aab8826d36093520f7020d611a81b9a027", "Url": "https://api.github.com/repos/codeborne/play-press", "Date": "2012-10-11T11:58:02Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((imagePosition == null) || (imagePosition.trim().equals(\"\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/425/buggy-version/PaintApplication.src.CSPaintPackage.PanelEditor.java", "BodyUseAPI": [], "Fixed commit": "dcf71c85ce2f5a2816005ed24d91fbe358d2b52e", "Url": "https://api.github.com/repos/cemeka/PaintProgram", "Date": "2015-10-24T20:29:34Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.geecko.QuickLyric.utils.DatabaseHelper.get(((com.geecko.QuickLyric.MainActivity) (getActivity())).database,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (lyrics != null) update(lyrics, getView(), false); else { java.util.Set<java.lang.String> providersSet = android.preference.PreferenceManager.getDefaultSharedPreferences(getActivity()).getStringSet(\"pref_providers\", java.util.Collections.<java.lang.String>emptySet()); com.geecko.QuickLyric.tasks.DownloadThread.refreshProviders(providersSet); if (url == null) new com.geecko.QuickLyric.tasks.DownloadThread(this, artist, song).start(); else new com.geecko.QuickLyric.tasks.DownloadThread(this, url, artist, song).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4187/buggy-version/QuickLyric.src.main.java.com.geecko.QuickLyric.fragment.LyricsViewFragment.java", "BodyUseAPI": ["com.geecko.QuickLyric.fragment.LyricsViewFragment.update(com.geecko.QuickLyric.lyrics.Lyrics,getView(),boolean)"], "Fixed commit": "bfe5fcf02be438d0fa8306c1e06dcbc4ecb8f754", "Url": "https://api.github.com/repos/QuickLyric/QuickLyric", "Date": "2015-04-01T14:52:26Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (year == (-1)) year = thisYear;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4250/buggy-version/app.src.main.java.org.fasola.fasolaminutes.LeaderActivity.java", "BodyUseAPI": [], "Fixed commit": "4286a31e4733cd5786ad6088b82ded6f955ea1f1", "Url": "https://api.github.com/repos/mrichards42/fasola_android", "Date": "2015-08-16T23:02:58Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (num != 0) { java.lang.String str = \"\"; for (int i = 0; i < num; i++) { str += (param[i]) + \" \"; } parsedTask.setDetails(str.trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5783/buggy-version/src.com.tasma.Parser.java", "BodyUseAPI": [], "Fixed commit": "651310000b97fcad1bec483f6f476a18207d8d1f", "Url": "https://api.github.com/repos/cs2103jan2015-w14-3j/main", "Date": "2015-04-11T10:15:00Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (counter == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3482/buggy-version/src.dna.profiler.ProfilerMeasurementData.java", "BodyUseAPI": [], "Fixed commit": "e22e9bd09026c00147f618160d0621eca9e79ddf", "Url": "https://api.github.com/repos/NicoHaase/DNA", "Date": "2014-01-18T16:35:11Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exoplatform.portal.mop.navigation.NavigationService.loadNavigation(org.exoplatform.portal.mop.SiteKey)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((portalNav != null) && ((portalNav.getState()) != null)) { navigations.add(new org.exoplatform.portal.mop.user.UserNavigation(this, portalNav, acl.hasEditPermissionOnNavigation(portalNav.getKey()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1984/buggy-version/component.portal.src.main.java.org.exoplatform.portal.mop.user.UserPortalImpl.java", "BodyUseAPI": ["org.exoplatform.portal.config.UserACL.hasEditPermissionOnNavigation(portalNav.getKey())", "java.util.List<org.exoplatform.portal.mop.user.UserNavigation>.add(org.exoplatform.portal.mop.user.UserNavigation)", "org.exoplatform.portal.mop.navigation.NavigationContext.getKey()"], "Fixed commit": "10718c516d59f775c2dc8fff7106b09da65af25c", "Url": "https://api.github.com/repos/trongtt/exogtn", "Date": "2011-05-24T07:46:05Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jenkinsci.plugins.skytap.SkytapUtils.expandEnvVars(hudson.model.AbstractBuild,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(expConfigFile.equals(\"\"))) { expConfigFile = org.jenkinsci.plugins.skytap.SkytapUtils.convertFileNameToFullPath(build, expConfigFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7845/buggy-version/src.main.java.org.jenkinsci.plugins.skytap.ListVMPublishedServiceStep.java", "BodyUseAPI": [], "Fixed commit": "aef00b671d2987833094df2cd3c8b6edd3744c7c", "Url": "https://api.github.com/repos/ptoma98/skytap-cloud-plugin", "Date": "2014-01-31T16:31:56Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["no.runsafe.framework.minecraft.event.entity.RunsafeEntityDamageByEntityEvent.getDamageActor()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (attacker instanceof no.runsafe.framework.api.player.IPlayer) source = ((no.runsafe.framework.api.player.IPlayer) (attacker)); else if (attacker instanceof no.runsafe.framework.minecraft.entity.RunsafeProjectile) { no.runsafe.framework.minecraft.entity.RunsafeProjectile projectile = ((no.runsafe.framework.minecraft.entity.RunsafeProjectile) (attacker)); if (!(((projectile.getEntityType()) == (no.runsafe.framework.minecraft.entity.ProjectileEntity.Egg)) || ((projectile.getEntityType()) == (no.runsafe.framework.minecraft.entity.ProjectileEntity.Snowball)))) { no.runsafe.framework.api.entity.IProjectileSource shooterSource = ((no.runsafe.framework.minecraft.entity.RunsafeProjectile) (attacker)).getShooter(); if (!(shooterSource instanceof no.runsafe.framework.minecraft.entity.RunsafeLivingEntity)) source = null; else source = this.findPlayer(((no.runsafe.framework.minecraft.entity.RunsafeLivingEntity) (shooterSource))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2117/buggy-version/src.no.runsafe.clans.monitors.CombatMonitor.java", "BodyUseAPI": [], "Fixed commit": "423ef6a981a09a25e81f3da8eaf2d0ae9d352503", "Url": "https://api.github.com/repos/Njs41/RunsafeClans", "Date": "2017-03-08T05:58:56Z"},
{"Line": "=>783", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(jobj.isNull(org.voltdb.plannodes.IndexScanPlanNode.Members.IGNORE_NULL_CANDIDATE.name()))) { org.json_voltpatches.JSONArray jarray = jobj.getJSONArray(org.voltdb.plannodes.IndexScanPlanNode.Members.IGNORE_NULL_CANDIDATE.name()); int numCols = jarray.length(); for (int ii = 0; ii < numCols; ++ii) { m_ignoreNullCandidate.add(jarray.getBoolean(ii)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7480/buggy-version/src.frontend.org.voltdb.plannodes.IndexScanPlanNode.java", "BodyUseAPI": ["org.json_voltpatches.JSONObject.getJSONArray(java.lang.String)", "org.voltdb.plannodes.IndexScanPlanNode.Members.name()"], "Fixed commit": "031ee39480c4ef2dfa3ae423cfe00bd820bcfbf6", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2017-01-11T20:09:08Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((html.length()) < 100) { return new java.util.ArrayList<java.util.Map<java.lang.String, java.lang.Object>>(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4878/buggy-version/src.com.linpinger.foxbook.FoxBookLib.java", "BodyUseAPI": [], "Fixed commit": "987cd1ede37a0035f06256e688a351ffda7296eb", "Url": "https://api.github.com/repos/linpinger/foxbook-java", "Date": "2015-12-23T08:35:57Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((prevLaidCell != null) && ((workingCell.getOnsetTicks()) >= (prevLaidCell.getOffsetTicks()))) { t = (prevLaidCell.getY()) + (prevLaidCell.getHeight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7837/buggy-version/src.main.java.org.datavyu.views.discrete.layouts.SheetLayoutWeakTemporal.java", "BodyUseAPI": ["org.datavyu.views.discrete.SpreadsheetCell.getY()", "org.datavyu.views.discrete.SpreadsheetCell.getHeight()"], "Fixed commit": "54c6133d100245e2a62eb843203280c3512f922b", "Url": "https://api.github.com/repos/databrary/datavyu", "Date": "2013-10-29T18:48:40Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["crafting.craftMatrix.getStackInSlot(i).copy()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(ostack.isEmpty())) ostack.setCount(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8636/buggy-version/src.main.java.lu.kremi151.minamod.network.MessageCreateSketch.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.setCount(int)"], "Fixed commit": "c0e37408cf0da827e7e11882b394e387a4d70ef7", "Url": "https://api.github.com/repos/kremi151/MinaMod", "Date": "2017-10-14T11:08:06Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getVersion().equalsIgnoreCase(\"%VERSION%\")) { continue; }else { console.log((((\"Update to Launcher found. Current version: \" + (this.version)) + \", New version: \") + version)); downloadUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/288/buggy-version/src.com.paniclauncher.data.Settings.java", "BodyUseAPI": [], "Fixed commit": "308e639cd392f6ffd6b2fc008b3ca7ba9e3d8267", "Url": "https://api.github.com/repos/lbjdaking23/PanicLauncher", "Date": "2013-10-04T07:34:19Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getVersion().equalsIgnoreCase(\"%VERSION%\")) { continue; }else { console.log((((\"Update to Launcher found. Current version: \" + (this.version)) + \", New version: \") + version)); downloadUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/288/buggy-version/src.com.paniclauncher.data.Settings.java", "BodyUseAPI": [], "Fixed commit": "308e639cd392f6ffd6b2fc008b3ca7ba9e3d8267", "Url": "https://api.github.com/repos/lbjdaking23/PanicLauncher", "Date": "2013-10-04T07:34:19Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((length) <= ((old.length) / 4)) { tanks = new cofh.core.util.fluid.FluidTankAdv[(old.length) / 2]; if (i > 0) java.lang.System.arraycopy(old, 0, tanks, 0, i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4602/buggy-version/src.powercrystals.minefactoryreloaded.tile.tank.FluidTankMulti.java", "BodyUseAPI": ["java.lang.System.arraycopy(cofh.core.util.fluid.FluidTankAdv[],int,cofh.core.util.fluid.FluidTankAdv[],int,int)"], "Fixed commit": "fc0a79f661c393bb14bac4d8514018f218f68220", "Url": "https://api.github.com/repos/skyboy/MineFactoryReloaded", "Date": "2014-10-31T16:34:22Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.meters.values().contains(metric)) { return true; }else if (this.gauges.values().contains(metric)) { return true; }else if (this.cachedGauges.values().contains(metric)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4626/buggy-version/src.main.java.io.initium.camel.component.metrics.MetricGroup.java", "BodyUseAPI": ["this.gauges.values().contains(com.codahale.metrics.Metric)", "this.cachedGauges.values().contains(com.codahale.metrics.Metric)"], "Fixed commit": "80d7dd9c182cf1465c28a4fadb5230ed675610f3", "Url": "https://api.github.com/repos/InitiumIo/camel-metrics", "Date": "2014-04-21T13:45:59Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.rdg.resc.edal.dataset.cdm.NetcdfDatasetAggregator.getDataset(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (first.getFileTypeId().startsWith(\"GRIB\")) { throw new uk.ac.rdg.resc.edal.exceptions.EdalException(\"Cannot automatically aggregate GRIB files.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6614/buggy-version/cdm.src.main.java.uk.ac.rdg.resc.edal.dataset.cdm.NetcdfDatasetAggregator.java", "BodyUseAPI": [], "Fixed commit": "59bb3460d4d6122d93d8a654e061cd9fa3918e2e", "Url": "https://api.github.com/repos/Reading-eScience-Centre/edal-java", "Date": "2016-01-15T13:54:24Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((latMin != latMax) && (lonMin != lonMax)) { bbox = new uk.ac.rdg.resc.edal.geometry.BoundingBoxImpl(lonMin, latMin, lonMax, latMax, org.geotoolkit.referencing.crs.DefaultGeographicCRS.WGS84); }else { bbox = uk.ac.rdg.resc.edal.geometry.BoundingBoxImpl.global(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6614/buggy-version/cdm.src.main.java.uk.ac.rdg.resc.edal.grid.cdm.CdmTransformedGrid.java", "BodyUseAPI": [], "Fixed commit": "59bb3460d4d6122d93d8a654e061cd9fa3918e2e", "Url": "https://api.github.com/repos/Reading-eScience-Centre/edal-java", "Date": "2016-01-15T13:54:24Z"},
{"Line": "=>1021", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (x instanceof java.lang.Character) { return org.h2.value.ValueStringFixed.get(((java.lang.Character) (x)).toString()); }else if (org.h2.value.ValueGeometry.isGeometryClass(x.getClass())) { org.h2.value.ValueGeometry value = org.h2.value.ValueGeometry.tryGet(x); if (value != null) { return value; }else { return ValueNull.INSTANCE; } }else { return org.h2.value.ValueJavaObject.getNoCopy(x, null, session.getDataHandler()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4439/buggy-version/h2.src.main.org.h2.value.DataType.java", "BodyUseAPI": ["org.h2.value.ValueGeometry.tryGet(java.lang.Object)", "org.h2.value.ValueGeometry.isGeometryClass(java.lang.Class<? extends java.lang.Object>)", "org.h2.value.ValueJavaObject.getNoCopy(java.lang.Object,<nulltype>,session.getDataHandler())", "java.lang.Object.getClass()"], "Fixed commit": "d5d8a7c477511cb2efd23f98b111547b965dd15d", "Url": "https://api.github.com/repos/nicolas-f/H2-Mirror", "Date": "2015-03-16T13:34:14Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (banterRoomFragment.isShown()) { getActivity().runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { getBanterRoomListAdapter().notifyDataSetChanged(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7622/buggy-version/src.com.example.Banter.BanterRoomFragment.java", "BodyUseAPI": [], "Fixed commit": "da6d294e923113c32724b2304ef0551270e261c1", "Url": "https://api.github.com/repos/fatzalore/Banter", "Date": "2014-10-21T06:36:50Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["token.get(code.lemma.LemmaAnnotation.class).toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((lemmas.get(lem)) != null) lemmas.put(lem, ((lemmas.get(lem)) + 1)); else lemmas.put(lem, 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6031/buggy-version/PA1.WikiArticlesMR.src.code.lemma.Tokenizer.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,int)", "java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,int)"], "Fixed commit": "672158370336204fef210edad355b37bc1d44de0", "Url": "https://api.github.com/repos/gekonwi/brandeis.big_data", "Date": "2014-10-03T09:53:37Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (newValue == null) { for (int i = 0; i < (facNode.cycicCircle.outcommods.size()); i++) { if ((facNode.cycicCircle.outcommods.get(i)) == ((java.lang.String) (oldValue))) { facNode.cycicCircle.outcommods.remove(i); break; } } }else if (newValue == \"New Commodity\") { edu.utexas.cycic.Cycic.addNewCommodity(); }else { facNode.cycicCircle.outcommods.add(newValue); defaultValue.set(0, newValue); if (((java.lang.Boolean) (facArray.get(10))) == false) { facArray.set(10, true); } for (int i = 0; i < (facNode.cycicCircle.outcommods.size()); i++) { if ((facNode.cycicCircle.outcommods.get(i)) == ((java.lang.String) (oldValue))) { facNode.cycicCircle.outcommods.remove(i); break; } } edu.utexas.cycic.VisFunctions.redrawPane(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3170/buggy-version/cyclist.src.edu.utexas.cycic.FormBuilderFunctions.java", "BodyUseAPI": ["facNode.cycicCircle.outcommods.add(java.lang.String)", "java.util.ArrayList<java.lang.Object>.set(int,java.lang.String)"], "Fixed commit": "756817a081b1972fb43d5240554281cc287f3c9f", "Url": "https://api.github.com/repos/FlanFlanagan/cyclist2", "Date": "2015-06-07T20:51:46Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["usernameLogin.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(username))) { addAccountIntent.putExtra(\"username\", username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3926/buggy-version/app.src.main.java.ca.ualberta.ridr.LoginView.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,java.lang.String)"], "Fixed commit": "444caea38cf55c16aa3be82b04d931bf608737e1", "Url": "https://api.github.com/repos/CMPUT301F16T04/Ridr", "Date": "2016-11-24T21:16:06Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tabDots.isEmpty())) { tabDots.get(dotCurIndex).setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8414/buggy-version/app.src.main.java.com.baasplus.weather.view.MainActivity.java", "BodyUseAPI": ["tabDots.get(dotCurIndex).setEnabled(boolean)", "java.util.ArrayList<android.widget.ImageView>.get(int)"], "Fixed commit": "74764ca2d8f4945988e8d206f5fccdd8c9312977", "Url": "https://api.github.com/repos/mcodebackup/cp-weather", "Date": "2015-04-05T14:49:48Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == 0) { titileDetailTV.setText(detailFragments.get(0).getCity().displayName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8414/buggy-version/app.src.main.java.com.baasplus.weather.view.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "74764ca2d8f4945988e8d206f5fccdd8c9312977", "Url": "https://api.github.com/repos/mcodebackup/cp-weather", "Date": "2015-04-05T14:49:48Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sacredlabyrinth.Phaed.PreciousStones.listeners.PlayerCommandPreprocessEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (FieldFlag.COMMAND_BLACKLIST.applies(field, player)) { if (field.getSettings().isCanceledCommand(event.getMessage())) { if (!(plugin.getPermissionsManager().has(player, \"preciousstones.bypass.commandblacklist\"))) { net.sacredlabyrinth.Phaed.PreciousStones.listeners.ChatBlock.send(player, \"commandCanceled\"); event.setCancelled(true); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/9297/buggy-version/src.main.java.net.sacredlabyrinth.Phaed.PreciousStones.listeners.PSPlayerListener.java", "BodyUseAPI": ["net.sacredlabyrinth.Phaed.PreciousStones.vectors.Field.getSettings()", "plugin.getPermissionsManager().has(net.sacredlabyrinth.Phaed.PreciousStones.listeners.Player,java.lang.String)", "field.getSettings().isCanceledCommand(event.getMessage())", "net.sacredlabyrinth.Phaed.PreciousStones.listeners.ChatBlock.send(net.sacredlabyrinth.Phaed.PreciousStones.listeners.Player,java.lang.String)"], "Fixed commit": "ed6b9d992431804645f83dfb0703898dae4a0956", "Url": "https://api.github.com/repos/SacredCoding/PreciousStones", "Date": "2013-03-15T23:59:30Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getForceFieldManager().getEnabledSourceField(player.getLocation(),FieldFlag.ALL)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (field != null) { if (field.isBlacklistedCommand(event.getMessage())) { if (!(plugin.getPermissionsManager().has(player, \"preciousstones.bypass.commandblacklist\"))) { net.sacredlabyrinth.Phaed.PreciousStones.listeners.ChatBlock.send(player, \"commandCanceled\"); event.setCancelled(true); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/9297/buggy-version/src.main.java.net.sacredlabyrinth.Phaed.PreciousStones.listeners.PSPlayerListener.java", "BodyUseAPI": ["net.sacredlabyrinth.Phaed.PreciousStones.vectors.Field.isBlacklistedCommand(event.getMessage())"], "Fixed commit": "ed6b9d992431804645f83dfb0703898dae4a0956", "Url": "https://api.github.com/repos/SacredCoding/PreciousStones", "Date": "2013-03-15T23:59:30Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((e.getBlock().getType()) == (org.bukkit.Material.SIGN)) || ((e.getBlock().getType()) == (org.bukkit.Material.WALL_SIGN))) { ca.benliam12.maze.signs.SignManager.getInstance().updateSigns(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4766/buggy-version/src.ca.benliam12.maze.listeners.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "a017a47e42c0696a81293131897cdcfe4798b698", "Url": "https://api.github.com/repos/Benliam12/Maze", "Date": "2015-05-24T18:51:28Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((biomes_hotLength) < 1) { output = chooseRandomBiome(); }else { output = chooseHotBiome(par1, par2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5059/buggy-version/src.main.java.rtg.world.biome.WorldChunkManagerRTG.java", "BodyUseAPI": [], "Fixed commit": "cba0fad7a3641e4a5f74e76921f3e6e178593aae", "Url": "https://api.github.com/repos/Team-RTG/Realistic-Terrain-Generation", "Date": "2015-10-11T21:18:53Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((wetEnabled) && (b < 0.5F)) || ((!(wetEnabled)) && (b < 0.66F))) { if ((biomes_coldLength) < 1) { output = chooseWetBiome(par1, par2); }else { output = chooseColdBiome(par1, par2); } }else if (((wetEnabled) && (b < 0.75F)) || ((!(wetEnabled)) && (b < 1.0F))) { if ((biomes_hotLength) < 1) { output = chooseRandomBiome(); }else { output = chooseHotBiome(par1, par2); } }else if (wetEnabled) { if ((biomes_wetLength) < 1) { output = chooseHotBiome(par1, par2); }else { output = chooseWetBiome(par1, par2); } }else { output = chooseRandomBiome(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5059/buggy-version/src.main.java.rtg.world.biome.WorldChunkManagerRTG.java", "BodyUseAPI": [], "Fixed commit": "cba0fad7a3641e4a5f74e76921f3e6e178593aae", "Url": "https://api.github.com/repos/Team-RTG/Realistic-Terrain-Generation", "Date": "2015-10-11T21:18:53Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((biomes_snowLength) < 1) { output = chooseColdBiome(par1, par2); }else { output = chooseSnowBiome(par1, par2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5059/buggy-version/src.main.java.rtg.world.biome.WorldChunkManagerRTG.java", "BodyUseAPI": [], "Fixed commit": "cba0fad7a3641e4a5f74e76921f3e6e178593aae", "Url": "https://api.github.com/repos/Team-RTG/Realistic-Terrain-Generation", "Date": "2015-10-11T21:18:53Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((max - min) == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2350/buggy-version/leetcode.algorithms.MaximumGap.java", "BodyUseAPI": [], "Fixed commit": "d95611a33814b7f5ae9cd7150486063e0320a515", "Url": "https://api.github.com/repos/yuanluodotnet/Coding", "Date": "2017-02-20T01:23:57Z"},
{"Line": "=>869", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.debug.ui.memory.IMemoryRenderingSite.getContainer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (container == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1409/buggy-version/plugins.org.eclipse.tcf.debug.ui.src.org.eclipse.tcf.internal.debug.ui.model.TCFMemoryBlock.java", "BodyUseAPI": [], "Fixed commit": "20923800aa77cc57641969d2c3825396a8727d76", "Url": "https://api.github.com/repos/eclipse/tcf", "Date": "2017-01-02T18:12:36Z"},
{"Line": "=>773", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectionColumnIndexList != null) { matchedRecord = new storage.model.DataRecord(); matchedRecord.setRowId(record.getRowId()); matchedRecord.setPageLocated(record.getPageLocated()); matchedRecord.setOffset(record.getOffset()); for (java.lang.Byte index : selectionColumnIndexList) { matchedRecord.getColumnValueList().add(record.getColumnValueList().get(index)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5159/buggy-version/src.storage.StorageManager.java", "BodyUseAPI": [], "Fixed commit": "d65eb08bf86b76331b046ee8b9647eee2e4b13ae", "Url": "https://api.github.com/repos/DhruvaPendharkar/DavisBase", "Date": "2017-04-17T06:24:23Z"},
{"Line": "=>1036", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getWorld().getCurrentWorm()) == (this)) { this.getWorld().startNextTurn(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8776/buggy-version/Worms.src.worms.model.Worm.java", "BodyUseAPI": [], "Fixed commit": "d2a586ac3b315b7368089501b334bbad15ad286f", "Url": "https://api.github.com/repos/joachimschreurs/absoluutnietworms", "Date": "2014-05-20T10:19:31Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (lo == null) { java.lang.System.out.println((\"You don't have the \" + object)); }else { game.getCurrentLocation().addObject(lo); java.lang.System.out.println((\"You dropped the \" + (lo.getTitle()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7114/buggy-version/src.com.seven20.inaworld.controller.GameDemo.java", "BodyUseAPI": ["game.getCurrentLocation().addObject(com.seven20.inaworld.models.LocationObject)", "java.io.PrintStream.println((\"You dropped the \" + (lo.getTitle())))", "com.seven20.inaworld.models.LocationObject.getTitle()"], "Fixed commit": "43c8c1f2b70d6b0d9d7750e53c92122774112f33", "Url": "https://api.github.com/repos/siliconmenace/InAWorld", "Date": "2015-03-10T00:52:15Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.ndhunju.dailyjournal.util.Utils.contains(excludeJournalsWithId, journal.getId()))) { temp.add(journal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8660/buggy-version/app.src.main.java.com.ndhunju.dailyjournal.database.JournalDAO.java", "BodyUseAPI": ["java.util.List<com.ndhunju.dailyjournal.model.Journal>.add(com.ndhunju.dailyjournal.model.Journal)"], "Fixed commit": "9d6887d63a80d4d9ea63ab6550f21d00faa7b62f", "Url": "https://api.github.com/repos/ndhunju/dailyJournal", "Date": "2017-09-08T04:03:12Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (conf.getBoolean(\"copyInOrOut\", false)) { for (java.lang.String sourcePath : conf.getStrings(\"sourcePaths\")) { if ((sourcePath.equals(src)) || ((src != null) && (src.contains(sourcePath)))) { if (!(src.contains(distcpToken))) { java.lang.String result = src + distcpToken; return result; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/786/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.DFSClient.java", "BodyUseAPI": ["org.apache.hadoop.conf.Configuration.getStrings(java.lang.String)"], "Fixed commit": "0e81f6b49d93406756800f54b2b925c91b4f1bbd", "Url": "https://api.github.com/repos/zhonghaihua/AIHadoop-2.5.1", "Date": "2016-12-07T05:00:29Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.isi.wings.catalog.data.classes.metrics.Metrics.getMetrics()", "java.util.regex.Matcher.group(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (propValMap.containsKey(((this.dcdomns) + key))) { for (edu.isi.wings.catalog.data.classes.metrics.Metric tmp : propValMap.get(((this.dcdomns) + key))) { if ((tmp != null) && ((tmp.getValue()) != null)) m.appendReplacement(sb, edu.isi.wings.catalog.data.classes.metrics.MetricsXMLUtil.getValueString(tmp.getValue())); else m.appendReplacement(sb, \"\"); } }else { m.appendReplacement(sb, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/446/buggy-version/planner.src.main.java.edu.isi.wings.catalog.data.api.impl.kb.DataReasoningKB.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.ArrayList<edu.isi.wings.catalog.data.classes.metrics.Metric>>.get(((this.dcdomns) + key))"], "Fixed commit": "57bb8bba512e44ed22495f8f63f38f8673458439", "Url": "https://api.github.com/repos/IKCAP/wings", "Date": "2014-09-23T23:03:02Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((survey.getAuthor()) == null) { this.setAuthor(o); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2428/buggy-version/src.menuPackage.CreateSurveyMenu.java", "BodyUseAPI": [], "Fixed commit": "c99d0de200a693c3b4043572ebbd2fee6ef7a3be", "Url": "https://api.github.com/repos/alexmarion/TestSurveySystem", "Date": "2015-11-04T04:55:38Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((survey.getTitle()) == null) { this.setTitle(o); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2428/buggy-version/src.menuPackage.CreateSurveyMenu.java", "BodyUseAPI": [], "Fixed commit": "c99d0de200a693c3b4043572ebbd2fee6ef7a3be", "Url": "https://api.github.com/repos/alexmarion/TestSurveySystem", "Date": "2015-11-04T04:55:38Z"},
{"Line": "=>1864", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((newResource.getAttach()) != null) && ((newResource.getAttach().getFilename()) != null)) { java.lang.String fileExtension = org.apache.commons.lang.StringUtils.substringAfterLast(newResource.getAttach().getFilename(), \".\"); if (fileExtension.contains(org.ednovo.gooru.domain.service.PDF)) { resource.getResourceType().setName(ResourceType.Type.HANDOUTS.getType()); }else { resource.getResourceType().setName(ResourceType.Type.IMAGE.getType()); } resource.setUrl(newResource.getAttach().getFilename()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8792/buggy-version/api.src.main.java.org.ednovo.gooru.domain.service.ScollectionServiceImpl.java", "BodyUseAPI": ["org.ednovo.gooru.core.api.model.Resource.setUrl(newResource.getAttach().getFilename())", "org.ednovo.gooru.core.api.model.Resource.getAttach()", "org.apache.commons.lang.StringUtils.substringAfterLast(newResource.getAttach().getFilename(),java.lang.String)", "newResource.getAttach().getFilename()", "org.ednovo.gooru.core.api.model.Resource.getAttach()", "newResource.getAttach().getFilename()"], "Fixed commit": "06031c59c7c6f632ecb32df0737e37d838d59a59", "Url": "https://api.github.com/repos/skpcharles/Gooru-Core-API", "Date": "2014-05-29T07:07:43Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(myOldSize.equals(mSize))) { float x = 0; for (com.github.thomasahle.trainbox.trainbox.uimodel.UIComponent child : getChildren()) { child.setPosition(new pythagoras.f.Point(x, ((height / 2) - ((child.getSize().height) / 2)))); x += child.getSize().width; } fireSizeChanged(myOldSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8039/buggy-version/core.src.main.java.com.github.thomasahle.trainbox.trainbox.uimodel.UIHorizontalComponent.java", "BodyUseAPI": ["com.github.thomasahle.trainbox.trainbox.uimodel.UIHorizontalComponent.fireSizeChanged(pythagoras.f.Dimension)"], "Fixed commit": "a5b72f63e504c68f54fda502c85cd642e76947a9", "Url": "https://api.github.com/repos/thomasahle/TrinityProject", "Date": "2012-05-12T01:19:27Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(facebookId.equals(\"\"))) { new com.facebook.GraphRequest(com.facebook.AccessToken.getCurrentAccessToken(), ((\"/\" + facebookId) + \"/permissions/\"), null, com.facebook.HttpMethod.DELETE, new com.facebook.GraphRequest.Callback() { @java.lang.Override public void onCompleted(com.facebook.GraphResponse graphResponse) { com.facebook.login.LoginManager.getInstance().logOut(); android.content.Intent intent = new android.content.Intent(getActivity(), cuexpo.cuexpo2017.activity.LoginActivity.class); startActivity(intent); getActivity().finish(); } }).executeAsync(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1420/buggy-version/ChulaExpo.app.src.main.java.cuexpo.cuexpo2017.fragment.ProfileFragment.java", "BodyUseAPI": ["com.facebook.GraphRequest.executeAsync()"], "Fixed commit": "629bd32b1aba16c3754188f4d6b172e21c7da293", "Url": "https://api.github.com/repos/CUTomorrow/chula-expo-2017", "Date": "2017-03-14T13:03:36Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((!(\"\".equalsIgnoreCase(postDate))) && (postDate != null)) { java.text.SimpleDateFormat dateformat = new java.text.SimpleDateFormat(); dateformat.applyPattern(\"yyyy-MM-dd HH:mm:ss\"); java.lang.String postDateTemp = dateformat.format(utilty.convertStringToDateTime(postDate)); taxInvoice.setPostDate(utilty.convertStringToDateTime(postDateTemp)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/368/buggy-version/src.java.com.smi.travel.controller.TaxInvoiceController.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(utilty.convertStringToDateTime(postDate))", "com.smi.travel.util.UtilityFunction.convertStringToDateTime(java.lang.String)"], "Fixed commit": "acc5b676c64718cb8096cd6344541f43489a5c3f", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-12-02T09:10:15Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.onehook.widget.OHFlowLayout.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((child.getVisibility()) == (android.view.View.GONE)) { i++; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5858/buggy-version/onehookinclibrary.src.main.java.com.onehook.widget.OHFlowLayout.java", "BodyUseAPI": [], "Fixed commit": "794fdec834d7865ca309ce7398bb118d9fa853fe", "Url": "https://api.github.com/repos/oneHook/oneHookLibraryAndroid", "Date": "2017-02-17T18:41:19Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.unconditionalFilters.size()) == 0) && ((this.typeFilters.size()) == 0)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5420/buggy-version/common.plugins.eu.esdihumboldt.hale.common.headless.src.eu.esdihumboldt.hale.common.headless.transform.filter.InstanceFilterDefinition.java", "BodyUseAPI": [], "Fixed commit": "621befa2368f71016278411e5c41832f9ea920dd", "Url": "https://api.github.com/repos/stempler/hale", "Date": "2016-07-26T11:21:43Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(category.endsWith(\"_\"))) subcategory = category.split(\"_\")[1];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7648/buggy-version/app.src.main.java.com.yuyuyzl.recomposition.AnalyzeActivity.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "473e553ba53f83d93bf15bd2048806f955865295", "Url": "https://api.github.com/repos/yuyuyzl/ReComposition", "Date": "2015-11-07T05:37:20Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((group.getOwner().equals(com.hyphenate.chat.EMClient.getInstance().getCurrentUser())) || (group.isMemberAllowToInvite())) && (position == 0)) { startActivityForResult(new android.content.Intent(this, com.hyphenate.chatuidemo.group.InviteMembersActivity.class).putExtra(\"groupId\", groupId).putExtra(\"isOwner\", isOwner).putStringArrayListExtra(\"members\", ((java.util.ArrayList<java.lang.String>) (members))), REQUEST_CODE_MEMBER_REFRESH); }else { startActivityForResult(new android.content.Intent(this, com.hyphenate.chatuidemo.group.MembersListActivity.class).putExtra(\"isOwner\", isOwner).putExtra(\"groupId\", groupId).putStringArrayListExtra(\"members\", ((java.util.ArrayList<java.lang.String>) (members))), REQUEST_CODE_MEMBER_REFRESH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6875/buggy-version/app.src.main.java.com.hyphenate.chatuidemo.group.GroupDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "41505be1871e374c19d2228915844bbe379121cd", "Url": "https://api.github.com/repos/eastrain/Hyphenate-Demo-Android", "Date": "2016-11-25T07:47:54Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.exists())) return data;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1818/buggy-version/src.main.java.com.sk89q.craftbook.sponge.util.SpongeDataCache.java", "BodyUseAPI": [], "Fixed commit": "5d3365637268986147033e0a3cda49489f439963", "Url": "https://api.github.com/repos/EngineHub/CraftBook", "Date": "2015-06-04T07:22:39Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getDB().selectContentByQuery(java.lang.String,int,int,(order == (me.devsaki.hentoid.util.ConstantsPreferences.PREF_ORDER_CONTENT_ALPHABETIC)))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((result != null) && (!(result.isEmpty()))) contents = result;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/272/buggy-version/app.src.main.java.me.devsaki.hentoid.DownloadsActivity.java", "BodyUseAPI": [], "Fixed commit": "da69fd49e9e56398628ad97ddb3fd2c67438d0c5", "Url": "https://api.github.com/repos/avluis/Hentoid", "Date": "2015-07-09T01:55:34Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(me.devsaki.hentoid.util.NetworkStatus.getInstance(this).isOnline())) throw new java.lang.Exception(\"Not connection\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/272/buggy-version/app.src.main.java.me.devsaki.hentoid.service.DownloadManagerService.java", "BodyUseAPI": [], "Fixed commit": "da69fd49e9e56398628ad97ddb3fd2c67438d0c5", "Url": "https://api.github.com/repos/avluis/Hentoid", "Date": "2015-07-09T01:55:34Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((planeDims.length) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6078/buggy-version/core.legacy.src.main.java.imagej.legacy.translate.MergedRgbVirtualStack.java", "BodyUseAPI": [], "Fixed commit": "5bdda95d3d01e5783d052c4874738d115df0a29b", "Url": "https://api.github.com/repos/imagej/imagej", "Date": "2013-05-21T15:11:35Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastPressChar) != null) lastPressChar.clicked = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4203/buggy-version/src.main.java.MainApplet.java", "BodyUseAPI": [], "Fixed commit": "83a735d3c94aec641374b63723f3d7fc29c67cb0", "Url": "https://api.github.com/repos/EvaArevalo/SoftwareStudioAssignment6", "Date": "2016-05-09T14:30:04Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (description.equals(\"\")) { param.setDescription(\"plot output param\"); }else { param.setDescription(description); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5653/buggy-version/PigGeneWebApp.src.piggene.serialisation.cloudgene.CloudgeneYamlGenerator.java", "BodyUseAPI": ["piggene.serialisation.cloudgene.WdlParameterOutput.setDescription(java.lang.String)"], "Fixed commit": "eb4fecfdfcb6bb97a48b54f3e8ef954ba0ef4dfb", "Url": "https://api.github.com/repos/genepi/pig-gene", "Date": "2015-04-24T09:24:43Z"},
{"Line": "=>863", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fr.kaplone.libgdx.Radio_Track.resultats) == null) { fr.kaplone.libgdx.Radio_Track.resultats = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4754/buggy-version/core.src.fr.kaplone.libgdx.Radio_Track.java", "BodyUseAPI": [], "Fixed commit": "006e9f5e31719b9910fd49109bd6e2d7374fe713", "Url": "https://api.github.com/repos/kaplone/Radio_track", "Date": "2017-07-30T16:15:17Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultatsPlayList) == null) { resultatsPlayList = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4754/buggy-version/core.src.fr.kaplone.libgdx.Radio_Track.java", "BodyUseAPI": [], "Fixed commit": "006e9f5e31719b9910fd49109bd6e2d7374fe713", "Url": "https://api.github.com/repos/kaplone/Radio_track", "Date": "2017-07-30T16:15:17Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (nextVarBinding.has(org.openrdf.query.resultio.sparqljson.SPARQLJSONParserBase.XMLLANG)) { language = nextVarBinding.getString(org.openrdf.query.resultio.sparqljson.SPARQLJSONParserBase.XMLLANG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/185/buggy-version/core.queryresultio.sparqljson.src.main.java.org.openrdf.query.resultio.sparqljson.SPARQLJSONParserBase.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "f9a4fcdbff8609e000df3df1c4e3835f179da726", "Url": "https://api.github.com/repos/ansell/openrdf-sesame", "Date": "2013-02-12T06:43:26Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entry.getKey().equals(PropertyType.AdminPresentation.DEFAULTVALUE)) { fieldMetadataOverride.setDefaultValue(stringValue); }else if (entry.getKey().equals(PropertyType.AdminPresentation.VALIDATIONCONFIGURATIONS)) { processValidationAnnotations(entry.getValue().validationConfigurations(), fieldMetadataOverride); }else if (entry.getKey().equals(PropertyType.AdminPresentationToOneLookup.LOOKUPDISPLAYPROPERTY)) { fieldMetadataOverride.setLookupDisplayProperty(stringValue); fieldMetadataOverride.setForeignKeyDisplayValueProperty(stringValue); }else if (entry.getKey().equals(PropertyType.AdminPresentationToOneLookup.FORCEPOPULATECHILDPROPERTIES)) { fieldMetadataOverride.setForcePopulateChildProperties((org.apache.commons.lang.StringUtils.isEmpty(stringValue) ? entry.getValue().booleanOverrideValue() : java.lang.Boolean.parseBoolean(stringValue))); }else if (entry.getKey().equals(PropertyType.AdminPresentationToOneLookup.ENABLETYPEAHEADLOOKUP)) { fieldMetadataOverride.setEnableTypeaheadLookup((org.apache.commons.lang.StringUtils.isEmpty(stringValue) ? entry.getValue().booleanOverrideValue() : java.lang.Boolean.parseBoolean(stringValue))); }else if (entry.getKey().equals(PropertyType.AdminPresentationToOneLookup.USESERVERSIDEINSPECTIONCACHE)) { fieldMetadataOverride.setUseServerSideInspectionCache((org.apache.commons.lang.StringUtils.isEmpty(stringValue) ? entry.getValue().booleanOverrideValue() : java.lang.Boolean.parseBoolean(stringValue))); }else if (entry.getKey().equals(PropertyType.AdminPresentationToOneLookup.LOOKUPTYPE)) { fieldMetadataOverride.setLookupType(org.broadleafcommerce.common.presentation.client.LookupType.valueOf(stringValue)); }else if (entry.getKey().equals(PropertyType.AdminPresentationToOneLookup.CUSTOMCRITERIA)) { fieldMetadataOverride.setCustomCriteria(entry.getValue().stringArrayOverrideValue()); }else if (entry.getKey().equals(PropertyType.AdminPresentationDataDrivenEnumeration.OPTIONLISTENTITY)) { fieldMetadataOverride.setOptionListEntity(stringValue); }else if (entry.getKey().equals(PropertyType.AdminPresentationDataDrivenEnumeration.OPTIONVALUEFIELDNAME)) { fieldMetadataOverride.setOptionValueFieldName(stringValue); }else if (entry.getKey().equals(PropertyType.AdminPresentationDataDrivenEnumeration.OPTIONDISPLAYFIELDNAME)) { fieldMetadataOverride.setOptionDisplayFieldName(stringValue); }else if (entry.getKey().equals(PropertyType.AdminPresentationDataDrivenEnumeration.OPTIONCANEDITVALUES)) { fieldMetadataOverride.setOptionCanEditValues((org.apache.commons.lang.StringUtils.isEmpty(stringValue) ? entry.getValue().booleanOverrideValue() : java.lang.Boolean.parseBoolean(stringValue))); }else if (entry.getKey().equals(PropertyType.AdminPresentationDataDrivenEnumeration.OPTIONFILTERPARAMS)) { org.broadleafcommerce.common.presentation.OptionFilterParam[] optionFilterParams = entry.getValue().optionFilterParams(); java.lang.String[][] params = new java.lang.String[optionFilterParams.length][3]; for (int j = 0; j < (params.length); j++) { params[j][0] = optionFilterParams[j].param(); params[j][1] = optionFilterParams[j].value(); params[j][2] = java.lang.String.valueOf(optionFilterParams[j].paramType()); } fieldMetadataOverride.setOptionFilterValues(params); }else { if (org.broadleafcommerce.openadmin.server.dao.provider.metadata.BasicFieldMetadataProvider.LOG.isDebugEnabled()) { org.broadleafcommerce.openadmin.server.dao.provider.metadata.BasicFieldMetadataProvider.LOG.debug(((\"Unrecognized type: \" + (entry.getKey())) + \". Not setting on basic field.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/84/buggy-version/admin.broadleaf-open-admin-platform.src.main.java.org.broadleafcommerce.openadmin.server.dao.provider.metadata.BasicFieldMetadataProvider.java", "BodyUseAPI": ["entry.getKey().equals(PropertyType.AdminPresentationToOneLookup.FORCEPOPULATECHILDPROPERTIES)", "entry.getKey().equals(PropertyType.AdminPresentationDataDrivenEnumeration.OPTIONDISPLAYFIELDNAME)", "entry.getKey().equals(PropertyType.AdminPresentationDataDrivenEnumeration.OPTIONVALUEFIELDNAME)", "java.util.Map.Entry<java.lang.String, org.broadleafcommerce.common.presentation.override.AdminPresentationMergeEntry>.getKey()", "java.util.Map.Entry<java.lang.String, org.broadleafcommerce.common.presentation.override.AdminPresentationMergeEntry>.getKey()", "java.util.Map.Entry<java.lang.String, org.broadleafcommerce.common.presentation.override.AdminPresentationMergeEntry>.getValue()", "org.broadleafcommerce.openadmin.server.dao.provider.metadata.BasicFieldMetadataProvider.processValidationAnnotations(entry.getValue().validationConfigurations(),org.broadleafcommerce.openadmin.dto.override.FieldMetadataOverride)", "entry.getKey().equals(PropertyType.AdminPresentationToOneLookup.ENABLETYPEAHEADLOOKUP)", "entry.getValue().booleanOverrideValue()", "entry.getValue().booleanOverrideValue()", "java.util.Map.Entry<java.lang.String, org.broadleafcommerce.common.presentation.override.AdminPresentationMergeEntry>.getKey()", "org.broadleafcommerce.openadmin.dto.override.FieldMetadataOverride.setUseServerSideInspectionCache((org.apache.commons.lang.StringUtils.isEmpty(stringValue) ? entry.getValue().booleanOverrideValue() : java.lang.Boolean.parseBoolean(stringValue)))", "java.util.Map.Entry<java.lang.String, org.broadleafcommerce.common.presentation.override.AdminPresentationMergeEntry>.getKey()", "java.util.Map.Entry<java.lang.String, org.broadleafcommerce.common.presentation.override.AdminPresentationMergeEntry>.getValue()", "entry.getKey().equals(PropertyType.AdminPresentation.VALIDATIONCONFIGURATIONS)", "java.util.Map.Entry<java.lang.String, org.broadleafcommerce.common.presentation.override.AdminPresentationMergeEntry>.getValue()", "java.util.Map.Entry<java.lang.String, org.broadleafcommerce.common.presentation.override.AdminPresentationMergeEntry>.getKey()", "entry.getKey().equals(PropertyType.AdminPresentationToOneLookup.LOOKUPTYPE)", "java.util.Map.Entry<java.lang.String, org.broadleafcommerce.common.presentation.override.AdminPresentationMergeEntry>.getKey()", "java.util.Map.Entry<java.lang.String, org.broadleafcommerce.common.presentation.override.AdminPresentationMergeEntry>.getKey()", "entry.getValue().validationConfigurations()", "java.util.Map.Entry<java.lang.String, org.broadleafcommerce.common.presentation.override.AdminPresentationMergeEntry>.getValue()", "entry.getKey().equals(PropertyType.AdminPresentationToOneLookup.CUSTOMCRITERIA)", "entry.getKey().equals(PropertyType.AdminPresentationDataDrivenEnumeration.OPTIONCANEDITVALUES)", "entry.getKey().equals(PropertyType.AdminPresentationDataDrivenEnumeration.OPTIONLISTENTITY)", "entry.getKey().equals(PropertyType.AdminPresentationToOneLookup.LOOKUPDISPLAYPROPERTY)", "org.broadleafcommerce.openadmin.dto.override.FieldMetadataOverride.setOptionCanEditValues((org.apache.commons.lang.StringUtils.isEmpty(stringValue) ? entry.getValue().booleanOverrideValue() : java.lang.Boolean.parseBoolean(stringValue)))", "java.util.Map.Entry<java.lang.String, org.broadleafcommerce.common.presentation.override.AdminPresentationMergeEntry>.getKey()", "java.util.Map.Entry<java.lang.String, org.broadleafcommerce.common.presentation.override.AdminPresentationMergeEntry>.getValue()", "java.util.Map.Entry<java.lang.String, org.broadleafcommerce.common.presentation.override.AdminPresentationMergeEntry>.getKey()", "entry.getValue().optionFilterParams()", "entry.getValue().stringArrayOverrideValue()", "org.apache.commons.logging.Log.debug(((\"Unrecognized type: \" + (entry.getKey())) + \". Not setting on basic field.\"))", "org.broadleafcommerce.openadmin.dto.override.FieldMetadataOverride.setEnableTypeaheadLookup((org.apache.commons.lang.StringUtils.isEmpty(stringValue) ? entry.getValue().booleanOverrideValue() : java.lang.Boolean.parseBoolean(stringValue)))", "java.util.Map.Entry<java.lang.String, org.broadleafcommerce.common.presentation.override.AdminPresentationMergeEntry>.getKey()", "org.broadleafcommerce.openadmin.dto.override.FieldMetadataOverride.setCustomCriteria(entry.getValue().stringArrayOverrideValue())", "entry.getValue().booleanOverrideValue()", "java.util.Map.Entry<java.lang.String, org.broadleafcommerce.common.presentation.override.AdminPresentationMergeEntry>.getKey()", "java.util.Map.Entry<java.lang.String, org.broadleafcommerce.common.presentation.override.AdminPresentationMergeEntry>.getKey()", "entry.getValue().booleanOverrideValue()", "entry.getKey().equals(PropertyType.AdminPresentationDataDrivenEnumeration.OPTIONFILTERPARAMS)", "org.broadleafcommerce.openadmin.dto.override.FieldMetadataOverride.setForcePopulateChildProperties((org.apache.commons.lang.StringUtils.isEmpty(stringValue) ? entry.getValue().booleanOverrideValue() : java.lang.Boolean.parseBoolean(stringValue)))", "java.util.Map.Entry<java.lang.String, org.broadleafcommerce.common.presentation.override.AdminPresentationMergeEntry>.getKey()", "entry.getKey().equals(PropertyType.AdminPresentationToOneLookup.USESERVERSIDEINSPECTIONCACHE)", "java.util.Map.Entry<java.lang.String, org.broadleafcommerce.common.presentation.override.AdminPresentationMergeEntry>.getValue()", "java.util.Map.Entry<java.lang.String, org.broadleafcommerce.common.presentation.override.AdminPresentationMergeEntry>.getValue()"], "Fixed commit": "b4d47525b3c4497cc004f19a0771ee85e7d52242", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2015-05-26T13:25:18Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (val < 0) { val = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7298/buggy-version/src.haven.Tempers.java", "BodyUseAPI": [], "Fixed commit": "9a44d0d9a1efe880a56ebaef8b0da4e80db09e5e", "Url": "https://api.github.com/repos/EnderWiggin/Custom-Salem", "Date": "2012-11-05T16:13:21Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((int) (results[1])) == 0) { gpsAxis[0] = results[0]; }else { gpsAxis[0] = -(results[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8193/buggy-version/android.src.com.google.zxing.client.android.CaptureActivity.java", "BodyUseAPI": [], "Fixed commit": "5fcde9ba9fe9473f2d4115b27bbe1dbfd1add286", "Url": "https://api.github.com/repos/wasn-lab/visual-positioning", "Date": "2013-06-12T15:21:47Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((int) (results[1])) == 89) { gpsAxis[1] = results[0]; }else { gpsAxis[1] = -(results[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8193/buggy-version/android.src.com.google.zxing.client.android.CaptureActivity.java", "BodyUseAPI": [], "Fixed commit": "5fcde9ba9fe9473f2d4115b27bbe1dbfd1add286", "Url": "https://api.github.com/repos/wasn-lab/visual-positioning", "Date": "2013-06-12T15:21:47Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getDnf()) { return 1000000L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5099/buggy-version/src.se.gsc.stenmark.gscenduro.compmanagement.StageResult.java", "BodyUseAPI": [], "Fixed commit": "6d0e612601da07c2da3ea4242dd3c163c30d62b8", "Url": "https://api.github.com/repos/stenmark/GSCSportIdentEnduro", "Date": "2015-08-31T20:10:22Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getDataProvider().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (data != null) onItemClick(data);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3012/buggy-version/library.src.main.java.com.kimeeo.kAndroid.listViews.recyclerView.BaseRecyclerView.java", "BodyUseAPI": ["com.kimeeo.kAndroid.listViews.recyclerView.BaseRecyclerView.onItemClick(java.lang.Object)"], "Fixed commit": "25219be9be9d47e413440090602ae75cd82b06ca", "Url": "https://api.github.com/repos/kimeeo/KAndroid_ListView", "Date": "2016-05-19T13:36:27Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (fractionPart < 10) { fractionPart = fractionPart * 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8330/buggy-version/src.main.java.mvc.model.Amount.java", "BodyUseAPI": [], "Fixed commit": "82ee06211cfdd969209e6953336078e01aaa4702", "Url": "https://api.github.com/repos/spoonless/epsi-poei-exomvc", "Date": "2017-05-30T08:45:55Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mlat.Parser.getStopwordsFromFile()", "java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(com.mlat.LDAFormatter.vocabs.contains(word))) && (!(stopwords.contains(word)))) { com.mlat.LDAFormatter.vocabs.add(word); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5091/buggy-version/aspie-parser.src.com.mlat.LDAFormatter.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "1a34e4a40d46ce928ff02e2e8319c046ce941cec", "Url": "https://api.github.com/repos/asatchison/MLATaspiecentral", "Date": "2016-03-26T16:56:42Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(session.isNew())) { url = \"/WEB-INF/menu.jsp\"; }else { error = \"Usuario y/o contrase\u00f1a inv\u00e1lido\"; request.setAttribute(\"error\", error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2777/buggy-version/src.java.controllers.AuthenticationController.java", "BodyUseAPI": [], "Fixed commit": "1b1804383feb5feff2600782f4052f6b7debc63f", "Url": "https://api.github.com/repos/agvaldezc/ProyectoDAW", "Date": "2016-04-28T15:26:48Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.common.ConnectionResult.getErrorMessage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (error == null) error = connectionResult.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1273/buggy-version/app.src.main.java.nl.rsdt.japp.jotial.maps.locations.LocationProviderService.java", "BodyUseAPI": [], "Fixed commit": "c5ace0b7061932adf127da26300960650ae13940", "Url": "https://api.github.com/repos/RSDT/Japp16", "Date": "2016-10-08T13:22:35Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.samtools.SAMRecord.getReadName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (readName.contains(\"00460:01294\")) { int y = 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6672/buggy-version/src.main.java.operator.bcrabl.CisTransClassifier.java", "BodyUseAPI": [], "Fixed commit": "50865961f31a8ce08cb8203b36a3008dcbdf6d65", "Url": "https://api.github.com/repos/ARUP-NGS/Pipeline", "Date": "2014-09-16T17:16:05Z"},
{"Line": "=>667", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.IItem.getTag()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (iData != null) { iData.setExpirationDate(expire); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1881/buggy-version/src.gui.inventory.InventoryController.java", "BodyUseAPI": ["gui.inventory.ItemData.setExpirationDate(java.util.Date)"], "Fixed commit": "c4a91065df2aa33f81b0c23dff4ec2b2d5b3273e", "Url": "https://api.github.com/repos/djhaskin987/snake", "Date": "2013-11-20T02:59:48Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((threadPool) != null) { threadPool.execute(taskRunner, taskRunner.getThreadName()); }else { org.araqne.logdb.query.engine.QueryTaskRunner runner = new org.araqne.logdb.query.engine.QueryTaskRunner(this, task); java.lang.Thread t = new java.lang.Thread(runner, runner.getThreadName()); t.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7424/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.engine.QueryTaskScheduler.java", "BodyUseAPI": [], "Fixed commit": "f65cd639efebb6507a8cef97a9a29a52728a5ca1", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2016-03-28T12:07:56Z"},
{"Line": "=>658", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (min == null) { log.warn(\"No valid leftover found\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5520/buggy-version/src.main.java.com.floragunn.searchguard.configuration.PrivilegesInterceptorImpl.java", "BodyUseAPI": [], "Fixed commit": "168ccf4590ea82bf2da9cbaab9eab948ded1c11d", "Url": "https://api.github.com/repos/floragunncom/search-guard-module-kibana-multitenancy", "Date": "2017-06-30T18:49:01Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cmd.matches(\"FS\\\\d\\\\d\")) { int fileNum = java.lang.Integer.parseInt(cmd.substring(2, 3)); Hdd.seekCursor(fileNum, java.lang.Integer.parseInt(cmd.substring(3, 4))); (RM.ic)++; }else if (cmd.matches(\"W\\\\d\\\\d\\\\d\")) { int counter = 0; int fileNum = java.lang.Integer.parseInt(cmd.substring(1, 2)); if ((RM.chstHdd) == 0) { RM.chstHdd = 1; RM.si[0] = '1'; counter = java.lang.Integer.parseInt(cmd.substring(2, 4)); RM.r2.setString(cmd.substring(2, 4)); }else if ((((RM.chstHdd) == 1) && ((java.lang.Integer.parseInt(RM.r2.getString())) != 0)) && ((RM.mode) == '1')) { counter = RM.r2.getInt(); if ((Processing.isNumeric(RM.r1.getString())) && (counter != 0)) { int adrToReadFrom = java.lang.Integer.parseInt(RM.r1.getString()); java.lang.String valToWrite; valToWrite = Memory.getFromVirtualAddress(adrToReadFrom); Hdd.writeToFile(fileNum, valToWrite); RM.r1.setInt(((RM.r1.getInt()) + 1)); RM.r2.setInt((counter - 1)); } if (((RM.chstHdd) == 1) && ((RM.r2.getInt()) == 0)) { RM.chstHdd = 0; (RM.ic)++; } } }else if (cmd.matches(\"R\\\\d\\\\d\\\\d\")) { int counter = 0; int fileNum = java.lang.Integer.parseInt(cmd.substring(1, 2)); if ((RM.chstHdd) == 0) { RM.chstHdd = 1; RM.si[1] = '1'; counter = java.lang.Integer.parseInt(cmd.substring(2, 4)); RM.r2.setString(cmd.substring(2, 4)); }else if ((((RM.chstHdd) == 1) && ((java.lang.Integer.parseInt(RM.r2.getString())) != 0)) && ((RM.mode) == '1')) { counter = RM.r2.getInt(); if ((Processing.isNumeric(RM.r1.getString())) && (counter != 0)) { int adrToWrite = java.lang.Integer.parseInt(RM.r1.getString()); java.lang.String valToWrite; valToWrite = Hdd.readFromFile(fileNum); Memory.writeToVirtualAddress(adrToWrite, valToWrite); RM.r1.setInt(((RM.r1.getInt()) + 1)); RM.r2.setInt((counter - 1)); } if (((RM.chstHdd) == 1) && ((RM.r2.getInt()) == 0)) { RM.chstHdd = 0; (RM.ic)++; } } }else if (cmd.matches(\"HALT\")) { for (int i = 0; i < (RM.si.length); i++) { RM.si[i] = '9'; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3417/buggy-version/src.Processing.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.Integer.parseInt(java.lang.String)", "Hdd.seekCursor(int,int)", "java.lang.String.matches(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.substring(int,int)", "RM.r2.setString(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.matches(java.lang.String)", "java.lang.String.matches(java.lang.String)", "RM.r2.setString(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "4f1ad0f1b4e7f761a1a69197da448eb26f7ea4f1", "Url": "https://api.github.com/repos/emaszs/VMEmu", "Date": "2014-03-24T11:23:32Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.bukkit.Bukkit.getPluginManager().getPlugin(\"ProtocolLib\")) != null) { java.lang.System.out.println(\"This plugin is not compatible with protocol lib.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1612/buggy-version/src.main.java.us.myles.ViaVersion.Core.java", "BodyUseAPI": [], "Fixed commit": "e885a1cec2a3c1cd4a5d6c8995ff8f40dabf1e7d", "Url": "https://api.github.com/repos/Mystalion/ViaVersion", "Date": "2016-02-29T20:35:50Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.myles.ViaVersion.metadata.EntityType.getEntityClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (entityClass == null) { java.lang.System.out.println((\"Could not get entity class for \" + type)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1612/buggy-version/src.main.java.us.myles.ViaVersion.metadata.MetaIndex.java", "BodyUseAPI": [], "Fixed commit": "e885a1cec2a3c1cd4a5d6c8995ff8f40dabf1e7d", "Url": "https://api.github.com/repos/Mystalion/ViaVersion", "Date": "2016-02-29T20:35:50Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (waitTime > 0) { try { java.lang.Thread.sleep(waitTime); } catch (java.lang.InterruptedException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5717/buggy-version/sensorhub-service-swe.src.main.java.org.sensorhub.impl.service.sos.StorageDataProvider.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "5ad3769e5eeb195ae4db33490e65501d7105b05f", "Url": "https://api.github.com/repos/mikebotts/sensorhub", "Date": "2015-02-14T00:52:02Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key >= (map.length)) { java.lang.StringBuilder[] map2 = new java.lang.StringBuilder[key + 1]; for (int i = 0; i < (map.length); i++) { map2[i] = map[i]; } map = map2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8081/buggy-version/mustard.src.main.java.org.data2semantics.mustard.weisfeilerlehman.MapLabel.java", "BodyUseAPI": [], "Fixed commit": "2007b0a069c8bb36ce3d38f49ee5f4a564715791", "Url": "https://api.github.com/repos/Data2Semantics/mustard", "Date": "2014-12-05T12:15:20Z"},
{"Line": "=>1031", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (id.startsWith(\"Merged_GPRN\")) { id = id.substring(8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8854/buggy-version/src.edu.ucdenver.ccp.PhenoGen.tools.analysis.GeneDataTools.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "bb916dee7077a7e5328fac8116513a4b65c6921d", "Url": "https://api.github.com/repos/TabakoffLab/PhenoGen", "Date": "2017-06-07T15:59:28Z"},
{"Line": "=>1591", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kutch.biff.marvin.configuration.Configuration.getHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (0 == screenHeight) { screenHeight = kutch.biff.marvin.widget.BaseWidget.CONFIG.getCreationHeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/654/buggy-version/Marvin.src.main.java.kutch.biff.marvin.widget.BaseWidget.java", "BodyUseAPI": [], "Fixed commit": "52cf7bc852b8c1f3a7359efb9aca17406e208a08", "Url": "https://api.github.com/repos/intel/Board-Instrumentation-Framework", "Date": "2017-12-24T23:16:44Z"},
{"Line": "=>1554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kutch.biff.marvin.configuration.Configuration.getWidth()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (0 == screenWidth) { screenWidth = kutch.biff.marvin.widget.BaseWidget.CONFIG.getCreationWidth(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/654/buggy-version/Marvin.src.main.java.kutch.biff.marvin.widget.BaseWidget.java", "BodyUseAPI": [], "Fixed commit": "52cf7bc852b8c1f3a7359efb9aca17406e208a08", "Url": "https://api.github.com/repos/intel/Board-Instrumentation-Framework", "Date": "2017-12-24T23:16:44Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (serial == null) { serial = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/9259/buggy-version/oshi-core.src.main.java.oshi.hardware.platform.mac.MacDisks.java", "BodyUseAPI": [], "Fixed commit": "96237b156e9eb7d9e182c21f0d97ae9c2ae6e801", "Url": "https://api.github.com/repos/dbwiddis/oshi", "Date": "2016-07-02T15:49:11Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cityelf.model.ShutdownReportRequest.getShutdownReport()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(\"Water, Gas, Electricity\".contains(shutdownReport.getForecastType()))) { throw new com.cityelf.exceptions.WrongForecastTypeException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2249/buggy-version/src.main.java.com.cityelf.service.ShutdownReportService.java", "BodyUseAPI": [], "Fixed commit": "c533766230f0e1e8da12d3c1ecae10056efd3cec", "Url": "https://api.github.com/repos/YaroslavSalomatkin/CityElf", "Date": "2017-08-03T15:28:06Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (petablox.project.Config.populate) domsMap = newDomNdxMap; else domsMap = domNdxMap;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4390/buggy-version/src.petablox.project.analyses.DlogAnalysis.java", "BodyUseAPI": [], "Fixed commit": "212e010357c5484f36cc17c60279f6ef88899f98", "Url": "https://api.github.com/repos/petablox-project/petablox", "Date": "2016-04-15T19:23:40Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (petablox.project.Config.populate) dom = domTagged.substring(Config.multiTag.length()); else dom = domTagged;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4390/buggy-version/src.petablox.project.analyses.DlogAnalysis.java", "BodyUseAPI": [], "Fixed commit": "212e010357c5484f36cc17c60279f6ef88899f98", "Url": "https://api.github.com/repos/petablox-project/petablox", "Date": "2016-04-15T19:23:40Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.collections4.CollectionUtils.isEmpty(sale.getSaleDetails())) { edu.utn.gestion.service.SaleService.LOGGER.error(\"Cannot save an empty sale.\"); throw new edu.utn.gestion.exception.GestionAppException(\"Cannot save an empty sale.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6540/buggy-version/src.main.java.edu.utn.gestion.service.SaleService.java", "BodyUseAPI": [], "Fixed commit": "aa0ab0203c451c11ffbba17f98c71fa30ebf06a3", "Url": "https://api.github.com/repos/gmroldan/utn-gestion-final", "Date": "2016-08-08T05:23:23Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ocs.dynamo.dao.query.JpaQueryBuilder.createPredicate(filters.remove(0),javax.persistence.criteria.CriteriaBuilder,javax.persistence.criteria.Root<?>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (next != null) { predicate = builder.or(predicate, next); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5449/buggy-version/dynamo-spring.src.main.java.com.ocs.dynamo.dao.query.JpaQueryBuilder.java", "BodyUseAPI": ["javax.persistence.criteria.CriteriaBuilder.or(javax.persistence.criteria.Predicate,javax.persistence.criteria.Predicate)"], "Fixed commit": "96d5a6eb55594afc4bffd834b1d9d3c9dc117f27", "Url": "https://api.github.com/repos/opencirclesolutions/dynamo", "Date": "2016-07-20T09:08:51Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (applicationService.getModel().getTrainTypes().isEmpty()) { org.eclipse.swt.widgets.MessageBox errorMessageBox = new org.eclipse.swt.widgets.MessageBox(new org.eclipse.swt.widgets.Shell(), org.eclipse.swt.SWT.ICON_ERROR); errorMessageBox.setText(I18N.getMessage(\"AllSchedulesComposite.ErrorTitle\")); errorMessageBox.setMessage(I18N.getMessage(\"MainWindow.Error.NoTrainTypes\")); errorMessageBox.open(); }else { de.atlassoft.ui.ScheduleComposite scheduleComposite = new de.atlassoft.ui.ScheduleComposite(shell, mainComposite, layout, applicationService); layout.topControl = scheduleComposite.getComposite(); mainComposite.layout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3244/buggy-version/NodeAnimator.src.de.atlassoft.ui.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "127939596e1b1291cdc8e9130b8deefdbd171362", "Url": "https://api.github.com/repos/ATLASsoft/SoPra", "Date": "2013-07-03T21:35:43Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, net.blay09.mods.craftingtweaks.CraftingTweaks.ModSupportState>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (suportState == null) { suportState = net.blay09.mods.craftingtweaks.CraftingTweaks.ModSupportState.ENABLED; configMap.put(modId, suportState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/9262/buggy-version/src.main.java.net.blay09.mods.craftingtweaks.CraftingTweaks.java", "BodyUseAPI": [], "Fixed commit": "2a6464012799d7aa72fed9b785854e03146bda21", "Url": "https://api.github.com/repos/blay09/CraftingTweaks", "Date": "2015-11-01T22:36:59Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geppetto.core.model.runtime.AspectNode.getSimulator()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (simulator != null) { simulator.populateVisualTree(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7012/buggy-version/src.main.java.org.geppetto.simulation.visitor.PopulateVisualTreeVisitor.java", "BodyUseAPI": ["org.geppetto.core.simulator.ISimulator.populateVisualTree(org.geppetto.core.model.runtime.AspectNode)"], "Fixed commit": "4a952912e76e04a85ee6256d4d6edd393083990b", "Url": "https://api.github.com/repos/openworm/org.geppetto.simulation", "Date": "2014-08-06T21:52:24Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(query.isSearchBySpace())) { java.util.Set<com.stratelia.webactiv.searchEngine.model.ExternalComponent> extSearchers = query.getExtComponents(); for (com.stratelia.webactiv.searchEngine.model.ExternalComponent externalComponent : extSearchers) { java.lang.String externalComponentPath = getExternalComponentPath(externalComponent); com.stratelia.webactiv.searchEngine.model.Searcher searcher = getSearcher(externalComponentPath); if (searcher != null) { searcherList.add(searcher); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1275/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.searchEngine.model.WAIndexSearcher.java", "BodyUseAPI": ["com.stratelia.webactiv.searchEngine.model.QueryDescription.getExtComponents()"], "Fixed commit": "4684d4ed2153315f36c203cc7371a3bc22cadbe4", "Url": "https://api.github.com/repos/ebonnet/Silverpeas-Core", "Date": "2012-05-16T13:29:12Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(user)) { mLoginView.showToast(R.string.mvp_demo_activity_please_enter_username); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4711/buggy-version/app.src.main.java.yhh.blog.samples.mvp.presenter.LoginPresenter.java", "BodyUseAPI": [], "Fixed commit": "26fd86031bde08a2daf641620a492d6c7cd8a85e", "Url": "https://api.github.com/repos/s011208/BlogSamples", "Date": "2017-09-15T05:28:25Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(password)) { mLoginView.showToast(R.string.mvp_demo_activity_please_enter_password); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4711/buggy-version/app.src.main.java.yhh.blog.samples.mvp.presenter.LoginPresenter.java", "BodyUseAPI": [], "Fixed commit": "26fd86031bde08a2daf641620a492d6c7cd8a85e", "Url": "https://api.github.com/repos/s011208/BlogSamples", "Date": "2017-09-15T05:28:25Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (message != null) { messageDao.insert(message); if ((message.getType()) == (sw.server.Message.MessageType.ALARM)) { }else { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2042/buggy-version/src.sw.server.Server.java", "BodyUseAPI": ["sw.server.db.MessageDao.insert(sw.server.Message)", "sw.server.Message.getType()"], "Fixed commit": "115904624b8929ad82de7626275c3bdaeb051f42", "Url": "https://api.github.com/repos/ezet/sheep-watch-server", "Date": "2012-10-01T14:53:54Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.site.indexOf(\"://\")) == (-1)) { this.site = \"http://\" + (this.site); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2565/buggy-version/DataExtractionOSM.src.net.osmand.data.Amenity.java", "BodyUseAPI": [], "Fixed commit": "b140cd3616db74a5ee5f8584cab4b2efef345fd0", "Url": "https://api.github.com/repos/njethanandani/Osmand", "Date": "2012-08-07T08:23:30Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Set<org.onebusaway.gtfs.model.calendar.ServiceDate>.toArray(org.onebusaway.gtfs.model.calendar.ServiceDate[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((serviceDateArray.length) > 0) { endDate = serviceDateArray[((serviceDateArray.length) - 1)].getAsDate(); org.onebusaway.watchdog.api.schedule.AgencyResource.agencyEndDateMap.put(agencyId, endDate); }else { endDate = new java.util.Date(0L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8000/buggy-version/onebusaway-watchdog-webapp.src.main.java.org.onebusaway.watchdog.api.schedule.AgencyResource.java", "BodyUseAPI": ["serviceDateArray[((serviceDateArray.length) - 1)].getAsDate()"], "Fixed commit": "3037d6b48e7ade3d2c49d15c9f6a80c7ac059c9f", "Url": "https://api.github.com/repos/camsys/onebusaway-application-modules", "Date": "2015-04-01T19:40:48Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.body().getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((dataBeans != null) && (!(dataBeans.isEmpty()))) { for (com.shall.pojo.Datum datum : dataBeans) { descriptions.add(datum.getNotification().getDescription()); adapter.notifyDataSetChanged(); recyclerView.setAdapter(adapter); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/9233/buggy-version/app.src.main.java.com.shall.user.notification.NotificationFragment.java", "BodyUseAPI": [], "Fixed commit": "dc289187e6c0addc5c9d52d48fd342cd943a1aba", "Url": "https://api.github.com/repos/mshall/SchoolIS", "Date": "2017-05-28T21:16:51Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.java.decompiler.modules.decompiler.PrimitiveExprsList.getStack()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((stack.getByOffset((-1)).getExprType().stackSize) == 1) { stack.pop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/9301/buggy-version/src.org.jetbrains.java.decompiler.modules.decompiler.ExprProcessor.java", "BodyUseAPI": ["org.jetbrains.java.decompiler.modules.decompiler.ExprentStack.pop()"], "Fixed commit": "e7854376b8a6225403943290d5d57d26bffa119b", "Url": "https://api.github.com/repos/fesh0r/fernflower", "Date": "2017-10-18T06:43:38Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type instanceof java.lang.reflect.GenericArrayType) return com.openpojo.reflection.java.type.Resolver.GENERIC_ARRAY_TYPE_RESOLVER;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1812/buggy-version/src.main.java.com.openpojo.reflection.java.type.Resolver.java", "BodyUseAPI": [], "Fixed commit": "bfe3e00c81e3013665012a890f26dc3ead86fea5", "Url": "https://api.github.com/repos/OpenPojo/openpojo", "Date": "2015-10-16T23:59:12Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sourcepit.common.utils.zip.EntryCountBasedZipPartitioner.computeNumberOfPartitions(int,int,int)", "org.sourcepit.common.utils.zip.EntryCountBasedZipPartitioner.getNumberOfEntries(org.sourcepit.common.utils.zip.ZipInputStreamFactory)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((numberOfPartitions * jobsSize) + leftover) != numberOfEntries) { throw new java.lang.IllegalStateException(((((((\"Invalid zip partition computation ( entries \" + numberOfEntries) + \", partitions \") + numberOfPartitions) + \", leftover \") + leftover) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2422/buggy-version/src.main.java.org.sourcepit.common.utils.zip.EntryCountBasedZipPartitioner.java", "BodyUseAPI": [], "Fixed commit": "d2b64c755c234b8bfc5060df69f72e6eecf51064", "Url": "https://api.github.com/repos/sourcepit/common-utils", "Date": "2012-08-17T11:42:23Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.core.context.Context.getProperty(Context.REPOSITORY_CONTEXT_KEY)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (repositoryContext == null) { repositoryContext = new org.talend.core.context.RepositoryContext(); ctx.putProperty(Context.REPOSITORY_CONTEXT_KEY, repositoryContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6094/buggy-version/main.plugins.org.talend.repository.src.main.java.org.talend.repository.ui.login.LoginHelper.java", "BodyUseAPI": [], "Fixed commit": "9f85d818d3f5b2ea26a855cf426f40a99fd5dd44", "Url": "https://api.github.com/repos/pbailly/tdi-studio-se", "Date": "2015-12-08T04:25:39Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ngrinder.agent.service.autoscale.DockerClient.inspectContainer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(containerInfo.config().env().contains((\"CONTROLLER_ADDR=\" + (controllerUrl))))) { dockerClient.removeContainer(containerId); org.ngrinder.agent.service.autoscale.AgentAutoScaleDockerClient.LOG.error(\"Wrong CONTROLLER_ADDR ADDR {}. Create New One with {}\", machineName, controllerUrl); throw new org.ngrinder.agent.service.autoscale.ContainerNotFoundException(\"Wrong CONTROLLER_ADDR ADDR. Create New One\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/9245/buggy-version/ngrinder-controller.src.main.java.org.ngrinder.agent.service.autoscale.AgentAutoScaleDockerClient.java", "BodyUseAPI": [], "Fixed commit": "5c6e0985e735eeb5c1f304fc5a92e196d3d2af29", "Url": "https://api.github.com/repos/SRCB-Cloud-Part/ngrinder", "Date": "2015-08-31T04:09:53Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entities) != null) entities.remove(entityId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1451/buggy-version/src.main.java.ilarkesto.gwt.client.ADataTransferObject.java", "BodyUseAPI": [], "Fixed commit": "3fb6859c995aa0177ea58ed3e63219538fa0bc0b", "Url": "https://api.github.com/repos/Kunagi/ilarkesto", "Date": "2014-07-14T09:36:43Z"},
{"Line": "=>748", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((track.has_Parameter(Consts.VCF_HEADER_SAMPLE)) && ((((FileReaders.VcfSample) (track.get_Parameter(Consts.VCF_HEADER_SAMPLE))).getSamplesNum()) == 1)) && (ele_temp.hasAttribute(Consts.XML_TAG_SUPERID))) && (!(ele_temp.getAttribute(Consts.XML_TAG_ID).equals(track.get_ID())))) { ele_temp.removeAttribute(Consts.XML_TAG_SUPERID); ele_temp.setAttribute(Consts.XML_TAG_ID, track.get_ID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3062/buggy-version/FileReaders.Instance.java", "BodyUseAPI": ["org.w3c.dom.Element.removeAttribute(Consts.XML_TAG_SUPERID)", "org.w3c.dom.Element.setAttribute(Consts.XML_TAG_ID,track.get_ID())", "FileReaders.Annotations.get_ID()"], "Fixed commit": "180bb2a314348dc5fb53b9994f2396eca3cf3600", "Url": "https://api.github.com/repos/ljuan/gbhit", "Date": "2013-06-23T14:44:59Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(this.sortedRows.containsKey(0L))) { this.sortedRows.put(0L, com.google.common.collect.Lists.<org.apache.kylin.metadata.tuple.ITuple>newArrayList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2589/buggy-version/storage.src.main.java.org.apache.kylin.storage.cache.StreamSQLResult.java", "BodyUseAPI": [], "Fixed commit": "aa83e3d3066fc5bff3f4d482a8e3af9418c1460f", "Url": "https://api.github.com/repos/KylinOLAP/Kylin", "Date": "2015-05-14T05:57:31Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.view.ViewGroup) (com.abs104a.mperwithsideproject.viewctl.ViewPagerForEqualizerViewCtl.fftView.getParent())).findViewById(R.id.imageview_equalizer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((imageView != null) && ((imageView.getDrawable()) == null)) com.abs104a.mperwithsideproject.viewctl.ViewPagerForEqualizerViewCtl.oldAlbumName = new java.lang.String();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/428/buggy-version/src.com.abs104a.mperwithsideproject.viewctl.ViewPagerForEqualizerViewCtl.java", "BodyUseAPI": [], "Fixed commit": "f59dcb452dd0e92038d212520fb2b138625a56f0", "Url": "https://api.github.com/repos/ABS104a/MPerWithSideProject", "Date": "2015-01-05T08:19:56Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (ex != null) { logger.error(\"\", ex); isSuccess = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2533/buggy-version/server.src.main.java.org.fastcatsearch.job.management.UpdateCollectionConfigJob.java", "BodyUseAPI": ["org.fastcatsearch.job.management.UpdateCollectionConfigJob.error(java.lang.String,java.lang.Exception)"], "Fixed commit": "e1e3424a227dc7b0cdd2c71da8939e13d12c145e", "Url": "https://api.github.com/repos/gncloud/fastcatsearch", "Date": "2015-04-01T00:39:01Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.tablero[j][i]) == (this.tablero[(j + 1)][i])) { cantidadDeFichasContiguas++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/801/buggy-version/src.juego.CuatroEnLinea.java", "BodyUseAPI": [], "Fixed commit": "920761654fe45be9b5865c9d501b6ed0072e271a", "Url": "https://api.github.com/repos/blroot/tp-cuatro-en-linea", "Date": "2016-11-05T17:18:22Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (year == 0) { setBirthday(null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8670/buggy-version/app.src.main.java.com.framgia.wsm.screen.updateprofile.UpdateProfileViewModel.java", "BodyUseAPI": [], "Fixed commit": "9a6138ec3b8388d15f6c21769bf0fed7466258a0", "Url": "https://api.github.com/repos/nguyenhuy95dn/wsm_android", "Date": "2017-08-23T06:14:06Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentAgeEmployee > (com.framgia.wsm.screen.updateprofile.UpdateProfileViewModel.AGE_EIGHTEEN)) { java.lang.String date = formatDate(com.framgia.wsm.utils.common.DateTimeUtils.convertDateToString(year, month, dayOfMonth)); setBirthday(date); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8670/buggy-version/app.src.main.java.com.framgia.wsm.screen.updateprofile.UpdateProfileViewModel.java", "BodyUseAPI": [], "Fixed commit": "9a6138ec3b8388d15f6c21769bf0fed7466258a0", "Url": "https://api.github.com/repos/nguyenhuy95dn/wsm_android", "Date": "2017-08-23T06:14:06Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (amount != null) { java.util.regex.Pattern ap = java.util.regex.Pattern.compile(\"[0-9]+[.]?[0-9]?\"); java.util.regex.Matcher am = ap.matcher(amount); if ((!(am.matches())) || ((java.lang.Float.parseFloat(amount)) == 0)) return; this.game.bevToPour(bevID, java.lang.Float.parseFloat(amount)); this.bevList.bevVolChanged(bevID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3188/buggy-version/CodinAndDrinkin.src.frame.MainFrame.java", "BodyUseAPI": ["library.GameLogic.bevToPour(int,float)", "java.lang.Float.parseFloat(java.lang.String)", "java.util.regex.Pattern.matcher(java.lang.String)", "java.lang.Float.parseFloat(java.lang.String)"], "Fixed commit": "cdcc3890d717a1394bc8a982b29b37a69b75dd2a", "Url": "https://api.github.com/repos/csiki/Eselykiegy", "Date": "2013-02-18T19:28:15Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((descriptionList.size()) == 4) { dateText.setText(whenText[(i + 1)]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6426/buggy-version/app.src.main.java.com.recivilize.naokikudo.coordish.viewChanger.java", "BodyUseAPI": [], "Fixed commit": "86e7675053be744409e528274f19fd1d7bc8753a", "Url": "https://api.github.com/repos/NaokiKudo/Coordish", "Date": "2016-03-04T14:40:40Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((null == value) || ((value.trim().length()) == 0)) { node.setParams(key, \"None\"); }else if (value.startsWith(\"[\")) { node.setParams(key, value); }else if (\"string\".equals(com.inspur.da.dsw.utils.DataTypeUtil.getType(value))) { node.setParams(key, ((\"'\" + value) + \"'\")); }else { node.setParams(key, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3726/buggy-version/src.main.java.com.inspur.da.dsw.utils.VizPipelineHelper.java", "BodyUseAPI": ["com.inspur.da.dsw.graph.Node.setParams(java.lang.String,java.lang.String)", "com.inspur.da.dsw.graph.Node.setParams(java.lang.String,java.lang.String)", "com.inspur.da.dsw.utils.DataTypeUtil.getType(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.equals(com.inspur.da.dsw.utils.DataTypeUtil.getType(value))", "com.inspur.da.dsw.graph.Node.setParams(java.lang.String,java.lang.String)"], "Fixed commit": "339cc700631b2631c1498695208e07f56f15743f", "Url": "https://api.github.com/repos/xuande/idsw", "Date": "2017-12-22T05:52:07Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4066/buggy-version/lodmill-rd.src.main.java.org.lobid.lodmill.PipeEncodeTriples.java", "BodyUseAPI": [], "Fixed commit": "df1733133e733672f8d677cd713ada8a6289c120", "Url": "https://api.github.com/repos/dr0i/lodmill", "Date": "2013-09-13T16:08:30Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tiles) != null) { if ((structure) != null) structure.removeTile(tiles.get(index)); tiles.remove(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2855/buggy-version/src.main.java.com.creativemd.littletiles.common.tiles.combine.BasicCombiner.java", "BodyUseAPI": [], "Fixed commit": "49df74bebac549acaa8b58e587ab76e77ee522a5", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2017-10-27T09:01:35Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((structure) != null) structure.addTile(cutTile);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2855/buggy-version/src.main.java.com.creativemd.littletiles.common.tiles.combine.BasicCombiner.java", "BodyUseAPI": [], "Fixed commit": "49df74bebac549acaa8b58e587ab76e77ee522a5", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2017-10-27T09:01:35Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((emitterMeter) == null) { emitterMeter = org.apache.s4.base.util.S4MetricsRegistry.getMr().meter(com.codahale.metrics.MetricRegistry.name(\"event-emitted\", clusterName)); org.apache.s4.comm.util.EmitterMetrics.emittersMeters.put(clusterName, emitterMeter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4105/buggy-version/subprojects.s4-comm.src.main.java.org.apache.s4.comm.util.EmitterMetrics.java", "BodyUseAPI": [], "Fixed commit": "a3185c727a176426f52f41d571483077d55bbb9d", "Url": "https://api.github.com/repos/coolwuxing/DynamicS4", "Date": "2013-11-22T00:14:01Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clientType.equalsIgnoreCase(\"cimmytDspace\")) { return new org.cgiar.ccafs.marlo.rest.services.deliverables.CIMMYTDspaceClientAPI(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6493/buggy-version/marlo-web.src.main.java.org.cgiar.ccafs.marlo.rest.services.deliverables.MetadataApiFactory.java", "BodyUseAPI": [], "Fixed commit": "a803b097f79aa79b7e407121c69b8b0af2f03f4d", "Url": "https://api.github.com/repos/CCAFS/MARLO", "Date": "2017-11-20T18:29:44Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!contains) { com.database.service.InfluxService.LOGGER.info(sensor.getTags().get(\"system\")); com.database.service.Sensor sens = com.database.service.SensorService.findBySensorIdSystemNameAndMail(sensor.getTags().get(\"sensor\"), sensor.getTags().get(\"system\"), mail); results.add(new com.database.service.SensorTempDataColorLevel(sensor.getTags().get(\"sensor\"), temperatures, sens.getColor(), sens.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4180/buggy-version/src.main.java.com.database.service.InfluxService.java", "BodyUseAPI": [], "Fixed commit": "703c1efc8c782c0eaebd10659bd045b4cf6373f7", "Url": "https://api.github.com/repos/JulioVa/SZOP", "Date": "2017-12-20T22:19:01Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, java.lang.Integer>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (localVarNumber != null) { if (!(owner.equals(localVariableTypes.get(localVarNumber)))) { return; } java.util.List<java.util.List<java.lang.String>> active = methodCallSequence.get(localVarNumber); if (active == null) { active = new java.util.ArrayList<java.util.List<java.lang.String>>(); active.add(new java.util.ArrayList<java.lang.String>()); } for (java.util.List<java.lang.String> sequence : active) { sequence.add(representation); } methodCallSequence.put(localVarNumber, active); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2603/buggy-version/recommenders-jps-plugin.src.ru.spbau.jps.incremental.recommenders.RecommendersMethodVisitor.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.util.Map<java.lang.Integer, java.lang.String>.get(java.lang.Integer)", "java.util.Map<java.lang.Integer, java.util.List<java.util.List<java.lang.String>>>.get(java.lang.Integer)", "java.util.Map<java.lang.Integer, java.util.List<java.util.List<java.lang.String>>>.put(java.lang.Integer,java.util.List<java.util.List<java.lang.String>>)"], "Fixed commit": "70ceebe159459b9c7ea8b04abe47a40dee80bc9d", "Url": "https://api.github.com/repos/pTalanov/IdeaCodeRecommenders", "Date": "2013-05-08T18:22:12Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numShards.decrementAndGet()) <= 0) { onAllShardsFinished(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/187/buggy-version/sql.src.main.java.io.crate.operation.collect.ShardCollectFuture.java", "BodyUseAPI": [], "Fixed commit": "7691bb1aa9078a1945aae0006989b15a50490e70", "Url": "https://api.github.com/repos/crate/crate", "Date": "2014-11-25T20:22:15Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new express.service.hystrix.ExpressItemSearch(expressItemId, null, null, null).execute().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((item.getBelongUserId()) != 0) { return \"express is already scanned and belongs to a user!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6322/buggy-version/src.main.java.express.controller.restapi.ExpressItemApi.java", "BodyUseAPI": [], "Fixed commit": "58614e3973563dbfc1027cbbc459a53f72fa2ebe", "Url": "https://api.github.com/repos/476678244/express", "Date": "2015-08-06T06:04:59Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shift == 0) { for (int ix = nrLongSteps; ix < (result.length); ix++) { result[ix] = words[(ix - nrLongSteps)]; } }else { int invShift = 64 - shift; result[nrLongSteps] = (words[0]) >>> shift; for (int ix = nrLongSteps + 1; ix < (result.length); ix++) { result[ix] = ((words[(ix - nrLongSteps)]) >>> shift) | ((words[((ix - nrLongSteps) - 1)]) << invShift); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4739/buggy-version/src.euler.numberic.BitSet.java", "BodyUseAPI": [], "Fixed commit": "4149e13beb7bd6528e7555b33b5951c982a77ddf", "Url": "https://api.github.com/repos/marcdejonge/ProjectEuler", "Date": "2013-10-10T21:20:50Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (value != null) { if (doesValueMatchType(value)) { this.value = value; this.isInitialized = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1976/buggy-version/oop.ex6.types.Type.java", "BodyUseAPI": [], "Fixed commit": "57142ccd164917be8c220fb7a945678ae2bb4f94", "Url": "https://api.github.com/repos/joshsvoss/src", "Date": "2015-06-24T13:51:26Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dal.UserAdministrationDB.getUser(user.getUserId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(oldUser.getRoles().equals(user.getRoles()))) { java.util.ArrayList<java.lang.String> removedRoles = new java.util.ArrayList<>(); java.util.ArrayList<java.lang.String> addedRoles = new java.util.ArrayList<>(); for (java.lang.String role : oldUser.getRoles()) if (!(user.getRoles().contains(role))) removeRoleFromUser(user, role); for (java.lang.String role : user.getRoles()) if (!(oldUser.getRoles().contains(role))) addRoleToUser(user, role); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5945/buggy-version/src.dal.UserAdministrationDB.java", "BodyUseAPI": ["dal.UserAdministrationDB.addRoleToUser(dto.User,java.lang.String)", "dto.User.getRoles()", "dto.User.getRoles()", "user.getRoles().contains(java.lang.String)", "dto.User.getRoles()", "dto.User.getRoles()", "oldUser.getRoles().contains(java.lang.String)", "dal.UserAdministrationDB.removeRoleFromUser(dto.User,java.lang.String)"], "Fixed commit": "d112c114daf0841d796303866fbd13df53b480b6", "Url": "https://api.github.com/repos/hold12/CDIO_del1", "Date": "2017-02-23T20:56:14Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.worldObj.getBlockId(spawnerCoords.posX, spawnerCoords.posY, spawnerCoords.posZ)) == (Block.mobSpawner.blockID)) { final net.minecraft.tileentity.TileEntityMobSpawner spawner = ((net.minecraft.tileentity.TileEntityMobSpawner) (this.worldObj.getBlockTileEntity(spawnerCoords.posX, spawnerCoords.posY, spawnerCoords.posZ))); if (spawner != null) { spawner.getSpawnerLogic().setMobID(micdoodle8.mods.galacticraft.moon.world.gen.dungeon.GCMoonRoomSpawner.getMob(rand)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6154/buggy-version/common.micdoodle8.mods.galacticraft.moon.world.gen.dungeon.GCMoonRoomSpawner.java", "BodyUseAPI": ["this.worldObj.getBlockTileEntity(spawnerCoords.posX,spawnerCoords.posY,spawnerCoords.posZ)"], "Fixed commit": "10f73ee4f3542af91236a8bbe7698c07db2465a8", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2013-10-29T23:54:26Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.worldObj.getBlockId(spawnerCoords.posX, spawnerCoords.posY, spawnerCoords.posZ)) == (Block.mobSpawner.blockID)) { final net.minecraft.tileentity.TileEntityMobSpawner spawner = ((net.minecraft.tileentity.TileEntityMobSpawner) (this.worldObj.getBlockTileEntity(spawnerCoords.posX, spawnerCoords.posY, spawnerCoords.posZ))); if (spawner != null) { spawner.getSpawnerLogic().setMobID(micdoodle8.mods.galacticraft.mars.world.gen.dungeon.GCMarsRoomSpawner.getMob(rand)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6154/buggy-version/common.micdoodle8.mods.galacticraft.mars.world.gen.dungeon.GCMarsRoomSpawner.java", "BodyUseAPI": ["this.worldObj.getBlockTileEntity(spawnerCoords.posX,spawnerCoords.posY,spawnerCoords.posZ)"], "Fixed commit": "10f73ee4f3542af91236a8bbe7698c07db2465a8", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2013-10-29T23:54:26Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(new java.io.File(((channelFolder + (java.io.File.separator)) + \"WirelessRedstoneDatabase.db\")).exists())) { try { new java.io.File(((channelFolder + (java.io.File.separator)) + \"WirelessRedstoneDatabase.db\")).createNewFile(); } catch (java.io.IOException e) { net.licks92.WirelessRedstone.WirelessRedstone.getWRLogger().severe(\"There's a SQLite problem please send the full stacktrace to the developer on Github\"); e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7058/buggy-version/src.main.java.net.licks92.WirelessRedstone.Storage.SQLiteStorage.java", "BodyUseAPI": [], "Fixed commit": "b4e29fd17124e0cb2750c094c641a9f4fc49434e", "Url": "https://api.github.com/repos/WirelessRedstoneGroup/WirelessRedstone", "Date": "2017-02-14T15:58:10Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((g.getPloidy()) != 2) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6658/buggy-version/public.java.src.org.broadinstitute.sting.gatk.walkers.annotator.InbreedingCoeff.java", "BodyUseAPI": [], "Fixed commit": "103aa79d23b4ed3f3679e63207d4f4680e070281", "Url": "https://api.github.com/repos/broadgsa/gatk", "Date": "2012-07-24T16:16:15Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNetworkAvailable(this)) { toolbarinfocasa.setNavigationIcon(R.mipmap.ic_arrow_back_white_24dp); }else { toolbarinfocasa.setNavigationIcon(R.mipmap.ic_arrow_back_black_24dp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3627/buggy-version/app.src.main.java.com.example.massa.luxvilla.Actividades.casaactivity.java", "BodyUseAPI": [], "Fixed commit": "fa747ba5a65968ad848aab8f312b25b793d576b5", "Url": "https://api.github.com/repos/brunomassa/LuxVilla", "Date": "2016-02-03T13:57:41Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCameraImpl) != null) { mCameraImpl.setDeviceRotation(deviceRotation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5966/buggy-version/camerakit.src.main.java.com.flurgle.camerakit.CameraView.java", "BodyUseAPI": [], "Fixed commit": "72c34024dd9544cbe5732046f133427c6ae7de0b", "Url": "https://api.github.com/repos/Lumika/CameraKit-Android", "Date": "2017-03-24T22:14:24Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCameraParameters) != null) { int rotation = ((calculateCameraRotation(mDisplayOrientation)) + ((mFacing) == (CameraKit.Constants.FACING_FRONT) ? 180 : 0)) % 360; mCameraParameters.setRotation(((rotation + (mDeviceRotation)) % 360)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5966/buggy-version/camerakit.src.main.api16.com.flurgle.camerakit.Camera1.java", "BodyUseAPI": [], "Fixed commit": "72c34024dd9544cbe5732046f133427c6ae7de0b", "Url": "https://api.github.com/repos/Lumika/CameraKit-Android", "Date": "2017-03-24T22:14:24Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.sk89q.craftbook.bukkit.CraftBookPlugin.inst()) == null) return line;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3292/buggy-version/src.main.java.com.sk89q.craftbook.util.ParsingUtil.java", "BodyUseAPI": [], "Fixed commit": "d58c8fab20a8f62a60ec3734cfbeb9b4e09df91f", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-06-19T09:34:16Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zouag.contacts.ui.AddContactActivity.validateFields(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (newContact != null) { databaseAdapter.insertContact(newContact); setResult(com.zouag.contacts.ui.RESULT_OK); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6390/buggy-version/app.src.main.java.com.zouag.contacts.ui.AddContactActivity.java", "BodyUseAPI": ["com.zouag.contacts.adapters.DatabaseAdapter.insertContact(com.zouag.contacts.models.Contact)"], "Fixed commit": "fdb403ff0968fff7fc8fb4fb620125c6b2a9becc", "Url": "https://api.github.com/repos/DeveloperXY/Contacts", "Date": "2016-03-19T17:27:52Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((worldObj) != null) && (!(worldObj.isRemote))) { net.minecraft.block.state.IBlockState state = worldObj.getBlockState(getPos()); worldObj.notifyBlockUpdate(getPos(), state, state, 3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4480/buggy-version/src.com.jaquadro.minecraft.storagedrawers.block.tile.TileEntityDrawersComp.java", "BodyUseAPI": [], "Fixed commit": "89a6150b725c11a6fe4faa0aefde764cfff9495f", "Url": "https://api.github.com/repos/jaquadro/StorageDrawers", "Date": "2016-11-06T05:14:22Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entry.getValue().getUserID()) == (com.dreamlink.communication.UserManager.getInstance().getLocalUser().getUserID())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7415/buggy-version/src.com.dreamlink.communication.SocketCommunicationService.java", "BodyUseAPI": [], "Fixed commit": "6b5c0cce1cd6a103080535f7d0d87fe540095927", "Url": "https://api.github.com/repos/liangPATHofei1100/AndroidCommunication", "Date": "2013-07-11T07:33:19Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (period == (org.jboss.logmanager.handlers.PeriodicRotatingFileHandler.Period.WEEK)) { calendar.set(java.util.Calendar.DAY_OF_WEEK, calendar.getFirstDayOfWeek()); }else { calendar.clear(java.util.Calendar.DAY_OF_WEEK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2158/buggy-version/src.main.java.org.jboss.logmanager.handlers.PeriodicRotatingFileHandler.java", "BodyUseAPI": [], "Fixed commit": "d79afcfc660c0c1363897bb3f560c668a9b152b6", "Url": "https://api.github.com/repos/jboss-logging/jboss-logmanager", "Date": "2013-07-08T20:55:07Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(line.matches(\"^\\\\s*$\"))) { java.lang.System.out.println(classifier.query(line)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3757/buggy-version/src.main.java.net.luminously.classifier.Main.java", "BodyUseAPI": ["java.io.PrintStream.println(classifier.query(line))", "net.luminously.classifier.Classifier.query(java.lang.String)"], "Fixed commit": "d9ca1ad147340bfa838d68282c9da7ae95a6b332", "Url": "https://api.github.com/repos/abstractOwl/HamOrSpam", "Date": "2014-03-10T06:35:52Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.ConnectivityManager.getActiveNetworkInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ni == null) isOnline = false; else isOnline = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6192/buggy-version/app.src.main.java.com.cutingedge.cut.radio.menu1_Fragment.java", "BodyUseAPI": [], "Fixed commit": "7d7839bec23debeb69f2e0017f8e2571f0e4d859", "Url": "https://api.github.com/repos/michael-panayiotou/CUT-Radio", "Date": "2015-08-08T11:41:39Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.db.client.DbClient.queryObject(java.lang.Class,java.net.URI)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((policyObject.getPools()) != null) { policyObject.getPools().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3682/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.plugins.discovery.smis.processor.fast.FASTPolicyProcessor.java", "BodyUseAPI": ["com.emc.storageos.db.client.model.AutoTieringPolicy.getPools()", "policyObject.getPools().clear()"], "Fixed commit": "58fadc63679e713f1d88f4267e2d2d4e9509e50e", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-10-06T13:38:09Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jodd.madvoc.ResultPath.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value != null) { if (path == null) { int lastSlashNdx = actionPath.lastIndexOf('/'); if (lastSlashNdx != (-1)) { target = ((actionPath.substring(0, (lastSlashNdx + 1))) + value) + (jodd.madvoc.result.ServletDispatcherResult.EXTENSION); }else { target = ('/' + value) + (jodd.madvoc.result.ServletDispatcherResult.EXTENSION); } }else { target = ((path + '.') + value) + (jodd.madvoc.result.ServletDispatcherResult.EXTENSION); } if (targetExist(servletContext, target)) { break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7360/buggy-version/jodd-madvoc.src.main.java.jodd.madvoc.result.ServletDispatcherResult.java", "BodyUseAPI": [], "Fixed commit": "99d89ca5937499d518a71f42516a9748f1a7ab51", "Url": "https://api.github.com/repos/oblac/jodd", "Date": "2014-02-03T15:13:38Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (success) callback.onSuccess();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7761/buggy-version/pzone.src.java.my.pzone.util.EntityManagerHelper.java", "BodyUseAPI": [], "Fixed commit": "01a85f75303de849e2652886fdc8ba8ecd9552b5", "Url": "https://api.github.com/repos/aclisp/rapid-webui", "Date": "2013-09-12T15:53:12Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (success) callback.onSuccess();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7761/buggy-version/pzone.src.java.my.pzone.util.EntityManagerHelper.java", "BodyUseAPI": [], "Fixed commit": "01a85f75303de849e2652886fdc8ba8ecd9552b5", "Url": "https://api.github.com/repos/aclisp/rapid-webui", "Date": "2013-09-12T15:53:12Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mCurrent.isActive()) sessionEnd();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1803/buggy-version/FallDetector.src.it.unipd.dei.esp1415.falldetector.CurrentSessionActivity.java", "BodyUseAPI": [], "Fixed commit": "2121b79e6bc2d4c9f364c94dd02cfbd23d575a3f", "Url": "https://api.github.com/repos/MrBonty/ESP1415", "Date": "2015-08-27T13:44:58Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((tdt4140.calendarsystem.UserManager.getInstance().getCurrentUser()) == u) activeUsers.add(entry.user);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7698/buggy-version/CalendarSystem.src.tdt4140.gui.UserListPanel.java", "BodyUseAPI": [], "Fixed commit": "1f8108c14a8cf7a3abf24af5fab42950c7d195ce", "Url": "https://api.github.com/repos/trosne/progU48", "Date": "2014-03-21T16:55:41Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Robot.instance.oi.getShooterElevatorInput()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((output > 0) && (!(Robot.instance.elevator.limitSwitch.get()))) { output = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4168/buggy-version/src.org.usfirst.frc.team6179.robot.commands.shooter.ElevateWithJoystick.java", "BodyUseAPI": [], "Fixed commit": "2f637cfbc4c37071f0d6dd1a5cc503cf08629fb1", "Url": "https://api.github.com/repos/CCDSY/PhotonBox-2016", "Date": "2016-02-28T05:43:09Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.endsWith(\".\")) { return value.replaceAll(\"[\\\\.]+$\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8721/buggy-version/src.uk.ac.shef.dcs.jate.util.control.Lemmatizer.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "0040aaf9186936a5b8b9f3cb3a74d0c62e6e7bfe", "Url": "https://api.github.com/repos/Bouki/jate", "Date": "2015-06-04T16:29:23Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bmi) == (Params.INIT_VAL)) { if (((weight) != (Params.INIT_VAL)) && ((height) != (Params.INIT_VAL))) { bmi = (java.lang.Math.round((((weight) / ((float) (java.lang.Math.pow(((height) / 100), 2)))) * 100.0F))) / 100.0F; bmiTxt.setText(java.lang.Float.toString(bmi)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3671/buggy-version/src.com.cje.RequestPage.java", "BodyUseAPI": [], "Fixed commit": "86f6aea57533f690ae35f5420b4c7a6ea624421f", "Url": "https://api.github.com/repos/bbybby/GrowthIndicator", "Date": "2016-09-12T18:16:08Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vitaminbacon.lockscreendialer.LockScreenKeypadPatternActivity.getWrapperView()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (wrapperView == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7538/buggy-version/app.src.main.java.com.vitaminbacon.lockscreendialer.LockScreenKeypadPatternActivity.java", "BodyUseAPI": [], "Fixed commit": "b47ed824a56cd426d3229bde5b4ec03862769d09", "Url": "https://api.github.com/repos/niborg/lock_screen_dialer", "Date": "2015-06-30T16:28:53Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.forest.http.ForestResponseFactory.createResponse(org.forest.http.ForestRequest,org.apache.http.HttpResponse)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (response.isSuccess()) { responseHandler.handleSuccess(response); }else { responseHandler.handleError(response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/117/buggy-version/forest-core.src.main.java.org.forest.executors.httpclient.request.AsyncHttpclientRequestSender.java", "BodyUseAPI": ["org.forest.executors.httpclient.response.HttpclientResponseHandler.handleError(org.forest.http.ForestResponse)", "org.forest.executors.httpclient.response.HttpclientResponseHandler.handleSuccess(org.forest.http.ForestResponse)"], "Fixed commit": "27f99d181619de7747347af638c512688f36d84e", "Url": "https://api.github.com/repos/mySingleLive/forest", "Date": "2017-08-03T11:08:01Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((word.length()) == 0) { java.lang.System.err.println(\"No word found...\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2075/buggy-version/src.NovelMethod.java", "BodyUseAPI": [], "Fixed commit": "85956e7a0d08cc3b0c44c3551026fd007e08d78c", "Url": "https://api.github.com/repos/Jaus/Summer-2011-Research", "Date": "2011-08-01T21:33:44Z"},
{"Line": "=>1836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWellSampleDataSelection(selected)) { return; }else if (selected instanceof omero.gateway.model.DataObject) { org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor visitor = new org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor(parent, ((omero.gateway.model.DataObject) (selected))); accept(visitor); foundNode = visitor.getSelectedNode(); if (foundNode != null) { if (multiSelection) model.addFoundNode(foundNode); else model.setSelectedDisplay(foundNode, true); view.setFoundNode(model.getSelectedDisplays()); }else view.setFoundNode(null); }else if (selected instanceof org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay) { foundNode = ((org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay) (selected)); if (multiSelection) model.addFoundNode(foundNode); else model.setSelectedDisplay(foundNode, true); view.setFoundNode(model.getSelectedDisplays()); }else if (selected instanceof java.util.List) { org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor visitor = new org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor(parent, ((java.util.List<omero.gateway.model.DataObject>) (selected))); accept(visitor); java.util.List<org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay> nodes = visitor.getSelectedNodes(); if ((nodes.size()) == 0) { view.setFoundNode(null); }else if ((nodes.size()) == 1) { model.setSelectedDisplay(nodes.get(0), true); view.setFoundNode(model.getSelectedDisplays()); }else { model.setSelectedDisplay(null, true); java.util.Iterator<org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay> i = nodes.iterator(); while (i.hasNext()) model.addFoundNode(i.next()); view.setFoundNode(model.getSelectedDisplays()); } }else if (selected instanceof java.lang.String) { model.setSelectedDisplay(null, true); view.setFoundNode(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5440/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.agents.treeviewer.browser.BrowserComponent.java", "BodyUseAPI": [], "Fixed commit": "d5a5b0156a77f918ee2aac0fb496fdbfb1606990", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2016-05-23T02:32:19Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((intent.getComponent()) != null) && ((intent.getComponent().getPackageName()) != null)) { pkg = intent.getComponent().getPackageName(); }else { android.content.pm.ResolveInfo info = com.morgoo.droidplugin.pm.PluginManager.getInstance().resolveIntent(intent, null, 0); pkg = info.resolvePackageName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6864/buggy-version/project.Libraries.DroidPlugin.src.com.morgoo.droidplugin.stub.ShortcutProxyActivity.java", "BodyUseAPI": ["intent.getComponent().getPackageName()", "android.content.Intent.getComponent()", "com.morgoo.droidplugin.pm.PluginManager.getInstance().resolveIntent(android.content.Intent,<nulltype>,int)"], "Fixed commit": "09719b8f03c2c890c7d0498992613b04a7b6610f", "Url": "https://api.github.com/repos/Qihoo360/DroidPlugin", "Date": "2015-11-18T07:07:32Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(cell)) { value = org.molgenis.data.DataConverter.toString(org.apache.poi.ss.usermodel.DateUtil.getJavaDate(cellValue.getNumberValue(), false)); }else { double x = cellValue.getNumberValue(); if (((x == (java.lang.Math.rint(x))) && (!(java.lang.Double.isNaN(x)))) && (!(java.lang.Double.isInfinite(x)))) value = java.lang.String.valueOf(((int) (x))); else value = java.lang.String.valueOf(x); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8400/buggy-version/molgenis-data-excel.src.main.java.org.molgenis.data.excel.ExcelUtils.java", "BodyUseAPI": [], "Fixed commit": "2b9420abeb229520a14f5e18406158a42c57f500", "Url": "https://api.github.com/repos/molgenis/molgenis", "Date": "2014-11-24T11:48:08Z"},
{"Line": "=>4868", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position >= 0) this.recoveryScanner.insertTokenAhead(TerminalTokens.TokenNameEQUAL, position);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2839/buggy-version/org.eclipse.jdt.core.compiler.org.eclipse.jdt.internal.compiler.parser.Parser.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.insertTokenAhead(TerminalTokens.TokenNameEQUAL,int)"], "Fixed commit": "0f3615b9d34177036abe735792350c6daafd5f0f", "Url": "https://api.github.com/repos/eclipse/eclipse.jdt.core", "Date": "2015-01-16T08:44:37Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(score)) { score = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4283/buggy-version/src.main.java.autograder.student.GradeCalculator.java", "BodyUseAPI": [], "Fixed commit": "b7e16d628a52dd657617910c5aaec9ea92102988", "Url": "https://api.github.com/repos/rwsargent/autograder", "Date": "2017-10-06T14:40:06Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((element.getType().getSimpleName()) != \"void\") { element.getBody().insertBefore(new spoon.reflect.visitor.filter.ReturnOrThrowFilter(), toPrintAfter); }else { element.getBody().insertEnd(toPrintAfter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3592/buggy-version/src.main.java.spoon.processor.MethodsCallProcessor.java", "BodyUseAPI": ["element.getBody().insertBefore(spoon.reflect.visitor.filter.ReturnOrThrowFilter,spoon.reflect.code.CtCodeSnippetStatement)", "element.getBody().insertEnd(spoon.reflect.code.CtCodeSnippetStatement)", "spoon.reflect.declaration.CtMethod.getBody()", "spoon.reflect.declaration.CtMethod.getBody()"], "Fixed commit": "e17c234ce1c9791475140dc4b0c47d0a28bfd70b", "Url": "https://api.github.com/repos/atyrlik/RealTimeVisualization", "Date": "2016-12-06T09:11:32Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((datas) == null) { datas = new java.util.IdentityHashMap<jef.database.dialect.DatabaseDialect, jef.database.NamedQueryConfig.DialectCase>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/760/buggy-version/common-orm.src.main.java.jef.database.NamedQueryConfig.java", "BodyUseAPI": [], "Fixed commit": "ecf13dd6de8d9e398164b7c9f4567715f009451d", "Url": "https://api.github.com/repos/xuse/ef-orm", "Date": "2014-08-20T11:26:43Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isReduce) { while (!(water.rapids.ASTGroupBy.G.CAS_ss(g, water.rapids.ASTGroupBy.G.doubleRawIdx(c), java.lang.Double.doubleToRawLongBits(o), java.lang.Double.doubleToRawLongBits((o + v))))) o = g._ss[c]; }else { while (!(water.rapids.ASTGroupBy.G.CAS_ss(g, water.rapids.ASTGroupBy.G.doubleRawIdx(c), java.lang.Double.doubleToRawLongBits(o), java.lang.Double.doubleToRawLongBits((o + (v * v)))))) o = g._ss[c]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7857/buggy-version/h2o-core.src.main.java.water.rapids.ASTGroupBy.java", "BodyUseAPI": [], "Fixed commit": "3d07afb89ab76709880f03fbb764960b64501735", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-07-22T18:28:05Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getCode()) == 403) { return pl.jpetryk.redditbot.connectors.PostCommentResult.bannedFromThisSub(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1629/buggy-version/src.main.java.pl.jpetryk.redditbot.connectors.JrawRedditConnector.java", "BodyUseAPI": [], "Fixed commit": "045c0470473ee84747420216cbb84048cef036b8", "Url": "https://api.github.com/repos/janpetryk/reddit-bot", "Date": "2015-01-25T12:51:39Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.getErrors()[0].getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (message.contains(\"DELETED_COMMENT\")) { return pl.jpetryk.redditbot.connectors.PostCommentResult.commentDeleted(); }else { return pl.jpetryk.redditbot.connectors.PostCommentResult.unsuccessful(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1629/buggy-version/src.main.java.pl.jpetryk.redditbot.connectors.JrawRedditConnector.java", "BodyUseAPI": ["pl.jpetryk.redditbot.connectors.PostCommentResult.unsuccessful(java.lang.String)"], "Fixed commit": "045c0470473ee84747420216cbb84048cef036b8", "Url": "https://api.github.com/repos/janpetryk/reddit-bot", "Date": "2015-01-25T12:51:39Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (projectID == \"\") this.projectID = null; else this.projectID = projectID;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7382/buggy-version/src.shared.communication.GetFields_Params.java", "BodyUseAPI": [], "Fixed commit": "a0d4bd59ae0a3b9bd373f1df4d6500c1cb05bf6c", "Url": "https://api.github.com/repos/zaphinath/record-indexer", "Date": "2013-07-22T05:22:50Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fState)) { this.fState = true; this.fNumber = ((T) (number.copy())); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8517/buggy-version/src.com.nanlagger.main.entities.TMemory.java", "BodyUseAPI": [], "Fixed commit": "db513d96bd21b51b12b70e6fb271babe1809808e", "Url": "https://api.github.com/repos/NaNLagger/MultiCalc", "Date": "2015-04-04T07:52:47Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.ResolveState.get(CSharpResolveUtil.SELF_FILE)", "org.mustbe.consulo.csharp.lang.psi.impl.source.CSharpUsingListImpl.getContainingFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((psiFile.equals(containingFile)) || (psiFile.getOriginalFile().equals(containingFile))) { for (org.mustbe.consulo.csharp.lang.psi.impl.source.CSharpUsingListChild cSharpUsingStatement : getStatements()) { if (!(cSharpUsingStatement.processDeclarations(processor, state, lastParent, place))) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7148/buggy-version/csharp-psi-impl.src.org.mustbe.consulo.csharp.lang.psi.impl.source.CSharpUsingListImpl.java", "BodyUseAPI": [], "Fixed commit": "a2eb505a2ae655f4e16c1995884e8ee9889d01e2", "Url": "https://api.github.com/repos/consulo/consulo-dotnet", "Date": "2014-03-08T21:54:23Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == ((matrix.length) - 1)) { index = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2715/buggy-version/src.lapr1_2015.Lapr1_2015.java", "BodyUseAPI": [], "Fixed commit": "6f426e2d15edc9ba43992eccba1f5b3c2a77e449", "Url": "https://api.github.com/repos/DavidPLamas/lapr1_2015", "Date": "2016-01-16T23:14:54Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (foundColor == (-1)) return android.graphics.Color.parseColor(\"#81B4DE\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3887/buggy-version/watershed-android.watershed.app.src.main.java.com.blueprint.watershed.Utilities.Utility.java", "BodyUseAPI": [], "Fixed commit": "a767fbcccea141fad681957d7102e21b4f75473e", "Url": "https://api.github.com/repos/calblueprint/watershed", "Date": "2015-05-01T09:21:58Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((updateLocationThread) != null) { updateLocationThread.kill(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5914/buggy-version/App.app.src.main.java.northseattlecollege.ASLBuddy.MenuInterpreter.java", "BodyUseAPI": [], "Fixed commit": "c49093f0cd3208342201c63816fdec20672b09ad", "Url": "https://api.github.com/repos/NSC-AD-BAS/AD430Fall2016", "Date": "2016-12-11T01:22:11Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.abs(int)", "java.lang.Math.abs(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rowDiffAbs == 1) && (columnDiffAbs == 0)) return true; else if (((rowDiffAbs == 1) && (columnDiffAbs == 1)) && isCapture) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6307/buggy-version/src.ChessBoard.java", "BodyUseAPI": [], "Fixed commit": "3f2ed9ff1279007c8cdf1d4024e12b0f4ef23809", "Url": "https://api.github.com/repos/mtbar131/ChessPGNReader", "Date": "2015-07-29T13:33:22Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["maud.model.LoadedAnimation.getLoadedAnimation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (animation == null) { storeResult.loadIdentity(); }else { com.jme3.animation.BoneTrack track = jme3utilities.MyAnimation.findTrack(animation, boneIndex); if (track == null) { storeResult.loadIdentity(); }else { maud.Util.boneTransform(track, time, storeResult); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2952/buggy-version/src.main.java.maud.model.LoadedAnimation.java", "BodyUseAPI": ["jme3utilities.MyAnimation.findTrack(com.jme3.animation.Animation,int)"], "Fixed commit": "6e84df53324952278a4686b4494a41cc140ce0e8", "Url": "https://api.github.com/repos/stephengold/Maud", "Date": "2017-05-08T04:38:35Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mValues.get(position).getThumbnailURL().isEmpty())) { com.squareup.picasso.Picasso.with(context).load(mValues.get(position).getThumbnailURL()).into(holder.step_image); }else if ((mValues.get(position).getImageBitmap()) == null) { holder.step_image.setImageResource(R.drawable.recipe); }else { try { timber.log.Timber.d(\"gotten bitmap\"); holder.step_image.setImageBitmap(mValues.get(position).getImageBitmap()); } catch (java.lang.Throwable t) { com.squareup.picasso.Picasso.with(context).load(R.drawable.recipe).placeholder(R.drawable.recipe).error(R.drawable.recipe).into(holder.step_image); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5773/buggy-version/app.src.main.java.Adapters.RecipeDescriptionAdapter.java", "BodyUseAPI": ["java.util.List<Models.Step>.get(int)", "mValues.get(position).getImageBitmap()", "mValues.get(position).getImageBitmap()", "android.widget.ImageView.setImageBitmap(mValues.get(position).getImageBitmap())", "com.squareup.picasso.Picasso.with(context).load(mValues.get(position).getThumbnailURL()).into(android.widget.ImageView)", "com.squareup.picasso.Picasso.with(context).load(mValues.get(position).getThumbnailURL())", "java.util.List<Models.Step>.get(int)", "java.util.List<Models.Step>.get(int)", "mValues.get(position).getThumbnailURL()"], "Fixed commit": "81bd261c56728424a3457d3ea0b13da9e64368a0", "Url": "https://api.github.com/repos/kantologist/BakingApp", "Date": "2017-11-08T04:48:38Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedAgreementId) > 0) { agreement.setId(selectedAgreementId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7429/buggy-version/Jama.src.main.java.pageControllerLayer.AgreementManagerBean.java", "BodyUseAPI": [], "Fixed commit": "2fe79d5b8f5c49988bd104ffc6390f6bfeb75c5b", "Url": "https://api.github.com/repos/GiulioGx/Jama", "Date": "2013-10-08T18:25:20Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.core.env.Environment.getProperty(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value.equals(\"database.hbm2ddl\")) { value = \"none\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5586/buggy-version/citrus-back-end.src.main.java.com.techmahindra.citrus.configurations.CommonJpaConfigurations.java", "BodyUseAPI": [], "Fixed commit": "d8c1cf3143c22ebde4bb311787e22e487de559a4", "Url": "https://api.github.com/repos/cjjavellana/citrus", "Date": "2014-10-19T08:24:42Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((b.length()) > 0) { b.setLength(((b.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1896/buggy-version/code.core.src.main.java.org.apache.tamaya.core.internal.DefaultConfigurationContext.java", "BodyUseAPI": [], "Fixed commit": "77dbcc4d3a9fa38f0e9bbc4901ea5cae7efcf24c", "Url": "https://api.github.com/repos/apache/incubator-tamaya", "Date": "2016-10-29T12:38:24Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((b.length()) > 0) { b.setLength(((b.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1896/buggy-version/code.core.src.main.java.org.apache.tamaya.core.internal.DefaultConfigurationContext.java", "BodyUseAPI": [], "Fixed commit": "77dbcc4d3a9fa38f0e9bbc4901ea5cae7efcf24c", "Url": "https://api.github.com/repos/apache/incubator-tamaya", "Date": "2016-10-29T12:38:24Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(org.apache.tamaya.TypeLiteral.of(java.lang.String.class))) { return ((T) (value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1896/buggy-version/code.core.src.main.java.org.apache.tamaya.core.internal.DefaultConfiguration.java", "BodyUseAPI": [], "Fixed commit": "77dbcc4d3a9fa38f0e9bbc4901ea5cae7efcf24c", "Url": "https://api.github.com/repos/apache/incubator-tamaya", "Date": "2016-10-29T12:38:24Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mSendVideo.isChecked()) mSwitchCameraButton.setEnabled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3435/buggy-version/media-devices.src.main.java.com.flashphoner.wcsexample.mediadevices.MediaDevicesActivity.java", "BodyUseAPI": [], "Fixed commit": "4e865e9019741673b52fab0d40db56bcf551ce14", "Url": "https://api.github.com/repos/flashphoner/wcs-android-sdk-samples", "Date": "2017-01-30T16:34:11Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model.server.Server.associatedClasses) == null) { model.server.Server.associatedClasses = new java.util.HashMap<model.roster.Student, java.util.ArrayList<java.lang.String>>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3093/buggy-version/src.main.java.model.server.Server.java", "BodyUseAPI": [], "Fixed commit": "35ccb3e6114e158e67c3a52e947add20faa23c3c", "Url": "https://api.github.com/repos/goscott/309Grader", "Date": "2015-02-26T00:30:40Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((model.server.Server.rosterAnnouncements) != null) && (roster != null)) { return model.server.Server.rosterAnnouncements.get(roster.courseName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3093/buggy-version/src.main.java.model.server.Server.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.ArrayList<model.announcements.Announcement>>.get(roster.courseName())", "model.roster.Roster.courseName()"], "Fixed commit": "35ccb3e6114e158e67c3a52e947add20faa23c3c", "Url": "https://api.github.com/repos/goscott/309Grader", "Date": "2015-02-26T00:30:40Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model.server.Server.associatedClasses) != null) { for (model.roster.Student student : model.server.Server.associatedClasses.keySet()) { if (model.server.Server.associatedClasses.get(student).contains(roster.courseName())) { list.add(student); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3093/buggy-version/src.main.java.model.server.Server.java", "BodyUseAPI": [], "Fixed commit": "35ccb3e6114e158e67c3a52e947add20faa23c3c", "Url": "https://api.github.com/repos/goscott/309Grader", "Date": "2015-02-26T00:30:40Z"},
{"Line": "=>549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dylan.com.adoptapet.OptionsSelectFrag.getSizeSelection()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sizeArray.length()) == 0) sizeString += \"Any\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7826/buggy-version/app.src.main.java.dylan.com.adoptapet.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2760f772ae5ce0966df7dc0d63403ac0c4c44924", "Url": "https://api.github.com/repos/drose379/AdoptAPet", "Date": "2015-12-11T15:34:13Z"},
{"Line": "=>551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dylan.com.adoptapet.OptionsSelectFrag.getGenderSelection()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((genderArray.length()) == 0) genderString += \"Any\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7826/buggy-version/app.src.main.java.dylan.com.adoptapet.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2760f772ae5ce0966df7dc0d63403ac0c4c44924", "Url": "https://api.github.com/repos/drose379/AdoptAPet", "Date": "2015-12-11T15:34:13Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dylan.com.adoptapet.OptionsSelectFrag.getAgeSelection()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ageArray.length()) == 0) ageString += \"Any\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7826/buggy-version/app.src.main.java.dylan.com.adoptapet.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2760f772ae5ce0966df7dc0d63403ac0c4c44924", "Url": "https://api.github.com/repos/drose379/AdoptAPet", "Date": "2015-12-11T15:34:13Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getSession().getAttribute(\"requestToken\")) != null) { requestToken = ((twitter4j.auth.RequestToken) (request.getSession().getAttribute(\"requestToken\"))); }else { requestToken = twitter.getOAuthRequestToken(callbackURL.toString()); request.getSession().setAttribute(\"requestToken\", requestToken); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1141/buggy-version/src.main.java.ru.kpfu.itis.khakov.controller.UserController.java", "BodyUseAPI": ["request.getSession().getAttribute(java.lang.String)", "javax.servlet.http.HttpServletRequest.getSession()", "javax.servlet.http.HttpServletRequest.getSession()", "request.getSession().setAttribute(java.lang.String,twitter4j.auth.RequestToken)"], "Fixed commit": "21d00a892438b941f50f115ad6101c389a99a84f", "Url": "https://api.github.com/repos/Khakov/tenet-test", "Date": "2017-07-03T19:38:11Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldMessageCallback) { callback.finished(o); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1878/buggy-version/app.src.main.java.org.stephenfox.dittimetables.network.CustomAsyncTask.java", "BodyUseAPI": [], "Fixed commit": "21ed5da28bcf91310fd58fc7404b57c8f63dadc2", "Url": "https://api.github.com/repos/StephenFox1995/DIT-Timetables-Android", "Date": "2015-11-06T00:31:59Z"},
{"Line": "=>1055", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6753/buggy-version/src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "74827e183c72c4022329687d12b18ee8397bf8a0", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mmem > ((opt.mem) * 1024)) || (rmem > ((opt.mem) * 1024))) throw new java.lang.InterruptedException((((\"Not enough memory available on system; memory requirements: \" + ((opt.mem) * 1024)) + \"/\") + (java.lang.Math.max(rmem, mmem))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1586/buggy-version/halvade.src.be.ugent.intec.halvade.HalvadeResourceManager.java", "BodyUseAPI": ["java.lang.Math.max(int,int)"], "Fixed commit": "1e45c6a0e78d02ae3ea8e9a5e246ae5e2bfc986f", "Url": "https://api.github.com/repos/ddcap/halvade", "Date": "2015-07-06T13:59:57Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mGoogleApiClient.isConnected()) { stopLocationUpdates(); mGoogleApiClient.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1085/buggy-version/app.src.main.java.at.fhtw.partyradar.service.BackgroundLocationService.java", "BodyUseAPI": ["com.google.android.gms.common.api.GoogleApiClient.disconnect()"], "Fixed commit": "9edeccb9c959e1f8f0f9b4366c3f50af692d663d", "Url": "https://api.github.com/repos/stefanholzapfel/partyradar_app", "Date": "2015-01-04T22:53:51Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((inputTextMyMapName.getValue().toString()) != null) && ((inputTextMyMapName.getValue().toString().length()) > 0)) { com.athleticgis.model.AthleticgisFacade.mergeMyMap(inputTextMyMapName.getValue().toString(), id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6204/buggy-version/athleticgis.src.com.athleticgis.view.ViewMyMapBean.java", "BodyUseAPI": ["com.athleticgis.model.AthleticgisFacade.mergeMyMap(inputTextMyMapName.getValue().toString(),java.lang.Long)", "inputTextMyMapName.getValue().toString()", "javax.faces.component.html.HtmlInputText.getValue()"], "Fixed commit": "52ac5c95a41a40a0222afe6c1aac0ea1ad88c170", "Url": "https://api.github.com/repos/mattheweallen/athleticgisrepo", "Date": "2013-12-01T23:49:38Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((myMapName) != null) && ((myMapName.length()) > 0)) { myMap.setName(myMapName); }else { myMap.setName((\"My Map Created \" + (new java.util.Date().toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6204/buggy-version/athleticgis.src.com.athleticgis.view.CreatePathBean.java", "BodyUseAPI": ["com.athleticgis.domain.activity.MyMap.setName(java.lang.String)"], "Fixed commit": "52ac5c95a41a40a0222afe6c1aac0ea1ad88c170", "Url": "https://api.github.com/repos/mattheweallen/athleticgisrepo", "Date": "2013-12-01T23:49:38Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((notification.getExpireTTLSeconds()) > 0) { opt.ttl = java.lang.String.valueOf(notification.getExpireTTLSeconds()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1914/buggy-version/stack.services.src.main.java.org.apache.usergrid.services.notifications.wns.WNSAdapter.java", "BodyUseAPI": ["java.lang.String.valueOf(notification.getExpireTTLSeconds())", "org.apache.usergrid.persistence.entities.Notification.getExpireTTLSeconds()"], "Fixed commit": "24600e0bd17bff9ca022271d780a7e220bfda94e", "Url": "https://api.github.com/repos/apache/usergrid", "Date": "2015-11-11T16:48:42Z"},
{"Line": "=>2648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.properties) == (EMPTY_PROPERTIES)) { this.properties = new org.infinispan.util.TypedProperties(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2691/buggy-version/core.src.main.java.org.infinispan.config.Configuration.java", "BodyUseAPI": [], "Fixed commit": "e4af660d01368b369d0f44e514c2c009e9b41863", "Url": "https://api.github.com/repos/danberindei/infinispan", "Date": "2011-03-29T12:24:19Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position != 10) { mDrawerList.setItemChecked(position, true); mDrawerLayout.closeDrawer(mDrawerList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/398/buggy-version/app.src.main.java.com.example.mustngo.newsp.SingleFragmentActivity.java", "BodyUseAPI": ["android.widget.ListView.setItemChecked(int,boolean)"], "Fixed commit": "c2de7695484d91237ee85bf4d3528856d78623f5", "Url": "https://api.github.com/repos/gynaephora/NewsP", "Date": "2016-08-04T11:27:05Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isNewAlbum) { this.setTitle(\"Add a new album\"); }else { this.setTitle(\"Update album\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/161/buggy-version/dbproject.src.my.triviagame.gui.AddUpdate.java", "BodyUseAPI": [], "Fixed commit": "8622466af061153fd9ef767d468f736f62803d86", "Url": "https://api.github.com/repos/grzn/dbc", "Date": "2012-06-16T21:14:39Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(itemsInRoom.isEmpty())) { sb.append((\"You see \" + (getItemString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2684/buggy-version/src.Room.java", "BodyUseAPI": [], "Fixed commit": "7f63e1b4290d044d47ce587540a1187b286ef863", "Url": "https://api.github.com/repos/FelixEder/shortTextBasedAdventure", "Date": "2017-03-03T16:21:24Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mainMenu) != null) && (mainMenu.hasParent())) mainMenu.remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3465/buggy-version/src.com.CIS4914.Blocked.Screens.GameScreen.java", "BodyUseAPI": ["com.CIS4914.Blocked.Controllers.TextButton2.remove()"], "Fixed commit": "a0c5eedc9d6bdbed3f1b0d708d8a800d8904ea34", "Url": "https://api.github.com/repos/st3w/CIS4914", "Date": "2014-11-14T21:12:33Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Gdx.app.getType()) == (com.badlogic.gdx.Application.ApplicationType.Android)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3465/buggy-version/src.com.CIS4914.Blocked.Screens.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "a0c5eedc9d6bdbed3f1b0d708d8a800d8904ea34", "Url": "https://api.github.com/repos/st3w/CIS4914", "Date": "2014-11-14T21:12:33Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((downloadReceiver) != null) { android.content.IntentFilter intentFilter = new android.content.IntentFilter(info.einverne.guesswords.service.DownloadService.BROADCAST_FINISH_ACTION); intentFilter.addAction(DownloadService.BROADCAST_ING_ACTION); downloadReceiver = new info.einverne.guesswords.MainActivity.DownloadFinishReceiver(); android.support.v4.content.LocalBroadcastManager.getInstance(this).registerReceiver(downloadReceiver, intentFilter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3555/buggy-version/mobile.src.main.java.info.einverne.guesswords.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "eec7cbb9f210f300095f13557f7668af2962487a", "Url": "https://api.github.com/repos/einverne/guesswords", "Date": "2016-10-29T09:32:28Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFullScreen) != null) { mFullScreen.release(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3350/buggy-version/PLDroidCameraStreamingDemo.app.src.main.java.com.pili.pldroid.streaming.camera.demo.gles.FBO.java", "BodyUseAPI": [], "Fixed commit": "4b23ffed30c0443476bf11b834c0ff8963f9d253", "Url": "https://api.github.com/repos/pili-engineering/PLDroidMediaStreaming", "Date": "2016-02-26T15:00:05Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userMessage.getPartyInfo().getTo().getRole()) == null) { userMessage.getPartyInfo().getTo().setRole(eu.domibus.ebms3.common.dao.DynamicDiscoveryPModeProvider.DEFAULT_RESPONDER_ROLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1128/buggy-version/Domibus-MSH.src.main.java.eu.domibus.ebms3.common.dao.DynamicDiscoveryPModeProvider.java", "BodyUseAPI": ["eu.domibus.ebms3.common.dao.UserMessage.getPartyInfo()", "userMessage.getPartyInfo().getTo()", "userMessage.getPartyInfo().getTo().setRole(java.lang.String)"], "Fixed commit": "4e0a17606fbeaa8575c6adefbadd84b7b649fcd2", "Url": "https://api.github.com/repos/cefedelivery/domibus", "Date": "2017-01-26T10:00:19Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (strandedModelSet) { printInitialDistribution(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/9083/buggy-version/src.org.seqcode.projects.chexmix.ChExMix.java", "BodyUseAPI": [], "Fixed commit": "fb01c1d5eadd7362c12fb955d44e44848470b8d2", "Url": "https://api.github.com/repos/seqcode/chexmix", "Date": "2017-11-14T01:32:53Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.String.class.equals(targetType)) { result = value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7131/buggy-version/code.core.src.main.java.org.apache.tamaya.core.internal.converters.OptionalConverter.java", "BodyUseAPI": [], "Fixed commit": "57211635f7655f8d138218e4fe6ce547572a7802", "Url": "https://api.github.com/repos/apache/incubator-tamaya", "Date": "2017-08-12T23:27:48Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(user.getId().equals(0L))) { com.pratilipi.data.type.Author author = com.pratilipi.data.access.DataAccessorFactory.getDataAccessor(request).getAuthorByUserId(user.getId()); userData.setFirstName(author.getFirstName()); userData.setLastName(author.getLastName()); }else { userData.setFirstName(user.getFirstName()); userData.setLastName(user.getLastName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8602/buggy-version/src.com.claymus.commons.server.ClaymusHelper.java", "BodyUseAPI": ["com.pratilipi.data.access.DataAccessorFactory.getDataAccessor(request).getAuthorByUserId(user.getId())", "com.claymus.data.transfer.User.getLastName()", "com.claymus.data.transfer.User.getFirstName()", "com.claymus.data.transfer.User.getId()", "com.claymus.service.shared.data.UserData.setFirstName(user.getFirstName())", "com.claymus.service.shared.data.UserData.setLastName(user.getLastName())"], "Fixed commit": "df29d1e44a544dc85476e3aef8b250e67fb95f97", "Url": "https://api.github.com/repos/Claymus/claymus", "Date": "2016-04-02T12:13:15Z"},
{"Line": "=>1219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sr.biz.freightbit.core.service.UserService.findUserByUserName(commonUtils.getUserNameFromSession())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (userEntity.getUserType().equals(\"REGULAR CUSTOMER\")) { if ((userEntity.getCustomerId()) != null) { com.sr.biz.freightbit.customer.entity.Customer customerEntity = customerService.findCustomerById(userEntity.getCustomerId()); customerList.add(customerEntity); }else { customerList = customerService.findAllCustomer(); } }else { customerList = customerService.findAllCustomer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7254/buggy-version/freightbit.src.main.java.com.sr.apps.freightbit.order.action.OrderAction.java", "BodyUseAPI": ["com.sr.biz.freightbit.core.entity.User.getCustomerId()", "com.sr.biz.freightbit.core.entity.User.getCustomerId()", "com.sr.biz.freightbit.customer.service.CustomerService.findCustomerById(userEntity.getCustomerId())"], "Fixed commit": "ecfb401d3e8ca76985e389d9a9ceef3bd334f641", "Url": "https://api.github.com/repos/johnpelquingua/freightbit-logistics", "Date": "2015-05-04T08:46:37Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((colourView) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4340/buggy-version/src.pl.edu.uj.tcs.student.tomaszwesolowski.Display.java", "BodyUseAPI": [], "Fixed commit": "4d329d1b0f9a9b7f8daad9bdfe243ef8534373de", "Url": "https://api.github.com/repos/mrfesol/DisplayPlugin", "Date": "2014-03-05T10:34:08Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == null) return net.openhft.lang.Compare.NULL_HASHCODE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4015/buggy-version/lang.src.main.java.net.openhft.lang.Compare.java", "BodyUseAPI": [], "Fixed commit": "88630dcdc1cca6a26fe55778d9f10e2d467a0d17", "Url": "https://api.github.com/repos/marksantos/Java-Lang", "Date": "2015-05-18T15:18:02Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((arg0[2]) == null) || (arg0[2].equals(\"\"))) { hasAddress = false; }else { hasAddress = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6266/buggy-version/src.ar.com.labs3dg.android.cln.activities.ZoneSearch.java", "BodyUseAPI": [], "Fixed commit": "2c15c80726ec4420e0e972b5cffdb9902cefd46f", "Url": "https://api.github.com/repos/Gazer/CLN-for-Android", "Date": "2011-04-15T18:04:46Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((splitNames.length) == 2) { java.lang.String objectName = splitNames[0]; if (!(objectNameEnumIdMap.containsKey(objectName))) { continue; } matchName = splitNames[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/503/buggy-version/java.src.com.yellowbricksystems.ant.CreatePackageXml.java", "BodyUseAPI": [], "Fixed commit": "882069cc4b10113d3ca12a2ddee07c453427a6f1", "Url": "https://api.github.com/repos/YBS/YBS-SFDC-Build", "Date": "2016-09-17T15:27:33Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.buddycloud.channelserver.pubsub.model.NodeAffiliation.getAffiliation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null != possibleExistingAffiliation) { defaultAffiliation = possibleExistingAffiliation; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4618/buggy-version/src.main.java.org.buddycloud.channelserver.packetprocessor.iq.namespace.pubsub.set.SubscribeSet.java", "BodyUseAPI": [], "Fixed commit": "00fa5ee8a194fb3a35415bf6495447a7728d2df2", "Url": "https://api.github.com/repos/surevine/buddycloud-server-java", "Date": "2013-11-07T17:10:18Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (it.unipd.dei.esp1415.thetrumannshow.FallDetector.Utils.SessionsLab.get(getApplicationContext()).hasRunningSession()) { it.unipd.dei.esp1415.thetrumannshow.FallDetector.Utils.SessionsLab.get(getApplicationContext()).pauseCurrentlyRunningSession(); it.unipd.dei.esp1415.thetrumannshow.FallDetector.Utils.SessionsLab.get(getApplicationContext()).resumeCurrentlyRunningSession(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/750/buggy-version/app.src.main.java.it.unipd.dei.esp1415.thetrumannshow.FallDetector.Activities.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "50a0b0d0421500e8e1c0d3c636dc5bb8a4277fd1", "Url": "https://api.github.com/repos/enriconale/FallDetector", "Date": "2016-03-20T11:11:34Z"},
{"Line": "=>671", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jared.commons.ui.WorkspaceView.getScrollX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((mCurrentScreen) == whichScreen) && (mScrollX == (getLeft()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5337/buggy-version/andro-views.src.org.jared.commons.ui.WorkspaceView.java", "BodyUseAPI": [], "Fixed commit": "357286c9a4663aa4e284fb1f70d9adb51d6bdd3f", "Url": "https://api.github.com/repos/xxv/AndroViews", "Date": "2011-03-06T05:30:44Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Throwable.getCause()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cause instanceof cascading.flow.stream.TrapException) handleReThrowableException(\"unable to write trap data, will not trap, rethrowing\", cause);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7257/buggy-version/cascading-core.src.main.java.cascading.flow.stream.TrapHandler.java", "BodyUseAPI": ["cascading.flow.stream.TrapHandler.handleReThrowableException(java.lang.String,java.lang.Throwable)"], "Fixed commit": "7a49127eab0f3f19c6bdeff3cb8777ff2590d3ce", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2015-03-19T23:14:08Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/9229/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "d7ec56b04963a43715981cf50a143804858ef599", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((accrualData.getInterestIncome()) != null) { interestIncome = accrualData.getInterestIncome(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1628/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.loanaccount.service.LoanAccrualWritePlatformServiceImpl.java", "BodyUseAPI": ["org.mifosplatform.portfolio.loanaccount.data.LoanScheduleAccrualData.getInterestIncome()"], "Fixed commit": "6ffd89cf6e6fd1830d8cecdd9735870e5480c418", "Url": "https://api.github.com/repos/Musoni/mifosx", "Date": "2015-09-02T09:59:16Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.get(org.eclipse.gmf.runtime.notation.View)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(targetEditPart.isSelectable())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7690/buggy-version/plugins.org.yakindu.sct.ui.editor.src.org.yakindu.sct.ui.editor.providers.StatechartMarkerNavigationProvider.java", "BodyUseAPI": [], "Fixed commit": "7a2f7b9940a02607774c0609c42f119353c2e0ec", "Url": "https://api.github.com/repos/Yakindu/statecharts", "Date": "2017-12-14T13:10:38Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) maybeShowWelcomeActivity();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1810/buggy-version/app.src.main.java.com.honu.giftwise.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "335f14790ae7919be75bcf86c96be82430bbf1da", "Url": "https://api.github.com/repos/bdiegel/android-giftwise", "Date": "2015-06-25T00:38:24Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentToken()) instanceof Semicolon) && (!(atLastToken()))) { (idx)++; return new SeqAst(ast, parse()); }else throw new java.lang.RuntimeException(\"Parse failed. Unexpected Semicolon at the end!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1591/buggy-version/src.Parser.java", "BodyUseAPI": [], "Fixed commit": "a507b852d49e6c4bed2c83777e7c591cf8522e83", "Url": "https://api.github.com/repos/Sheilajeffery/Compiler", "Date": "2017-05-04T14:21:16Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentToken()) instanceof Semicolon) && (!(atLastToken()))) { (idx)++; return new SeqAst(new WhileAst(condition, body), parse()); }else { throw new java.lang.RuntimeException(\"Unexpected semicolon at the end!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1591/buggy-version/src.Parser.java", "BodyUseAPI": [], "Fixed commit": "a507b852d49e6c4bed2c83777e7c591cf8522e83", "Url": "https://api.github.com/repos/Sheilajeffery/Compiler", "Date": "2017-05-04T14:21:16Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enabled) { org.eclipse.tm4e.core.model.ITMModel model = getTMModelManager().connect(document); colorize(fromLineNumber, toLineNumber, region, ((org.eclipse.tm4e.ui.internal.model.TMDocumentModel) (model))); }else { if (region != null) { org.eclipse.jface.text.TextPresentation presentation = new org.eclipse.jface.text.TextPresentation(region, 100); presentation.setDefaultStyleRange(new org.eclipse.swt.custom.StyleRange(region.getOffset(), region.getLength(), null, null)); applyTextRegionCollection(presentation); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3688/buggy-version/org.eclipse.tm4e.ui.src.main.java.org.eclipse.tm4e.ui.text.TMPresentationReconciler.java", "BodyUseAPI": [], "Fixed commit": "727378e08c52bd17a9f039d663ef8fb00b74af30", "Url": "https://api.github.com/repos/eclipse/tm4e", "Date": "2017-12-06T11:16:02Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.nav_lihat_data)) { fm.beginTransaction().replace(R.id.content_frame, new com.hasyim.ui.LihatDataFragment()).commit(); }else if (id == (R.id.nav_petunjuk)) { fm.beginTransaction().replace(R.id.content_frame, new com.hasyim.ui.PetunjukFragment()).commit(); }else if (id == (R.id.nav_lihat_peta)) { android.content.Intent intentPeta = new android.content.Intent(this, com.hasyim.ui.MapsActivity.class); startActivity(intentPeta); }else if (id == (R.id.nav_pengembang)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/266/buggy-version/app.src.main.java.com.hasyim.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "73a0730b48d0e564f9d4416874b0da1526e62772", "Url": "https://api.github.com/repos/lordhasyim/SpkBayes", "Date": "2016-01-20T17:50:47Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Tropicraft.proxy.helloIsItMeYoureLookingFor(p)) { p.posY -= offset; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7410/buggy-version/src.main.java.net.tropicraft.core.common.event.ScubaHandlerCommon.java", "BodyUseAPI": [], "Fixed commit": "a6e2b21c828df0685721adb380701c07ef7f9532", "Url": "https://api.github.com/repos/Tropicraft/Tropicraft", "Date": "2017-11-09T03:06:03Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((files.length) > 0) { if (host == null) { com.dotmarketing.util.Logger.error(com.dotmarketing.menubuilders.RefreshMenus.class, ((\"Folder id :\" + (auxFolder.getInode())) + \" has no host\")); return; } for (int i = 0; i < (files.length); i++) { java.io.File file = files[i]; java.lang.String fileName = file.getName(); if (fileName.startsWith(host.getIdentifier())) { file.delete(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4064/buggy-version/src.com.dotmarketing.menubuilders.RefreshMenus.java", "BodyUseAPI": [], "Fixed commit": "3dfc621ffac482d4ed5e35105c9e40b4c4b1375e", "Url": "https://api.github.com/repos/dotCMS/dotCMS", "Date": "2013-07-22T16:52:49Z"},
{"Line": "=>620", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (headerView == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3632/buggy-version/Android-actionbar-pullToRefresh.src.uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher.java", "BodyUseAPI": [], "Fixed commit": "ab08459e1030bd8bbbceb182cfd2d44d85c018c6", "Url": "https://api.github.com/repos/xujinyang/napos_Android_Libs", "Date": "2014-08-25T07:02:22Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["quality.gates.jenkins.plugin.BuildDecision.getStatus(quality.gates.jenkins.plugin.GlobalConfigDataForSonarInstance,quality.gates.jenkins.plugin.JobConfigData)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (buildStatus == (hudson.model.Result.UNSTABLE)) { build.setResult(Result.UNSTABLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5072/buggy-version/QualityGatesPlugin.src.main.java.quality.gates.jenkins.plugin.QGBuilder.java", "BodyUseAPI": [], "Fixed commit": "8653fd7d2830e125b263e633186257147d26918a", "Url": "https://api.github.com/repos/ashu16815/quality-gates-plugin", "Date": "2017-05-01T18:07:18Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((thread) != null) && (!(thread.isAlive()))) thread.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/289/buggy-version/src.FE_SRC_COMMON.com.ForgeEssentials.backup.Backup.java", "BodyUseAPI": ["java.lang.Thread.start()"], "Fixed commit": "ebd28a6071466590e243ae3155692b3445783be8", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentialsMain", "Date": "2013-04-03T02:13:54Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((txt == null) || ((font == null) && (txt.isEmpty()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5903/buggy-version/src.com.jpexs.decompiler.flash.tags.DefineText2Tag.java", "BodyUseAPI": [], "Fixed commit": "14cabef4d6a46373a5eeeaaf32b1bc69434e0aa5", "Url": "https://api.github.com/repos/jindrapetrik/jpexs-decompiler", "Date": "2014-08-16T15:37:30Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.egg.eaction.RequestContext.contextPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((path.length()) == 0) { path = \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7356/buggy-version/src.com.egg.eaction.RequestContext.java", "BodyUseAPI": [], "Fixed commit": "2f445ac58a8d6f148f327ce8f3b55f5070650576", "Url": "https://api.github.com/repos/williamegger/egg-action", "Date": "2015-04-15T12:18:53Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.egg.eaction.FacesTool.contextPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((path.length()) == 0) { path = \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7356/buggy-version/src.com.egg.eaction.FacesTool.java", "BodyUseAPI": [], "Fixed commit": "2f445ac58a8d6f148f327ce8f3b55f5070650576", "Url": "https://api.github.com/repos/williamegger/egg-action", "Date": "2015-04-15T12:18:53Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (baseModel != null) { android.util.Log.e(\"TAG\", (\"baseModel = \" + (baseModel.getNote().size()))); mnf.android.wearnote.Tools.DataLayerListenerService.saveDataToDB(baseModel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7290/buggy-version/wear.src.main.java.mnf.android.wearnote.Tools.DataLayerListenerService.java", "BodyUseAPI": ["baseModel.getNote().size()", "mnf.android.wearnote.Model.BaseModel.getNote()", "android.util.Log.e(java.lang.String,(\"baseModel = \" + (baseModel.getNote().size())))", "mnf.android.wearnote.Tools.DataLayerListenerService.saveDataToDB(mnf.android.wearnote.Model.BaseModel)"], "Fixed commit": "b82488c0d9ad68fb61feef1a8fdec4c385b1a52a", "Url": "https://api.github.com/repos/Muneefm/Android-Wear-Note-App", "Date": "2017-04-24T19:48:43Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (db == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2670/buggy-version/filedownloader.filedownloader.src.main.java.com.mindpin.android.filedownloader.FileRecord.java", "BodyUseAPI": [], "Fixed commit": "054751340b1776a9a78ca4712311367ddf51d94c", "Url": "https://api.github.com/repos/mindpin/FileDownloaderManager", "Date": "2014-07-17T01:26:55Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (oClass == null) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8185/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OChainedIndexProxy.java", "BodyUseAPI": [], "Fixed commit": "28b29914cdb845b678a73272221380cd1ec04c91", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-11-25T10:23:57Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((min.equals(max)) || (lowerNumber.equals(upperNumber))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5172/buggy-version/FiltersAPI.src.org.gephi.filters.api.Range.java", "BodyUseAPI": [], "Fixed commit": "ad9c1ceebcdf099a4bc987d9f89d2f5a9200da1a", "Url": "https://api.github.com/repos/luizribeiro/gephi-plugins", "Date": "2011-10-21T15:44:48Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(icfg.getSuccsOf(edge.getTarget()).isEmpty())) processNormalFlow(edge);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7883/buggy-version/src.soot.jimple.infoflow.solver.fastSolver.IFDSSolver.java", "BodyUseAPI": ["soot.jimple.infoflow.solver.fastSolver.IFDSSolver<N, D, M, I>.PathEdgeProcessingTask.processNormalFlow(heros.solver.PathEdge<N, D>)"], "Fixed commit": "141aff4548c726787043c4138ea278d8421e233c", "Url": "https://api.github.com/repos/secure-software-engineering/soot-infoflow", "Date": "2015-03-19T16:06:07Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((language.getRG()) == null) { viewEditTabbedPane.setEnabledAt(2, false); }else { txtaViewEditRG.setText(language.getRG().getDefinition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6984/buggy-version/src.GUI.ViewEditFrame.java", "BodyUseAPI": ["javax.swing.JTextArea.setText(language.getRG().getDefinition())", "language.getRG().getDefinition()", "RegularLanguages.RegularLanguage.getRG()"], "Fixed commit": "0dd13d8132e5bd1197b0a303def54ee556bfe986", "Url": "https://api.github.com/repos/annavicc/INE5421", "Date": "2017-11-28T21:55:16Z"},
{"Line": "=>1229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((potentialParent.getId()) == null) { product.getErrorMessages().add(java.lang.String.format(messageSource.getMessage(new org.springframework.context.support.DefaultMessageSourceResolvable(\"listing.icsUniqueIdNotFound\"), org.springframework.context.i18n.LocaleContextHolder.getLocale()), potentialParent.getChplProductNumber())); }else if (potentialParent.getId().toString().equals(product.getId().toString())) { product.getErrorMessages().add(java.lang.String.format(messageSource.getMessage(new org.springframework.context.support.DefaultMessageSourceResolvable(\"listing.icsSelfInheritance\"), org.springframework.context.i18n.LocaleContextHolder.getLocale()))); }else { parentIds.add(potentialParent.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/679/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.validation.certifiedProduct.CertifiedProduct2015Validator.java", "BodyUseAPI": ["java.lang.String.format(messageSource.getMessage(new org.springframework.context.support.DefaultMessageSourceResolvable(\"listing.icsUniqueIdNotFound\"), org.springframework.context.i18n.LocaleContextHolder.getLocale()),potentialParent.getChplProductNumber())", "java.util.List<java.lang.Long>.add(potentialParent.getId())", "product.getErrorMessages().add(java.lang.String)", "potentialParent.getId().toString()", "potentialParent.getId().toString().equals(product.getId().toString())", "gov.healthit.chpl.domain.CertifiedProduct.getId()", "gov.healthit.chpl.domain.CertifiedProduct.getId()", "gov.healthit.chpl.domain.CertifiedProduct.getChplProductNumber()"], "Fixed commit": "15d80faa61c39955327c8310e6c247ba8d4fd300", "Url": "https://api.github.com/repos/kekey1/chpl-api", "Date": "2017-10-19T20:50:33Z"},
{"Line": "=>1219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((potentialParent.getId()) == null) { try { gov.healthit.chpl.domain.CertifiedProduct found = searchDao.getByChplProductNumber(potentialParent.getChplProductNumber()); if (found != null) { potentialParent.setId(found.getId()); } } catch (java.lang.Exception ignore) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/679/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.validation.certifiedProduct.CertifiedProduct2015Validator.java", "BodyUseAPI": ["gov.healthit.chpl.domain.CertifiedProduct.getChplProductNumber()", "gov.healthit.chpl.dao.search.CertifiedProductSearchDAO.getByChplProductNumber(potentialParent.getChplProductNumber())", "gov.healthit.chpl.domain.CertifiedProduct.setId(found.getId())"], "Fixed commit": "15d80faa61c39955327c8310e6c247ba8d4fd300", "Url": "https://api.github.com/repos/kekey1/chpl-api", "Date": "2017-10-19T20:50:33Z"},
{"Line": "=>591", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((potentialParent.getId()) == null) { try { gov.healthit.chpl.domain.CertifiedProduct found = searchDao.getByChplProductNumber(potentialParent.getChplProductNumber()); if (found != null) { potentialParent.setId(found.getId()); } } catch (java.lang.Exception ignore) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/679/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.validation.certifiedProduct.CertifiedProduct2015Validator.java", "BodyUseAPI": ["gov.healthit.chpl.dao.search.CertifiedProductSearchDAO.getByChplProductNumber(potentialParent.getChplProductNumber())", "gov.healthit.chpl.dto.CertifiedProductDetailsDTO.getChplProductNumber()", "gov.healthit.chpl.dto.CertifiedProductDetailsDTO.setId(found.getId())"], "Fixed commit": "15d80faa61c39955327c8310e6c247ba8d4fd300", "Url": "https://api.github.com/repos/kekey1/chpl-api", "Date": "2017-10-19T20:50:33Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (maxDate != null) lastRunTimeStr = maxDate.toLocaleString(); else lastRunTimeStr = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6855/buggy-version/frontend.src.main.java.cz.cuni.xrg.intlib.frontend.gui.components.PipelineStatus.java", "BodyUseAPI": ["java.util.Date.toLocaleString()"], "Fixed commit": "5470d889322bac416a210c0c6b099632d66867e3", "Url": "https://api.github.com/repos/mff-uk/intlib", "Date": "2013-07-15T03:21:24Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (json.containsKey(\"in_use\")) { update.setInUse(json.getString(\"in_use\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5295/buggy-version/src.main.java.com.game.core.action.bomb.CommonProcessor.java", "BodyUseAPI": ["com.game.bomb.domain.User.setInUse(json.getString(\"in_use\"))", "net.sf.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "f16013762ee5bd5e3a530fe28da3cb3d25ca1ef4", "Url": "https://api.github.com/repos/Tassemble/520wenxiong", "Date": "2013-11-23T15:26:07Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (json.containsKey(\"portrait\")) { update.setPortrait(getValue(json.get(\"portrait\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5295/buggy-version/src.main.java.com.game.core.action.bomb.CommonProcessor.java", "BodyUseAPI": ["com.game.core.action.bomb.CommonProcessor.getValue(json.get(\"portrait\"))", "net.sf.json.JSONObject.get(java.lang.String)", "com.game.bomb.domain.User.setPortrait(java.lang.Integer)"], "Fixed commit": "f16013762ee5bd5e3a530fe28da3cb3d25ca1ef4", "Url": "https://api.github.com/repos/Tassemble/520wenxiong", "Date": "2013-11-23T15:26:07Z"},
{"Line": "=>649", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["maud.model.LoadedMap.sourceBoneName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (sourceBoneName != null) { Maud.model.getSource().bone.select(sourceBoneName); Maud.model.target.bone.select(targetBoneName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2724/buggy-version/src.main.java.maud.model.LoadedMap.java", "BodyUseAPI": ["Maud.model.getSource().bone.select(java.lang.String)"], "Fixed commit": "7e76a5711b4fa91e987cea5cb17ae535d0a10166", "Url": "https://api.github.com/repos/stephengold/Maud", "Date": "2017-08-14T06:00:08Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valueContainerAlgorithm == null) { if ((((OClass.INDEX_TYPE.NOTUNIQUE.toString().equals(indexType)) || (OClass.INDEX_TYPE.NOTUNIQUE_HASH_INDEX.toString().equals(indexType))) || (OClass.INDEX_TYPE.FULLTEXT_HASH_INDEX.toString().equals(indexType))) || (OClass.INDEX_TYPE.FULLTEXT.toString().equals(indexType))) valueContainerAlgorithm = com.orientechnologies.orient.core.index.ODefaultIndexFactory.MVRBTREE_VALUE_CONTAINER; else valueContainerAlgorithm = com.orientechnologies.orient.core.index.ODefaultIndexFactory.NONE_VALUE_CONTAINER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6563/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashIndexFactory.java", "BodyUseAPI": [], "Fixed commit": "c82b172e93bc2ee4a5c0103988fd1c1afd6f6547", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-10-18T14:17:36Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (null != (postResJson.get(\"pid\"))) ar.setPid(postResJson.get(\"pid\").getAsString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2096/buggy-version/src.main.java.com.ai.paas.ipaas.uac.service.impl.UserClientImpl.java", "BodyUseAPI": ["com.google.gson.JsonObject.get(java.lang.String)", "postResJson.get(\"pid\").getAsString()", "com.ai.paas.ipaas.uac.vo.AuthResult.setPid(postResJson.get(\"pid\").getAsString())"], "Fixed commit": "c5b4abba377d427cfe219db86970dab48a220d80", "Url": "https://api.github.com/repos/AIPaaS/service-sdk-uac", "Date": "2016-07-26T06:20:55Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hcatalog.common.HCatUtil.deserialize(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (list == null) { throw new java.io.IOException((\"job information Map is null or is empty. \" + \" HCatMultiInputFormat.setInput() not called correctly?\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7835/buggy-version/src.java.org.apache.hcatalog.mapreduce.HCatMultiInputFormat.java", "BodyUseAPI": [], "Fixed commit": "6c8a145253591af4468e2fb34e39f5b26d59d13e", "Url": "https://api.github.com/repos/dianping/hcatalog", "Date": "2013-06-22T03:22:02Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jobContext.getConfiguration().get(HCatConstants.HCAT_KEY_MULTI_INPUT_JOB_INFO)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (jobListString == null) { throw new java.io.IOException((\"job information list not found in JobContext.\" + \" HCatMultiInputFormat.setInput() not called?\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7835/buggy-version/src.java.org.apache.hcatalog.mapreduce.HCatMultiInputFormat.java", "BodyUseAPI": [], "Fixed commit": "6c8a145253591af4468e2fb34e39f5b26d59d13e", "Url": "https://api.github.com/repos/dianping/hcatalog", "Date": "2013-06-22T03:22:02Z"},
{"Line": "=>559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(startSession())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5806/buggy-version/src.main.java.com.lhings.java.LhingsDevice.java", "BodyUseAPI": [], "Fixed commit": "e09b1572670bd721ad0b4ac5e99fdd4f57a65d3f", "Url": "https://api.github.com/repos/lhings/java_lhings_library", "Date": "2015-06-04T10:45:16Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((line.length()) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2811/buggy-version/src.org.avuna.httpd.dns.zone.ZoneFile.java", "BodyUseAPI": [], "Fixed commit": "5d97098bfe7a0ba42f17f609ba04f66fc80c1fd5", "Url": "https://api.github.com/repos/paullaz/Avuna-HTTPD", "Date": "2015-05-23T10:44:02Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.maven.surefire.junitcore.ConcurrentRunListener.getTestMethod()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (null != testMethod) { testMethod.testFinished(); testMethod.getTestSet().incrementFinishedTests(getRunListener(), reportImmediately); testMethod.detachFromCurrentThread(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8451/buggy-version/surefire-providers.surefire-junit47.src.main.java.org.apache.maven.surefire.junitcore.ConcurrentRunListener.java", "BodyUseAPI": ["org.apache.maven.surefire.junitcore.TestMethod.getTestSet()", "org.apache.maven.surefire.junitcore.TestMethod.testFinished()", "testMethod.getTestSet().incrementFinishedTests(org.apache.maven.surefire.report.RunListener,boolean)", "org.apache.maven.surefire.junitcore.TestMethod.detachFromCurrentThread()"], "Fixed commit": "6f51572efbb6f3b0132d3225e9077c11bb6e70b9", "Url": "https://api.github.com/repos/agudian/maven-surefire", "Date": "2013-04-27T18:50:17Z"},
{"Line": "=>1005", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (client.admin().indices().prepareExists(((indexName) + \"-*\")).execute().actionGet().isExists()) { createMapping(type, source, ((indexName) + \"-*\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1965/buggy-version/persistence-elasticsearch.core.src.main.java.org.apache.unomi.persistence.elasticsearch.ElasticSearchPersistenceServiceImpl.java", "BodyUseAPI": ["org.apache.unomi.persistence.elasticsearch.ElasticSearchPersistenceServiceImpl.createMapping(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "b8ecd0c4d31c51377dd47316f8340eb7815dd602", "Url": "https://api.github.com/repos/apache/incubator-unomi", "Date": "2017-11-03T17:19:20Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasButtons())) { generalCategory.removePreference(findPreference(com.android.settings.hyperion.LockscreenInterface.PREF_LOCKSCREEN_BUTTONS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8200/buggy-version/src.com.android.settings.hyperion.LockscreenInterface.java", "BodyUseAPI": [], "Fixed commit": "7ed1dd313262daf75d5a98498d211fa068b5742e", "Url": "https://api.github.com/repos/HyperionROM/packages_apps_Settings", "Date": "2014-02-08T02:35:42Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(listFG.isSelectionEmpty())) { if (listFG.getSelectedValue().equals(fName)) { modelMessages.addElement(message); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8368/buggy-version/src.main.java.de.jattyv.client.desktop.gui.cards.ChatCard.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "javax.swing.JList<java.lang.String>.getSelectedValue()"], "Fixed commit": "b9575d76e107d80ef257464c93700f65849f1a73", "Url": "https://api.github.com/repos/Lixja/jattyv-chat-desktop", "Date": "2017-01-12T11:51:39Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (model.isLargeFile()) { snapShot = new com.liulishuo.filedownloader.message.LargeMessageSnapshot.ErrorMessageSnapshot(id, status, model.getSoFar(), throwable); }else { snapShot = new com.liulishuo.filedownloader.message.SmallMessageSnapshot.ErrorMessageSnapshot(id, status, ((int) (model.getSoFar())), throwable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4830/buggy-version/library.src.main.java.com.liulishuo.filedownloader.message.MessageSnapshotTaker.java", "BodyUseAPI": ["com.liulishuo.filedownloader.model.FileDownloadModel.getSoFar()", "com.liulishuo.filedownloader.model.FileDownloadModel.getSoFar()"], "Fixed commit": "399966f45666de28cf7a7556bb97cc003584bc9a", "Url": "https://api.github.com/repos/lingochamp/FileDownloader", "Date": "2016-05-10T03:02:48Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (previousInfo != null) { removeMappingQueryBuilder.append(\" JOIN \").append(mappingTableName).append(\" ON \").append(childTableName).append(\".\").append(childIdColumn).append(\"=\").append(mappingTableName).append(\".\").append(MappingTables.COLUMN_CHILD_ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/9119/buggy-version/SimpleOrmProcessor.src.main.java.com.github.wrdlbrnft.simpleorm.processor.builder.entitymanager.PerformRemoveExecutableBuilder.java", "BodyUseAPI": [], "Fixed commit": "73dff169797a251f3d12ab806112f7b5a9cbae5a", "Url": "https://api.github.com/repos/Wrdlbrnft/SimpleORM", "Date": "2016-09-05T01:24:44Z"},
{"Line": "=>863", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_dTotal) > 1000) { javax.swing.JOptionPane.showMessageDialog(null, \"This transaction exceeds this customers limit and has been denied. \\nPlease contact Shield Compliance for further information.\", \"TRANSACTION DENIED\", javax.swing.JOptionPane.INFORMATION_MESSAGE); }else try { if (customerext.getLastname().equals(\"Sherman\")) { if ((m_dTotal) > 30) { javax.swing.JOptionPane.showMessageDialog(null, \"Out-of-state customers may only purchase 1/4 ounce of product.\\nPlease contact Shield Compliance for further information.\", \"TRANSACTION DENIED\", javax.swing.JOptionPane.INFORMATION_MESSAGE); }else { java.lang.System.out.println(\"I entered the else.\"); com.openbravo.pos.payment.PaymentInfo returnPayment = ((com.openbravo.pos.payment.JPaymentInterface) (m_jTabPayment.getSelectedComponent())).executePayment(); if (returnPayment != null) { m_aPaymentInfo.add(returnPayment); accepted = true; dispose(); } } } } catch (java.lang.NullPointerException name) { java.lang.System.out.println(\"I entered the else.\"); com.openbravo.pos.payment.PaymentInfo returnPayment = ((com.openbravo.pos.payment.JPaymentInterface) (m_jTabPayment.getSelectedComponent())).executePayment(); if (returnPayment != null) { m_aPaymentInfo.add(returnPayment); accepted = true; dispose(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/601/buggy-version/src-pos.com.openbravo.pos.payment.JPaymentSelect.java", "BodyUseAPI": [], "Fixed commit": "a718b39ef55e0b555b91146a6d5bc066a6591baf", "Url": "https://api.github.com/repos/elainemartin/Shield", "Date": "2015-01-27T21:22:40Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (intent.hasExtra(TaginService.EXTRA_QUERY_RESULT)) { java.lang.String urn = intent.getStringExtra(TaginService.EXTRA_QUERY_RESULT); mTagAdderDialog.getURNTextView().setText(urn); ca.idrc.tagin.lib.tags.GetLabelsTask<ca.idrc.tagin.cloud.CloudActivity> task = new ca.idrc.tagin.lib.tags.GetLabelsTask<ca.idrc.tagin.cloud.CloudActivity>(mInstance, urn); task.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6501/buggy-version/experimental.apps.tagin-cloud.src.ca.idrc.tagin.cloud.CloudActivity.java", "BodyUseAPI": ["android.content.Intent.getStringExtra(TaginService.EXTRA_QUERY_RESULT)"], "Fixed commit": "f63cd96c8e687ff9790b910f41680aa0294c72d6", "Url": "https://api.github.com/repos/elyas-bhy/tagin", "Date": "2013-08-28T16:13:47Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.Prison.getInmate(game.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((inmate.getDaysLeft()) > 0) { for (int i = 0; i != 3; i++) { res = currentPlayer.dice.rollDice(); desktop_resources.GUI.setDice(res.getDice(0), 3, 7, res.getDice(1), 4, 8); try { java.lang.Thread.sleep(400); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Something interrupted the dice roll\"); } if (res.areDiceEqual()) { inmate.release(); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4010/buggy-version/src.game.Board.java", "BodyUseAPI": ["game.Inmate.release()"], "Fixed commit": "11469b206f09e91ad078ffd7a77b44076da8d3ad", "Url": "https://api.github.com/repos/Frontlinjen/CDIO4", "Date": "2016-01-13T00:35:35Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentPlayer.hasGetOutOfPrisonCard()) && (desktop_resources.GUI.getUserLeftButtonPressed(game.Translator.getString(\"YOUAREINPRISONWITHCARD\", currentPlayer.getName()), game.Translator.getString(\"YES\"), game.Translator.getString(\"NO\")))) { currentPlayer.setHasGetOutOfPrisonCard(false); inmate.release(); }else { desktop_resources.GUI.showMessage(game.Translator.getString(\"YOUAREINPRISON\", currentPlayer.getName(), inmate.getDaysLeft())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4010/buggy-version/src.game.Board.java", "BodyUseAPI": ["desktop_resources.GUI.showMessage(game.Translator.getString(\"YOUAREINPRISON\", currentPlayer.getName(), inmate.getDaysLeft()))", "game.Player.getName()", "game.Player.setHasGetOutOfPrisonCard(boolean)", "game.Translator.getString(java.lang.String,currentPlayer.getName(),inmate.getDaysLeft())"], "Fixed commit": "11469b206f09e91ad078ffd7a77b44076da8d3ad", "Url": "https://api.github.com/repos/Frontlinjen/CDIO4", "Date": "2016-01-13T00:35:35Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(a.getNiceName().isEmpty())) line1 += (\" \" + highlight) + (a.getNiceName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5708/buggy-version/src.main.java.me.botsko.prism.actionlibs.ActionMessage.java", "BodyUseAPI": ["me.botsko.prism.actions.Handler.getNiceName()"], "Fixed commit": "54ca5afb9158f9ee8932bfeb423cd891a92bc825", "Url": "https://api.github.com/repos/Dykam/Prism", "Date": "2014-02-15T23:58:08Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getServer().getPluginManager().isPluginEnabled(\"MyPet\")) { myPet = ((de.Keyle.MyPet.entity.types.MyPet) (getServer().getPluginManager().getPlugin(\"MyPet\"))); myPetPresent = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3348/buggy-version/src.au.com.mineauz.MobHunting.MobHunting.java", "BodyUseAPI": [], "Fixed commit": "04637be8ea672fea9300b46cf542fb5060a1bdb4", "Url": "https://api.github.com/repos/Schmoller/MobHunting", "Date": "2015-05-24T12:08:37Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.lucascruz.servico.rest.exemplo.repository.LinhaOnibusRepository.findByLinha(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (linhaOnibus != null) posicoes = linhaOnibus.getPosicoes();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/9142/buggy-version/servico-rest-exemplo.src.main.java.br.com.lucascruz.servico.rest.exemplo.controller.LinhaOnibusController.java", "BodyUseAPI": ["br.com.lucascruz.servico.rest.exemplo.bean.LinhaOnibus.getPosicoes()"], "Fixed commit": "72c7491a5ec12ef6a1f2ab049a64526647de2e74", "Url": "https://api.github.com/repos/JeffersonMonteiro/Scopus_Curitiba", "Date": "2016-07-06T17:40:23Z"},
{"Line": "=>851", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.inventory.InventoryOpenEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.elmakers.mine.bukkit.plugins.magic.Wand.isActive(player)) { com.elmakers.mine.bukkit.plugins.magic.Wand wand = new com.elmakers.mine.bukkit.plugins.magic.Wand(player.getItemInHand()); wand.saveInventory(playerSpells); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4556/buggy-version/src.main.java.com.elmakers.mine.bukkit.plugins.magic.Spells.java", "BodyUseAPI": ["org.bukkit.entity.Player.getItemInHand()"], "Fixed commit": "f8f269fd965498fda839ad8ebcf255245c2e6a6c", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2013-10-20T05:46:16Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getMyApplication().getTargetPointsHelper().getPointToNavigate()) != null) && ((mapActivity.getRoutingHelper().isFollowingMode()) || (mapActivity.getRoutingHelper().isRoutePlanningMode()))) { adapter.item(R.string.context_menu_item_last_intermediate_point).iconColor(R.drawable.ic_action_flage_dark).reg(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8278/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivityActions.java", "BodyUseAPI": [], "Fixed commit": "bab02e3d08407dd78fba123f399ea86f82c84fc8", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2015-11-25T11:11:25Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.osmand.plus.ContextMenuAdapter.getElementId(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (standardId == (R.string.context_menu_item_last_intermediate_point)) { getMyApplication().getTargetPointsHelper().navigateToPoint(new net.osmand.data.LatLon(latitude, longitude), true, getMyApplication().getTargetPointsHelper().getIntermediatePoints().size(), mapActivity.getContextMenu().getPointDescription()); }else if (standardId == (R.string.context_menu_item_search)) { android.content.Intent intent = new android.content.Intent(mapActivity, mapActivity.getMyApplication().getAppCustomization().getSearchActivity()); intent.putExtra(SearchActivity.SEARCH_LAT, latitude); intent.putExtra(SearchActivity.SEARCH_LON, longitude); intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); mapActivity.startActivity(intent); }else if (standardId == (R.string.context_menu_item_directions_from)) { mapActivity.getContextMenu().hide(); enterRoutePlanningMode(new net.osmand.data.LatLon(latitude, longitude), mapActivity.getContextMenu().getPointDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8278/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivityActions.java", "BodyUseAPI": [], "Fixed commit": "bab02e3d08407dd78fba123f399ea86f82c84fc8", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2015-11-25T11:11:25Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (idx < 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2379/buggy-version/apps.api-registry.src.main.java.io.fabric8.api.registry.ApiFinder.java", "BodyUseAPI": [], "Fixed commit": "76894d13579b02d6dcf8e2ebd4016e38b9a33fa4", "Url": "https://api.github.com/repos/fabric8io/quickstarts", "Date": "2014-11-25T09:27:32Z"},
{"Line": "=>836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (out != null) { dataLength = out.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6451/buggy-version/TantalumCore.src.main.java.org.tantalum.net.HttpGetter.java", "BodyUseAPI": [], "Fixed commit": "10ccfd0d2968937964ff998839b47134ceaadf78", "Url": "https://api.github.com/repos/TantalumMobile/Tantalum", "Date": "2013-05-27T09:19:36Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) { mInterpolator = android.view.animation.AnimationUtils.loadInterpolator(context, ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP) ? android.R.interpolator.fast_out_slow_in : android.R.anim.decelerate_interpolator)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8724/buggy-version/src.main.java.com.rosshambrick.standardlib.FloatLabelLayout.java", "BodyUseAPI": [], "Fixed commit": "36e31141609614c9e3b91852beb61b1a7ba99488", "Url": "https://api.github.com/repos/stablekernel/standardlib", "Date": "2015-05-29T02:09:44Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entries.getKey().replace('_', '.').equals(key.replace('_', '.'))) { java.lang.Object o = entries.getValue(); if (o instanceof java.lang.String) { return ((T) (AppConfigKey.helper.evaluate(o.toString(), raw))); } return ((T) (o)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1061/buggy-version/src.main.java.act.conf.Config.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()"], "Fixed commit": "c40b59477c72b0142912d8e38f54f4bddfb9bcd9", "Url": "https://api.github.com/repos/actframework/actframework", "Date": "2016-12-13T04:35:34Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (o instanceof java.lang.String) { return ((T) (AppConfigKey.helper.evaluate(o.toString(), raw))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1061/buggy-version/src.main.java.act.conf.Config.java", "BodyUseAPI": ["java.lang.Object.toString()", "AppConfigKey.helper.evaluate(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "c40b59477c72b0142912d8e38f54f4bddfb9bcd9", "Url": "https://api.github.com/repos/actframework/actframework", "Date": "2016-12-13T04:35:34Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.parse.ParseUser.getCurrentUser().getParseFile(\"userImage\")) == null) { profileImageView.setImageResource(R.drawable.ic_profile); }else { com.squareup.picasso.Picasso.with(getActivity()).load(com.parse.ParseUser.getCurrentUser().getParseFile(\"userImage\").getUrl()).into(profileImageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7331/buggy-version/app.src.main.java.example.com.videofly.slidingmenu.FragmentDrawer.java", "BodyUseAPI": [], "Fixed commit": "381a752e5cfd8f5cc565cdf50566465d0cd30f54", "Url": "https://api.github.com/repos/VideoFly/VideoFly", "Date": "2015-04-29T20:42:47Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((n.getTypeArgs()) != null) { for (Type t : n.getTypeArgs()) { if (!(references.contains(t.toString()))) references.add(t.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1994/buggy-version/src.FileDetails.java", "BodyUseAPI": ["ClassOrInterfaceType.getTypeArgs()"], "Fixed commit": "211cb14f456dadf8b815224b7e3788fdfef60bfd", "Url": "https://api.github.com/repos/tofuninja/Medusa", "Date": "2014-04-04T20:56:22Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (prev == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8595/buggy-version/CrackingTheCodeInterview.src.com.prabhash.java.interview.ch2.FindNthToLastNode.java", "BodyUseAPI": [], "Fixed commit": "13b67badc033e5bb6f4bf9ad182459e2b89f6b1b", "Url": "https://api.github.com/repos/prabhash1785/Java", "Date": "2015-07-27T14:46:10Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/101/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.util.DateUtil.java", "BodyUseAPI": [], "Fixed commit": "7ed3b7c8c628e482a6f27bd4641b34487fed5f0f", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2012-06-19T10:30:50Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((schedulerJob.getRepeat()) != null) { if ((schedulerJob.getRepeat()) == 1) { vo.setStopTime(start); }else { if (start != null) { vo.setStopTime(new java.sql.Timestamp(((start.getTime()) + (((schedulerJob.getRepeat()) * (schedulerJob.getSchedulerInterval())) * 1000)))); }else { vo.setStopTime(new java.sql.Timestamp(((create.getTime()) + (((schedulerJob.getRepeat()) * (schedulerJob.getSchedulerInterval())) * 1000)))); } } }else { vo.setStopTime(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7925/buggy-version/core.src.main.java.org.zstack.core.scheduler.SchedulerFacadeImpl.java", "BodyUseAPI": ["org.zstack.core.scheduler.SchedulerJob.getRepeat()", "org.zstack.core.scheduler.SchedulerJob.getRepeat()", "org.zstack.header.core.scheduler.SchedulerVO.setStopTime(java.sql.Timestamp)", "org.zstack.core.scheduler.SchedulerJob.getRepeat()", "org.zstack.header.core.scheduler.SchedulerVO.setStopTime(java.sql.Timestamp)", "org.zstack.core.scheduler.SchedulerJob.getSchedulerInterval()", "org.zstack.core.scheduler.SchedulerJob.getSchedulerInterval()"], "Fixed commit": "ec692f7d27faece1a819fa06dc81507bec36e7e6", "Url": "https://api.github.com/repos/MaJin1996/zstack", "Date": "2017-03-01T11:42:51Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exquery.http.HttpRequest.getContentType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (contentType == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2478/buggy-version/exquery-restxq.src.main.java.org.exquery.restxq.impl.annotation.ConsumesAnnotationImpl.java", "BodyUseAPI": [], "Fixed commit": "075d67aabe909a9caeaaa8b1392760c7fbeb18ef", "Url": "https://api.github.com/repos/exquery/exquery", "Date": "2012-12-21T20:37:43Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (layer.isRenderable()) { mutation.execute(layer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3623/buggy-version/src.org.jwildfire.create.tina.mutagen.MutaGenController.java", "BodyUseAPI": ["org.jwildfire.create.tina.mutagen.Mutation.execute(org.jwildfire.create.tina.base.Layer)"], "Fixed commit": "f4d595975b94db46880f07abb8ccb302e74015d4", "Url": "https://api.github.com/repos/thargor6/JWildfire", "Date": "2014-04-14T22:05:04Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uri.equals(\"chatsecure:/discover\")) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1072/buggy-version/src.info.guardianproject.otr.app.im.service.ChatSessionAdapter.java", "BodyUseAPI": [], "Fixed commit": "9083e54feeeaa15da8beaf310f846c76c1a25bca", "Url": "https://api.github.com/repos/devrandom/ChatSecureAndroid", "Date": "2013-11-20T20:39:05Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bouncycastle.asn1.x500.style.IETFUtils.valueToString(cn.getFirst().getValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(store.isCertificateEntry(cnStr))) && (!(store.isKeyEntry(cnStr)))) { store.setCertificateEntry(cnStr, certificate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2898/buggy-version/platform.security.certificate.security-certificate-keystoreeditor.src.main.java.org.codice.ddf.security.certificate.keystore.editor.KeystoreEditor.java", "BodyUseAPI": ["java.security.KeyStore.setCertificateEntry(java.lang.String,java.security.cert.Certificate)"], "Fixed commit": "c5265623e4d80619076a6a814754bf7d6deec35c", "Url": "https://api.github.com/repos/stustison/ddf", "Date": "2015-09-01T13:35:56Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bouncycastle.asn1.x500.style.IETFUtils.valueToString(cn.getFirst().getValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(store.isCertificateEntry(cnStr))) && (!(store.isKeyEntry(cnStr)))) { store.setCertificateEntry(cnStr, certificate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2898/buggy-version/platform.security.certificate.security-certificate-keystoreeditor.src.main.java.org.codice.ddf.security.certificate.keystore.editor.KeystoreEditor.java", "BodyUseAPI": ["java.security.KeyStore.setCertificateEntry(java.lang.String,java.security.cert.Certificate)"], "Fixed commit": "c5265623e4d80619076a6a814754bf7d6deec35c", "Url": "https://api.github.com/repos/stustison/ddf", "Date": "2015-09-01T13:35:56Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p1_batX) < 0) p1_batX = 0; else if (((p1_batX) + (p1_batLength)) > (screenWidth)) p1_batX = (screenWidth) - (p1_batLength);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3354/buggy-version/src.gameengine.GameState.java", "BodyUseAPI": [], "Fixed commit": "839e3c784bdeda06df030e4a39575bc0d5adde09", "Url": "https://api.github.com/repos/stubb/AndroidPong", "Date": "2013-12-11T13:42:20Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rootPath.equals(\"\"))) { org.kie.commons.java.nio.file.Path defaultFormPath = fileService.getPath((rootPath + \"globals/forms/DefaultTask.ftl\")); if (fileService.exists(defaultFormPath)) { template = new java.io.ByteArrayInputStream(fileService.loadFile(defaultFormPath)); } }else { template = this.getClass().getResourceAsStream(\"/forms/DefaultTask.ftl\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4579/buggy-version/jbpm-services.jbpm-kie-services.src.main.java.org.droolsjbpm.services.impl.form.FormProviderServiceImpl.java", "BodyUseAPI": ["org.jbpm.shared.services.api.FileService.getPath(java.lang.String)"], "Fixed commit": "c28e99a07323eb1f9393b37da7d26a69301050ad", "Url": "https://api.github.com/repos/ServiceMax-Engineering/jbpm", "Date": "2013-04-30T14:10:11Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (processPath != null) { rootPath = processPath.getRoot().toUri().toString(); if (!(rootPath.endsWith(processPath.getFileSystem().getSeparator()))) { rootPath += processPath.getFileSystem().getSeparator(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4579/buggy-version/jbpm-services.jbpm-kie-services.src.main.java.org.droolsjbpm.services.impl.form.FormProviderServiceImpl.java", "BodyUseAPI": ["org.kie.commons.java.nio.file.Path.getFileSystem()", "java.lang.String.endsWith(processPath.getFileSystem().getSeparator())", "processPath.getFileSystem().getSeparator()", "org.kie.commons.java.nio.file.Path.getFileSystem()", "org.kie.commons.java.nio.file.Path.getRoot()", "processPath.getRoot().toUri()", "processPath.getFileSystem().getSeparator()", "processPath.getRoot().toUri().toString()"], "Fixed commit": "c28e99a07323eb1f9393b37da7d26a69301050ad", "Url": "https://api.github.com/repos/ServiceMax-Engineering/jbpm", "Date": "2013-04-30T14:10:11Z"},
{"Line": "=>1029", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tableOptions) != null) { for (java.util.Map.Entry<java.lang.String, com.alibaba.druid.sql.ast.statement.SQLObject> entry : tableOptions.entrySet()) { com.alibaba.druid.sql.ast.statement.SQLObject entryVal = entry.getValue().clone(); x.tableOptions.put(entry.getKey(), entryVal); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3425/buggy-version/src.main.java.com.alibaba.druid.sql.ast.statement.SQLCreateTableStatement.java", "BodyUseAPI": [], "Fixed commit": "a34415a976aba51d0ce2767e8d3ac29ce0e0de57", "Url": "https://api.github.com/repos/FlakyTestDetection/druid", "Date": "2017-11-27T05:38:09Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Looper.myLooper()) == null) { android.os.Looper.prepare(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/931/buggy-version/VirtualApp.lib.src.main.java.com.lody.virtual.client.hook.patchs.notification.compat.NotificationHandler.java", "BodyUseAPI": [], "Fixed commit": "f54996dc94133167a4a4bc89c1053b1bec40bba5", "Url": "https://api.github.com/repos/dstmath/VirtualApp", "Date": "2016-08-08T11:15:45Z"},
{"Line": "=>878", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (network.columnStds)) { this.columnStds.assign(network.columnStds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6920/buggy-version/src.main.java.tv.floe.metronome.deeplearning.neuralnetwork.core.BaseMultiLayerNeuralNetworkVectorized.java", "BodyUseAPI": ["org.apache.mahout.math.Matrix.assign(org.apache.mahout.math.Matrix)"], "Fixed commit": "b5199ce11fa49f6b4e4db579b4682afe865db990", "Url": "https://api.github.com/repos/jpatanooga/Metronome", "Date": "2014-04-08T13:37:13Z"},
{"Line": "=>874", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (network.columnMeans)) { this.columnMeans.assign(network.columnMeans); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6920/buggy-version/src.main.java.tv.floe.metronome.deeplearning.neuralnetwork.core.BaseMultiLayerNeuralNetworkVectorized.java", "BodyUseAPI": ["org.apache.mahout.math.Matrix.assign(org.apache.mahout.math.Matrix)"], "Fixed commit": "b5199ce11fa49f6b4e4db579b4682afe865db990", "Url": "https://api.github.com/repos/jpatanooga/Metronome", "Date": "2014-04-08T13:37:13Z"},
{"Line": "=>882", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (network.columnSums)) { this.columnSums.assign(network.columnSums); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6920/buggy-version/src.main.java.tv.floe.metronome.deeplearning.neuralnetwork.core.BaseMultiLayerNeuralNetworkVectorized.java", "BodyUseAPI": ["org.apache.mahout.math.Matrix.assign(org.apache.mahout.math.Matrix)"], "Fixed commit": "b5199ce11fa49f6b4e4db579b4682afe865db990", "Url": "https://api.github.com/repos/jpatanooga/Metronome", "Date": "2014-04-08T13:37:13Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context) instanceof fr.gouv.etalab.mastodon.activities.MediaActivity) ((fr.gouv.etalab.mastodon.activities.MediaActivity) (context)).runOnUiThread(new java.lang.Runnable() { public void run() { listener.onDownloaded(null, error); } });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/9122/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.client.HttpsConnection.java", "BodyUseAPI": [], "Fixed commit": "9bb2af8bee2f391f882f60790ed15ed881dbb3d7", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-11-18T18:31:43Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context) instanceof fr.gouv.etalab.mastodon.activities.TootActivity) ((fr.gouv.etalab.mastodon.activities.TootActivity) (context)).runOnUiThread(new java.lang.Runnable() { public void run() { listener.onDownloaded(null, error); } });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/9122/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.client.HttpsConnection.java", "BodyUseAPI": [], "Fixed commit": "9bb2af8bee2f391f882f60790ed15ed881dbb3d7", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-11-18T18:31:43Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context) instanceof fr.gouv.etalab.mastodon.activities.MediaActivity) ((fr.gouv.etalab.mastodon.activities.MediaActivity) (context)).runOnUiThread(new java.lang.Runnable() { public void run() { listener.onDownloaded(saveFilePath, null); } });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/9122/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.client.HttpsConnection.java", "BodyUseAPI": [], "Fixed commit": "9bb2af8bee2f391f882f60790ed15ed881dbb3d7", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-11-18T18:31:43Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context) instanceof fr.gouv.etalab.mastodon.activities.TootActivity) ((fr.gouv.etalab.mastodon.activities.TootActivity) (context)).runOnUiThread(new java.lang.Runnable() { public void run() { listener.onDownloaded(saveFilePath, null); } });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/9122/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.client.HttpsConnection.java", "BodyUseAPI": [], "Fixed commit": "9bb2af8bee2f391f882f60790ed15ed881dbb3d7", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-11-18T18:31:43Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((thread) != null) return thread.isPaused(); else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2004/buggy-version/src.Player.java", "BodyUseAPI": [], "Fixed commit": "eee428dd7ea7f57734e4f4fa4f9e40a1134d2082", "Url": "https://api.github.com/repos/mmpozulp/Billboard", "Date": "2014-08-01T20:46:34Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["reminders.get(ID).getActiveForDays()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(days[dayOfWeek])) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/330/buggy-version/app.src.main.java.com.team3.pem.pem.utili.NotifyService.java", "BodyUseAPI": [], "Fixed commit": "b39b22a055cfc52c94e696b5cc16941b0b6a4201", "Url": "https://api.github.com/repos/Holzners/PEM", "Date": "2015-07-03T11:51:25Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.team3.pem.pem.mSQLite.FeedReaderDBHelper.getDatabaseEntriesDay(java.util.List<java.lang.String>,date.getDay(),date.getMonth(),date.getYear())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (factorsDay != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/330/buggy-version/app.src.main.java.com.team3.pem.pem.utili.NotifyService.java", "BodyUseAPI": [], "Fixed commit": "b39b22a055cfc52c94e696b5cc16941b0b6a4201", "Url": "https://api.github.com/repos/Holzners/PEM", "Date": "2015-07-03T11:51:25Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.team3.pem.pem.adapters.RemindersAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((item.getAlarmID()) == 0) { android.widget.Toast.makeText(getApplicationContext(), getResources().getString(R.string.cantdelete), Toast.LENGTH_LONG).show(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/330/buggy-version/app.src.main.java.com.team3.pem.pem.activities.NotificationsActivity.java", "BodyUseAPI": [], "Fixed commit": "b39b22a055cfc52c94e696b5cc16941b0b6a4201", "Url": "https://api.github.com/repos/Holzners/PEM", "Date": "2015-07-03T11:51:25Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (game.App.dead_end) { game.App.dead_end = false; game.App.open_path = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1103/buggy-version/src.game.App.java", "BodyUseAPI": [], "Fixed commit": "f7763ade219bf46810361f0d8009680b59e5179b", "Url": "https://api.github.com/repos/CompSciGuyIT/MazeGenerator_1_Java", "Date": "2016-08-05T22:04:42Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (patient == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8984/buggy-version/similarity-genotype-view.src.main.java.org.phenotips.data.similarity.genotype.DefaultPatientGenotypeManager.java", "BodyUseAPI": [], "Fixed commit": "787148eca23ce53ce0ac518f8cfe18a4748d16d9", "Url": "https://api.github.com/repos/phenotips/patient-network", "Date": "2017-12-07T16:56:37Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.genotype) != null) { json.put(\"genesStatus\", this.genotype.getGenesStatus()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8984/buggy-version/matching-notification-api.src.main.java.org.phenotips.matchingnotification.match.internal.DefaultPatientInMatch.java", "BodyUseAPI": [], "Fixed commit": "787148eca23ce53ce0ac518f8cfe18a4748d16d9", "Url": "https://api.github.com/repos/phenotips/patient-network", "Date": "2017-12-07T16:56:37Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(\"\".equals(entityval))) { java.lang.Integer entityId = java.lang.Integer.parseInt(entityval); com.registryKit.survey.submittedSurveyEntities newEntity = new com.registryKit.survey.submittedSurveyEntities(); newEntity.setEntityId(entityId); newEntity.setSubmittedSurveyId(submittedSurveyId); surveyDAO.submitSurveySelectedEntities(newEntity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3415/buggy-version/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "0ef69f9ae5d10bea703a44c8c43ad327be3c7bdf", "Url": "https://api.github.com/repos/bowlinktech/rr-mvn-repo", "Date": "2017-02-17T17:37:37Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) > 0) return ((int) ((id) ^ ((id) >>> 32)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7373/buggy-version/src.org.yawlfoundation.yawl.worklet.rdr.RdrTree.java", "BodyUseAPI": [], "Fixed commit": "db1fb5ab2a59778dcc2101ccef0444f131c9b19d", "Url": "https://api.github.com/repos/yawlfoundation/yawl", "Date": "2016-10-13T14:52:37Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskId) != null) return taskId.hashCode();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7373/buggy-version/src.org.yawlfoundation.yawl.worklet.rdr.RdrTree.java", "BodyUseAPI": [], "Fixed commit": "db1fb5ab2a59778dcc2101ccef0444f131c9b19d", "Url": "https://api.github.com/repos/yawlfoundation/yawl", "Date": "2016-10-13T14:52:37Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) > 0) return ((int) ((id) ^ ((id) >>> 32)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7373/buggy-version/src.org.yawlfoundation.yawl.worklet.rdr.RdrNode.java", "BodyUseAPI": [], "Fixed commit": "db1fb5ab2a59778dcc2101ccef0444f131c9b19d", "Url": "https://api.github.com/repos/yawlfoundation/yawl", "Date": "2016-10-13T14:52:37Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((condition) != null) return condition.hashCode();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7373/buggy-version/src.org.yawlfoundation.yawl.worklet.rdr.RdrNode.java", "BodyUseAPI": [], "Fixed commit": "db1fb5ab2a59778dcc2101ccef0444f131c9b19d", "Url": "https://api.github.com/repos/yawlfoundation/yawl", "Date": "2016-10-13T14:52:37Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Semant.Semant.transExp(e.exp)", "Semant.Semant.transVar(e.var)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((etVar.ty.actual()) instanceof Semant.Types.RECORD) && ((etExp.ty.actual()) instanceof Semant.Types.NIL)) { return new Semant.ExpTy(null, VOID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6097/buggy-version/Build.Semant.src.Semant.Semant.java", "BodyUseAPI": [], "Fixed commit": "92cb18e6865d8413b9d1d0e93ec3f54383077d1b", "Url": "https://api.github.com/repos/EmileTomas/CS308_CP_TigerCompiler", "Date": "2016-12-07T06:15:40Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pojoTransporte) != null) { pojo.getTransporte().add(pojoTransporte); }else { controllers.ControllerHelper.mostrarAlertaError(\"Cerro sin llenar el formulario.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8994/buggy-version/src.controllers.ControllerSenderos.java", "BodyUseAPI": [], "Fixed commit": "ce4d52e914869e18a2e8df5ed58b6dc8f3712c5e", "Url": "https://api.github.com/repos/GUIAMOVILTURISTICAUPSE/Data_Manager_Desktop", "Date": "2017-08-22T23:40:29Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pojoTransporte) != null) listTransporteSendero.getItems().add(pojoTransporte);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8994/buggy-version/src.controllers.ControllerSenderos.java", "BodyUseAPI": [], "Fixed commit": "ce4d52e914869e18a2e8df5ed58b6dc8f3712c5e", "Url": "https://api.github.com/repos/GUIAMOVILTURISTICAUPSE/Data_Manager_Desktop", "Date": "2017-08-22T23:40:29Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mekanism.common.util.MekanismUtils.getOreDictName(itemstack).contains(\"dustSalt\")) return new mekanism.api.gas.GasStack(mekanism.api.gas.GasRegistry.getGas(\"hydrogenChloride\"), 2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3394/buggy-version/src.main.java.mekanism.common.tile.TileEntityChemicalInjectionChamber.java", "BodyUseAPI": [], "Fixed commit": "4fcd3b47c5054db19c21b7c54efa5980ed5e6cf9", "Url": "https://api.github.com/repos/aidancbrady/Mekanism", "Date": "2014-07-21T20:34:31Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((start == 722) && (end == 849)) java.lang.System.out.printf(\"Starting at %s\\n\", rs.entry);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6830/buggy-version/src.figtree.FigTree.java", "BodyUseAPI": [], "Fixed commit": "559f05c4c3e0d9a0cbc4d25f4c93021b401f16e5", "Url": "https://api.github.com/repos/samkumar/fig-tree", "Date": "2016-05-01T20:52:00Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (arena != null) arena.refund(p);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1915/buggy-version/src.com.garbagemule.MobArena.MACommands.java", "BodyUseAPI": ["com.garbagemule.MobArena.Arena.refund(org.bukkit.entity.Player)"], "Fixed commit": "cc02c067eb77701ae0fc33f8975c19c277bcdbfd", "Url": "https://api.github.com/repos/garbagemule/MobArena", "Date": "2011-07-16T21:01:23Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type != (com.bai.chesscard.utils.ConstentNew.TYPE_BET_MONEY)) { endBetMoeny(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5251/buggy-version/app.src.main.java.com.bai.chesscard.activity.GamingActivityNew.java", "BodyUseAPI": [], "Fixed commit": "cb0bbab15232411ccfa5e2f7e2721abed92708c9", "Url": "https://api.github.com/repos/WhiteorBlack/ChessCard", "Date": "2017-02-24T05:43:50Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entity.isCompositePrimaryKey()) { entity.doWithProperties(new org.springframework.data.mapping.PropertyHandler<org.springframework.data.cassandra.mapping.CassandraPersistentProperty>() { @java.lang.Override public void doWithPersistentProperty(org.springframework.data.cassandra.mapping.CassandraPersistentProperty p) { where.and(com.datastax.driver.core.querybuilder.QueryBuilder.eq(p.getColumnName().toCql(), wrapper.getProperty(p))); } }); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1832/buggy-version/spring-data-cassandra.src.main.java.org.springframework.data.cassandra.convert.MappingCassandraConverter.java", "BodyUseAPI": ["org.springframework.data.cassandra.mapping.CassandraPersistentEntity<?>.doWithProperties(org.springframework.data.mapping.PropertyHandler<org.springframework.data.cassandra.mapping.CassandraPersistentProperty>)"], "Fixed commit": "1f7cbc41004e1b6d27f3493fccf7c12de9934cd1", "Url": "https://api.github.com/repos/spring-projects/spring-data-cassandra", "Date": "2014-09-12T16:13:17Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (apiVersion > (Build.VERSION_CODES.KITKAT)) { mapFragment = ((com.google.android.gms.maps.MapFragment) (getChildFragmentManager().findFragmentById(R.id.mapfrag))); }else { mapFragment = ((com.google.android.gms.maps.MapFragment) (getFragmentManager().findFragmentById(R.id.mapfrag))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2292/buggy-version/app.src.main.java.com.mobilecomputing.group3.mcproject.GMapFragment.java", "BodyUseAPI": [], "Fixed commit": "681fbcf85d69f943417ca9e79414a5a478f3a2cb", "Url": "https://api.github.com/repos/snrao310/TeamSelect_Client", "Date": "2016-04-25T16:09:07Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == 0) { result = tmp; }else { result = result * tmp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/476/buggy-version/org.osate.aadl2.errormodel.analysis.src.org.osate.aadl2.errormodel.analysis.actions.RBDAction.java", "BodyUseAPI": [], "Fixed commit": "8bed95a5bd5350d2f3e775287106ab80c3afb7ae", "Url": "https://api.github.com/repos/osate/ErrorModelV2", "Date": "2013-02-19T19:43:12Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action.equals(\"getVersionCode\")) { android.content.pm.PackageManager packageManager = this.cordova.getActivity().getPackageManager(); callbackContext.success(packageManager.getPackageInfo(this.cordova.getActivity().getPackageName(), 0).versionCode); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2638/buggy-version/src.android.SignatureFingerprint.java", "BodyUseAPI": [], "Fixed commit": "355b20faa6a2a673d9c7e2b4096511e393fda3aa", "Url": "https://api.github.com/repos/fontesoft/cordova-plugin-signature-fingerprint", "Date": "2017-08-01T23:51:23Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(toClose)) { repaint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/901/buggy-version/src.core.runner.GameVisualisation.java", "BodyUseAPI": [], "Fixed commit": "101fdf046b6a1985ffff407097702d1dfc41e514", "Url": "https://api.github.com/repos/aioc/phais", "Date": "2013-12-18T05:05:08Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state == false) { collidedShot(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/735/buggy-version/src.Model.Skills.Skill.java", "BodyUseAPI": [], "Fixed commit": "1209d4a8d9b5b41835d842a14ce8d6e71029910f", "Url": "https://api.github.com/repos/Maestro1337/ssha", "Date": "2013-04-25T17:31:37Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other instanceof de.peeeq.wurstscript.types.WurstTypeStaticTypeRef) { return base.isSubtypeOf(((de.peeeq.wurstscript.types.WurstTypeStaticTypeRef) (other)).base, location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/659/buggy-version/de.peeeq.wurstscript.src.main.java.de.peeeq.wurstscript.types.WurstTypeStaticTypeRef.java", "BodyUseAPI": [], "Fixed commit": "28c75be80db3aa55a87cd43ae6abeb4a6b84a1f5", "Url": "https://api.github.com/repos/wurstscript/WurstScript", "Date": "2017-06-13T21:21:09Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["scope.getInterpreter().interpretValue(java.lang.String)", "scope.getInterpreter().interpretValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(d1 instanceof edu.gordian.values.GordianNumber)) || (!(d2 instanceof edu.gordian.values.GordianNumber))) { return new edu.gordian.values.GordianString(((d1.toString()) + (d2.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7370/buggy-version/src.edu.gordian.elements.GordianInterpreter.java", "BodyUseAPI": ["language.value.Value.toString()", "language.value.Value.toString()"], "Fixed commit": "23dbaa0b1b7dbaaaa1a405c1bbeb575030b19e81", "Url": "https://api.github.com/repos/Team4334/gordian", "Date": "2013-09-14T20:08:25Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.beforeIfdefNodeSelected.getOwnerDocument().equals(afterSiblingNode.getOwnerDocument()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4478/buggy-version/src.main.java.br.edu.ufal.ic.easy.cppmt.mutation.operation.MCIB.java", "BodyUseAPI": [], "Fixed commit": "972a9ef002e9b6141341c349a61216a8af4bd204", "Url": "https://api.github.com/repos/marcioaug/CPPMT", "Date": "2017-09-01T14:30:53Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.IfdefNodeSelected.getOwnerDocument().equals(afterSiblingNode.getOwnerDocument()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4478/buggy-version/src.main.java.br.edu.ufal.ic.easy.cppmt.mutation.operation.MCIB.java", "BodyUseAPI": [], "Fixed commit": "972a9ef002e9b6141341c349a61216a8af4bd204", "Url": "https://api.github.com/repos/marcioaug/CPPMT", "Date": "2017-09-01T14:30:53Z"},
{"Line": "=>858", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((var8.getRocketItem()) != null) { var8.getRocketStacks()[i] = new net.minecraft.item.ItemStack(var8.getRocketItem(), 1, var8.getRocketType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2655/buggy-version/common.micdoodle8.mods.galacticraft.core.util.WorldUtil.java", "BodyUseAPI": ["micdoodle8.mods.galacticraft.core.entities.GCCorePlayerMP.getRocketStacks()", "micdoodle8.mods.galacticraft.core.entities.GCCorePlayerMP.getRocketItem()", "micdoodle8.mods.galacticraft.core.entities.GCCorePlayerMP.getRocketType()"], "Fixed commit": "f821ce8aeb380450fac9369ff911e7cb69256bc4", "Url": "https://api.github.com/repos/Vexatos/Galacticraft", "Date": "2013-09-07T15:20:49Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((artifact.isResolved()) || ((artifact.getFile()) != null)) return artifact;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1615/buggy-version/src.main.java.com.tenderowls.opensource.haxemojos.components.NativeBootstrap.java", "BodyUseAPI": [], "Fixed commit": "717f396c328818d38ab16cd1a93cb78d19c5939a", "Url": "https://api.github.com/repos/bsideup/haxemojos", "Date": "2013-07-08T19:49:46Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((session.getSelectedCell().getField()) > 0) fec.getValues().get(((session.getSelectedCell().getField()) - 1)).requestFocusInWindow();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5291/buggy-version/src.client.panel.SouthWest.java", "BodyUseAPI": ["client.Session.getSelectedCell()", "fec.getValues().get(((session.getSelectedCell().getField()) - 1))", "session.getSelectedCell().getField()", "fec.getValues().get(((session.getSelectedCell().getField()) - 1)).requestFocusInWindow()"], "Fixed commit": "e88f1e024f36786223e567dcc202f4bba9a6375e", "Url": "https://api.github.com/repos/zaphinath/record-indexer", "Date": "2013-08-12T22:26:36Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { replaceFragment(com.android.gscaparrotti.bendermobile.fragments.MainFragment.newInstance(), false); }else { getFragmentManager().popBackStack(null, FragmentManager.POP_BACK_STACK_INCLUSIVE); replaceFragment(com.android.gscaparrotti.bendermobile.fragments.MainFragment.newInstance(), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2835/buggy-version/app.src.main.java.com.android.gscaparrotti.bendermobile.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "827486b0066173f49f080b435a37eca45a7c676a", "Url": "https://api.github.com/repos/gscaparrotti/BenderMobile", "Date": "2016-06-08T11:41:08Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item == null) || ((item.getDefinition()) == null)) { return java.util.Collections.EMPTY_LIST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5558/buggy-version/MineTweaker3-API.src.main.java.minetweaker.api.util.IngredientMap.java", "BodyUseAPI": [], "Fixed commit": "786add64283714c30f46930fab126713b7a668e2", "Url": "https://api.github.com/repos/CraftTweaker/CraftTweaker", "Date": "2017-04-21T15:30:50Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (noFilterSet(filterContext)) { return line + \"\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4252/buggy-version/src.main.java.de.hk.wfh.rs.LogfileExtractor.java", "BodyUseAPI": [], "Fixed commit": "7b168daf44384af9ecb298bec2dbddcea687b38f", "Url": "https://api.github.com/repos/herbkoeg/WildflyHealth", "Date": "2017-02-22T19:59:46Z"},
{"Line": "=>572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.deviceconnect.android.deviceplugin.host.HostDeviceRecorderManager.getStreamRecorder(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((recorder.getState()) == (HostDeviceRecorder.RecorderState.INACTTIVE)) { org.deviceconnect.android.message.MessageUtils.setInvalidRequestParameterError(response, \"recorder is stopped already.\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7753/buggy-version/dConnectDevicePlugin.dConnectDeviceHost.app.src.main.java.org.deviceconnect.android.deviceplugin.host.profile.HostMediaStreamingRecordingProfile.java", "BodyUseAPI": [], "Fixed commit": "f7a2a95e5be9564db30a94142821d2516457811d", "Url": "https://api.github.com/repos/TakayukiHoshi1984/DeviceConnect-Android", "Date": "2016-03-18T12:00:46Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.component) == null) { this.component = getXsd(type, editable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5546/buggy-version/src.main.java.de.thingweb.gui.ThingPanelUI.java", "BodyUseAPI": [], "Fixed commit": "61b90fcee712202665e982c5f8a9fc7dca618076", "Url": "https://api.github.com/repos/thingweb/thingweb-gui", "Date": "2016-07-05T12:42:50Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (foreignKeyColumnAnnotation != null) { try { final java.lang.Class foreignEntityClass = foreignKeyColumnAnnotation.referencedEntityClass(); final org.springframework.jdbc.core.RowMapper foreignEntityClassRowMapper = ((org.springframework.jdbc.core.RowMapper) (com.logpie.framework.db.support.ReflectionUtil.buildInstanceByDefaultConstructor(foreignEntityClass))); com.logpie.framework.db.support.ModelUtil.runSetter(field, mappedObject, foreignEntityClass, foreignEntityClassRowMapper.mapRow(rs, rowNum)); } catch (java.sql.SQLException e) { java.lang.System.out.println((\"SQLException when trying to get object from ResultSet for key: \" + (foreignKeyColumnAnnotation.name()))); e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8047/buggy-version/src.main.java.com.logpie.framework.db.basic.Model.java", "BodyUseAPI": ["com.logpie.framework.db.annotation.ForeignKeyColumn.referencedEntityClass()", "com.logpie.framework.db.annotation.ForeignKeyColumn.name()", "java.io.PrintStream.println((\"SQLException when trying to get object from ResultSet for key: \" + (foreignKeyColumnAnnotation.name())))"], "Fixed commit": "5eb493d1f5db141f7a045960748bb771b7650abe", "Url": "https://api.github.com/repos/xujiahang11/LogpieShoppingTool", "Date": "2017-12-22T01:29:50Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (low > high) { low = tmp[1]; high = tmp[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/985/buggy-version/iris-visualizer.src.main.java.cfa.vo.iris.visualizer.preferences.FittingRangeModel.java", "BodyUseAPI": [], "Fixed commit": "866183fc4d67586af17d42f8bd9eb32ec1576f26", "Url": "https://api.github.com/repos/ChandraCXC/iris", "Date": "2016-07-22T20:24:31Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(resizedItem.getStorage().equals(item.getStorage()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2746/buggy-version/util.src.main.java.com.psddev.dari.util.ImageResizeStorageItemListener.java", "BodyUseAPI": [], "Fixed commit": "191c77be934e17357cc9e6b5dfcd5e29cf86ace7", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2013-10-31T11:37:38Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.niccholaspage.nSpleef.listeners.nSpleefEntityListener.plugin.nSpleefArenas.get(i).getWorld()) == (event.getLocation().getWorld())) { event.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/59/buggy-version/src.com.niccholaspage.nSpleef.listeners.nSpleefEntityListener.java", "BodyUseAPI": ["org.bukkit.event.entity.CreatureSpawnEvent.setCancelled(boolean)"], "Fixed commit": "2e4f52d5c46b3bce2b9fc9e7024b23022824ade2", "Url": "https://api.github.com/repos/niccholaspage/nSpleef", "Date": "2011-04-15T20:00:58Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position >= 0) return ((position + 1) + \". \") + (title); else return title;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5877/buggy-version/Android-DataLib-Sample-Netflix.src.fr.eyal.datalib.sample.netflix.data.model.top100.ItemTop100.java", "BodyUseAPI": [], "Fixed commit": "b828fe4c47c22daf95bf5f390a803617cb6c20ec", "Url": "https://api.github.com/repos/eyal-lezmy/Android-DataLib", "Date": "2013-07-29T14:45:40Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((info.piwai.cv.gwt.client.content.HeaderChapter.presentationHeader) == null) { info.piwai.cv.gwt.client.content.HeaderChapter.presentationHeader = new info.piwai.cv.gwt.client.content.PresentationHeader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8453/buggy-version/src.info.piwai.cv.gwt.client.content.HeaderChapter.java", "BodyUseAPI": [], "Fixed commit": "a3a8501cc73b30bb24e446eff0fa8a1ed2a6b41d", "Url": "https://api.github.com/repos/pyricau/cv-piwai", "Date": "2011-08-10T08:05:20Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\".equals(expression)) throw new java.lang.Exception(\"Expression is empty\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1871/buggy-version/Calculator.java", "BodyUseAPI": [], "Fixed commit": "c4b02cd468d17464cc223ab2c109d30160a6d5b0", "Url": "https://api.github.com/repos/r-savko/git-merge-example", "Date": "2016-01-18T22:51:12Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fuel) > 100) { fuel = 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8446/buggy-version/src.Astro.java", "BodyUseAPI": [], "Fixed commit": "059ce1f78e1a66e8b93dcc67b67f03a8e8a9dffa", "Url": "https://api.github.com/repos/knevin123/Assignment3", "Date": "2016-04-14T09:22:25Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.imageio.ImageIO.read(java.io.InputStream)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (bImageFromConvert != null) { javax.imageio.ImageIO.write(bImageFromConvert, \"png\", new java.io.File(path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5856/buggy-version/FBLS.src.nanofuntas.fbls.DataHandler.java", "BodyUseAPI": ["javax.imageio.ImageIO.write(java.awt.image.BufferedImage,java.lang.String,java.io.File)"], "Fixed commit": "df4764bb085c5d19b1427ee6d776c6def88f1a18", "Url": "https://api.github.com/repos/footballlifer/FBLS", "Date": "2013-12-27T14:24:50Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c instanceof wyil.transforms.Code.Move) && (!(writeSlots))) { wyil.transforms.Code.Move move = ((wyil.transforms.Code.Move) (c)); line = ((\"move \" + (wyil.transforms.WyilFileWriter.getLocal(move.slot, locals))) + \" : \") + (move.type); }else if ((c instanceof wyil.transforms.Code.Update) && (!(writeSlots))) { wyil.transforms.Code.Update store = ((wyil.transforms.Code.Update) (c)); java.lang.String fs = (store.fields.isEmpty()) ? \"\" : \" \"; boolean firstTime = true; for (java.lang.String f : store.fields) { if (!firstTime) { fs += \".\"; } firstTime = false; fs += f; } line = (((((((\"update \" + (wyil.transforms.WyilFileWriter.getLocal(store.slot, locals))) + \" #\") + (store.level)) + fs) + \" : \") + (store.beforeType)) + \" => \") + (store.afterType); }else if ((c instanceof wyil.transforms.Code.IfType) && (!(writeSlots))) { wyil.transforms.Code.IfType iftype = ((wyil.transforms.Code.IfType) (c)); if ((iftype.slot) >= 0) { line = ((((((\"if \" + (wyil.transforms.WyilFileWriter.getLocal(iftype.slot, locals))) + \" is \") + (iftype.test)) + \" goto \") + (iftype.target)) + \" : \") + (iftype.type); }else { line = c.toString(); } }else if ((c instanceof wyil.transforms.Code.ForAll) && (!(writeSlots))) { wyil.transforms.Code.ForAll fall = ((wyil.transforms.Code.ForAll) (c)); java.lang.String modifies = \"\"; boolean firstTime = true; for (int slot : fall.modifies) { if (!firstTime) { modifies += \", \"; } firstTime = false; modifies += wyil.transforms.WyilFileWriter.getLocal(slot, locals); } line = ((((\"forall \" + (wyil.transforms.WyilFileWriter.getLocal(fall.slot, locals))) + \" [\") + modifies) + \"] : \") + (fall.type); }else { line = c.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/263/buggy-version/src.wyil.transforms.WyilFileWriter.java", "BodyUseAPI": ["wyil.transforms.Code.toString()", "wyil.transforms.Code.toString()"], "Fixed commit": "6b71b0357da5dacd244fd7d2f338f29c3234dcf8", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-10-31T22:46:45Z"},
{"Line": "=>695", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((FastQParseMain.inputFile2) != null) { if (FastQParseMain.checkReversedReads) { barcodeEnd2 = tempBarcodeEnd2; enzymeEnd2 = tempEnzymeEnd2; }else { barcodeEnd2 = java.lang.Math.max(0, java.lang.Math.min(lines2[1].length(), barcodeEnd)); enzymeEnd2 = java.lang.Math.max(0, java.lang.Math.min(lines2[1].length(), enzymeEnd)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8899/buggy-version/src.FastQParseMain.java", "BodyUseAPI": [], "Fixed commit": "05c062b10547b4becfd3f1a3d374408093688aa5", "Url": "https://api.github.com/repos/Daniel-Liu-c0deb0t/FastQParse", "Date": "2017-09-10T03:16:26Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (joystick < 0.0) { joystickSqrt = -joystickSqrt; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/280/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.JoystickUtilities.java", "BodyUseAPI": [], "Fixed commit": "f0078a6bc1afd9c4cc827e7002cec82d68ef0636", "Url": "https://api.github.com/repos/StrykeForceFTC/ftc_app", "Date": "2017-11-24T15:39:46Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (possibleDuplicate.isVoided()) { errors.reject(\"Patient.duplicateName\", new java.lang.Object[]{ personName.getFullName() }, (((personName.getFullName()) + \" is a duplicate name for the same patient and it's voided. Please unvoid the existing name \") + \"instead of creating new name\")); }else { errors.reject(\"Patient.duplicateName\", new java.lang.Object[]{ personName.getFullName() }, ((personName.getFullName()) + \" is a duplicate name for the same patient\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3084/buggy-version/omod.src.main.java.org.openmrs.web.controller.patient.ShortPatientFormValidator.java", "BodyUseAPI": [], "Fixed commit": "966fd9cd68177664f3535525bfbac3af4606edfa", "Url": "https://api.github.com/repos/rasanjanap/openmrs-module-legacyui", "Date": "2016-01-23T19:55:10Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"file:\".contains(uri.getScheme())) { try { file = new java.io.File(new java.net.URI(uri.toString())); } catch (java.net.URISyntaxException e) { e.printStackTrace(); } }else if (\"content:\".contains(uri.getScheme())) { java.lang.String[] proj = new java.lang.String[]{ MediaStore.Images.Media.DATA }; android.database.Cursor actualimagecursor = activity.managedQuery(uri, proj, null, null, null); int actual_image_column_index = actualimagecursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA); actualimagecursor.moveToFirst(); java.lang.String img_path = actualimagecursor.getString(actual_image_column_index); file = new java.io.File(img_path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/374/buggy-version/app.src.main.java.com.zsx.util.Lib_Util_File.java", "BodyUseAPI": ["android.net.Uri.getScheme()", "java.lang.String.contains(uri.getScheme())", "android.app.Activity.managedQuery(android.net.Uri,java.lang.String[],<nulltype>,<nulltype>,<nulltype>)", "android.net.Uri.toString()"], "Fixed commit": "0c0c074b43db98073a3c4ee2aa0641b06f5d70fa", "Url": "https://api.github.com/repos/z1986s8x11/androidLib", "Date": "2015-10-09T09:58:14Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hit.material.getShadingSample(rt.HitRecord,this.sampler.makeSamples(1, 2)[0])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(s.isSpecular)) alpha.mult(hit.normal.dot(s.w));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/255/buggy-version/rt.src.rt.integrators.PathTracingIntegrator.java", "BodyUseAPI": ["rt.Spectrum.mult(hit.normal.dot(s.w))", "hit.normal.dot(s.w)"], "Fixed commit": "dfc2021fb1c9693e438f01b5a1a7f9aec9a63eac", "Url": "https://api.github.com/repos/panmari/Rendering-Algorithms-2014", "Date": "2014-04-28T14:49:23Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temp < 0) { temp += HashSubstring.PRIME; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/331/buggy-version/course_2.week_4.assignment_3.src.main.java.HashSubstring.java", "BodyUseAPI": [], "Fixed commit": "52fe61aac537da7be150492318995c3fb4264cfa", "Url": "https://api.github.com/repos/shamim-ahmed/coursera-algorithm-specialization", "Date": "2017-06-25T15:19:23Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actualStatement) != null) { actualStatement.clearBatch(); actualStatement.close(); actualStatement = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6092/buggy-version/src.graphic.AddPanel.java", "BodyUseAPI": [], "Fixed commit": "a8dd8cf84cbbec8f0af0603925f0ec01e5c6720d", "Url": "https://api.github.com/repos/Nayeer/tp2_jdbc", "Date": "2017-10-21T18:29:55Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.minecraftforge.common.ForgeHooks.onNoteChange(noteblock, oldNote))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/9117/buggy-version/src.main.java.openperipheral.integration.vanilla.AdapterNoteBlock.java", "BodyUseAPI": [], "Fixed commit": "6fea2bd8f3c3b3a4b26fd8037c7c0322c8cade18", "Url": "https://api.github.com/repos/OpenMods/OpenPeripheral-Integration", "Date": "2015-12-26T17:01:17Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.latmod.yabba.client.BarrelModelKey, com.latmod.yabba.client.BarrelModelVariant>.get(com.latmod.yabba.client.BarrelModelKey)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (v == null) { v = map.get(BarrelModelKey.DEFAULT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5166/buggy-version/src.main.java.com.latmod.yabba.client.BakedBarrelBlockModel.java", "BodyUseAPI": [], "Fixed commit": "d0ecdf90caf6673b2b47afa310783eeac5e8cfae", "Url": "https://api.github.com/repos/LatvianModder/YABBA", "Date": "2017-06-01T12:57:56Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((BAR_SPEED) > 0) { if ((new_position < ((CAMERA_WIDTH) - ((barSprite.getWidth()) / 2))) || ((java.lang.Math.signum(pAccelerationData.getX())) < 0)) if ((new_position > ((-(barSprite.getWidth())) / 2)) || ((java.lang.Math.signum(pAccelerationData.getX())) > 0)) barSprite.setX(new_position); }else { if ((new_position < ((CAMERA_WIDTH) - ((barSprite.getWidth()) / 2))) || ((java.lang.Math.signum(pAccelerationData.getX())) > 0)) if ((new_position > ((-(barSprite.getWidth())) / 2)) || ((java.lang.Math.signum(pAccelerationData.getX())) < 0)) barSprite.setX(new_position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/456/buggy-version/app.src.main.java.it.unina.is2project.sensorgames.pong.GamePong.java", "BodyUseAPI": [], "Fixed commit": "661371ece925b40e5c696dfeb6c357cd4dec4a70", "Url": "https://api.github.com/repos/Androidiani/Sensor-Ball", "Date": "2015-04-14T12:57:54Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entry.getKey().startsWith(HttpSessionImpl.IO_UNDERTOW)) { session.getSession().setAttribute(entry.getKey(), entry.getValue()); }else { session.setAttribute(entry.getKey(), entry.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6203/buggy-version/servlet.src.main.java.io.undertow.servlet.handlers.SessionRestoringHandler.java", "BodyUseAPI": ["session.getSession().setAttribute(java.lang.String,java.lang.Object)", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "io.undertow.servlet.spec.HttpSessionImpl.setAttribute(java.lang.String,java.lang.Object)", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()"], "Fixed commit": "07cd9351786493111b347e594eefeca55766ca21", "Url": "https://api.github.com/repos/golovnin/undertow", "Date": "2014-07-14T08:59:31Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pk.cwierkacz.processor.handlers.helpers.FileSaver.saveFileFromUrl(t.getTwitterImageUrl())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (awr != null) t.setImagePath(awr.getImgPath());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/468/buggy-version/src.main.java.com.pk.cwierkacz.processor.handlers.FetchMessagesHandler.java", "BodyUseAPI": ["com.pk.cwierkacz.processor.handlers.helpers.AttachmentsWithResources.getImgPath()", "com.pk.cwierkacz.model.dao.TweetDao.setImagePath(awr.getImgPath())"], "Fixed commit": "09c3d0ed196430cd53bea0deee6a8e93c12e2f66", "Url": "https://api.github.com/repos/voncuver/cwierkacz", "Date": "2013-05-29T14:09:59Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.teamTen.recitopia.RecipeBook.query(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (recipes != null) { totalCount += recipes.length; results.add(recipes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6288/buggy-version/src.ca.teamTen.recitopia.SearchActivity.java", "BodyUseAPI": ["java.util.ArrayList<ca.teamTen.recitopia.Recipe[]>.add(ca.teamTen.recitopia.Recipe[])"], "Fixed commit": "8ffd1c00c234c16bae61e5043acdf2063c46fa30", "Url": "https://api.github.com/repos/CMPUT301W13T10/Team10RecipeFinder", "Date": "2013-03-26T23:17:05Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["iHostMonitorData.getHost().getType().getHostAddress()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (connections.containsKey(hostName)) { if (!(connections.get(hostName).isConnected())) { connection = new org.apache.airavata.gfac.monitor.impl.pull.qstat.ResourceConnection(iHostMonitorData, getAuthenticationInfo()); connections.put(hostName, connection); }else { org.apache.airavata.gfac.monitor.impl.pull.qstat.HPCPullMonitor.logger.debug(\"We already have this connection so not going to create one\"); connection = connections.get(hostName); } }else { connection = new org.apache.airavata.gfac.monitor.impl.pull.qstat.ResourceConnection(iHostMonitorData, getAuthenticationInfo()); connections.put(hostName, connection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3558/buggy-version/modules.gfac.gfac-monitor.src.main.java.org.apache.airavata.gfac.monitor.impl.pull.qstat.HPCPullMonitor.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.apache.airavata.gfac.monitor.impl.pull.qstat.ResourceConnection>.put(java.lang.String,org.apache.airavata.gfac.monitor.impl.pull.qstat.ResourceConnection)", "java.util.Map<java.lang.String, org.apache.airavata.gfac.monitor.impl.pull.qstat.ResourceConnection>.get(java.lang.String)", "java.util.Map<java.lang.String, org.apache.airavata.gfac.monitor.impl.pull.qstat.ResourceConnection>.get(java.lang.String)", "connections.get(hostName).isConnected()", "java.util.Map<java.lang.String, org.apache.airavata.gfac.monitor.impl.pull.qstat.ResourceConnection>.put(java.lang.String,org.apache.airavata.gfac.monitor.impl.pull.qstat.ResourceConnection)"], "Fixed commit": "acac1b01a6136ee198e9f6b305f58214c561d9f1", "Url": "https://api.github.com/repos/apache/airavata", "Date": "2014-08-25T17:55:48Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fitnessCounter) > (com.soundbody.configuration.Constants.fitnessCounter)) fitnessCounter = com.soundbody.configuration.Constants.fitnessCounter;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3651/buggy-version/src.main.java.com.soundbody.properties.ExtendedPropertyPlayer.java", "BodyUseAPI": [], "Fixed commit": "d1c8b8e45f23c277c9379cf3bfc92bb02f90f05c", "Url": "https://api.github.com/repos/a3626a/SoundBody-1.0", "Date": "2015-08-16T11:38:32Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.StringTokenizer.nextToken()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (MsgType == \"LOGIN\") for (int i = 0; i < (ChatServer.LoginNames.size()); i++) { java.net.Socket pSocket = ((java.net.Socket) (ChatServer.ClientSockets.elementAt(i))); java.io.DataOutputStream pOut = new java.io.DataOutputStream(pSocket.getOutputStream()); pOut.writeUTF((LoginName + \" has logged in\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2339/buggy-version/src.ChatServer.java", "BodyUseAPI": [], "Fixed commit": "485b584372ebc3ea6f83ff7e60ead9074d232608", "Url": "https://api.github.com/repos/12DReflections/Messenger", "Date": "2015-06-30T19:24:59Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (AptoideUtils.GoogleServices.checkGooglePlayServices(com.aptoide.amethyst.Aptoide.context)) { try { aaid = com.google.android.gms.ads.identifier.AdvertisingIdClient.getAdvertisingIdInfo(this).getId(); } catch (java.lang.Exception e) { e.printStackTrace(); } }else { byte[] data = new byte[16]; java.lang.String deviceId = android.provider.Settings.Secure.getString(com.aptoide.amethyst.Aptoide.context.getContentResolver(), android.provider.Settings.Secure.ANDROID_ID); java.security.SecureRandom secureRandom = new java.security.SecureRandom(); secureRandom.setSeed(deviceId.hashCode()); secureRandom.nextBytes(data); aaid = java.util.UUID.nameUUIDFromBytes(data).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2793/buggy-version/amethystengine.src.main.java.com.aptoide.amethyst.Aptoide.java", "BodyUseAPI": ["android.content.Context.getContentResolver()", "android.provider.Settings.Secure.getString(com.aptoide.amethyst.Aptoide.context.getContentResolver(),android.provider.Settings.Secure.ANDROID_ID)"], "Fixed commit": "315c2db52a48cf00bb5d58ec0415a44362019554", "Url": "https://api.github.com/repos/Aptoide/aptoide-client", "Date": "2016-03-09T16:26:03Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (main.getDescription().getVersion().contains(\"-\")) { numbers.addAll(java.util.Arrays.asList(main.getDescription().getVersion().split(\"-\")[0].split(\"\\\\.\"))); }else { numbers.addAll(java.util.Arrays.asList(main.getDescription().getVersion().split(\"\\\\.\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4427/buggy-version/Source.src.main.java.de.thejeterlp.bukkit.updater.Updater.java", "BodyUseAPI": ["main.getDescription().getVersion().split(java.lang.String)", "java.util.Arrays.asList(main.getDescription().getVersion().split(\"-\")[0].split(\"\\\\.\"))", "main.getDescription().getVersion().split(java.lang.String)", "main.getDescription().getVersion()", "org.bukkit.plugin.java.JavaPlugin.getDescription()", "java.util.ArrayList<java.lang.String>.addAll(java.util.List)", "main.getDescription().getVersion()", "java.util.ArrayList<java.lang.String>.addAll(java.util.List)", "java.util.Arrays.asList(main.getDescription().getVersion().split(\"\\\\.\"))", "org.bukkit.plugin.java.JavaPlugin.getDescription()", "main.getDescription().getVersion().split(\"-\")[0].split(java.lang.String)"], "Fixed commit": "246bad1ce654e3dbc4b5e8342b124a0af564e867", "Url": "https://api.github.com/repos/TheJeterLP/Updater", "Date": "2014-06-05T18:27:51Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (routingNetworkToNode == null) return super.calcLeastCostPath(routingNetworkFromNode, toLink.getFromNode(), startTime, person, vehicle); else return super.calcLeastCostPath(routingNetworkFromNode, routingNetworkToNode, startTime, person, vehicle);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8614/buggy-version/matsim.src.main.java.org.matsim.core.router.TurnRestrictedFastDijkstra.java", "BodyUseAPI": ["org.matsim.core.router.FastDijkstra.calcLeastCostPath(org.matsim.core.router.util.RoutingNetworkNode,org.matsim.core.router.util.RoutingNetworkNode,double,org.matsim.api.core.v01.population.Person,org.matsim.vehicles.Vehicle)"], "Fixed commit": "43b0794ea8676df46ae0df3c966acf3d2d487f52", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2017-09-09T11:06:28Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["managers.WaifuManager.getThirst(java.lang.String,channelEntity.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (thirst == null) { bot.AnimeActor.messageManager.sendMessage(event, ((userName) + \", you don't even know what a waifu is.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1311/buggy-version/src.bot.AnimeActor.java", "BodyUseAPI": [], "Fixed commit": "f4b716a9f2e14bb55ee5f3fbea38112db673f6ca", "Url": "https://api.github.com/repos/palepail/palebotV3", "Date": "2015-08-13T03:40:38Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.games.leaderboard.Leaderboards.LoadPlayerScoreResult.getScore()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (score != null) { int scoreValue = ((int) (score.getRawScore())); android.util.Log.d(\"godot\", (\"GPGS: Leaderboard values is \" + (score.getDisplayScore()))); org.godotengine.godot.GodotLib.calldeferred(instance_id, \"_on_leaderboard_get_value\", new java.lang.Object[]{ scoreValue }); }else { android.util.Log.d(\"godot\", \"GPGS: getLeaderboardValue STATUS_OK but is NULL -> Request again...\"); getLeaderboardValue(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4201/buggy-version/gpgs.android.GodotGooglePlayGameServices.java", "BodyUseAPI": ["com.google.android.gms.games.leaderboard.LeaderboardScore.getDisplayScore()", "android.util.Log.d(java.lang.String,(\"GPGS: Leaderboard values is \" + (score.getDisplayScore())))", "com.google.android.gms.games.leaderboard.LeaderboardScore.getRawScore()"], "Fixed commit": "dcbea0ceec77f6cf231b19be0e42acf567e63b94", "Url": "https://api.github.com/repos/kloder-games/godot-gpgs", "Date": "2016-06-28T21:57:44Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cl) != null) cl.alert(selectedColor);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5003/buggy-version/src.ColorPicker.PPanel.java", "BodyUseAPI": [], "Fixed commit": "423ebd9076abf910270db15d7e1bf7107dd6fdf0", "Url": "https://api.github.com/repos/Alex-Huleatt/Colors", "Date": "2014-10-31T05:34:37Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(de.teamdna.mf.api.CoreRegistry.containerBlocks.containsKey(net.minecraft.block.Block.getIdFromBlock(ore)))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2245/buggy-version/java.de.teamdna.mf.api.CoreRegistry.java", "BodyUseAPI": [], "Fixed commit": "d1d7e07589d5b182dd430ca4cafb867d310e29f1", "Url": "https://api.github.com/repos/websitenmaker12/MineFracturing", "Date": "2014-05-16T22:35:03Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.teamdna.mf.api.CoreRegistry.getContainer(block.getBlock())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (replace != null) this.worldObj.setBlock(block.x, block.y, block.z, replace);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2245/buggy-version/java.de.teamdna.mf.tile.TileEntityBore.java", "BodyUseAPI": ["this.worldObj.setBlock(block.x,block.y,block.z,net.minecraft.block.Block)"], "Fixed commit": "d1d7e07589d5b182dd430ca4cafb867d310e29f1", "Url": "https://api.github.com/repos/websitenmaker12/MineFracturing", "Date": "2014-05-16T22:35:03Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentProtocol.protocolFinished()) { currentProtocol = currentProtocol.getNextProtocol(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/996/buggy-version/src.easy.tcp.main.client.ClientConnection.java", "BodyUseAPI": ["easy.tcp.main.client.ClientConnection.getNextProtocol()"], "Fixed commit": "69728cce35a1ba47730a281b17899084d7340003", "Url": "https://api.github.com/repos/t0biK/Easy-TCPC", "Date": "2016-06-10T12:55:16Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (place instanceof consulo.csharp.lang.psi.CSharpTypeDeclaration) { typeDeclarations.add(((consulo.dotnet.psi.DotNetTypeDeclaration) (place))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3975/buggy-version/csharp-psi-impl.src.consulo.csharp.lang.psi.impl.CSharpVisibilityUtil.java", "BodyUseAPI": [], "Fixed commit": "9bcdaf8fcd0717c2800d1d069c02ef8ec9d8debf", "Url": "https://api.github.com/repos/consulo/consulo-csharp", "Date": "2017-10-31T01:15:02Z"},
{"Line": "=>871", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["args[0].val()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((split.length()) == 0) { for (int i = 0; i < (string.length()); i++) { array.push(new com.laytonsmith.core.functions.CString(string.charAt(i), t)); } return array; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2868/buggy-version/src.main.java.com.laytonsmith.core.functions.StringHandling.java", "BodyUseAPI": [], "Fixed commit": "6f6f02c0d7bc2989a8778e7a3d17b290528f7e4b", "Url": "https://api.github.com/repos/MariuszT/commandhelper", "Date": "2013-06-26T19:13:42Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.excelsiorsoft.genesis.json.deserialization.tradeking.AbstractDeserializer<T>.cursor(com.fasterxml.jackson.databind.JsonNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((node.getNodeType()) != (com.fasterxml.jackson.databind.node.JsonNodeType.MISSING)) { if (node.isContainerNode()) { return deserializeNodeCollection(node, context); }else { result.add(deserializeSingleNode(node, context)); return result; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3719/buggy-version/genesis.src.main.java.com.excelsiorsoft.genesis.json.deserialization.tradeking.AbstractDeserializer.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.isContainerNode()", "com.excelsiorsoft.genesis.json.deserialization.tradeking.AbstractDeserializer<T>.deserializeNodeCollection(com.fasterxml.jackson.databind.JsonNode,java.util.Map<java.lang.String, java.lang.Object>)", "com.excelsiorsoft.genesis.json.deserialization.tradeking.AbstractDeserializer<T>.deserializeSingleNode(com.fasterxml.jackson.databind.JsonNode,java.util.Map<java.lang.String, java.lang.Object>)", "java.util.List<T>.add(T)"], "Fixed commit": "5c0b081faafe3d89ddf23b4fb107cbbf9ab09334", "Url": "https://api.github.com/repos/excelsiorsoft/daedalus", "Date": "2015-09-15T01:43:23Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8601/buggy-version/core.src.main.java.org.apache.carbondata.core.util.DataTypeUtil.java", "BodyUseAPI": [], "Fixed commit": "31bf872dfd03f0d3ed4c245ba180ab47dee8b511", "Url": "https://api.github.com/repos/mayunSaicmotor/incubator-carbondata", "Date": "2017-06-09T09:33:30Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (moveStack.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4690/buggy-version/app.src.main.java.com.radiance.kamisado.GameControl.java", "BodyUseAPI": [], "Fixed commit": "ded612d529831b1aea93ed3308fffb1e8c871dbf", "Url": "https://api.github.com/repos/neery1218/Kamisado", "Date": "2015-06-21T20:00:10Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tracker.servlet.TrackHITsServlet.getRecentInstance(group.getGroupId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (recentInstance != null) { group.setHitsAvailable(recentInstance.getHitsAvailable()); group.setReward(((group.getReward()) * (recentInstance.getHitsAvailable()))); group.setLastSeen(new java.util.Date()); ofy().save().entity(group); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4334/buggy-version/src.main.java.com.tracker.servlet.TrackHITsServlet.java", "BodyUseAPI": ["com.tracker.entity.HITgroup.setReward(((group.getReward()) * (recentInstance.getHitsAvailable())))", "com.tracker.entity.HITinstance.getHitsAvailable()", "com.tracker.entity.HITgroup.setHitsAvailable(recentInstance.getHitsAvailable())", "com.tracker.entity.HITinstance.getHitsAvailable()"], "Fixed commit": "5c0fe8651623915556a414189f7419e69b1c5a5a", "Url": "https://api.github.com/repos/ipeirotis/mturk-tracker-gae", "Date": "2014-04-23T14:10:56Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((script.length()) == 0) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/9256/buggy-version/src.main.java.com.github.andyshao.reflect.GenericInfo.java", "BodyUseAPI": [], "Fixed commit": "c30f2f6f4a1ae72d449312c78ce3e90cc87697a8", "Url": "https://api.github.com/repos/Andy-Shao/Gear", "Date": "2016-04-23T06:20:25Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (firstTail == (-1)) firstTail = script.indexOf(';');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/9256/buggy-version/src.main.java.com.github.andyshao.reflect.GenericInfo.java", "BodyUseAPI": [], "Fixed commit": "c30f2f6f4a1ae72d449312c78ce3e90cc87697a8", "Url": "https://api.github.com/repos/Andy-Shao/Gear", "Date": "2016-04-23T06:20:25Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getPackageManager().getPackageArchiveInfo(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((info != null) && ((info.packageName) != null)) && (info.packageName.startsWith(\"org.buildmlearn.\"))) { savedApis.add(new org.buildmlearn.toolkit.model.SavedApi(apkFile, apkFile.getName(), apkFile.lastModified(), apkFile.getAbsolutePath())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/9011/buggy-version/source-code.app.src.main.java.org.buildmlearn.toolkit.fragment.LoadApkFragment.java", "BodyUseAPI": [], "Fixed commit": "303c6428cde4d77a2c4eec3e341652623c5c6869", "Url": "https://api.github.com/repos/tejavojjala/BuildmLearn-Toolkit-Android", "Date": "2016-08-25T16:58:46Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((me.isPlayer()) && (!(this.isSimulating()))) { main.Game.getPlayer().getMedalCase().useMove(me.getAttack().namesies()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8796/buggy-version/src.battle.Battle.java", "BodyUseAPI": ["main.Game.getPlayer().getMedalCase().useMove(me.getAttack().namesies())", "pokemon.ActivePokemon.getAttack()", "me.getAttack().namesies()"], "Fixed commit": "de69d13ac439cda6d4e40536faad4bd2d18f616a", "Url": "https://api.github.com/repos/leahfortier/pokemon", "Date": "2017-07-04T17:30:15Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input.length()) < 1) return new java.util.HashSet<java.lang.String>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3182/buggy-version/src.net.clonecomputers.lab.AtomicWords.java", "BodyUseAPI": [], "Fixed commit": "f98b6d221aecd5a84cbc8d66e4d45def055ae861", "Url": "https://api.github.com/repos/LAB-Programming/Atomic-Words", "Date": "2013-12-09T20:46:37Z"},
{"Line": "=>1314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fieldMeta == null) { fieldMeta = new java.util.HashMap<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/9184/buggy-version/java.src.com.basiscomponents.db.DataRow.java", "BodyUseAPI": [], "Fixed commit": "a5b89bedbd86c6c28cdef2d1238dd6c44e475402", "Url": "https://api.github.com/repos/BasisHub/components", "Date": "2017-09-20T14:53:26Z"},
{"Line": "=>1318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fieldMeta.get(\"ColumnType\")) != null) s = ((java.lang.String) (fieldMeta.get(\"ColumnType\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/9184/buggy-version/java.src.com.basiscomponents.db.DataRow.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, ?>.get(java.lang.String)"], "Fixed commit": "a5b89bedbd86c6c28cdef2d1238dd6c44e475402", "Url": "https://api.github.com/repos/BasisHub/components", "Date": "2017-09-20T14:53:26Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof com.github.jsonj.JsonPrimitive) { return ((com.github.jsonj.JsonPrimitive) (value)).deepClone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8429/buggy-version/src.main.java.com.github.jsonj.tools.JsonBuilder.java", "BodyUseAPI": [], "Fixed commit": "67fb33109ea21726e1a370e8a5f75cb52acab035", "Url": "https://api.github.com/repos/jillesvangurp/jsonj", "Date": "2013-04-08T13:53:27Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((colNames.length) <= (org.molgenis.vcf.meta.VcfMeta.COL_FORMAT_IDX)) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6060/buggy-version/Genotype-IO.src.main.java.org.molgenis.vcf.meta.VcfMeta.java", "BodyUseAPI": [], "Fixed commit": "1247560a79ef2679f01059cc510c2149a1c49f90", "Url": "https://api.github.com/repos/Bonder-MJ/systemsgenetics", "Date": "2014-09-02T11:00:11Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File(GlobalRef.WORKSPACE).exists())) { java.io.File workspace = new java.io.File(GlobalRef.WORKSPACE); workspace.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8937/buggy-version/src.lu.uni.snt.droidra.Main.java", "BodyUseAPI": [], "Fixed commit": "284f710e1379b8d15582df724531a912e806b095", "Url": "https://api.github.com/repos/serval-snt-uni-lu/DroidRA", "Date": "2016-06-03T12:55:04Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.olympicat.scheduleupdates.FileDataManager.isReady())) com.olympicat.scheduleupdates.FileDataManager.setArguments(getFilesDir(), Constants.FILE_NAME);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8626/buggy-version/app.src.main.java.com.olympicat.scheduleupdates.AutomaticDataRefresher.java", "BodyUseAPI": [], "Fixed commit": "87a039922f579de266f354ef3cd20d3530404000", "Url": "https://api.github.com/repos/BiggerBytes/ScheduleUpdatesApplication", "Date": "2015-10-16T15:53:41Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (builder.hasStartTime()) { builder.addLine(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1453/buggy-version/lib.fr.fbauzac.timecompile.ContentParsedLine.java", "BodyUseAPI": ["fr.fbauzac.timecompile.IntervalBuilder.addLine(fr.fbauzac.timecompile.ContentParsedLine)"], "Fixed commit": "d9fe8c4178421307e91f2068469bdc5481a8d141", "Url": "https://api.github.com/repos/libnoon/time-compile", "Date": "2017-03-06T22:24:58Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canSourceWithEcho()) result.add(commands.sourceActiveDocumentWithEcho());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8558/buggy-version/src.gwt.src.org.rstudio.studio.client.common.filetypes.ScriptFileType.java", "BodyUseAPI": [], "Fixed commit": "9e5e50346d603b7ad6643b61aa05ca502e35c29a", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2017-08-08T15:44:51Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getShoppingItem()) != null) { if (event.isAddEvent()) { addItem(event.getShoppingItem()); }else { removeItem(event.getShoppingItem()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/376/buggy-version/iMat.src.imat.viewcontroller.RootViewController.java", "BodyUseAPI": ["imat.viewcontroller.RootViewController.removeItem(event.getShoppingItem())", "imat.viewcontroller.CartEvent.getShoppingItem()", "imat.viewcontroller.CartEvent.isAddEvent()", "imat.viewcontroller.RootViewController.addItem(event.getShoppingItem())", "imat.viewcontroller.CartEvent.getShoppingItem()"], "Fixed commit": "6f18e58dcd10f9f41b6e4fbe40349766203c379a", "Url": "https://api.github.com/repos/meemsbror/DAT216", "Date": "2016-03-09T11:23:47Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dataSnapshot.child(\"users\").child(account_email.replace(\".\", \",\")).child(\"trips\").getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (trip_key != null) { for (java.lang.String key : trip_key.keySet()) { trip_list.add(dataSnapshot.child(\"trips\").child(key).getValue(fishlinghu.footprint.Trip.class)); trip_key_list.add(key); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7146/buggy-version/app.src.main.java.fishlinghu.footprint.ProfileActivity.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.keySet()"], "Fixed commit": "96135594cc7c9781717a68a29ba34bf8bb1eed02", "Url": "https://api.github.com/repos/fishlinghu/Footprint-AndroidApp", "Date": "2017-11-29T04:06:36Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.String>.getLeft()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (pvalTypeLabel != null) ontoTermDiscoverer.getOntologyTerms(pvalTypeLabel, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4408/buggy-version/src.main.java.uk.ac.ebi.fg.biosd.annotator.ontodiscover.OntoDiscoveryAndAnnotator.java", "BodyUseAPI": ["uk.ac.ebi.onto_discovery.api.OntologyTermDiscoverer.getOntologyTerms(java.lang.String,<nulltype>)"], "Fixed commit": "625ffe069896adba5c4cd34d372d77a926b85033", "Url": "https://api.github.com/repos/EBIBioSamples/biosd_feature_annotator", "Date": "2016-01-14T13:21:45Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!changed) { java.util.UUID u1 = oldMagePermanent.getOriginalPermanent().getAttachedTo(); java.util.UUID u2 = permanent.getAttachedTo(); if ((((u1 == null) && (u2 != null)) || ((u2 == null) && (u1 != null))) || ((u1 != null) && (!(u1.equals(u2))))) { changed = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/501/buggy-version/Mage.Client.src.main.java.mage.client.game.BattlefieldPanel.java", "BodyUseAPI": [], "Fixed commit": "95843f6fa3b71b5ab51e250b0f50319ab7b908aa", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-08-01T10:04:33Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ofp.rootNode.findChildNode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (agendaNode != null) { com.matburt.mobileorg.Parsing.Node todoNode = agendaNode.findChildNode(\"ToDo: ALL\"); if (todoNode != null) { java.lang.String widgetBuffer = \"\"; for (int idx = 0; idx < (todoNode.subNodes.size()); idx++) { widgetBuffer = (widgetBuffer + (todoNode.subNodes.get(idx).nodeName)) + \"\\n\"; } updateViews.setTextViewText(R.id.message, widgetBuffer); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8395/buggy-version/src.com.matburt.mobileorg.MobileOrgWidget.java", "BodyUseAPI": ["com.matburt.mobileorg.Parsing.Node.findChildNode(java.lang.String)"], "Fixed commit": "225c7737d61dc6e8885b0caf1160c78a4276e978", "Url": "https://api.github.com/repos/matburt/mobileorg-android", "Date": "2011-05-05T04:18:52Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sonarQubeVersion.isGreaterThanOrEqual(JacocoConfiguration.SQ_6_2))) { extensions.add(org.sonar.plugins.jacoco.JaCoCoItSensor.class, org.sonar.plugins.jacoco.JaCoCoOverallSensor.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2737/buggy-version/java-jacoco.src.main.java.org.sonar.plugins.jacoco.JaCoCoExtensions.java", "BodyUseAPI": [], "Fixed commit": "b3f74751efbba46d4387cb8a37afdd8782702893", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2016-12-14T16:53:38Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((TeamID1) == 0) || ((TeamID2) == 0)) return \"fail\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1360/buggy-version/src.com.hit.cs.basketball.Basketball.java", "BodyUseAPI": [], "Fixed commit": "a1af2f8058652718848418a37f8270e547042d4d", "Url": "https://api.github.com/repos/f1ne/hit_basketball_web", "Date": "2014-12-17T16:21:59Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (m_serial485) gpioModeSwitch = new java.io.FileWriter(new java.io.File(((\"/sys/class/gpio/\" + gpioSwitchPin) + \"/value\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/291/buggy-version/kura.org.eclipse.kura.protocol.modbus.src.main.java.org.eclipse.kura.protocol.modbus.ModbusProtocolDevice.java", "BodyUseAPI": [], "Fixed commit": "8702848554d66aa77a12cc3a4ac66ae2cb921571", "Url": "https://api.github.com/repos/eclipse/kura", "Date": "2014-11-05T09:48:48Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["regalowl.hyperconomy.api.HyperAPI.getPlayerShop(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ps == null) { sender.sendMessage(((org.bukkit.ChatColor.YELLOW) + \"You must be standing in a player shop to use the command /managemenu\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/518/buggy-version/src.main.java.grokswell.hypermerchant.HyperMerchantPlugin.java", "BodyUseAPI": [], "Fixed commit": "9832b7ecfa2c1f3793d4da2e7a673cf290c412e9", "Url": "https://api.github.com/repos/remremrem/HyperMerchant", "Date": "2014-07-27T23:19:20Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["regalowl.hyperconomy.api.HyperAPI.getHyperObject(ho.getName(),hyperAPI.getShop(this.shopname).getEconomy(),hyperAPI.getShop(this.shopname))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ho1 == null) { java.lang.System.out.println((\"bad object name: \" + (ho.getName()))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/518/buggy-version/src.main.java.grokswell.hypermerchant.ShopStock.java", "BodyUseAPI": [], "Fixed commit": "9832b7ecfa2c1f3793d4da2e7a673cf290c412e9", "Url": "https://api.github.com/repos/remremrem/HyperMerchant", "Date": "2014-07-27T23:19:20Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.AbstractBuild<?, ?>.getProject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"hudson.plugins.promoted_builds.PromotionProcess\".equals(project.getClass().getName())) { project = project.getRootProject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2540/buggy-version/src.main.java.hudson.maven.RedeployPublisher.java", "BodyUseAPI": ["hudson.model.AbstractProject.getRootProject()"], "Fixed commit": "6b379e25d3c2af8e3804087cb5c55a98890960f9", "Url": "https://api.github.com/repos/aheritier/maven-plugin", "Date": "2015-10-23T08:30:05Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.waterforpeople.mapping.domain.QuestionAnswerStore.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((val != null) && (val.contains(\"|\"))) { answers = val.split(\"\\\\|\"); }else { answers = new java.lang.String[]{ val }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7234/buggy-version/GAE.src.org.waterforpeople.mapping.app.web.DataProcessorRestServlet.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "174e61316ea8394ad5a68543173c307eb25324e1", "Url": "https://api.github.com/repos/akvo/akvo-flow", "Date": "2013-06-21T11:04:12Z"},
{"Line": "=>718", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (annotation != null) { sinkPropogateControlMap.put(s, annotation.propogateControlTuples()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8905/buggy-version/engine.src.main.java.com.datatorrent.stram.engine.GenericNode.java", "BodyUseAPI": ["java.util.Map<com.datatorrent.api.Sink, java.lang.Boolean>.put(com.datatorrent.api.Sink,annotation.propogateControlTuples())", "com.datatorrent.api.annotation.OutputPortFieldAnnotation.propogateControlTuples()"], "Fixed commit": "b818c60876660a3645f1118b8aaa1287e823cac7", "Url": "https://api.github.com/repos/bhupeshchawda/apex-core", "Date": "2016-12-21T06:38:42Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((left) != null) { BinarySearchTree newLeft = left.delete(n); return new BinarySearchTree(newLeft, v, right); }else { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6058/buggy-version/src.java.bstNull.BinarySearchTree.java", "BodyUseAPI": [], "Fixed commit": "64d21ddea5e9b3a9584546dc81168147c73fc92c", "Url": "https://api.github.com/repos/aigarashi/PL-LectureNotes", "Date": "2016-10-05T14:11:01Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((right) != null) { BinarySearchTree newRight = right.delete(n); return new BinarySearchTree(left, v, newRight); }else { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6058/buggy-version/src.java.bstNull.BinarySearchTree.java", "BodyUseAPI": [], "Fixed commit": "64d21ddea5e9b3a9584546dc81168147c73fc92c", "Url": "https://api.github.com/repos/aigarashi/PL-LectureNotes", "Date": "2016-10-05T14:11:01Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (obj instanceof java.lang.Long) id = ((java.lang.Long) (obj)).intValue(); else if (obj instanceof java.lang.String) id = java.lang.Integer.parseInt(((java.lang.String) (obj)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1574/buggy-version/src.main.java.com.wireshout.snipe4j.SnipeObjectSet.java", "BodyUseAPI": [], "Fixed commit": "a36e505c43deca65c29d3417e5dd8be680331fb5", "Url": "https://api.github.com/repos/WireShoutLLC/snipe4j", "Date": "2017-07-30T23:51:37Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selectedRecipe.canCraft(inventory)) { inventory.addItemStack(selectedRecipe.craft(inventory)); updateSelectedRecipeInfo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/622/buggy-version/core.src.com.jmrapp.terralegion.game.views.screen.CraftingScreen.java", "BodyUseAPI": ["com.jmrapp.terralegion.game.item.inventory.Inventory.addItemStack(selectedRecipe.craft(inventory))", "com.jmrapp.terralegion.game.item.crafting.CraftingRecipe.craft(com.jmrapp.terralegion.game.item.inventory.Inventory)"], "Fixed commit": "8f6f89f141de91c168b98970cd5cf91bd71f3597", "Url": "https://api.github.com/repos/stinsonga/TerraLegion", "Date": "2016-07-09T20:44:06Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<develop.odata.etl.model.googleplaces.PlaceRecord>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((record.getId().getPlaceId().length()) < 29) { fileName = record.getId().getPlaceId(); }else { fileName = org.apache.commons.lang3.StringUtils.substring(record.getId().getPlaceId(), 0, 28); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1861/buggy-version/src.main.java.develop.odata.etl.services.googleplaces.jobs.DailyJob.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.substring(record.getId().getPlaceId(),int,int)", "develop.odata.etl.model.googleplaces.PlaceRecord.getId()", "record.getId().getPlaceId()", "record.getId().getPlaceId()", "develop.odata.etl.model.googleplaces.PlaceRecord.getId()"], "Fixed commit": "a12de45475aa1d3c02f0e039620ba608c0ce6eed", "Url": "https://api.github.com/repos/robert0714/GooglePlaceMongo", "Date": "2017-11-27T07:12:22Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (enabled) { try { net.darkhax.wawla.modules.addons.ModulePixelmon.classEntityPixelmon = java.lang.Class.forName(\"com.pixelmonmod.pixelmon.entities.pixelmon.EntityPixelmon\"); net.darkhax.wawla.modules.addons.ModulePixelmon.classTileEntityApricornTree = java.lang.Class.forName(\"com.pixelmonmod.pixelmon.blocks.apricornTrees.TileEntityApricornTree\"); net.darkhax.wawla.modules.addons.ModulePixelmon.enumNature = java.lang.Class.forName(\"com.pixelmonmod.pixelmon.enums.EnumNature\"); net.darkhax.wawla.modules.addons.ModulePixelmon.enumGrowth = java.lang.Class.forName(\"com.pixelmonmod.pixelmon.enums.EnumGrowth\"); } catch (java.lang.ClassNotFoundException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4557/buggy-version/src.main.java.net.darkhax.wawla.modules.addons.ModulePixelmon.java", "BodyUseAPI": [], "Fixed commit": "52b64b0fa95344da3a74f4e8bceb7591afd3bb41", "Url": "https://api.github.com/repos/darkhax/WAWLA", "Date": "2014-08-06T02:43:14Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) { getSupportActionBar().setTitle((\"Channel: \" + (channelName))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5763/buggy-version/app.src.main.java.daniev.androidchat.ChatScreen.java", "BodyUseAPI": [], "Fixed commit": "0c0a1e438505b53aa1e6d706460288040be03bb7", "Url": "https://api.github.com/repos/daniel0707/ChatClient", "Date": "2017-10-06T10:54:34Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (certType == null) certType = Certificate.Type.ENTITY;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8534/buggy-version/currency-server.src.main.java.org.currency.web.ejb.ConfigEJB.java", "BodyUseAPI": [], "Fixed commit": "a7f052ce41d4e985c7b1fe1b35397a354a1e62a6", "Url": "https://api.github.com/repos/votingsystem/votingsystem", "Date": "2017-04-05T05:31:06Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pluginType == (EconPlugin.ESSECO)) { return new com.rcjrrjcr.bukkitplugins.BuyAbilities.EconomyInterface.EconEssentials(origin); }else if (pluginType == (EconPlugin.NONE)) { return new com.rcjrrjcr.bukkitplugins.BuyAbilities.EconomyInterface.EconNone(); }else { throw new java.lang.Exception(\"Economy Interface was unable to be created!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/144/buggy-version/src.com.rcjrrjcr.bukkitplugins.BuyAbilities.EconomyInterface.EconFactory.java", "BodyUseAPI": [], "Fixed commit": "04c78eefa315425e89e38099da0af829b8a515ef", "Url": "https://api.github.com/repos/rcjrrjcr/BuyAbilities", "Date": "2011-03-17T14:50:09Z"},
{"Line": "=>620", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((items.size()) == positionAfter) { --positionAfter; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/450/buggy-version/app.src.main.java.com.antoshkaplus.recursivelists.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "defac8d988578c54bf213aa1cce35532ce00cffb", "Url": "https://api.github.com/repos/antoshkaplus/Android_RecursiveLists", "Date": "2015-07-25T22:02:48Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((population.length) == 1) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3220/buggy-version/apiconnector.src.main.java.org.openml.apiconnector.algorithms.MathHelper.java", "BodyUseAPI": [], "Fixed commit": "edabd55b5f28e2c1f3f1e9fd7689181dc22e46c0", "Url": "https://api.github.com/repos/openml/java", "Date": "2014-04-26T07:42:15Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selected) { parentTree.getTree().addSelectionPath(treePath); }else { parentTree.getTree().removeSelectionPath(treePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3895/buggy-version/core.org.jowidgets.spi.impl.swing.src.main.java.org.jowidgets.spi.impl.swing.widgets.TreeNodeImpl.java", "BodyUseAPI": [], "Fixed commit": "8c6e03d9333aca857e17b1f9963f75fcabc04612", "Url": "https://api.github.com/repos/jo-source/jo-widgets", "Date": "2011-05-02T11:09:49Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newPos == (songs.size())) newPos = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4001/buggy-version/app.src.main.java.com.yprikhodko.localmusicplayer.MusicService.java", "BodyUseAPI": [], "Fixed commit": "a73df51a6166f5f49cfeae1f7542e2499d797260", "Url": "https://api.github.com/repos/gorjuspixels/LocalMusicPlayer", "Date": "2014-12-14T22:19:42Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((first.getNext()) == (first)) { first = null; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6315/buggy-version/CircularLists.PatientList.java", "BodyUseAPI": [], "Fixed commit": "4704697d9edd58c20915fea12b88dabe51b64fc9", "Url": "https://api.github.com/repos/BBK-PiJ-2014-23/D7-2", "Date": "2015-01-12T20:23:30Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (freeSpace == (org.sleuthkit.autopsy.ingest.IngestMonitor.DISK_FREE_SPACE_UNKNOWN)) { return true; }else { return freeSpace > (org.sleuthkit.autopsy.ingest.IngestMonitor.MonitorAction.MIN_FREE_DISK_SPACE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7478/buggy-version/Core.src.org.sleuthkit.autopsy.ingest.IngestMonitor.java", "BodyUseAPI": [], "Fixed commit": "3f1b81a4c35940fb47dd91e3d193a0342fc3e3a1", "Url": "https://api.github.com/repos/rcordovano/autopsy", "Date": "2013-07-28T19:13:41Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getFreeSpace()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (freeSpace == 0) { final java.lang.String monitoredPath = root.getAbsolutePath(); if ((monitoredPath.startsWith(\"\\\\\\\\\")) || (monitoredPath.startsWith(\"//\"))) { return org.sleuthkit.autopsy.ingest.IngestMonitor.DISK_FREE_SPACE_UNKNOWN; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7478/buggy-version/Core.src.org.sleuthkit.autopsy.ingest.IngestMonitor.java", "BodyUseAPI": [], "Fixed commit": "3f1b81a4c35940fb47dd91e3d193a0342fc3e3a1", "Url": "https://api.github.com/repos/rcordovano/autopsy", "Date": "2013-07-28T19:13:41Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (items != null) mListItems.addAll(items);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1031/buggy-version/app.src.main.java.com.tagalong.DropdownListAdapter.java", "BodyUseAPI": [], "Fixed commit": "c13af2eae5c267c80cedeed0326385342b1a5135", "Url": "https://api.github.com/repos/kberg721/Tagalong", "Date": "2015-10-03T23:51:12Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.parentClient) != null) this.parentClient.onClientConnectionDead();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8564/buggy-version/project.app.src.main.java.ch.ethz.inf.vs.a4.minker.einz.client.EinzClientConnection.java", "BodyUseAPI": [], "Fixed commit": "b5bfbffc0df3a24ffab000e382d8fdf754ef8afc", "Url": "https://api.github.com/repos/lucidBrot/einz", "Date": "2017-12-01T10:47:35Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((food.getWorld()) != null) { food.setWorldNull(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4806/buggy-version/src.worms.containment.World.java", "BodyUseAPI": ["worms.containment.Food.setWorldNull()"], "Fixed commit": "fce0ab5dee532a163f88effbdf7e966957fde32e", "Url": "https://api.github.com/repos/TheUnnamedNewbie/WormsMilanJoren", "Date": "2014-04-21T17:05:31Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((table.getWaitingTasks()) != null) { table.getWaitingTasks().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8460/buggy-version/src.org.arong.egdownloader.ui.menuitem.StopAllTaskMenuItem.java", "BodyUseAPI": ["table.getWaitingTasks().clear()", "org.arong.egdownloader.ui.table.TaskingTable.getWaitingTasks()"], "Fixed commit": "68f7f3c5f26b53551981a3682633a1038a0476dc", "Url": "https://api.github.com/repos/dipoo/egdownloader", "Date": "2014-12-30T09:22:27Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(profileController.isActiveProfileStored())) { setScreen(new de.croggle.ui.screens.LoadingScreen(this, selectProfileScreen)); }else { setScreen(new de.croggle.ui.screens.LoadingScreen(this, mainMenuScreen)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5709/buggy-version/src.de.croggle.AlligatorApp.java", "BodyUseAPI": [], "Fixed commit": "1a150dbb00d8ab7a0a0f59ebf1e63f7efeb8b079", "Url": "https://api.github.com/repos/TeamCroggle/croggle-base", "Date": "2014-03-08T15:42:18Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (topNrecommendations.isEmpty()) { delfos.common.Global.showWarning(((\"No recommendations for '\" + (recommendationsToUser.getTargetIdentifier())) + \"', Returning empty list.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6341/buggy-version/src.main.java.delfos.rs.output.RecommendationsOutputDatabase.java", "BodyUseAPI": [], "Fixed commit": "018b19645aa108218cd6fb63b586d3cc3166eb85", "Url": "https://api.github.com/repos/jcastro-inf/delfos", "Date": "2016-05-19T00:40:38Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getWidgetCreator().getSubTypeWriter(java.lang.String,<nulltype>,java.lang.String[],<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (subTypeWriter != null) { subTypeWriter.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8954/buggy-version/crux-dev.src.main.java.org.cruxframework.crux.core.rebind.screen.widget.creator.HasDataProviderFactory.java", "BodyUseAPI": ["org.cruxframework.crux.core.rebind.AbstractProxyCreator.SourcePrinter.commit()"], "Fixed commit": "eea454655520decef31db61342f08f3d9e9b0f9b", "Url": "https://api.github.com/repos/thiagobustamante/crux", "Date": "2015-05-07T12:23:47Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(ticket_info[5].equalsIgnoreCase(\"null\"))) { res = ticket_info[5]; close = formatter.parse(ticket_info[6]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4610/buggy-version/src.com.mark.TicketFileManager.java", "BodyUseAPI": ["java.text.DateFormat.parse(java.lang.String)"], "Fixed commit": "5baca73fd42e142ae4b355f17ca5741d3f94993c", "Url": "https://api.github.com/repos/CodingGuruInTraining/JavaLab7_Advanced", "Date": "2017-03-29T21:31:41Z"},
{"Line": "=>1365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rs.getInt(\"amount\")) > (i.getAmount())) i.setAmount(rs.getInt(\"amount\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8147/buggy-version/src.de.bdh.ks.KSHelper.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.setAmount(int)", "java.sql.ResultSet.getInt(java.lang.String)"], "Fixed commit": "797a1dc849bb5d55a90bed7d222e2ec21dd14377", "Url": "https://api.github.com/repos/wmchris/KrimSale", "Date": "2013-02-02T15:42:09Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((exec) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8699/buggy-version/src.java.com.ghlh.tradeway.software.TradeSoftwareController.java", "BodyUseAPI": [], "Fixed commit": "23ebd9bbbcca6b500b07fa71de45d9a9d2475dff", "Url": "https://api.github.com/repos/lqjliu/ghlh", "Date": "2013-12-04T05:24:47Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_value) == null) { java.util.Calendar now = java.util.Calendar.getInstance(); _timeView.setCurrentHour(now.get(java.util.Calendar.HOUR_OF_DAY)); _timeView.setCurrentMinute(now.get(java.util.Calendar.MINUTE)); }else { _timeView.setCurrentHour(_value.get(java.util.Calendar.HOUR_OF_DAY)); _timeView.setCurrentMinute(_value.get(java.util.Calendar.MINUTE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1139/buggy-version/app.src.main.java.paarmann.physikprofil.TimePreference.java", "BodyUseAPI": [], "Fixed commit": "6767008272252afa3289fb07a17c28847e6939b5", "Url": "https://api.github.com/repos/HomeworkProject/android-client", "Date": "2015-05-24T20:30:14Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nedap.university.Packet.getHeader()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.nedap.university.Flag.isSet(Flag.ACK, header.flags)) { java.lang.System.out.println((\"ACK \" + (header.sourceport))); int[] seqAndAck = com.nedap.university.Client.updateSeqAndAck(com.nedap.university.Client.getSeqAndAck(header)); com.nedap.university.Client.sendSimpleReply(seqAndAck); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1805/buggy-version/src.main.java.com.nedap.university.Client.java", "BodyUseAPI": ["com.nedap.university.Client.updateSeqAndAck(int[])", "com.nedap.university.Client.getSeqAndAck(com.nedap.university.UDPHeader)", "java.io.PrintStream.println((\"ACK \" + (header.sourceport)))"], "Fixed commit": "dfcf14f9b0eb7cd4a7df3a9c3297119e0640590c", "Url": "https://api.github.com/repos/MinThaMie/NetSys-project", "Date": "2017-04-11T14:26:11Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { throw new com.box.restclientv2.exceptions.BoxRestException((\"Invalid class, expected:\" + (expectedClass.getCanonicalName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4609/buggy-version/BoxJavaLibraryV2.src.com.box.boxjavalibv2.resourcemanagers.BoxResourceManager.java", "BodyUseAPI": [], "Fixed commit": "f0db26d04fc575131b4878df74809ca028dbc5f5", "Url": "https://api.github.com/repos/mmorearty/box-java-sdk-v2", "Date": "2013-12-05T20:07:11Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.netflix.metacat.common.dto.TableDto.getFields()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fields != null) { int index = 0; for (final com.netflix.metacat.common.dto.FieldDto field : fields) { field.setPos((index++)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5065/buggy-version/metacat-common-server.src.main.java.com.netflix.metacat.common.server.converter.ConverterUtil.java", "BodyUseAPI": [], "Fixed commit": "d05b4cc89aef67d69d7afc38778879602d0025c6", "Url": "https://api.github.com/repos/tgianos/metacat", "Date": "2017-03-23T17:49:38Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (page != null) _createOrUpdatePageMemcache(page);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3810/buggy-version/src.main.java.com.pratilipi.data.DataAccessorGaeImpl.java", "BodyUseAPI": ["com.pratilipi.data.DataAccessorGaeImpl._createOrUpdatePageMemcache(com.pratilipi.data.type.Page)"], "Fixed commit": "4b8ce37f798242f985f7555b0e57f66d060f18c9", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-06-16T09:46:39Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (openVertex.isPlanDone()) { view.getCalculationsPanel().initPanel(); return newTab; }else if (newTab != (NodeEditorView.DESCRIPTION)) { return oldTab; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8024/buggy-version/src.edu.asu.laits.gui.nodeeditor.CoachedModeNodeEditorController.java", "BodyUseAPI": [], "Fixed commit": "30c598eced0eef0b4db435d7e7471f8f91fddfa1", "Url": "https://api.github.com/repos/rptiwari/LaitsV3", "Date": "2013-09-19T22:47:14Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((view.getTabbedPane().getSelectedIndex()) == (NodeEditorView.PLAN)) { view.getCheckButton().setEnabled(false); }else if ((view.getTabbedPane().getSelectedIndex()) == (NodeEditorView.DESCRIPTION)) { if (openVertex.isDescriptionDone()) { view.getCheckButton().setEnabled(false); }else { view.getCheckButton().setEnabled(true); } }else if ((view.getTabbedPane().getSelectedIndex()) == (NodeEditorView.CALCULATIONS)) { if (openVertex.isCalculationsDone()) { view.getCheckButton().setEnabled(false); }else { view.getCheckButton().setEnabled(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8024/buggy-version/src.edu.asu.laits.gui.nodeeditor.CoachedModeNodeEditorController.java", "BodyUseAPI": ["edu.asu.laits.gui.nodeeditor.NodeEditorView.getCheckButton()", "view.getCheckButton().setEnabled(boolean)", "view.getCheckButton().setEnabled(boolean)", "view.getCheckButton().setEnabled(boolean)", "view.getTabbedPane().getSelectedIndex()", "view.getCheckButton().setEnabled(boolean)", "edu.asu.laits.gui.nodeeditor.NodeEditorView.getCheckButton()", "edu.asu.laits.gui.nodeeditor.NodeEditorView.getCheckButton()", "view.getTabbedPane().getSelectedIndex()", "edu.asu.laits.gui.nodeeditor.NodeEditorView.getCheckButton()", "edu.asu.laits.gui.nodeeditor.NodeEditorView.getTabbedPane()", "view.getCheckButton().setEnabled(boolean)", "edu.asu.laits.gui.nodeeditor.NodeEditorView.getCheckButton()", "edu.asu.laits.gui.nodeeditor.NodeEditorView.getTabbedPane()"], "Fixed commit": "30c598eced0eef0b4db435d7e7471f8f91fddfa1", "Url": "https://api.github.com/repos/rptiwari/LaitsV3", "Date": "2013-09-19T22:47:14Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((openVertex.isPlanDone()) && (newTab == (NodeEditorView.CALCULATIONS))) { return newTab; }else if ((!(openVertex.isPlanDone())) && (newTab == (NodeEditorView.CALCULATIONS))) { return oldTab; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8024/buggy-version/src.edu.asu.laits.gui.nodeeditor.CoachedModeNodeEditorController.java", "BodyUseAPI": ["edu.asu.laits.model.Vertex.isPlanDone()"], "Fixed commit": "30c598eced0eef0b4db435d7e7471f8f91fddfa1", "Url": "https://api.github.com/repos/rptiwari/LaitsV3", "Date": "2013-09-19T22:47:14Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.round(((baseFont.getSize()) * (client.getSizeFactor())))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newSize > 0) { java.awt.Font font = new java.awt.Font(baseFont.getName(), baseFont.getStyle(), newSize); client.setFont(font); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3941/buggy-version/PreviewImpl.src.org.gephi.preview.updaters.LabelFontAdjuster.java", "BodyUseAPI": [], "Fixed commit": "72e4d1ff6f14a2acabbf2ce06b4d687e5f13b622", "Url": "https://api.github.com/repos/nolanlab/cytospade", "Date": "2010-08-30T15:00:46Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.opengamma.core.historicaltimeseries.HistoricalTimeSeriesSource.getHistoricalTimeSeries(java.lang.String,com.opengamma.id.ExternalIdBundle,java.lang.String,tradeDate.minusDays(com.opengamma.financial.analytics.model.pnl.PositionExchangeTradedDailyPnLFunction.MAX_DAYS_OLD),boolean,javax.time.calendar.LocalDate,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((hts == null) || ((hts.getTimeSeries()) == null)) { com.opengamma.financial.analytics.model.pnl.PositionExchangeTradedDailyPnLFunction.s_logger.warn((((((((((\"Could not get identifier / mark to market series pair for security \" + bundle) + \" for \") + fieldName) + \" using \") + resolutionKey) + \" from \") + (tradeDate.minusDays(com.opengamma.financial.analytics.model.pnl.PositionExchangeTradedDailyPnLFunction.MAX_DAYS_OLD))) + \" to \") + tradeDate)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5782/buggy-version/projects.OG-Financial.src.com.opengamma.financial.analytics.model.pnl.PositionExchangeTradedDailyPnLFunction.java", "BodyUseAPI": [], "Fixed commit": "85fef3f889ebbed214a94da67eea1bd070c28ea5", "Url": "https://api.github.com/repos/OpenGamma/OG-Platform", "Date": "2011-11-10T18:31:34Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.youknow.timeisgold.view.MainActivity.fragment) == null) { onNavigationItemSelected(mNavigationView.getMenu().findItem(R.id.nav_start_activity)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3255/buggy-version/TimeIsGold.app.src.main.java.com.youknow.timeisgold.view.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "364025d48545ace227badc0f615571c314c03095", "Url": "https://api.github.com/repos/yoonhok524/Capstone-Project", "Date": "2017-09-18T13:42:56Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGameState) == (com.example.mrsnake.GameScreen.GameState.Running)) { mGameState = com.example.mrsnake.GameScreen.GameState.Paused; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5359/buggy-version/app.src.main.java.com.example.mrsnake.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "74d3371b9d5e9b9815d0dbcdecd1928892b20fc2", "Url": "https://api.github.com/repos/mikhail-kostiuk/Mr.Snake", "Date": "2017-02-23T13:51:51Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mWorld.gameOver) { com.example.mrsnake.Settings.addScore(mWorld.score); com.example.mrsnake.Settings.save(mGame.getFileIO()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5359/buggy-version/app.src.main.java.com.example.mrsnake.GameScreen.java", "BodyUseAPI": ["com.example.mrsnake.Settings.addScore(mWorld.score)"], "Fixed commit": "74d3371b9d5e9b9815d0dbcdecd1928892b20fc2", "Url": "https://api.github.com/repos/mikhail-kostiuk/Mr.Snake", "Date": "2017-02-23T13:51:51Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGameState) == (com.example.mrsnake.GameScreen.GameState.Ready)) { drawReadyUI(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5359/buggy-version/app.src.main.java.com.example.mrsnake.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "74d3371b9d5e9b9815d0dbcdecd1928892b20fc2", "Url": "https://api.github.com/repos/mikhail-kostiuk/Mr.Snake", "Date": "2017-02-23T13:51:51Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGameState) == (com.example.mrsnake.GameScreen.GameState.GameOver)) { drawGameOverUI(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5359/buggy-version/app.src.main.java.com.example.mrsnake.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "74d3371b9d5e9b9815d0dbcdecd1928892b20fc2", "Url": "https://api.github.com/repos/mikhail-kostiuk/Mr.Snake", "Date": "2017-02-23T13:51:51Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGameState) == (com.example.mrsnake.GameScreen.GameState.Paused)) { drawPausedUI(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5359/buggy-version/app.src.main.java.com.example.mrsnake.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "74d3371b9d5e9b9815d0dbcdecd1928892b20fc2", "Url": "https://api.github.com/repos/mikhail-kostiuk/Mr.Snake", "Date": "2017-02-23T13:51:51Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGameState) == (com.example.mrsnake.GameScreen.GameState.Running)) { drawRunningUI(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5359/buggy-version/app.src.main.java.com.example.mrsnake.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "74d3371b9d5e9b9815d0dbcdecd1928892b20fc2", "Url": "https://api.github.com/repos/mikhail-kostiuk/Mr.Snake", "Date": "2017-02-23T13:51:51Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.saxion.nl.retroapptive.communication.data.gatherer.isis.applib.representation.DomainObject.getMembers()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((members.get(\"subcategory\").getValue()) != null) { category = members.get(\"subcategory\").getValue().getTextValue(); notitie.setCategory(category); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8729/buggy-version/app.src.main.java.com.saxion.nl.retroapptive.communication.converter.IsisConverter.java", "BodyUseAPI": ["members.get(\"subcategory\").getValue()", "java.util.Map<java.lang.String, com.saxion.nl.retroapptive.communication.data.gatherer.isis.applib.representation.ObjectMember>.get(java.lang.String)", "members.get(\"subcategory\").getValue().getTextValue()"], "Fixed commit": "84ef1f79283935ef959d281d13d4b7868965a9dd", "Url": "https://api.github.com/repos/JonathanBergers/RetroApptive", "Date": "2015-05-28T15:31:47Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getPointerCount()) == 1) { mGestureDetector.clear(); mPossibleGestureFinger = id; mGestureFingerPos = new android.graphics.PointF(x, y); mPossibleGestureFingerTime = now; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7163/buggy-version/src.usask.hci.fastdraw.DrawView.java", "BodyUseAPI": [], "Fixed commit": "1a7fb620f45113ba4cee79512a0515181bf5145d", "Url": "https://api.github.com/repos/tsion/FastDraw", "Date": "2013-07-11T22:55:58Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.length()) > 140) { input = input.replaceAll(\"powerful\", \"hench\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4309/buggy-version/src.main.java.co.uk.jiveelection.campaign.utils.TextHelper.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "cc3f12f48f56f7d48fe85bbf5d5e3da30910c33f", "Url": "https://api.github.com/repos/mezpahlan/jivecampaign", "Date": "2015-04-13T19:08:47Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.length()) > 140) { input = input.replaceAll(\"finances\", \"monies\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4309/buggy-version/src.main.java.co.uk.jiveelection.campaign.utils.TextHelper.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "cc3f12f48f56f7d48fe85bbf5d5e3da30910c33f", "Url": "https://api.github.com/repos/mezpahlan/jivecampaign", "Date": "2015-04-13T19:08:47Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.length()) > 140) { input = input.replaceAll(\"isn't\", \"ain't\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4309/buggy-version/src.main.java.co.uk.jiveelection.campaign.utils.TextHelper.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "cc3f12f48f56f7d48fe85bbf5d5e3da30910c33f", "Url": "https://api.github.com/repos/mezpahlan/jivecampaign", "Date": "2015-04-13T19:08:47Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position > 0) { android.content.Intent i = new android.content.Intent(getApplicationContext(), org.inftel.androidrsa.activities.ChatActivity.class); i.putExtra(\"destJid\", listaPresences.get((position - 1)).getFrom()); i.putExtra(AndroidRsaConstants.PASSPHRASE, org.inftel.androidrsa.activities.ContactsActivity.passPhrase); startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8291/buggy-version/src.org.inftel.androidrsa.activities.ContactsActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,listaPresences.get((position - 1)).getFrom())", "listaPresences.get((position - 1)).getFrom()", "java.util.ArrayList<org.jivesoftware.smack.packet.Presence>.get(int)"], "Fixed commit": "81a8a1b3b56c0b76949f70a2fddec584671972a7", "Url": "https://api.github.com/repos/miguepintor/androidRsa", "Date": "2016-09-12T12:13:24Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recoveryAccount == null) { throw new java.security.InvalidParameterException(\"The recovery account can't be null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2061/buggy-version/core.src.main.java.eu.bittrade.libs.steemj.base.models.operations.RequestAccountRecoveryOperation.java", "BodyUseAPI": [], "Fixed commit": "bd7aa4902499e40acbd5103fc790b9631fbf9281", "Url": "https://api.github.com/repos/marvin-we/steem-java-api-wrapper", "Date": "2017-09-30T09:10:07Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newOwnerAuthority == null) { throw new java.security.InvalidParameterException(\"The new owner authority can't be null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2061/buggy-version/core.src.main.java.eu.bittrade.libs.steemj.base.models.operations.RequestAccountRecoveryOperation.java", "BodyUseAPI": [], "Fixed commit": "bd7aa4902499e40acbd5103fc790b9631fbf9281", "Url": "https://api.github.com/repos/marvin-we/steem-java-api-wrapper", "Date": "2017-09-30T09:10:07Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (accountToRecover == null) { throw new java.security.InvalidParameterException(\"The account to recover can't be null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2061/buggy-version/core.src.main.java.eu.bittrade.libs.steemj.base.models.operations.RequestAccountRecoveryOperation.java", "BodyUseAPI": [], "Fixed commit": "bd7aa4902499e40acbd5103fc790b9631fbf9281", "Url": "https://api.github.com/repos/marvin-we/steem-java-api-wrapper", "Date": "2017-09-30T09:10:07Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clearHierarchies) { view.clearStore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4139/buggy-version/ui.de-lib.src.main.java.org.iplantc.de.admin.desktop.client.ontologies.presenter.OntologiesPresenterImpl.java", "BodyUseAPI": [], "Fixed commit": "0840c6e6a0cb1d26a7b6f71d1d6a38d4cd337e25", "Url": "https://api.github.com/repos/cyverse-archive/DE", "Date": "2016-06-10T23:58:14Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.iplantc.de.admin.desktop.client.ontologies.events.SaveOntologyHierarchyEvent.getIris()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((iris.indexOf(iri)) == ((iris.size()) - 1)) { isLast = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4139/buggy-version/ui.de-lib.src.main.java.org.iplantc.de.admin.desktop.client.ontologies.presenter.OntologiesPresenterImpl.java", "BodyUseAPI": [], "Fixed commit": "0840c6e6a0cb1d26a7b6f71d1d6a38d4cd337e25", "Url": "https://api.github.com/repos/cyverse-archive/DE", "Date": "2016-06-10T23:58:14Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (system.isRescale()) system.autoscaleAxes();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2918/buggy-version/org.dawnsci.spectrum.ui.src.org.dawnsci.spectrum.ui.file.AbstractSpectrumFile.java", "BodyUseAPI": ["org.eclipse.dawnsci.plotting.api.IPlottingSystem.autoscaleAxes()"], "Fixed commit": "d650e22628f49530473d1de50635c4bb545f9349", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2015-09-14T13:10:00Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (system.isRescale()) system.autoscaleAxes();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2918/buggy-version/org.dawnsci.spectrum.ui.src.org.dawnsci.spectrum.ui.file.AbstractSpectrumFile.java", "BodyUseAPI": ["org.eclipse.dawnsci.plotting.api.IPlottingSystem.autoscaleAxes()"], "Fixed commit": "d650e22628f49530473d1de50635c4bb545f9349", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2015-09-14T13:10:00Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (system.isRescale()) system.autoscaleAxes();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2918/buggy-version/org.dawnsci.spectrum.ui.src.org.dawnsci.spectrum.ui.views.TraceProcessPage.java", "BodyUseAPI": ["org.eclipse.dawnsci.plotting.api.IPlottingSystem.autoscaleAxes()"], "Fixed commit": "d650e22628f49530473d1de50635c4bb545f9349", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2015-09-14T13:10:00Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["assignment3.Main.parse(java.util.Scanner)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inputs.size()) == 0) { java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6982/buggy-version/src.assignment3.Main.java", "BodyUseAPI": [], "Fixed commit": "ae9c178d8d2d09acb3ccd7a9e2a9dd38c14dfbb9", "Url": "https://api.github.com/repos/JamesECreamer/WordLadder", "Date": "2016-09-28T03:04:14Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parameters.get(0).equals(\"/QUIT\")) { return new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6982/buggy-version/src.assignment3.Main.java", "BodyUseAPI": [], "Fixed commit": "ae9c178d8d2d09acb3ccd7a9e2a9dd38c14dfbb9", "Url": "https://api.github.com/repos/JamesECreamer/WordLadder", "Date": "2016-09-28T03:04:14Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["assignment3.Main.parse(java.util.Scanner)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inputs.size()) == 1) { java.lang.System.out.println(\"You only entered one number\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6982/buggy-version/src.assignment3.Main.java", "BodyUseAPI": [], "Fixed commit": "ae9c178d8d2d09acb3ccd7a9e2a9dd38c14dfbb9", "Url": "https://api.github.com/repos/JamesECreamer/WordLadder", "Date": "2016-09-28T03:04:14Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (target == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2514/buggy-version/src.main.java.be.Balor.Manager.Commands.Items.Enchant.java", "BodyUseAPI": [], "Fixed commit": "cdc77f21a71c115aa0459ba5d313cec04490e058", "Url": "https://api.github.com/repos/Belphemur/AdminCmd", "Date": "2013-08-05T08:58:35Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getItemInHand()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((itemInHand == null) || ((itemInHand != null) && (itemInHand.getType().equals(Material.AIR)))) { LocaleHelper.ERROR_HOLD_ITEM.sendLocale(sender); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2514/buggy-version/src.main.java.be.Balor.Manager.Commands.Items.Enchant.java", "BodyUseAPI": [], "Fixed commit": "cdc77f21a71c115aa0459ba5d313cec04490e058", "Url": "https://api.github.com/repos/Belphemur/AdminCmd", "Date": "2013-08-05T08:58:35Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (target instanceof java.util.Map) { return encodeMap(walker, target); }else if (target.getClass().isArray()) { return encodeArray(walker, target); }else if (target instanceof java.lang.Iterable) { return encodeList(walker, target); }else if ((target instanceof java.lang.Number) || (target instanceof java.lang.Boolean)) { return target; }else { return target.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7311/buggy-version/carracoo-beans.src.main.java.org.carracoo.beans.core.BeanEncoderImpl.java", "BodyUseAPI": ["org.carracoo.beans.core.BeanEncoderImpl.encodeMap(org.carracoo.beans.core.Walker,java.lang.Object)", "java.lang.Class<? extends java.lang.Object>.isArray()", "java.lang.Object.getClass()", "org.carracoo.beans.core.BeanEncoderImpl.encodeList(org.carracoo.beans.core.Walker,java.lang.Object)", "org.carracoo.beans.core.BeanEncoderImpl.encodeArray(org.carracoo.beans.core.Walker,java.lang.Object)", "java.lang.Object.toString()"], "Fixed commit": "7633c589414ffcec2793ac17479a2b2b50f469a6", "Url": "https://api.github.com/repos/BYUS-INC/java-carracoo", "Date": "2013-08-08T02:24:52Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.pagecontent.pratilipi.PratilipiContentHelper.createPratilipiData(com.pratilipi.data.transfer.Pratilipi,com.pratilipi.data.transfer.Language,com.pratilipi.data.transfer.Author,<nulltype>,javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((pratilipiData.getLanguage()) != null) && ((pratilipiData.getLanguage().getId()) == 6319546696728576L)) { ogLocale = \"ta_IN\"; ogPublisher = \"https://www.facebook.com/pages/%E0%AE%AA%E0%AF%8D%E0%AE%B0%E0%AE%A4%E0%AE%BF%E0%AE%B2%E0%AE%BF%E0%AE%AA%E0%AE%BF/448203822022932\"; }else if (((pratilipiData.getLanguage()) != null) && ((pratilipiData.getLanguage().getId()) == 5965057007550464L)) { ogLocale = \"gu_IN\"; ogPublisher = \"https://www.facebook.com/pratilipiGujarati\"; }else if (((pratilipiData.getLanguage()) != null) && ((pratilipiData.getLanguage().getId()) == 5173513199550464L)) { ogLocale = \"mr_IN\"; ogPublisher = \"https://www.facebook.com/pages/Pratilipi-Marathi/1456803991281092\"; }else { ogLocale = \"hi_IN\"; ogPublisher = \"https://www.facebook.com/Pratilipidotcom\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/483/buggy-version/src.com.pratilipi.pagecontent.pratilipi.PratilipiContentProcessor.java", "BodyUseAPI": ["com.pratilipi.service.shared.data.PratilipiData.getLanguage()", "com.pratilipi.service.shared.data.PratilipiData.getLanguage()", "pratilipiData.getLanguage().getId()", "pratilipiData.getLanguage().getId()", "com.pratilipi.service.shared.data.PratilipiData.getLanguage()", "com.pratilipi.service.shared.data.PratilipiData.getLanguage()"], "Fixed commit": "a119750c21688552c9e93b9d53d65bdbf40a01a1", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-06-24T19:23:00Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["info.papdt.express.helper.ui.adapter.HomePackageListAdapter.getItemData(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((p.name.length()) > 0) { holder.titleText.setText(p.name); }else { holder.titleText.setText(p.companyChineseName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/704/buggy-version/mobile.src.main.java.info.papdt.express.helper.ui.adapter.HomePackageListAdapter.java", "BodyUseAPI": ["android.support.v7.widget.AppCompatTextView.setText(p.name)", "android.support.v7.widget.AppCompatTextView.setText(p.companyChineseName)"], "Fixed commit": "4abb1c6f980dce4a4e0a468fa7692a1acbb0c294", "Url": "https://api.github.com/repos/ArchieMeng/PackageTracker", "Date": "2017-01-03T09:22:48Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((de.tu.dresden.morseapp.MorseSendingWorker.pause) - ((java.lang.System.currentTimeMillis()) - (currentTime))) > 0) elapseTime(((de.tu.dresden.morseapp.MorseSendingWorker.pause) - ((java.lang.System.currentTimeMillis()) - (currentTime))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2024/buggy-version/MorseApp.src.de.tu.dresden.morseapp.MorseSendingWorker.java", "BodyUseAPI": ["de.tu.dresden.morseapp.MorseSendingWorker.elapseTime(long)"], "Fixed commit": "3fd054ea2c041a908fd736d0799e1426719e8585", "Url": "https://api.github.com/repos/kampffrosch94/MorseApp", "Date": "2015-01-28T14:52:04Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (expression == null) { java.lang.String message = (\"Could not parse the value string '\" + valueString) + \"' to an Integer list. Returning a list containing a single null value.\"; org.treez.core.springspel.VectorEvaluation.LOG.warn(message); java.util.List<java.lang.Integer> nanList = new java.util.ArrayList<>(); nanList.add(null); return nanList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3674/buggy-version/treezCore.src.org.treez.core.springspel.VectorEvaluation.java", "BodyUseAPI": [], "Fixed commit": "a1700040665d4ebc2d39cdfe401a3c14d66c95e5", "Url": "https://api.github.com/repos/AmineAfia/treez", "Date": "2017-02-24T12:47:02Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (expression == null) { java.lang.String message = (\"Could not parse the value string '\" + valueString) + \"' to a Double list. Returning a list containing a single Double.NaN value.\"; org.treez.core.springspel.VectorEvaluation.LOG.warn(message); java.util.List<java.lang.Double> nanList = new java.util.ArrayList<>(); nanList.add(java.lang.Double.NaN); return nanList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3674/buggy-version/treezCore.src.org.treez.core.springspel.VectorEvaluation.java", "BodyUseAPI": [], "Fixed commit": "a1700040665d4ebc2d39cdfe401a3c14d66c95e5", "Url": "https://api.github.com/repos/AmineAfia/treez", "Date": "2017-02-24T12:47:02Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.crtb.tunnelmonitor.entity.TunnelCrossSectionIndex.getExcavateMethod()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"QD\".equals(digMethod)) { pointList = ((((((sectionCode + \"GD01\") + \"/\") + sectionCode) + \"SL01\") + \"#\") + sectionCode) + \"SL02\"; }else if (\"ST\".equals(digMethod)) { pointList = ((((((((((((((((((sectionCode + \"GD01\") + \"/\") + sectionCode) + \"SL01\") + \"#\") + sectionCode) + \"SL02\") + \"/\") + sectionCode) + \"SL03\") + \"#\") + sectionCode) + \"SL04\") + \"/\") + sectionCode) + \"SL05\") + \"#\") + sectionCode) + \"SL06\"; }else { android.util.Log.e(\"upload\", (\"unknown dig method: \" + digMethod)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3896/buggy-version/CRTBTunnelMonitor.src.com.crtb.tunnelmonitor.utils.CrtbUtils.java", "BodyUseAPI": ["android.util.Log.e(java.lang.String,java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "a724c1935133143d74acc2894164c9c493a4bb06", "Url": "https://api.github.com/repos/2014-2/001", "Date": "2014-05-01T11:59:39Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.parser.DefaultJSONParser.getLexer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((lexer.token()) == (com.alibaba.fastjson.parser.JSONToken.EOF)) { return map; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3951/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.DefaultObjectDeserializer.java", "BodyUseAPI": [], "Fixed commit": "44abad9cdbaf8368e5338e5cb4821014933c8d7a", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2013-05-11T08:50:44Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iOperationType == (INDEX_OPERATION_TYPE.COUNT)) return ((java.util.Collection<?>) (result)).size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4795/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.operator.OQueryOperatorContainsText.java", "BodyUseAPI": [], "Fixed commit": "2fd680a50e01c8a6dcc64dd270a9dfd1ef7103c0", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2013-01-06T15:15:54Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.ubc.ctlt.copyalerts.db.CourseCache.getCourseId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == id) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/76/buggy-version/src.ca.ubc.ctlt.copyalerts.db.FilesTable.java", "BodyUseAPI": [], "Fixed commit": "9c44798a86753a11b2cc52341f9119ce59b4be63", "Url": "https://api.github.com/repos/ubc/copyright-alerts-b2", "Date": "2016-03-31T22:01:18Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addIfValidCourse(courseName)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/76/buggy-version/src.ca.ubc.ctlt.copyalerts.db.CourseCache.java", "BodyUseAPI": [], "Fixed commit": "9c44798a86753a11b2cc52341f9119ce59b4be63", "Url": "https://api.github.com/repos/ubc/copyright-alerts-b2", "Date": "2016-03-31T22:01:18Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(addIfValidCourse(courseName))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/76/buggy-version/src.ca.ubc.ctlt.copyalerts.db.CourseCache.java", "BodyUseAPI": [], "Fixed commit": "9c44798a86753a11b2cc52341f9119ce59b4be63", "Url": "https://api.github.com/repos/ubc/copyright-alerts-b2", "Date": "2016-03-31T22:01:18Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((current.get()) == model) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4588/buggy-version/at.bestsolution.wgraf.widgets.src.at.bestsolution.wgraf.widgets.BreadCrumb.java", "BodyUseAPI": [], "Fixed commit": "0cc8ee096c59e8d782180cb5d55dea07fcd58395", "Url": "https://api.github.com/repos/tomsontom/wgraf", "Date": "2014-02-07T11:25:21Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tmpData.length) > 2) { tmpBlck = (((tmpData[2]) & 255) << 8) | ((tmpData[3]) & 255); }else { tmpBlck = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7327/buggy-version/src.FileTransferClient.java", "BodyUseAPI": [], "Fixed commit": "585034fb2eb96d19cb02d858ac3536ef05c9ea89", "Url": "https://api.github.com/repos/DanGravel/TFTP", "Date": "2016-11-12T22:00:37Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.DatagramPacket.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tmpData.length) > 2) { tmpBlck = (((tmpData[2]) & 255) << 8) | ((tmpData[3]) & 255); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7327/buggy-version/src.FileTransferClient.java", "BodyUseAPI": [], "Fixed commit": "585034fb2eb96d19cb02d858ac3536ef05c9ea89", "Url": "https://api.github.com/repos/DanGravel/TFTP", "Date": "2016-11-12T22:00:37Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i > ((node.elements.size()) - 1)) { node.elements.add(new Element(key, value)); }else { if ((node.elements.get(i).key) != key) { node.elements.add(i, new Element(key, value)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1750/buggy-version/semestr2.homework9.hw9_task2.src.associativeArray.Btree.java", "BodyUseAPI": ["java.util.ArrayList<associativeArray.Btree<Type>.Element>.add(associativeArray.Btree<Type>.Element)", "java.util.ArrayList<associativeArray.Btree<Type>.Element>.get(int)", "java.util.ArrayList<associativeArray.Btree<Type>.Element>.add(int,associativeArray.Btree<Type>.Element)"], "Fixed commit": "c37f908258ed57711435e9bd13c02c892427aa25", "Url": "https://api.github.com/repos/vladimir-zakharov/HomeWork", "Date": "2012-05-23T10:25:16Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((includeTopics == null) || (includeTopics.isEmpty())) && ((excludeTopics == null) || (excludeTopics.isEmpty()))) { filteredTopics = topics; }else if ((includeTopics != null) && (!(includeTopics.isEmpty()))) { filteredTopics = ((java.util.Collection<com.appdynamics.monitors.azure.pojo.TopicDescription>) (includeConfigured(topics, includeTopics))); }else if ((excludeTopics != null) && (!(excludeTopics.isEmpty()))) { filteredTopics = ((java.util.Collection<com.appdynamics.monitors.azure.pojo.TopicDescription>) (excludeConfigured(topics, excludeTopics))); }else { filteredTopics = new java.util.ArrayList<com.appdynamics.monitors.azure.pojo.TopicDescription>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4363/buggy-version/src.main.java.com.appdynamics.monitors.azure.AzureServiceBusMonitoringTask.java", "BodyUseAPI": ["com.appdynamics.monitors.azure.AzureServiceBusMonitoringTask.excludeConfigured(java.util.List<com.appdynamics.monitors.azure.pojo.TopicDescription>,java.util.List<java.lang.String>)", "java.util.List<java.lang.String>.isEmpty()", "java.util.List<java.lang.String>.isEmpty()", "com.appdynamics.monitors.azure.AzureServiceBusMonitoringTask.includeConfigured(java.util.List<com.appdynamics.monitors.azure.pojo.TopicDescription>,java.util.List<java.lang.String>)"], "Fixed commit": "0810d66d7ac27d105dee3b3c7867a434ce5d163d", "Url": "https://api.github.com/repos/Appdynamics/azure-servicebus-monitoring-extension", "Date": "2017-05-18T09:12:26Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTask) { return ((((((this.name) + \" | \") + (this.category.getName())) + \"\\r\\n\") + (this.description)) + \"\\r\\nStart:\") + (dt.format(this.start)); }else { return ((((((((this.name) + \" | \") + (this.category.getName())) + \"\\r\\n\") + (this.description)) + \"\\r\\nStart:\") + (dt.format(this.start))) + \"\\r\\nEnde:\") + (dt.format(this.end)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4571/buggy-version/app.src.main.java.de.grau.organizer.classes.Event.java", "BodyUseAPI": [], "Fixed commit": "4c117b0b47537cdeab4496ba40ef459dd5fe6cb7", "Url": "https://api.github.com/repos/Vierheller/Organizer", "Date": "2016-10-27T07:07:08Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.axis2.context.MessageContext.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((messageType.indexOf(HTTPConstants.MEDIA_TYPE_MULTIPART_RELATED)) == (-1)) && ((messageType.indexOf(HTTPConstants.MEDIA_TYPE_MULTIPART_FORM_DATA)) == (-1))) { java.util.Map msgCtxheaders = ((java.util.Map) (o)); if ((msgCtxheaders != null) && (!(cType.isEmpty()))) { msgCtxheaders.put(HTTP.CONTENT_TYPE, cType); } request.addHeader(HTTP.CONTENT_TYPE, cType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1314/buggy-version/modules.transports.core.nhttp.src.main.java.org.apache.synapse.transport.passthru.util.TargetRequestFactory.java", "BodyUseAPI": [], "Fixed commit": "3d43b78959f210d2df8def609c409af0d0a5e7d7", "Url": "https://api.github.com/repos/wso2/wso2-synapse", "Date": "2014-06-20T05:49:35Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (context != null) { org.eclipse.tcf.services.IExpressions exps = channel.getRemoteService(org.eclipse.tcf.services.IExpressions.class); exps.dispose(context.getID(), new org.eclipse.tcf.services.IExpressions.DoneDispose() { @java.lang.Override public void doneDispose(org.eclipse.tcf.protocol.IToken token, java.lang.Exception error) { if (error == null) return; if ((channel.getState()) != (org.eclipse.tcf.protocol.IChannel.STATE_OPEN)) return; org.eclipse.tcf.internal.debug.ui.Activator.log(\"Error disposing remote expression evaluator\", error); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5836/buggy-version/plugins.org.eclipse.tcf.debug.ui.src.org.eclipse.tcf.internal.debug.ui.model.TCFMemoryBlockRetrieval.java", "BodyUseAPI": ["IExpressions.Expression.getID()", "org.eclipse.tcf.services.IExpressions.dispose(context.getID(),org.eclipse.tcf.services.IExpressions.DoneDispose)"], "Fixed commit": "b99a5960cb0aea2b84bd38a40a70e739212d8f3e", "Url": "https://api.github.com/repos/eclipse/tcf", "Date": "2015-05-29T04:27:25Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerData.isEmpty()) mainArena.lobby.playersinlobby.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5715/buggy-version/src.me.dalton.capturethepoints.CaptureThePoints.java", "BodyUseAPI": [], "Fixed commit": "692f7462b1905c407b38157fb83ab7cbbef96539", "Url": "https://api.github.com/repos/Humsas/CaptureThePoints", "Date": "2011-10-29T22:44:03Z"},
{"Line": "=>1973", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (category instanceof org.occiware.mart.server.servlet.model.Mixin) { java.lang.String mixinId = (category.getScheme()) + (category.getTerm()); if ((org.occiware.mart.server.servlet.model.ConfigurationManager.userMixinLocationMap.get(mixinId)) != null) { return org.occiware.mart.server.servlet.model.ConfigurationManager.userMixinLocationMap.get(mixinId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3296/buggy-version/src.main.java.org.occiware.mart.server.servlet.model.ConfigurationManager.java", "BodyUseAPI": ["org.occiware.mart.server.servlet.model.Category.getTerm()", "org.occiware.mart.server.servlet.model.Category.getScheme()"], "Fixed commit": "9eb546337b48ce6864932450f20f8d933e7c4547", "Url": "https://api.github.com/repos/cgourdin/MartServer", "Date": "2016-11-22T15:10:10Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkMixinCallParameters.get(this.getCurrentObject().eResource())) warning(messages.getString(\"mixin_parameters_match_no_definition\"), helper.getSelectors(), null, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/179/buggy-version/src.eclipse.net.vtst.ow.eclipse.less.src.net.vtst.ow.eclipse.less.validation.LessJavaValidator.java", "BodyUseAPI": [], "Fixed commit": "bf063f7fc4071a8d9c7418cd523bfac957624a5f", "Url": "https://api.github.com/repos/vtst/ow", "Date": "2014-01-30T13:21:27Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ui.VisualGUI.app) == null) { ui.VisualGUI.app = new ui.VisualGUI(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3568/buggy-version/src.ui.VisualGUI.java", "BodyUseAPI": [], "Fixed commit": "015be835b25098a7f7aa7341acaafc6a3f6413d0", "Url": "https://api.github.com/repos/slemonide/sasuga", "Date": "2017-05-02T01:48:55Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((filter.length()) > 4) { flatDbQueries += \", \" + (filter.substring(3, ((filter.length()) - 2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1613/buggy-version/play-platformservices-querydispatcher.src.main.java.eu.play_project.play_platformservices_querydispatcher.bdpl.code_generator.realtime.EleGeneratorForConstructQuery.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "8eb473771ed97a760954e3dac5c07220f437c29e", "Url": "https://api.github.com/repos/play-project/play-dcep", "Date": "2013-10-29T13:28:59Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scheduledTime > (currentTime)) { currentTime = scheduledTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2496/buggy-version/robolectric-utils.src.main.java.org.robolectric.util.Scheduler.java", "BodyUseAPI": [], "Fixed commit": "badb38566a181451ade9b478c98247986d0a5340", "Url": "https://api.github.com/repos/lexs/robolectric", "Date": "2015-04-24T17:08:57Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isConstantlyIdling) { advanceToLastPostedRunnable(); }else if (!(paused)) { advanceBy(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2496/buggy-version/robolectric-utils.src.main.java.org.robolectric.util.Scheduler.java", "BodyUseAPI": [], "Fixed commit": "badb38566a181451ade9b478c98247986d0a5340", "Url": "https://api.github.com/repos/lexs/robolectric", "Date": "2015-04-24T17:08:57Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Float.isInfinite(sizeVal)) || (java.lang.Float.isNaN(sizeVal))) { canAddProduct = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/132/buggy-version/src.model.controllers.ProductController.java", "BodyUseAPI": [], "Fixed commit": "bbe8bea6b7e613cb1fc088025dba44ce84b4deca", "Url": "https://api.github.com/repos/caseymonc/hit", "Date": "2012-10-15T22:40:21Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (responseBody != null) try { java.lang.Object jsonResponse = parseResponse(responseBody); if (jsonResponse instanceof org.json.JSONObject) { onFailure(e, ((org.json.JSONObject) (jsonResponse))); }else if (jsonResponse instanceof org.json.JSONArray) { onFailure(e, ((org.json.JSONArray) (jsonResponse))); } } catch (org.json.JSONException ex) { onFailure(e, responseBody); } else { onFailure(e, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/666/buggy-version/src.com.loopj.android.http.JsonHttpResponseHandler.java", "BodyUseAPI": ["com.loopj.android.http.JsonHttpResponseHandler.parseResponse(java.lang.String)", "com.loopj.android.http.JsonHttpResponseHandler.onFailure(java.lang.Throwable,java.lang.String)"], "Fixed commit": "1dd3e6c96f332f2751b38105aa3a0958765c06f2", "Url": "https://api.github.com/repos/tomwhipple/android-async-http", "Date": "2012-01-18T06:20:29Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expressionItem instanceof net.sf.jsqlparser.expression.JdbcParameter) { expression.append(\"?\"); }else if (expressionItem instanceof net.sf.jsqlparser.expression.NullValue) { expression.append(\"''\"); }else if (expressionItem instanceof net.sf.jsqlparser.expression.SignedExpression) { expression.append(((net.sf.jsqlparser.expression.SignedExpression) (expressionItem)).toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7232/buggy-version/src.de.hpi.hpcc.parsing.ECLBuilder.java", "BodyUseAPI": [], "Fixed commit": "ba25b21470301d8aeeb02a9b7ccb81584d594b7d", "Url": "https://api.github.com/repos/bp2014n2/hpcc-jdbc", "Date": "2015-03-25T16:16:04Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (builder != null) { post.setEntity(builder.build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6741/buggy-version/src.main.java.com.francisli.processing.restclient.RESTClient.java", "BodyUseAPI": ["org.apache.http.client.methods.HttpPost.setEntity(builder.build())", "org.apache.http.entity.mime.MultipartEntityBuilder.build()"], "Fixed commit": "88311ecdd63cddd5bb6e55b4e66d53d223768762", "Url": "https://api.github.com/repos/francisli/processing-restclient", "Date": "2017-09-04T04:48:06Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTorch)) { gl.glEnable(GL2.GL_LIGHT0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7241/buggy-version/ass2.ass2.ass2.spec.Camera.java", "BodyUseAPI": [], "Fixed commit": "d7984041ade4474e294d0b0e30a6771d477443eb", "Url": "https://api.github.com/repos/yutrii/Graphics-Project-2", "Date": "2017-10-22T10:25:23Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((app.excuseme.util.CacheManager.tmpFileDir) != null) { app.excuseme.util.CacheManager.deleteFile(app.excuseme.util.CacheManager.tmpFileDir.toFile()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7059/buggy-version/src.app.excuseme.util.CacheManager.java", "BodyUseAPI": [], "Fixed commit": "8a64c540bd67687753e7aed6389f279cfa44ad2f", "Url": "https://api.github.com/repos/giglf/ExcuseMePlayer", "Date": "2017-06-25T03:47:09Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getRequestURI().replaceFirst(request.getContextPath(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.sonar.server.authentication.UserSessionInitializer.isWsUrl(path)) { response.setStatus(java.net.HttpURLConnection.HTTP_UNAUTHORIZED); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2909/buggy-version/server.sonar-server.src.main.java.org.sonar.server.authentication.UserSessionInitializer.java", "BodyUseAPI": [], "Fixed commit": "9a8544f264109881e78e57731b16ebfc942016a5", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2016-12-01T10:26:28Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR2)) { mVideoStarterThread.quitSafely(); }else { mVideoStarterThread.quit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6185/buggy-version/app.src.main.java.com.wolfpakapp.wolfpak2.camera.preview.CameraLayout.java", "BodyUseAPI": [], "Fixed commit": "7a2389cf1ccde66d1ff84f44ce71be65e0a3d6a4", "Url": "https://api.github.com/repos/sandybisaria/Wolfpak2", "Date": "2015-09-02T18:19:18Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR2)) { mVideoStarterThread.quitSafely(); }else { mVideoStarterThread.quit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6185/buggy-version/app.src.main.java.com.wolfpakapp.wolfpak2.camera.preview.CameraLayout.java", "BodyUseAPI": [], "Fixed commit": "7a2389cf1ccde66d1ff84f44ce71be65e0a3d6a4", "Url": "https://api.github.com/repos/sandybisaria/Wolfpak2", "Date": "2015-09-02T18:19:18Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.getParentFile().exists())) { throw new java.lang.RuntimeException((\"Unable to create middle directories for file: \" + (file.getAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1116/buggy-version/common.src.main.java.org.broadleafcommerce.common.resource.service.ResourceBundlingServiceImpl.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()"], "Fixed commit": "1c335bfbeaa4181510b16559b911295fa43287c7", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2014-02-10T22:29:20Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(destFile.getParentFile().exists())) { throw new java.lang.RuntimeException((\"Unable to create parent directories for file: \" + destFileName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1116/buggy-version/admin.broadleaf-contentmanagement-module.src.main.java.org.broadleafcommerce.cms.file.service.StaticAssetStorageServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "1c335bfbeaa4181510b16559b911295fa43287c7", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2014-02-10T22:29:20Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(baseLocalFile.getParentFile().exists())) { boolean directoriesCreated = false; if (!(baseLocalFile.getParentFile().exists())) { directoriesCreated = baseLocalFile.getParentFile().mkdirs(); if (!directoriesCreated) { if (!(baseLocalFile.getParentFile().exists())) { throw new java.lang.RuntimeException((\"Unable to create middle directories for file: \" + (baseLocalFile.getAbsolutePath()))); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1116/buggy-version/admin.broadleaf-contentmanagement-module.src.main.java.org.broadleafcommerce.cms.file.service.StaticAssetStorageServiceImpl.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.exists()", "java.io.File.exists()", "java.io.File.mkdirs()"], "Fixed commit": "1c335bfbeaa4181510b16559b911295fa43287c7", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2014-02-10T22:29:20Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cpr.count) != null) { affected += cpr.count; }else { affected++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/345/buggy-version/src.com.dadhoo.activities.NewAlbumActivity.java", "BodyUseAPI": [], "Fixed commit": "181b2482ec6b509b7e63869ec56278311fff1fdb", "Url": "https://api.github.com/repos/itanuz/dadhoo", "Date": "2014-06-04T16:10:02Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pictureContentUri) == null) && ((pictureFileUri) != null)) { ops.add(android.content.ContentProviderOperation.newInsert(DadhooDB.Pictures.PICTURE_CONTENT_URI).withValue(DadhooDB.Pictures._DATA, pictureFileUri.getPath()).build()); ops.add(android.content.ContentProviderOperation.newUpdate(DadhooDB.Albums.ALBUMS_CONTENT_URI).withSelection(((android.provider.BaseColumns._ID) + \" = ?\"), new java.lang.String[]{ java.lang.Long.toString(album_id) }).withValue(DadhooDB.Albums.TITLE, mAlbumTitleText.getText().toString()).withValue(DadhooDB.Albums.TIMESTAMP, new java.util.Date().getTime()).withValueBackReference(DadhooDB.Albums.PICTURE_ID, 0).build()); }else { ops.add(android.content.ContentProviderOperation.newUpdate(DadhooDB.Albums.ALBUMS_CONTENT_URI).withSelection(((android.provider.BaseColumns._ID) + \" = ?\"), new java.lang.String[]{ java.lang.Long.toString(album_id) }).withValue(DadhooDB.Albums.TITLE, mAlbumTitleText.getText().toString()).withValue(DadhooDB.Albums.TIMESTAMP, new java.util.Date().getTime()).build()); if ((pictureFileUri) != null) { ops.add(android.content.ContentProviderOperation.newUpdate(DadhooDB.Pictures.PICTURE_CONTENT_URI).withSelection(((android.provider.BaseColumns._ID) + \" = ?\"), new java.lang.String[]{ pictureContentUri.getLastPathSegment() }).withValue(DadhooDB.Pictures._DATA, pictureFileUri.getPath()).build()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/345/buggy-version/src.com.dadhoo.activities.NewAlbumActivity.java", "BodyUseAPI": [], "Fixed commit": "181b2482ec6b509b7e63869ec56278311fff1fdb", "Url": "https://api.github.com/repos/itanuz/dadhoo", "Date": "2014-06-04T16:10:02Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lowerHalf.isEmpty()) { answer = median; }else { answer = calculateMedian(lowerHalf, lowerHalf.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1431/buggy-version/src.me.nickpierson.StatsCalculator.basic.BasicModel.java", "BodyUseAPI": ["me.nickpierson.StatsCalculator.basic.BasicModel.calculateMedian(java.util.List<java.lang.Double>,int)", "java.util.List<java.lang.Double>.size()"], "Fixed commit": "f9d9f450f3d6d75c934d63439108540fe636a361", "Url": "https://api.github.com/repos/nkcrpn/Stats-Calculator", "Date": "2014-02-11T22:24:47Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (upperHalf.isEmpty()) { answer = median; }else { answer = calculateMedian(upperHalf, upperHalf.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1431/buggy-version/src.me.nickpierson.StatsCalculator.basic.BasicModel.java", "BodyUseAPI": ["java.util.List<java.lang.Double>.size()", "me.nickpierson.StatsCalculator.basic.BasicModel.calculateMedian(java.util.List<java.lang.Double>,int)"], "Fixed commit": "f9d9f450f3d6d75c934d63439108540fe636a361", "Url": "https://api.github.com/repos/nkcrpn/Stats-Calculator", "Date": "2014-02-11T22:24:47Z"},
{"Line": "=>777", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.DataInputStream.readLong()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(writeCache.isOpen(fileId))) writeCache.openFile(fileId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2808/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.cache.local.twoq.O2QCache.java", "BodyUseAPI": ["com.orientechnologies.orient.core.storage.cache.OWriteCache.openFile(long)"], "Fixed commit": "fc47009faddeea39a494f2b9915a49b054e8d06d", "Url": "https://api.github.com/repos/mcculls/orientdb", "Date": "2016-02-04T11:57:10Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(linksList.containsKey(link))) { ru.retverd.jira.reporter.progress.ProgressReporter.log.error(((\"Issue link type '\" + link) + \"' is missing on server!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2223/buggy-version/src.main.java.ru.retverd.jira.reporter.progress.ProgressReporter.java", "BodyUseAPI": ["org.apache.log4j.Logger.error(java.lang.String)"], "Fixed commit": "dca6fe9624428b34b68a30bb1bd3cbbd0cca09b1", "Url": "https://api.github.com/repos/retverd/jira-progress-reporter", "Date": "2015-04-28T13:55:14Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newResGrp) { for (java.lang.String resGrp : sortedGroups) { if (selectedResGrpValue.equals(resGrp)) { throw new com.microsoft.azuretools.azurecommons.exceptions.InvalidFormDataException(((\"The resource group \" + (selectedResGrpValue)) + \" is not available\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6232/buggy-version/PluginsAndFeatures.azure-toolkit-for-eclipse.com.microsoft.azuretools.azureexplorer.src.com.microsoft.azuretools.azureexplorer.forms.createrediscache.CreateRedisCacheForm.java", "BodyUseAPI": [], "Fixed commit": "7e0ba4882aa423e733c748a56ffb35eb94e977f6", "Url": "https://api.github.com/repos/djlan/azure-tools-for-java", "Date": "2017-10-20T04:10:49Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!lastFlowAction) { nextFromAction = flowMap.get(actionName).getNextAction(); skipMap.remove(nextFromAction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1175/buggy-version/struts2-actionflow-plugin.src.main.java.com.amashchenko.struts2.actionflow.ActionFlowInterceptor.java", "BodyUseAPI": [], "Fixed commit": "e52736cfb62d967f607d0fbfcecd1a598e0f45c8", "Url": "https://api.github.com/repos/struts-community-plugins/struts2-actionflow", "Date": "2014-11-14T21:40:18Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((!lastFlowAction) || (nextFromAction != null)) { invocation.getInvocationContext().getValueStack().set(com.amashchenko.struts2.actionflow.ActionFlowInterceptor.VIEW_ACTION_PARAM, (nextFromAction + (viewActionPostfix))); invocation.setResultCode(com.amashchenko.struts2.actionflow.ActionFlowInterceptor.GLOBAL_VIEW_RESULT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1175/buggy-version/struts2-actionflow-plugin.src.main.java.com.amashchenko.struts2.actionflow.ActionFlowInterceptor.java", "BodyUseAPI": ["invocation.getInvocationContext().getValueStack().set(java.lang.String,java.lang.String)"], "Fixed commit": "e52736cfb62d967f607d0fbfcecd1a598e0f45c8", "Url": "https://api.github.com/repos/struts-community-plugins/struts2-actionflow", "Date": "2014-11-14T21:40:18Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(key.equalsIgnoreCase(\"_\u200bversion_\u200b\"))) { java.lang.Object value = solrDocMap.get(key); solrInputDocument.addField(key, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1498/buggy-version/ole-docstore.ole-docstore-engine.src.main.java.org.kuali.ole.docstore.engine.service.index.solr.DocstoreSolrIndexService.java", "BodyUseAPI": ["org.apache.solr.common.SolrInputDocument.addField(java.lang.String,java.lang.Object)", "java.util.Map<java.lang.String, java.util.Collection<java.lang.Object>>.get(java.lang.String)"], "Fixed commit": "7f965eb8118189d2d7b0395b22811522037a3a65", "Url": "https://api.github.com/repos/hemalathaselvaraj/ole", "Date": "2016-04-13T09:58:24Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (plugin.getClientList().containsKey(event.getPlayer())) { plugin.getTracker().trackPlayerQuit(plugin.getClientList().get(event.getPlayer())); plugin.getClientList().remove(event.getPlayer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8416/buggy-version/src.main.java.net.nyvaria.openanalytics.listener.OpenAnalyticsListener.java", "BodyUseAPI": ["net.nyvaria.openanalytics.OpenAnalytics.getTracker()", "plugin.getClientList().remove(event.getPlayer())", "net.nyvaria.openanalytics.OpenAnalytics.getClientList()", "org.bukkit.event.player.PlayerQuitEvent.getPlayer()", "org.bukkit.event.player.PlayerQuitEvent.getPlayer()", "plugin.getTracker().trackPlayerQuit(plugin.getClientList().get(event.getPlayer()))", "plugin.getClientList().get(event.getPlayer())", "net.nyvaria.openanalytics.OpenAnalytics.getClientList()"], "Fixed commit": "171f3ac61c9c74549d9b1c782bbe17df65b4ba7d", "Url": "https://api.github.com/repos/nyvaria/OpenAnalytics", "Date": "2014-02-23T10:28:28Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((onsale != null) && (!onsale)) { mav.addObject(\"inoffsalestate\", true); }else { mav.addObject(\"inoffsalestate\", false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/9090/buggy-version/src.com.simonflowers.controllers.AdminController.java", "BodyUseAPI": [], "Fixed commit": "c2adbf234a56f09f337ef96c6f839627a9d9ef4c", "Url": "https://api.github.com/repos/woostju/SimonFlowers", "Date": "2014-02-08T09:30:06Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getSession().getAttribute(java.lang.String)", "javax.servlet.http.HttpServletRequest.getRequestURI()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((emp != null) && ((requestUri.indexOf(\"service/manage/login\")) > 0)) { request.getRequestDispatcher(\"/service/employee/index\").forward(request, response); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6846/buggy-version/src.main.java.com.spidernet.interceptor.PageInterceptor.java", "BodyUseAPI": [], "Fixed commit": "f5eb1c5eec11f2957a0b8a1c9a9382f456da38b5", "Url": "https://api.github.com/repos/nick-cwb/SpiderNet", "Date": "2017-03-06T08:51:47Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (permissionBox.getSelectionModel().isEmpty()) { errorMessage.setText(\"Choose an access level\"); }else { java.lang.String perms = ((java.lang.String) (permissionBox.getSelectionModel().getSelectedItem())); model.User newUser; if (perms.equals(\"User\")) { newUser = new model.User(username); }else if (perms.equals(\"Worker\")) { newUser = new model.Worker(username); }else if (perms.equals(\"Manager\")) { newUser = new model.Manager(username); }else { newUser = new model.Admin(username); } main.notifyRegistration(newUser, model.Token.fromCredentials(username, password)); main.setLoginScene(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4573/buggy-version/src.controller.RegisterScreenController.java", "BodyUseAPI": ["permissionBox.getSelectionModel().getSelectedItem()", "javafx.scene.control.ComboBox.getSelectionModel()"], "Fixed commit": "dbaad8cd180cf59ff401249125373ffbb63e3de0", "Url": "https://api.github.com/repos/cs2340-group21/cleanwater", "Date": "2016-10-06T21:25:23Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rogue.regexblock.RegexBlock.getPlugin().getCommandHandler().getBuildMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rbm.get(sender.getName())) == null) { com.rogue.regexblock.RegexBlock.getPlugin().getCommandHandler().getBuildMap().put(sender.getName(), new com.rogue.regexblock.regex.RegexBuild()); sender.sendMessage(com.rogue.regexblock.RegexBlock._(\"&aNew Regex instance started.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4703/buggy-version/src.main.java.com.rogue.regexblock.command.subcommands.AddCommand.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.getName()", "com.rogue.regexblock.RegexBlock.getPlugin().getCommandHandler().getBuildMap().put(sender.getName(),com.rogue.regexblock.regex.RegexBuild)", "org.bukkit.command.CommandSender.sendMessage(com.rogue.regexblock.RegexBlock._(\"&aNew Regex instance started.\"))"], "Fixed commit": "874c73e163605f142aafb8f35059ae4e80c66791", "Url": "https://api.github.com/repos/1Rogue/RegexBlock", "Date": "2013-06-26T19:18:15Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (successor instanceof com.oracle.graal.nodes.BeginNode) { com.oracle.graal.nodes.FixedNode next = successor.next(); successor.setNext(null); merge.setNext(next); successor.safeDelete(); }else { merge.setNext(successor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6445/buggy-version/graal.com.oracle.graal.phases.common.src.com.oracle.graal.phases.common.ExpandInstanceOfPhase.java", "BodyUseAPI": ["com.oracle.graal.nodes.AbstractBeginNode.next()", "com.oracle.graal.nodes.AbstractBeginNode.safeDelete()", "com.oracle.graal.nodes.MergeNode.setNext(com.oracle.graal.nodes.AbstractBeginNode)", "com.oracle.graal.nodes.AbstractBeginNode.setNext(<nulltype>)"], "Fixed commit": "11b2a48cbfbeeea57bed19250b59a0d4a2cbc716", "Url": "https://api.github.com/repos/mur47x111/graal-core", "Date": "2016-11-12T18:21:27Z"},
{"Line": "=>1083", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isHost) { (goldEarned)--; teamGold.setText((\"Gold: \" + (goldEarned))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/785/buggy-version/CSCI201_FinalProject.src.main.GameScreenGUI.java", "BodyUseAPI": [], "Fixed commit": "7eab00370f2a95aa05b6ecf4566565853ead69bf", "Url": "https://api.github.com/repos/yinghanl/Tower-Defense", "Date": "2015-04-26T19:54:28Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSpringRacingDAO().fetchHorse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (horse == null) { com.joe.springracing.importer.Importer importer = new com.joe.springracing.importer.Importer(); horse = importer.fetchHorse(horseCode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3032/buggy-version/spring-racing.src.main.java.com.joe.springracing.business.ImportBusiness.java", "BodyUseAPI": [], "Fixed commit": "7a63d15e504ed03676e3cdfe3cc205af85a43493", "Url": "https://api.github.com/repos/joecunsolo/good-punts", "Date": "2017-02-10T12:27:23Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.gameBoard.getSuspectPawns().get(suspectHypothesis).getPosition().getRoomNumber()) == (roomHypothesis - 11)) { return; }else { ie.ucd.cluedo.Slot roomSlot = getRoomSlot(roomHypothesis, suspectHypothesis); for (int i = 0; i < (this.players.size()); i++) { if (((this.players.get(i).getSuspectPawn().getPawnIndex()) - 1) == suspectHypothesis) { players.get(i).getSuspectPawn().movePosition(roomSlot); return; } } this.gameBoard.getSuspectPawns().get(suspectHypothesis).movePosition(roomSlot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4311/buggy-version/src.ie.ucd.cluedo.HypothesisManager.java", "BodyUseAPI": ["ie.ucd.cluedo.Board.getSuspectPawns()", "this.gameBoard.getSuspectPawns().get(suspectHypothesis).movePosition(ie.ucd.cluedo.Slot)", "this.gameBoard.getSuspectPawns().get(int)", "ie.ucd.cluedo.HypothesisManager.getRoomSlot(int,int)"], "Fixed commit": "3511cd7dccb9e92b71165ae2ca2209f24eddf936", "Url": "https://api.github.com/repos/davidhayes3/Cluedo2", "Date": "2017-12-23T02:17:38Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((statisticsFragment) != null) { statisticsFragment.setData(controller.getGoalStaticsData(), controller.getAssistStaticsData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8071/buggy-version/src.com.cc.worldcupremind.view.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ae78f91beea9f9e65732df52ab6967735983b9be", "Url": "https://api.github.com/repos/cclover/WorldCupRemind", "Date": "2014-06-11T18:54:56Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((statisticsFragment) != null) { statisticsFragment.setData(controller.getGoalStaticsData(), controller.getAssistStaticsData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8071/buggy-version/src.com.cc.worldcupremind.view.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ae78f91beea9f9e65732df52ab6967735983b9be", "Url": "https://api.github.com/repos/cclover/WorldCupRemind", "Date": "2014-06-11T18:54:56Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((matchFragment) != null) { matchFragment.setData(controller.getMatchesData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8071/buggy-version/src.com.cc.worldcupremind.view.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ae78f91beea9f9e65732df52ab6967735983b9be", "Url": "https://api.github.com/repos/cclover/WorldCupRemind", "Date": "2014-06-11T18:54:56Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGroupFragment) != null) { mGroupFragment.setData(controller.getGroupStaticsData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8071/buggy-version/src.com.cc.worldcupremind.view.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ae78f91beea9f9e65732df52ab6967735983b9be", "Url": "https://api.github.com/repos/cclover/WorldCupRemind", "Date": "2014-06-11T18:54:56Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGroupFragment) != null) { mGroupFragment.setData(controller.getGroupStaticsData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8071/buggy-version/src.com.cc.worldcupremind.view.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ae78f91beea9f9e65732df52ab6967735983b9be", "Url": "https://api.github.com/repos/cclover/WorldCupRemind", "Date": "2014-06-11T18:54:56Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myLocation) != null) { myLatitude = java.lang.String.valueOf(myLocation.getLatitude()); myLongitude = java.lang.String.valueOf(myLocation.getLongitude()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7791/buggy-version/app.src.main.java.pl.dmcs.mecin.geoqgame.DiscoverActivity.java", "BodyUseAPI": [], "Fixed commit": "d0354ae7cc8fe2eebd9b5a20cbad640b75d837ee", "Url": "https://api.github.com/repos/Mecin/geoQGame", "Date": "2017-01-06T15:01:05Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Debug) java.lang.System.out.println(((\"# last loner \" + u) + \" to 100\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8894/buggy-version/src.com.maxl.java.aips2sqlite.ShoppingCart.java", "BodyUseAPI": [], "Fixed commit": "eb7664a0d17dbbf8037d3f86b98da81e0ffe1f7b", "Url": "https://api.github.com/repos/zdavatz/aips2sqlite", "Date": "2015-01-19T21:30:52Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((offStrat) > 4) offStrat = 4;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4861/buggy-version/src.main.java.Simulation.HeadCoach.java", "BodyUseAPI": [], "Fixed commit": "5e12aa29f14830632ef6a8d643b71b9331d096a9", "Url": "https://api.github.com/repos/antdroidx/CFB-Coach", "Date": "2017-12-03T04:18:23Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((defStrat) > 4) defStrat = 4;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4861/buggy-version/src.main.java.Simulation.HeadCoach.java", "BodyUseAPI": [], "Fixed commit": "5e12aa29f14830632ef6a8d643b71b9331d096a9", "Url": "https://api.github.com/repos/antdroidx/CFB-Coach", "Date": "2017-12-03T04:18:23Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.thingml.compilers.javascript.Stream.getInput()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (source instanceof org.thingml.compilers.javascript.SimpleSource) { message = ((org.thingml.compilers.javascript.SimpleSource) (source)).getMessage().getMessage(); builder.append(((((message.getName()) + \"[\") + ((expression.getIndexParam()) + 2)) + \"]\")); }else if (source instanceof org.thingml.compilers.javascript.JoinSources) { message = ((org.thingml.compilers.javascript.JoinSources) (source)).getResultMessage(); builder.append(((((message.getName()) + \"[\") + ((expression.getIndexParam()) + 2)) + \"]\")); }else if (source instanceof org.thingml.compilers.javascript.MergeSources) { boolean ok = false; org.thingml.compilers.javascript.Expression rootExp = org.sintef.thingml.constraints.ThingMLHelpers.findRootExpressions(expression); for (org.thingml.compilers.javascript.Expression exp : ((org.thingml.compilers.javascript.MergeSources) (source)).getRules()) { if (rootExp == exp) { builder.append(((\"x[\" + ((expression.getIndexParam()) + 2)) + \"]\")); ok = true; break; } } if (!ok) { message = ((org.thingml.compilers.javascript.MergeSources) (source)).getResultMessage(); builder.append(((((message.getName()) + \"[\") + ((expression.getIndexParam()) + 2)) + \"]\")); } }else { throw new java.lang.UnsupportedOperationException((((\"An input source has been added (\" + (source.getClass().getName())) + \") to ThingML but the compiler did not updates.\") + \"Please update JavaThingActionCompiler.generate for StreamParamReference expression .\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1528/buggy-version/compilers.javascript.src.main.java.org.thingml.compilers.javascript.JSThingActionCompiler.java", "BodyUseAPI": ["org.thingml.compilers.javascript.Source.getClass()", "source.getClass().getName()"], "Fixed commit": "58ba623d1ec9b9bef45f7d39e02e096f085b5800", "Url": "https://api.github.com/repos/TelluIoT/ThingML", "Date": "2015-08-24T22:09:00Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.htmlparser.jericho.Element.getAllElements()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((elements_sub.get(5).getTextExtractor().toString()) != \"\") { itemUnit = new java.lang.Integer(elements_sub.get(5).getTextExtractor().toString()); }else { itemUnit = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6347/buggy-version/app.src.main.java.kr.ac.knu.bist.knu_econtrade.gradeComponents.fragmentGradeIssu.java", "BodyUseAPI": ["elements_sub.get(5).getTextExtractor()", "java.util.List<net.htmlparser.jericho.Element>.get(int)", "elements_sub.get(5).getTextExtractor().toString()"], "Fixed commit": "54fc019bfa726d4287173245764b2aa547829272", "Url": "https://api.github.com/repos/KKIID/KNU_econtrade", "Date": "2016-12-16T17:48:26Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cleanup) cleanupData();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5821/buggy-version/src.main.java.net.dmulloy2.swornrpg.io.PlayerDataCache.java", "BodyUseAPI": [], "Fixed commit": "a954929836a3bce4601aeac8cd997f2a243c87ec", "Url": "https://api.github.com/repos/dmulloy2/SwornRPG", "Date": "2013-10-24T00:51:43Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (hostEndPos == (-1)) { hostEndPos = target.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6811/buggy-version/app.src.main.java.ml.puredark.hviewer.helpers.HProxy.java", "BodyUseAPI": [], "Fixed commit": "71f26a50b2c3b743d5fae999bdfb26fd0b0b9f85", "Url": "https://api.github.com/repos/PureDark/H-Viewer", "Date": "2016-08-10T11:02:30Z"},
{"Line": "=>1514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4041/buggy-version/src.amberdb.model.Work.java", "BodyUseAPI": [], "Fixed commit": "1ae1174b82c008bc3e0cd43bb76aedfe0e2e8c07", "Url": "https://api.github.com/repos/nla/amberdb", "Date": "2015-07-06T04:41:11Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tile.storedItem) == null) && ((tile.getStackInSlot(1)) != null)) this.fontRendererObj.drawString(((tile.getStackInSlot(1).stackSize) + \"\"), 10, 30, 16448255);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3168/buggy-version/src.main.java.QuantumStorage.client.gui.GuiQuantumDsu.java", "BodyUseAPI": ["QuantumStorage.block.tile.TileQuantumDsu.getStackInSlot(int)", "this.fontRendererObj.drawString(((tile.getStackInSlot(1).stackSize) + \"\"),int,int,int)"], "Fixed commit": "7448e11f0f84bce483d49567dc5edd50aa40dff8", "Url": "https://api.github.com/repos/gigabit101/QuantumStorage", "Date": "2015-10-11T21:16:38Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.ufpe.cin.clazz.preprocessor.ClazzPreprocessor.formatClassName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((clazzName.contains(\"Credentials\")) && (lineNumber == 75)) { java.lang.System.out.println(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3078/buggy-version/Class-Preprocessor.src.br.ufpe.cin.clazz.preprocessor.ClazzPreprocessor.java", "BodyUseAPI": [], "Fixed commit": "ec682f03bc27a81e91dacf9b3a3c7366eca0c73f", "Url": "https://api.github.com/repos/rcaa/Salvum", "Date": "2016-08-23T20:01:48Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (stuff[i].equalsIgnoreCase(\"ONE-SHOT\")) { symbolImage = textAsBitmap(\"[ONE-SHOT]\", paint, templateImage, baseline, height); }else { symbolImage = getSymbolImage(stuff[i], context, height, height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7117/buggy-version/HexTCGDeckBuilder.src.com.ozawa.hextcgdeckbuilder.hexentities.Card.java", "BodyUseAPI": ["com.ozawa.hextcgdeckbuilder.hexentities.Card.getSymbolImage(java.lang.String,android.content.Context,int,int)"], "Fixed commit": "c5f55d37e098841eec70155c9f155ada105d7105", "Url": "https://api.github.com/repos/havocx42/ozawa", "Date": "2014-01-12T17:44:15Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paymentSession == null) { throw new org.bitcoinj.protocols.payments.PaymentProtocolException.InvalidPaymentRequestURL(\"All payment request URLs have failed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2176/buggy-version/mbhd-core.src.main.java.org.multibit.hd.core.services.PaymentProtocolService.java", "BodyUseAPI": [], "Fixed commit": "2d7c244b02b46b55dee2d6b6468c9162418d7ad5", "Url": "https://api.github.com/repos/Multibit-Legacy/multibit-hd", "Date": "2015-03-21T10:43:54Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.lang.String) { convertedType = valueConverter.convert(((java.lang.String) (value))); }else { org.jboss.forge.convert.Converter<java.lang.Object, java.lang.String> stringConverter = converterFactory.getConverter(sourceType, java.lang.String.class); org.jboss.forge.convert.CompositeConverter compositeConverter = new org.jboss.forge.convert.CompositeConverter(stringConverter, valueConverter); convertedType = compositeConverter.convert(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/991/buggy-version/ui.api.src.main.java.org.jboss.forge.ui.util.InputComponents.java", "BodyUseAPI": ["org.jboss.forge.convert.CompositeConverter.convert(java.lang.Object)"], "Fixed commit": "0767dc7cd48310c3d9a5f4fe7fe37f183a16cc0d", "Url": "https://api.github.com/repos/forge/core", "Date": "2013-03-01T03:05:38Z"},
{"Line": "=>669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.red5.server.stream.StreamService.getBroadcastScope(org.red5.server.api.scope.IScope,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((bsScope != null) && (!(bsScope.getProviders().isEmpty()))) { deleteStream(bsScope.getClientBroadcastStream().getConnection(), bsScope.getClientBroadcastStream().getStreamId()); org.red5.server.stream.StreamService.log.error(\"Bad name {} is removed.\", name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2523/buggy-version/src.main.java.org.red5.server.stream.StreamService.java", "BodyUseAPI": ["bsScope.getClientBroadcastStream().getStreamId()", "bsScope.getClientBroadcastStream().getConnection()", "org.red5.server.api.scope.IBroadcastScope.getClientBroadcastStream()", "org.red5.server.stream.StreamService.deleteStream(bsScope.getClientBroadcastStream().getConnection(),bsScope.getClientBroadcastStream().getStreamId())", "org.red5.server.api.scope.IBroadcastScope.getClientBroadcastStream()"], "Fixed commit": "771beba663064c2fe46b7215803249c2ddbecd18", "Url": "https://api.github.com/repos/hezila/red5-server-common", "Date": "2017-02-06T07:59:12Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6417/buggy-version/src.main.java.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "16b88513efa43619d28b9d0c725dd4207e535b44", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.uhn.fhir.rest.method.BaseMethodBinding<?>.invokeServer(ca.uhn.fhir.rest.server.RestfulServer,ca.uhn.fhir.rest.server.servlet.ServletRequestDetails)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (outputStreamOrWriter != null) { outputStreamOrWriter.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3116/buggy-version/hapi-fhir-base.src.main.java.ca.uhn.fhir.rest.server.RestfulServer.java", "BodyUseAPI": ["java.io.Closeable.close()"], "Fixed commit": "b37a1edaaef03ddc43698fc7b32e9e8a15f9d496", "Url": "https://api.github.com/repos/jamesagnew/hapi-fhir", "Date": "2016-10-07T21:42:02Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAccount) != null) { outState.putString(com.fsck.k9.activity.setup.AccountSetupIncoming.EXTRA_ACCOUNT, mAccount.getUuid()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2471/buggy-version/src.com.fsck.k9.activity.setup.AccountSetupIncoming.java", "BodyUseAPI": [], "Fixed commit": "0c8e6073c21e8ad438190efa4206a9b88fc6b770", "Url": "https://api.github.com/repos/imaeses/k-9", "Date": "2015-01-24T16:06:28Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startValues != null) { for (double[] values : startValues) { if ((values == null) || ((values.length) != 2)) { throw new java.lang.IllegalArgumentException(\"Invalid start values\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2311/buggy-version/src.main.de.linearbits.newtonraphson.NewtonRaphsonConfiguration.java", "BodyUseAPI": [], "Fixed commit": "5ff937d1bf104a698101af7c1709bc1a029bb7ee", "Url": "https://api.github.com/repos/prasser/newtonraphson", "Date": "2015-11-25T14:46:35Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((super.getActivity()) != null) { android.widget.Toast.makeText(super.getActivity(), message, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3192/buggy-version/app.src.main.java.bart.friendfinderapp.friends.FriendsFragment.java", "BodyUseAPI": ["android.support.v4.app.Fragment.getActivity()", "android.widget.Toast.makeText(super.getActivity(),java.lang.String,Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(super.getActivity(), message, Toast.LENGTH_SHORT).show()"], "Fixed commit": "c407662668e5de221f1d055a8a6636415f724cf8", "Url": "https://api.github.com/repos/pszczolkowski/FriendFinder_frontend", "Date": "2015-12-18T09:29:16Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((super.getActivity()) != null) { android.widget.Toast.makeText(super.getActivity(), message, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3192/buggy-version/app.src.main.java.bart.friendfinderapp.invitation.InvitationsFragment.java", "BodyUseAPI": ["android.support.v4.app.Fragment.getActivity()", "android.widget.Toast.makeText(super.getActivity(),java.lang.String,Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(super.getActivity(), message, Toast.LENGTH_SHORT).show()"], "Fixed commit": "c407662668e5de221f1d055a8a6636415f724cf8", "Url": "https://api.github.com/repos/pszczolkowski/FriendFinder_frontend", "Date": "2015-12-18T09:29:16Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (fieldName.contains(\"^\")) { elevator = fieldName.substring(0, fieldName.indexOf(\"^\")); fieldName = fieldName.substring(((fieldName.indexOf(\"^\")) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7072/buggy-version/src.main.java.dpfmanager.conformancechecker.tiff.implementation_checker.rules.RuleElement.java", "BodyUseAPI": [], "Fixed commit": "0116d635cfb09ec1097466befdfbde1d390968cc", "Url": "https://api.github.com/repos/EasyinnovaSL/DPFManager", "Date": "2016-08-17T07:57:09Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((elevator) != null) { value = (java.lang.Math.pow(java.lang.Integer.parseInt(elevator), java.lang.Integer.parseInt(val))) + \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/7072/buggy-version/src.main.java.dpfmanager.conformancechecker.tiff.implementation_checker.rules.RuleElement.java", "BodyUseAPI": [], "Fixed commit": "0116d635cfb09ec1097466befdfbde1d390968cc", "Url": "https://api.github.com/repos/EasyinnovaSL/DPFManager", "Date": "2016-08-17T07:57:09Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mData) == null) { mData = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6819/buggy-version/app.src.main.java.com.example.fenggao.myandroidframework.sample.SampleListActivity.java", "BodyUseAPI": [], "Fixed commit": "bbd7c27cfe677cdcb983cf14013e5315249b2f77", "Url": "https://api.github.com/repos/fay77/MyAndroidFrameWork", "Date": "2017-05-24T02:02:43Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (extension.equals(\"tif\".toLowerCase())) { tempImageFile.renameTo(outImageFile); tempImageFile.delete(); }else if (null != jpegMetadata) { final org.apache.sanselan.formats.tiff.TiffImageMetadata exif = jpegMetadata.getExif(); if (null != exif) { outputSet = exif.getOutputSet(); } os = new java.io.FileOutputStream(outImageFile); os = new java.io.BufferedOutputStream(os); new ExifRewriter().updateExifMetadataLossless(tempImageFile, os, outputSet); tempImageFile.delete(); }else if (null != tiffMetadata) { outputSet = tiffMetadata.getOutputSet(); java.util.List<org.apache.sanselan.formats.tiff.TiffField> tiffList = tiffMetadata.getAllFields(); java.util.List<org.apache.sanselan.formats.tiff.TiffDirectory> dirList = new java.util.ArrayList<org.apache.sanselan.formats.tiff.TiffDirectory>(); dirList = tiffMetadata.getDirectories(); outputSet = new org.apache.sanselan.formats.tiff.write.TiffOutputSet(); for (java.lang.Object field : tiffMetadata.getAllFields()) { if (field instanceof org.apache.sanselan.formats.tiff.TiffField) { org.apache.sanselan.formats.tiff.TiffField tiffField = ((org.apache.sanselan.formats.tiff.TiffField) (field)); java.lang.System.out.println((((((tiffField.getTagName()) + \": \") + (tiffField.getValueDescription())) + \" : \") + (tiffField.length))); } } os = new java.io.FileOutputStream(outImageFile); os = new java.io.BufferedOutputStream(os); new ExifRewriter().updateExifMetadataLossy(tempImageFile, os, outputSet); tempImageFile.delete(); }else { tempImageFile.renameTo(outImageFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/5116/buggy-version/src.WriteEXIF.java", "BodyUseAPI": [], "Fixed commit": "95189093393c877544daf232fe55229fdd13f89d", "Url": "https://api.github.com/repos/nedhorning/PhotoMonitoringPlugin", "Date": "2015-11-03T11:59:34Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FilenameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8372/buggy-version/app.src.main.java.com.mrbill.sharing.billman.HistoryActivity.java", "BodyUseAPI": [], "Fixed commit": "b198a85bab9bbb787a6d62e4b96e7c9aa4ce6842", "Url": "https://api.github.com/repos/daehwa/Mr.Bill", "Date": "2017-09-18T12:30:31Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(m_logger.isEnabledFor(l))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6924/buggy-version/src.frontend.org.voltcore.logging.VoltLogger.java", "BodyUseAPI": [], "Fixed commit": "fea0835baee01d1d907818498f4e55a19f71d389", "Url": "https://api.github.com/repos/AsherBond/voltdb", "Date": "2014-02-26T20:02:07Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(m_logger.isEnabledFor(l))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6924/buggy-version/src.frontend.org.voltcore.logging.VoltLogger.java", "BodyUseAPI": [], "Fixed commit": "fea0835baee01d1d907818498f4e55a19f71d389", "Url": "https://api.github.com/repos/AsherBond/voltdb", "Date": "2014-02-26T20:02:07Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.dundee.computing.aec.instagrim.models.User.getProfile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (checkProf == null) { error(\"Profile doesn't exist\", request, response); }else { java.util.LinkedList<java.lang.String> info = u.getProfile(user); javax.servlet.RequestDispatcher rd = request.getRequestDispatcher(\"/profile.jsp\"); request.setAttribute(\"info\", info); rd.forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/6053/buggy-version/src.main.java.uk.ac.dundee.computing.aec.instagrim.servlets.Profile.java", "BodyUseAPI": [], "Fixed commit": "57d8541ce60dd819f0a80303e0aeb3716ce02a03", "Url": "https://api.github.com/repos/littlefury/instagrim", "Date": "2014-10-25T22:07:50Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mLocationClient.isStarted()) { mLocationClient.requestLocation(); }else { mLocationClient.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/3393/buggy-version/src.android.BaiduLocation.java", "BodyUseAPI": ["com.baidu.location.LocationClient.requestLocation()", "com.baidu.location.LocationClient.start()"], "Fixed commit": "5c95042952cb7ae65e020b395e2fefe66f3ab832", "Url": "https://api.github.com/repos/PepperBean/cordova-qdc-baidu-location", "Date": "2015-10-28T01:16:16Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((players.size()) > 0) players.get(0).addChatMessage(new net.minecraft.util.text.TextComponentString((\"Lense cube at y = \" + y)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/4280/buggy-version/src.main.java.com.teamwizardry.refraction.common.tile.TileMagnifier.java", "BodyUseAPI": ["java.util.List<net.minecraft.entity.player.EntityPlayer>.get(int)", "players.get(0).addChatMessage(net.minecraft.util.text.TextComponentString)"], "Fixed commit": "d4baa84c9758ddf0b1da13bcd50f7b705fb40714", "Url": "https://api.github.com/repos/TeamWizardry/TMT-Refraction", "Date": "2016-08-05T01:16:23Z"},
{"Line": "=>730", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(panEnabled)) { if ((sRequestedCenter) != null) { quickScaleCenter.x = sRequestedCenter.x; quickScaleCenter.y = sRequestedCenter.y; }else { quickScaleCenter.x = (sWidth()) / 2; quickScaleCenter.y = (sHeight()) / 2; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/2327/buggy-version/library.src.com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView.java", "BodyUseAPI": [], "Fixed commit": "be48576b6bdecde95a94a8d0f5ab80f854b69839", "Url": "https://api.github.com/repos/tdtty/subsampling-scale-image-view", "Date": "2015-03-08T11:34:30Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.math.BigInteger.toByteArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tmp.length) == expectedLength) { return tmp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/8398/buggy-version/prov.src.main.java.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi.java", "BodyUseAPI": [], "Fixed commit": "4b8a162d8b6d2a9f1109b8c4883243ef60305e76", "Url": "https://api.github.com/repos/timw/bc-java", "Date": "2013-07-10T03:18:22Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.forName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(edu.wpi.always.Plugin.plugins.contains(cls))) edu.wpi.always.Plugin.plugins.add(cls);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/946/buggy-version/core.agent.java.edu.wpi.always.Plugin.java", "BodyUseAPI": ["java.util.List<java.lang.Class<? extends edu.wpi.always.Plugin>>.add(java.lang.Class<? extends edu.wpi.always.Plugin>)"], "Fixed commit": "ff65e979d00e4727bbf664b10c6091d3ef3e17c4", "Url": "https://api.github.com/repos/lring/always", "Date": "2014-02-12T14:15:44Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ve.getLocator().getNode()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (node != null) { if (org.docx4j.jaxb.JaxbValidationEventHandler.MICROSOFT_DRAWING_EXTENSION_NS.equals(node.getNamespaceURI())) { shouldContinueLocal = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V134/1254/buggy-version/src.main.java.org.docx4j.jaxb.JaxbValidationEventHandler.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "org.w3c.dom.Node.getNamespaceURI()"], "Fixed commit": "e8cd4e54faa587882981a23b44c663c5fd535932", "Url": "https://api.github.com/repos/BSI-Business-Systems-Integration-AG/docx4j", "Date": "2013-08-22T12:54:46Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["karlskrone.jarvis.events.EventManager.ActivatorEventListener.activatorEventFired(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (futureTemp != null) { futures.add(futureTemp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6964/buggy-version/src.karlskrone.jarvis.events.EventManager.java", "BodyUseAPI": ["java.util.List<java.util.concurrent.Future<karlskrone.jarvis.contentgenerator.ContentData>>.add(java.util.concurrent.Future)"], "Fixed commit": "c0adf49735cb47e05e4047d804cffe891eabb389", "Url": "https://api.github.com/repos/karlskrone/Jarvis", "Date": "2014-09-29T09:43:11Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((weight_str.length()) > 10) { weight_str = weight_str.substring(0, 9); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2232/buggy-version/src.main.java.util.LDAHelper.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "7cbba8ebd42aaaaa5f86c23c893c09e50c5edbcf", "Url": "https://api.github.com/repos/caohao2008/JGibbLabeledLDA", "Date": "2015-08-24T07:10:52Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (java.lang.Double.isNaN(temp)) temp = roomTemp;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5105/buggy-version/src.com.lushprojects.circuitjs1.client.LampElm.java", "BodyUseAPI": [], "Fixed commit": "9a2ed9e9fc970e27075b5b54b981f75a0dd129fa", "Url": "https://api.github.com/repos/pfalstad/circuitjs1", "Date": "2017-04-12T19:25:10Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resistance) == 0) current = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5105/buggy-version/src.com.lushprojects.circuitjs1.client.LampElm.java", "BodyUseAPI": [], "Fixed commit": "9a2ed9e9fc970e27075b5b54b981f75a0dd129fa", "Url": "https://api.github.com/repos/pfalstad/circuitjs1", "Date": "2017-04-12T19:25:10Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (allOpen) { for (miweinst.gravidog.LevelBox box : _boxes) { box.setLevelOpen(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7078/buggy-version/src.miweinst.gravidog.LevelMenuScreen.java", "BodyUseAPI": [], "Fixed commit": "131d7e74908a77475ecf8f69cfa83c3cc30ebfc2", "Url": "https://api.github.com/repos/mjfuller/gravidog", "Date": "2013-12-14T23:30:06Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((brickID) != 0) return new net.minecraft.item.ItemStack(brickID, 1, brickMeta); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/896/buggy-version/common.rebelkeithy.mods.metallurgy.core.metalsets.OreInfo.java", "BodyUseAPI": [], "Fixed commit": "c719f5fa78ac64158c096fedd61772b9e00077c2", "Url": "https://api.github.com/repos/RebelKeithy/Metallurgy3", "Date": "2013-04-22T04:21:18Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((blockID) != 0) return new net.minecraft.item.ItemStack(blockID, 1, blockMeta); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/896/buggy-version/common.rebelkeithy.mods.metallurgy.core.metalsets.OreInfo.java", "BodyUseAPI": [], "Fixed commit": "c719f5fa78ac64158c096fedd61772b9e00077c2", "Url": "https://api.github.com/repos/RebelKeithy/Metallurgy3", "Date": "2013-04-22T04:21:18Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((oreID) != 0) return new net.minecraft.item.ItemStack(oreID, 1, oreMeta); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/896/buggy-version/common.rebelkeithy.mods.metallurgy.core.metalsets.OreInfo.java", "BodyUseAPI": [], "Fixed commit": "c719f5fa78ac64158c096fedd61772b9e00077c2", "Url": "https://api.github.com/repos/RebelKeithy/Metallurgy3", "Date": "2013-04-22T04:21:18Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.editor.Editor.visualPositionToXY(editor.getCaretModel().getVisualPosition())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((caretLocation.getY()) >= (java.awt.Toolkit.getDefaultToolkit().getScreenSize().getHeight())) { dialog.setLocationRelativeTo(null); }else { dialog.setLocation(caretLocation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2183/buggy-version/src.com.kstenschke.realigner.UtilsEnvironment.java", "BodyUseAPI": ["javax.swing.JDialog.setLocation(java.awt.Point)"], "Fixed commit": "92a29d78f9b08cb978d285a5881d7d0c80028273", "Url": "https://api.github.com/repos/kstenschke/realigner-plugin", "Date": "2013-11-18T20:21:53Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(x)) > (java.lang.Math.abs(y))) { if (x > 0) { switchTo(RIGHT); }else if (x < 0) { switchTo(LEFT); } return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6728/buggy-version/src.com.shiningstone.push.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fa65bb86e897ce4a9cdcc8803f74b93de20403ec", "Url": "https://api.github.com/repos/shiningstone/push", "Date": "2014-09-27T11:29:52Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (syllabifier == null) { syllabifier = new marytts.modules.phonemiser.Syllabifier(this.allophoneSet, this.removeTrailingOneFromPhones); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/318/buggy-version/marytts-runtime.src.main.java.marytts.modules.JPhonemiser.java", "BodyUseAPI": [], "Fixed commit": "f431f779daf441b78966e228b82d6fb13c6899a3", "Url": "https://api.github.com/repos/giuliopaci/marytts", "Date": "2012-10-26T15:52:30Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (captureLimit > 0) { params.setCaptureLimit(captureLimit); android.content.Intent intent = new android.content.Intent(this, com.vlk.multimager.activities.MultiCameraActivity.class); intent.putExtra(Constants.KEY_PARAMS, params); startActivityForResult(intent, Constants.TYPE_MULTI_CAPTURE); }else { showLimitAlert(\"You have reached the limit of selection.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4185/buggy-version/lib.src.main.java.com.vlk.multimager.activities.GalleryActivity.java", "BodyUseAPI": ["com.vlk.multimager.utils.Params.setCaptureLimit(int)"], "Fixed commit": "7d3e0c858cf38b310fdc5772daf3447b23c3ebc2", "Url": "https://api.github.com/repos/vansikrishna/Multimager", "Date": "2017-02-21T13:30:13Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Response.Status.fromStatusCode(status)) == null) codeMessage = new java.lang.Integer(status).toString(); else codeMessage = Response.Status.fromStatusCode(status).toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6199/buggy-version/src.main.java.org.pem.lbaas.handlers.tenant.LBaaSException.java", "BodyUseAPI": ["Response.Status.fromStatusCode(status).toString()", "Response.Status.fromStatusCode(int)", "java.lang.Integer.toString()"], "Fixed commit": "611587d245d04c4ee4a7a14c5b677907cab3667d", "Url": "https://api.github.com/repos/LBaaS/lbaas-api", "Date": "2012-12-28T22:38:57Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedDataId) != (-1)) { dataEntity = com.facebookanalizapp.db.DatabaseManager.instance().find(com.facebookanalizapp.entity.DataEntity.class, selectedDataId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4812/buggy-version/src.com.facebookanalizapp.controller.DataFXMLController.java", "BodyUseAPI": [], "Fixed commit": "8769cbd524787d9fd4972b22d701c178b98f9adc", "Url": "https://api.github.com/repos/ufukhalis/FacebookAnalizApp", "Date": "2014-05-18T11:18:47Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (dataEntity != null) { dataEntity.setName(txtDataName.getText()); dataEntity.setRawData(raw); applyToParentNode(); com.facebookanalizapp.db.DatabaseManager.instance().updateEntity(com.facebookanalizapp.entity.DataEntity.class, dataEntity); }else { dataEntity = new com.facebookanalizapp.entity.DataEntity(); dataEntity.setName(txtDataName.getText()); dataEntity.setRawData(raw); applyToParentNode(); com.facebookanalizapp.db.DatabaseManager.instance().saveEntity(dataEntity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4812/buggy-version/src.com.facebookanalizapp.controller.DataFXMLController.java", "BodyUseAPI": ["com.facebookanalizapp.db.DatabaseManager.instance().updateEntity(java.lang.Class,com.facebookanalizapp.entity.DataEntity)", "com.facebookanalizapp.entity.DataEntity.setName(txtDataName.getText())", "com.facebookanalizapp.entity.DataEntity.setRawData(java.lang.String)"], "Fixed commit": "8769cbd524787d9fd4972b22d701c178b98f9adc", "Url": "https://api.github.com/repos/ufukhalis/FacebookAnalizApp", "Date": "2014-05-18T11:18:47Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == null) { return \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3913/buggy-version/Server.src.se.chalmers.dat255.grupp12.Utils.java", "BodyUseAPI": [], "Fixed commit": "c34993f5ddbd4cff9eb958484dff07b8683a8500", "Url": "https://api.github.com/repos/villepetersson/DAT255-Grupp12", "Date": "2013-10-17T13:57:57Z"},
{"Line": "=>1247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sk.henrichg.phoneprofilesplus.GlobalData.isRooted(false)) { if (sk.henrichg.phoneprofilesplus.GlobalData.serviceBinaryExists()) featurePresented = sk.henrichg.phoneprofilesplus.GlobalData.PREFERENCE_ALLOWED; else { if ((PhoneProfilesHelper.PPHelperVersion) == (-1)) featurePresented = sk.henrichg.phoneprofilesplus.GlobalData.PREFERENCE_INSTALL_PPHELPER; else featurePresented = sk.henrichg.phoneprofilesplus.GlobalData.PREFERENCE_UPGRADE_PPHELPER; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7171/buggy-version/phoneProfilesPlus.src.main.java.sk.henrichg.phoneprofilesplus.GlobalData.java", "BodyUseAPI": [], "Fixed commit": "7844b5cfa841507c25f97b4a4a197a7b75921e0d", "Url": "https://api.github.com/repos/henrichg/PhoneProfilesPlus", "Date": "2015-11-24T18:33:23Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((((pronounVerbSet.contains(tsentence.getPos(i))) && (!(nounSet.contains(tsentence.getPos((i - 1)))))) && (!(nounSet.contains(tsentence.getPos((i - 2)))))) && (!(pronounSet.contains(tsentence.getPos((i - 1)))))) && (!(pronounSet.contains(tsentence.getPos((i + 1)))))) && (!(tsentence.getEnglish((i - 1)).contains(\"\\\"\")))) && (!(tsentence.getEnglish((i + 1)).contains(\"\\\"\")))) { tsentence.setEnglish(i, (\"it \" + (tsentence.getEnglish(i)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1913/buggy-version/src.Translator.java", "BodyUseAPI": ["TaggedSentence.setEnglish(int,(\"it \" + (tsentence.getEnglish(i))))", "TaggedSentence.getEnglish(int)"], "Fixed commit": "ae05d201d2a4ee1eff1279d5ced86e1d978ea9a4", "Url": "https://api.github.com/repos/amberr/pa6-translation", "Date": "2014-02-28T03:35:24Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (negativeButtonLabel != (R.string.close_app)) { buildAlertMessageNoGps(R.string.msg_location_providers_are_required, R.string.enable, R.string.close_app); }else { closeApp((\"The application will be closed because it's unable to run without any \" + \"location provider enabled.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1984/buggy-version/src.org.nbempire.android.tourguide.component.activity.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "57504d3a71692991d77942b9db2ad3d0486d3247", "Url": "https://api.github.com/repos/barriosnahuel/tourGuide", "Date": "2012-12-12T02:02:16Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xmlcalabash.runtime.XAtomicStep.getExtensionAttribute(com.xmlcalabash.library.QName)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (msg != null) { java.lang.System.err.println((\"Message: \" + msg)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6063/buggy-version/src.main.java.com.xmlcalabash.library.DefaultStep.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "cfe8bdfb682b032f310f99443283299533c90613", "Url": "https://api.github.com/repos/ndw/xmlcalabash1", "Date": "2016-08-14T16:06:32Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.size()) > 0) { return result.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3686/buggy-version/app.src.main.java.se.chalmers.projektgrupplp4.studentlivinggbg.model.searchwatcher.SearchWatcherItem.java", "BodyUseAPI": ["java.util.List<se.chalmers.projektgrupplp4.studentlivinggbg.model.accommodation.Accommodation>.size()"], "Fixed commit": "99f1baf0dccbf021de0ee1512c607034aa414ead", "Url": "https://api.github.com/repos/Yeetii/ProjektgruppLP4", "Date": "2017-05-24T06:32:28Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (collision_enemy(x, y, 64)) { frankIsDead = true; Entity.entities.remove(this); }else { if (!(collision(0, sprite.getSize()))) { falling = true; sprite = FrankSprites.frank_fall; y += sprite.getSize(); }else { switch (walkingNumber) { case 1 : sprite = FrankSprites.frank_walk1; break; case 2 : sprite = FrankSprites.frank_walk2; break; case 3 : sprite = FrankSprites.frank_walk3; break; case 4 : sprite = FrankSprites.frank_walk4; walkingNumber = -1; break; } (walkingNumber)++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2468/buggy-version/sidescroller.sidescroller.src.main.java.com.example.sidescroller.game.entities.player.Frank.java", "BodyUseAPI": [], "Fixed commit": "bb1de1f1f7422bbbfbb814200bcd85d9c1795008", "Url": "https://api.github.com/repos/Soote/game-3v97", "Date": "2013-12-06T22:34:16Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fabric3.spi.classloader.ClassLoaderRegistry.loadClass(java.net.URI,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(javax.ws.rs.container.ContainerRequestFilter.class.isAssignableFrom(clazz))) && (!(javax.ws.rs.container.ContainerResponseFilter.class.isAssignableFrom(clazz)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4051/buggy-version/extension.binding.fabric3-binding-rs.src.main.java.org.fabric3.binding.rs.introspection.RsJavaResourceProcessorExtension.java", "BodyUseAPI": [], "Fixed commit": "34eee5ccdaf4552d37e4463951b46992be45b809", "Url": "https://api.github.com/repos/Fabric3/fabric3-core", "Date": "2014-02-10T00:12:36Z"},
{"Line": "=>854", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(refNull.isEmpty())) if (refNull.contains(new analysis.CMPair(className.hashCode(), methodName.hashCode()))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5285/buggy-version/src.analysis.Analysis.java", "BodyUseAPI": ["java.util.Set<analysis.CMPair>.contains(analysis.CMPair)"], "Fixed commit": "12da205d91d72722915e0dec49c5312367222a1b", "Url": "https://api.github.com/repos/ylya/horndroid", "Date": "2015-10-28T15:07:00Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(message.isEmpty())) { buffer.append(message.charAt(((message.length()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6083/buggy-version/messages.src.main.java.com.dumptruckman.minecraft.pluginbase.messages.Theme.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.StringBuilder.append(char)", "java.lang.String.charAt(int)"], "Fixed commit": "bfab036a41f38ca187171039fc4b4149f63cedfb", "Url": "https://api.github.com/repos/dumptruckman/PluginBase", "Date": "2013-03-22T17:19:37Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f.isDirectory()) { java.io.File newFolder = new java.io.File(targetParent, f.getName()); newFolder.mkdir(); moveOrCopyFolder(f, newFolder, copy); }else if (f.isFile()) { java.io.File newFile = new java.io.File(targetParent, f.getName()); try { newFile.getParentFile().mkdirs(); newFile.createNewFile(); de.dakror.virtualhub.util.Assistant.copyInputStream(new java.io.FileInputStream(f), new java.io.FileOutputStream(newFile)); } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6388/buggy-version/src.de.dakror.virtualhub.client.FileMover.java", "BodyUseAPI": ["java.io.File.isFile()", "java.io.File.getName()", "de.dakror.virtualhub.client.FileMover.moveOrCopyFolder(java.io.File,java.io.File,boolean)", "java.io.File.getName()", "de.dakror.virtualhub.util.Assistant.copyInputStream(java.io.FileInputStream,java.io.FileOutputStream)"], "Fixed commit": "52e65ee1e6a6405596d8dc4c40de2cd409454bbf", "Url": "https://api.github.com/repos/Dakror/VirtualHub", "Date": "2013-10-18T17:28:55Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count < 2) { sender.sendMessage(((plugin.pluginName) + \"You need to specify an Emergency Program System message!\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4626/buggy-version/src.main.java.me.eccentric_nz.TARDIS.commands.TARDISPrefsCommands.java", "BodyUseAPI": [], "Fixed commit": "1607d11ca81ad3002af017c03156672e7dd57be2", "Url": "https://api.github.com/repos/eccentricdevotion/TARDIS", "Date": "2013-09-20T19:43:16Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.index) == 0) { if ((net.kaoriya.ugmatcha.StateMachine.DEBUG) && (this.verbose)) { java.lang.System.out.format(\" *new: %d\\n\", (ptr - curr)); } net.kaoriya.ugmatcha.ArrayUtils.shiftRight(this.state, ptr, next, 1); this.state[ptr] = 1; ++ptr; }else { if ((net.kaoriya.ugmatcha.StateMachine.DEBUG) && (this.verbose)) { java.lang.System.out.format(\" *skip\\n\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3915/buggy-version/src.main.java.net.kaoriya.ugmatcha.StateMachine.java", "BodyUseAPI": [], "Fixed commit": "86124667a3b29e1cce62160292d8a572317bf086", "Url": "https://api.github.com/repos/koron/ugmatcha", "Date": "2014-04-27T16:04:48Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mifosplatform.infrastructure.core.api.JsonCommand.integerValueOfParameterNamed(ScheduledEmailConstants.EMAIL_ATTACHMENT_FILE_FORMAT_ID_PARAM_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (emailAttachmentFileFormatId != null) { emailAttachmentFileFormat = org.mifosplatform.infrastructure.scheduledemail.domain.ScheduledEmailAttachmentFileFormat.instance(emailAttachmentFileFormatId); }else { emailAttachmentFileFormat = org.mifosplatform.infrastructure.scheduledemail.domain.ScheduledEmailAttachmentFileFormat.instance(2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2123/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.infrastructure.scheduledemail.domain.EmailCampaign.java", "BodyUseAPI": ["org.mifosplatform.infrastructure.scheduledemail.domain.ScheduledEmailAttachmentFileFormat.instance(java.lang.Integer)"], "Fixed commit": "e5829ac7daf4a09aaad12df5b29b6a633b886f70", "Url": "https://api.github.com/repos/Musoni/mifosx", "Date": "2016-09-08T15:09:34Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sudokuPuzzle.get(error.getRow()).get(error.getColumn())) == null) ((android.widget.EditText) (findViewById(sudokuGrid.get(error.getRow()).get(error.getColumn())))).setTextColor(color);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1521/buggy-version/src.com.tw.game.SudokuGeneratorActivity.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.get(error.getColumn())", "((android.widget.EditText) (findViewById(sudokuGrid.get(error.getRow()).get(error.getColumn())))).setTextColor(int)", "java.util.List<java.util.List<java.lang.Integer>>.get(error.getRow())", "com.tw.game.SudokuGeneratorActivity.findViewById(sudokuGrid.get(error.getRow()).get(error.getColumn()))", "java.lang.Error.getColumn()", "java.lang.Error.getRow()"], "Fixed commit": "1b0469cb80c8492a49058bd4e3d577a50b9523f2", "Url": "https://api.github.com/repos/shwetado/sudoku", "Date": "2014-10-28T08:55:57Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (inputStream != null) { inputStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4530/buggy-version/CloudFlare-API-Client.src.net.lukecollins.dev.cloudflare.CredentialManager.java", "BodyUseAPI": [], "Fixed commit": "03317e445d4cc7e5f1297304dfee0f5ceb2ebf54", "Url": "https://api.github.com/repos/lcollins/CloudFlare-API-Tool", "Date": "2017-02-05T15:32:57Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lars.wherehaveishit.MapsActivity.mMap) != null) { lars.wherehaveishit.MapsActivity.mMap.setMyLocationEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2998/buggy-version/app.src.main.java.lars.wherehaveishit.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "dce13b6d7224758dda4c845f3753f983832f337f", "Url": "https://api.github.com/repos/larshaga/Poopd", "Date": "2017-10-24T21:06:36Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isClose()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8363/buggy-version/pandroid-library.src.main.java.com.leroymerlin.pandroid.ui.animation.view.CircularFrameLayout.java", "BodyUseAPI": [], "Fixed commit": "eec77a46a7c46778393cfd83d1c2219df4367e3c", "Url": "https://api.github.com/repos/MobileTribe/pandroid", "Date": "2017-04-21T15:38:23Z"},
{"Line": "=>1435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (vermessungsstelle == null) { return null; }else if (\"053290\".equals(vermessungsstelle)) { return \"Stadt Wuppertal\"; }else { final de.cismet.cids.server.search.CidsServerSearch search = new de.cismet.cids.custom.wunda_blau.search.server.KundeByVermessungsStellenNummerSearch(vermessungsstelle.substring(2)); final java.util.Collection res = Sirius.navigator.connection.SessionManager.getProxy().customServerSearch(Sirius.navigator.connection.SessionManager.getSession().getUser(), search); if ((res == null) || (res.isEmpty())) { return null; }else { return ((de.cismet.cids.custom.utils.pointnumberreservation.VermessungsStellenSearchResult) (res.iterator().next())).getName(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/832/buggy-version/src.main.java.de.cismet.cids.custom.objectrenderer.wunda_blau.VermessungsunterlagenauftragRenderer.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "77ce37b4cf4459cd6c8f5d8717471b0895176287", "Url": "https://api.github.com/repos/cismet/cids-custom-wuppertal", "Date": "2017-01-02T09:56:07Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.levins.webportal.certificate.client.UI.ClientPanel.chekFileExist(com.levins.webportal.certificate.client.UI.ClientPanel.FILE_TO_LOAD_SETTINGS)) { java.lang.String restoredValue = ((java.lang.String) (restorSettings.get(\"path\"))); client.setPathToCertFile(restoredValue); }else { client.setPathToCertFile(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7785/buggy-version/CreateCert.src.com.levins.webportal.certificate.client.UI.ClientPanel.java", "BodyUseAPI": [], "Fixed commit": "e4cc6da6a48a1ca461084f22d6d3cbd9276716a4", "Url": "https://api.github.com/repos/krachunov/CreateCert", "Date": "2015-12-30T15:11:17Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.matches()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ret) return ret;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4600/buggy-version/src.com.forgepoker.model.DefaultPatternDef.java", "BodyUseAPI": [], "Fixed commit": "00f46ee1cea7b4c62e9a81ec0e2b1a4862f120cc", "Url": "https://api.github.com/repos/maowenzhang/ForgePoker", "Date": "2013-12-07T15:47:05Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((o.length()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8263/buggy-version/src.main.java.edu.wisc.regfixer.RegFixer.java", "BodyUseAPI": [], "Fixed commit": "7f93901d87866219b8a62ab9a56f085460d7092f", "Url": "https://api.github.com/repos/isaacev/RegFixer", "Date": "2017-11-07T07:09:30Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keyboard.keyDownOnce(java.awt.event.KeyEvent.VK_B)) { lines.add(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6810/buggy-version/2D_GameProgramming.src.javagames.input.SimpleMouseExample.java", "BodyUseAPI": [], "Fixed commit": "85528f0946566330420875f63c49c45cb026ac95", "Url": "https://api.github.com/repos/SarcasmPony/GameDev", "Date": "2015-11-28T12:25:23Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode.isOutSupported()) { if ((com.google.common.base.Strings.isNullOrEmpty(outputVariable)) && (com.google.common.base.Strings.isNullOrEmpty(outputDir))) { errors.add(ru.runa.gpd.lang.ValidationError.createError(graphElement, ru.runa.gpd.office.Messages.getString(\"model.validation.out.file.empty\"))); } if (com.google.common.base.Strings.isNullOrEmpty(outputFilename)) { errors.add(ru.runa.gpd.lang.ValidationError.createError(graphElement, ru.runa.gpd.office.Messages.getString(\"model.validation.out.filename.empty\"))); } if ((com.google.common.base.Strings.isNullOrEmpty(outputVariable)) != true) { boolean isOutputVariableExistsInDefinition = false; for (ru.runa.gpd.lang.model.Variable variable : processVariables) { if ((isOutputVariableExistsInDefinition != true) && (variable.getName().equals(outputVariable))) { isOutputVariableExistsInDefinition = true; } } if (isOutputVariableExistsInDefinition != true) { errors.add(ru.runa.gpd.lang.ValidationError.createError(graphElement, ((((ru.runa.gpd.office.Messages.getString(\"model.validation.out.file.variable.doesnotExists\")) + \" \\\"\") + (outputVariable)) + \"\\\"\"))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2208/buggy-version/plugins.ru.runa.gpd.office.src.ru.runa.gpd.office.InputOutputModel.java", "BodyUseAPI": [], "Fixed commit": "6578662079afb791ee669856277e17114494a990", "Url": "https://api.github.com/repos/ARyaskov/runawfe-devstudio", "Date": "2017-03-07T20:35:17Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode.isInSupported()) { if ((com.google.common.base.Strings.isNullOrEmpty(inputPath)) && (com.google.common.base.Strings.isNullOrEmpty(inputVariable))) { errors.add(ru.runa.gpd.lang.ValidationError.createError(graphElement, ru.runa.gpd.office.Messages.getString(\"model.validation.in.file.empty\"))); } if ((com.google.common.base.Strings.isNullOrEmpty(inputVariable)) != true) { boolean isInputVariableExistsInDefinition = false; for (ru.runa.gpd.lang.model.Variable variable : processVariables) { if ((isInputVariableExistsInDefinition != true) && (variable.getName().equals(inputVariable))) { isInputVariableExistsInDefinition = true; } } if (isInputVariableExistsInDefinition != true) { errors.add(ru.runa.gpd.lang.ValidationError.createError(graphElement, ((((ru.runa.gpd.office.Messages.getString(\"model.validation.in.file.variable.doesnotExists\")) + \" \\\"\") + (inputVariable)) + \"\\\"\"))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2208/buggy-version/plugins.ru.runa.gpd.office.src.ru.runa.gpd.office.InputOutputModel.java", "BodyUseAPI": [], "Fixed commit": "6578662079afb791ee669856277e17114494a990", "Url": "https://api.github.com/repos/ARyaskov/runawfe-devstudio", "Date": "2017-03-07T20:35:17Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (constraintsModelVariableName.contains(\".\")) { constraintsModelVariableName = constraintsModelVariableName.substring(0, constraintsModelVariableName.indexOf(\".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2208/buggy-version/plugins.ru.runa.gpd.office.src.ru.runa.gpd.office.excel.ExcelModel.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "6578662079afb791ee669856277e17114494a990", "Url": "https://api.github.com/repos/ARyaskov/runawfe-devstudio", "Date": "2017-03-07T20:35:17Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.huixinpn.dionysus.repository.user.UserRepository.findByUsername(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (user instanceof com.huixinpn.dionysus.domain.user.Consultant) { ((com.huixinpn.dionysus.domain.user.Consultant) (user)).setTeachings(null); ((com.huixinpn.dionysus.domain.user.Consultant) (user)).setAppointments(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4637/buggy-version/dionysus-rest.src.main.java.com.huixinpn.dionysus.service.impl.UserServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "ac8d257d0a3e3c3a95775dfbfe2e4f6341fa60b8", "Url": "https://api.github.com/repos/perrywang/dionysus", "Date": "2015-06-14T13:45:57Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (curentSquare.isAlive()) { isCellAliveStatus = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6036/buggy-version/src.model.RulesForLifeCycle.java", "BodyUseAPI": [], "Fixed commit": "1aaef83f7b53a7867818404e1853833c52707f72", "Url": "https://api.github.com/repos/thedavv/Game-Of-Life-LJ-DR", "Date": "2017-08-31T13:07:37Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(curentSquare.isAlive())) { isCellAliveStatus = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6036/buggy-version/src.model.RulesForLifeCycle.java", "BodyUseAPI": [], "Fixed commit": "1aaef83f7b53a7867818404e1853833c52707f72", "Url": "https://api.github.com/repos/thedavv/Game-Of-Life-LJ-DR", "Date": "2017-08-31T13:07:37Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.broadleafcommerce.cms.file.service.StaticAssetStorageServiceImpl.findStaticAsset(java.lang.String,org.broadleafcommerce.openadmin.server.domain.SandBox)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (staticAsset == null) { staticAsset = findStaticAsset(fullUrl.toUpperCase(), sandBox); if (staticAsset == null) { staticAsset = findStaticAsset(fullUrl.toLowerCase(), sandBox); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6075/buggy-version/admin.broadleaf-contentmanagement-module.src.main.java.org.broadleafcommerce.cms.file.service.StaticAssetStorageServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "1df0c7922bca69fa5524fae122c0fdb57101ccf3", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2012-04-30T20:21:18Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isVisible()) { reloadJobsOnProgress = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5948/buggy-version/server.pony.web.src.main.java.net.dorokhov.pony.web.client.mvp.library.ScanningPresenter.java", "BodyUseAPI": [], "Fixed commit": "2c410b9a0a850f8a1c14764930e8827f9fb06230", "Url": "https://api.github.com/repos/DenisDorokhov/pony", "Date": "2015-04-14T17:04:51Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (rs != null) rs.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6161/buggy-version/src.main.java.com.tayo.centos.scheduler.ScheduledJob.java", "BodyUseAPI": ["java.sql.ResultSet.close()"], "Fixed commit": "427ce606b50d56dcf422de59e4ccd32da439d8e8", "Url": "https://api.github.com/repos/cheefoo/centos", "Date": "2017-01-17T23:09:29Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (rs2 != null) rs2.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6161/buggy-version/src.main.java.com.tayo.centos.scheduler.ScheduledJob.java", "BodyUseAPI": ["java.sql.ResultSet.close()"], "Fixed commit": "427ce606b50d56dcf422de59e4ccd32da439d8e8", "Url": "https://api.github.com/repos/cheefoo/centos", "Date": "2017-01-17T23:09:29Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (ps != null) ps.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6161/buggy-version/src.main.java.com.tayo.centos.scheduler.ScheduledJob.java", "BodyUseAPI": ["java.sql.PreparedStatement.close()"], "Fixed commit": "427ce606b50d56dcf422de59e4ccd32da439d8e8", "Url": "https://api.github.com/repos/cheefoo/centos", "Date": "2017-01-17T23:09:29Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (conn != null) conn.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6161/buggy-version/src.main.java.com.tayo.centos.scheduler.ScheduledJob.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "427ce606b50d56dcf422de59e4ccd32da439d8e8", "Url": "https://api.github.com/repos/cheefoo/centos", "Date": "2017-01-17T23:09:29Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (ps2 != null) ps2.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6161/buggy-version/src.main.java.com.tayo.centos.scheduler.ScheduledJob.java", "BodyUseAPI": ["java.sql.PreparedStatement.close()"], "Fixed commit": "427ce606b50d56dcf422de59e4ccd32da439d8e8", "Url": "https://api.github.com/repos/cheefoo/centos", "Date": "2017-01-17T23:09:29Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (conn != null) conn.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6161/buggy-version/src.main.java.com.tayo.centos.kcl2.DBLoaderThread.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "427ce606b50d56dcf422de59e4ccd32da439d8e8", "Url": "https://api.github.com/repos/cheefoo/centos", "Date": "2017-01-17T23:09:29Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((haven.Config.hnames[i].length()) > 1) haven.Config.hnames[i] = haven.Config.hnames[i].substring(0, 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4016/buggy-version/src.haven.Config.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "df899906c33b233d8e0ed8ff1a9338f9a2bab472", "Url": "https://api.github.com/repos/DonnEssime/Custom-Salem", "Date": "2015-02-06T22:53:18Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDebug) { logger.debug(\"Closed user trace. {}\", trace.getCallStackFrameId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4905/buggy-version/plugins.user.src.main.java.com.navercorp.pinpoint.plugin.user.interceptor.UserIncludeMethodInterceptor.java", "BodyUseAPI": [], "Fixed commit": "7c83c0443c4962da2aeb3c094cf7313000f48513", "Url": "https://api.github.com/repos/Xylus/pinpoint", "Date": "2015-07-30T07:56:29Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDebug) { logger.debug(\"Closed user trace. {}\", trace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4905/buggy-version/plugins.user.src.main.java.com.navercorp.pinpoint.plugin.user.interceptor.UserIncludeMethodInterceptor.java", "BodyUseAPI": [], "Fixed commit": "7c83c0443c4962da2aeb3c094cf7313000f48513", "Url": "https://api.github.com/repos/Xylus/pinpoint", "Date": "2015-07-30T07:56:29Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(((com.folioreader.activity.FolioActivity) (getActivity())).isbookOpened())) && (isCurrentFragment())) { setWebViewPosition(com.folioreader.util.AppUtil.getPreviousBookStateWebViewPosition(mContext, mBook)); ((com.folioreader.activity.FolioActivity) (getActivity())).setIsbookOpened(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6386/buggy-version/folioreader.src.main.java.com.folioreader.fragments.FolioPageFragment.java", "BodyUseAPI": [], "Fixed commit": "7aa835f856e3b71731d9969d61a2d3ad9692c06d", "Url": "https://api.github.com/repos/codetoart/FolioReader-Android", "Date": "2016-12-27T07:39:18Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((findViewById(R.id.fragment_container)) != null) { if (savedInstanceState != null) { return; } org.uribeacon.widget.ConfigUriBeaconFragment fragment = new org.uribeacon.widget.ConfigUriBeaconFragment(); fragment.setArguments(getIntent().getExtras()); getFragmentManager().beginTransaction().add(R.id.fragment_container, fragment).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6764/buggy-version/android-uribeacon.uribeacon-sample.src.main.java.org.uribeacon.sample.ConfigActivity.java", "BodyUseAPI": [], "Fixed commit": "9df911a2bdfe818811df46932b7756152fa914d0", "Url": "https://api.github.com/repos/schilit/uribeacon", "Date": "2014-12-12T18:08:22Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (heightMode < 0) { params.height = heightMode; }else { params.height = com.devin.refreshview.MeasureUtils.dp2px(mContext, heightMode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3514/buggy-version/library.src.main.java.com.devin.refreshview.MarsRefreshView.java", "BodyUseAPI": ["com.devin.refreshview.MeasureUtils.dp2px(android.content.Context,int)"], "Fixed commit": "91949b50ca234b77ee25d7eff5a3892990430724", "Url": "https://api.github.com/repos/shanhouwang/MarsRefreshView", "Date": "2017-12-15T08:41:14Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.planRequired) == true) { if ((getTestSet().getPlan()) == null) { throw new org.tap4j.parser.ParserException(\"Missing TAP Plan.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7247/buggy-version/tap4j.src.main.java.org.tap4j.parser.Tap13Parser.java", "BodyUseAPI": [], "Fixed commit": "23175723f19c7008f71d5ce4da2df6eeb6addc69", "Url": "https://api.github.com/repos/tupilabs/tap4j", "Date": "2013-12-09T16:32:07Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shareActionProvider) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2955/buggy-version/AndroidStudioApp.app.src.main.java.com.waldm.proverbica.app.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "bec12001468dfbd7b67e121fa3a03cb78091f400", "Url": "https://api.github.com/repos/waldm/split-phrase", "Date": "2015-04-17T11:01:08Z"},
{"Line": "=>1336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o instanceof org.mozilla.javascript.NativeJavaObject) { return com.servoy.j2db.util.Utils.getAsUUID(((org.mozilla.javascript.NativeJavaObject) (o)).unwrap(), throwOnException); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2177/buggy-version/servoy_shared.src.com.servoy.j2db.util.Utils.java", "BodyUseAPI": [], "Fixed commit": "f733a345b7f993b2c973b9498748bc564d52a98c", "Url": "https://api.github.com/repos/Servoy/servoy-client", "Date": "2014-07-07T07:21:39Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((channel) == null) { setChannel(org.neo4j.driver.internal.net.ChannelFactory.create(address, securityPlan, timeoutMillis, logger)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5553/buggy-version/driver.src.main.java.org.neo4j.driver.internal.net.SocketClient.java", "BodyUseAPI": [], "Fixed commit": "e2902bdd1c469687472c21dcd110ac18249db9b7", "Url": "https://api.github.com/repos/zhenlineo/java-driver", "Date": "2017-01-18T09:57:03Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (words < 50) { java.lang.System.err.println(\"Article needs to be al least 50 words long\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2448/buggy-version/src.com.audiophile.t2m.Main.java", "BodyUseAPI": [], "Fixed commit": "57619b8d425d6af30d93ec91c04dad46b005595c", "Url": "https://api.github.com/repos/AudiophileDev/T2M", "Date": "2017-11-08T12:21:28Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((scheduledFlows.get(deployment)) == null) { scheduledFlows.put(deployment, java.util.Collections.synchronizedList(new java.util.ArrayList<org.jumpmind.metl.core.runtime.flow.FlowRuntime>())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1313/buggy-version/metl-core.src.main.java.org.jumpmind.metl.core.runtime.AgentRuntime.java", "BodyUseAPI": ["java.util.Map<org.jumpmind.metl.core.model.AgentDeployment, java.util.List<org.jumpmind.metl.core.runtime.flow.FlowRuntime>>.put(org.jumpmind.metl.core.model.AgentDeployment,java.util.List<org.jumpmind.metl.core.runtime.flow.FlowRuntime>)"], "Fixed commit": "61c35050b8e9731f4e6dfb65cca78ac175807a49", "Url": "https://api.github.com/repos/JumpMind/metl", "Date": "2016-01-12T16:26:58Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isFeePaid()) { org.sola.common.messaging.MessageUtility.displayMessage(ClientMessage.APPLICATION_WARNING_ADDEDSERVICE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/104/buggy-version/beans.src.main.java.org.sola.clients.beans.application.ApplicationBean.java", "BodyUseAPI": [], "Fixed commit": "4b6c7d909129e8dc718dd13713225498644e4028", "Url": "https://api.github.com/repos/SOLA-FAO/clients", "Date": "2012-06-01T10:05:42Z"},
{"Line": "=>1389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.fidentis.gui.GUIController.getSelectedProjectTopComponent().getProject().getSelectedComparison2Faces()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((bc.getHDP()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1158/buggy-version/GUI.src.cz.fidentis.gui.comparison_two_faces.PairComparisonResults.java", "BodyUseAPI": [], "Fixed commit": "15334a3b76343031dadb8dd0cfab5dea6163fd06", "Url": "https://api.github.com/repos/Fidentis/Analyst", "Date": "2016-07-08T14:16:39Z"},
{"Line": "=>1198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cz.fidentis.gui.GUIController.getSelectedProjectTopComponent().getProject().getSelectedComparison2Faces().getHdPaintingInfo()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1158/buggy-version/GUI.src.cz.fidentis.gui.comparison_two_faces.PairComparisonResults.java", "BodyUseAPI": [], "Fixed commit": "15334a3b76343031dadb8dd0cfab5dea6163fd06", "Url": "https://api.github.com/repos/Fidentis/Analyst", "Date": "2016-07-08T14:16:39Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sx <= 0) { sx = ((metrics.viewport[2]) - (java.lang.Math.min(((metrics.viewport[2]) - 1), padXpx))) / ((metrics.size.data[0]) + padXgu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5413/buggy-version/src.org.graphstream.ui.swingViewer.util.DefaultCamera.java", "BodyUseAPI": [], "Fixed commit": "01629f14b6e36d54af03c35e022de328a11f5532", "Url": "https://api.github.com/repos/graphstream/gs-core", "Date": "2015-10-26T11:34:24Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sy <= 0) { sy = ((metrics.viewport[3]) - (java.lang.Math.min(((metrics.viewport[3]) - 1), padYpx))) / ((metrics.size.data[1]) + padYgu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5413/buggy-version/src.org.graphstream.ui.swingViewer.util.DefaultCamera.java", "BodyUseAPI": [], "Fixed commit": "01629f14b6e36d54af03c35e022de328a11f5532", "Url": "https://api.github.com/repos/graphstream/gs-core", "Date": "2015-10-26T11:34:24Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((avgNightlyOriginalRate) != null) if (!(getAvgNightlyRate().equals(getAvgNightlyOriginalRate()))) isPromoRate = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/9201/buggy-version/src.main.java.com.burda.scraper.model.RoomType.java", "BodyUseAPI": [], "Fixed commit": "2a33e64200b7588417b7f20b26444e111bdfe728", "Url": "https://api.github.com/repos/rburda/nodc", "Date": "2013-01-22T04:55:16Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(player.getMoveLeft())) && (!(player.getMoveRight()))) { foh.removeFallingObject(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8983/buggy-version/src.com.gamelogic.CollisionHandler.java", "BodyUseAPI": [], "Fixed commit": "d2fe59a91630e45b5f62650bf031821a4da3d281", "Url": "https://api.github.com/repos/Aptrr/prjo", "Date": "2016-04-22T19:22:51Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serializer) != null) log.debug((\"Default WebSocket serializer: \" + (serializer.getClass().getCanonicalName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/446/buggy-version/kikaha-core.source.kikaha.core.modules.websocket.WebSocketModule.java", "BodyUseAPI": [], "Fixed commit": "b85cda931702dc58008401f498db3b9f7886cc48", "Url": "https://api.github.com/repos/Skullabs/kikaha", "Date": "2016-08-01T01:43:41Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((unserializer) != null) log.debug((\"Default WebSocket unserializer: \" + (unserializer.getClass().getCanonicalName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/446/buggy-version/kikaha-core.source.kikaha.core.modules.websocket.WebSocketModule.java", "BodyUseAPI": [], "Fixed commit": "b85cda931702dc58008401f498db3b9f7886cc48", "Url": "https://api.github.com/repos/Skullabs/kikaha", "Date": "2016-08-01T01:43:41Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(currentState.equals(getInitialState()))) { transitions.recordTransition(currentState, getInitialState()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2398/buggy-version/src.markov.parsers.Parser.java", "BodyUseAPI": ["markov.StateTransitions.recordTransition(markov.states.State,markov.states.State<java.lang.String>)"], "Fixed commit": "cc51f92c75c1af13912faceca93471927e865df6", "Url": "https://api.github.com/repos/vple/markov-lyrics", "Date": "2016-03-12T22:34:07Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operationPath.equalsIgnoreCase(\"/\")) { return operationPath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6534/buggy-version/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java", "BodyUseAPI": [], "Fixed commit": "f16cd9124eb13d9d4829b02cd16a2a2dd0aac0dd", "Url": "https://api.github.com/repos/kongchen/swagger-maven-plugin", "Date": "2015-11-04T05:44:36Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m_isPortrait) { xSenser = (-5.0F) * x; ySenser = (y >= (-1)) ? -30 : (-y) * 5.0F; if (y < 0) { xSenser = (-1) * xSenser; ySenser = (-1) * ySenser; } }else { xSenser = 5.0F * y; ySenser = (x >= (-1)) ? -30 : (-x) * 5.0F; if (x < 0) { xSenser = (-1) * xSenser; ySenser = (-1) * ySenser; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2713/buggy-version/app.src.main.java.alex.com.box2ddemo.gift2dview.Box2dSenserLogic.java", "BodyUseAPI": [], "Fixed commit": "d3bb39a19725a15b5f43fceed86c946578440fe6", "Url": "https://api.github.com/repos/qjoy/libGDX-box2d-Demo", "Date": "2015-12-29T03:50:30Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (q.getContent().containsKey(Subject.CASTIOBCI)) { if (maxLevel < 1) { addToQueries(result, Subject.STAVEBNI_OBJEKT, ((\"<\" + (cz.cuni.mff.xrg.uv.postaladdress.to.ruain.ontology.Ruian.P_CAST_OBCE)) + \">\"), Subject.CASTIOBCI); maxLevel = 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1660/buggy-version/dpu-domain-specific.address-mapper.src.main.java.cz.cuni.mff.xrg.uv.postaladdress.to.ruain.query.RequirementsToQuery.java", "BodyUseAPI": [], "Fixed commit": "d6121fc7a99861ac4b356e1ca8a269da4413b6b5", "Url": "https://api.github.com/repos/mff-uk/DPUs", "Date": "2014-07-22T14:39:09Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (from.equals(to)) { return java.math.BigDecimal.ONE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4404/buggy-version/perfin-service.src.main.java.com.github.perfin.service.rest.ExchangeRatesProvider.java", "BodyUseAPI": [], "Fixed commit": "b0095c389c206aace2490e358ddad375ed74ddd9", "Url": "https://api.github.com/repos/perfin/perfin", "Date": "2015-06-24T07:12:05Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (res == (CommonRequest.ResponseCode.COMMON_RES_SUCCESS)) { errorDialog.setIcon(android.R.drawable.ic_dialog_info); errorDialog.setTitle(\"Congratulation!\"); errorDialog.setMessage(\"Your app successfully created. \"); errorDialog.setPositiveButton(\"OK\", new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.fourway.ideaswire.ui.CreateCampaign_homePage.class); intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); startActivity(intent); } }); errorDialog.show(); }else { switch (res) { case COMMON_RES_CONNECTION_TIMEOUT : errorDialog.setMessage(\"Connection time out\"); errorDialog.show(); break; case COMMON_RES_INTERNAL_ERROR : errorDialog.setMessage(\"Internal error\"); errorDialog.show(); break; case COMMON_RES_FAILED_TO_CONNECT : errorDialog.setMessage(\"failed to connect\"); errorDialog.show(); break; case COMMON_RES_SERVER_ERROR_WITH_MESSAGE : errorDialog.setMessage((\"\" + res)); errorDialog.show(); break; case COMMON_RES_PROFILE_DATA_NO_CONTENT : errorDialog.setMessage(\"Profile data not content\"); errorDialog.show(); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2947/buggy-version/app.src.main.java.com.fourway.ideaswire.ui.FragmenMainActivity.java", "BodyUseAPI": ["AlertDialog.Builder.setMessage((\"\" + res))"], "Fixed commit": "73c4e4bafe4a3aae38bf37e047e6e7a25773804d", "Url": "https://api.github.com/repos/vikassrivastava123/Ideaswire", "Date": "2016-11-26T08:13:21Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shareActionProvider) != null) { android.content.Intent shareIntent = new android.content.Intent(android.content.Intent.ACTION_SEND); shareIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_DOCUMENT); shareIntent.setType(\"text/plain\"); shareIntent.putExtra(Intent.EXTRA_TEXT, ((getString(R.string.share_text)) + (bookTitle))); shareActionProvider.setShareIntent(shareIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8698/buggy-version/Alexandria.app.src.main.java.it.jaschke.alexandria.BookDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "02392cbc44fd3ec2c3fb992793b389a5fcdc4634", "Url": "https://api.github.com/repos/ilyarudyak/SuperDuo", "Date": "2015-10-30T13:39:36Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ml.shifu.shifu.container.obj.ColumnConfig.getTotalCount()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (totalCount == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2394/buggy-version/src.main.java.ml.shifu.shifu.core.processor.NormalizeModelProcessor.java", "BodyUseAPI": [], "Fixed commit": "4b32423fa9d334ee717d47904ee6509b7b620bfe", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2017-10-31T06:15:02Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((transaction) == null) || (transaction.wasCommitted())) { transaction = session.beginTransaction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/859/buggy-version/complete.src.main.java.com.zhubo.global.ResourceManager.java", "BodyUseAPI": [], "Fixed commit": "dddb3f1971187b3a89814a324575e9a25e3ab49b", "Url": "https://api.github.com/repos/expPATHoli/zhubo_backend", "Date": "2016-10-04T07:01:50Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (model instanceof org.ednovo.gooru.core.api.model.CollectionItem) { ((org.ednovo.gooru.core.api.model.CollectionItem) (model)).getCollection().setLastModified(new java.sql.Date(java.lang.System.currentTimeMillis())); ((org.ednovo.gooru.core.api.model.CollectionItem) (model)).getCollection().setVersion(((((org.ednovo.gooru.core.api.model.CollectionItem) (model)).getCollection().getVersion()) == null ? 1 : (((org.ednovo.gooru.core.api.model.CollectionItem) (model)).getCollection().getVersion()) + 1)); getSession().saveOrUpdate(((org.ednovo.gooru.core.api.model.CollectionItem) (model)).getCollection()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6208/buggy-version/api.src.main.java.org.ednovo.gooru.infrastructure.persistence.hibernate.HibernateDaoSupport.java", "BodyUseAPI": [], "Fixed commit": "f551c8dd97a13aa346ba1369963c03bcaae03b2f", "Url": "https://api.github.com/repos/sheebans/Gooru-Core-API-1", "Date": "2015-02-04T21:35:39Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultGlobalModule) != null) { releaseVersion = defaultGlobalModule.getReleaseVersion(); nextVersion = defaultGlobalModule.getNextDevelopmentVersion(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2742/buggy-version/src.main.java.org.jfrog.hudson.release.ReleaseAction.java", "BodyUseAPI": [], "Fixed commit": "ce0315e23aebbdb1180a4cce85d63323356e6f05", "Url": "https://api.github.com/repos/reversefold/artifactory-plugin", "Date": "2017-09-08T00:35:53Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((periodicRequest) != null) periodicRequest.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6438/buggy-version/app.src.main.java.com.upc.location.LocationViewModel.java", "BodyUseAPI": [], "Fixed commit": "b8ec853acecd9ffc899600a2de232cdbb48ebf48", "Url": "https://api.github.com/repos/Bruno125/LocationDemo", "Date": "2017-11-04T15:52:31Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((md.get(blogr.vpm.fr.blogr.bean.PostMetadata.TAGS_KEY)) instanceof java.util.ArrayList) { this.tags = ((java.util.ArrayList<java.lang.String>) (md.get(blogr.vpm.fr.blogr.bean.PostMetadata.TAGS_KEY))); }else if ((md.get(blogr.vpm.fr.blogr.bean.PostMetadata.TAGS_KEY)) instanceof java.lang.String) { this.tags = new java.util.ArrayList<java.lang.String>(java.util.Arrays.asList(((java.lang.String) (md.get(blogr.vpm.fr.blogr.bean.PostMetadata.TAGS_KEY))).split(\" \"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1118/buggy-version/app.src.main.java.blogr.vpm.fr.blogr.bean.PostMetadata.java", "BodyUseAPI": [], "Fixed commit": "0b72b7d77b34b1d94414780edefc181d6e76e3e4", "Url": "https://api.github.com/repos/vpmalley/tpblogr", "Date": "2015-07-24T19:29:42Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_size) == 0) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6802/buggy-version/QQ.java", "BodyUseAPI": [], "Fixed commit": "f51fa5f031f383590491f9353468fdedb0f48c5f", "Url": "https://api.github.com/repos/xshi0603/GeckoSpiders", "Date": "2017-04-06T02:47:52Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_size) == 0) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6802/buggy-version/QQ.java", "BodyUseAPI": [], "Fixed commit": "f51fa5f031f383590491f9353468fdedb0f48c5f", "Url": "https://api.github.com/repos/xshi0603/GeckoSpiders", "Date": "2017-04-06T02:47:52Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_size) == 0) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6802/buggy-version/QQ.java", "BodyUseAPI": [], "Fixed commit": "f51fa5f031f383590491f9353468fdedb0f48c5f", "Url": "https://api.github.com/repos/xshi0603/GeckoSpiders", "Date": "2017-04-06T02:47:52Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_size) == 0) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6802/buggy-version/QQ.java", "BodyUseAPI": [], "Fixed commit": "f51fa5f031f383590491f9353468fdedb0f48c5f", "Url": "https://api.github.com/repos/xshi0603/GeckoSpiders", "Date": "2017-04-06T02:47:52Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.codeInspection.streamMigration.ReduceHandling.resolveVariable(assignment.getLExpression())", "com.intellij.codeInspection.streamMigration.PsiAssignmentExpression.getRExpression()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (com.siyeh.ig.psiutils.ExpressionUtils.isReferenceTo(binOp.getLOperand(), accumulator)) { if (JavaTokenType.PLUS.equals(binOp.getOperationTokenType())) { result.append(\"a + b\"); }else if (JavaTokenType.ASTERISK.equals(binOp.getOperationTokenType())) { result.append(\"a * b\"); } }else if (com.siyeh.ig.psiutils.ExpressionUtils.isReferenceTo(binOp.getROperand(), accumulator)) { if (JavaTokenType.PLUS.equals(binOp.getOperationTokenType())) { result.append(\"b + a\"); }else if (JavaTokenType.ASTERISK.equals(binOp.getOperationTokenType())) { result.append(\"b * a\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6379/buggy-version/java.java-impl.src.com.intellij.codeInspection.streamMigration.ReplaceWithReduceFix.java", "BodyUseAPI": ["com.intellij.codeInspection.streamMigration.PsiBinaryExpression.getOperationTokenType()", "com.intellij.codeInspection.streamMigration.PsiBinaryExpression.getOperationTokenType()", "JavaTokenType.ASTERISK.equals(binOp.getOperationTokenType())", "JavaTokenType.PLUS.equals(binOp.getOperationTokenType())", "JavaTokenType.ASTERISK.equals(binOp.getOperationTokenType())", "com.intellij.codeInspection.streamMigration.PsiBinaryExpression.getOperationTokenType()", "JavaTokenType.PLUS.equals(binOp.getOperationTokenType())", "com.siyeh.ig.psiutils.ExpressionUtils.isReferenceTo(binOp.getROperand(),com.intellij.codeInspection.streamMigration.PsiVariable)", "com.intellij.codeInspection.streamMigration.PsiBinaryExpression.getROperand()", "com.intellij.codeInspection.streamMigration.PsiBinaryExpression.getOperationTokenType()"], "Fixed commit": "37ac0b3476933b71ef9f4a0f745646910e83dc69", "Url": "https://api.github.com/repos/FHannes/intellij-community", "Date": "2017-05-02T09:51:14Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLocation) == null) { setCurrentLocation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2556/buggy-version/app.src.main.java.com.distance.distancecounter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "86511b4f6a4610f4fe0876216bb38d2f5881b4c8", "Url": "https://api.github.com/repos/uuzelac/DistanceCounter", "Date": "2015-07-09T12:39:21Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["answerList.get(position).getQuestions()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((questions.getNumber()) != null) { holder.etNumAns.setText(answerList.get(position).getNumAns()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5983/buggy-version/app.src.main.java.com.ak.search.adapter.GetQuestionsAdapter.java", "BodyUseAPI": [], "Fixed commit": "969cc5763509905655aeee9d5e4a9757dac8b132", "Url": "https://api.github.com/repos/AkshayToraskar/Search0.1", "Date": "2017-02-02T12:02:42Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((answerList.get(position).getSelectedopt()) != 0) { allRb.get(answerList.get(position).getSelectedopt()).setChecked(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5983/buggy-version/app.src.main.java.com.ak.search.adapter.GetQuestionsAdapter.java", "BodyUseAPI": ["java.util.List<android.widget.RadioButton>.get(answerList.get(position).getSelectedopt())", "java.util.List<com.ak.search.realm_model.Answers>.get(int)", "allRb.get(answerList.get(position).getSelectedopt()).setChecked(boolean)", "answerList.get(position).getSelectedopt()"], "Fixed commit": "969cc5763509905655aeee9d5e4a9757dac8b132", "Url": "https://api.github.com/repos/AkshayToraskar/Search0.1", "Date": "2017-02-02T12:02:42Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trudy) buttonLabels.add(\"Chat (Trudy)\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3957/buggy-version/core.src.com.majalis.screens.CampScreen.java", "BodyUseAPI": [], "Fixed commit": "4f3e6d2b789290ba123b7f97bc9d822500d5aaff", "Url": "https://api.github.com/repos/majalistic/tales-of-androgyny", "Date": "2017-07-18T22:50:50Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trudy) buttons.get((elf ? 5 : 4)).addListener(new com.badlogic.gdx.scenes.scene2d.utils.ClickListener() { @java.lang.Override public void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent event, float x, float y) { goToEncounter(EncounterCode.TRUDY_COMPANION); } });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3957/buggy-version/core.src.com.majalis.screens.CampScreen.java", "BodyUseAPI": [], "Fixed commit": "4f3e6d2b789290ba123b7f97bc9d822500d5aaff", "Url": "https://api.github.com/repos/majalistic/tales-of-androgyny", "Date": "2017-07-18T22:50:50Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<edu.gatech.util.Node<edu.gatech.intermediate.Type>>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (temp.getData().equals(TokenType.IN)) { out.add(new edu.gatech.intermediate.IntermediateOperation(Operator.UNSUPPORTED, \"\", \"\", \"\", \"main\", null)); }else if (temp.hasChildOfType(TokenType.FOR)) { out.addAll(generateLoop(temp)); }else if (temp.hasChildOfType(TokenType.WHILE)) { out.addAll(generateWhile(temp)); }else if (temp.getData().equals(RuleType.FUNCT_DECLARATION)) { out.addAll(0, generateFunctionDeclaration(temp)); }else if (temp.hasChildOfType(RuleType.STAT_ASSIGN)) { edu.gatech.util.Node<edu.gatech.intermediate.Type> identifierNode = temp.getFirstChildOfType(TokenType.ID); edu.gatech.intermediate.Binding identifier = table.findByNameScope(((edu.gatech.intermediate.Terminal) (identifierNode.getNextChild().getData())).getContent(), identifierNode.getScope()); edu.gatech.util.Node<edu.gatech.intermediate.Type> foo = temp.getFirstChildOfType(RuleType.STAT_ASSIGN); if (!(identifier.isFunction())) { out.addAll(generateExpression(identifier.getName(), foo.getFirstChildOfType(RuleType.EXPR_OR_ID))); }else { java.util.List<edu.gatech.util.Node<edu.gatech.intermediate.Type>> parameterExpressions = new java.util.ArrayList<>(); java.util.List<edu.gatech.util.Node<edu.gatech.intermediate.Type>> tempOpen = new java.util.ArrayList<>(); tempOpen.add(foo.getFirstChildOfType(RuleType.EXPR_LIST)); while (!(tempOpen.isEmpty())) { edu.gatech.util.Node<edu.gatech.intermediate.Type> bar = tempOpen.remove(0); java.util.List<edu.gatech.util.Node<edu.gatech.intermediate.Type>> baz = bar.getChildren(); for (edu.gatech.util.Node<edu.gatech.intermediate.Type> child : baz) { if (child.getData().equals(RuleType.EXPR)) parameterExpressions.add(child); else tempOpen.add(child); } } java.util.List<java.lang.String> parameters = new java.util.ArrayList<>(); for (edu.gatech.util.Node<edu.gatech.intermediate.Type> bar : parameterExpressions) { edu.gatech.intermediate.Binding baz = generateTemp(DeclaredType.integer, bar.getScope()); java.util.List<edu.gatech.intermediate.IntermediateOperation> qux = generateExpression(baz.getName(), bar); out.addAll(qux); parameters.add(baz.getName()); } edu.gatech.intermediate.IntermediateOperation call = new edu.gatech.intermediate.IntermediateOperation(Operator.CALL, identifier.getName(), \"\", \"\", \"\", parameters); out.add(call); } }else { open.addAll(temp.getChildren()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5460/buggy-version/src.edu.gatech.intermediate.Intermediate.java", "BodyUseAPI": ["edu.gatech.util.Node<edu.gatech.intermediate.Type>.getFirstChildOfType(TokenType.ID)", "java.util.List<edu.gatech.intermediate.IntermediateOperation>.addAll(java.util.List<edu.gatech.intermediate.IntermediateOperation>)", "edu.gatech.intermediate.Intermediate.generateWhile(edu.gatech.util.Node<edu.gatech.intermediate.Type>)", "java.util.List<edu.gatech.intermediate.IntermediateOperation>.addAll(int,java.util.List<edu.gatech.intermediate.IntermediateOperation>)", "edu.gatech.util.Node<edu.gatech.intermediate.Type>.getFirstChildOfType(RuleType.STAT_ASSIGN)", "java.util.List<edu.gatech.util.Node<edu.gatech.intermediate.Type>>.addAll(temp.getChildren())", "edu.gatech.util.Node<edu.gatech.intermediate.Type>.getChildren()", "java.util.List<edu.gatech.intermediate.IntermediateOperation>.addAll(java.util.List<edu.gatech.intermediate.IntermediateOperation>)", "edu.gatech.intermediate.Intermediate.generateLoop(edu.gatech.util.Node<edu.gatech.intermediate.Type>)", "edu.gatech.util.Node<edu.gatech.intermediate.Type>.getData()", "edu.gatech.util.Node<edu.gatech.intermediate.Type>.hasChildOfType(RuleType.STAT_ASSIGN)", "edu.gatech.util.Node<edu.gatech.intermediate.Type>.hasChildOfType(TokenType.FOR)", "edu.gatech.util.Node<edu.gatech.intermediate.Type>.hasChildOfType(TokenType.WHILE)", "temp.getData().equals(RuleType.FUNCT_DECLARATION)", "edu.gatech.intermediate.Intermediate.generateFunctionDeclaration(edu.gatech.util.Node<edu.gatech.intermediate.Type>)"], "Fixed commit": "32c082e8594beac614cb3cd86623c306da9824f7", "Url": "https://api.github.com/repos/abettadapur/icompiler", "Date": "2014-03-30T18:05:51Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.gatech.util.Node<edu.gatech.intermediate.Type>.getFirstChildOfType(TokenType.ID)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((bam.getScope()) != null) bar = table.findByNameScope(foo.getContent(), bam.getScope()); else bar = table.find(foo.getContent()).get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5460/buggy-version/src.edu.gatech.intermediate.Intermediate.java", "BodyUseAPI": ["edu.gatech.util.Node<edu.gatech.intermediate.Type>.getScope()", "edu.gatech.facade.ITable.findByNameScope(foo.getContent(),bam.getScope())"], "Fixed commit": "32c082e8594beac614cb3cd86623c306da9824f7", "Url": "https://api.github.com/repos/abettadapur/icompiler", "Date": "2014-03-30T18:05:51Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length == 0) { while ((length < (org.anddev.andengine.opengl.shader.ShaderProgram.NAME_CONTAINER_SIZE)) && ((org.anddev.andengine.opengl.shader.ShaderProgram.NAME_CONTAINER[length]) != '\\u0000')) { length++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3357/buggy-version/src.org.anddev.andengine.opengl.shader.ShaderProgram.java", "BodyUseAPI": [], "Fixed commit": "0868c7c9cb493619f699c1ec9e29033ad1689022", "Url": "https://api.github.com/repos/BossaGroove/AndEngine", "Date": "2011-08-31T10:17:24Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length == 0) { while ((length < (org.anddev.andengine.opengl.shader.ShaderProgram.NAME_CONTAINER_SIZE)) && ((org.anddev.andengine.opengl.shader.ShaderProgram.NAME_CONTAINER[length]) != '\\u0000')) { length++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3357/buggy-version/src.org.anddev.andengine.opengl.shader.ShaderProgram.java", "BodyUseAPI": [], "Fixed commit": "0868c7c9cb493619f699c1ec9e29033ad1689022", "Url": "https://api.github.com/repos/BossaGroove/AndEngine", "Date": "2011-08-31T10:17:24Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.Query.getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (records.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2780/buggy-version/src.main.java.bzh.dezrann.websocket.ReplayEndpoint.java", "BodyUseAPI": [], "Fixed commit": "62612ea9f04c8bf4e771502f1b53deb7c2675369", "Url": "https://api.github.com/repos/Calixte/dezrann", "Date": "2014-06-11T22:04:20Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((primitiveContentType.cnt.ch) != null) { for (lab.mars.m2m.m2msmartofficephone.model.m2m.m2m_childResourceRef child : primitiveContentType.cnt.ch) { if ((child.ty) == (m2m_ResourceType.CONTAINER.getTy())) return new lab.mars.m2m.m2msmartofficephone.model.Result<java.lang.String>(false, \"\u5df2\u7ecf\u5b58\u5728\u4e3b\u7ba1\uff0c\u65e0\u6cd5\u6ce8\u518c!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3700/buggy-version/app.src.main.java.lab.mars.m2m.m2msmartofficephone.model.RegisterObservable.java", "BodyUseAPI": [], "Fixed commit": "6853cb50ec3588364cd6cd8592fe8dd6e2d9e5bb", "Url": "https://api.github.com/repos/KAIKIS/M2MSmartOfficePhone", "Date": "2017-06-24T10:50:21Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(val.equals(\"Edit...\"))) party = ((preptool.model.Party) (val));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5520/buggy-version/preptool.model.ballot.CardElement.java", "BodyUseAPI": [], "Fixed commit": "1b7de5604f71e4c3a77bbb8497a3d9f5f3541658", "Url": "https://api.github.com/repos/mdb92nc/STAR-Vote", "Date": "2014-06-09T16:45:39Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.a00.tictactoegame.MainActivity.checkForWinner()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (winner) { android.widget.Button playButton = ((android.widget.Button) (findViewById(R.id.button10))); playButton.setVisibility(View.VISIBLE); }else { boolean full = isBoardFull(); if (full) { android.widget.Button playButton = ((android.widget.Button) (findViewById(R.id.button10))); playButton.setVisibility(View.VISIBLE); }else { computersTurn(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2094/buggy-version/app.src.main.java.com.example.a00.tictactoegame.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "52e1648152b7687631a1109f4ca71e027191dbe0", "Url": "https://api.github.com/repos/premus/TicTacToeGame", "Date": "2017-09-27T04:49:40Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Integer.parseInt(args[2])) < 20) { if ((20 % (java.lang.Integer.parseInt(args[2]))) != 0) { sender.sendMessage(\"Sorry, but if the freq is less than 20,\\nit must be a factor of 20\"); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8436/buggy-version/src.com.rootbeer.bukkitHelloWorld.commands.DeathRain.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "be7da15c59b5df74b70ad3249e2065ceb3c1dc51", "Url": "https://api.github.com/repos/clolniraed1214/Bukkit-HelloWorld", "Date": "2015-12-01T22:52:44Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((firstPerson.getGroup().size()) == 0) { int index = groupsCopy.indexOf(firstPerson.getGroup()); groupsCopy.remove(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1799/buggy-version/RandomCircularList.java", "BodyUseAPI": ["java.util.List<Group>.indexOf(firstPerson.getGroup())", "Person.getGroup()"], "Fixed commit": "cb9c6cd8d0b053e1443b23f4870480229118a604", "Url": "https://api.github.com/repos/ChaseC99/RandomCircularListGenerator", "Date": "2017-09-01T11:42:52Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sender instanceof com.mbserver.api.game.Player) event = new plugins.mbes.misc.PMEvent(((com.mbserver.api.game.Player) (sender)), send, msg); else event = new plugins.mbes.misc.PMEvent(null, send, msg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7191/buggy-version/src.plugins.mbes.commands.PMCmds.java", "BodyUseAPI": [], "Fixed commit": "724434824270699357f74f5235740434215c16c7", "Url": "https://api.github.com/repos/CoolAAA/MBEssentials", "Date": "2014-03-02T19:57:58Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((start < 0) || (end < 0)) { it.cnr.isti.hpc.wikipedia.parser.ArticleParser.logger.warn(\"cannot find the redirect {}\\n mediawiki: {}\", article.getTitle(), mediawiki); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5299/buggy-version/src.main.java.it.cnr.isti.hpc.wikipedia.parser.ArticleParser.java", "BodyUseAPI": [], "Fixed commit": "9f109deeb20daa121796aee59116284bff3de12a", "Url": "https://api.github.com/repos/diegoceccarelli/json-wikipedia", "Date": "2013-08-16T21:26:24Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(com.github.ucchyocean.lc.channel.ChannelImpl.MSG_NO_RECIPIENT.equals(\"\"))) && (((recipients.size()) == 0) || (((recipients.size()) == 1) && (recipients.get(0).getName().equals(player.getName()))))) { sendNoRecipientMessage = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8081/buggy-version/src.main.java.com.github.ucchyocean.lc.channel.ChannelImpl.java", "BodyUseAPI": [], "Fixed commit": "ef864c1fc1e53bac71bba56c516c44c954e8ffef", "Url": "https://api.github.com/repos/ucchyocean/LunaChat", "Date": "2014-10-18T13:26:21Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isNewFormat_151105 || ((tmp.getRowNum()) < borderRowBetweenTopAndBottom)) { java.lang.String tkey = getRowKey(tmp, borderRowBetweenTopAndBottom, isForTracing); if (key == null) key = tkey; else if (!(key.equals(tkey))) different = true; rows += \";\" + ((tmp.getRowNum()) + 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/135/buggy-version/de.bund.bfr.knime.openkrise.db.src.de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.TraceImporter.java", "BodyUseAPI": ["de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.TraceImporter.getRowKey(org.apache.poi.ss.usermodel.Row,int,boolean)", "org.apache.poi.ss.usermodel.Row.getRowNum()"], "Fixed commit": "f23bf72b0e9ecdee27a0c0666f1795c4a32dd6f2", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2015-12-01T17:51:47Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(profession.isEmpty())) tip.add((((net.minecraft.util.StatCollector.translateToLocal(\"tooltip.wawla.profession\")) + \": \") + profession));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3224/buggy-version/src.main.java.net.darkhax.wawla.addons.vanillamc.AddonVanillaEntities.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add((((net.minecraft.util.StatCollector.translateToLocal(\"tooltip.wawla.profession\")) + \": \") + profession))"], "Fixed commit": "1e8c9b8155c7c61435d23a4e1b0e88952b810e8a", "Url": "https://api.github.com/repos/Darkhax-Minecraft/WAWLA", "Date": "2015-06-19T07:55:53Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getMessage().getSOAPBody().getFirstChild()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (operationNode != null) { operationName = operationNode.getLocalName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7087/buggy-version/oscm-apiversioning-soapmgmt.javasrc.org.oscm.apiversioning.soapmgmt.parser.SoapRequestParser.java", "BodyUseAPI": ["org.w3c.dom.Node.getLocalName()"], "Fixed commit": "5e8a295b8d9f9e0b126685fed00e20beeafc4adb", "Url": "https://api.github.com/repos/servicecatalog/development", "Date": "2016-02-19T15:37:05Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.ws.handler.soap.SOAPMessageContext.get(MessageContext.WSDL_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (serviceQName != null) { serviceName = serviceQName.getLocalPart(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7087/buggy-version/oscm-apiversioning-soapmgmt.javasrc.org.oscm.apiversioning.soapmgmt.parser.SoapRequestParser.java", "BodyUseAPI": ["javax.xml.namespace.QName.getLocalPart()"], "Fixed commit": "5e8a295b8d9f9e0b126685fed00e20beeafc4adb", "Url": "https://api.github.com/repos/servicecatalog/development", "Date": "2016-02-19T15:37:05Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs((max - min))) < 1.0E-6) { coefficient = 0; bias = 0.5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6104/buggy-version/src.com.zxx.lyz.Formal.java", "BodyUseAPI": [], "Fixed commit": "4f0160e82a2bd836801ee5eab3a26256d6ab2497", "Url": "https://api.github.com/repos/tzjtatata/SSLab3", "Date": "2016-10-24T07:27:29Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (wsSession.isOpen()) { try { return ((java.util.Set) (wsSession.getUserProperties().get(net.twentyonesolutions.lucee.websocket.PROPERTY_CHANNELS))); } catch (java.lang.IllegalStateException ise) { this.getConnectionManager().log(Log.LEVEL_DEBUG, (((this.getId()) + \": \") + (ise.getMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3244/buggy-version/src.main.java.net.twentyonesolutions.lucee.websocket.WebSocket.java", "BodyUseAPI": ["wsSession.getUserProperties().get(net.twentyonesolutions.lucee.websocket.PROPERTY_CHANNELS)", "net.twentyonesolutions.lucee.websocket.Session.getUserProperties()"], "Fixed commit": "b45cc44e9e1c9efa007cd277b9e7005ef4ab167e", "Url": "https://api.github.com/repos/isapir/lucee-websocket", "Date": "2017-09-23T19:41:16Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p.getBirthday()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7250/buggy-version/src.main.java.address.controller.BirthdayStatisticsController.java", "BodyUseAPI": [], "Fixed commit": "8b7b3b17ad818c392da38eac40095362f16468cd", "Url": "https://api.github.com/repos/HubTurbo/addressbook", "Date": "2016-06-02T05:20:33Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.everit.osgi.capabilitycollector.AbstractCapabilityCollector<C>.searchMatchingCapabilityForRequirement(suiting.getRequirement())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (newCapability == null) { satisfied = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1441/buggy-version/core.src.main.java.org.everit.osgi.capabilitycollector.AbstractCapabilityCollector.java", "BodyUseAPI": [], "Fixed commit": "f5c2a873663024f706c86744badb418b87ac7c6e", "Url": "https://api.github.com/repos/everit-org/osgi-capability-collector", "Date": "2015-03-25T21:11:17Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((num[startIndex]) < target) return startIndex + 1; else { return startIndex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8420/buggy-version/src.sort.BinaryInsertSort.java", "BodyUseAPI": [], "Fixed commit": "f1161095f12c19dbe0f74c2b2328d175b4af8a1d", "Url": "https://api.github.com/repos/zhangliukun/data-structure", "Date": "2015-08-06T15:59:52Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((cons.getConstructorType()) == (org.rascalmpl.values.uptr.RascalValueFactory.Tree_Cycle)) { this.symbol = org.rascalmpl.values.uptr.TreeAdapter.getType(((org.rascalmpl.values.uptr.ITree) (cons))); }else if ((cons.getType()) == (org.rascalmpl.values.uptr.RascalValueFactory.Symbol)) { this.symbol = cons; }else if ((cons.getType()) == (org.rascalmpl.values.uptr.RascalValueFactory.Production)) { this.symbol = org.rascalmpl.values.uptr.ProductionAdapter.getType(cons); }else { throw new org.rascalmpl.interpreter.asserts.ImplementationError((\"Invalid concrete syntax type constructor:\" + cons)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6249/buggy-version/src.org.rascalmpl.interpreter.types.NonTerminalType.java", "BodyUseAPI": [], "Fixed commit": "ee588427405974d4504b6829a037dd898594359a", "Url": "https://api.github.com/repos/usethesource/rascal", "Date": "2015-06-19T09:33:45Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.seqNum) <= (-1)) { getNextKey(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7124/buggy-version/app.src.main.java.com.bccs.bsecure.SecurityContact.java", "BodyUseAPI": [], "Fixed commit": "783397291772f865280350c9b66a57ff821f366e", "Url": "https://api.github.com/repos/BlackburnCollegeComputerScience/Bsecure", "Date": "2015-07-03T15:58:45Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((suspiciousNode.getOrder()) == 30) { java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7398/buggy-version/microbat.src.evaluation.microbat.evaluation.SimulatedMicroBat.java", "BodyUseAPI": [], "Fixed commit": "dcca192c33e3bb1331657f6a6af27cef7f8aa1e6", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2016-05-22T11:20:02Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((state) == (State.Resolved)) { this.id = result.getId(); this.moduleDescriptor = result.getDescriptor(); this.isChanging = result.isChanging(); this.moduleSource = result.getModuleSource(); }else { this.id = null; this.moduleDescriptor = null; this.isChanging = false; this.moduleSource = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3940/buggy-version/subprojects.core-impl.src.main.groovy.org.gradle.api.internal.artifacts.ivyservice.ivyresolve.InMemoryDescriptorCache.java", "BodyUseAPI": [], "Fixed commit": "da8b0ae468b0f3fada31a2556c419d951753f070", "Url": "https://api.github.com/repos/gradle/gradle", "Date": "2013-04-18T13:20:36Z"},
{"Line": "=>1081", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((looseArgs.size()) > 0) { results.updateArgument(validateArgument(null, looseArgs)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5039/buggy-version/src.main.java.com.laytonsmith.PureUtilities.ArgumentParser.java", "BodyUseAPI": ["com.laytonsmith.PureUtilities.ArgumentParser.ArgumentParserResults.updateArgument(com.laytonsmith.PureUtilities.ArgumentParser.Argument)", "com.laytonsmith.PureUtilities.ArgumentParser.validateArgument(<nulltype>,java.util.List<java.lang.String>)"], "Fixed commit": "68ff500f769f43d259168be54fe08952d8d4e63d", "Url": "https://api.github.com/repos/ACzChef/commandhelper", "Date": "2014-03-13T21:29:01Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.flag.contains(u))) { this.flag.add(u); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2565/buggy-version/LoCo.app.src.main.java.com.example.flymperopoulos.loco.User.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "d39a47bcf2518f764884f71d7ab0acd1c8822958", "Url": "https://api.github.com/repos/dcelik/MobileProtoFall2014-LoCo", "Date": "2014-10-16T06:26:39Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((event.kind()) == (java.nio.file.StandardWatchEventKinds.ENTRY_MODIFY)) && (wdir.resolve(ev).toFile().isDirectory())) { }else { rtn = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/51/buggy-version/vertx-core.src.main.java.org.vertx.java.core.file.impl.FolderWatcher.java", "BodyUseAPI": [], "Fixed commit": "d594d16c27b5ee00535962c77b835f4d84d1c896", "Url": "https://api.github.com/repos/jdonnerstag/vert.x", "Date": "2012-12-15T18:48:31Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (returnType.equals(void.class)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2571/buggy-version/homer-core.src.main.java.com.yiwugou.homer.core.codec.DefaultDecoder.java", "BodyUseAPI": [], "Fixed commit": "221420eab2dd0bedaca980ed4afb47f3c8bcf6ca", "Url": "https://api.github.com/repos/yiwugou/homer", "Date": "2017-05-25T00:11:27Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (returnType.equals(void.class)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2571/buggy-version/homer-fastjson.src.main.java.com.yiwugou.homer.fastjson.FastjsonDecoder.java", "BodyUseAPI": [], "Fixed commit": "221420eab2dd0bedaca980ed4afb47f3c8bcf6ca", "Url": "https://api.github.com/repos/yiwugou/homer", "Date": "2017-05-25T00:11:27Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.console.OTableFormatter.getFieldValue(int,com.orientechnologies.orient.core.db.record.OIdentifiable,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof com.orientechnologies.orient.core.db.record.ridbag.ORidBag) { ((com.orientechnologies.orient.core.db.record.ridbag.ORidBag) (value)).size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6509/buggy-version/tools.src.main.java.com.orientechnologies.orient.console.OTableFormatter.java", "BodyUseAPI": [], "Fixed commit": "4578b11c5abcce130a9c4a39ab11dfc24e1d74fd", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-03-22T09:40:15Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((methodParts.length) == 1) { return methods.get(\"\").containsKey(methodParts[0]); }else { return (methods.containsKey(methodParts[0])) && (methods.get(methodParts[0]).containsKey(methodParts[1])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4263/buggy-version/src.com.ramblingwood.minecraft.jsonapi.dynamic.Caller.java", "BodyUseAPI": ["methods.get(methodParts[0]).containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.HashMap<java.lang.String, com.ramblingwood.minecraft.jsonapi.dynamic.Method>>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.HashMap<java.lang.String, com.ramblingwood.minecraft.jsonapi.dynamic.Method>>.containsKey(java.lang.String)", "methods.get(\"\").containsKey(java.lang.String)"], "Fixed commit": "44bc360dd70859749540758ec5a21d9984c3919a", "Url": "https://api.github.com/repos/alecgorge/jsonapi", "Date": "2011-05-01T19:39:16Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((obj.getName().equals(\"length\")) && (lastResult.getClass().isArray())) { lastResult = java.lang.reflect.Array.getLength(lastResult); }else { lastResult = lastResult.getClass().getField(obj.getName()).get(lastResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4263/buggy-version/src.com.ramblingwood.minecraft.jsonapi.dynamic.Call.java", "BodyUseAPI": ["com.ramblingwood.minecraft.jsonapi.dynamic.Call.SubField.getName()", "java.lang.reflect.Field.get(java.lang.Object)", "java.lang.Class<? extends java.lang.Object>.getField(java.lang.String)", "java.lang.Object.getClass()", "java.lang.reflect.Array.getLength(java.lang.Object)"], "Fixed commit": "44bc360dd70859749540758ec5a21d9984c3919a", "Url": "https://api.github.com/repos/alecgorge/jsonapi", "Date": "2011-05-01T19:39:16Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mockPath.startsWith(\"/\"))) { mockPath = \"/\" + mockPath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5593/buggy-version/src.main.java.cn.creditease.marmot.filter.MockFilter.java", "BodyUseAPI": [], "Fixed commit": "076be2e605f412fc7a5827562ac54aa4f3dd343e", "Url": "https://api.github.com/repos/evan2x/java-marmot", "Date": "2016-01-27T07:00:06Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(contains(key))) { return (setOperations.add(processorName, key)) != null; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1657/buggy-version/components.camel-spring-redis.src.main.java.org.apache.camel.component.redis.processor.idempotent.RedisIdempotentRepository.java", "BodyUseAPI": ["org.springframework.data.redis.core.SetOperations<java.lang.String, java.lang.String>.add(java.lang.String,java.lang.String)"], "Fixed commit": "ab46884160dcb8988208732734b9e15ad31a844b", "Url": "https://api.github.com/repos/kevinearls/camel", "Date": "2014-06-26T03:17:23Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cmdClass.getAnnotation(org.apache.cloudstack.api.APICommand.class)) == null) { java.lang.System.out.println(((\"Warning, API Cmd class \" + (cmdClass.getName())) + \" has no APICommand annotation \")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/82/buggy-version/server.src.com.cloud.api.doc.ApiXmlDocWriter.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.lang.Class<?>.getName()"], "Fixed commit": "d5eb2c0321e7990996b1fbdca989076fb243ae2f", "Url": "https://api.github.com/repos/rsafonseca/cloudstack", "Date": "2015-05-20T01:01:41Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((r.rd.externalID) == (tdzOS.OS.ResName.PratestiVMDarba)) || ((r.rd.externalID) == (tdzOS.OS.ResName.BlokasAtrakintas))) { if (((java.lang.Process) (r.rd.components.getLast().value)) != tmpProcess) give = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4856/buggy-version/tdzVmRm.src.tdzOS.ResourceManager.java", "BodyUseAPI": ["r.rd.components.getLast()"], "Fixed commit": "0dfbabfcdcb93ef00d0589f2431e1434607512d9", "Url": "https://api.github.com/repos/Domukas/MitOS", "Date": "2012-05-28T16:33:04Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (call.callJava()) { methodVisitor.visitMethodInsn(loop.INVOKESTATIC, \"loop/runtime/Caller\", \"callStatic\", \"(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\"); }else { methodVisitor.visitMethodInsn(loop.INVOKESTATIC, \"loop/runtime/Caller\", \"callStatic\", \"(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5533/buggy-version/src.loop.AsmCodeEmitter.java", "BodyUseAPI": [], "Fixed commit": "4e060d4bc61e7e3fa7573d1cdfa06314a5ac4bc6", "Url": "https://api.github.com/repos/dhanji/loop", "Date": "2012-08-18T07:21:19Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.lang.Float.isInfinite(corrY))) { r = r.translate(0.0F, corrY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6903/buggy-version/Platformer.src.com.gravity.physics.GravityPhysics.java", "BodyUseAPI": ["com.gravity.geom.Rect.translate(float,float)"], "Fixed commit": "dfe64a265dee50cda9b8bbfdc2eb5d919a617a09", "Url": "https://api.github.com/repos/dPATHo/PPBunnies", "Date": "2012-11-08T20:55:09Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((javassist.Modifier.isStatic(field.getModifiers())) == false) && ((javassist.Modifier.isFinal(field.getModifiers())) == false)) { fields.add(field); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8239/buggy-version/src.main.java.de.terrestris.shogun.dao.DatabaseDao.java", "BodyUseAPI": ["java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)"], "Fixed commit": "4ed929a791cc56a0047b04ea74088072193e97ea", "Url": "https://api.github.com/repos/marcjansen/shogun", "Date": "2013-08-05T06:56:39Z"},
{"Line": "=>874", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((readCheck) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.READ_EXTERNAL_STORAGE }, 2); }else if ((recordCheck) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.RECORD_AUDIO }, 3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1172/buggy-version/app.src.main.java.com.kirtan.audionotetaker.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c2ffda6f065232a0b307a7ee2a8b60b43b840e98", "Url": "https://api.github.com/repos/kirtan96/Audio_Notetaker", "Date": "2016-05-26T19:01:26Z"},
{"Line": "=>887", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recordCheck) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.RECORD_AUDIO }, 3); }else if ((internetCheck) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.INTERNET }, 4); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1172/buggy-version/app.src.main.java.com.kirtan.audionotetaker.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c2ffda6f065232a0b307a7ee2a8b60b43b840e98", "Url": "https://api.github.com/repos/kirtan96/Audio_Notetaker", "Date": "2016-05-26T19:01:26Z"},
{"Line": "=>861", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((writeCheck) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.WRITE_EXTERNAL_STORAGE }, 1); }else if ((readCheck) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.READ_EXTERNAL_STORAGE }, 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1172/buggy-version/app.src.main.java.com.kirtan.audionotetaker.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c2ffda6f065232a0b307a7ee2a8b60b43b840e98", "Url": "https://api.github.com/repos/kirtan96/Audio_Notetaker", "Date": "2016-05-26T19:01:26Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((int) (this.value)) < 0.1) { percent = 1; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1951/buggy-version/lib.src.main.java.tech.linjiang.suitlines.Unit.java", "BodyUseAPI": [], "Fixed commit": "a989de7462f2621fbc191e1745283e1c6a403641", "Url": "https://api.github.com/repos/whataa/SuitLines", "Date": "2017-05-22T13:27:44Z"},
{"Line": "=>1971", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.defaultDialog) != null) && ((this.defaultDialog.getState()) == null)) { this.defaultDialog.setState(SIPDialog.TERMINATED_STATE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3395/buggy-version/src.gov.nist.javax.sip.stack.SIPClientTransactionImpl.java", "BodyUseAPI": ["gov.nist.javax.sip.stack.SIPDialog.setState(SIPDialog.TERMINATED_STATE)"], "Fixed commit": "7c9cffa961900111c0b17f654facfe30fd249a36", "Url": "https://api.github.com/repos/RestComm/jain-sip", "Date": "2016-09-25T18:55:46Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((spec.get(\"aggregation\")) != null) aggr = com.nomagic.uml2.ext.magicdraw.classes.mdkernel.AggregationKindEnum.getByName(((java.lang.String) (spec.get(\"aggregation\"))).toLowerCase());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7092/buggy-version/src.main.java.gov.nasa.jpl.mbee.ems.ImportUtility.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(java.lang.String)", "((java.lang.String) (spec.get(\"aggregation\"))).toLowerCase()", "com.nomagic.uml2.ext.magicdraw.classes.mdkernel.AggregationKindEnum.getByName(java.lang.String)"], "Fixed commit": "0f136e6f02a4168f1c3c9608e54d66664ecaaec3", "Url": "https://api.github.com/repos/Open-MBEE/mdk", "Date": "2015-09-29T00:31:32Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(agent.getAllBeliefs(\"lastAction\").getFirst().getParameters().get(0).equals(\"buy\"))) && (agent.getAllBeliefs(\"lastActionResult\").getFirst().getParameters().get(0).equals(\"failed_resources\"))) { java.lang.System.out.println(((\"Recharging because our last action \" + (agent.getAllBeliefs(\"lastActionResult\").getFirst().getParameters().get(0))) + \" failed\")); return massim.javaagents.agents.MarsUtil.rechargeAction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7722/buggy-version/com.cse431.marsmen.strategy.RechargeStrategy.java", "BodyUseAPI": ["java.io.PrintStream.println(((\"Recharging because our last action \" + (agent.getAllBeliefs(\"lastActionResult\").getFirst().getParameters().get(0))) + \" failed\"))", "agent.getAllBeliefs(\"lastActionResult\").getFirst().getParameters()", "com.cse431.marsmen.MarsAgent.getAllBeliefs(java.lang.String)", "agent.getAllBeliefs(\"lastActionResult\").getFirst().getParameters().get(int)", "agent.getAllBeliefs(\"lastActionResult\").getFirst()"], "Fixed commit": "90ee0b4ca123aa7446c0de1500b3e363487fb127", "Url": "https://api.github.com/repos/SheynD/431MarsAgent", "Date": "2016-12-08T04:55:32Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.ContentResolver.query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (c != null) { mSubscriber.onNext(c); }else { mSubscriber.onError(new com.doctoror.rxcursorloader.QueryReturnedNullException()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7548/buggy-version/library.src.main.java.com.doctoror.rxcursorloader.RxCursorLoader.java", "BodyUseAPI": ["rx.Subscriber<? super android.database.Cursor>.onNext(android.database.Cursor)"], "Fixed commit": "8d7fe12a94b3ec03fc04552336a8a4dbe8e5dc1f", "Url": "https://api.github.com/repos/Doctoror/RxCursorLoader", "Date": "2017-01-10T15:58:54Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resultCode == (android.app.Activity.RESULT_OK)) { photoButtonHandler.handleResult(requestCode, resultCode, data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6840/buggy-version/app.src.main.java.com.dmytro.notes19_2.MainActivity.java", "BodyUseAPI": ["com.dmytro.notes19_2.PhotoButtonHandler.handleResult(int,int,android.content.Intent)"], "Fixed commit": "d33df9dd0ac22a6e43a706875636384d4d9980d3", "Url": "https://api.github.com/repos/dmytrobohdanov/android_Notes", "Date": "2016-05-11T15:46:46Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Class<? extends com.jajja.jorm.Record>, org.apache.commons.logging.Log>.get(java.lang.Class<? extends com.jajja.jorm.Record>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (log == null) { synchronized(com.jajja.jorm.Record.logs) { log = com.jajja.jorm.Record.logs.get(clazz); if (log == null) { log = org.apache.commons.logging.LogFactory.getLog(clazz); com.jajja.jorm.Record.logs.put(clazz, log); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8550/buggy-version/src.main.java.com.jajja.jorm.Record.java", "BodyUseAPI": [], "Fixed commit": "be97891d91951f64a966f9f0f6a7082df52a3a63", "Url": "https://api.github.com/repos/jajja/jorm", "Date": "2013-06-26T19:50:47Z"},
{"Line": "=>3410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isJournalPlacedForVarray) { com.emc.storageos.volumecontroller.RPRecommendation targetJournalRecommendation = buildJournalRecommendation(rpProtectionRecommendation, targetInternalSiteName, protectionSettings.getJournalSize(), targetJournalVarray, targetJournalVpool, ps, newCapabilities, capabilities.getResourceCount(), null, false); if (targetJournalRecommendation == null) { continue; } rpProtectionRecommendation.getTargetJournalRecommendations().add(targetJournalRecommendation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/448/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java", "BodyUseAPI": [], "Fixed commit": "6de3e6d2ad1952acb7b9a4eed7642b4b8b16c18d", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-10-08T23:50:25Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game) != null) { redrawGame(game.getGameLogic()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5540/buggy-version/app.src.main.java.net.ldvsoft.warofviruses.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "9a40cb6432d706938ace8a77a9989589e0ae3f41", "Url": "https://api.github.com/repos/LDVSOFT/War-Of-Viruses", "Date": "2015-12-14T14:01:46Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contentBytes == null) { contentBytes = new byte[0]; }else { this.contentBytes = contentBytes; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4272/buggy-version/src.main.java.com.rusticisoftware.tincan.http.HTTPResponse.java", "BodyUseAPI": [], "Fixed commit": "b372ad65ea0b7e60e4b3a124a0cb205a8d84c4a3", "Url": "https://api.github.com/repos/alycklama/TinCanJava", "Date": "2015-09-08T07:23:56Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.format(java.lang.String,instance.getKey().toString())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((gde.gui.util.JFreeChartFactory.capturedDataCollection.count(query)) > 0) { gde.models.CapturedData capturedData = gde.gui.util.JFreeChartFactory.capturedDataCollection.find(query).sort(\"{_id: -1}\").limit(1).as(gde.models.CapturedData.class).iterator().next(); java.lang.String stat = capturedData.getData().get(field.getName().toLowerCase()); if (keyedValues.getKeys().contains(stat)) { keyedValues.addValue(stat, ((keyedValues.getValue(stat).intValue()) + 1)); }else { keyedValues.setValue(stat, 1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6426/buggy-version/gde.src.gde.gui.util.JFreeChartFactory.java", "BodyUseAPI": ["gde.gui.util.JFreeChartFactory.capturedDataCollection.find(query).sort(\"{_id: -1}\").limit(1).as(gde.models.CapturedData.class).iterator().next()", "org.jongo.MongoCollection.find(java.lang.String)", "gde.gui.util.JFreeChartFactory.capturedDataCollection.find(query).sort(java.lang.String)", "gde.gui.util.JFreeChartFactory.capturedDataCollection.find(query).sort(\"{_id: -1}\").limit(1).as(gde.models.CapturedData.class).iterator()", "gde.gui.util.JFreeChartFactory.capturedDataCollection.find(query).sort(\"{_id: -1}\").limit(1).as(java.lang.Class)", "gde.gui.util.JFreeChartFactory.capturedDataCollection.find(query).sort(\"{_id: -1}\").limit(int)"], "Fixed commit": "4fc4804568a2583eaa137d2e65fa7bc9112abda4", "Url": "https://api.github.com/repos/justinsvegliato/gde", "Date": "2013-05-06T21:03:19Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.craigmiller160.utils.collection.MultiValueMap<java.lang.Class<?>, java.lang.ref.WeakReference<?>>.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (values != null) { for (java.lang.ref.WeakReference<?> weakRef : values) { if ((weakRef.get()) == null) { toRemove.add(weakRef); } } for (java.lang.ref.WeakReference<?> weakRef : toRemove) { values.remove(weakRef); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5071/buggy-version/src.main.java.io.craigmiller160.locus.util.ViewObjectTracker.java", "BodyUseAPI": ["java.util.Collection<java.lang.ref.WeakReference<?>>.remove(java.lang.ref.WeakReference<?>)"], "Fixed commit": "ca043d3476833e7a143da384d061237d061e9dfa", "Url": "https://api.github.com/repos/craigmiller160/Locus-Framework", "Date": "2016-04-26T03:14:04Z"},
{"Line": "=>1597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((candidate) == null) { clearSettings(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3088/buggy-version/ui.src.org.pentaho.di.ui.spoon.trans.TransGraph.java", "BodyUseAPI": [], "Fixed commit": "09eb349784a8df6659d84e50776dade5291d02b7", "Url": "https://api.github.com/repos/HiromuHota/pentaho-kettle", "Date": "2017-01-09T19:10:41Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.util.List<com.sun.jersey.multipart.FormDataBodyPart>>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ex.contains(name)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1902/buggy-version/alvisnlp-rest.src.main.java.fr.jouy.inra.maiage.bibliome.alvis.web.RunResource.java", "BodyUseAPI": [], "Fixed commit": "a686a160b369b1d86156ebe1cff34bb0d6b6a449", "Url": "https://api.github.com/repos/Bibliome/alvisnlp", "Date": "2017-01-18T03:11:46Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((node.data) < min) || ((node.data) > max)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/623/buggy-version/DataStructure.src.datastructure.nonlinear.BinaryTree.java", "BodyUseAPI": [], "Fixed commit": "30ea91e3483a65b601053f0cedd6c1413acd053c", "Url": "https://api.github.com/repos/BikashShaw/InterviewAlgorithm", "Date": "2017-04-06T20:38:43Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pos == 0) { idx = (random.nextInt(((org.talend.dataquality.duplicating.FieldModifier.DIGIT.length()) - 1))) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5415/buggy-version/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.duplicating.FieldModifier.java", "BodyUseAPI": [], "Fixed commit": "4d00689eb2da5b3e1b337252049a43a5ba0ba84b", "Url": "https://api.github.com/repos/Talend/tdq-studio-se", "Date": "2014-07-01T10:39:54Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.plugins.git.util.BuildData.getLastBuiltRevision()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (revision != null) { commit = revision.getSha1String(); if (commit != null) { branches = revision.getBranches(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2429/buggy-version/src.main.java.org.jenkinsci.plugins.gittagmessage.GitTagMessageExtension.java", "BodyUseAPI": ["hudson.plugins.git.Revision.getBranches()", "hudson.plugins.git.Revision.getSha1String()"], "Fixed commit": "e36e206c6b216e34d18c088059a8138ef480df82", "Url": "https://api.github.com/repos/Greybird/git-tag-message-plugin", "Date": "2017-10-22T10:41:12Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((additionalDataValue == null) || (additionalDataValue.isEmpty())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6639/buggy-version/src.main.java.com.stardust.easyassess.track.services.IQCPlanServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "daba500c097f45997d27e5641e7d6f8aa068b62e", "Url": "https://api.github.com/repos/EasyAssessSystem/track", "Date": "2017-06-10T11:11:00Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gun.isReloading())) { aiming = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2667/buggy-version/core.src.main.java.no.kash.gamedev.jag.game.gameobjects.players.Player.java", "BodyUseAPI": [], "Fixed commit": "de7ab02d9392545537d7641bb44412f8b615d85c", "Url": "https://api.github.com/repos/Kjelli/JAG", "Date": "2016-04-09T01:18:49Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((protocols) == null) { protocols = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8717/buggy-version/de.persosim.simulator.src.de.persosim.simulator.perso.XmlPersonalization.java", "BodyUseAPI": [], "Fixed commit": "65c87f96bee2a33fd9202ebf99b8c2e890f67dc0", "Url": "https://api.github.com/repos/PersoSim/de.persosim.simulator", "Date": "2014-09-29T14:24:10Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mf) == null) { mf = new de.persosim.simulator.cardobjects.MasterFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8717/buggy-version/de.persosim.simulator.src.de.persosim.simulator.perso.XmlPersonalization.java", "BodyUseAPI": [], "Fixed commit": "65c87f96bee2a33fd9202ebf99b8c2e890f67dc0", "Url": "https://api.github.com/repos/PersoSim/de.persosim.simulator", "Date": "2014-09-29T14:24:10Z"},
{"Line": "=>530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ml.shifu.shifu.fs.ShifuFileUtils.getDataScanners(pathFinder.getPSIInfoPath(),modelConfig.getDataSet().getSource())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((scanners == null) || ((scanners.size()) == 0)) { ml.shifu.shifu.core.processor.stats.MapReducerStatsWorker.log.info(\"The PSI got failure during the computation\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7843/buggy-version/src.main.java.ml.shifu.shifu.core.processor.stats.MapReducerStatsWorker.java", "BodyUseAPI": [], "Fixed commit": "35ccefd4c99a12a0e46591e644cfb5de7b483f90", "Url": "https://api.github.com/repos/m4rkl1u/shifu", "Date": "2017-07-18T10:21:09Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((is.getItemDamage()) == 1) { is.setItemDamage(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4418/buggy-version/TFC_Shared.src.TFC.Items.ItemMeltedMetal.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.setItemDamage(int)"], "Fixed commit": "17cf238fc512439c316c7d3cedb5589f5122e2ed", "Url": "https://api.github.com/repos/tomato3017/TFCraft", "Date": "2013-09-16T22:43:01Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (driverList.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5659/buggy-version/app.src.main.java.ca.ualberta.cs.unter.model.request.Request.java", "BodyUseAPI": [], "Fixed commit": "08a44ee1a0d49e733a0eebf913148d30a55dba2d", "Url": "https://api.github.com/repos/CMPUT301F16T18/Unter", "Date": "2016-11-10T10:27:21Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exploded) { setVelocity(0, 0, 0); if ((ticksToExplode) < (-(mhfc.net.common.entity.projectile.EntityFlashBomb.EXPLOSION_DURATION))) finishExplosion(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3630/buggy-version/src.main.java.mhfc.net.common.entity.projectile.EntityFlashBomb.java", "BodyUseAPI": [], "Fixed commit": "d4f33394700f19a1748b0c8506beb4776d2b019e", "Url": "https://api.github.com/repos/Heltrato/MHFC", "Date": "2015-03-29T14:20:59Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (label.equalsIgnoreCase(\"bmctoggle\")) label = \"bmct\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6390/buggy-version/src.main.java.io.github.tommsy64.bashmulticommand.BashMultiCommand.java", "BodyUseAPI": [], "Fixed commit": "918f8381d8ff4d00fcfd157575455ff43e9202c0", "Url": "https://api.github.com/repos/Tommsy64/Bash-Multi-Command", "Date": "2014-06-08T22:22:51Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stringScore.contains(\":\")) { java.lang.String[] tokens = stringScore.split(\":\"); int minutes = java.lang.Integer.parseInt(tokens[0]); float seconds = java.lang.Float.parseFloat(tokens[1]); score = (minutes * 60) + seconds; }else score = java.lang.Float.parseFloat(stringScore);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7526/buggy-version/src.Olympia.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.Float.parseFloat(java.lang.String)"], "Fixed commit": "33a147ca1f7e281a256779f5fb207faf3a214214", "Url": "https://api.github.com/repos/kristapatel/InfoVis", "Date": "2013-12-06T01:05:32Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.psddev.dari.util.CssRule.getValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.psddev.dari.util.ObjectUtils.isBlank(rowsValue)) { rowsValue = rule.getValue(\"grid-definition-rows\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/69/buggy-version/util.src.main.java.com.psddev.dari.util.HtmlGrid.java", "BodyUseAPI": [], "Fixed commit": "15d4e5a999670bee464352b345de7403609a14fb", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2013-05-06T13:26:00Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.psddev.dari.util.CssRule.getValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.psddev.dari.util.ObjectUtils.isBlank(columnsValue)) { columnsValue = rule.getValue(\"grid-definition-columns\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/69/buggy-version/util.src.main.java.com.psddev.dari.util.HtmlGrid.java", "BodyUseAPI": [], "Fixed commit": "15d4e5a999670bee464352b345de7403609a14fb", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2013-05-06T13:26:00Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.psddev.dari.util.CssRule.getValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.psddev.dari.util.ObjectUtils.isBlank(templateValue)) { templateValue = rule.getValue(\"grid-template\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/69/buggy-version/util.src.main.java.com.psddev.dari.util.HtmlGrid.java", "BodyUseAPI": [], "Fixed commit": "15d4e5a999670bee464352b345de7403609a14fb", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2013-05-06T13:26:00Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node.getChildren()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2652/buggy-version/src.main.java.snmp.SnmpNode.java", "BodyUseAPI": [], "Fixed commit": "e76bb441fb76c5d64c937dfe42c417213fce94f6", "Url": "https://api.github.com/repos/IOT-DSA/dslink-java-snmp", "Date": "2015-05-29T19:09:40Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(model.db.DBClient.usingDB.containsKey(java.lang.Thread.currentThread()))) { synchronized(model.db.DBClient.class) { if (!(model.db.DBClient.usingDB.containsKey(java.lang.Thread.currentThread()))) { model.db.DBClient.usingDB.put(java.lang.Thread.currentThread(), new java.util.HashSet<>()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1239/buggy-version/main.java.model.db.DBClient.java", "BodyUseAPI": [], "Fixed commit": "e59197b2e7c6776827438bf580737819b28e4d59", "Url": "https://api.github.com/repos/xloypaypa/xloBlog", "Date": "2015-09-03T04:32:40Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.com.softserveinc.bawl.dto.IssueDTO.getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(org.springframework.util.StringUtils.isEmpty(name))) { editedIssue.setName(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8886/buggy-version/app.src.main.java.edu.com.softserveinc.bawl.controllers.IssueController.java", "BodyUseAPI": ["edu.com.softserveinc.bawl.models.IssueModel.setName(java.lang.String)"], "Fixed commit": "a7340aab34c67ea02e6f60c9cf549d4d106ced0e", "Url": "https://api.github.com/repos/Social-projects-Rivne/issue-city-task-tool", "Date": "2015-11-10T10:31:02Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getItem()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (i != null) denied = !(fr.frozentux.craftguard2.PermissionChecker.check(p, i.getTypeId(), i.getData().getData(), plugin, \"use\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1093/buggy-version/src.fr.frozentux.craftguard2.module.use.UseListener.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.getData()", "i.getData().getData()", "fr.frozentux.craftguard2.PermissionChecker.check(org.bukkit.entity.Player,i.getTypeId(),i.getData().getData(),fr.frozentux.craftguard2.CraftGuardPlugin,java.lang.String)", "org.bukkit.inventory.ItemStack.getTypeId()"], "Fixed commit": "a2b708644c09c2413039f6d21de3207b55e65fab", "Url": "https://api.github.com/repos/FrozenTux/CraftGuard2", "Date": "2012-12-21T22:29:41Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) instanceof com.helion3.prism.api.results.ResultRecordAggregate) { path = com.helion3.prism.util.DataQueries.OriginalBlock; if (eventName.equals(\"place\")) { path = com.helion3.prism.util.DataQueries.ReplacementBlock; } }else { path = DataQueries.OriginalBlock.then(DataQueries.BlockState).then(DataQueries.BlockType); if (eventName.equals(\"place\")) { path = DataQueries.ReplacementBlock.then(DataQueries.BlockState).then(DataQueries.BlockType); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/628/buggy-version/src.main.java.com.helion3.prism.api.results.ResultRecord.java", "BodyUseAPI": [], "Fixed commit": "81ce1b5d303438bff2f7dfc79f666b697266f9fb", "Url": "https://api.github.com/repos/prism/Prism", "Date": "2016-01-24T19:13:55Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(rs.first())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1217/buggy-version/src.main.java.com.spinalcraft.slipdisk.Slipdisk.java", "BodyUseAPI": [], "Fixed commit": "9e91a4bfcbccd2a9fca02afc649d28827eaa1b2d", "Url": "https://api.github.com/repos/ParkerKemp/Slipdisk", "Date": "2016-03-06T17:41:26Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.length()) > 0) { if ((item.charAt(0)) == (sections.charAt(section))) return i; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8705/buggy-version/app.src.main.java.com.majeur.applicationsinfo.MainListFragment.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "1aec4b45c32dfc36b7a5d1c2a18abdb95809b41d", "Url": "https://api.github.com/repos/MajeurAndroid/Android-Applications-Info", "Date": "2015-10-08T06:45:43Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (handle) dataStream.finishStream(streamId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1663/buggy-version/src.com.baasbox.android.AsyncStream.java", "BodyUseAPI": [], "Fixed commit": "05c086fd51f165d07a5e74b0e8850969606c044c", "Url": "https://api.github.com/repos/baasbox/Android-SDK", "Date": "2014-04-30T10:17:44Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { navigationView.setCheckedItem(R.id.nav_events); android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager(); fragmentManager.beginTransaction().replace(R.id.main_pane, new io.hobaskos.event.eventapp.ui.event.search.list.EventsFragment()).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5706/buggy-version/app.src.main.java.io.hobaskos.event.eventapp.ui.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c024b57c7dd4630fe1080bfd972caf2d8a611552", "Url": "https://api.github.com/repos/hobaskos/event.app", "Date": "2017-03-20T14:44:08Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arguments.isTabCompletion) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5568/buggy-version/src.main.java.com.forgeessentials.core.commands.CommandFeSettings.java", "BodyUseAPI": [], "Fixed commit": "1294d916a41ffdfa645802812e3c39663a86a448", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentials", "Date": "2015-09-07T00:06:26Z"},
{"Line": "=>616", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (clickedBlock != null) { if ((((clickedBlock.getType()) == (org.bukkit.Material.LEVER)) && (!(g.isSpectator(player)))) && ((pie.getAction()) == (org.bukkit.event.block.Action.RIGHT_CLICK_BLOCK))) { if (!(g.getRegion().isPlacedUnbreakableBlock(clickedBlock))) { g.getRegion().addPlacedUnbreakableBlock(clickedBlock, clickedBlock.getState()); } return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7538/buggy-version/src.io.github.yannici.bedwars.Listener.PlayerListener.java", "BodyUseAPI": ["g.getRegion().isPlacedUnbreakableBlock(org.bukkit.block.Block)", "org.bukkit.block.Block.getState()", "org.bukkit.block.Block.getType()", "g.getRegion().addPlacedUnbreakableBlock(org.bukkit.block.Block,clickedBlock.getState())"], "Fixed commit": "fc527004ae6b348f7e538cbc92a0fffd7aa13366", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-05-23T11:25:56Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selection.length) == 1) { singleSelection = selection[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6868/buggy-version/src.component.SegmentedControl.java", "BodyUseAPI": [], "Fixed commit": "4a8a7e802d007708ce52faef509f6d556e72e53a", "Url": "https://api.github.com/repos/Tanner/Oregon-Trail", "Date": "2011-10-07T14:28:54Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (channelValues != null) { java.util.List<dk.frv.eavdam.data.FATDMACell> dcl = new java.util.ArrayList<dk.frv.eavdam.data.FATDMACell>(); for (dk.frv.eavdam.data.FATDMACell dc : channelValues) { dcl.add(dc); } values.put(currentCell, dcl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4749/buggy-version/src.main.java.dk.frv.eavdam.io.DefaultFATDMAReader.java", "BodyUseAPI": [], "Fixed commit": "085d871abcacda3929287a143716f43b2b948bb4", "Url": "https://api.github.com/repos/dma-graveyard/EAVDAM", "Date": "2011-12-02T09:02:03Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cell.getCell().equals(\"36-II\")) java.lang.System.out.println(((c + \": \") + (cell.toString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4749/buggy-version/src.main.java.dk.frv.eavdam.io.DefaultFATDMAReader.java", "BodyUseAPI": ["java.io.PrintStream.println(((c + \": \") + (cell.toString())))", "dk.frv.eavdam.data.FATDMACell.toString()"], "Fixed commit": "085d871abcacda3929287a143716f43b2b948bb4", "Url": "https://api.github.com/repos/dma-graveyard/EAVDAM", "Date": "2011-12-02T09:02:03Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (privateKeyFile.canWrite()) { server.Keymake.writePrivateKey(privateKeyFile); }else if (privateKeyFile.createNewFile()) { server.Keymake.writePrivateKey(privateKeyFile); }else { this.serverPrivK = null; throw new java.io.IOException(common.Constants.FILE_UNREADABLE_UNWRITABLE_MSG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3230/buggy-version/SIMPL.src.server.Server.java", "BodyUseAPI": ["server.Keymake.writePrivateKey(java.io.File)", "server.Keymake.writePrivateKey(java.io.File)", "java.io.File.createNewFile()"], "Fixed commit": "1f8f5aad61ed7529a0d46d7206ff7358bf893c6a", "Url": "https://api.github.com/repos/syreal17/SIMPL", "Date": "2014-04-06T01:01:13Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(<nulltype>,java.lang.String,java.lang.String,int,<nulltype>,java.lang.Object[],java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (selectedValue != null) { if (selectedValue.equals(\"Easy\")) { _panel = new spiders.GamePanel(new spiders.model.GameModel(spiders.model.Level.easy())); } if (selectedValue.equals(\"Medium\")) { _panel = new spiders.GamePanel(new spiders.model.GameModel(spiders.model.Level.medium())); } if (selectedValue.equals(\"Hard\")) { _panel = new spiders.GamePanel(new spiders.model.GameModel(spiders.model.Level.hard())); } repaintField(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8918/buggy-version/Spiders.src.spiders.Spiders.java", "BodyUseAPI": ["java.lang.Object.equals(java.lang.String)", "java.lang.Object.equals(java.lang.String)", "java.lang.Object.equals(java.lang.String)"], "Fixed commit": "2acceca2d80bdfefe8be7a91f369356540a30f07", "Url": "https://api.github.com/repos/anhcx0209/game_spiders", "Date": "2016-01-16T08:09:02Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tree.treeSavedToFile()) { input.setText(tree.getFileName()); }else { input.setText(tree.getProjectName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1796/buggy-version/Pocket-WBS.src.com.example.pocket_wbs.model.WBSFileManager.java", "BodyUseAPI": ["android.widget.EditText.setText(tree.getFileName())", "com.example.pocket_wbs.model.ProjectTree.getFileName()", "android.widget.EditText.setText(tree.getProjectName())", "com.example.pocket_wbs.model.ProjectTree.getProjectName()"], "Fixed commit": "8eb8c503616ee63e3934b980eee39fc820daa467", "Url": "https://api.github.com/repos/evolutionise/Pocket-WBS", "Date": "2015-06-03T05:29:22Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Rater.getRating(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (curAverage >= 0) { sum += r.getRating(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1126/buggy-version/src.SecondRatings.java", "BodyUseAPI": [], "Fixed commit": "df81c20a29e07f688be4806babdeeb8e19c1fe45", "Url": "https://api.github.com/repos/weilyu/RecommendationEngines", "Date": "2016-04-01T08:10:12Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stopTimeUpdate.hasStopSequence()) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2443/buggy-version/onebusaway-transit-data-federation.src.main.java.org.onebusaway.transit_data_federation.impl.realtime.gtfs_realtime.GtfsRealtimeTripLibrary.java", "BodyUseAPI": [], "Fixed commit": "b2912730f93fa32737131b988f7468da132ce959", "Url": "https://api.github.com/repos/camsys/onebusaway-application-modules", "Date": "2017-03-29T16:55:12Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (clipboardMonitor)) { clipboardMonitor = com.jcope.util.ClipboardMonitor.getInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4090/buggy-version/src.com.jcope.vnc.client.input.handle.SetClipboard.java", "BodyUseAPI": [], "Fixed commit": "4e3ebc2f2542af1571fd4fbcf118032f686fffea", "Url": "https://api.github.com/repos/josephcopenhaver/VNCServer", "Date": "2014-05-19T22:54:39Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getLineTask.getTaskResult().getErrorCode()) == 0) { stationLines.addBusLine(getLineTask.getTaskResult().getResult()); }else { com.telepathic.finder.util.Utils.debug(com.telepathic.finder.sdk.traffic.TrafficManager.TAG, (((((\"Get bus line \" + lineNo) + \" failed: \") + (getLineTask.getTaskResult().getErrorCode())) + \", \") + (getLineTask.getTaskResult().getErrorMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7148/buggy-version/Projects.Finder.src.com.telepathic.finder.sdk.traffic.TrafficManager.java", "BodyUseAPI": ["com.telepathic.finder.sdk.traffic.task.GetBusLineTask.getTaskResult()", "getLineTask.getTaskResult().getErrorCode()", "com.telepathic.finder.util.Utils.debug(java.lang.String,(((((\"Get bus line \" + lineNo) + \" failed: \") + (getLineTask.getTaskResult().getErrorCode())) + \", \") + (getLineTask.getTaskResult().getErrorMessage())))", "com.telepathic.finder.sdk.traffic.task.GetBusLineTask.getTaskResult()", "getLineTask.getTaskResult().getResult()", "getLineTask.getTaskResult().getErrorMessage()", "com.telepathic.finder.sdk.traffic.entity.kuaixin.KXBusStationLines.addBusLine(getLineTask.getTaskResult().getResult())", "com.telepathic.finder.sdk.traffic.task.GetBusLineTask.getTaskResult()"], "Fixed commit": "d8db6f2424c8118680288266b05b61d016dd8c47", "Url": "https://api.github.com/repos/timlian/Telepathic", "Date": "2013-03-17T08:16:23Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == (-1)) return result;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1218/buggy-version/src.solidstack.io.ReaderSourceReader.java", "BodyUseAPI": [], "Fixed commit": "01c91a3c358dd99285d3230132fbd235ea2fdeee", "Url": "https://api.github.com/repos/sindicate/solidstack", "Date": "2016-05-07T11:31:15Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ratingCategoryEntries) != null) { for (org.fiware.apps.marketplace.model.RatingCategoryEntry r : ratingCategoryEntries) { result += r.getValue(); } return result / (ratingCategoryEntries.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1904/buggy-version/src.main.java.org.fiware.apps.marketplace.model.Rating.java", "BodyUseAPI": [], "Fixed commit": "7f27f4ecf0c5470b638316b86c02d5be9c6679de", "Url": "https://api.github.com/repos/service-business-framework/Marketplace-RI", "Date": "2013-11-07T13:48:18Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isHealingOther) { isHealingOther = false; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4291/buggy-version/src.main.java.com.gmail.Rhisereld.Horizon_Professions.ProfessionListener.java", "BodyUseAPI": [], "Fixed commit": "85ab1b7ea0e180a3c122370dcb5f2e5c2570aac0", "Url": "https://api.github.com/repos/LonelyNeptune/HorizonProfessions", "Date": "2015-06-16T15:14:17Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (a != b) { return a - b; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5305/buggy-version/src.sparkbench.src.multiapi.java.com.intel.sparkbench.MR2.JavaTeraSort.java", "BodyUseAPI": [], "Fixed commit": "06bac3ea32ba76cc464fe7487d04cf3581956993", "Url": "https://api.github.com/repos/qiansl127/HiBench", "Date": "2016-04-11T05:59:43Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isNavigationStopped)) { updateBottomCtrlBarState(com.romu.app.RomuActivity.BOTTOM_CTRL_NAVIGATION_PAUSE); romuService.stopNavigation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/822/buggy-version/src.com.romu.app.RomuActivity.java", "BodyUseAPI": [], "Fixed commit": "8e407182859905d970762744fce9bbb92b9b6b9a", "Url": "https://api.github.com/repos/shawnLeeZX/romu", "Date": "2014-06-04T01:56:54Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.prepareSelect((\"select ar.id, ar.profile_id from active_rules ar \" + (\"left outer join active_rule_parameters arp on arp.active_rule_id=ar.id and arp.rules_parameter_id=? \" + \"where ar.rule_id=? and arp.id is null\"))).setLong(1, ruleParameter.id).setLong(2, ruleParameter.ruleId).list(org.sonar.server.db.migrations.Select.RowReader<org.sonar.server.db.migrations.v45.AddMissingRuleParameterDefaultValuesMigration.ActiveRule>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(activeRules.isEmpty())) { upsert.execute().commit().close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8413/buggy-version/server.sonar-server.src.main.java.org.sonar.server.db.migrations.v45.AddMissingRuleParameterDefaultValuesMigration.java", "BodyUseAPI": [], "Fixed commit": "7deba3197606da2413abbcf7c5a712930578b30b", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-07-22T08:30:08Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.prepareSelect((\"select ar.id, ar.profile_id from active_rules ar \" + (\"left outer join active_rule_parameters arp on arp.active_rule_id=ar.id and arp.rules_parameter_id=? \" + \"where ar.rule_id=? and arp.id is null\"))).setLong(1, ruleParameter.id).setLong(2, ruleParameter.ruleId).list(org.sonar.server.db.migrations.Select.RowReader<org.sonar.server.db.migrations.v45.AddMissingRuleParameterDefaultValuesMigration.ActiveRule>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(activeRules.isEmpty())) { upsert.execute().commit().close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8413/buggy-version/server.sonar-server.src.main.java.org.sonar.server.db.migrations.v45.AddMissingRuleParameterDefaultValuesMigration.java", "BodyUseAPI": [], "Fixed commit": "7deba3197606da2413abbcf7c5a712930578b30b", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-07-22T08:30:08Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Robot.instance.elevator.limitSwitch.get())) { if (output > 0) { Robot.instance.elevator.elevatorActuator.set(0); }else { Robot.instance.elevator.elevatorActuator.set(output); } }else { Robot.instance.elevator.elevatorActuator.set(output); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5586/buggy-version/src.org.usfirst.frc.team6179.robot.commands.shooter.ElevateWithJoystick.java", "BodyUseAPI": [], "Fixed commit": "470d5ad18d5a45a26d8e9c46cabe212741f7628f", "Url": "https://api.github.com/repos/CCDSY/PhotonBox-2016", "Date": "2016-03-03T06:01:51Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!NoDemon) this.Print(((\"Area \" + (ListPlayer.get(player).ListCityAreaCards.get(i).GetName())) + \" has a demon in it. City Area effect is neglected\")); else this.Print(((\"City Area Card \" + (ListPlayer.get(player).ListCityAreaCards.get(i).GetName())) + \" has already been played\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2442/buggy-version/GameEngine.java", "BodyUseAPI": [], "Fixed commit": "56f03462ad18a6a213c3ee77793e912261d87ba4", "Url": "https://api.github.com/repos/larrynet/diskworld", "Date": "2015-03-28T19:12:48Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (curTask != null) tasks.remove(curTask);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3093/buggy-version/main.util.TaskQueue.java", "BodyUseAPI": ["java.util.ArrayList<main.util.Task>.remove(main.util.Task)"], "Fixed commit": "7d3d938277ceffdd26783df5b9cbd795907191a4", "Url": "https://api.github.com/repos/andham97/Vending-Machine", "Date": "2016-11-22T10:01:04Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"NaN\".equals(iValue)) || (\"Infinity\".equals(iValue))) return new java.lang.Double(iValue); else return new java.math.BigDecimal(iValue);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6048/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerStringAbstract.java", "BodyUseAPI": [], "Fixed commit": "d06385719ec870f5fd39d26380c69c678f0ba081", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-01-06T19:26:04Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (game.soundEnabled) { stopMusic(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/919/buggy-version/codigoFuente.PlearningGame.core.src.com.plearning.game.PlearningGameScene.java", "BodyUseAPI": [], "Fixed commit": "25eaf6f601eec9ce95d99ca12831d438c6b8cea5", "Url": "https://api.github.com/repos/elihu/p-learning", "Date": "2015-09-07T11:09:28Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (game.soundEnabled) { stopMusic(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/919/buggy-version/codigoFuente.PlearningGame.core.src.com.plearning.game.PlearningGameScene.java", "BodyUseAPI": [], "Fixed commit": "25eaf6f601eec9ce95d99ca12831d438c6b8cea5", "Url": "https://api.github.com/repos/elihu/p-learning", "Date": "2015-09-07T11:09:28Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["runnableSpec.getRunnableSpecification().getClassName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (classStr.equals(co.cask.cdap.internal.app.services.ServiceWorkerTwillRunnable.class.getName())) { clz = co.cask.cdap.internal.app.services.ServiceWorkerTwillRunnable.class; }else { clz = java.lang.Class.forName(runnableSpec.getRunnableSpecification().getClassName(), true, program.getClassLoader()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/721/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.internal.app.runtime.service.InMemoryRunnableRunner.java", "BodyUseAPI": [], "Fixed commit": "cc160bb9718d70c7753b672b5f439435d002d128", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2014-11-08T12:53:07Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["T.getHandler()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(handler.getDoc().isEmbedded())) { com.orientechnologies.orient.core.id.ORID identity = handler.getDoc().getIdentity(); if (!(alreadyDetached.containsKey(identity))) { alreadyDetached.put(identity, o); }else if (returnNonProxiedInstance) { return ((T) (alreadyDetached.get(identity))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3379/buggy-version/object.src.main.java.com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.java", "BodyUseAPI": ["com.orientechnologies.orient.object.enhancement.OObjectProxyMethodHandler.getDoc()", "handler.getDoc().getIdentity()"], "Fixed commit": "54528416f3ecb760b7b75d2d826cd3c5088c60e6", "Url": "https://api.github.com/repos/mcculls/orientdb", "Date": "2015-12-16T17:36:07Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SneakySnakeClient.Scene.ChatInput.joinArrayListString(java.util.ArrayList<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (toSend.equals(\"game.kill\")) { SneakySnakeClient.Main.tryClosing = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6521/buggy-version/src.SneakySnakeClient.Scene.ChatInput.java", "BodyUseAPI": [], "Fixed commit": "760430c5c7ae5635507f334f713f698f33932400", "Url": "https://api.github.com/repos/PLEXATIC/SneakySnakeClient", "Date": "2016-03-11T18:24:44Z"},
{"Line": "=>825", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMaskBitmap) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1308/buggy-version/shimmer-android.src.main.java.com.facebook.shimmer.ShimmerFrameLayout.java", "BodyUseAPI": [], "Fixed commit": "0fd0a242505a3bdc9942703963889689b0c4713d", "Url": "https://api.github.com/repos/rodati/shimmer-android", "Date": "2016-10-11T15:09:46Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkforModule()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2773/buggy-version/src.com.dalthed.tucan.scraper.SingleEventScraper.java", "BodyUseAPI": [], "Fixed commit": "813aeb70b96c5b3685e4230e96999b483e94090f", "Url": "https://api.github.com/repos/Tyde/TuCanMobile", "Date": "2012-08-17T07:23:25Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.lwjgl.input.Mouse.isButtonDown(0))) this.dragging = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2353/buggy-version/MinecraftJoypadSplitscreenMod.src.com.shiny.joypadmod.minecraftExtensions.GuiSlider.java", "BodyUseAPI": [], "Fixed commit": "46cc0f4241a85d9c6e865d114deca7f5dac4a8b7", "Url": "https://api.github.com/repos/ljsimin/MinecraftJoypadSplitscreenMod", "Date": "2014-04-17T07:48:41Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (GameResource.instance.canBuild(b, gameFrame.getBaseList())) { gameFrame.spawnNewBase(icon.getName().split(\"_\")[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7936/buggy-version/src.frame.GameControlPanel.java", "BodyUseAPI": ["frame.GameFrame.spawnNewBase(icon.getName().split(\"_\")[1])"], "Fixed commit": "6716d627bf49bef6daa3aeb5d3be5e841595d420", "Url": "https://api.github.com/repos/neungkl/last-wish", "Date": "2015-12-15T16:47:20Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.equals(voxspell.fileManagement.Statistics.ACCURACY_HEADING)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2078/buggy-version/Voxspell.src.voxspell.fileManagement.Statistics.java", "BodyUseAPI": [], "Fixed commit": "3e8222710b593cc4d0c761126432e2a97683a2e2", "Url": "https://api.github.com/repos/whattupjellycup/voxspell", "Date": "2016-10-22T11:22:55Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showOptionDialog(javax.swing.JPanel,java.lang.String,java.lang.String,int,int,<nulltype>,java.lang.String[],java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (choiche == 1) javax.swing.JOptionPane.showMessageDialog(main.AnimeIndex.mainFrame, \"Ricorda che puoi supportarci\\n\\rin qualsiasi momento andando\\n\\rsul menu \\\"Info > Aiuto > Crediti\\\"\"); else if (choiche == 2) { javax.swing.JOptionPane.showMessageDialog(main.AnimeIndex.mainFrame, \"Ok, non te lo chiederemo pi\\ufffd.\\n\\r\\n\\r\\n\\rMa ricorda che puoi supportarci\\n\\rin qualsiasi momento andando\\n\\rsul menu \\\"Info > Aiuto > Crediti\\\"\"); main.AnimeIndex.appProp.setProperty(\"Ask_for_donation\", \"false\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7339/buggy-version/src.main.AnimeIndex.java", "BodyUseAPI": [], "Fixed commit": "9ba4ec454197a0fc061b0149e2b473b8c6673e6b", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-10-30T12:08:59Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.axelor.inject.Beans.get(com.axelor.apps.base.db.repo.MailBatchRepository.class).findByCode(MailBatchRepository.CODE_BATCH_EMAIL_TIME_SHEET)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (mailBatch != null) { com.axelor.apps.base.db.Batch batch = null; batch = mailBatchService.remindMail(mailBatch); if (batch != null) response.setFlash(batch.getComments()); response.setReload(true); }else { throw new com.axelor.exception.AxelorException(java.lang.String.format(com.axelor.i18n.I18n.get(IExceptionMessage.BASE_BATCH_2), MailBatchRepository.CODE_BATCH_EMAIL_TIME_SHEET), com.axelor.exception.db.IException.INCONSISTENCY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4771/buggy-version/axelor-base.src.main.java.com.axelor.apps.base.web.MailBatchController.java", "BodyUseAPI": ["com.axelor.apps.base.service.batch.MailBatchService.remindMail(com.axelor.apps.base.db.MailBatch)"], "Fixed commit": "0ac5cc55d8e761cf27b07d9826750ba1bbeb30b6", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2015-10-08T08:01:25Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (taskToEdit == null) { returnMessage = \"No such task ID!\"; commandResult = false; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7542/buggy-version/src.taskcommando.commands.EditCommand.java", "BodyUseAPI": [], "Fixed commit": "3c3183513e7c866bd1277616daef688cdc1bd53e", "Url": "https://api.github.com/repos/cs2103jan2015-t13-3j/main", "Date": "2015-03-26T03:17:39Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(issues.isEmpty())) { if (!(fixedVersionNames.isEmpty())) { fixVersionIds.addAll(mapFixedVersionNamesToIds(client, session, issues.get(0).getProject(), fixedVersionNames, logger)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4964/buggy-version/src.main.java.info.bluefloyd.jenkins.IssueUpdatesBuilder.java", "BodyUseAPI": ["info.bluefloyd.jenkins.IssueUpdatesBuilder.mapFixedVersionNamesToIds(info.bluefloyd.jenkins.SOAPClient,info.bluefloyd.jenkins.SOAPSession,issues.get(0).getProject(),java.util.List<java.lang.String>,java.io.PrintStream)", "java.util.List<com.atlassian.jira.rpc.soap.client.RemoteIssue>.get(int)", "java.util.Collection<java.lang.String>.addAll(java.util.Collection<java.lang.String>)", "issues.get(0).getProject()"], "Fixed commit": "4c678827d5512f36a081fad61c2b8984e300d311", "Url": "https://api.github.com/repos/jenkinsci/jira-issue-updater-plugin", "Date": "2015-07-27T07:07:26Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.size()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1317/buggy-version/src.dna.graph.datastructures.DArray.java", "BodyUseAPI": [], "Fixed commit": "1bd0453fdd5bac7562436fa3ed107ea18cf4712d", "Url": "https://api.github.com/repos/BenjaminSchiller/DNA", "Date": "2013-10-08T01:01:22Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (options != null) this.options = options;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/154/buggy-version/src.main.java.me.joshuamarquez.sails.io.SailsSocket.java", "BodyUseAPI": [], "Fixed commit": "e5c51163d8b83db591a40c8a9569229f8b97eb74", "Url": "https://api.github.com/repos/joshuamarquez/sails.io.java", "Date": "2016-06-01T00:43:14Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsonBody.getMatchType()) != (org.mockserver.model.JsonBody.DEFAULT_MATCH_TYPE)) { jgen.writeStringField(\"matchType\", jsonBody.getMatchType().name()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7608/buggy-version/mockserver-core.src.main.java.org.mockserver.client.serialization.serializers.body.JsonBodySerializer.java", "BodyUseAPI": ["com.fasterxml.jackson.core.JsonGenerator.writeStringField(java.lang.String,jsonBody.getMatchType().name())", "org.mockserver.model.JsonBody.getMatchType()", "jsonBody.getMatchType().name()"], "Fixed commit": "419ec5df482dc1891456b0c8aa488c899bcde5ce", "Url": "https://api.github.com/repos/jamesdbloom/mockserver", "Date": "2015-04-06T06:48:55Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsonBodyDTO.getMatchType()) != (org.mockserver.model.JsonBody.DEFAULT_MATCH_TYPE)) { jgen.writeStringField(\"matchType\", jsonBodyDTO.getMatchType().name()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7608/buggy-version/mockserver-core.src.main.java.org.mockserver.client.serialization.serializers.body.JsonBodyDTOSerializer.java", "BodyUseAPI": ["org.mockserver.client.serialization.model.JsonBodyDTO.getMatchType()", "com.fasterxml.jackson.core.JsonGenerator.writeStringField(java.lang.String,jsonBodyDTO.getMatchType().name())", "jsonBodyDTO.getMatchType().name()"], "Fixed commit": "419ec5df482dc1891456b0c8aa488c899bcde5ce", "Url": "https://api.github.com/repos/jamesdbloom/mockserver", "Date": "2015-04-06T06:48:55Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.lang.Thread.currentThread().isInterrupted())) { timber.log.Timber.d(recipes.getCount().toString()); getMvpView().reFreshRecipeList(recipes.getRecipes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8786/buggy-version/app.src.main.java.com.vicky7230.eatit.ui.search.SearchPresenter.java", "BodyUseAPI": [], "Fixed commit": "307bdf03822568492ad504d4f67d41a4cc3d5287", "Url": "https://api.github.com/repos/vicky7230/Paprika", "Date": "2017-09-29T16:25:34Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((locations.size()) > 0) { setOrigin(locations.get(0)); setDestination(locations.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2602/buggy-version/src.com.perezdidac.googledirectionsapi.RouteQuery.java", "BodyUseAPI": [], "Fixed commit": "83288d7b28177f23f7ba983bd7861633ea90f6ba", "Url": "https://api.github.com/repos/perezdidac/google-directions-api", "Date": "2013-08-26T14:39:37Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileNameIndex == (-1)) { fileNameIndex = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5357/buggy-version/VCF2CSV.src.vcf2csv.CommandLine.java", "BodyUseAPI": [], "Fixed commit": "9eeab798143d8ac4e0ec0d5a390a52c5e194ac5b", "Url": "https://api.github.com/repos/ahmad-elkomey/VCF2CSV", "Date": "2016-01-25T13:47:48Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(event.world.isRemote)) && ((event.world) instanceof net.minecraft.world.WorldServer)) { net.minecraft.world.WorldServer world = ((net.minecraft.world.WorldServer) (event.world)); int spawnX = ((int) (((event.world.getWorldInfo().getSpawnX()) / (world.provider.getMovementFactor())) / 16)); int spawnZ = ((int) (((event.world.getWorldInfo().getSpawnZ()) / (world.provider.getMovementFactor())) / 16)); for (int x = -1; x <= 1; x++) for (int z = -1; z <= 1; z++) world.theChunkProviderServer.loadChunk((spawnX + x), (spawnZ + z)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4503/buggy-version/src.main.java.net.minecraftforge.lex.yunomakegoodmap.YUNoMakeGoodMap.java", "BodyUseAPI": ["event.world.getWorldInfo().getSpawnX()", "event.world.getWorldInfo()", "event.world.getWorldInfo()", "event.world.getWorldInfo().getSpawnZ()"], "Fixed commit": "722bd1ef3104b47479a493a34f75d63f5ac07a0d", "Url": "https://api.github.com/repos/LexManos/YUNoMakeGoodMap", "Date": "2014-03-01T21:24:14Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.JSON.parseObject(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((info.Personnel_type) != 2) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/780/buggy-version/app.src.main.java.com.puti.education.ui.uiTeacher.AddEventZxingActivity.java", "BodyUseAPI": [], "Fixed commit": "7d752c51740fec5e2cb55da42aab9d970d0c7712", "Url": "https://api.github.com/repos/bearLei/5AMaster", "Date": "2017-11-28T13:37:59Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source) instanceof java.util.Map) { this.pairs = ((java.util.Map) (source)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4829/buggy-version/src.main.java.com.damnhandy.uri.template.DefaultVarExploder.java", "BodyUseAPI": [], "Fixed commit": "6f3d2def30e073ff72c3b9d4106d56382f8da124", "Url": "https://api.github.com/repos/damnhandy/Handy-URI-Templates", "Date": "2016-02-04T13:23:03Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.find()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!state) { fts.bean.PageParser.log.error(\"Title not found.\"); return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8664/buggy-version/src.fts.bean.PageParser.java", "BodyUseAPI": [], "Fixed commit": "568a00909d5b583ce98bb00036908575e9d28627", "Url": "https://api.github.com/repos/levickiy/fts", "Date": "2015-03-03T12:22:38Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.StringBuilder)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (1 != (regexMatcher.groupCount())) { fts.bean.PageParser.log.error(\"Title not found.\"); return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8664/buggy-version/src.fts.bean.PageParser.java", "BodyUseAPI": [], "Fixed commit": "568a00909d5b583ce98bb00036908575e9d28627", "Url": "https://api.github.com/repos/levickiy/fts", "Date": "2015-03-03T12:22:38Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.isVisible()) || (!wasVisible)) { setProgress(stepName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2434/buggy-version/flexodesktop.GUI.flexo.src.main.java.org.openflexo.components.ProgressWindow.java", "BodyUseAPI": [], "Fixed commit": "d55df5c5a8f4b1118daf4b1e66ec3176e10b285a", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-10-17T17:16:41Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (autoExecute.equals(\"YES\")) { alchemystar.util.SqlUtil.ddl(target.getConn(), units.getChangeSql().get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6405/buggy-version/src.main.java.alchemystar.runner.Syncer.java", "BodyUseAPI": [], "Fixed commit": "91bae5ce6255e52fa542d0a34364c152c96945b9", "Url": "https://api.github.com/repos/alchemystar/Lancer", "Date": "2017-03-15T07:22:20Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (manifestVersion != null) { fileName = org.pentaho.platform.plugin.services.importexport.ExportFileNameEncoder.decodeZipFileName(fileName); actualFilePath = org.pentaho.platform.plugin.services.importexport.ExportFileNameEncoder.decodeZipFileName(actualFilePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/9181/buggy-version/extensions.src.org.pentaho.platform.plugin.services.importer.SolutionImportHandler.java", "BodyUseAPI": [], "Fixed commit": "037aee8097a59c6b452a5e4391451926a7ebfd54", "Url": "https://api.github.com/repos/pentaho/pentaho-platform", "Date": "2015-09-23T08:04:10Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (manifestVersion != null) { decodedFile = new org.pentaho.platform.api.repository2.unified.RepositoryFile.Builder(decodedFile).path(decodedFilePath).name(fileName).title(fileName).build(); decodedFilePath = org.pentaho.platform.plugin.services.importexport.ExportFileNameEncoder.decodeZipFileName(file.getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/9181/buggy-version/extensions.src.org.pentaho.platform.plugin.services.importer.SolutionImportHandler.java", "BodyUseAPI": [], "Fixed commit": "037aee8097a59c6b452a5e4391451926a7ebfd54", "Url": "https://api.github.com/repos/pentaho/pentaho-platform", "Date": "2015-09-23T08:04:10Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.withManifest) { zipEntryName = org.pentaho.platform.plugin.services.importexport.ExportFileNameEncoder.encodeZipPathName(zipEntryName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/9181/buggy-version/extensions.src.org.pentaho.platform.plugin.services.importexport.ZipExportProcessor.java", "BodyUseAPI": [], "Fixed commit": "037aee8097a59c6b452a5e4391451926a7ebfd54", "Url": "https://api.github.com/repos/pentaho/pentaho-platform", "Date": "2015-09-23T08:04:10Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.withManifest) { zipEntryName = org.pentaho.platform.plugin.services.importexport.ExportFileNameEncoder.encodeZipPathName(zipEntryName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/9181/buggy-version/extensions.src.org.pentaho.platform.plugin.services.importexport.ZipExportProcessor.java", "BodyUseAPI": [], "Fixed commit": "037aee8097a59c6b452a5e4391451926a7ebfd54", "Url": "https://api.github.com/repos/pentaho/pentaho-platform", "Date": "2015-09-23T08:04:10Z"},
{"Line": "=>778", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sunglassesWaitlist.contains(sender.toLowerCase())) { sunglassesWaitlist.removeElement(sender.toLowerCase()); local_sendMessage((\"#\" + (this.channel)), (((line_header()) + sender) + \": YEAAAAAAAAAAAAHHHHH\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4379/buggy-version/PPbot.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "PPbot.local_sendMessage(java.lang.String,java.lang.String)", "java.util.Vector<java.lang.String>.removeElement(java.lang.String)"], "Fixed commit": "219f921baafb5b2c6fa13badc1c5c9aa3171625c", "Url": "https://api.github.com/repos/saagarp/plusplusbot", "Date": "2012-07-19T16:52:10Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (byte[].class.equals(value.getClass())) { return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1174/buggy-version/src.main.java.org.normandra.orientdb.OrientUtils.java", "BodyUseAPI": [], "Fixed commit": "77a61690044cdb4159f63425bf7f20f7e4636301", "Url": "https://api.github.com/repos/trajar/normandra", "Date": "2015-04-26T13:16:54Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (complex) addOtherColors(jMember, m);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3431/buggy-version/app.src.main.java.android.texting.StateObject.java", "BodyUseAPI": [], "Fixed commit": "ad0a812c5a83badc79ff9a36adef46d941244949", "Url": "https://api.github.com/repos/vossnarrator/NarratorAndroid", "Date": "2017-01-29T07:26:45Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.novahub.voipcall.sharepreferences.SharePreferences.getDataBoolean(getApplicationContext(), SharePreferences.ON_SAMARITANS)) { switchOnOff.setChecked(true); }else { switchOnOff.setChecked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7902/buggy-version/app.src.main.java.com.novahub.voipcall.activity.MakingCallConferenceActivity.java", "BodyUseAPI": [], "Fixed commit": "7e6d2eff5dfadbd8fd8f0777df2f3093b1730b00", "Url": "https://api.github.com/repos/thomastran/helocoop-android", "Date": "2016-01-20T08:51:12Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getNextSibling()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (elseStmt == null) { isTerminated = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8964/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck.java", "BodyUseAPI": [], "Fixed commit": "0d66a67b0d3920031422d5bb02f0fc02ce580bae", "Url": "https://api.github.com/repos/Vladlis/checkstyle", "Date": "2015-07-18T09:10:35Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerTurn) { java.lang.System.out.println(\"Already chosen\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7297/buggy-version/4817_Sprint.3-Sheik.Demo.java", "BodyUseAPI": [], "Fixed commit": "f103cc3807b4ce4c0d4022e5a9650734aa0e5ff9", "Url": "https://api.github.com/repos/QApollo/Demos", "Date": "2017-11-27T12:51:21Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (includeNicknames) { nicknameMap = getNicknames(); }else { nicknameMap = new java.util.HashMap<java.lang.String, java.lang.String[]>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4616/buggy-version/modules.co2-suite.src.com.professionallyevil.co2.usergenerator.UserGeneratorForm.java", "BodyUseAPI": [], "Fixed commit": "f8a321c0b3bc56c61f8ee7f1f7cc3a38cdca40bb", "Url": "https://api.github.com/repos/JGillam/burp-co2", "Date": "2015-12-25T21:26:06Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (part == (com.clarkparsia.sbol.editor.Parts.GENERIC)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2524/buggy-version/src.com.clarkparsia.sbol.editor.Parts.java", "BodyUseAPI": [], "Fixed commit": "fce479f2c82248d589c9f1e0124b8a8e05347463", "Url": "https://api.github.com/repos/SynBioDex/SBOLDesigner", "Date": "2016-10-11T21:59:59Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.roth.jsona.config.Config.getInstance().INCLUDE_EXTENSIONS.isEmpty()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1845/buggy-version/src.de.roth.jsona.file.FileScanner.java", "BodyUseAPI": [], "Fixed commit": "34303252a3139ca12379a604c6c53909adcbc10d", "Url": "https://api.github.com/repos/frankred/jSona", "Date": "2015-01-01T19:21:25Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hasFileExtension == (-1)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1845/buggy-version/src.de.roth.jsona.file.FileScanner.java", "BodyUseAPI": [], "Fixed commit": "34303252a3139ca12379a604c6c53909adcbc10d", "Url": "https://api.github.com/repos/frankred/jSona", "Date": "2015-01-01T19:21:25Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list != null) { for (final I item : list) { retVal.add(closure.call(item)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5704/buggy-version/Software.development.data.com.trivadis.loganalysis.core.src.com.trivadis.loganalysis.core.common.CollectionUtil.java", "BodyUseAPI": [], "Fixed commit": "50e21f7fd15c7cca58a8f06b74a91f0524564ab0", "Url": "https://api.github.com/repos/raffaelschmid/bachelorthesis", "Date": "2011-09-22T07:57:36Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.hasDeck) { cards.disableEditing(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2055/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.view.voting.VotingPanel.java", "BodyUseAPI": [], "Fixed commit": "1338b40e33ffeb5716ce80072d2d8f740c55562e", "Url": "https://api.github.com/repos/alexbragdon/wpi-suite", "Date": "2014-04-25T03:24:24Z"},
{"Line": "=>1413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.garbagemule.MobArena.PlayerInventory.first(fee.getType())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (slot < 0) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4903/buggy-version/src.com.garbagemule.MobArena.ArenaImpl.java", "BodyUseAPI": [], "Fixed commit": "6d93dfa660b8ef61755cc8a8a108bfed9894a064", "Url": "https://api.github.com/repos/garbagemule/MobArena", "Date": "2014-01-20T01:59:03Z"},
{"Line": "=>1408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fee.getTypeId()) < 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4903/buggy-version/src.com.garbagemule.MobArena.ArenaImpl.java", "BodyUseAPI": [], "Fixed commit": "6d93dfa660b8ef61755cc8a8a108bfed9894a064", "Url": "https://api.github.com/repos/garbagemule/MobArena", "Date": "2014-01-20T01:59:03Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rotatedBitmap) != null) { croppedImage = rotatedBitmap; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4661/buggy-version/app.src.main.java.wasilewd.ee.pw.edu.pl.androidimagetextreading.ProcessPhotoActivity.java", "BodyUseAPI": [], "Fixed commit": "a30bf147e96e60c936cd0ff6671c05ba7a3d6107", "Url": "https://api.github.com/repos/damianw345/Androract", "Date": "2017-12-28T22:53:06Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cninfo.proxy.http.ProxyFileSystem.getInputStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (sin != null) { sin.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1702/buggy-version/src.main.java.com.cninfo.proxy.http.core.ProxyServlet.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "99e6344f35117ce8040529710e9b17e9e9248b3e", "Url": "https://api.github.com/repos/bulletlu/hdfsproxy-http", "Date": "2013-10-29T10:07:21Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (in != null) { in.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1702/buggy-version/src.main.java.com.cninfo.proxy.http.core.ProxyServlet.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "99e6344f35117ce8040529710e9b17e9e9248b3e", "Url": "https://api.github.com/repos/bulletlu/hdfsproxy-http", "Date": "2013-10-29T10:07:21Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useCache) com.cninfo.proxy.http.impl.StandardCache.initial(cache);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1702/buggy-version/src.main.java.com.cninfo.proxy.http.core.ProxyServlet.java", "BodyUseAPI": [], "Fixed commit": "99e6344f35117ce8040529710e9b17e9e9248b3e", "Url": "https://api.github.com/repos/bulletlu/hdfsproxy-http", "Date": "2013-10-29T10:07:21Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (osName.startsWith(\"win\")) { data.width = 100; data.height = 20; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5072/buggy-version/xstampp.src.xstampp.usermanagement.ui.contribution.UserContribution.java", "BodyUseAPI": [], "Fixed commit": "d6e6849b1002b487c91123f0d7a68b5b87d260d0", "Url": "https://api.github.com/repos/SE-Stuttgart/XSTAMPP", "Date": "2017-11-22T09:04:32Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTaskHandler) == null) { android.widget.Toast.makeText(context, \"Oops caught an error in executing this operation.\", Toast.LENGTH_LONG).show(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5685/buggy-version/app.src.main.java.com.slownet5.pgprootexplorer.filemanager.listview.ViewHolder.java", "BodyUseAPI": [], "Fixed commit": "bc916cc1f27adc2fec73f616613a29648b7d70e2", "Url": "https://api.github.com/repos/mosamabinomar/RootPGPExplorer", "Date": "2017-09-16T09:09:30Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (emplaced) RemoveSharedSpotting();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6269/buggy-version/BBMS.src.unit.Unit.java", "BodyUseAPI": [], "Fixed commit": "feb30b16504713700556a50abc622a5593cc5fdc", "Url": "https://api.github.com/repos/dmbb966/BBMS", "Date": "2015-04-23T20:09:13Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LunaChat.manager.getChannel(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (channel.isPersonalChat()) { sendResourceMessage(sender, com.github.ucchyocean.lc.LunaChatCommand.PREERR, \"errmsgCannotJoinPersonal\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1985/buggy-version/src.main.java.com.github.ucchyocean.lc.LunaChatCommand.java", "BodyUseAPI": [], "Fixed commit": "2d9463f715b96f8ab361592146b1df641e306ec4", "Url": "https://api.github.com/repos/ucchyocean/LunaChat", "Date": "2013-07-06T07:57:53Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.deviceconnect.android.deviceplugin.host.file.FileDataManager.getFileData(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (file != null) { boolean isSuccess = mgr.closeFileData(path); if (isSuccess) { setResult(response, DConnectMessage.RESULT_OK); }else { org.deviceconnect.android.message.MessageUtils.setIllegalServerStateError(response, \"file is not opened.\"); } }else { org.deviceconnect.android.message.MessageUtils.setIllegalServerStateError(response, \"file is not opened.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6858/buggy-version/dConnectDevicePlugin.dConnectDeviceHost.src.org.deviceconnect.android.deviceplugin.host.profile.HostFileDescriptorProfile.java", "BodyUseAPI": [], "Fixed commit": "ab8aaaf5f43d2116697bac834986a73c73a15ac9", "Url": "https://api.github.com/repos/TakayukiHoshi1984/DeviceConnect-Android", "Date": "2015-03-11T02:07:21Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (request.sendBirthdayMail()) throw new com.pratilipi.common.exception.InvalidArgumentException(\"Feature not yet supported !\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7808/buggy-version/src.main.java.com.pratilipi.api.user.UserEmailApi.java", "BodyUseAPI": [], "Fixed commit": "aa77c7758895052a249f939518c836e8c642cc95", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-10-23T15:01:48Z"},
{"Line": "=>1414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arguments.hasOption(\"nohpd2D\")) { beast.app.treeannotator.TreeAnnotator.processBivariateAttributes = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/342/buggy-version/src.beast.app.treeannotator.TreeAnnotator.java", "BodyUseAPI": [], "Fixed commit": "e0edecbdd24378c4930c8f5b25cc2f5a5d429ad4", "Url": "https://api.github.com/repos/tgvaughan/beast2", "Date": "2017-01-18T18:35:34Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Float.parseFloat(model.getIndex())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index > (center)) { startY = ((STOCK_VIEW_MARGIN) + (STOCK_VIEW_MARGIN_TOP)) + ((distance) - ((index - (center)) * yHighDistance)); }else { startY = ((realHeight) - (distance)) - ((index - (lowest)) * yLowDistance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/12/buggy-version/app.src.main.java.cn.com.jinrizhushi.stock.util.customstockview.StockTimeSharingView.java", "BodyUseAPI": [], "Fixed commit": "bffbc14fc3b848f903240e442a2e13bf9be322b4", "Url": "https://api.github.com/repos/jinrizhushi/stock", "Date": "2015-12-12T17:14:39Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isEmpty(rotateGroupIDList)) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6946/buggy-version/rotate-shop-biz.src.main.java.com.dianping.rotate.shop.impl.RotateGroupServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "629c71a3e6d08b9032c7740afd23a0da1c256ad0", "Url": "https://api.github.com/repos/arnoldwang/rotate-shop", "Date": "2015-03-26T02:50:17Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getLog().isInfoEnabled()) getLog().info((\"ocamljava compile args: \" + (com.google.common.collect.ImmutableList.copyOf(sourceArgs))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2103/buggy-version/ocamljava-maven-plugin.src.main.java.mandelbrot.ocamljava_maven_plugin.OcamlJavaCompileAbstractMojo.java", "BodyUseAPI": [], "Fixed commit": "678f35ccba9f66c7de24e9e9bfc5370f53759419", "Url": "https://api.github.com/repos/struktured/ocamljava-maven-plugin", "Date": "2014-06-28T02:21:02Z"},
{"Line": "=>791", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isClient)) { sendData(intentWriter, Constants.JSON_OBJECT.NUM_SERIAL); android.util.Log.d(tuisse.carduinodroid_android.IpConnection.TAG, \"send serial status changed event\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1274/buggy-version/app.src.main.java.tuisse.carduinodroid_android.IpConnection.java", "BodyUseAPI": [], "Fixed commit": "d775cf8ecff7dd7eaa87a4adf610402dea7b4786", "Url": "https://api.github.com/repos/tuiSSE/carduinodroid-android", "Date": "2016-02-29T20:37:22Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.equals(\"brand\")) { tagServiceImpl.updateBrandTag(hp_id, pre_id, new_id); }else if (type.equals(\"category\")) { tagServiceImpl.updateCategoryTag(hp_id, pre_id, new_id); }else if (type.equals(\"color\")) { tagServiceImpl.updateColorTag(hp_id, pre_id, new_id); }else if (type.equals(\"size\")) { tagServiceImpl.updateSizeTag(hp_id, pre_id, new_id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8302/buggy-version/src.main.java.com.cidic.sdx.controller.TagSettingController.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "6a03675788f97f465cac161d748a939baca1963b", "Url": "https://api.github.com/repos/zyhndesign/SDX_HPGL", "Date": "2016-07-29T01:06:45Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(servicePath.equals(\"/\"))) { indexToInsert = path.indexOf(servicePath); indexToInsert = (indexToInsert == (-1)) ? 0 : indexToInsert; indexToInsert += servicePath.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7839/buggy-version/apis.s3.src.main.java.org.jclouds.s3.binders.BindAsHostPrefixIfConfigured.java", "BodyUseAPI": ["java.lang.StringBuilder.indexOf(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "aec5b0600125d8221a55230be1d393e2fdd13417", "Url": "https://api.github.com/repos/jclouds/jclouds", "Date": "2011-05-30T03:08:35Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tavonatti.stefano.model.Person.getPersonById(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (stored == null) { return throw404(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5161/buggy-version/ServerAssignment2.src.tavonatti.stefano.rest.ListPeople.java", "BodyUseAPI": [], "Fixed commit": "e0c1ef584a187f5731df6b4a7e995c738f902565", "Url": "https://api.github.com/repos/StefanoTavonatti93/introsde-2016-assignment-2", "Date": "2016-11-21T19:36:15Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size > (isNull.length)) { isNull = new boolean[size]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4985/buggy-version/storage-api.src.java.org.apache.hadoop.hive.decimal.DefaultNullableVector.java", "BodyUseAPI": [], "Fixed commit": "e9622b0b85884f310fa17ed3697c4658ae3adf50", "Url": "https://api.github.com/repos/pudidic/hive", "Date": "2016-11-04T09:39:06Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["currentView.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((frequencyString.compareTo(\"\")) == 0) frequencyString = \"0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/322/buggy-version/Bplux.src.ceu.marten.ui.NewConfigurationActivity.java", "BodyUseAPI": [], "Fixed commit": "ad6cb2a99347f3779f9e5abb544a4a57cd0bc6cf", "Url": "https://api.github.com/repos/martencarlos/bp", "Date": "2013-12-09T11:05:30Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.devrel.training.conference.spi.ConferenceApi.getProfileFromUser(com.google.appengine.api.users.User)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (profile != null) { com.googlecode.objectify.cmd.Query query = ofy().load().type(com.google.devrel.training.conference.domain.Conference.class).ancestor(profile); return query.list(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1329/buggy-version/src.main.java.com.google.devrel.training.conference.spi.ConferenceApi.java", "BodyUseAPI": ["ofy().load().type(com.google.devrel.training.conference.domain.Conference.class).ancestor(com.google.devrel.training.conference.domain.Profile)"], "Fixed commit": "d4e499bbd62d796b25bd601e2ec5f31a5077b178", "Url": "https://api.github.com/repos/space-zeddie/conference-central", "Date": "2016-02-20T12:17:12Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user == null) throw new com.google.api.server.spi.response.UnauthorizedException(\"Authorization required.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1329/buggy-version/src.main.java.com.google.devrel.training.conference.spi.ConferenceApi.java", "BodyUseAPI": [], "Fixed commit": "d4e499bbd62d796b25bd601e2ec5f31a5077b178", "Url": "https://api.github.com/repos/space-zeddie/conference-central", "Date": "2016-02-20T12:17:12Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getSerializableExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (parentId == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8421/buggy-version/app.src.main.java.com.antoshkaplus.recursivelists.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d3628d8ee8514e7ce47cc3e7f57f2d8538dc68ed", "Url": "https://api.github.com/repos/antoshkaplus/Android_RecursiveLists", "Date": "2015-05-04T12:24:54Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getApiClient().isConnected()) { Games.Leaderboards.submitScore(getApiClient(), getString(R.string.leaderboard_leaderboard), Variables.SCORE); startActivityForResult(Games.Leaderboards.getLeaderboardIntent(getApiClient(), getString(R.string.leaderboard_leaderboard)), 1); }else { android.widget.Toast.makeText(this, \"No connection, or play games not installed.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2396/buggy-version/app.src.main.java.hn.bw.de.eu.eqwl.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "52da122dc97c96fc373b9c3a52f5ce785f564244", "Url": "https://api.github.com/repos/vanslipon/Eqwl", "Date": "2016-02-28T15:20:20Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerId) == 0) { }else if (packet.get(\"type\").equals(\"request\")) { if (packet.get(\"request\").equals(\"sprite-list\")) { sprites.clear(); java.util.Map<java.lang.String, java.lang.Object> spriteList = ((java.util.Map<java.lang.String, java.lang.Object>) (packet.get(\"data\"))); for (java.util.Map.Entry<java.lang.String, java.lang.Object> entry : spriteList.entrySet()) { int spriteId = java.lang.Integer.parseInt(entry.getKey()); java.util.List<java.lang.Object> spriteData = ((java.util.List<java.lang.Object>) (entry.getValue())); if (spriteId == (playerId)) { player = new com.assemblr.arena06.common.data.Player(true, player.getName()); player.updateState(((java.util.Map<java.lang.String, java.lang.Object>) (spriteData.get(1)))); client.sendData(com.google.common.collect.ImmutableMap.<java.lang.String, java.lang.Object>of(\"type\", \"sprite\", \"action\", \"validate\", \"id\", playerId)); continue; } try { java.lang.Class<? extends com.assemblr.arena06.common.data.Sprite> spriteClass = ((java.lang.Class<? extends com.assemblr.arena06.common.data.Sprite>) (java.lang.Class.forName(((java.lang.String) (spriteData.get(0)))))); com.assemblr.arena06.common.data.Sprite sprite = spriteClass.newInstance(); sprite.updateState(((java.util.Map<java.lang.String, java.lang.Object>) (spriteData.get(1)))); sprites.put(spriteId, sprite); if (sprite instanceof com.assemblr.arena06.common.data.UpdateableSprite) { updateableSprites.put(spriteId, ((com.assemblr.arena06.common.data.UpdateableSprite) (sprite))); } } catch (java.lang.Exception ex) { ex.printStackTrace(); } } requestingSpriteList = false; } }else if (packet.get(\"type\").equals(\"map\")) { if (packet.get(\"action\").equals(\"load\")) { generateMap(((java.lang.Long) (packet.get(\"seed\")))); } }else if (packet.get(\"type\").equals(\"sprite\")) { if (packet.get(\"action\").equals(\"create\")) { int spriteId = ((java.lang.Integer) (packet.get(\"id\"))); java.util.List<java.lang.Object> spriteData = ((java.util.List<java.lang.Object>) (packet.get(\"data\"))); try { java.lang.Class<? extends com.assemblr.arena06.common.data.Sprite> spriteClass = ((java.lang.Class<? extends com.assemblr.arena06.common.data.Sprite>) (java.lang.Class.forName(((java.lang.String) (spriteData.get(0)))))); com.assemblr.arena06.common.data.Sprite sprite = spriteClass.newInstance(); sprite.updateState(((java.util.Map<java.lang.String, java.lang.Object>) (spriteData.get(1)))); sprites.put(spriteId, sprite); if (sprite instanceof com.assemblr.arena06.common.data.UpdateableSprite) { updateableSprites.put(spriteId, ((com.assemblr.arena06.common.data.UpdateableSprite) (sprite))); } } catch (java.lang.Exception ex) { ex.printStackTrace(); } }else if (packet.get(\"action\").equals(\"remove\")) { int spriteId = ((java.lang.Integer) (packet.get(\"id\"))); sprites.remove(spriteId); if (updateableSprites.containsKey(spriteId)) { updateableSprites.remove(spriteId); } }else if (packet.get(\"action\").equals(\"update\")) { int spriteId = ((java.lang.Integer) (packet.get(\"id\"))); if (spriteId != (playerId)) { com.assemblr.arena06.common.data.Sprite s = sprites.get(spriteId); if (s != null) { s.updateState(((java.util.Map<java.lang.String, java.lang.Object>) (packet.get(\"data\")))); }else { java.lang.System.out.println(\"req sprite list because of missing sprite\"); requestSpriteList(); } }else { java.util.Map<java.lang.String, java.lang.Object> playerState = ((java.util.Map<java.lang.String, java.lang.Object>) (packet.get(\"data\"))); player.updateState(playerState); client.sendData(com.google.common.collect.ImmutableMap.<java.lang.String, java.lang.Object>of(\"type\", \"sprite\", \"action\", \"validate\", \"id\", playerId)); } } }else if (packet.get(\"type\").equals(\"chat\")) { long timestamp = ((java.lang.Long) (packet.get(\"timestamp\"))); java.lang.String content = ((java.lang.String) (packet.get(\"content\"))); chats.add(new org.javatuples.Pair<java.util.Date, java.lang.String>(new java.util.Date(timestamp), content)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2671/buggy-version/src.main.java.com.assemblr.arena06.client.scene.GameScene.java", "BodyUseAPI": [], "Fixed commit": "ad244b6f9fff485e1faa84b14bdc3fd55c7abe9a", "Url": "https://api.github.com/repos/Arena06/Arena06Client", "Date": "2014-09-03T00:54:38Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((points == null) || ((points.length) <= 2)) { return points; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8211/buggy-version/src.main.java.com.goebl.simplify.AbstractSimplify.java", "BodyUseAPI": [], "Fixed commit": "728198aebbeef1d6f2ccf973330b7c3bde7b74fd", "Url": "https://api.github.com/repos/hgoebl/simplify-java", "Date": "2015-12-01T08:34:45Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.psj.PowderSimJ.hasGotNatives) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8675/buggy-version/src.net.psj.PowderSimJ.java", "BodyUseAPI": [], "Fixed commit": "d9e9e81f0a9e865878b8874a1c365ee9944c55b4", "Url": "https://api.github.com/repos/me4502/PowderSimJ", "Date": "2012-06-22T08:37:21Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == 7) return new net.psj.Particles.ParticleWood();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8675/buggy-version/src.net.psj.Simulation.ParticleData.java", "BodyUseAPI": [], "Fixed commit": "d9e9e81f0a9e865878b8874a1c365ee9944c55b4", "Url": "https://api.github.com/repos/me4502/PowderSimJ", "Date": "2012-06-22T08:37:21Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.proasense.internal.ComplexValue.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (valueType.equals(VariableType.BLOB)) { propertiesObj.put(key.replace(\".\", \"_\"), new java.lang.String(valueKey.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8290/buggy-version/src.main.java.net.modelbased.proasense.storage.EventDocumentConverter.java", "BodyUseAPI": [], "Fixed commit": "5f0cc56b28b413c19fa3ae6f5fad44c0c6cd4a04", "Url": "https://api.github.com/repos/SINTEF-9012/proasense-storage", "Date": "2015-05-28T08:46:52Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.proasense.internal.ComplexValue.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (valueType.equals(VariableType.STRING)) { propertiesObj.put(key.replace(\".\", \"_\"), new java.lang.String(valueKey)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8290/buggy-version/src.main.java.net.modelbased.proasense.storage.EventDocumentConverter.java", "BodyUseAPI": [], "Fixed commit": "5f0cc56b28b413c19fa3ae6f5fad44c0c6cd4a04", "Url": "https://api.github.com/repos/SINTEF-9012/proasense-storage", "Date": "2015-05-28T08:46:52Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.proasense.internal.ComplexValue.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (valueType.equals(VariableType.DOUBLE)) { propertiesObj.put(key.replace(\".\", \"_\"), new java.lang.Double(valueKey)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8290/buggy-version/src.main.java.net.modelbased.proasense.storage.EventDocumentConverter.java", "BodyUseAPI": [], "Fixed commit": "5f0cc56b28b413c19fa3ae6f5fad44c0c6cd4a04", "Url": "https://api.github.com/repos/SINTEF-9012/proasense-storage", "Date": "2015-05-28T08:46:52Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dabsquared.gitlabjenkins.gitlab.hook.model.MergeRequestHook.getObjectAttributes()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((mergeRequestHook.getProject()) == null) && ((attributes.getTarget()) != null)) { mergeRequestHook.setProject(attributes.getTarget()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2010/buggy-version/src.main.java.com.dabsquared.gitlabjenkins.webhook.build.MergeRequestBuildAction.java", "BodyUseAPI": ["com.dabsquared.gitlabjenkins.gitlab.hook.model.MergeRequestObjectAttributes.getTarget()", "com.dabsquared.gitlabjenkins.gitlab.hook.model.MergeRequestHook.setProject(attributes.getTarget())"], "Fixed commit": "93717bd1f99e13b06330a394ead742f9aac06231", "Url": "https://api.github.com/repos/tptak/gitlab-plugin", "Date": "2016-12-20T17:32:21Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dk.brics.automaton.Automaton.getShortestExample(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (example != null) return janala.interpreters.RegexpEncoder.intCompare(prefix, sym, example.length(), SymbolicIntCompareConstraint.COMPARISON_OPS.GE); else return janala.interpreters.RegexpEncoder.intCompare(prefix, sym, 0, SymbolicIntCompareConstraint.COMPARISON_OPS.LT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6136/buggy-version/src.janala.interpreters.RegexpEncoder.java", "BodyUseAPI": ["java.lang.String.length()", "janala.interpreters.RegexpEncoder.intCompare(java.lang.String,int,int,SymbolicIntCompareConstraint.COMPARISON_OPS.GE)"], "Fixed commit": "54c5b907f6194363497b49be4616f269e72c183f", "Url": "https://api.github.com/repos/ksen007/janala2", "Date": "2013-01-14T07:23:13Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opendatakit.tables.application.Tables.getInstance().getDatabase()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (temp == null) { org.opendatakit.logging.WebLogger.getLogger(getAppName()).a(org.opendatakit.tables.fragments.TablePreferenceFragment.TAG, \"DbInterface is null. This shouldn't happen!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2722/buggy-version/tables_app.src.main.java.org.opendatakit.tables.fragments.TablePreferenceFragment.java", "BodyUseAPI": [], "Fixed commit": "21d47f7dff3d605e17e65da2817cb811b9be87d1", "Url": "https://api.github.com/repos/opendatakit/tables", "Date": "2017-06-07T21:55:51Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.parse.ParseUser.getParseFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (imageFile == null) { profilePic.setImageResource(R.drawable.no_user_logo); }else { imageLoader.DisplayImage(user.getParseFile(\"profilePic\").getUrl(), profilePic); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3348/buggy-version/getFit.app.src.main.java.com.gym8.messages.MessagesAdapter.java", "BodyUseAPI": [], "Fixed commit": "054ec59b14a784658b75ae2f3475a11476accfce", "Url": "https://api.github.com/repos/guttamc7/CS-490", "Date": "2015-05-04T06:23:35Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newVolume != (settings.getVolume())) { settings.setVolume(newVolume); notifyListeners(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2475/buggy-version/core.src.com.retroMachines.game.controllers.SettingController.java", "BodyUseAPI": ["com.retroMachines.data.models.Setting.setVolume(float)"], "Fixed commit": "0d4cfa31f3cce279726db4e0b0e3cf06a2d48c16", "Url": "https://api.github.com/repos/Die-anonymen-PSEler/game", "Date": "2015-03-03T08:53:16Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.getSelectedRow()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (selectedRow >= 0) { tblRegions_.setRowSelectionInterval(selectedRow, selectedRow); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8762/buggy-version/src.main.java.com.sciaps.view.RegionsPanel.java", "BodyUseAPI": ["javax.swing.JTable.setRowSelectionInterval(int,int)"], "Fixed commit": "8e064221889ff8386f16c7649a16eccdc217738d", "Url": "https://api.github.com/repos/SciAps/LIBZRegionFinder", "Date": "2014-12-31T15:37:03Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (this.isBinaryOperator(lastElement)) { list.add(((\"Math.\" + s) + \"(\")); (open_bracket)++; }else if (first_input) { list.set(((list.size()) - 1), ((\"Math.\" + s) + \"(\")); (open_bracket)++; }else { list.add(((\"*Math.\" + s) + \"(\")); (open_bracket)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6957/buggy-version/Scientific_Calculator.java", "BodyUseAPI": [], "Fixed commit": "8db86d29d01357ac2f6e0e0a3dfa7a9f70f80717", "Url": "https://api.github.com/repos/ITU-SEN-964-OOP-with-JAVA/Scientific-Calculator", "Date": "2015-08-08T18:55:07Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.brooklyn.util.text.Strings.isBlank(getConfig(org.apache.brooklyn.entity.stock.DEFAULT_DISPLAY_NAME))) { setDefaultDisplayName(((\"Application (\" + (getId())) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2930/buggy-version/core.src.main.java.org.apache.brooklyn.entity.stock.BasicApplicationImpl.java", "BodyUseAPI": [], "Fixed commit": "f8a03a88ccb6a62b20cbaaf8ff6e36bd6f99d7f4", "Url": "https://api.github.com/repos/neykov/brooklyn-server", "Date": "2016-06-17T15:52:42Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) != (ClientState.Connected)) { log.debug(((\"failed to connect to server after \" + (maxConnectRetries)) + \" tries\")); throw new org.iaik.net.exceptions.RUDPException(((\"failed to connect to server after \" + (maxConnectRetries)) + \" tries\")); }else { org.iaik.net.factories.TransportLayerFactory.getInstance().addRUDPConnection(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1623/buggy-version/org.iaik.net.RUDP.RUDPClientConnection.java", "BodyUseAPI": [], "Fixed commit": "acd99deec6a354d656a971a8621635b8f10312ca", "Url": "https://api.github.com/repos/skillii/RNKN", "Date": "2011-06-15T19:09:54Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (som.vm.VmSettings.TIME_TRAVELLING) { msg = new som.interpreter.actors.EventualMessage.DirectMessage(current, selector, args, current, resolver, onReceive, current.getCurrentMessage().messageId, messageReceiverBreakpoint.executeShouldHalt(), promiseResolverBreakpoint.executeShouldHalt()); }else { msg = new som.interpreter.actors.EventualMessage.DirectMessage(current, selector, args, current, resolver, onReceive, (-1), messageReceiverBreakpoint.executeShouldHalt(), promiseResolverBreakpoint.executeShouldHalt()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7581/buggy-version/src.som.interpreter.actors.EventualSendNode.java", "BodyUseAPI": [], "Fixed commit": "8a6acd9312049c01790235a39c93be9ad2f4eceb", "Url": "https://api.github.com/repos/MetaConc/SOMns", "Date": "2017-08-02T16:05:04Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (som.vm.VmSettings.TIME_TRAVELLING) { msg = new som.interpreter.actors.EventualMessage.DirectMessage(current, selector, args, current, null, onReceive, current.getCurrentMessage().messageId, messageReceiverBreakpoint.executeShouldHalt(), promiseResolverBreakpoint.executeShouldHalt()); }else { msg = new som.interpreter.actors.EventualMessage.DirectMessage(current, selector, args, current, null, onReceive, (-1), messageReceiverBreakpoint.executeShouldHalt(), promiseResolverBreakpoint.executeShouldHalt()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7581/buggy-version/src.som.interpreter.actors.EventualSendNode.java", "BodyUseAPI": [], "Fixed commit": "8a6acd9312049c01790235a39c93be9ad2f4eceb", "Url": "https://api.github.com/repos/MetaConc/SOMns", "Date": "2017-08-02T16:05:04Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(hasPrincipalInvestigator.getHasFirstName().equals(edu.utep.cybershare.vlc.sources.ProjectSource.NULL_NAME))) project.setHasPrincipalInvestigator(hasPrincipalInvestigator);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3095/buggy-version/harvester.src.main.java.edu.utep.cybershare.vlc.sources.ProjectSource.java", "BodyUseAPI": ["edu.utep.cybershare.vlc.ontology.Project.setHasPrincipalInvestigator(edu.utep.cybershare.vlc.ontology.Person)"], "Fixed commit": "ee02952147f21cf393e5da2a223c9131ae24e070", "Url": "https://api.github.com/repos/nicholasdelrio/VLC", "Date": "2013-07-26T21:48:46Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dianping.wizard.widget.interceptor.extensions.ProxyInterceptor.getWizardCookieConfig(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (config == null) { return invocation.invoke(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1318/buggy-version/src.main.java.com.dianping.wizard.widget.interceptor.extensions.ProxyInterceptor.java", "BodyUseAPI": [], "Fixed commit": "770817260229934df155d981f0cc4eb878444cd7", "Url": "https://api.github.com/repos/yucong/Wizard", "Date": "2014-01-24T04:02:40Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.timurstrekalov.saga.core.AstNode.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((type == (WHILE)) || (type == (FOR))) || (type == (DO))) { fixLoops(((com.github.timurstrekalov.saga.core.Loop) (node))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6937/buggy-version/saga-core.src.main.java.com.github.timurstrekalov.saga.core.ScriptInstrumenter.java", "BodyUseAPI": [], "Fixed commit": "75afd5edffbbe8f51feba29410fa3ab89c8efe63", "Url": "https://api.github.com/repos/timurstrekalov/saga", "Date": "2012-05-02T20:28:03Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ifStatement.getElsePart()) == elseIfStatement) { flattenElseIf(elseIfStatement, ifStatement); data.addExecutableLine(getActualLineNumber(node), node.getLength()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6937/buggy-version/saga-core.src.main.java.com.github.timurstrekalov.saga.core.ScriptInstrumenter.java", "BodyUseAPI": ["com.github.timurstrekalov.saga.core.ScriptInstrumenter.InstrumentingVisitor.flattenElseIf(com.github.timurstrekalov.saga.core.IfStatement,com.github.timurstrekalov.saga.core.IfStatement)"], "Fixed commit": "75afd5edffbbe8f51feba29410fa3ab89c8efe63", "Url": "https://api.github.com/repos/timurstrekalov/saga", "Date": "2012-05-02T20:28:03Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gmail.zariust.otherdrops.data.Data.get(org.bukkit.Material)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (dataString != null) ret += (dataString.isEmpty()) ? \"\" : \"@\" + (durability.get(material));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3812/buggy-version/src.com.gmail.zariust.otherdrops.drop.ItemDrop.java", "BodyUseAPI": ["java.lang.String.isEmpty()"], "Fixed commit": "c285349f09507fa078530e1d91c7eaf4a4e6e2c2", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2013-02-23T21:19:07Z"},
{"Line": "=>789", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lexer.token()) == (com.alibaba.fastjson.parser.JSONToken.RBRACKET)) { lexer.nextToken(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2601/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.java", "BodyUseAPI": ["com.alibaba.fastjson.parser.JSONLexerBase.nextToken()"], "Fixed commit": "5c72a02e004a9f67d94be6a6cd2c07626870a9d9", "Url": "https://api.github.com/repos/VictorZeng/fastjson", "Date": "2016-05-14T10:16:56Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((winningHands.getList().size()) == 5) { winningHandsList.add(winningHands); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6088/buggy-version/SmartBirdEngine.src.main.java.org.smartbirdpj.engine.controller.MeldNode.java", "BodyUseAPI": ["java.util.List<org.smartbirdpj.engine.controller.WinningHands>.add(org.smartbirdpj.engine.controller.WinningHandsBasic)"], "Fixed commit": "52b96194e8fabeb955ca1698d36890d29e936545", "Url": "https://api.github.com/repos/kentan/SmartBird", "Date": "2014-12-31T04:49:45Z"},
{"Line": "=>1175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((api.getVisibleRoles()) != null) { visibleRoles = api.getVisibleRoles().split(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3583/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.utils.APIUtil.java", "BodyUseAPI": ["api.getVisibleRoles().split(java.lang.String)", "org.wso2.carbon.apimgt.impl.utils.API.getVisibleRoles()"], "Fixed commit": "63c21256fa75736b0b0488ada0ccc7957bcc3fb4", "Url": "https://api.github.com/repos/lakmali/carbon-apimgt", "Date": "2015-05-26T10:32:52Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.afollestad.photoaffix.utils.Prefs.bgFillColor(getActivity())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fillColor == (android.graphics.Color.TRANSPARENT)) fillColor = android.support.v4.content.ContextCompat.getColor(getActivity(), R.color.colorAccent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/101/buggy-version/app.src.main.java.com.afollestad.photoaffix.dialogs.ImageSpacingDialog.java", "BodyUseAPI": [], "Fixed commit": "f30161018b7d6b5f45e6143dc8933a9fc2136769", "Url": "https://api.github.com/repos/afollestad/photo-affix", "Date": "2016-01-02T19:20:07Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFinishing()) com.afollestad.inquiry.Inquiry.deinit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/101/buggy-version/app.src.main.java.com.afollestad.photoaffix.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f30161018b7d6b5f45e6143dc8933a9fc2136769", "Url": "https://api.github.com/repos/afollestad/photo-affix", "Date": "2016-01-02T19:20:07Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSelectedPhotos) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/101/buggy-version/app.src.main.java.com.afollestad.photoaffix.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f30161018b7d6b5f45e6143dc8933a9fc2136769", "Url": "https://api.github.com/repos/afollestad/photo-affix", "Date": "2016-01-02T19:20:07Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((line.hasOption(\"dictionary\")) || (line.hasOption(\"pattern\")))) throw new java.lang.Exception(\"Missing either dictionary and category arguments, or pattern argument\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3833/buggy-version/src.org.conjugateprior.ca.ui.CommandLineConcordancer.java", "BodyUseAPI": [], "Fixed commit": "bae313bdf55d710a3453c63acbb40be05c7bcafe", "Url": "https://api.github.com/repos/conjugateprior/jca", "Date": "2014-12-17T19:59:45Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stack.getItemDamage()) == 0) { playerIn.addChatComponentMessage(new net.minecraft.util.ChatComponentText(\"This mode is not implemented yet. Switch mode by shift + scrolling\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5501/buggy-version/src.main.java.com.Girafi.culinarycultivation.item.ItemDebugItem.java", "BodyUseAPI": [], "Fixed commit": "fbc0a67cb25210d0e7efa13c84394e9fdc21f871", "Url": "https://api.github.com/repos/GirafiStudios/Culinary-Cultivation", "Date": "2015-04-09T02:35:54Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (annotation instanceof be.maximvdw.placeholderapi.internal.ModuleAuthor) { setAuthor(((be.maximvdw.placeholderapi.internal.ModuleAuthor) (annotation)).value()); }else if (annotation instanceof be.maximvdw.placeholderapi.internal.ModuleVersion) { setVersion(((be.maximvdw.placeholderapi.internal.ModuleVersion) (annotation)).value()); }else if (annotation instanceof be.maximvdw.placeholderapi.internal.ModuleConstraints) { be.maximvdw.placeholderapi.internal.ModuleConstraint[] subConstraints = ((be.maximvdw.placeholderapi.internal.ModuleConstraints) (annotation)).value(); for (be.maximvdw.placeholderapi.internal.ModuleConstraint subConstraint : subConstraints) { addCondition(subConstraint); } }else if (annotation instanceof be.maximvdw.placeholderapi.internal.ModuleName) { name = ((be.maximvdw.placeholderapi.internal.ModuleName) (annotation)).value().toLowerCase(); if (actionName.equals(\"\")) { actionName = name; } }else if (annotation instanceof be.maximvdw.placeholderapi.internal.ModuleActionName) { actionName = ((be.maximvdw.placeholderapi.internal.ModuleActionName) (annotation)).value().toLowerCase(); if (name.equals(\"\")) { name = actionName; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2118/buggy-version/src.main.java.be.maximvdw.placeholderapi.internal.PlaceholderPack.java", "BodyUseAPI": [], "Fixed commit": "6795fa5f6c6e0e9db4fd0c7d0a1400a4af28dd86", "Url": "https://api.github.com/repos/Maximvdw/MVdWPlaceholderAPI", "Date": "2017-11-20T11:45:38Z"},
{"Line": "=>986", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type.isEnum()) { java.lang.String stringValue = org.simplity.kernel.util.TextUtil.constantToValue(value.toString()); ele.setAttribute(fieldName, stringValue); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7432/buggy-version/simplity.kernel.src.main.java.org.simplity.kernel.util.XmlUtil.java", "BodyUseAPI": [], "Fixed commit": "ed9bfd1bf7eb5aa56d431c488b51bcc9dc7c8301", "Url": "https://api.github.com/repos/simplity/simplity", "Date": "2017-07-20T11:55:44Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDrawingThread) == null) { startDrawingThread(); }else { mGame.onTouch(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1688/buggy-version/src.com.vinson.dietogether.GameView.java", "BodyUseAPI": [], "Fixed commit": "61ff20882edb5cc6bf0eda25024592828422eea0", "Url": "https://api.github.com/repos/VinsonCai/DieTogether", "Date": "2014-08-09T08:16:54Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1072/buggy-version/library.src.main.java.com.nshmura.recyclertablayout.RecyclerTabLayout.java", "BodyUseAPI": [], "Fixed commit": "41e00e45ac3fc0875705a8e197f007e57d52a4b4", "Url": "https://api.github.com/repos/nshmura/RecyclerTabLayout", "Date": "2017-08-20T14:27:59Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (originalCommand.returnsResultSet()) { columnMetadata = createProjectedSymbolMetadata(originalCommand); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4715/buggy-version/engine.src.main.java.org.teiid.dqp.internal.process.MetaDataProcessor.java", "BodyUseAPI": ["org.teiid.dqp.internal.process.MetaDataProcessor.createProjectedSymbolMetadata(org.teiid.query.sql.lang.Command)"], "Fixed commit": "23c4964d3961b61858f56a425687638027994831", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2016-10-13T12:58:31Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id == null) || ((id.length()) == 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4081/buggy-version/src.main.java.com.ideax.fm360.service.UserService.java", "BodyUseAPI": [], "Fixed commit": "c87ea38445bc1c1f97f4e695cabb54b4b2004531", "Url": "https://api.github.com/repos/xxjacob/fm", "Date": "2014-03-12T11:45:35Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (oi < 0) { logger.error((\"get openid error response:\" + oi)); return \"get openid error response:\" + openidStr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4081/buggy-version/src.main.java.com.ideax.fm360.controller.UserC.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String)"], "Fixed commit": "c87ea38445bc1c1f97f4e695cabb54b4b2004531", "Url": "https://api.github.com/repos/xxjacob/fm", "Date": "2014-03-12T11:45:35Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (openid == null) { logger.error((\"ungeilivable! cannot get openid !\" + openidStr)); return \"ungeilivable! cannot get openid !\" + openidStr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4081/buggy-version/src.main.java.com.ideax.fm360.controller.UserC.java", "BodyUseAPI": [], "Fixed commit": "c87ea38445bc1c1f97f4e695cabb54b4b2004531", "Url": "https://api.github.com/repos/xxjacob/fm", "Date": "2014-03-12T11:45:35Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char,int)", "java.lang.String.indexOf(char,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (end <= start) { logger.error((((\"get openid error response:\" + oi) + start) + end)); return \"get openid error response:\" + openidStr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4081/buggy-version/src.main.java.com.ideax.fm360.controller.UserC.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String)"], "Fixed commit": "c87ea38445bc1c1f97f4e695cabb54b4b2004531", "Url": "https://api.github.com/repos/xxjacob/fm", "Date": "2014-03-12T11:45:35Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["state.getUnit(log.getNewUnitID()).getTemplateView().getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (unitName.equals(\"Peasant\")) freePeasants.add(log.getNewUnitID());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4458/buggy-version/src.edu.cwru.sepia.agent.ResourceCollectionAgent.java", "BodyUseAPI": [], "Fixed commit": "630345a5705ad48cf1fc650c0bc582257668afe8", "Url": "https://api.github.com/repos/rhololkeolke/eecs-491-p1", "Date": "2012-09-27T12:53:02Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sensor.next())) sensor = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/847/buggy-version/src.jvm.ml.spout.sensor.SensorStreamingSpout.java", "BodyUseAPI": [], "Fixed commit": "8ad04f0e7b9fee3fb40434dff4ad69b2db2ccf52", "Url": "https://api.github.com/repos/lbhat1/mlstorm", "Date": "2013-12-21T02:17:25Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(autFile.isFile())) { for (java.io.File file : directory.listFiles()) { if ((file.getName().toLowerCase().endsWith(org.sleuthkit.autopsy.casemodule.CaseMetadata.getFileExtension())) && (file.isFile())) { autFile = file; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1678/buggy-version/Core.src.org.sleuthkit.autopsy.casemodule.MultiUserCase.java", "BodyUseAPI": [], "Fixed commit": "8e8b957f4c9c965fa7ba95283c0fb1719c8a2d46", "Url": "https://api.github.com/repos/dgrove727/autopsy", "Date": "2017-10-24T19:17:57Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(entryPoint)) { replacedUrl = fileUrl.replace(((entryPoint) + \"/\"), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4333/buggy-version/src.plugins.vcs.SubversionPlugin.src.main.java.org.codesearch.commons.plugins.vcs.SubversionPlugin.java", "BodyUseAPI": [], "Fixed commit": "561af99debd754b54176ea11f155a5988a18f809", "Url": "https://api.github.com/repos/codesearch-github/codesearch", "Date": "2012-04-25T14:48:37Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(nextFact.equals(lastFact))) { retVal += nextFact; lastFact = nextFact; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8058/buggy-version/minsolver.MinSolver.java", "BodyUseAPI": [], "Fixed commit": "2eb8faf353d064df60b197a7a9f3eb513da43c24", "Url": "https://api.github.com/repos/salmans/MinSolver", "Date": "2012-08-01T14:25:47Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((batchHolders.get(outBatchIndex).getNumPendingOutput()) == 0) { (outBatchIndex)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/897/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.physical.impl.aggregate.HashAggTemplate.java", "BodyUseAPI": [], "Fixed commit": "91a810c295d20055314f3696fc17e6c761b1757d", "Url": "https://api.github.com/repos/vkorukanti/drill", "Date": "2015-01-11T10:14:59Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.mobicents.servlet.sip.catalina.PatternRule.logger.isTraceEnabled()) { org.mobicents.servlet.sip.catalina.PatternRule.logger.trace((\"matching rule : \" + rule)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/782/buggy-version/containers.sip-servlets-catalina-7.src.main.java.org.mobicents.servlet.sip.catalina.SipRuleSet.java", "BodyUseAPI": ["org.apache.log4j.Logger.trace((\"matching rule : \" + rule))"], "Fixed commit": "8812b93004b2616ce0e02f03a3a64aba1227a020", "Url": "https://api.github.com/repos/Mobicents/sip-servlets", "Date": "2012-09-11T15:47:57Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getStatusBayar()) == 1) { int harga = (p.getJumlahMobil()) * (p.getHarga()); jumlah = (jumlah + harga) + (p.getDenda()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/693/buggy-version/Sistem_Rental_Mobil_OO_Impal.src.sistem_rental_mobil_oo_impal.Driver.java", "BodyUseAPI": ["sistem_rental_mobil_oo_impal.model.Transaksi.getJumlahMobil()", "sistem_rental_mobil_oo_impal.model.Transaksi.getHarga()", "sistem_rental_mobil_oo_impal.model.Transaksi.getDenda()"], "Fixed commit": "230b69a2480fc64730109c27a1fdb52da4a7b0a7", "Url": "https://api.github.com/repos/rayarahadian/sistem_rental_mobil", "Date": "2017-12-03T08:00:13Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.weibo.ml.lda.FileSystem.get(com.weibo.ml.lda.JobConf)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (fs.exists(nwzPath)) { fs.delete(nwzPath); LOG.info(((\"delete nwz file : \" + (nwzPath.getName())) + \".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8984/buggy-version/src.main.java.com.weibo.ml.lda.LdaTrainer.java", "BodyUseAPI": ["com.weibo.ml.lda.FileSystem.delete(com.weibo.ml.lda.Path)", "java.util.logging.Logger.info(((\"delete nwz file : \" + (nwzPath.getName())) + \".\"))", "com.weibo.ml.lda.Path.getName()"], "Fixed commit": "330ed9bc96e296a3cc130ba390fd7bc5f599b0b8", "Url": "https://api.github.com/repos/wildfire8966/hadoop-lda", "Date": "2016-09-29T07:46:26Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line.length()) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4549/buggy-version/src.main.java.edu.psu.ist.acs.micro.event.scratch.ConstructMID5NewsDocumentSet.java", "BodyUseAPI": [], "Fixed commit": "dc7b966e9437678d6c89f16b9143049c559dff99", "Url": "https://api.github.com/repos/forkunited/micro-event", "Date": "2016-01-28T03:46:38Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input) instanceof java.lang.Boolean) { serializer.writeBooleanValue(input); }else if ((input) instanceof java.lang.Number) { serializer.writeNumberValue(input); }else { serializer.writeStringValue(input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/618/buggy-version/src.main.java.com.marklogic.client.impl.DocumentPatchBuilderImpl.java", "BodyUseAPI": [], "Fixed commit": "2faead09a11cb2b8c35bd6e22797e1f33354d559", "Url": "https://api.github.com/repos/marklogic/java-client-api", "Date": "2015-04-29T23:59:04Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (input != null) { inputAsString = (input instanceof java.lang.String) ? ((java.lang.String) (input)) : input.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/618/buggy-version/src.main.java.com.marklogic.client.impl.DocumentPatchBuilderImpl.java", "BodyUseAPI": [], "Fixed commit": "2faead09a11cb2b8c35bd6e22797e1f33354d559", "Url": "https://api.github.com/repos/marklogic/java-client-api", "Date": "2015-04-29T23:59:04Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.network.vpc.dao.NetworkACLItemDaoImpl.findOneBy(com.cloud.utils.db.SearchCriteria<com.cloud.network.vpc.NetworkACLItemVO>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (vo != null) { loadCidrs(vo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7340/buggy-version/engine.schema.src.com.cloud.network.vpc.dao.NetworkACLItemDaoImpl.java", "BodyUseAPI": ["com.cloud.network.vpc.dao.NetworkACLItemDaoImpl.loadCidrs(com.cloud.network.vpc.NetworkACLItemVO)"], "Fixed commit": "4c304324a36ad25d7756da1ca9f2426a96ad8837", "Url": "https://api.github.com/repos/SungardAS-CloudDevelopers/cloudstack", "Date": "2014-05-06T15:59:53Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.nio.file.Files.notExists(storage)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4863/buggy-version/src.main.java.com.deanveloper.playtimeplus.storage.binary.BinaryManager.java", "BodyUseAPI": [], "Fixed commit": "c853203f28df72464e0f0059b33ed6f85da87c8b", "Url": "https://api.github.com/repos/deanveloper/PlayTimePlus", "Date": "2017-07-20T02:36:01Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.vertical_size) != (otherAbstractBoard.getVertical_size())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5630/buggy-version/src.rhsu.board.basic.AbstractBasicBoard.java", "BodyUseAPI": [], "Fixed commit": "650d2f708d1f5c18d5e4627a1e0f6614f8a62740", "Url": "https://api.github.com/repos/rhsu/Board", "Date": "2014-01-10T15:28:28Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.horizontal_size) != (otherAbstractBoard.getHorizontal_size())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5630/buggy-version/src.rhsu.board.basic.AbstractBasicBoard.java", "BodyUseAPI": [], "Fixed commit": "650d2f708d1f5c18d5e4627a1e0f6614f8a62740", "Url": "https://api.github.com/repos/rhsu/Board", "Date": "2014-01-10T15:28:28Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((enemy.getEntityAttribute(SharedMonsterAttributes.ATTACK_DAMAGE)) != null) { xp = ((int) ((enemy.getEntityAttribute(SharedMonsterAttributes.ATTACK_DAMAGE).getAttributeValue()) * 0.5)); }else { xp = ((int) ((enemy.getEntityAttribute(SharedMonsterAttributes.MAX_HEALTH).getAttributeValue()) * 0.5)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2337/buggy-version/src.main.java.com.thexfactor117.levels.event.EventAttack.java", "BodyUseAPI": ["net.minecraft.entity.EntityLivingBase.getEntityAttribute(SharedMonsterAttributes.ATTACK_DAMAGE)", "enemy.getEntityAttribute(SharedMonsterAttributes.ATTACK_DAMAGE).getAttributeValue()", "net.minecraft.entity.EntityLivingBase.getEntityAttribute(SharedMonsterAttributes.MAX_HEALTH)", "enemy.getEntityAttribute(SharedMonsterAttributes.MAX_HEALTH).getAttributeValue()"], "Fixed commit": "0387d23f85e6a72892ca95281fec7664593c2ac3", "Url": "https://api.github.com/repos/TheXFactor117/Levels", "Date": "2017-06-07T20:31:17Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pushsignal.dao.TriggerDAO.findTriggerByPrimaryKey(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((trigger.getUser()) != null) { activityLogic.createActivity(trigger.getUser(), (((\"Trigger of event \" + (trigger.getEvent().getName())) + \" was acknowledged by \") + (userMe.getName())), com.pushsignal.logic.TriggerLogic.POINTS_FOR_TRIGGER_ACKNOWLEDGED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6723/buggy-version/src.main.java.com.pushsignal.logic.TriggerLogic.java", "BodyUseAPI": ["com.pushsignal.domain.Trigger.getUser()", "trigger.getEvent().getName()", "com.pushsignal.domain.Trigger.getEvent()", "com.pushsignal.logic.ActivityLogic.createActivity(trigger.getUser(),(((\"Trigger of event \" + (trigger.getEvent().getName())) + \" was acknowledged by \") + (userMe.getName())),int)"], "Fixed commit": "1b2373c3ba868402e1f5834ba00b747c630a9333", "Url": "https://api.github.com/repos/gdenning/pushsignal-server", "Date": "2013-01-09T04:43:20Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(couchDbConnectorHashMap.containsKey(dbName))) { org.soma.tleaf.couchdb.CouchDbConnImpl.logger.info(((\"Doesn't have \" + dbName) + \" creating connector\")); getCouchDbInstance(); if (!(couchDbInstance.checkIfDbExists(new org.ektorp.DbPath(dbName)))) couchDbInstance.createDatabase(dbName); couchDbConnectorHashMap.put(dbName, new org.ektorp.impl.StdCouchDbConnector(dbName, couchDbInstance)); return couchDbConnectorHashMap.get(dbName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4646/buggy-version/src.main.java.org.soma.tleaf.couchdb.CouchDbConnImpl.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String)", "org.ektorp.CouchDbInstance.createDatabase(java.lang.String)", "java.util.HashMap<java.lang.String, org.ektorp.CouchDbConnector>.get(java.lang.String)", "org.ektorp.CouchDbInstance.checkIfDbExists(org.ektorp.DbPath)", "java.util.HashMap<java.lang.String, org.ektorp.CouchDbConnector>.put(java.lang.String,org.ektorp.impl.StdCouchDbConnector)"], "Fixed commit": "ea59feb63cff7c811d5df3805d7aec6a94726392", "Url": "https://api.github.com/repos/LifeLogTLeaf/ShackServer", "Date": "2014-10-23T05:16:45Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hook.getPlayer().hasPermission(\"rulesmenu.accepted\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2106/buggy-version/src.com.therazzerapp.rulesmenu.listener.ShowMenu.java", "BodyUseAPI": [], "Fixed commit": "23f8ee3a705c31ebeb5b489b3b3eeeff011466e1", "Url": "https://api.github.com/repos/TheRaZZeRApp/RulesMenu", "Date": "2015-04-21T16:19:55Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iter != null) iter.mapNext = iter.mapNext.mapNext;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7328/buggy-version/HaTrick.src.com.hatrick.logic.LogicMap.java", "BodyUseAPI": [], "Fixed commit": "67ad021b6bb598bd67b3a8d210d9a95ddd24eed2", "Url": "https://api.github.com/repos/immzz/hatrick", "Date": "2013-06-07T13:36:07Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isDouble(valueString)) { float obj = java.lang.Float.parseFloat(valueString); if (param == (float.class)) { value = ((float) (obj)); }else if (param == (int.class)) { value = ((int) (obj)); }else if (param == (double.class)) { value = ((double) (obj)); } }else { throw new java.lang.Exception((((((org.bukkit.ChatColor.RED) + \"Expected a number, received \") + valueString) + \" instead for \") + methodName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5562/buggy-version/src.me.libraryaddict.disguise.BaseDisguiseCommand.java", "BodyUseAPI": ["java.lang.Float.parseFloat(java.lang.String)"], "Fixed commit": "f431b619fefc453fd80c04ef46ea8fbebc37fc86", "Url": "https://api.github.com/repos/libraryaddict/LibsDisguises", "Date": "2013-11-05T15:56:23Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (contentLength > 0) { if (gZippedContent) { is = getUnZippedInputStream(new java.io.BufferedInputStream(connection.openInputStream(), contentLength)); }else { is = new java.io.BufferedInputStream(connection.openInputStream(), contentLength); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5251/buggy-version/ksoap2-j2se.src.main.java.org.ksoap2.transport.HttpTransportSE.java", "BodyUseAPI": ["org.ksoap2.transport.HttpTransportSE.getUnZippedInputStream(java.io.BufferedInputStream)"], "Fixed commit": "fc5eec2e37fa9ae719e23d9c70a537966e3a51e7", "Url": "https://api.github.com/repos/masconsult/ksoap2-android", "Date": "2014-01-30T17:31:06Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (contentLength > 0) { if (gZippedContent && (contentLength > 0)) { is = getUnZippedInputStream(new java.io.BufferedInputStream(connection.getErrorStream(), contentLength)); }else { is = new java.io.BufferedInputStream(connection.getErrorStream(), contentLength); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5251/buggy-version/ksoap2-j2se.src.main.java.org.ksoap2.transport.HttpTransportSE.java", "BodyUseAPI": ["org.ksoap2.transport.HttpTransportSE.getUnZippedInputStream(java.io.BufferedInputStream)"], "Fixed commit": "fc5eec2e37fa9ae719e23d9c70a537966e3a51e7", "Url": "https://api.github.com/repos/masconsult/ksoap2-android", "Date": "2014-01-30T17:31:06Z"},
{"Line": "=>1275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"\".equals(refItemId))) { displaydescription = billTypeName; }else { displaydescription = description; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8244/buggy-version/src.java.com.smi.travel.datalayer.bean.master.AJAXBean.java", "BodyUseAPI": [], "Fixed commit": "49e284373836bc501c07a8ae8acb14b73b3e8909", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-11-18T07:30:10Z"},
{"Line": "=>1294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"\".equals(refItemId))) { displaydescription = billTypeName; }else { displaydescription = description; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8244/buggy-version/src.java.com.smi.travel.datalayer.bean.master.AJAXBean.java", "BodyUseAPI": [], "Fixed commit": "49e284373836bc501c07a8ae8acb14b73b3e8909", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-11-18T07:30:10Z"},
{"Line": "=>1300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"\".equals(refItemId))) { displaydescription = billTypeName; }else { displaydescription = description; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8244/buggy-version/src.java.com.smi.travel.datalayer.bean.master.AJAXBean.java", "BodyUseAPI": [], "Fixed commit": "49e284373836bc501c07a8ae8acb14b73b3e8909", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-11-18T07:30:10Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tessoft.common.MessageBoxListAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((item.getUser()) != null) && ((com.tessoft.common.Util.isEmptyString(item.getUser().getUserName())) == false)) { android.widget.TextView txtUserName = ((android.widget.TextView) (row.findViewById(R.id.txtUserName))); txtUserName.setText(item.getUser().getUserName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5957/buggy-version/FavorForMe.src.com.tessoft.common.MessageBoxListAdapter.java", "BodyUseAPI": ["item.getUser().getUserName()", "com.tessoft.domain.UserMessage.getUser()", "android.widget.TextView.setText(item.getUser().getUserName())"], "Fixed commit": "7e664304d5b601903ef4c27ec01cff2df80d0ed1", "Url": "https://api.github.com/repos/kim2509/FavorForMe", "Date": "2015-02-09T09:37:40Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vo == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1462/buggy-version/ispyb-ejb.src.main.java.ispyb.server.mx.services.collections.DataCollectionGroup3ServiceBean.java", "BodyUseAPI": [], "Fixed commit": "c3d3228a9a7849f51ec274fc7069dc747fb4f3ae", "Url": "https://api.github.com/repos/delageniere/ISPyB", "Date": "2017-05-30T08:39:19Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (i < (friendImages.length)) friendImages[i] = cl.makinolas.atk.actors.enemies.MonsterFactory.getInstance().getHeroFriend(myFriends[i], 5).getFriendFaceSprite();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3490/buggy-version/core.src.cl.makinolas.atk.actors.LoadActor.java", "BodyUseAPI": [], "Fixed commit": "599c1549370789f65d82b2cf0d17b95e0cb5b08a", "Url": "https://api.github.com/repos/belisariops/ATK", "Date": "2016-11-21T19:44:46Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (bits > 63) mask = -1; else mask = (1L << bits) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/547/buggy-version/src.main.java.de.neemann.digital.core.ObservableValue.java", "BodyUseAPI": [], "Fixed commit": "a3a609178c0f6b9886a8b1e4d723f0525cb30e80", "Url": "https://api.github.com/repos/hneemann/Digital", "Date": "2017-03-04T16:29:12Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.berkeley.security.eventtracker.eventdata.EventCursor.getEvent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (currentEvent.isNamed()) { eventNames.add(currentEvent.mName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3145/buggy-version/src.edu.berkeley.security.eventtracker.prediction.PredictionService.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(currentEvent.mName)"], "Fixed commit": "eb4058217935c87e4a9f0195a2b2f7c4112cc299", "Url": "https://api.github.com/repos/adegtiar/Android-Activity-Tracker", "Date": "2011-09-11T07:33:58Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) instanceof java.lang.IllegalStateException) { if (org.overlord.rtgov.internal.activity.server.jee.JEEActivityServer.LOG.isLoggable(java.util.logging.Level.FINEST)) { org.overlord.rtgov.internal.activity.server.jee.JEEActivityServer.LOG.log(java.util.logging.Level.FINEST, \"UserTransaction not available - probably due to container managed txn\", e); } }else { org.overlord.rtgov.internal.activity.server.jee.JEEActivityServer.LOG.log(java.util.logging.Level.SEVERE, \"Failed to get UserTransaction\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8456/buggy-version/modules.activity-management.activity-server-jee.src.main.java.org.overlord.rtgov.internal.activity.server.jee.JEEActivityServer.java", "BodyUseAPI": ["java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,javax.naming.NamingException)", "java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,javax.naming.NamingException)"], "Fixed commit": "ca97fbfecad1079276b4c7bd1b5f0a391bce1796", "Url": "https://api.github.com/repos/ivanthelad/rtgov", "Date": "2014-11-07T20:08:08Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.overlord.rtgov.activity.server.rest.RESTActivityServer.LOG.isLoggable(java.util.logging.Level.FINEST)) { org.overlord.rtgov.activity.server.rest.RESTActivityServer.LOG.finest((((\"Store \" + (activities.size())) + \" activities: \") + acts)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8456/buggy-version/modules.activity-management.activity-server-rests.src.main.java.org.overlord.rtgov.activity.server.rest.RESTActivityServer.java", "BodyUseAPI": ["java.util.logging.Logger.finest((((\"Store \" + (activities.size())) + \" activities: \") + acts))"], "Fixed commit": "ca97fbfecad1079276b4c7bd1b5f0a391bce1796", "Url": "https://api.github.com/repos/ivanthelad/rtgov", "Date": "2014-11-07T20:08:08Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dest.getPositionX()) == (self.getPositionX())) { return new hacking.to.the.gate.Velocity(0, maxSpeed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/9192/buggy-version/app.src.main.java.hacking.to.the.gate.Velocity.java", "BodyUseAPI": [], "Fixed commit": "3a0197084003918d090bf8205725548e42e31b4a", "Url": "https://api.github.com/repos/Jelly-Yu/shooting-star", "Date": "2015-08-18T06:30:11Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((b[4]) == (CHAR_LF)) || ((b[4]) == (CHAR_CR))) { b[4] = CHAR_NULL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7050/buggy-version/src.main.java.co.elliotwright.jenkins.plugins.collapsingoutput.NewlineConsoleLogFilter.java", "BodyUseAPI": [], "Fixed commit": "a17530e4e9818d3371b6920555b6654e5d8ab140", "Url": "https://api.github.com/repos/seeruk/jenkins-styledconsole-plugin", "Date": "2016-02-03T13:19:58Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.forge.project.facets.DependencyFacet.resolveAvailableVersions(org.jboss.forge.project.dependencies.DependencyBuilder)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dependencies.isEmpty()) { throw new java.lang.RuntimeException(((\"Dependency \" + (dep1.toCoordinates())) + \" could not be resolved. Does your POM contain the correct repositories?\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8922/buggy-version/src.main.java.org.jboss.seam.forge.arquillian.container.Jboss7Managed.java", "BodyUseAPI": [], "Fixed commit": "7ef469b080b74b86e83ad93383d7266743a8452f", "Url": "https://api.github.com/repos/mojavelinux/forge-plugin-arquillian", "Date": "2011-06-28T18:07:12Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLollipopAndAbove()) { postLollipop = new github.nisrulz.lantern.PostLollipop(context); }else { preLollipop = new github.nisrulz.lantern.PreLollipop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1916/buggy-version/lantern.src.main.java.github.nisrulz.lantern.Lantern.java", "BodyUseAPI": [], "Fixed commit": "111d3a48a3d53bdda217c4a3693546493a71a39e", "Url": "https://api.github.com/repos/nisrulz/lantern", "Date": "2017-05-29T00:01:29Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.canBlockStay(world, i, j, k))) { world.setBlock(i, j, k, Blocks.water); this.dropBlockAsItem(world, i, j, k, new net.minecraft.item.ItemStack(this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4621/buggy-version/com.eternaldoom.realmsofchaos.blocks.BlockSeaweed.java", "BodyUseAPI": ["com.eternaldoom.realmsofchaos.blocks.BlockSeaweed.dropBlockAsItem(net.minecraft.world.World,int,int,int,net.minecraft.item.ItemStack)", "net.minecraft.world.World.setBlock(int,int,int,Blocks.water)"], "Fixed commit": "82723bc0c7e04d01eb7ba1ef1f4e447783c2a97d", "Url": "https://api.github.com/repos/Eternaldoom/Realms-of-Chaos", "Date": "2014-09-04T05:08:04Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rowIonAnnotations.size()) > 0) { io.github.msdk.datamodel.ionannotations.IonAnnotation firstionAnnotation = rowIonAnnotations.get(0); if (firstionAnnotation.isNA()) rowIonAnnotations.remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2501/buggy-version/msdk-id.msdk-id-localdatabasesearch.src.main.java.io.github.msdk.id.localdatabasesearch.LocalDatabaseSearchMethod.java", "BodyUseAPI": ["java.util.List<io.github.msdk.datamodel.ionannotations.IonAnnotation>.remove(int)", "java.util.List<io.github.msdk.datamodel.ionannotations.IonAnnotation>.get(int)"], "Fixed commit": "cdf0d5a8a28a8fb56581da8058d168a38d3bf593", "Url": "https://api.github.com/repos/tomas-pluskal/msdk", "Date": "2015-12-30T12:20:53Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.msdk.datamodel.featuretables.FeatureTable.getColumn(ColumnName.IONANNOTATION,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ionAnnotationColumn == null) { ionAnnotationColumn = io.github.msdk.datamodel.impl.MSDKObjectBuilder.getIonAnnotationFeatureTableColumn(); featureTable.addColumn(ionAnnotationColumn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2501/buggy-version/msdk-id.msdk-id-localdatabasesearch.src.main.java.io.github.msdk.id.localdatabasesearch.LocalDatabaseSearchMethod.java", "BodyUseAPI": [], "Fixed commit": "cdf0d5a8a28a8fb56581da8058d168a38d3bf593", "Url": "https://api.github.com/repos/tomas-pluskal/msdk", "Date": "2015-12-30T12:20:53Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node.getChildren()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4414/buggy-version/src.main.java.snmp.basic.SnmpNode.java", "BodyUseAPI": [], "Fixed commit": "f52de85cb7719cbd8f34e59a26bd9584386d0a2b", "Url": "https://api.github.com/repos/IOT-DSA/dslink-java-snmp-basic", "Date": "2015-05-29T19:12:04Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((issueResolutionProvider) instanceof org.eclipse.xtext.ui.editor.quickfix.IssueResolutionProviderExtension) { isQuickfixable = ((org.eclipse.xtext.ui.editor.quickfix.IssueResolutionProviderExtension) (issueResolutionProvider)).hasResolutionFor(issue); }else { isQuickfixable = issueResolutionProvider.hasResolutionFor(issue.getCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5546/buggy-version/plugins.org.eclipse.xtext.ui.src.org.eclipse.xtext.ui.editor.validation.AnnotationIssueProcessor.java", "BodyUseAPI": [], "Fixed commit": "67c301618647ab953e78d738e0d1951d775a1df4", "Url": "https://api.github.com/repos/knutwannheden/xtext", "Date": "2012-11-26T06:56:19Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (!(description == null)) { description = description.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7810/buggy-version/WhereIsMyStuff.app.src.main.java.cs2340.whereismystuff.model.ItemManager.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "a63ae05d0ae5e39ffa5a41aa1faf696e82a53d1d", "Url": "https://api.github.com/repos/davidwang888/Where-Is-My-Stuff", "Date": "2017-07-25T00:33:05Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (!(name == null)) { name = name.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7810/buggy-version/WhereIsMyStuff.app.src.main.java.cs2340.whereismystuff.model.ItemManager.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "a63ae05d0ae5e39ffa5a41aa1faf696e82a53d1d", "Url": "https://api.github.com/repos/davidwang888/Where-Is-My-Stuff", "Date": "2017-07-25T00:33:05Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pair.secondSlowest) != null) { utility = (java.lang.Math.min((slowestCurTime - slowestNewTime), (slowestCurTime - secondSlowestCurTime))) / (slowestNewCost - slowestCurCost); }else { utility = (slowestCurTime - slowestNewTime) / (slowestNewCost - slowestCurCost); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/237/buggy-version/src.mapred.org.apache.hadoop.mapred.workflow.schedulers.GreedySchedulingPlan.java", "BodyUseAPI": [], "Fixed commit": "531fb9058c88235ae47b33592064d4dab9c4cc7b", "Url": "https://api.github.com/repos/adwylie/hadoop", "Date": "2015-08-14T17:04:43Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pair.secondSlowest) != null) { org.apache.hadoop.mapred.workflow.TimePriceTable.TableKey secondSlowestCurKey = new org.apache.hadoop.mapred.workflow.TimePriceTable.TableKey(pair.secondSlowest.getJobName(), pair.secondSlowest.getMachineType(), pair.secondSlowest.isMapTask()); secondSlowestCurTime = table.get(secondSlowestCurKey).execTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/237/buggy-version/src.mapred.org.apache.hadoop.mapred.workflow.schedulers.GreedySchedulingPlan.java", "BodyUseAPI": ["org.apache.hadoop.mapred.workflow.scheduling.WorkflowTask.getJobName()", "org.apache.hadoop.mapred.workflow.scheduling.WorkflowTask.getMachineType()", "org.apache.hadoop.mapred.workflow.scheduling.WorkflowTask.isMapTask()"], "Fixed commit": "531fb9058c88235ae47b33592064d4dab9c4cc7b", "Url": "https://api.github.com/repos/adwylie/hadoop", "Date": "2015-08-14T17:04:43Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"save\".equalsIgnoreCase(action)) { request.setAttribute(\"refundAirline\", refundAirticket); }else { request.removeAttribute(\"refundAirline\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6122/buggy-version/src.java.com.smi.travel.controller.RefundAirlineController.java", "BodyUseAPI": [], "Fixed commit": "b4b4510473c99189d08f649e73ebcff067673c31", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-08-18T06:18:20Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((book.ProductService.instance) == null) { synchronized(book.ProductService.class) { if ((book.ProductService.instance) == null) { book.ProductService.instance = new book.ProductService(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8347/buggy-version/src.book.ProductService.java", "BodyUseAPI": [], "Fixed commit": "5c1f550cf501134b5265a905812dd833e90330f3", "Url": "https://api.github.com/repos/mattwylder/DSX2", "Date": "2015-05-19T00:38:05Z"},
{"Line": "=>737", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mToastView) != null) { layoutParams.height = ((java.lang.Integer) (valueAnimator.getAnimatedValue())); mToastView.setLayoutParams(layoutParams); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7798/buggy-version/supertoasts.src.com.github.johnpersano.supertoasts.SuperCardToast.java", "BodyUseAPI": [], "Fixed commit": "e97d4735fd0fc48f10bd45b7b1ef719ef4bcf104", "Url": "https://api.github.com/repos/JohnPersano/SuperToasts", "Date": "2013-12-29T19:30:20Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listOfIndex[i]) <= 0) { throw new seedu.address.logic.parser.exceptions.ParseException(java.lang.String.format(((MESSAGE_INVALID_COMMAND_FORMAT) + (seedu.address.logic.commands.ArrangeCommand.MESSAGE_USAGE)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5097/buggy-version/src.main.java.seedu.address.logic.parser.ArrangeCommandParser.java", "BodyUseAPI": [], "Fixed commit": "b4dfab8a77881a2b89113a3e9e493878f0f5ce7f", "Url": "https://api.github.com/repos/YuchenHe98/main", "Date": "2017-11-10T00:05:22Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((token) != null) { buf.append(((\"oauth_token=\\\"\" + (token)) + \"\\\",\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4164/buggy-version/src.main.java.com.github.seratch.signedrequest4j.SignedRequestImpl.java", "BodyUseAPI": ["java.lang.StringBuilder.append(((\"oauth_token=\\\"\" + (token)) + \"\\\",\"))"], "Fixed commit": "2d00bd404b0b8455f6f38104e0b04e2bc7bca5fe", "Url": "https://api.github.com/repos/seratch/signedrequest4j", "Date": "2011-03-04T08:14:56Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((index.intValue()) > 0) { for (int i = 1; i < (index.intValue()); i++) { rt = rt.multiply(base); } }else if ((index.intValue()) < 0) { for (int i = 0; i > (index.intValue()); i--) { rt = rt.divide(base, 10, java.math.BigDecimal.ROUND_HALF_UP); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3104/buggy-version/app.src.main.java.tw.vongola.simplecalculator.Calculaor.java", "BodyUseAPI": ["java.math.BigDecimal.intValue()", "java.math.BigDecimal.intValue()", "java.math.BigDecimal.intValue()"], "Fixed commit": "770a46c68e2d3af8e001efb3942fa6c6eddba3d9", "Url": "https://api.github.com/repos/vongola12324/SimpleCalculator", "Date": "2015-04-23T04:52:41Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.tisawesomeness.minecord.Config.getLogChannel().equals(\"0\"))) { Bot.jda.getTextChannelById(com.tisawesomeness.minecord.Config.getLogChannel()).sendMessage(m).queue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3282/buggy-version/src.com.tisawesomeness.minecord.util.MessageUtils.java", "BodyUseAPI": [], "Fixed commit": "86241366747f82fa4eec40c4ed2a716ac9a22bbd", "Url": "https://api.github.com/repos/Tisawesomeness/Minecord", "Date": "2017-09-07T15:43:54Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.tisawesomeness.minecord.Config.getLogChannel().equals(\"0\"))) { Bot.jda.getTextChannelById(com.tisawesomeness.minecord.Config.getLogChannel()).sendMessage(m).queue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3282/buggy-version/src.com.tisawesomeness.minecord.util.MessageUtils.java", "BodyUseAPI": [], "Fixed commit": "86241366747f82fa4eec40c4ed2a716ac9a22bbd", "Url": "https://api.github.com/repos/Tisawesomeness/Minecord", "Date": "2017-09-07T15:43:54Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cz.uhk.fim.skoreto.todolist.TaskDetailActivity.weatherCurrent.getDate()) != null) return cz.uhk.fim.skoreto.todolist.fragments.WeatherCurrentFragment.newInstance(cz.uhk.fim.skoreto.todolist.TaskDetailActivity.weatherCurrent); else return cz.uhk.fim.skoreto.todolist.fragments.WeatherErrorFragment.newInstance();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6262/buggy-version/app.src.main.java.cz.uhk.fim.skoreto.todolist.TaskDetailActivity.java", "BodyUseAPI": ["cz.uhk.fim.skoreto.todolist.fragments.WeatherCurrentFragment.newInstance(cz.uhk.fim.skoreto.todolist.model.Weather)"], "Fixed commit": "3cf75135bd7dcba019d3b0e3388d4b50bc8de81d", "Url": "https://api.github.com/repos/Skoreto/SmartList", "Date": "2017-01-29T09:39:05Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cz.uhk.fim.skoreto.todolist.TaskDetailActivity.listWeatherDaily.get(((cz.uhk.fim.skoreto.todolist.TaskDetailActivity.weatherDailyCount) - 1)).getDate()) != null) return cz.uhk.fim.skoreto.todolist.fragments.WeatherDailyFragment.newInstance(cz.uhk.fim.skoreto.todolist.TaskDetailActivity.listWeatherDaily, task, cz.uhk.fim.skoreto.todolist.TaskDetailActivity.weatherDaily); else return cz.uhk.fim.skoreto.todolist.fragments.WeatherErrorFragment.newInstance();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6262/buggy-version/app.src.main.java.cz.uhk.fim.skoreto.todolist.TaskDetailActivity.java", "BodyUseAPI": ["cz.uhk.fim.skoreto.todolist.fragments.WeatherDailyFragment.newInstance(java.util.List<cz.uhk.fim.skoreto.todolist.model.Weather>,cz.uhk.fim.skoreto.todolist.model.Task,cz.uhk.fim.skoreto.todolist.model.Weather)"], "Fixed commit": "3cf75135bd7dcba019d3b0e3388d4b50bc8de81d", "Url": "https://api.github.com/repos/Skoreto/SmartList", "Date": "2017-01-29T09:39:05Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((error != null) && ((error.getResponse()) != null)) && ((error.getResponse().getStatus()) == 401)) { io.telepat.sdk.utilities.TelepatLogger.log(\"Not logged in.\"); }else if ((error != null) && ((error.getMessage()) != null)) { io.telepat.sdk.utilities.TelepatLogger.log((\"Error subscribing: \" + (error.getMessage()))); }else { io.telepat.sdk.utilities.TelepatLogger.log(\"Error subscribing with unknown error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3518/buggy-version/src.main.java.io.telepat.sdk.models.Channel.java", "BodyUseAPI": ["retrofit.RetrofitError.getMessage()", "io.telepat.sdk.utilities.TelepatLogger.log((\"Error subscribing: \" + (error.getMessage())))", "retrofit.RetrofitError.getMessage()"], "Fixed commit": "508345950cae22087a204ba872a1e6442547449a", "Url": "https://api.github.com/repos/telepat-io/telepat-android-sdk", "Date": "2016-06-23T12:39:52Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isAttrExisted) { org.apache.hadoop.fs.XAttrSetFlag.validate(xAttr.getName(), false, flag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6666/buggy-version/giraffa-core.src.main.java.org.apache.giraffa.hbase.XAttrOp.java", "BodyUseAPI": [], "Fixed commit": "efcdae9b5ddea6cfb975e03c634864daaf238d9e", "Url": "https://api.github.com/repos/weilintsaiWand/giraffa", "Date": "2015-06-30T22:05:01Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((executionOptions) == null) { executionOptions = new azkaban.executor.ExecutionOptions(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1730/buggy-version/src.java.azkaban.trigger.builtin.ExecuteFlowAction.java", "BodyUseAPI": [], "Fixed commit": "9c5ed86642439ea457e831d5182bb4973cdaaf19", "Url": "https://api.github.com/repos/azkaban/azkaban2", "Date": "2013-11-06T01:36:42Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scrollPane) != null) { tablePanel.remove(scrollPane); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4466/buggy-version/src.gui.main.StudentG.java", "BodyUseAPI": [], "Fixed commit": "1db324ef6280ba9137c061d76733cca661a80704", "Url": "https://api.github.com/repos/robin1501/Projektarbeit", "Date": "2013-06-08T11:06:41Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((java.lang.Double.compare(preco, 0.0)) < 0) { throw new java.lang.IllegalArgumentException(\"N\u00e3o \u00e9 permitido produtos com valores negativos.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4101/buggy-version/src.br.loja.dominio.Produto.java", "BodyUseAPI": [], "Fixed commit": "d875ffc442fba0c5d0672cb518b276b377ae91d4", "Url": "https://api.github.com/repos/FelixCoutinho/curso-testes", "Date": "2014-09-29T13:33:04Z"},
{"Line": "=>720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c.isCurse) { cardType += context.getString(R.string.type_curse); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6902/buggy-version/app.src.main.java.com.mehtank.androminion.ui.CardView.java", "BodyUseAPI": [], "Fixed commit": "860c8f3bfaa32cfa0b8e21f28fc12a36c9aee60e", "Url": "https://api.github.com/repos/lfrancke/androminion", "Date": "2017-05-20T11:39:55Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((combo.getClientProperty(org.jboss.forge.netbeans.ui.wizard.component.ComboComponentBuilder.PROCESSING_STATE)) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/331/buggy-version/ui.src.main.java.org.jboss.forge.netbeans.ui.wizard.component.ComboComponentBuilder.java", "BodyUseAPI": [], "Fixed commit": "d023f33ac1ae8bf230ff68f832c1cf193bed90ff", "Url": "https://api.github.com/repos/forge/netbeans-plugin", "Date": "2015-06-20T13:43:31Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Syntax.AST.Env.get(Syntax.AST.Basic.Id)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (val == null) error(\"try to use undeclared identifier\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2370/buggy-version/src.Syntax.AST.Basic.Id.java", "BodyUseAPI": [], "Fixed commit": "5eb6b6ec282e2dcec4c7391bf6dd4fe6f4e07869", "Url": "https://api.github.com/repos/KaitoHH/CustomizeCompiler", "Date": "2017-01-05T06:27:07Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.util.Set<java.lang.String>>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((subscriptionMap.get(publisherId)) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8202/buggy-version/src.main.java.org.o3project.odenos.remoteobject.manager.EventSubscriptionObject.java", "BodyUseAPI": [], "Fixed commit": "4844002b9bee21078425b96bc2cc7254f2f2d80f", "Url": "https://api.github.com/repos/o3project/odenos", "Date": "2015-02-10T22:33:11Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (stack != null) this.fluidInv = stack.copy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/9117/buggy-version/src.main.java.frogcraftrebirth.common.lib.FrogFluidTank.java", "BodyUseAPI": ["net.minecraftforge.fluids.FluidStack.copy()"], "Fixed commit": "7469df141601291c0ece7418ff24cb3f85e5938b", "Url": "https://api.github.com/repos/3TUSK/FrogCraft-Rebirth", "Date": "2016-07-28T02:20:50Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.HONEYCOMB)) { android.content.res.TypedArray typedArray = mContext.getTheme().obtainStyledAttributes(R.style.AppTheme, new int[]{ android.R.attr.colorPressedHighlight }); return typedArray.getColor(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2810/buggy-version/TechRadar.src.com.tw.techradar.support.tabs.TabsAdapter.java", "BodyUseAPI": [], "Fixed commit": "a5bd97ea023bd30513ef830606e663d9936f2677", "Url": "https://api.github.com/repos/arjunk/ninja", "Date": "2012-11-29T05:35:38Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (gottMusIgAccount.isPresent()) { accountModel = org.apache.wicket.model.Model.of(gottMusIgAccount.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8447/buggy-version/src.main.java.com.gottmusig.components.account.CharacterOverviewPanel.java", "BodyUseAPI": [], "Fixed commit": "90016af5f6fa7646b543f39ac26d04f93e6397d7", "Url": "https://api.github.com/repos/GottMusIg/Frontend", "Date": "2017-07-02T13:26:54Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r instanceof bl.objects.Ausgangsrechnung) { c.setColspan(6); }else { c.setColspan(5); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7611/buggy-version/src.extras.PDFFile.java", "BodyUseAPI": [], "Fixed commit": "a2ab7802ea55a26fd60aa0698a3325a104f505bd", "Url": "https://api.github.com/repos/magicpat/BackOffice", "Date": "2012-04-16T17:30:58Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<java.lang.Integer>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (paramVerifie == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1438/buggy-version/src.concept.expression.Expression.java", "BodyUseAPI": [], "Fixed commit": "c668cd360224250c4a738aa6b3be31cfebfa6945", "Url": "https://api.github.com/repos/oanasuciu/compilateur1", "Date": "2014-04-08T16:00:42Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (groundTicks >= 5) { double stepModifier = (velocityModifier) ? 0.489 : 0; if (velocityModifier) { if (thisMove > stepModifier) { result.set(checkViolation(player, (((\"Moving too fast, onground_expected m=\" + thisMove) + \" e=\") + expected))); } }else { if (thisMove > expected) { result.set(checkViolation(player, (((\"Moving too fast, onground_expected m=\" + thisMove) + \" e=\") + expected))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7008/buggy-version/src.main.java.me.vrekt.arc.check.moving.Speed.java", "BodyUseAPI": [], "Fixed commit": "06bce90d7d33ba88a9a0532ded8b8cc9beff625c", "Url": "https://api.github.com/repos/Vrekt/Arc-v2", "Date": "2017-12-13T10:30:19Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((constructionWindow) != null) constructionWindow.setProcess(getProcess());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6288/buggy-version/TownSimulator.src.com.TownSimulator.entity.building.Building.java", "BodyUseAPI": [], "Fixed commit": "52182520f73ad3947ec6037d54641f2af0439d1d", "Url": "https://api.github.com/repos/LuciusYu/TownSimulator", "Date": "2014-04-29T10:20:46Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.yes.cart.service.domain.ContentService.getContentTemplate(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(template)) { if (CentralViewLabel.DYNOCONTENT.equals(template)) { return org.yes.cart.web.support.service.impl.CentralViewResolverContentImpl.DEFAULT_DYNO; } return new org.yes.cart.domain.misc.Pair<java.lang.String, java.lang.String>(template, org.yes.cart.web.support.constants.CentralViewLabel.CONTENT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4493/buggy-version/web.support.src.main.java.org.yes.cart.web.support.service.impl.CentralViewResolverContentImpl.java", "BodyUseAPI": ["CentralViewLabel.DYNOCONTENT.equals(java.lang.String)"], "Fixed commit": "87bdb1d5f4383280abc5f2ca314716cfc6241ffc", "Url": "https://api.github.com/repos/inspire-software/yes-cart", "Date": "2015-11-07T19:55:57Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GlobalVariables.matchingMetricKeysAssociatedWithMetricGroup.get(alert.getMetricGroupId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (matchingMetricKeysAssociatedWithMetricGroup != null) { synchronized(matchingMetricKeysAssociatedWithMetricGroup) { matchingMetricKeysAssociatedWithMetricGroup_Local = new java.util.ArrayList<>(matchingMetricKeysAssociatedWithMetricGroup); } }else { matchingMetricKeysAssociatedWithMetricGroup_Local = new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2640/buggy-version/src.main.java.com.pearson.statsagg.alerts.MetricAssociation.java", "BodyUseAPI": [], "Fixed commit": "b07175a901cbfee842feb95a545415e3ad516a24", "Url": "https://api.github.com/repos/PearsonEducation/StatsAgg", "Date": "2015-03-27T05:43:43Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.ImmutableMap<java.lang.String, annis.model.QueryNode>.get(e.getReferencedNode())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (referencedNode == null) { throw new annis.exceptions.AnnisQLSemanticsException((((((\"No such node \\\"\" + (e.getReferencedNode())) + \"\\\". \") + \"Your query contains \") + (alternative.size())) + \" node(s), make sure no node definition numbers are greater than this number\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4909/buggy-version/annis-service.src.main.java.annis.sqlgen.FrequencySqlGenerator.java", "BodyUseAPI": [], "Fixed commit": "6fc4dd2ad8896f21952598a7c4569bba187244d7", "Url": "https://api.github.com/repos/thomaskrause/ANNIS", "Date": "2013-10-28T13:18:19Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(opened.get())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7594/buggy-version/core.src.main.java.org.everit.osgi.referencetracker.ReferenceTracker.java", "BodyUseAPI": [], "Fixed commit": "2bca9c671d65593248749e07bb31a765d0b108ed", "Url": "https://api.github.com/repos/everit-org/osgi-reference-tracker", "Date": "2014-09-10T16:16:07Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSirenListener) != null) { mSirenListener.onShowUpdateDialog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1319/buggy-version/library.src.main.java.com.eggheadgames.siren.SirenAlertWrapper.java", "BodyUseAPI": [], "Fixed commit": "30eb8f687fcff5c26cdd7a7fd064fc0e82c6955e", "Url": "https://api.github.com/repos/eggheadgames/Siren", "Date": "2016-03-18T21:15:17Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Random.nextInt(levels.size())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((levels.get(randIndex)) == null) { java.lang.System.out.println(\"WHOOPSY\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2593/buggy-version/src.dk.itu.mario.level.generator.MyLevelGenerator.java", "BodyUseAPI": [], "Fixed commit": "3d3bd4e2b822e5ed268952ccd6d9751446be1804", "Url": "https://api.github.com/repos/Forscyvus/mario-level-generator", "Date": "2015-04-28T21:18:29Z"},
{"Line": "=>957", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!join) && (((java.lang.Math.abs(sweepAngle)) - ((java.lang.Math.PI) * 2)) < 0.001)) { p.closePath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5971/buggy-version/CodenameOne.src.com.codename1.ui.geom.GeneralPath.java", "BodyUseAPI": [], "Fixed commit": "7a778cc861d44148d363ede1789726e77de7f59c", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2017-03-15T22:46:25Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((i != 5) && (i != 10)) && (i != 19)) && (i != 20)) { if (yPos < minHeight) { yPos = minHeight; c.drawLine((startLineX + spacing), yPos, (endLineX + spacing), yPos, incPaint); }else if ((yPos > minHeight) && (yPos < (base - 2))) { c.drawLine((startLineX + spacing), yPos, (endLineX + spacing), yPos, incPaint); if (yPos < barHeight) { android.util.Log.d(\"GraphView\", (\"Line 496: Increase arrow at: \" + i)); c.drawBitmap(incArrow, ((startLineX + bitmapXSpacing) + spacing), (yPos - bitmapYB), null); }else { android.util.Log.d(\"GraphView\", (\"Line 500: Increase arrow at: \" + i)); c.drawBitmap(incArrow, ((startLineX + bitmapXSpacing) + spacing), (barHeight - bitmapYB), null); } } }else { if (yPos < minHeight) { yPos = minHeight; c.drawLine((startLineX + spacing), yPos, (endLineX + spacing), yPos, decPaint); c.drawBitmap(decArrow, ((startLineX + bitmapXSpacing) + spacing), (yPos + bitmapYA), null); }else if ((yPos > minHeight) && (yPos < (base - 2))) { c.drawLine((startLineX + spacing), yPos, (endLineX + spacing), yPos, decPaint); if (yPos < barHeight) { android.util.Log.d(\"GraphView\", (\"Line 512: Decrease arrow at: \" + i)); c.drawBitmap(decArrow, ((startLineX + bitmapXSpacing) + spacing), (yPos - bitmapYB), null); }else { android.util.Log.d(\"GraphView\", (\"Line 515: Decrease arrow at: \" + i)); c.drawBitmap(decArrow, ((startLineX + bitmapXSpacing) + spacing), (barHeight - bitmapYB), null); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8294/buggy-version/Cart.src.com.christine.cart.visual.GraphView.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)"], "Fixed commit": "ae46d9a95671f07d1094ac7ff4b314bc2eef2696", "Url": "https://api.github.com/repos/wusujen/SaS", "Date": "2012-04-12T03:31:21Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (yPos < barHeight) { android.util.Log.d(\"GraphView\", (\"Line 512: Decrease arrow at: \" + i)); c.drawBitmap(decArrow, ((startLineX + bitmapXSpacing) + spacing), (yPos - bitmapYB), null); }else { android.util.Log.d(\"GraphView\", (\"Line 515: Decrease arrow at: \" + i)); c.drawBitmap(decArrow, ((startLineX + bitmapXSpacing) + spacing), (barHeight - bitmapYB), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8294/buggy-version/Cart.src.com.christine.cart.visual.GraphView.java", "BodyUseAPI": ["android.graphics.Canvas.drawBitmap(android.graphics.Bitmap,int,int,<nulltype>)", "android.graphics.Canvas.drawBitmap(android.graphics.Bitmap,int,int,<nulltype>)"], "Fixed commit": "ae46d9a95671f07d1094ac7ff4b314bc2eef2696", "Url": "https://api.github.com/repos/wusujen/SaS", "Date": "2012-04-12T03:31:21Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.ObjectMapper.convertValue(com.fasterxml.jackson.databind.JsonNode,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((record.getRefDatasetUrn()) != null) { java.util.Map<java.lang.String, java.lang.Object> refDataset = models.daos.DatasetDao.getDatasetByUrn(record.getRefDatasetUrn()); if (refDataset != null) { record.setRefDatasetId(((java.lang.Long) (refDataset.get(\"id\"))).intValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/108/buggy-version/backend-service.app.models.daos.DatasetDao.java", "BodyUseAPI": ["models.daos.DatasetDao.getDatasetByUrn(record.getRefDatasetUrn())", "wherehows.common.schemas.DatasetRecord.setRefDatasetId(int)", "wherehows.common.schemas.DatasetRecord.getRefDatasetUrn()"], "Fixed commit": "c66b00e2f66cde08d8cf7887c42c444876584f64", "Url": "https://api.github.com/repos/linkedin/WhereHows", "Date": "2016-03-18T22:26:55Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.baracus.context.BaracusApplicationContext.init) { org.baracus.context.BaracusApplicationContext.beanContainer.removeBean(element.getClass()); org.baracus.context.BaracusApplicationContext.beanContainer.holdBean(element.getClass(), element); org.baracus.context.BaracusApplicationContext.beanContainer.performInjections(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1347/buggy-version/src.main.java.org.baracus.context.BaracusApplicationContext.java", "BodyUseAPI": [], "Fixed commit": "47f630d5de32adf3ff8392bea322a0b388db999d", "Url": "https://api.github.com/repos/gorefest/baracus-framework", "Date": "2016-01-24T16:42:01Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.baracus.context.BaracusApplicationContext.init) { org.baracus.context.BaracusApplicationContext.beanContainer.removeBean(element.getClass()); org.baracus.context.BaracusApplicationContext.beanContainer.holdBean(element.getClass(), element); org.baracus.context.BaracusApplicationContext.beanContainer.performInjections(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1347/buggy-version/src.main.java.org.baracus.context.BaracusApplicationContext.java", "BodyUseAPI": [], "Fixed commit": "47f630d5de32adf3ff8392bea322a0b388db999d", "Url": "https://api.github.com/repos/gorefest/baracus-framework", "Date": "2016-01-24T16:42:01Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(value.equals(com.ragnarok.jparseutil.util.Util.STRING_NULL_LITERAL))) { value = value.substring(1, ((value.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5958/buggy-version/src.main.java.com.ragnarok.jparseutil.util.Util.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "cbcc4a49112e49b621d500ad805999f4f5dc2f34", "Url": "https://api.github.com/repos/ragnraok/JParserUtil", "Date": "2015-06-22T16:42:28Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nokogiri.XmlNode.children(org.jruby.runtime.ThreadContext)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((xmlNodeSet.length()) > 0) { org.jruby.RubyArray array = ((org.jruby.RubyArray) (xmlNodeSet.to_a(context))); for (int i = 0; i < (array.getLength()); i++) { java.lang.Object item = array.get(i); if (item instanceof nokogiri.XmlNode) { nokogiri.XmlNode cur = ((nokogiri.XmlNode) (item)); cur.accept(context, visitor); }else if (item instanceof nokogiri.XmlNamespace) { nokogiri.XmlNamespace cur = ((nokogiri.XmlNamespace) (item)); cur.accept(context, visitor); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1170/buggy-version/ext.java.nokogiri.XmlNode.java", "BodyUseAPI": ["nokogiri.XmlNodeSet.to_a(org.jruby.runtime.ThreadContext)"], "Fixed commit": "5aacda4a5bb758679e07f9f8d4d265202c21c359", "Url": "https://api.github.com/repos/koichiro/nokogiri", "Date": "2011-11-02T19:36:30Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.unb.cic.iris.persistence.sqlite3.FolderDAO.findByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (folderEntity == null) { folderEntity = new br.unb.cic.iris.core.model.IrisFolder(folder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8065/buggy-version/iris-core.src.main.java.br.unb.cic.iris.core.SystemFacade.java", "BodyUseAPI": [], "Fixed commit": "e2e7b1d5629fdd1f70befa1dacb34db10b655cf5", "Url": "https://api.github.com/repos/iris-email-client/iris-aspect-oriented-programming", "Date": "2014-11-23T23:03:21Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.math.BigInteger.multiply(java.math.BigInteger)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.math.BigInteger.valueOf(delay.longValue()).equals(delay))) { return maxDelay; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1261/buggy-version/nflow-engine.src.main.java.com.nitorcreations.nflow.engine.workflow.definition.WorkflowSettings.java", "BodyUseAPI": [], "Fixed commit": "7a779676af79c5d99749b86f3bfec794b28f6f34", "Url": "https://api.github.com/repos/NitorCreations/nflow", "Date": "2014-10-22T19:18:25Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (xdroid.eventbus.BuildConfig.SNAPSHOT) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8296/buggy-version/lib-eventbus.src.main.java.xdroid.eventbus.EventDeliveryOptions.java", "BodyUseAPI": [], "Fixed commit": "b39e1394836368dbbb8ecce54bceccc4981ec3d3", "Url": "https://api.github.com/repos/shamanland/xdroid", "Date": "2014-07-04T20:16:24Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (xdroid.eventbus.BuildConfig.SNAPSHOT) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8296/buggy-version/lib-eventbus.src.main.java.xdroid.eventbus.EventDeliveryOptions.java", "BodyUseAPI": [], "Fixed commit": "b39e1394836368dbbb8ecce54bceccc4981ec3d3", "Url": "https://api.github.com/repos/shamanland/xdroid", "Date": "2014-07-04T20:16:24Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scheduledTime > (currentTime)) { currentTime = scheduledTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1421/buggy-version/robolectric-utils.src.main.java.org.robolectric.util.Scheduler.java", "BodyUseAPI": [], "Fixed commit": "558c5ecec6f3493d72536fd4469d44a841742cb8", "Url": "https://api.github.com/repos/jongerrish/robolectric", "Date": "2015-04-24T17:08:57Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isConstantlyIdling) { advanceToLastPostedRunnable(); }else if (!(paused)) { advanceBy(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1421/buggy-version/robolectric-utils.src.main.java.org.robolectric.util.Scheduler.java", "BodyUseAPI": [], "Fixed commit": "558c5ecec6f3493d72536fd4469d44a841742cb8", "Url": "https://api.github.com/repos/jongerrish/robolectric", "Date": "2015-04-24T17:08:57Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getExpireDate()) == null) { iData.setExpirationDate(null); }else { iData.setExpirationDate(item.getExpireDate().toJavaUtilDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7853/buggy-version/src.gui.inventory.InventoryController.java", "BodyUseAPI": ["gui.inventory.ItemData.setExpirationDate(item.getExpireDate().toJavaUtilDate())", "item.getExpireDate().toJavaUtilDate()", "model.IItem.getExpireDate()"], "Fixed commit": "c334d947f53d4e4df722e017d94c79d37c88e1f3", "Url": "https://api.github.com/repos/djhaskin987/snake", "Date": "2013-11-02T18:42:42Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (completedPageNumbers.contains(page.pageNumber)) { play.Logger.error(\"There are duplicate pages in listing id [2]: %s; removing page: %s\", id, page.toString()); toRemove.add(page); }else { completedPageNumbers.add(page.pageNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5181/buggy-version/app.models.Listing.java", "BodyUseAPI": ["java.util.ArrayList<models.Page>.add(models.Page)", "java.util.ArrayList<java.lang.Long>.add(page.pageNumber)", "play.Logger.error(java.lang.String,java.lang.Long,page.toString())", "models.Page.toString()"], "Fixed commit": "a1ab20e43cce5f33d0990cc8434d55f4cd8c8bf0", "Url": "https://api.github.com/repos/alphagov/supplier-submission-portal", "Date": "2014-12-15T13:19:55Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(toRemove.isEmpty())) { for (models.Page pageToRemove : toRemove) { completedPages.remove(pageToRemove); } update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5181/buggy-version/app.models.Listing.java", "BodyUseAPI": [], "Fixed commit": "a1ab20e43cce5f33d0990cc8434d55f4cd8c8bf0", "Url": "https://api.github.com/repos/alphagov/supplier-submission-portal", "Date": "2014-12-15T13:19:55Z"},
{"Line": "=>728", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newPage == (featureModelEditor.textEditor.getIndex())) featureModelEditor.textEditor.updateTextEditor();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1842/buggy-version/plugins.de.ovgu.featureide.fm.ui.src.de.ovgu.featureide.fm.ui.editors.FeatureDiagramEditor.java", "BodyUseAPI": ["featureModelEditor.textEditor.updateTextEditor()"], "Fixed commit": "55522bfe66f106cb924d87d0cb7037a9c6f6e445", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2014-10-06T15:32:32Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.getServer().get().getPlayer(playerName).orNull()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (player != null) { return new org.getlwc.sponge.entity.SpongePlayer(player); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/575/buggy-version/mods.sponge.src.main.java.org.getlwc.sponge.SpongeServerLayer.java", "BodyUseAPI": [], "Fixed commit": "8fd022dc4ef99643b840f3f58074abbaf19adbec", "Url": "https://api.github.com/repos/Hidendra/LWC", "Date": "2014-12-09T22:31:03Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (userid == null) { res.sendRedirect(\"/\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7460/buggy-version/src.main.java.org.t246osslab.easybuggy4sb.vulnerabilities.UnintendedFileDisclosureController.java", "BodyUseAPI": [], "Fixed commit": "f8d47f73a087fbd425fa8237d184966814848ae3", "Url": "https://api.github.com/repos/k-tamura/easybuggy4sb", "Date": "2017-08-30T02:23:12Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.biojava.nbio.structure.StructureTools.hasNonDeuteratedEquiv(atom, group)) { }else { group.addAtom(atom); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5482/buggy-version/biojava-structure.src.main.java.org.biojava.nbio.structure.io.mmtf.MmtfStructureReader.java", "BodyUseAPI": ["org.biojava.nbio.structure.Group.addAtom(org.biojava.nbio.structure.Atom)"], "Fixed commit": "b7f28dd3f6a7fe9f4369fe5bbc5c7fb9eb65ca15", "Url": "https://api.github.com/repos/lafita/biojava", "Date": "2016-08-03T23:57:48Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spoon.support.visitor.MethodTypingContext.getIndexOfTypeParam(scopeParam.getTypeParameterDeclarer(),spoon.reflect.reference.CtTypeReference<?>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idxOfScopeBoundTypeParam >= 0) { int idxOfSuperBoundTypeParam = getIndexOfTypeParam(superParam.getTypeParameterDeclarer(), superBound); if (idxOfScopeBoundTypeParam >= 0) { return idxOfScopeBoundTypeParam == idxOfSuperBoundTypeParam; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1956/buggy-version/src.main.java.spoon.support.visitor.MethodTypingContext.java", "BodyUseAPI": [], "Fixed commit": "a758211e5531698c8078f4013b2df33abd251237", "Url": "https://api.github.com/repos/pvojtechovsky/spoon", "Date": "2017-10-22T18:02:43Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MotionEvent.obtain(android.view.MotionEvent)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((event.getPointerCount()) > 1) { return super.onTouchEvent(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7146/buggy-version/app.src.webkit.java.org.mozilla.focus.webkit.NestedWebView.java", "BodyUseAPI": ["android.webkit.WebView.onTouchEvent(android.view.MotionEvent)"], "Fixed commit": "3c35a5df05f11d269c678df19d1e961d74418ff3", "Url": "https://api.github.com/repos/Conjuror/Rocket", "Date": "2017-08-03T06:39:05Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (preWildTeleportEvent.isCancelled()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8788/buggy-version/src.main.java.net.poweredbyhate.wildtp.TeleportGoneWild.java", "BodyUseAPI": [], "Fixed commit": "acb6d40ed8224ba09af037eee3b5574e415d72f4", "Url": "https://api.github.com/repos/AcmeProject/WildernessTp", "Date": "2016-05-10T09:27:58Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (openingTagName.contentEquals(MzMLTags.TAG_PRODUCT)) { vars.product = new io.github.msdk.io.mzml.data.MzMLProduct(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1350/buggy-version/msdk-io.msdk-io-mzml.src.main.java.io.github.msdk.io.mzml.data.MzMLParser.java", "BodyUseAPI": [], "Fixed commit": "25fd79b2cff4ecd7b7885299734e919e0240d2ad", "Url": "https://api.github.com/repos/adhi1419/msdk", "Date": "2017-08-21T18:21:43Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tracker.inside(MzMLTags.TAG_PRODUCT)) { if ((vars.product) == null) java.lang.System.out.println(xmlStreamReader.getLocation().getLineNumber()); vars.product.setIsolationWindow(vars.isolationWindow); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1350/buggy-version/msdk-io.msdk-io-mzml.src.main.java.io.github.msdk.io.mzml.data.MzMLParser.java", "BodyUseAPI": [], "Fixed commit": "25fd79b2cff4ecd7b7885299734e919e0240d2ad", "Url": "https://api.github.com/repos/adhi1419/msdk", "Date": "2017-08-21T18:21:43Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (propertyName.equalsIgnoreCase(infodynamics.measures.continuous.COND_EMBED_LENGTHS_PROP_NAME)) { if ((condEmbedDims) == null) { return \"\"; }else { return infodynamics.utils.MatrixUtils.arrayToString(condEmbedDims); } }else if (propertyName.equalsIgnoreCase(infodynamics.measures.continuous.COND_EMBED_DELAYS_PROP_NAME)) { if ((cond_taus) == null) { return \"\"; }else { return infodynamics.utils.MatrixUtils.arrayToString(cond_taus); } }else if (propertyName.equalsIgnoreCase(infodynamics.measures.continuous.COND_DELAYS_PROP_NAME)) { if ((condDelays) == null) { return \"\"; }else { return infodynamics.utils.MatrixUtils.arrayToString(condDelays); } }else { return condMiCalc.getProperty(propertyName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4348/buggy-version/java.source.infodynamics.measures.continuous.ConditionalTransferEntropyCalculatorViaCondMutualInfo.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(infodynamics.measures.continuous.COND_DELAYS_PROP_NAME)", "java.lang.String.equalsIgnoreCase(infodynamics.measures.continuous.COND_EMBED_DELAYS_PROP_NAME)", "infodynamics.measures.continuous.ConditionalMutualInfoCalculatorMultiVariate.getProperty(java.lang.String)"], "Fixed commit": "0e40ec2401ea9cd7d08d6eb69db65adf58d92dd2", "Url": "https://api.github.com/repos/jlizier/jidt", "Date": "2017-08-22T14:18:41Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cond_taus) == null) { return \"\"; }else { return infodynamics.utils.MatrixUtils.arrayToString(cond_taus); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4348/buggy-version/java.source.infodynamics.measures.continuous.ConditionalTransferEntropyCalculatorViaCondMutualInfo.java", "BodyUseAPI": [], "Fixed commit": "0e40ec2401ea9cd7d08d6eb69db65adf58d92dd2", "Url": "https://api.github.com/repos/jlizier/jidt", "Date": "2017-08-22T14:18:41Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((condDelays) == null) { return \"\"; }else { return infodynamics.utils.MatrixUtils.arrayToString(condDelays); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4348/buggy-version/java.source.infodynamics.measures.continuous.ConditionalTransferEntropyCalculatorViaCondMutualInfo.java", "BodyUseAPI": [], "Fixed commit": "0e40ec2401ea9cd7d08d6eb69db65adf58d92dd2", "Url": "https://api.github.com/repos/jlizier/jidt", "Date": "2017-08-22T14:18:41Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(twoOfAKind)) && (twoOfSameSuit)) { if (checkWidowRaiseValue()) { this.playerDecision.playerIntention = 2; }else { if (checkTomakeNewTOK()) { this.playerDecision.playerIntention = 1; }else { makeBestRandomMove(); } } }else { makeBestRandomMove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2294/buggy-version/MAS_Thirtyone.src.mas_thirtyone.player.java", "BodyUseAPI": [], "Fixed commit": "4db1f533ec02da2fef662e3b11b8138a25e2a01c", "Url": "https://api.github.com/repos/HiradEmami/ThirtyoneCard", "Date": "2017-03-29T16:38:50Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getBoolean(getString(R.string.syncing),boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (showSyncing) { com.example.chrissebesta.nyccyclemap.sync.CycleDataSyncAdapter.syncImmediately(getApplicationContext()); mProgressBar.setVisibility(View.VISIBLE); mLoadingText.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3376/buggy-version/app.src.main.java.com.example.chrissebesta.nyccyclemap.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a2571033f1a43c7241cebb28b9cc030c05853dc3", "Url": "https://api.github.com/repos/zebesta/NYC-Cycle-Map", "Date": "2016-05-24T16:53:12Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rootView) != null) { com.dante.knowledge.utils.UI.showSnackLong(rootView, R.string.load_fail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7219/buggy-version/app.src.main.java.com.dante.knowledge.mvp.view.FreshDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "b5063818a3b30e3e72e09825a7358c06cc5c3f7e", "Url": "https://api.github.com/repos/DanteAndroid/Knowledge", "Date": "2016-03-18T02:16:01Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mRefreshing) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1282/buggy-version/LRecyclerview_library.src.main.java.com.github.jdsjlzx.recyclerview.LRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "8464cef5afaca58100541a61e3545254400326b3", "Url": "https://api.github.com/repos/jdsjlzx/LRecyclerView", "Date": "2017-03-14T03:41:30Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.invoke(java.lang.Object,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result != null) { return this.action.invoke(target, parameters).toString(); }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5594/buggy-version/src.main.java.com.xboxng.xnshell.CommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "b28333f5820f8b19f372956ab0fad06491cc4e12", "Url": "https://api.github.com/repos/qiangyu/xnshell", "Date": "2015-01-16T23:22:52Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (removeAll) net.TheDgtl.Stargate.Portal.allPortals.remove(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2872/buggy-version/src.net.TheDgtl.Stargate.Portal.java", "BodyUseAPI": [], "Fixed commit": "9473ca8f6f5575d18652a0212f5d6e859e4053c6", "Url": "https://api.github.com/repos/TheDgtl/Stargate-Bukkit", "Date": "2011-03-15T02:26:04Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["atta.channel.isClosed()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!closed) { tryWrite(key, org.httpkit.HttpUtils.WsEncode(WSDecoder.OPCODE_CLOSE, frame.data)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3241/buggy-version/src.java.org.httpkit.server.HttpServer.java", "BodyUseAPI": [], "Fixed commit": "ca9b1028ae21ab84faa10c351baabb822facba5d", "Url": "https://api.github.com/repos/http-kit/http-kit", "Date": "2016-12-07T11:41:10Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.uff.sti.DAO.Data.getStudent(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentStudent == null) { java.lang.System.out.println(\"Matricula inexistente\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4123/buggy-version/src.br.uff.sti.main.Engine.java", "BodyUseAPI": [], "Fixed commit": "1f2e0432c79021e9a0cd12feb302189659bd480e", "Url": "https://api.github.com/repos/joaorulff/desafio", "Date": "2016-12-05T10:15:19Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hubspot.blazar.data.service.BranchService.lookup(gitInfo.getHost(),gitInfo.getOrganization(),gitInfo.getRepository(),gitInfo.getBranch())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (fullGitInfo.isPresent()) { java.util.Set<java.lang.Module> modules = moduleService.getByBranch(fullGitInfo.get().getId().get()); recordEvents(modules, pullRequestEvent.getPullRequestOrBuilder().getUser().getUsername()); }else { com.hubspot.blazar.util.GitHubWebhookHandler.LOG.info(\"Not creating events for pr# {} on repository {}, no matching branches found\", pullRequestEvent.getNumber(), pullRequestEvent.getRepository().getFullName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5759/buggy-version/BlazarService.src.main.java.com.hubspot.blazar.util.GitHubWebhookHandler.java", "BodyUseAPI": ["fullGitInfo.get().getId()", "com.google.common.base.Optional<com.hubspot.blazar.base.GitInfo>.get()", "fullGitInfo.get().getId().get()", "com.hubspot.blazar.data.service.ModuleService.getByBranch(fullGitInfo.get().getId().get())"], "Fixed commit": "5380e6ab65f02851e980f040468e7a754e68814c", "Url": "https://api.github.com/repos/HubSpot/Blazar", "Date": "2015-10-20T19:25:39Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.sourceforge.pmd.util.StringUtil.isEmpty(valueString)) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8533/buggy-version/pmd-core.src.main.java.net.sourceforge.pmd.lang.rule.properties.AbstractMultiValueProperty.java", "BodyUseAPI": [], "Fixed commit": "12b1e475e6a06a4fbaca6d9d7869114d3ebb3c60", "Url": "https://api.github.com/repos/oowekyala/pmd", "Date": "2017-07-12T17:54:49Z"},
{"Line": "=>711", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((obj instanceof java.util.Date) || (obj instanceof java.sql.Date)) || (obj instanceof java.sql.Timestamp)) { rcv = dateFormat_hms.format(obj); }else { rcv = resultSet.getString((i + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1338/buggy-version/ses-web.src.main.java.com.ai.paas.ipaas.ses.dataimport.impt.task.ExtractAndImportTask.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(java.lang.Object)"], "Fixed commit": "f4210a7c4e038101016b07e802dae9f83302a386", "Url": "https://api.github.com/repos/AIPaaS/service-sdk-ses", "Date": "2016-11-07T09:44:47Z"},
{"Line": "=>851", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((obj instanceof java.util.Date) || (obj instanceof java.sql.Date)) || (obj instanceof java.sql.Timestamp)) { rcv = dateFormat_hms.format(obj); }else { rcv = resultSet.getString((i + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1338/buggy-version/ses-web.src.main.java.com.ai.paas.ipaas.ses.dataimport.impt.task.ExtractAndImportTask.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(java.lang.Object)"], "Fixed commit": "f4210a7c4e038101016b07e802dae9f83302a386", "Url": "https://api.github.com/repos/AIPaaS/service-sdk-ses", "Date": "2016-11-07T09:44:47Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((square.thing) != null) && ((square.thing.square) != square)) oops(\"Wrong square.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8075/buggy-version/game-engine.GameLoop.java", "BodyUseAPI": [], "Fixed commit": "fb28dab168fde0def78e5e0ac1e9ce1cce031925", "Url": "https://api.github.com/repos/klauswuestefeld/zap", "Date": "2014-08-31T23:55:38Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((t.square) != null) && ((t.square.thing) != t)) oops(\"Wrong thing!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8075/buggy-version/game-engine.GameLoop.java", "BodyUseAPI": [], "Fixed commit": "fb28dab168fde0def78e5e0ac1e9ce1cce031925", "Url": "https://api.github.com/repos/klauswuestefeld/zap", "Date": "2014-08-31T23:55:38Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldSquare != null) oldSquare.thing = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8075/buggy-version/game-engine.Square.java", "BodyUseAPI": [], "Fixed commit": "fb28dab168fde0def78e5e0ac1e9ce1cce031925", "Url": "https://api.github.com/repos/klauswuestefeld/zap", "Date": "2014-08-31T23:55:38Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldVersion <= 13) { db.execSQL(java.lang.String.format((\"DELETE FROM %s WHERE %s NOT IN \" + \"(SELECT MIN(%s) as %s FROM %s GROUP BY %s,%s,%s,%s,%s)\"), PodDBAdapter.TABLE_NAME_SIMPLECHAPTERS, PodDBAdapter.KEY_ID, PodDBAdapter.KEY_ID, PodDBAdapter.KEY_ID, PodDBAdapter.TABLE_NAME_SIMPLECHAPTERS, PodDBAdapter.KEY_TITLE, PodDBAdapter.KEY_START, PodDBAdapter.KEY_FEEDITEM, PodDBAdapter.KEY_LINK, PodDBAdapter.KEY_CHAPTER_TYPE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4815/buggy-version/app.src.main.java.de.danoeh.antennapod.config.StorageCallbacksImpl.java", "BodyUseAPI": [], "Fixed commit": "389e1accdd1b753372a03d80b9ad9da3cd54aec4", "Url": "https://api.github.com/repos/AntennaPod/AntennaPod", "Date": "2015-01-08T12:12:45Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (p != null) { x = ((double) (p.x)); y = ((double) (p.y)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4597/buggy-version/src.main.PostgreSQLJDBC.java", "BodyUseAPI": [], "Fixed commit": "b288f633fbb9df1f62ead9d878a0a27b2b19212f", "Url": "https://api.github.com/repos/cdbean/Postgres_import_java", "Date": "2013-08-21T19:47:29Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loadFactor < 1) { fn = \"get_znizena_miera_spotreby\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5830/buggy-version/src.main.java.sk.uniza.fri.pds.spotreba.energie.service.SeHistoriaService.java", "BodyUseAPI": [], "Fixed commit": "65f2f51bd862b169b01898939f50230c2abba54c", "Url": "https://api.github.com/repos/PatoHrmo/spotreba-energie", "Date": "2017-01-08T16:09:30Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tag) != null) jsonObject.put(com.integreight.onesheeld.shields.controller.utils.NotificationObject.NOTIFICATION_TAG, tag);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5832/buggy-version/oneSheeld.src.main.java.com.integreight.onesheeld.shields.controller.utils.NotificationObject.java", "BodyUseAPI": [], "Fixed commit": "00e8922bdc713908fa08f5bf9fb6fe74c35801bd", "Url": "https://api.github.com/repos/Integreight/1Sheeld-Android-App", "Date": "2015-12-20T14:49:53Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonObject.has(com.integreight.onesheeld.shields.controller.utils.NotificationObject.NOTIFICATION_TAG)) setTag(jsonObject.getString(com.integreight.onesheeld.shields.controller.utils.NotificationObject.NOTIFICATION_TAG)); else setTag(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5832/buggy-version/oneSheeld.src.main.java.com.integreight.onesheeld.shields.controller.utils.NotificationObject.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "com.integreight.onesheeld.shields.controller.utils.NotificationObject.setTag(jsonObject.getString(com.integreight.onesheeld.shields.controller.utils.NotificationObject.NOTIFICATION_TAG))"], "Fixed commit": "00e8922bdc713908fa08f5bf9fb6fe74c35801bd", "Url": "https://api.github.com/repos/Integreight/1Sheeld-Android-App", "Date": "2015-12-20T14:49:53Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((pkg.lastIndexOf('.')) > 0) { pkg = pkg.substring(0, pkg.lastIndexOf('.')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4059/buggy-version/ClassySharkWS.src.com.google.classyshark.ui.viewer.tree.FilesTree.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(char)"], "Fixed commit": "790848bbe040de284a8bb782a07bdc5bcd9128ac", "Url": "https://api.github.com/repos/andreban/android-classyshark", "Date": "2015-10-26T12:24:16Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!noPhysicalRecordToBrowse) && ((positionsToProcess.length) == 0)) noPhysicalRecordToBrowse = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5022/buggy-version/core.src.main.java.com.orientechnologies.orient.core.iterator.OIdentifiableIterator.java", "BodyUseAPI": [], "Fixed commit": "4a591df1c95bc7d6c73bff4d107185e256a29665", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2013-05-27T19:40:55Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v.getId()) == (R.id.btn_back)) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2207/buggy-version/WheelViewSample.src.main.java.com.lukedeighton.wheelsample.AttendantActivity.java", "BodyUseAPI": [], "Fixed commit": "23d11155cc74c2f7dae151488820a0449807214e", "Url": "https://api.github.com/repos/WellyHong/GiftExchange", "Date": "2016-12-08T00:43:29Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (triunfo != null) this.t = triunfo.toString(); else this.t = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2009/buggy-version/GuinoteApi.src.com.jldevelops.guinote.utils.MiniTab.java", "BodyUseAPI": [], "Fixed commit": "480c0cd66e1097e4a65487ff0b5af7520041bf1f", "Url": "https://api.github.com/repos/jldevelops/guiapi", "Date": "2015-04-23T12:58:12Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((cartasMesa[i]) != null) me[i] = cartasMesa[i].toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2009/buggy-version/GuinoteApi.src.com.jldevelops.guinote.utils.MiniTab.java", "BodyUseAPI": [], "Fixed commit": "480c0cd66e1097e4a65487ff0b5af7520041bf1f", "Url": "https://api.github.com/repos/jldevelops/guiapi", "Date": "2015-04-23T12:58:12Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (path.endsWith(\"/\")) { path = path.substring(0, ((path.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4157/buggy-version/src.main.java.me.donnior.sparkle.core.route.RouteBuilder.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "448e066359ce40b4d322d9fe71cdc5644572fbaa", "Url": "https://api.github.com/repos/donnior/sparkle", "Date": "2013-11-03T04:07:32Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.mlh.services.SystemStateService.getDisplayMetadata()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (md != null) { md.setChangesMadeSinceLastUpdate(false); ssService.setDisplayMetadata(md); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8174/buggy-version/src.main.java.io.mlh.controllers.ViewerController.java", "BodyUseAPI": ["io.mlh.objects.Metadata.setChangesMadeSinceLastUpdate(boolean)", "io.mlh.services.SystemStateService.setDisplayMetadata(io.mlh.objects.Metadata)"], "Fixed commit": "aae015d7fdb11491727210684b3f740991b95f83", "Url": "https://api.github.com/repos/crownz/HackSheffieldFront", "Date": "2016-10-15T20:33:49Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (autoRefresh) { if (deepRefresh) { newInstance.setVersion(versions.get(rawResult.getVersionId())); }else { newInstance.setVersion(new jp.ac.osaka_u.ist.sdl.scanalyzer.data.db.DBVersion(rawResult.getId(), null, null, null, null, null, null)); } newInstance.setCodeFragments(new java.util.ArrayList()); newInstance.getCodeFragments().addAll(codeFragmentsByCloneClassId.get(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4895/buggy-version/src.main.java.jp.ac.osaka_u.ist.sdl.scanalyzer.io.db.CloneClassDao.java", "BodyUseAPI": [], "Fixed commit": "c36371f08beb0002f0b09f95720953d8c7249844", "Url": "https://api.github.com/repos/k-hotta/SCAnalyzer", "Date": "2014-11-28T18:16:38Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (number == 2) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4136/buggy-version/src.main.java.Prime.java", "BodyUseAPI": [], "Fixed commit": "beb264f0978ffebb204a38ebbb4ed0931c91dea1", "Url": "https://api.github.com/repos/jakobalander/industrialspy", "Date": "2017-06-20T14:13:49Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((number % 2) == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4136/buggy-version/src.main.java.Prime.java", "BodyUseAPI": [], "Fixed commit": "beb264f0978ffebb204a38ebbb4ed0931c91dea1", "Url": "https://api.github.com/repos/jakobalander/industrialspy", "Date": "2017-06-20T14:13:49Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.nlbhub.nlb.domain.export.ImagePathData.EMPTY.equals(this)) { return com.nlbhub.nlb.api.Constants.EMPTY_STRING; }else { if ((m_maxFrameNumber) == 0) { return (((m_parentFolderPath) + \"/\") + (m_fileName)) + (m_fileExtension); }else { return ((((m_parentFolderPath) + \"/\") + (m_fileName)) + \"%d\") + (m_fileExtension); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5691/buggy-version/NLBL.src.main.java.com.nlbhub.nlb.domain.export.ImagePathData.java", "BodyUseAPI": [], "Fixed commit": "ce05a34f87527b9f5885c3fbbb5c0293ea0fe99f", "Url": "https://api.github.com/repos/Antokolos/NLB", "Date": "2014-11-08T21:27:38Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentEntity) == 0) { entities.clear(); addEntities(context, entities); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1245/buggy-version/src.main.java.com.elmakers.mine.bukkit.action.CompoundEntityAction.java", "BodyUseAPI": [], "Fixed commit": "812c65bf316afb472b406a990b910c31dce0b2ef", "Url": "https://api.github.com/repos/elBukkit/MagicLib", "Date": "2015-04-22T23:55:56Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(getDisplayType())) { viewType = org.openmrs.api.PersonService.ATTR_VIEW_TYPE.valueOf(getDisplayType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4349/buggy-version/web.src.main.java.org.openmrs.web.taglib.ForEachDisplayAttributeTag.java", "BodyUseAPI": [], "Fixed commit": "cec351dbc2a3300a6f7428e0399b26155bc18761", "Url": "https://api.github.com/repos/jdegraft/openmrs-core", "Date": "2015-10-22T19:32:01Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(getPersonType())) { personType = org.openmrs.util.OpenmrsConstants.PERSON_TYPE.valueOf(getPersonType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4349/buggy-version/web.src.main.java.org.openmrs.web.taglib.ForEachDisplayAttributeTag.java", "BodyUseAPI": [], "Fixed commit": "cec351dbc2a3300a6f7428e0399b26155bc18761", "Url": "https://api.github.com/repos/jdegraft/openmrs-core", "Date": "2015-10-22T19:32:01Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o.contains(\"FastUtil\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8800/buggy-version/framework.clientreflectorjvm.src.cc.alcina.framework.common.client.logic.reflection.jvm.ClientReflectorJvm.java", "BodyUseAPI": [], "Fixed commit": "7f453e9c76e2bd1cb881c3ca16e71b69978847bf", "Url": "https://api.github.com/repos/nevella/alcina", "Date": "2016-05-03T20:12:47Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key == (org.lwjgl.input.Keyboard.KEY_SUBTRACT)) { b.buffer(\"-\"); }else if (((c >= '0') && (c <= '9')) || (key == (org.lwjgl.input.Keyboard.KEY_MINUS))) { b.buffer((\"\" + c)); }else if (key == (org.lwjgl.input.Keyboard.KEY_BACK)) { b.forget(); }else { b.buffer(\"EOI\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2951/buggy-version/src.tool.Tool.java", "BodyUseAPI": [], "Fixed commit": "268d71dd49c1e7cc847c41a48f9398cfd5a929ed", "Url": "https://api.github.com/repos/LightMind/dmtool", "Date": "2013-06-07T20:46:04Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (departureTime.before(java.util.Calendar.getInstance().getTime())) { throw new java.lang.IllegalArgumentException(\"Departure must be in the future\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5918/buggy-version/src.main.java.com.realdolmen.redotravel.domain.Flight.java", "BodyUseAPI": [], "Fixed commit": "0bf227c1730e7ec0ba6507fc00d52b6272d5233e", "Url": "https://api.github.com/repos/zynne/redo-air", "Date": "2014-10-09T13:25:48Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (airline == null) { throw new java.lang.IllegalArgumentException(\"Airline cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5918/buggy-version/src.main.java.com.realdolmen.redotravel.domain.Flight.java", "BodyUseAPI": [], "Fixed commit": "0bf227c1730e7ec0ba6507fc00d52b6272d5233e", "Url": "https://api.github.com/repos/zynne/redo-air", "Date": "2014-10-09T13:25:48Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (notBefore.before(today.getTime())) { java.util.Calendar tomorrow = ((java.util.Calendar) (today.clone())); tomorrow.add(java.util.Calendar.DAY_OF_MONTH, 1); return tripRepository.findTripsWithFreeSpaces(tomorrow.getTime(), notAfter, destination, minNumberPersons); }else { return tripRepository.findTripsWithFreeSpaces(notBefore, notAfter, destination, minNumberPersons); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5918/buggy-version/src.main.java.com.realdolmen.redotravel.service.TripService.java", "BodyUseAPI": ["com.realdolmen.redotravel.repository.TripRepository.findTripsWithFreeSpaces(java.util.Date,java.util.Date,com.realdolmen.redotravel.domain.Location,int)", "java.util.Calendar.clone()"], "Fixed commit": "0bf227c1730e7ec0ba6507fc00d52b6272d5233e", "Url": "https://api.github.com/repos/zynne/redo-air", "Date": "2014-10-09T13:25:48Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xabber.android.data.database.realm.AccountRealm.getOrder()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (order == 0) { for (com.xabber.android.data.account.AccountItem item : accountItems) { if ((item.getOrder()) > order) order = item.getOrder(); } order++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3452/buggy-version/xabber.src.main.java.com.xabber.android.data.account.AccountManager.java", "BodyUseAPI": [], "Fixed commit": "76bfe77f6bde88dbc3bedf324c8a8d958136b700", "Url": "https://api.github.com/repos/redsolution/xabber-android", "Date": "2017-09-29T09:41:06Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((finish == null) || (start == null)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3204/buggy-version/dev.project.common.src.main.java.utils.converter.TimestampConverter.java", "BodyUseAPI": [], "Fixed commit": "3ac97a6e5af35210a45ba0d904e75ce789003291", "Url": "https://api.github.com/repos/mtwolak/jiramet", "Date": "2017-02-01T13:58:52Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((subclasses.get(subclassName).size()) > 0) { for (int noSubclass = 0; noSubclass < (numberOfSamples); noSubclass++) { subclassesMeans.put(subclassName, countNewFeatures(subclasses.get(subclassName))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/9065/buggy-version/src.main.java.utils.Classifiers.kNMClassifier.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.Float>>.put(java.lang.String,java.util.List<java.lang.Float>)", "utils.Classifiers.kNMClassifier.countNewFeatures(java.util.List<java.lang.Object>)", "java.util.Map<java.lang.String, java.util.List<java.lang.Object>>.get(java.lang.String)"], "Fixed commit": "9e8aa08658f23e0fff9efe22f02cb91ae9ea6b4a", "Url": "https://api.github.com/repos/AdamPiech/FlowersClassifier", "Date": "2017-05-31T21:06:45Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((src.getMessage()) != null) { jsonObject.add(\"message\", new com.google.gson.JsonPrimitive(src.getMessage())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1139/buggy-version/thucydides-core.src.main.java.net.thucydides.core.reports.json.ThrowableClassAdapter.java", "BodyUseAPI": ["com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonPrimitive)", "java.lang.Throwable.getMessage()"], "Fixed commit": "c47422ca87edcf0cb92e663ff1fe3c38d9262afd", "Url": "https://api.github.com/repos/thucydides-webtests/thucydides", "Date": "2013-08-07T01:22:33Z"},
{"Line": "=>894", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["au.org.scoutmaster.domain.Contact.getRole()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (role != null) { for (au.org.scoutmaster.domain.Tag tag : role.getTags()) { this.getTags().add(tag); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6798/buggy-version/scoutmaster.src.main.java.au.org.scoutmaster.domain.Contact.java", "BodyUseAPI": ["au.org.scoutmaster.domain.GroupRole.getTags()"], "Fixed commit": "0d60b4053bc374a04623801a499f3a16c82af616", "Url": "https://api.github.com/repos/bsutton/scoutmaster", "Date": "2013-11-13T07:42:39Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isLoadingMore)) recyclerView.scrollToPosition(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/356/buggy-version/app.src.main.java.com.arctouch.movies.home.view.fragment.MoviesFragment.java", "BodyUseAPI": [], "Fixed commit": "89a8e818ef37dbb51490b30b5d9bc6f24d777a62", "Url": "https://api.github.com/repos/malvesinfo/arctouch-movies-android", "Date": "2017-09-07T05:13:22Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.news)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3256/buggy-version/app.src.main.java.bt.gov.jdwnrh.www.findadoctor.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5580563a1d8828519887024748868336872e5a13", "Url": "https://api.github.com/repos/FindADoctorAppTeamCST/fadmainrepo", "Date": "2017-11-10T11:28:29Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name == null) || ((name.trim().length()) == 0)) { throw new java.lang.IllegalArgumentException(\"Empty playlist name\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1953/buggy-version/src.fr.msch.wissl.server.REST.java", "BodyUseAPI": [], "Fixed commit": "a5c7a6586a928a8a1e6d79b1a1fcdc5f2e2f19f5", "Url": "https://api.github.com/repos/mschn/wissl", "Date": "2012-07-24T12:19:32Z"},
{"Line": "=>1242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lifeCycles != null) && (!(lifeCycles.isEmpty()))) { for (org.apache.falcon.LifeCycle lifeCycle : lifeCycles) { if (appName.contains(lifeCycle.getTag().name())) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5359/buggy-version/oozie.src.main.java.org.apache.falcon.workflow.engine.OozieWorkflowEngine.java", "BodyUseAPI": [], "Fixed commit": "46dcef8c2398182ab860713ccfb2d521e03b53fb", "Url": "https://api.github.com/repos/pavankumar526/falcon", "Date": "2016-07-14T07:05:34Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.z3r0byte.magis.Utils.DateUtils.parseDate(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((study) != null) && (study.startDate.before(newformatDate))) { isOldFormat = true; java.util.Collections.reverse(java.util.Arrays.asList(grades)); }else { isOldFormat = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1509/buggy-version/app.src.main.java.com.z3r0byte.magis.Tasks.GradesTask.java", "BodyUseAPI": [], "Fixed commit": "0a1ebbcd809bf234549b893e27abd430ec4619af", "Url": "https://api.github.com/repos/Z3r0byte/Magis", "Date": "2017-08-30T13:19:11Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MiscTools.RANDOM.nextInt(150)) == 0) player.setItemStackToSlot(EntityEquipmentSlot.LEGS, mods.railcraft.common.util.inventory.InvTools.damageItem(pants, 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8634/buggy-version/src.main.java.mods.railcraft.common.blocks.tracks.behaivor.CollisionHandler.java", "BodyUseAPI": [], "Fixed commit": "41db5450fd6e48e361fef5b6e8f0196d926966ed", "Url": "https://api.github.com/repos/Railcraft/Railcraft", "Date": "2016-11-11T10:10:37Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSelectPhotoList) == null) { mSelectPhotoList = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8430/buggy-version/galleryfinal.src.main.java.cn.finalteam.galleryfinal.PhotoSelectActivity.java", "BodyUseAPI": [], "Fixed commit": "e3de2a0b17327aa3524fe959b30f0beaa29e8b75", "Url": "https://api.github.com/repos/systembugtj/ImageGallery", "Date": "2017-03-22T04:47:13Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSelectPhotoList) != null) { mSelectPhotoList.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8430/buggy-version/galleryfinal.src.main.java.cn.finalteam.galleryfinal.PhotoSelectActivity.java", "BodyUseAPI": [], "Fixed commit": "e3de2a0b17327aa3524fe959b30f0beaa29e8b75", "Url": "https://api.github.com/repos/systembugtj/ImageGallery", "Date": "2017-03-22T04:47:13Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!contains) res.add(x);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1177/buggy-version/Logic.java", "BodyUseAPI": [], "Fixed commit": "d59c919b6afe0b837f74082eb46256873d7c7af5", "Url": "https://api.github.com/repos/BroCanDo/chess", "Date": "2016-03-30T15:54:18Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((root.getChild(\"Map\")) == null) && ((sim.city.map_image) != null)) { root.addChild(new TMarket.ui.LayerNode.Leaf(\"Map\", java.awt.Color.BLACK, null, true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5139/buggy-version/src.TMarket.ui.VizPanel.java", "BodyUseAPI": ["LayerNode.Folder.addChild(TMarket.ui.LayerNode.Leaf)"], "Fixed commit": "1afab03c523c4a60dd06f23b2d9aac85f279d7f7", "Url": "https://api.github.com/repos/platypii/TransportationMarket", "Date": "2014-02-27T21:32:58Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.net.SocketException) { err(\"Server unavailable. Please try again later\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8045/buggy-version/src.client.Client.java", "BodyUseAPI": [], "Fixed commit": "4e8a0f81ada18123c40c0d728ca70110a68863c2", "Url": "https://api.github.com/repos/skortchmark9/riMap", "Date": "2014-04-09T11:55:44Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(wrapped.equals(bridge))) { bridge.setTarget(wrapped); }else { bridge.setTarget(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7271/buggy-version/camel-core.src.main.java.org.apache.camel.processor.interceptor.DefaultChannel.java", "BodyUseAPI": ["org.apache.camel.processor.InterceptorToAsyncProcessorBridge.setTarget(org.apache.camel.Processor)", "org.apache.camel.processor.InterceptorToAsyncProcessorBridge.setTarget(<nulltype>)"], "Fixed commit": "8a9bc12df17cccba822ee15e4598191263ca6753", "Url": "https://api.github.com/repos/apache/camel", "Date": "2015-05-21T03:20:13Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tileID.level) < 0) tileID.level = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4174/buggy-version/src.main.java.edu.umn.cs.spatialHadoop.visualization.MultilevelPlot.java", "BodyUseAPI": [], "Fixed commit": "f1c35f0269d4c0ebea74a785d0e4caeecbd9a71b", "Url": "https://api.github.com/repos/aseldawy/spatialhadoop2", "Date": "2016-02-24T19:33:05Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent.getChildAdapterPosition(view)) == 0) { outRect.set(0, mTopView.getHeight(), 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7617/buggy-version/ScrollTrack.app.src.main.java.com.beak.scrolltrack.scroll.TopDecoration.java", "BodyUseAPI": [], "Fixed commit": "a0a7cf7b49b5deaa373da82cf38d35953de56f05", "Url": "https://api.github.com/repos/boybeak/ScrollTrack", "Date": "2015-10-11T12:09:59Z"},
{"Line": "=>1104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Connection.getMetaData()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (meta.getDatabaseProductName().toLowerCase().contains(org.wso2.carbon.dataservices.core.odata.RDBMSDataHandler.MSSQL_SERVER)) { rs = meta.getTables(null, \"dbo\", null, new java.lang.String[]{ org.wso2.carbon.dataservices.core.odata.RDBMSDataHandler.TABLE }); }else { rs = meta.getTables(null, null, null, new java.lang.String[]{ org.wso2.carbon.dataservices.core.odata.RDBMSDataHandler.TABLE }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5718/buggy-version/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.odata.RDBMSDataHandler.java", "BodyUseAPI": ["java.sql.DatabaseMetaData.getTables(<nulltype>,java.lang.String,<nulltype>,java.lang.String[])", "java.sql.DatabaseMetaData.getTables(<nulltype>,<nulltype>,<nulltype>,java.lang.String[])"], "Fixed commit": "915d3f515f75a0a5690ae8028391bbbac7778ef4", "Url": "https://api.github.com/repos/madhawa-gunasekara/carbon-data", "Date": "2017-02-27T11:05:38Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((field.getText()) != null) && (!(field.getText().equals(\"\")))) { if ((widget.calculate(field.getText())) == null) { erge.setText(\"= ERROR\"); }else { erge.setText((\"= \" + (widget.calculate(field.getText())))); } }else { erge.setText(\"= ERROR\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/539/buggy-version/src.de.szut.SmartGadgetBar.GUI.Calculator_UI.java", "BodyUseAPI": ["de.szut.SmartGadgetBar.Widgets.Calculator.Calculator.calculate(java.lang.String)", "javax.swing.JTextField.getText()", "de.szut.SmartGadgetBar.Widgets.Calculator.Calculator.calculate(java.lang.String)", "javax.swing.JLabel.setText((\"= \" + (widget.calculate(field.getText()))))", "javax.swing.JTextField.getText()"], "Fixed commit": "6b6c5b3a9a6fbc37997f788aa6d2530e8be31720", "Url": "https://api.github.com/repos/JanRogge/SmartGadgetBar", "Date": "2015-05-27T20:34:08Z"},
{"Line": "=>886", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.harvard.hul.ois.jhove.module.pdf.AProfile.resolveIndirectObject(item.get(\"First\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((next.getObjNumber()) != (child.getObjNumber())) { child = next; }else { child = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6970/buggy-version/jhove-modules.src.main.java.edu.harvard.hul.ois.jhove.module.pdf.AProfile.java", "BodyUseAPI": [], "Fixed commit": "8593d367c58aafa3824a876ede3b9ef157e0a053", "Url": "https://api.github.com/repos/bl-dpt/jhove", "Date": "2017-03-09T09:15:13Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_upperLimit) == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6970/buggy-version/jhove-modules.src.main.java.edu.harvard.hul.ois.jhove.module.pdf.NameTreeNode.java", "BodyUseAPI": [], "Fixed commit": "8593d367c58aafa3824a876ede3b9ef157e0a053", "Url": "https://api.github.com/repos/bl-dpt/jhove", "Date": "2017-03-09T09:15:13Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modifiers.modifiers) != null) modifiers.removeModifiers();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3412/buggy-version/core.src.main.java.tuxkids.tuxblocks.core.solve.blocks.VariableBlock.java", "BodyUseAPI": [], "Fixed commit": "4fcf7f08da0280d136b38a7063db548922f69dba", "Url": "https://api.github.com/repos/thomaswp/tuxblocks", "Date": "2014-03-22T01:46:18Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (answer != 1) addModifier(new tuxkids.tuxblocks.core.solve.blocks.TimesBlock(answer), true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3412/buggy-version/core.src.main.java.tuxkids.tuxblocks.core.solve.blocks.VariableBlock.java", "BodyUseAPI": ["tuxkids.tuxblocks.core.solve.blocks.VariableBlock.1.addModifier(tuxkids.tuxblocks.core.solve.blocks.TimesBlock,boolean)"], "Fixed commit": "4fcf7f08da0280d136b38a7063db548922f69dba", "Url": "https://api.github.com/repos/thomaswp/tuxblocks", "Date": "2014-03-22T01:46:18Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(login))) { org.sonar.server.user.index.UserDoc user = userIndex.getNullableByLogin(login); if (user == null) { org.sonar.server.computation.issue.IssueComputation.LOG.info(\"the {} property was set with an unknown login: {}\", CoreProperties.DEFAULT_ISSUE_ASSIGNEE, login); }else { defaultAssignee = login; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7283/buggy-version/server.sonar-server.src.main.java.org.sonar.server.computation.issue.IssueComputation.java", "BodyUseAPI": ["org.sonar.server.user.index.UserIndex.getNullableByLogin(java.lang.String)", "org.sonar.api.utils.log.Logger.info(java.lang.String,CoreProperties.DEFAULT_ISSUE_ASSIGNEE,java.lang.String)"], "Fixed commit": "d0242d114bc3b9c7c4ddc304e28316d20d8caadc", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2015-02-26T13:50:46Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filters != null) { boolean firstFilter = true; for (java.lang.String filter : filters) { if (options.containsKey(filter)) { if (!firstFilter) { relativePath += \"&\"; }else { relativePath += \"?\"; firstFilter = false; } relativePath += (filter + \"=\") + (options.get(filter)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4454/buggy-version/src.org.smartplatforms.client.Utils.java", "BodyUseAPI": [], "Fixed commit": "176f8a2ec7bcfd07a7d0a76e9f961a7c664e382c", "Url": "https://api.github.com/repos/chb/smart_client_java", "Date": "2012-10-16T14:23:36Z"},
{"Line": "=>738", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((onTickDiff == 0) && (offTickDiff == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2469/buggy-version/src.com.kh.beatbot.view.MidiView.java", "BodyUseAPI": [], "Fixed commit": "95fa27fcff22fda262d4c010c7681067b53ba9cd", "Url": "https://api.github.com/repos/khiner/BeatBot", "Date": "2012-08-10T23:57:45Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((w.getBlock(x, y, z)) != (this)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1579/buggy-version/src.main.java.io.darkcraft.darkcore.mod.abstracts.AbstractBlock.java", "BodyUseAPI": [], "Fixed commit": "8bc082d7fd446ac81aa14f365143167fb530dfe8", "Url": "https://api.github.com/repos/DarkholmeTenk/Darkcore", "Date": "2015-08-08T00:33:10Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editor.getParseController().getLastPhasedUnit()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (searchInFile(pu)) { com.redhat.ceylon.ide.common.typechecker.ProjectPhasedUnit ppu = ((com.redhat.ceylon.ide.common.typechecker.ProjectPhasedUnit) (pu)); refactorInFile(newTextFileChange(ppu), change, ppu.getCompilationUnit(), ppu.getTokens()); pm.worked((i++)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6695/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.refactor.AbstractRefactoring.java", "BodyUseAPI": [], "Fixed commit": "a6f11c1a1858d5c1bb21d8303e44761a9dfd021c", "Url": "https://api.github.com/repos/eclipse/ceylon-ide-eclipse", "Date": "2016-04-13T22:54:24Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p_existingConnection == null) { (m_openConnections)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/140/buggy-version/nio.NIOConnectionManager.java", "BodyUseAPI": [], "Fixed commit": "32cbceddfe28a8fe7e80c563415492b5ab78a588", "Url": "https://api.github.com/repos/hhu-bsinfo/dxnet-src", "Date": "2017-12-19T10:40:02Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p_existingConnection == null) { (m_openConnections)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/140/buggy-version/nio.NIOConnectionManager.java", "BodyUseAPI": [], "Fixed commit": "32cbceddfe28a8fe7e80c563415492b5ab78a588", "Url": "https://api.github.com/repos/hhu-bsinfo/dxnet-src", "Date": "2017-12-19T10:40:02Z"},
{"Line": "=>2636", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xCount > 0) pLinePoints[(xCount - 1)].style = 5;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6901/buggy-version/core.JavaLineArray.src.main.java.JavaLineArray.arraysupport.java", "BodyUseAPI": [], "Fixed commit": "3146499ee0dff660b183c6ae3a28b7ca476346f3", "Url": "https://api.github.com/repos/missioncommand/mil-sym-java", "Date": "2014-11-14T15:58:30Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["state.getData().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (now instanceof java.lang.Number) { nowLong = ((java.lang.Number) (now)).longValue(); }else { state.getData().put(\"now\", nowLong); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4456/buggy-version/code.iaas.healthcheck.src.main.java.io.cattle.iaas.healthcheck.process.InstanceHealthCheckUpdate.java", "BodyUseAPI": [], "Fixed commit": "f1e8b37fabcccf135159ed995a6b9fb23d5cd24a", "Url": "https://api.github.com/repos/vincent99/cattle", "Date": "2017-01-09T20:03:48Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((acctArray[i]) != null) { writer.write(((((((((acctArray[i].getName()) + \",\") + (acctArray[i].getBalance())) + \",\") + (acctArray[i].getEmail())) + \",\") + (acctArray[i].getDescription())) + \",\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5153/buggy-version/main.src.InitialScreen.java", "BodyUseAPI": ["acctArray[i].getName()", "acctArray[i].getEmail()", "acctArray[i].getDescription()", "acctArray[i].getBalance()", "java.io.FileWriter.write(((((((((acctArray[i].getName()) + \",\") + (acctArray[i].getBalance())) + \",\") + (acctArray[i].getEmail())) + \",\") + (acctArray[i].getDescription())) + \",\\n\"))"], "Fixed commit": "38b70d7065d26f33b26068939e4361985ae83bf7", "Url": "https://api.github.com/repos/luckek/Gemini", "Date": "2017-11-01T14:37:08Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((numStr.length()) > 0) { int cutpos = java.lang.Integer.parseInt(numStr.toString()); if (cutpos > (result.length())) { cutpos = result.length(); } result = (result.substring(0, ((result.length()) - cutpos))) + suffix; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4834/buggy-version/src.main.java.org.elasticsearch.analysis.decompound.Decompounder.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "1ac2ca7d9f43a10be976a07707f0bc3248cbab55", "Url": "https://api.github.com/repos/Traackr/elasticsearch-analysis-decompound", "Date": "2013-09-29T07:57:03Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isValidRecurringEvent(startDate, endDate, recurringType))) { throw new seedu.taskell.commons.exceptions.IllegalValueException(RecurringType.MESSAGE_INVALID_RECURRING_DURATION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8647/buggy-version/src.main.java.seedu.taskell.model.task.EventTask.java", "BodyUseAPI": [], "Fixed commit": "0cde59841e4b5db73d021b590dea8a6393742d80", "Url": "https://api.github.com/repos/CS2103AUG2016-W15-C3/main", "Date": "2016-10-31T07:07:06Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mWaybillNo.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(cn.net.yto.biz.BarcodeManager.getInstance().isWayBillNoValid(wayBillNo))) { cn.net.yto.utils.ToastUtils.showToast(R.string.toast_invalid_waybillno); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2775/buggy-version/src.cn.net.yto.ui.SignScanActivity.java", "BodyUseAPI": [], "Fixed commit": "e3a70fbdd54cdba8b98208498185f520ada45e89", "Url": "https://api.github.com/repos/kit-team/xuebao", "Date": "2013-01-08T15:01:37Z"},
{"Line": "=>771", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pipeline.getId()) == null) { cz.cuni.mff.xrg.odcs.frontend.gui.views.Notification.show(cz.cuni.mff.xrg.odcs.frontend.i18n.Messages.getString(\"PipelineEdit.export.fail.not.saved\"), Notification.Type.ERROR_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4783/buggy-version/frontend.src.main.java.cz.cuni.mff.xrg.odcs.frontend.gui.views.PipelineEdit.java", "BodyUseAPI": [], "Fixed commit": "7cf409069649fd43a1c36f35ee798d9ea85feb9d", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2015-07-21T12:33:26Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (running) sliceUpdate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5403/buggy-version/OTCAnalyser.src.uk.ac.cam.cstibhotel.otcanalyser.networklayer.InitialUpdateWorker.java", "BodyUseAPI": [], "Fixed commit": "f529da849363045fb470f062483ea81e95507655", "Url": "https://api.github.com/repos/CSTIB-Hotel/OTCAnalyser", "Date": "2015-02-26T13:15:47Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.versions.contains(version))) { this.versions.add(version); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1980/buggy-version/java.org.kevoree.library.java.editor.src.main.java.org.kevoree.library.java.editor.model.Library.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "8b0ff5dddae9307f7127d07ac718c470d02da9b7", "Url": "https://api.github.com/repos/kevoree/kevoree-library", "Date": "2014-04-03T09:03:40Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.versions.get(i).contains(\"SNAPSHOT\"))) { com.github.zafarkhaja.semver.Version v1 = com.github.zafarkhaja.semver.Version.valueOf(latest); com.github.zafarkhaja.semver.Version v2 = com.github.zafarkhaja.semver.Version.valueOf(this.versions.get(i)); if (v2.greaterThan(v1)) { latest = this.versions.get(i); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1980/buggy-version/java.org.kevoree.library.java.editor.src.main.java.org.kevoree.library.java.editor.model.Library.java", "BodyUseAPI": ["com.github.zafarkhaja.semver.Version.valueOf(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "8b0ff5dddae9307f7127d07ac718c470d02da9b7", "Url": "https://api.github.com/repos/kevoree/kevoree-library", "Date": "2014-04-03T09:03:40Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (ps != null) { ps.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6971/buggy-version/src.main.java.com.dutytrail.service.trail.dao.BaseDAO.java", "BodyUseAPI": ["java.sql.PreparedStatement.close()"], "Fixed commit": "fad7f1e22327575dfa5c6e1da30dcc2a1c26c4b1", "Url": "https://api.github.com/repos/dutytrail/dt-service-trail", "Date": "2016-07-27T14:34:31Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (resultSet != null) { resultSet.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6971/buggy-version/src.main.java.com.dutytrail.service.trail.dao.BaseDAO.java", "BodyUseAPI": ["java.sql.ResultSet.close()"], "Fixed commit": "fad7f1e22327575dfa5c6e1da30dcc2a1c26c4b1", "Url": "https://api.github.com/repos/dutytrail/dt-service-trail", "Date": "2016-07-27T14:34:31Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (int_symbol_map.keySet().contains(\"i\")) { expr = expr.replaceAll(\"(?<![a-zA-Z0-9_])i(?![a-zA-Z0-9_])\", int_symbol_map.get(\"i\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/9128/buggy-version/src.edu.ucla.cs.utils.SAT.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "524c185ee39fc40506e6781148fa44c423a337c4", "Url": "https://api.github.com/repos/husttroy/Maple", "Date": "2017-03-14T08:53:51Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bool_symbol_map.keySet().contains(\"b\")) { expr = expr.replaceAll(\"(?<![a-zA-Z0-9_])b(?![a-zA-Z0-9_])\", bool_symbol_map.get(\"b\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/9128/buggy-version/src.edu.ucla.cs.utils.SAT.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "524c185ee39fc40506e6781148fa44c423a337c4", "Url": "https://api.github.com/repos/husttroy/Maple", "Date": "2017-03-14T08:53:51Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.EnumSet<org.apache.hadoop.fs.CreateFlag>.contains(CreateFlag.CREATE)", "java.util.EnumSet<org.apache.hadoop.fs.CreateFlag>.contains(CreateFlag.OVERWRITE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (overwrite && (!create)) { throw new java.io.FileNotFoundException((\"File not found: \" + src)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3550/buggy-version/giraffa-core.src.main.java.org.apache.giraffa.hbase.NamespaceProcessor.java", "BodyUseAPI": [], "Fixed commit": "0435dfab13ffdc79283ed69590403f908776037d", "Url": "https://api.github.com/repos/weilintsaiWand/giraffa", "Date": "2015-06-19T22:08:22Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((prefixes.size()) > 1) { prefixes.remove(((prefixes.size()) - 1)); return ru.crazycoder.plugins.tabdir.TitleFormatter.format(prefixes, file.getPresentableName(), configuration); }else { return file.getPresentableName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6013/buggy-version/src.ru.crazycoder.plugins.tabdir.SameFilenameTitleProvider.java", "BodyUseAPI": ["ru.crazycoder.plugins.tabdir.TitleFormatter.format(java.util.List<java.lang.String>,file.getPresentableName(),ru.crazycoder.plugins.tabdir.configuration.FolderConfiguration)", "java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.remove(int)"], "Fixed commit": "914204dc713aabb9a9253ffc59915921ff928915", "Url": "https://api.github.com/repos/crazyproger/Tabdir", "Date": "2012-05-02T19:23:55Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["query.setLockMode(LockModeType.PESSIMISTIC_WRITE).getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((localStorageHostRefVOS.size()) > 0) { ref = localStorageHostRefVOS.get(0); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/776/buggy-version/plugin.localstorage.src.main.java.org.zstack.storage.primary.local.LocalStorageCapacityRecalculator.java", "BodyUseAPI": ["java.util.List<org.zstack.storage.primary.local.LocalStorageHostRefVO>.get(int)"], "Fixed commit": "f53ab9e484f984f35b42abbe0378e6af2ba6eeb7", "Url": "https://api.github.com/repos/liningone/zstack", "Date": "2017-03-15T04:22:55Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (s.endsWith(\"\\r\")) { return s.substring(0, ((s.length()) - 1)); }else { return s; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7858/buggy-version/src.main.java.play.template2.compile.GTPreCompiler.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "a9eb47be475f7a0094356c5f7c723e68dd8f4b13", "Url": "https://api.github.com/repos/mbknor/gt-engine", "Date": "2011-11-20T13:10:40Z"},
{"Line": "=>814", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ss.states[com.amaze.filemanager.activities.MainActivity.currentTab].searchOpen) { getToolbar().setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5656/buggy-version/src.main.java.com.amaze.filemanager.ui.views.AppBar.java", "BodyUseAPI": [], "Fixed commit": "1b8c4509d3e6387a27fe67c6b7b4809745c44459", "Url": "https://api.github.com/repos/EmmanuelMess/AmazeFileManager", "Date": "2017-07-28T19:19:08Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((initialDistance) == (-1)) initialDistance = (mHeader.mPagerSlidingTabStrip.getTop()) - (mHeader.toolbar.getBottom());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1010/buggy-version/materialviewpager.src.main.java.com.github.florent37.materialviewpager.MaterialViewPagerAnimator.java", "BodyUseAPI": [], "Fixed commit": "3ffcd50ba44396058ca5db2a0ffcd4d346a4065f", "Url": "https://api.github.com/repos/Jackeagle/MaterialViewPager", "Date": "2015-07-08T13:43:24Z"},
{"Line": "=>738", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (includeTotals && (categoryCombo.isDefault())) { operands.add(new org.hisp.dhis.dataelement.DataElementOperand(dataElement)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1426/buggy-version/dhis-2.dhis-services.dhis-service-core.src.main.java.org.hisp.dhis.dataelement.DefaultDataElementCategoryService.java", "BodyUseAPI": [], "Fixed commit": "1f21c73801d144db217ca1750ecaa35683a43a27", "Url": "https://api.github.com/repos/dhis2/dhis2-core", "Date": "2017-04-24T15:35:40Z"},
{"Line": "=>759", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hisp.dhis.dataset.DataSetElement.getResolvedCategoryCombo()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (includeTotals && (categoryCombo.isDefault())) { operands.add(new org.hisp.dhis.dataelement.DataElementOperand(element.getDataElement())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1426/buggy-version/dhis-2.dhis-services.dhis-service-core.src.main.java.org.hisp.dhis.dataelement.DefaultDataElementCategoryService.java", "BodyUseAPI": [], "Fixed commit": "1f21c73801d144db217ca1750ecaa35683a43a27", "Url": "https://api.github.com/repos/dhis2/dhis2-core", "Date": "2017-04-24T15:35:40Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (the_reasons != null) { my_discrepancy.addAll(the_reasons); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6153/buggy-version/server.eclipse-project.src.main.java.us.freeandfair.corla.model.CVRAuditInfo.java", "BodyUseAPI": ["java.util.Set<us.freeandfair.corla.model.AuditReason>.addAll(java.util.Set<us.freeandfair.corla.model.AuditReason>)"], "Fixed commit": "19055524e41ccdec311e4382ca353d7cbf415d62", "Url": "https://api.github.com/repos/FreeAndFair/ColoradoRLA", "Date": "2017-10-26T15:49:55Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (the_reasons != null) { my_disagreement.addAll(the_reasons); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6153/buggy-version/server.eclipse-project.src.main.java.us.freeandfair.corla.model.CVRAuditInfo.java", "BodyUseAPI": ["java.util.Set<us.freeandfair.corla.model.AuditReason>.addAll(java.util.Set<us.freeandfair.corla.model.AuditReason>)"], "Fixed commit": "19055524e41ccdec311e4382ca353d7cbf415d62", "Url": "https://api.github.com/repos/FreeAndFair/ColoradoRLA", "Date": "2017-10-26T15:49:55Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tempos[j][i]) != 0) { somaVelsMedias += grandepremiorodinhas.Calculos.calcVelMediaPartProva(j, i, provasKm, tempos); contPartsProva++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1143/buggy-version/src.grandepremiorodinhas.Calculos.java", "BodyUseAPI": ["grandepremiorodinhas.Calculos.calcVelMediaPartProva(int,int,java.lang.String[][],int[][])"], "Fixed commit": "29f85e705b5fbb41b06a63d5de188557ac04b427", "Url": "https://api.github.com/repos/FoxSGR/Grande-Premio-Rodinhas", "Date": "2017-12-09T00:34:21Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.getDatabaseHelper().isColumnExists(org.zeroclick.meeting.server.sql.migrate.data.PatchCreateSubscription.PATCHED_TABLE_USER_ROLE, org.zeroclick.meeting.server.sql.migrate.data.PatchCreateSubscription.ADDED_USER_ROLE_COLUMN))) { org.eclipse.scout.rt.server.jdbc.SQL.insert(SQLs.USER_ROLE_ADD_START_DATE); org.eclipse.scout.rt.server.jdbc.SQL.insert(SQLs.USER_ROLE_START_DATE_ADD_DEFAULT); org.eclipse.scout.rt.server.jdbc.SQL.insert(SQLs.USER_ROLE_PK_DROP); org.eclipse.scout.rt.server.jdbc.SQL.insert(SQLs.USER_ROLE_START_DATE_NOW_TO_EXISTING); org.eclipse.scout.rt.server.jdbc.SQL.insert(SQLs.USER_ROLE_PK_ADD_START_DATE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7351/buggy-version/meeting.server.src.main.java.org.zeroclick.meeting.server.sql.migrate.data.PatchCreateSubscription.java", "BodyUseAPI": [], "Fixed commit": "4b5b38ad21a37ae30e4ecdd6ea8f588c232df3a3", "Url": "https://api.github.com/repos/jderuette/zc_meeting", "Date": "2017-10-31T14:49:18Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (retX < 0) { retX = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1222/buggy-version/app.src.main.java.com.github.yanglw.liulishuo.Q4Activity.java", "BodyUseAPI": [], "Fixed commit": "aa6d2edc02e99987c11be634a51b0cd9428082be", "Url": "https://api.github.com/repos/yanglw/LiuLiShuo", "Date": "2015-04-04T11:52:25Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > 13) { connection.setRequestProperty(\"Connection\", \"close\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/179/buggy-version/library.src.main.java.org.henjue.library.hnet.http.UrlConnecttionStack.java", "BodyUseAPI": [], "Fixed commit": "f8972a05a1199960bd3a03311080dc8b9a6f27be", "Url": "https://api.github.com/repos/henjue/hnet", "Date": "2015-12-02T06:21:09Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cluedo.locations.Board.getRoomFromWeapon(cluedo.pieces.Weapon)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (oldRoom != null) oldRoom.removeWeapon(w);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8541/buggy-version/src.cluedo.Game.java", "BodyUseAPI": ["cluedo.locations.Room.removeWeapon(cluedo.pieces.Weapon)"], "Fixed commit": "817f80c5b9ef1bac09c2fe7cd2d97516e051b201", "Url": "https://api.github.com/repos/imaginaryCorn/cludo", "Date": "2016-08-02T12:08:59Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (weaponPieces.isEmpty()) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8541/buggy-version/src.cluedo.Game.java", "BodyUseAPI": [], "Fixed commit": "817f80c5b9ef1bac09c2fe7cd2d97516e051b201", "Url": "https://api.github.com/repos/imaginaryCorn/cludo", "Date": "2016-08-02T12:08:59Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((containerPath.length()) != 0) && ((containerPath.charAt(((containerPath.length()) - 1))) != (org.eclipse.core.runtime.IPath.SEPARATOR))) { containerPath = containerPath + (org.eclipse.core.runtime.IPath.SEPARATOR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4854/buggy-version/core.plugins.org.eclipse.dltk.core.index.sql.src.org.eclipse.dltk.internal.core.index.sql.SqlSearchEngine.java", "BodyUseAPI": [], "Fixed commit": "7a5c4e0750a635a39c53fa272dec31b3c629f653", "Url": "https://api.github.com/repos/akosicki/org.eclipse.dltk.core", "Date": "2012-11-24T19:31:19Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.area.TileCoordinate.getY()", "model.area.TileCoordinate.getY()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (targetY > chosenY) { return utilities.Angle.DOWN; }else if (targetX > chosenX) { return utilities.Angle.UP_RIGHT; }else if (targetX < chosenX) { return utilities.Angle.UP_LEFT; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4699/buggy-version/src.utilities.Angle.java", "BodyUseAPI": [], "Fixed commit": "454ae41e1e424b0297e4d9f2fa7b4325ef2a1ded", "Url": "https://api.github.com/repos/Iteration-3/Code", "Date": "2015-04-19T20:46:02Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.area.TileCoordinate.getY()", "model.area.TileCoordinate.getX()", "model.area.TileCoordinate.getX()", "model.area.TileCoordinate.getY()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((targetX > chosenX) && (targetY > chosenY)) { return utilities.Angle.DOWN_RIGHT; }else if (targetY < chosenY) { return utilities.Angle.UP; }else if (targetY > chosenY) { return utilities.Angle.DOWN; }else if (targetX > chosenX) { return utilities.Angle.UP_RIGHT; }else if (targetX < chosenX) { return utilities.Angle.UP_LEFT; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4699/buggy-version/src.utilities.Angle.java", "BodyUseAPI": [], "Fixed commit": "454ae41e1e424b0297e4d9f2fa7b4325ef2a1ded", "Url": "https://api.github.com/repos/Iteration-3/Code", "Date": "2015-04-19T20:46:02Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (gameUser != null) { if (to == null) to = gameUser.getFacebookId(); else to += \",\" + (gameUser.getFacebookId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7972/buggy-version/src.main.java.com.philihp.weblabora.action.MakeMove.java", "BodyUseAPI": ["com.philihp.weblabora.jpa.User.getFacebookId()", "com.philihp.weblabora.jpa.User.getFacebookId()"], "Fixed commit": "9ea8fe134dfc7f2307a7eb0c8f20ac4846b2ccf0", "Url": "https://api.github.com/repos/philihp/WebLabora", "Date": "2012-05-22T19:56:45Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exist.dom.persistent.DefaultDocumentSet.getDocumentIterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i.hasNext()) { result.append(\", \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1153/buggy-version/src.org.exist.dom.persistent.DefaultDocumentSet.java", "BodyUseAPI": [], "Fixed commit": "9758d383ec5b4867bdbfd0f26080744591490aad", "Url": "https://api.github.com/repos/olvidalo/exist", "Date": "2017-04-15T16:03:41Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((contact.name()) != null) { names.add(contact.name().canonical()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2987/buggy-version/src.CardDavCleaner.java", "BodyUseAPI": ["java.util.TreeSet<java.lang.String>.add(contact.name().canonical())", "Contact.name()", "contact.name().canonical()"], "Fixed commit": "8ddb048f54351bdfcee3b59210c1f1a4ee10dc88", "Url": "https://api.github.com/repos/SRSoftware/CardDavCleaner", "Date": "2014-01-22T20:57:11Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.ucchyocean.ct.ColorTeamingAPI.getPlayerTeamName(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tns == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5384/buggy-version/src.main.java.com.github.ucchyocean.ct.listener.PlayerJoinQuitListener.java", "BodyUseAPI": [], "Fixed commit": "6fa0fabcb63bb4594ce0c09ec303b2ef5628f7d4", "Url": "https://api.github.com/repos/ucchyocean/ColorTeaming", "Date": "2013-10-21T00:07:37Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.GINGERBREAD)) { mOkHttpClient.setCookieHandler(new java.net.CookieManager(null, java.net.CookiePolicy.ACCEPT_ORIGINAL_SERVER)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/223/buggy-version/okhttputils.src.main.java.com.zhy.http.okhttp.OkHttpClientManager.java", "BodyUseAPI": [], "Fixed commit": "22f55162830b7d3d4ef9f0b2b95c08606c1d55ce", "Url": "https://api.github.com/repos/PATHoxie/okhttp-utils", "Date": "2016-04-06T10:17:26Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.opendaylight.protocol.bgp.rib.impl.AttributeOperations.TRANSITIVES.contains(child.getNodeType())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7444/buggy-version/bgp.rib-impl.src.main.java.org.opendaylight.protocol.bgp.rib.impl.AttributeOperations.java", "BodyUseAPI": [], "Fixed commit": "e929aaf055f407ac183a5d56a345cc694755d00e", "Url": "https://api.github.com/repos/opendaylight/bgpcep", "Date": "2015-05-01T17:50:34Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (UnrecognizedAttributes.QNAME.equals(child.getNodeType())) { final com.google.common.base.Optional<org.opendaylight.yangtools.yang.data.api.schema.NormalizedNode<?, ?>> maybeTransitive = org.opendaylight.yangtools.yang.data.api.schema.NormalizedNodes.findNode(child, this.transitiveLeaf); if (maybeTransitive.isPresent()) { return ((java.lang.Boolean) (maybeTransitive.get().getValue())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7444/buggy-version/bgp.rib-impl.src.main.java.org.opendaylight.protocol.bgp.rib.impl.AttributeOperations.java", "BodyUseAPI": ["org.opendaylight.yangtools.yang.data.api.schema.NormalizedNodes.findNode(org.opendaylight.yangtools.yang.data.api.schema.DataContainerChild<? extends org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier.PathArgument, ?>,org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier.NodeIdentifier)"], "Fixed commit": "e929aaf055f407ac183a5d56a345cc694755d00e", "Url": "https://api.github.com/repos/opendaylight/bgpcep", "Date": "2015-05-01T17:50:34Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastOperator) instanceof com.orientechnologies.orient.core.sql.OQueryOperatorEquals) { return mergeFields(searchResult, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/590/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OIndexSearchResult.java", "BodyUseAPI": [], "Fixed commit": "265bb047ff711514b1b02f0db96bdd8aca382105", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-10-20T15:52:00Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.orientechnologies.orient.core.sql.OIndexSearchResult.isIndexEqualityOperator(searchResult.lastOperator)) { return mergeFields(this, searchResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/590/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OIndexSearchResult.java", "BodyUseAPI": ["com.orientechnologies.orient.core.sql.OIndexSearchResult.mergeFields(com.orientechnologies.orient.core.sql.OIndexSearchResult,com.orientechnologies.orient.core.sql.OIndexSearchResult)"], "Fixed commit": "265bb047ff711514b1b02f0db96bdd8aca382105", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-10-20T15:52:00Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (textView instanceof com.jungly.gridpasswordview.EditText) { com.jungly.gridpasswordview.EditText et = ((com.jungly.gridpasswordview.EditText) (textView)); et.setSelection(et.getText().length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3133/buggy-version/library.src.main.java.com.jungly.gridpasswordview.GridPasswordView.java", "BodyUseAPI": [], "Fixed commit": "a5e989ecebec2f97f3bf499689d0335d74193b25", "Url": "https://api.github.com/repos/songzhw/GridPasswordView", "Date": "2015-03-20T07:21:41Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (scaledBitmap != null) { mCanvas.drawBitmap(scaledBitmap, ((w - (scaledBitmap.getWidth())) / 2), ((h - (scaledBitmap.getHeight())) / 2), null); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5840/buggy-version/app.src.main.java.nickrout.lenslauncher.util.IconPackManager.java", "BodyUseAPI": ["android.graphics.Bitmap.getWidth()", "android.graphics.Canvas.drawBitmap(android.graphics.Bitmap,((w - (scaledBitmap.getWidth())) / 2),((h - (scaledBitmap.getHeight())) / 2),<nulltype>)", "android.graphics.Bitmap.getHeight()"], "Fixed commit": "72f57282fc576ebd331238e4c1b5b94f127925bb", "Url": "https://api.github.com/repos/nicholasrout/lens-launcher", "Date": "2016-06-02T15:49:26Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((end) == (Clocktime.INFINIT)) return \"t=\" + (start);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5060/buggy-version/src.main.java.com.github.tkurz.media.fragments.NPTFragment.java", "BodyUseAPI": [], "Fixed commit": "7d2c6f4c7d8dd01550b17f995277ae7139cf6be3", "Url": "https://api.github.com/repos/tkurz/media-fragments-uri", "Date": "2014-01-29T16:39:16Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((start) == (Clocktime.ZERO)) return \"t=,\" + (end);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5060/buggy-version/src.main.java.com.github.tkurz.media.fragments.NPTFragment.java", "BodyUseAPI": [], "Fixed commit": "7d2c6f4c7d8dd01550b17f995277ae7139cf6be3", "Url": "https://api.github.com/repos/tkurz/media-fragments-uri", "Date": "2014-01-29T16:39:16Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nodes.length) > 1) { if ((nodes.length) <= 15) { TspSolver.Graph graphTest = new TspSolver.Graph(nodes, true, true); return graphTest.getSolution(); } if ((nodes.length) > 15) { TspSolver.GraphApproximation graphTest = new TspSolver.GraphApproximation(nodes, true, false, 2); return graphTest.getSolution(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5681/buggy-version/src.main.java.TspSolver.Main.java", "BodyUseAPI": [], "Fixed commit": "5c50bdc0a58c7ee5f770c699c7260c19c61f59d9", "Url": "https://api.github.com/repos/samiabout/hello-expertus", "Date": "2017-11-24T05:49:50Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dn == null) { dn = checkKey(\"DN\", item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6587/buggy-version/src.main.java.org.venice.piazza.idam.authn.GxAuthenticator.java", "BodyUseAPI": [], "Fixed commit": "1634f4ff8cb7e4a84f9f5ba4bc7d8aecf965df4f", "Url": "https://api.github.com/repos/venicegeo/pz-idam", "Date": "2017-07-20T13:50:45Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (username == null) { username = checkKey(\"UID\", item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6587/buggy-version/src.main.java.org.venice.piazza.idam.authn.GxAuthenticator.java", "BodyUseAPI": [], "Fixed commit": "1634f4ff8cb7e4a84f9f5ba4bc7d8aecf965df4f", "Url": "https://api.github.com/repos/venicegeo/pz-idam", "Date": "2017-07-20T13:50:45Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getInt(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (color != (-2)) retval.put(value, new com.juick.android.ColorsTheme.ColorSetup(\"generic\", color));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1051/buggy-version/src.com.juick.android.ColorsTheme.java", "BodyUseAPI": ["java.util.HashMap<com.juick.android.ColorsTheme.ColorKey, com.juick.android.ColorsTheme.ColorSetup>.put(com.juick.android.ColorsTheme.ColorKey,com.juick.android.ColorsTheme.ColorSetup)"], "Fixed commit": "db8cc62db5f5610d638c3414a91fbf6e4fed7738", "Url": "https://api.github.com/repos/sannysanoff/com.juick.android", "Date": "2012-08-26T12:16:07Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.sparkedia.jdev19.Netstats.Netstats.properties) == null) { com.sparkedia.jdev19.Netstats.Netstats.properties = new com.sparkedia.jdev19.Netstats.Property(\"plugins/Netstats/config.txt\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6131/buggy-version/src.com.sparkedia.jdev19.Netstats.Netstats.java", "BodyUseAPI": [], "Fixed commit": "af82e264566720860d6249ffa49f54f17e5db68e", "Url": "https://api.github.com/repos/jdev19/Netstats", "Date": "2011-03-03T22:20:24Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((senactClientConnection) == null) { throw new de.dc.util.exceptions.CouldNotPerformException(\"Senact not conneced!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2564/buggy-version/src.main.java.de.dc.planetsudo.tools.SenactController.java", "BodyUseAPI": [], "Fixed commit": "13be7f7a8da58be66acc6830d011e689367eff22", "Url": "https://api.github.com/repos/openbase/planetsudo.server", "Date": "2013-10-11T11:51:41Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((senactClientConnection) == null) { throw new de.dc.util.exceptions.CouldNotPerformException(\"Senact not conneced!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2564/buggy-version/src.main.java.de.dc.planetsudo.tools.SenactController.java", "BodyUseAPI": [], "Fixed commit": "13be7f7a8da58be66acc6830d011e689367eff22", "Url": "https://api.github.com/repos/openbase/planetsudo.server", "Date": "2013-10-11T11:51:41Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Location.getWorld()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (world.isChunkLoaded((x >> 4), (z >> 4))) { if ((world.getChunkAt((x >> 4), (z >> 4))) != last) last = world.getChunkAt((x >> 4), (z >> 4)); if (((type.spawnOn().isValid(world.getBlockTypeIdAt(x, (y - 1), z))) & (type.spawnIn().isValid(world.getBlockTypeIdAt(x, y, z)))) && (type.spawnIn().isValid(world.getBlockTypeIdAt(x, (y + 1), z)))) { if (areEntitiesOnBlock(last, x, y, z)) { if (canSpawn(type)) { com.citizens.resources.npclib.HumanNPC npc = com.citizens.resources.npclib.NPCSpawner.spawnNPC(0, com.citizens.properties.properties.UtilityProperties.getRandomName(type), loc.getWorld(), x, y, z, random.nextInt(360), 0, type); com.citizens.events.NPCCreatureSpawnEvent spawnEvent = new com.citizens.events.NPCCreatureSpawnEvent(npc, loc); org.bukkit.Bukkit.getServer().getPluginManager().callEvent(spawnEvent); if (spawnEvent.isCancelled()) { return null; } return npc; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7160/buggy-version/src.com.citizens.resources.npclib.creatures.DefaultSpawner.java", "BodyUseAPI": ["type.spawnOn().isValid(world.getBlockTypeIdAt(x, (y - 1), z))", "org.bukkit.World.getBlockTypeIdAt(int,int,int)", "com.citizens.resources.npclib.creatures.DefaultSpawner.areEntitiesOnBlock(org.bukkit.Chunk,int,int,int)", "org.bukkit.World.getBlockTypeIdAt(int,int,int)", "org.bukkit.World.getChunkAt(int,int)", "type.spawnIn().isValid(world.getBlockTypeIdAt(x, (y + 1), z))", "com.citizens.resources.npclib.NPCSpawner.spawnNPC(int,com.citizens.properties.properties.UtilityProperties.getRandomName(type),loc.getWorld(),int,int,int,int,int,com.citizens.resources.npclib.creatures.CreatureNPCType)", "org.bukkit.World.getBlockTypeIdAt(int,int,int)", "type.spawnIn().isValid(world.getBlockTypeIdAt(x, y, z))", "org.bukkit.World.getChunkAt(int,int)"], "Fixed commit": "497b11edb3bc3b1690544b4a0adce087ad26ec9a", "Url": "https://api.github.com/repos/fullwall/Citizens", "Date": "2011-07-08T07:30:40Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (posPanel.isNewLine()) posPanel.setQuantity(key.getQty()); else posPanel.setQuantity(posPanel.getQty().add(key.getQty()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4311/buggy-version/org.adempiere.pos.src.main.java.ui.swing.org.adempiere.pos.POSDocumentPanel.java", "BodyUseAPI": ["org.adempiere.pos.POSDocumentPanel.getQty()", "org.adempiere.pos.POSDocumentPanel.setQuantity(key.getQty())", "posPanel.getQty().add(key.getQty())", "org.adempiere.pos.POSDocumentPanel.setQuantity(posPanel.getQty().add(key.getQty()))"], "Fixed commit": "da2501bf3f02aa5abad7126b9ddb8c5d10efbb7e", "Url": "https://api.github.com/repos/adempiere/adempierePOS", "Date": "2016-05-27T01:41:00Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cgeo.geocaching.settings.Settings.useOrientationSensor(app)) { sensorDirectionObservable = cgeo.geocaching.sensors.OrientationProvider.create(app); }else if (cgeo.geocaching.sensors.RotationProvider.hasRotationSensor(app)) { sensorDirectionObservable = cgeo.geocaching.sensors.RotationProvider.create(app); }else { sensorDirectionObservable = cgeo.geocaching.sensors.MagnetometerAndAccelerometerProvider.create(app); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8376/buggy-version/main.src.cgeo.geocaching.sensors.Sensors.java", "BodyUseAPI": ["cgeo.geocaching.sensors.OrientationProvider.create(cgeo.geocaching.CgeoApplication)", "cgeo.geocaching.sensors.MagnetometerAndAccelerometerProvider.create(cgeo.geocaching.CgeoApplication)", "cgeo.geocaching.sensors.RotationProvider.hasRotationSensor(cgeo.geocaching.CgeoApplication)", "cgeo.geocaching.sensors.RotationProvider.create(cgeo.geocaching.CgeoApplication)"], "Fixed commit": "e387e20fd147cd82c1b23724ea0635476ecd87be", "Url": "https://api.github.com/repos/bck5/cgeo", "Date": "2015-11-02T19:01:16Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Hashtable<com.example.android.common.Markov.Prefix, java.util.Vector<java.lang.String>>.get(com.example.android.common.Markov.Prefix)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (suf == null) { suf = new java.util.Vector<>(); statetab.put(new com.example.android.common.Markov.Prefix(prefix), suf); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2160/buggy-version/common.src.main.java.com.example.android.common.Markov.java", "BodyUseAPI": [], "Fixed commit": "4765d6fcfd125d4c9c011b2161f7d8d01d93d804", "Url": "https://api.github.com/repos/markgray/MarkovChain", "Date": "2016-03-30T18:02:31Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentUser.getMusic()) ((edu.sonoma.group.peg_master.MainMenu) (getActivity())).Sound(currentUser.getMusic()); else { ((edu.sonoma.group.peg_master.MainMenu) (getActivity())).Sound(true); ((edu.sonoma.group.peg_master.MainMenu) (getActivity())).Sound(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6552/buggy-version/Peg_Master.app.src.main.java.edu.sonoma.group.peg_master.MainMenuFragment.java", "BodyUseAPI": ["((edu.sonoma.group.peg_master.MainMenu) (getActivity())).Sound(currentUser.getMusic())", "edu.sonoma.group.peg_master.User.getMusic()"], "Fixed commit": "6376482327867e33b75bac7dbfb116b3dc40f4ff", "Url": "https://api.github.com/repos/zenmasterjobo/CS370_Group_Project", "Date": "2016-04-29T03:30:26Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.tudelft.granula.util.json.JsonUtil.fromJson(nl.tudelft.granula.util.FileUtil.readFile(java.nio.file.Paths.get(driverLogPath)),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (execution.getPlatform().toLowerCase().contains(\"graphx\")) { granulaExecutor.setEnvEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5693/buggy-version/graphalytics-plugins-granula.src.main.java.nl.tudelft.graphalytics.granula.FailedJobArchiver.java", "BodyUseAPI": [], "Fixed commit": "f37b73771bbabc1404cae83b5abf55ad1fb5ceaa", "Url": "https://api.github.com/repos/ldbc/ldbc_graphalytics", "Date": "2016-10-11T10:27:34Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userFollowDo.getCustomFields()) != null) { java.lang.System.out.println((\"size::\" + (userFollowDo.getCustomFields().size()))); for (int i = 0; i < (userFollowDo.getCustomFields().size()); i++) if (userFollowDo.getCustomFields().get(i).getOptionalKey().equalsIgnoreCase(\"show_profile_page\")) { isEnabled = (userFollowDo.getCustomFields().get(i).getOptionalValue().equalsIgnoreCase(\"true\")) ? true : false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7643/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.profilepage.tab.content.Followers.ProfilePageUserInfoWidget.java", "BodyUseAPI": ["userFollowDo.getCustomFields().get(i).getOptionalKey()", "userFollowDo.getCustomFields().get(i).getOptionalValue()", "userFollowDo.getCustomFields().get(i).getOptionalValue().equalsIgnoreCase(java.lang.String)", "userFollowDo.getCustomFields().get(int)", "userFollowDo.getCustomFields().get(int)", "java.io.PrintStream.println((\"size::\" + (userFollowDo.getCustomFields().size())))", "userFollowDo.getCustomFields().size()", "userFollowDo.getCustomFields().size()", "org.ednovo.gooru.shared.model.user.UserFollowDo.getCustomFields()", "org.ednovo.gooru.shared.model.user.UserFollowDo.getCustomFields()", "org.ednovo.gooru.shared.model.user.UserFollowDo.getCustomFields()", "userFollowDo.getCustomFields().get(i).getOptionalKey().equalsIgnoreCase(java.lang.String)", "org.ednovo.gooru.shared.model.user.UserFollowDo.getCustomFields()"], "Fixed commit": "3872f79bca25f6c9d1cce6f515bd0d89260af0af", "Url": "https://api.github.com/repos/sravanthi1/Gooru-Web", "Date": "2014-07-01T10:01:43Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((names[i].length()) > 8) { toRetrun += (((\"|\" + (names[i].substring(0, 8))) + \"|\") + (times[i])) + \"|\\n\"; }else { toRetrun += (((\"|\" + (names[i])) + \"|\") + (times[i])) + \"|\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8219/buggy-version/MovingBox.src.ScoreBoard.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "38d91998b67df87a4823904f4d3607d8c1eeac36", "Url": "https://api.github.com/repos/itai-m/Games-in-Java", "Date": "2015-10-01T20:00:06Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hintMatrix) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1316/buggy-version/src.com.panda.minechecker.Board.java", "BodyUseAPI": [], "Fixed commit": "a146bf57acdaa33c5c97add8d1dcb241186d527e", "Url": "https://api.github.com/repos/masterpandabear/MineChecker", "Date": "2016-04-27T17:41:19Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getSource()) == (this)) { server.removePostHandler(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/420/buggy-version/core.src.main.java.edu.wpi.grip.core.sources.HttpSource.java", "BodyUseAPI": [], "Fixed commit": "35def9b015c23c028a525b7a62e4fcbc4ee8ded3", "Url": "https://api.github.com/repos/SamCarlberg/GRIP", "Date": "2016-03-24T15:56:49Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.SampleAPI.services.UserService.getAllUsersWithPagination(paginationFilterBean.getCursor(),paginationFilterBean.getNumber())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((paginationFilterBean.getNumber()) > (users.size())) { cursor = null; }else { java.lang.Integer after = ((paginationFilterBean.getCursor()) + (paginationFilterBean.getNumber())) - 1; java.lang.String nextUri = uriInfo.getBaseUriBuilder().path(com.example.SampleAPI.resources.UserResource.class).queryParam(com.example.SampleAPI.resources.CURSOR, ((paginationFilterBean.getCursor()) + (paginationFilterBean.getNumber()))).queryParam(com.example.SampleAPI.resources.NUMBER, paginationFilterBean.getNumber()).build().toString(); cursor = new com.example.SampleAPI.models.Cursor(after, nextUri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6715/buggy-version/src.main.java.com.example.SampleAPI.resources.UserResource.java", "BodyUseAPI": ["uriInfo.getBaseUriBuilder().path(com.example.SampleAPI.resources.UserResource.class).queryParam(com.example.SampleAPI.resources.CURSOR, ((paginationFilterBean.getCursor()) + (paginationFilterBean.getNumber()))).queryParam(com.example.SampleAPI.resources.NUMBER, paginationFilterBean.getNumber()).build().toString()", "com.example.SampleAPI.resources.beans.PaginationFilterBean.getNumber()", "uriInfo.getBaseUriBuilder().path(com.example.SampleAPI.resources.UserResource.class).queryParam(com.example.SampleAPI.resources.CURSOR, ((paginationFilterBean.getCursor()) + (paginationFilterBean.getNumber()))).queryParam(com.example.SampleAPI.resources.NUMBER,paginationFilterBean.getNumber())", "com.example.SampleAPI.resources.beans.PaginationFilterBean.getCursor()", "com.example.SampleAPI.resources.beans.PaginationFilterBean.getCursor()", "com.example.SampleAPI.resources.beans.PaginationFilterBean.getNumber()", "com.example.SampleAPI.resources.beans.PaginationFilterBean.getNumber()", "uriInfo.getBaseUriBuilder().path(com.example.SampleAPI.resources.UserResource.class).queryParam(com.example.SampleAPI.resources.CURSOR, ((paginationFilterBean.getCursor()) + (paginationFilterBean.getNumber()))).queryParam(com.example.SampleAPI.resources.NUMBER, paginationFilterBean.getNumber()).build()", "uriInfo.getBaseUriBuilder().path(com.example.SampleAPI.resources.UserResource.class).queryParam(com.example.SampleAPI.resources.CURSOR,((paginationFilterBean.getCursor()) + (paginationFilterBean.getNumber())))"], "Fixed commit": "6f12002e0004b7bb86215e1d57bfd37871aac35d", "Url": "https://api.github.com/repos/melikabarzegaran/SampleAPI", "Date": "2016-08-01T02:10:34Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mDrawerLayout.isDrawerOpen(GravityCompat.START)) { mDrawerLayout.closeDrawers(); }else if ((fragmentStack.size()) == 1) { finish(); }else if ((fragmentStack.size()) > 1) { android.support.v4.app.FragmentTransaction transaction = getSupportFragmentManager().beginTransaction(); transaction.hide(mContent); fragmentStack.remove(((fragmentStack.size()) - 1)); mContent = fragmentStack.get(((fragmentStack.size()) - 1)); transaction.show(mContent); transaction.commit(); curFragName = mContent.getTag(); onPrepareOptionsMenu(mOptionsMenu); }else { super.onBackPressed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5317/buggy-version/app.src.main.java.arashincleric.com.magicapplicationfun.MainActivity.java", "BodyUseAPI": ["android.support.v4.widget.DrawerLayout.closeDrawers()"], "Fixed commit": "4a53172ccd1bbda3d5f2b54e1cc6426bd00f9ea0", "Url": "https://api.github.com/repos/dmt5dh/MagicApplicationFun", "Date": "2015-11-02T17:12:21Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((etPhonePrimary.getText().toString().isEmpty()) || (etEmail.getText().toString().isEmpty())) { android.widget.Toast.makeText(getApplicationContext(), \"Primary phone and email must be filled out to continue.\", Toast.LENGTH_SHORT).show(); }else { android.content.Intent i = new android.content.Intent(this, com.example.ekok.fbutourguideapp.Guides.GuidePayment.class); startActivity(i); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/966/buggy-version/app.src.main.java.com.example.ekok.fbutourguideapp.Guides.GuideContact.java", "BodyUseAPI": [], "Fixed commit": "da0f01be2f0c59488eb182291b5519b23140ae41", "Url": "https://api.github.com/repos/MaggieTsang/FBUTourGuideCurrent", "Date": "2016-07-28T20:32:54Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((etPaymentMethod.getText().toString().isEmpty()) || (etHourlyPay.getText().toString().isEmpty())) || (etCurrencyType.getText().toString().isEmpty())) { android.widget.Toast.makeText(getApplicationContext(), \"Please fill out required fields.\", Toast.LENGTH_SHORT).show(); }else { android.content.Intent i = new android.content.Intent(this, com.example.ekok.fbutourguideapp.Guides.GuideViewProfile.class); startActivity(i); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/966/buggy-version/app.src.main.java.com.example.ekok.fbutourguideapp.Guides.GuidePayment.java", "BodyUseAPI": [], "Fixed commit": "da0f01be2f0c59488eb182291b5519b23140ae41", "Url": "https://api.github.com/repos/MaggieTsang/FBUTourGuideCurrent", "Date": "2016-07-28T20:32:54Z"},
{"Line": "=>741", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gregtech.api.util.GT_Recipe.GT_Recipe_Map.findRecipe(getBaseMetaTileEntity(),gregtech.api.util.GT_Recipe,boolean,V[mTier],net.minecraftforge.fluids.FluidStack[],net.minecraft.item.ItemStack,net.minecraft.item.ItemStack[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((tRecipe.mSpecialValue) == (-200)) && (((mCleanroom) == null) || ((mCleanroom.mEfficiency) == 0))) return gregtech.api.metatileentity.implementations.GT_MetaTileEntity_BasicMachine.FOUND_RECIPE_BUT_DID_NOT_MEET_REQUIREMENTS;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2404/buggy-version/src.main.java.gregtech.api.metatileentity.implementations.GT_MetaTileEntity_BasicMachine.java", "BodyUseAPI": [], "Fixed commit": "1525940bd5d0fd0bd5a4ef70f465362ae8458c2b", "Url": "https://api.github.com/repos/maixgame/GT5-Unofficial", "Date": "2017-03-02T18:17:23Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.errai.ioc.client.container.Factory<T>.createProxy(org.jboss.errai.ioc.client.container.AbstractContext)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(proxy instanceof org.jboss.errai.ioc.client.container.NonProPATHbleWrapper)) { instance = factory.createInstance(getContextManager()); proxy.setInstance(instance); }else { instance = proxy.asBeanType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5483/buggy-version/errai-ioc.src.main.java.org.jboss.errai.ioc.client.container.AbstractContext.java", "BodyUseAPI": ["org.jboss.errai.ioc.client.container.Proxy<T>.asBeanType()", "org.jboss.errai.ioc.client.container.Proxy<T>.setInstance(T)"], "Fixed commit": "0af4740828bf014fad6115f5972cc50a7888bd2a", "Url": "https://api.github.com/repos/mbarkley/errai", "Date": "2015-08-31T19:25:32Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.admalamalinchock.thedudleycolony.game.Game.getUpgrade(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(x.isActive())) { viewHolder.bind(x); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/1741/buggy-version/app.src.main.java.com.admalamalinchock.thedudleycolony.UpgradeAdapter.java", "BodyUseAPI": ["com.admalamalinchock.thedudleycolony.UpgradeAdapter.UpgradeViewHolder.bind(com.admalamalinchock.thedudleycolony.game.Upgrades.Upgrade)"], "Fixed commit": "e8956e5d5ca439fe5d9cb7f9dbd4f4a21956dd08", "Url": "https://api.github.com/repos/raorbit/TheDudleyColony", "Date": "2015-06-06T06:33:13Z"},
{"Line": "=>663", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.projectkorra.projectkorra.BendingPlayer.getBendingPlayer(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bPlayer == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3784/buggy-version/src.com.projectkorra.projectkorra.GeneralMethods.java", "BodyUseAPI": [], "Fixed commit": "9ddff69435177082cfd3ead52c6a6f19c1b1be4f", "Url": "https://api.github.com/repos/jayoevans/ProjectKorra", "Date": "2017-10-15T14:16:11Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((field[i][j]) == null) returnField += \"0,\"; else returnField += (field[i][j].getId()) + \",\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/41/buggy-version/src.de.dhbw.die5gewinnt.controller.db.DataManipulation.java", "BodyUseAPI": ["field[i][j].getId()"], "Fixed commit": "372ad1e427e3bbaeab7f7b08962745d72f3faba2", "Url": "https://api.github.com/repos/kathibr/die5gewinnt", "Date": "2013-10-11T09:13:06Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (privateToPublic.values().contains(address.getHost())) { return address; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5170/buggy-version/hazelcast-client.src.main.java.com.hazelcast.client.spi.impl.AwsAddressTranslator.java", "BodyUseAPI": [], "Fixed commit": "ff1f18b5ebdc685a3aaa871bede7f5b86d15e862", "Url": "https://api.github.com/repos/bilalyasar/hazelcast", "Date": "2016-09-27T15:15:29Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentEntryUri) != null) { if ((!(android.text.TextUtils.isEmpty(mCoffeeUsedEditText.getText().toString()))) && (!(android.text.TextUtils.isEmpty(mYieldEditText.getText().toString())))) { double coffeeUsedDouble = java.lang.Double.parseDouble(mCoffeeUsedEditText.getText().toString()); double yieldDouble = java.lang.Double.parseDouble(mYieldEditText.getText().toString()); mRatio = java.lang.String.valueOf(((java.lang.Math.round(((yieldDouble / coffeeUsedDouble) * 100.0))) / 100.0)); mShowRatio.setText((\"1:\" + (mRatio))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4476/buggy-version/app.src.main.java.com.keelanbyrne.keelan542.coffeelog.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "25360f6be9e1e22fa9d04614e976a48bc4efd78c", "Url": "https://api.github.com/repos/keelan542/CoffeeLog", "Date": "2017-07-26T17:52:01Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(set(false))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6963/buggy-version/src.main.java.jredis.SetCommand.java", "BodyUseAPI": [], "Fixed commit": "971bf322bbaf1242067f8837851904a6181802b3", "Url": "https://api.github.com/repos/anoopelias/jredis", "Date": "2014-02-23T06:12:03Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(set(true))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6963/buggy-version/src.main.java.jredis.SetCommand.java", "BodyUseAPI": [], "Fixed commit": "971bf322bbaf1242067f8837851904a6181802b3", "Url": "https://api.github.com/repos/anoopelias/jredis", "Date": "2014-02-23T06:12:03Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spinnerCardView.getSpinnerStops().getSelectedItemPosition()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6927/buggy-version/mobile.src.main.java.org.thecosmicfrog.luasataglance.activity.LineFragment.java", "BodyUseAPI": [], "Fixed commit": "54b343b10605336d9cc0f34afaa42350a3e89972", "Url": "https://api.github.com/repos/thecosmicfrog/LuasataGlance", "Date": "2016-01-11T20:25:23Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((io.github.pr0methean.betterrandom.seed.RandomSeederThread.INSTANCES.get(seedGenerator)) == (this)) { io.github.pr0methean.betterrandom.seed.RandomSeederThread.INSTANCES.remove(seedGenerator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6815/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.seed.RandomSeederThread.java", "BodyUseAPI": ["java.util.Map<io.github.pr0methean.betterrandom.seed.SeedGenerator, io.github.pr0methean.betterrandom.seed.RandomSeederThread>.remove(io.github.pr0methean.betterrandom.seed.SeedGenerator)"], "Fixed commit": "6962344f2ccd8d808a370458d194b56421b607aa", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-11-13T19:08:17Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((endPos >= 0) && (endPos < (main.Main.GRIDHEIGHT))) { distance -= ((this.map.getGridTerrain()[column][endPos].hasCategory(TerrainCategory.ROUGH)) && (!(unitType.hasCategory(data.UnitCategory.FLYING)))) ? 2 : 1; if ((this.map.getGridTerrain()[column][endPos].hasCategory(TerrainCategory.OBSTACLE)) && (!(unitType.hasCategory(UnitCategory.FLYING)))) { endPos -= directionToWalk; break; } }else { distance--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3825/buggy-version/GridStrategy.src.data.GameGrid.java", "BodyUseAPI": ["this.map.getGridTerrain()[column][endPos].hasCategory(TerrainCategory.ROUGH)", "this.map.getGridTerrain()[column][endPos].hasCategory(TerrainCategory.OBSTACLE)"], "Fixed commit": "188f7a51e9e754e5cccf67b9992e49aabcbbea2c", "Url": "https://api.github.com/repos/oparish/GridStrategy", "Date": "2016-05-02T08:56:48Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doc.getElementsByTag(\"table\").first()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (table == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7787/buggy-version/app.src.main.java.de.maryvofin.stundenplan.app.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "b10eeb2270a12fde4582c1d9a12144c8bdbfe1b1", "Url": "https://api.github.com/repos/maryvofin/stundenplan", "Date": "2016-01-26T11:34:03Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.terasology.structureTemplates.util.ProtectedRegionUtility.isInProtectedRegion(positions, regionEntity)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/686/buggy-version/src.main.java.org.terasology.structureTemplates.internal.systems.ProtectedRegionServerSystem.java", "BodyUseAPI": [], "Fixed commit": "ed1504e33e34d57ee681f74e8be0e6ad9174cb15", "Url": "https://api.github.com/repos/Terasology/StructureTemplates", "Date": "2017-07-29T15:08:46Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.terasology.structureTemplates.util.ProtectedRegionUtility.isInProtectedRegion(positions, regionEntity)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/686/buggy-version/src.main.java.org.terasology.structureTemplates.internal.systems.ProtectedRegionClientSystem.java", "BodyUseAPI": [], "Fixed commit": "ed1504e33e34d57ee681f74e8be0e6ad9174cb15", "Url": "https://api.github.com/repos/Terasology/StructureTemplates", "Date": "2017-07-29T15:08:46Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((tabManager) == null) || ((tabManager.getEditorAdapter()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7029/buggy-version/app.src.main.java.com.jecelyin.editor.v2.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "64df47b2cfb3ee73c1e7f049bc7370f3b4c4992a", "Url": "https://api.github.com/repos/jecelyin/920-text-editor-v2", "Date": "2016-09-17T03:19:36Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action.equals(\"getAirplaneModeStatus\")) { boolean isEnabled = (Settings.System.getInt(this.cordova.getActivity().getContentResolver(), Settings.System.AIRPLANE_MODE_ON, 0)) == 1; callbackContext.success(new org.json.JSONObject().put(\"enabled\", isEnabled)); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6473/buggy-version/src.android.com.pbakondy.Sim.java", "BodyUseAPI": [], "Fixed commit": "bee4cf8394fb6d167e6b753d8f271f8b3e6ae4ea", "Url": "https://api.github.com/repos/scwl/cordova-plugin-sim", "Date": "2015-05-28T10:00:22Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.entirej.framework.report.data.controllers.EJReportBlockController.getFocusedRecord()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((focusedRecord != null) && (!(focusedRecord.isInitialised()))) { focusedRecord.initialise(); _blockController.getReportController().getActionController().postQuery(_blockController.getReportController().getEJReport(), new org.entirej.framework.report.EJReportRecord(focusedRecord)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2253/buggy-version/entirej-report.src.org.entirej.framework.report.internal.EJInternalReportBlock.java", "BodyUseAPI": ["_blockController.getReportController().getActionController().postQuery(_blockController.getReportController().getEJReport(),org.entirej.framework.report.EJReportRecord)", "org.entirej.framework.report.data.EJReportDataRecord.initialise()"], "Fixed commit": "0d661854b4da8dedce613f7109e423ed63148635", "Url": "https://api.github.com/repos/entirej/reports-core", "Date": "2015-01-16T15:00:45Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.entirej.framework.report.data.controllers.EJReportBlockController.getFocusedRecord()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((index) == (-1)) && (focusedRecord != null)) { index += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/2253/buggy-version/entirej-report.src.org.entirej.framework.report.data.controllers.EJReportBlockController.java", "BodyUseAPI": [], "Fixed commit": "0d661854b4da8dedce613f7109e423ed63148635", "Url": "https://api.github.com/repos/entirej/reports-core", "Date": "2015-01-16T15:00:45Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["frameData.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bpmStr.isEmpty()) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/610/buggy-version/src.main.java.com.mpatric.mp3agic.AbstractID3v2Tag.java", "BodyUseAPI": [], "Fixed commit": "e42080ec083d130d1f2415baba1d5b8999c3d4a7", "Url": "https://api.github.com/repos/patrikvarga/mp3agic", "Date": "2016-06-26T07:17:47Z"},
{"Line": "=>2003", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (self.getClass().getSimpleName().equals(\"ChatsActivity\")) { openActivity(self, com.llp.lunchkaki.activities.ChatsActivity.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8262/buggy-version/app.src.main.java.com.llp.lunchkaki.activities.AbstractActivity.java", "BodyUseAPI": ["com.llp.lunchkaki.activities.AbstractActivity.35.openActivity(com.llp.lunchkaki.activities.AbstractActivity,java.lang.Class)"], "Fixed commit": "a2671fc0455bd7e5d968a8211c6b682d93278989", "Url": "https://api.github.com/repos/brianfwz/lkk", "Date": "2016-05-10T08:36:24Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (e != null) { if ((e.getMessage()) != null) android.util.Log.d(\"DEBUG\", e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/6479/buggy-version/habmodem.src.com.brejza.matt.habmodem.PredictionGrabber.java", "BodyUseAPI": ["java.lang.Exception.getMessage()", "java.lang.Exception.getMessage()", "android.util.Log.d(java.lang.String,java.lang.String)"], "Fixed commit": "a25e5e3b7f04f4d66cf60a1b580c3207caa0a3a3", "Url": "https://api.github.com/repos/mattbrejza/rtty_modem", "Date": "2014-04-02T22:06:11Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (cmd.getClose().contains(group)) { openTagCount -= 1; }else if (cmd.getOpen().contains(group)) { openTagCount += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/8658/buggy-version/src.main.java.megascus.brainfuck.BrainFuck.java", "BodyUseAPI": ["cmd.getOpen().contains(java.lang.String)", "megascus.brainfuck.Commands.getOpen()"], "Fixed commit": "e18d5b3f20c18068bbaa4ab9eae4a329332dd8ec", "Url": "https://api.github.com/repos/megascus/BrainFuck", "Date": "2013-01-06T09:52:25Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.dirt) < 0) { this.dirt = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4221/buggy-version/CleanSweep.src.com.blackdroidstudios.cleansweep.map.Floor.java", "BodyUseAPI": [], "Fixed commit": "0f211cc7133366f66974b31422e3a24930568bb6", "Url": "https://api.github.com/repos/shinqu/SomeRandomSEPractice", "Date": "2015-11-07T17:41:32Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mParent.mListModel.getRoom().equalsIgnoreCase(data.optString(\"room\"))) { if (!(username.equalsIgnoreCase(mParent.mLoginModel.getId()))) addMessage(username, message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4254/buggy-version/app.src.main.java.com.sparity.webchat.fragments.MessageFragment.java", "BodyUseAPI": ["mParent.mLoginModel.getId()", "java.lang.String.equalsIgnoreCase(mParent.mLoginModel.getId())"], "Fixed commit": "b9a23ee7465bb762262f93a0d9fb2b0cf795b567", "Url": "https://api.github.com/repos/shankarpilli/SocketIoDemo", "Date": "2017-09-16T11:27:55Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position) != null) refreshBoundingBox();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7256/buggy-version/src.minecraft.ml.core.world.structure.MLStructureComponent.java", "BodyUseAPI": [], "Fixed commit": "d08b5a14c6b657f3ce607bc9c5682b0095d8c9db", "Url": "https://api.github.com/repos/MatchlighterMods/MLCore", "Date": "2014-07-22T19:44:43Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((googleApiClient.isConnected()) && (isLocationTracking)) { LocationServices.FusedLocationApi.removeLocationUpdates(googleApiClient, this); isLocationTracking = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/4569/buggy-version/app.src.main.java.cwa115.trongame.GameActivity.java", "BodyUseAPI": ["LocationServices.FusedLocationApi.removeLocationUpdates(com.google.android.gms.common.api.GoogleApiClient,cwa115.trongame.GameActivity)"], "Fixed commit": "e3f067d40d649a340bbbada400ddd76f2bf53400", "Url": "https://api.github.com/repos/TronGame/CWA115", "Date": "2015-10-15T15:31:22Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Constants.movePattern.matcher(p).matches())) { throw new Gomoku.CommandFailException(\"only support move function\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3902/buggy-version/src.Gomoku.GomokuBoard.java", "BodyUseAPI": [], "Fixed commit": "c060917dd36b67887f462eedd78f4478eaa1437a", "Url": "https://api.github.com/repos/macchicken/COMP9220_ASSIGNThreeGomoku", "Date": "2015-05-12T03:35:23Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.apache.avro.LogicalTypes.fromSchemaIgnoreInvalid(org.talend.daikon.avro.AvroUtils.unwrapIfNullable(f.schema()))) == (org.apache.avro.LogicalTypes.date())) { f.addProp(SchemaConstants.TALEND_COLUMN_PATTERN, org.talend.components.snowflake.runtime.SnowflakeSourceOrSink.TALEND_DEFAULT_DATE_PATTERN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/3132/buggy-version/components.components-snowflake.src.main.java.org.talend.components.snowflake.runtime.SnowflakeSourceOrSink.java", "BodyUseAPI": ["org.apache.avro.Schema.Field.addProp(SchemaConstants.TALEND_COLUMN_PATTERN,java.lang.String)"], "Fixed commit": "a86eee5a36022b2266bed3fa934fb2614a7bc555", "Url": "https://api.github.com/repos/jleloup/components", "Date": "2017-03-16T08:42:03Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((closeLatch) != null) { closeLatch.countDown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5367/buggy-version/cam2.src.main.java.com.commonsware.cwac.cam2.camera2.CameraTwoEngine.java", "BodyUseAPI": [], "Fixed commit": "d9cbe4154dcddf4805943eaac724ef2861c762d3", "Url": "https://api.github.com/repos/hijamoya/cwac-camera", "Date": "2015-05-23T15:01:30Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((observers) != null) { for (com.deaux.fan.FanViewListener l : observers) { l.onFanViewOpen(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5024/buggy-version/src.com.deaux.fan.FanView.java", "BodyUseAPI": [], "Fixed commit": "2d78278ff189da27849e6c882c8422b18f6b2a7b", "Url": "https://api.github.com/repos/Gregadeaux/android-fly-in-app-navigation", "Date": "2013-05-15T03:13:45Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((observers) != null) { for (com.deaux.fan.FanViewListener l : observers) { l.onFanViewClose(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/5024/buggy-version/src.com.deaux.fan.FanView.java", "BodyUseAPI": [], "Fixed commit": "2d78278ff189da27849e6c882c8422b18f6b2a7b", "Url": "https://api.github.com/repos/Gregadeaux/android-fly-in-app-navigation", "Date": "2013-05-15T03:13:45Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x.equals(\"rr\")) { rrSimulatorConfig = simConfig; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V135/7871/buggy-version/services.src.main.java.gov.nist.toolkit.services.server.orchestration.IdsOrchestrationBuilder.java", "BodyUseAPI": [], "Fixed commit": "d69519f123752d93ec32f01536a9d07c2f289460", "Url": "https://api.github.com/repos/usnistgov/iheos-toolkit2", "Date": "2017-02-08T18:40:03Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mWaiting)) mUITime += duration;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2082/buggy-version/src.usask.hci.fastdraw.StudyController.java", "BodyUseAPI": [], "Fixed commit": "4cd8a69f6192f2d8f84b9f96771db798e04f1b40", "Url": "https://api.github.com/repos/tsion/FastDraw", "Date": "2013-07-17T22:34:58Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((embeddedColumns != null) && (!(embeddedColumns.isEmpty()))) { enhanceEntityList = client.find(m.getEntityClazz(), embeddedColumns); }else { for (com.impetus.kundera.db.SearchResult searchResult : searchResults) { primaryKeys.add(searchResult.getPrimaryKey()); } enhanceEntityList = ((java.util.List<com.impetus.kundera.client.EnhanceEntity>) (((com.impetus.client.cassandra.pelops.PelopsClient) (client)).find(m.getEntityClazz(), m.getRelationNames(), true, m, primaryKeys.toArray(new java.lang.String[]{ })))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5956/buggy-version/kundera-cassandra.src.main.java.com.impetus.client.cassandra.query.CassandraEntityReader.java", "BodyUseAPI": ["com.impetus.kundera.client.Client.find(m.getEntityClazz(),java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "ab31f87f83a087890bad4956665a4fb71cec301a", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2012-07-24T15:34:50Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(zipcode)) { return new java.lang.Integer(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5371/buggy-version/src.main.java.gov.ca.cwds.rest.api.domain.DomainObject.java", "BodyUseAPI": [], "Fixed commit": "61cc50144bc972ca504510756e9433504e4743d2", "Url": "https://api.github.com/repos/ca-cwds/API", "Date": "2016-09-28T04:25:38Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["e.value.toPlainString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(str.contains(\".\"))) { write(\".0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6687/buggy-version/jkind-common.src.jkind.lustre.PrettyPrintVisitor.java", "BodyUseAPI": [], "Fixed commit": "8c412a6aefa2390148ef079af6dc3aec0dd3f139", "Url": "https://api.github.com/repos/agacek/jkind", "Date": "2013-10-23T18:27:21Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (httpResponse != null) { httpResponse.setStatus(HttpServletResponse.SC_UNAUTHORIZED); httpResponse.sendError(HttpServletResponse.SC_UNAUTHORIZED); httpResponse.flushBuffer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7559/buggy-version/platform.security.handler.security-handler-pki.src.main.java.org.codice.ddf.security.handler.pki.CrlChecker.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.setStatus(HttpServletResponse.SC_UNAUTHORIZED)", "javax.servlet.http.HttpServletResponse.sendError(HttpServletResponse.SC_UNAUTHORIZED)", "javax.servlet.http.HttpServletResponse.flushBuffer()"], "Fixed commit": "9ee1ed6e9c17c227e550d8a576b820dd002c6e50", "Url": "https://api.github.com/repos/codice/ddf", "Date": "2015-11-02T20:16:31Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((periodID) != null) { dbRef.child(\"periods\").child(periodID).child(\"budgetGoal\").child(currentTimestr).setValue(java.lang.Double.parseDouble(changedGoal.substring(1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/22/buggy-version/app.src.main.java.com.example.ronjc.tiptracker.SetBudgetGoalFragment.java", "BodyUseAPI": [], "Fixed commit": "39913f314e6bd6d43f7db7148ef91d0b224c6c47", "Url": "https://api.github.com/repos/tipsytiptracker/tiptracker", "Date": "2017-05-01T09:41:42Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((periodID) != null) { dbRef.child(\"periods\").child(periodID).child(\"budgetGoal\").child(currentTimestr).setValue(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/22/buggy-version/app.src.main.java.com.example.ronjc.tiptracker.SetBudgetGoalFragment.java", "BodyUseAPI": [], "Fixed commit": "39913f314e6bd6d43f7db7148ef91d0b224c6c47", "Url": "https://api.github.com/repos/tipsytiptracker/tiptracker", "Date": "2017-05-01T09:41:42Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((periodID) != null) { dbRef.child(\"periods\").child(periodID).child(\"budgetGoal\").child(currentTimestr).setValue(cg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/22/buggy-version/app.src.main.java.com.example.ronjc.tiptracker.SetBudgetGoalFragment.java", "BodyUseAPI": [], "Fixed commit": "39913f314e6bd6d43f7db7148ef91d0b224c6c47", "Url": "https://api.github.com/repos/tipsytiptracker/tiptracker", "Date": "2017-05-01T09:41:42Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<T>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n <= 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2083/buggy-version/src.infoadminsys.util.AdminUtil.java", "BodyUseAPI": [], "Fixed commit": "3605d159015d2c39ffc47ef259616cfc03e026d7", "Url": "https://api.github.com/repos/SHiftLin/InfoAdminSys", "Date": "2017-05-05T12:07:15Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jorgediazest.util.modelquery.ModelQuery.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"com.liferay.calendar.model.CalendarBooking\".equals(model.getClassName())) { attributesToCheck.add(\"calendarId\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2186/buggy-version/docroot.WEB-INF.src.jorgediazest.indexchecker.portlet.CallableCheckGroupAndModel.java", "BodyUseAPI": [], "Fixed commit": "49af32d50c762e96e36e9a00d7d5890147c5159c", "Url": "https://api.github.com/repos/jorgediaz-lr/index-checker", "Date": "2017-05-14T12:49:46Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (CALENDAR_BOOKING.equals(className)) { return jorgediazest.indexchecker.model.CalendarBookingQuery.class; }else if (DDL_RECORD.equals(className)) { return jorgediazest.indexchecker.model.DDLRecordQuery.class; }else if (DL_FILE_ENTRY.equals(className)) { return jorgediazest.indexchecker.model.DLFileEntryQuery.class; }else if (JOURNAL_ARTICLE.equals(className)) { return jorgediazest.indexchecker.model.JournalArticleQuery.class; }else if (MB_MESSAGE.equals(className)) { return jorgediazest.indexchecker.model.MBMessageQuery.class; }else { return jorgediazest.indexchecker.model.IndexCheckerModelQuery.class; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2186/buggy-version/docroot.WEB-INF.src.jorgediazest.indexchecker.model.IndexCheckerModelQueryFactory.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "49af32d50c762e96e36e9a00d7d5890147c5159c", "Url": "https://api.github.com/repos/jorgediaz-lr/index-checker", "Date": "2017-05-14T12:49:46Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (loadNow) { data = dataProvider.load(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5356/buggy-version/src.main.java.io.github.nucleuspowered.nucleus.dataservices.Service.java", "BodyUseAPI": [], "Fixed commit": "042055460f9eb967f746e58ec1e3d4cd335ed854", "Url": "https://api.github.com/repos/NucleusPowered/Nucleus", "Date": "2016-08-07T10:55:37Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edacc.parameterspace.graph.ParameterGraph.getParameterMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pgraph_map.get(param.getParameter().getName()).getDomain().contains(param.getFixedValue())) { config.setParameterValue(parameter_name, param.getFixedValue()); }else { try { int i = java.lang.Integer.valueOf(param.getFixedValue()); config.setParameterValue(parameter_name, i); } catch (java.lang.NumberFormatException e) { try { double f = java.lang.Double.valueOf(param.getFixedValue()); config.setParameterValue(parameter_name, f); } catch (java.lang.NumberFormatException e2) { config.setParameterValue(parameter_name, param.getFixedValue()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5911/buggy-version/src.edacc.api.APIImpl.java", "BodyUseAPI": ["edacc.parameterspace.ParameterConfiguration.setParameterValue(java.lang.String,param.getFixedValue())", "edacc.api.ConfigurationScenarioParameter.getFixedValue()", "edacc.api.ConfigurationScenarioParameter.getFixedValue()", "edacc.api.ConfigurationScenarioParameter.getFixedValue()", "java.lang.Double.valueOf(param.getFixedValue())", "java.lang.Integer.valueOf(param.getFixedValue())", "edacc.parameterspace.ParameterConfiguration.setParameterValue(java.lang.String,param.getFixedValue())", "edacc.api.ConfigurationScenarioParameter.getFixedValue()"], "Fixed commit": "bbcd00b0d8d0460c25d256241119ff346f754377", "Url": "https://api.github.com/repos/ceari/edacc_api", "Date": "2011-10-15T14:49:22Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shutdown) { java.lang.Thread.sleep(HttpPyramidConstants.SYSTEM_COMMANDS_DELAY_AFTER_FINISH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4290/buggy-version/pyramid-http-server.src.main.java.net.algart.pyramid.http.server.HttpPyramidService.java", "BodyUseAPI": [], "Fixed commit": "cfd5b3812df2043717349b413fdf625e8189c0b6", "Url": "https://api.github.com/repos/Daniel-Alievsky/pyramid-services", "Date": "2016-10-30T18:33:04Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.prairie.eemory.enml.FontStyle.forNumber(styleRange.fontStyle)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rangeStyle == (com.prairie.eemory.enml.FontStyle.NORMAL)) && (defaultForeStyle != (com.prairie.eemory.enml.FontStyle.NORMAL))) { fontStyle = defaultForeStyle; }else { fontStyle = rangeStyle; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5381/buggy-version/com.prairie.eemory.src.com.prairie.eemory.util.EclipseUtil.java", "BodyUseAPI": [], "Fixed commit": "3187168ea9a49f8b935e08024d895f51cbe5a603", "Url": "https://api.github.com/repos/prairie/Eemory", "Date": "2014-12-31T10:27:39Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (formula.matches(\"\\\\w+[\\\\+\\\\-\\\\*\\\\/]{2,}\\\\w+\")) { throw new java.lang.RuntimeException((value + \" is not a valid formula\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3092/buggy-version/src.spreadsheet.cell.object.impl.FormulaCellObject.java", "BodyUseAPI": [], "Fixed commit": "882c7d8024c3b8be85a48525e908b669d4d4e63f", "Url": "https://api.github.com/repos/jerh/Spreadsheet", "Date": "2012-08-05T03:24:05Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (at.endsWith(\",\")) at = at.substring(0, ((at.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/852/buggy-version/src.com.appointext.database.CalendarInsertEvent.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "a5cea645b0ba2c214933e9bc483468bed0139e26", "Url": "https://api.github.com/repos/CodeGood/AppoinText", "Date": "2014-05-02T17:18:44Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startNextActivity) startActivity(intent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1094/buggy-version/app.src.main.java.com.rrc.wilson.developerreference.MainMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "5558f5c18192e1658ae3187b5ee248698a175590", "Url": "https://api.github.com/repos/wilsonthehungryman/DeveloperReference", "Date": "2017-04-02T16:25:24Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (genderString == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2095/buggy-version/src.main.java.ru.tsconsulting.entities.Employee.java", "BodyUseAPI": [], "Fixed commit": "9b4fbcd85365930918d3709538ec3ae0412d56cf", "Url": "https://api.github.com/repos/Lils2013/EmployeeManager", "Date": "2017-09-12T12:22:57Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.wily.introscope.epagent.EpaUtils.getFeedback().isVerboseEnabled(module)) { com.wily.introscope.epagent.EpaUtils.getFeedback().verbose(module, com.ca.apm.swat.epaplugins.utils.AsmMessages.getMessage(AsmMessages.GENERATE_METRICS_ERROR_710, exception.getMessage(), resultString)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4775/buggy-version/asm-monitor.src.main.java.com.ca.apm.swat.epaplugins.asm.monitor.BaseMonitor.java", "BodyUseAPI": ["com.wily.introscope.epagent.EpaUtils.getFeedback().verbose(java.lang.Module,com.ca.apm.swat.epaplugins.utils.AsmMessages.getMessage(AsmMessages.GENERATE_METRICS_ERROR_710, exception.getMessage(), resultString))"], "Fixed commit": "abeca7f625fa78c798e3aee74a8335f28149a1cf", "Url": "https://api.github.com/repos/CA-APM/ca-apm-fieldpack-asm", "Date": "2016-05-27T04:41:32Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null != (org.eclipse.sisu.space.URLClassSpace.SYSTEM_LOADER)) && ((loader) == (org.eclipse.sisu.space.URLClassSpace.SYSTEM_LOADER))) { if (((!recurse) && (null != glob)) && ((glob.indexOf('*')) < 0)) { return getResources(((org.eclipse.sisu.space.ResourceEnumeration.normalizeSearchPath(path)) + glob)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/770/buggy-version/org.eclipse.sisu.inject.src.org.eclipse.sisu.space.URLClassSpace.java", "BodyUseAPI": [], "Fixed commit": "a5bb14a7aabd0327b643750871d929e4fe0e057d", "Url": "https://api.github.com/repos/eclipse/sisu.inject", "Date": "2015-09-10T16:54:10Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.jidToShaOneMap.containsKey(tag.getAttribute(\"from\").split(\"/\")[0]))) { this.jidToShaOneMap.put(tag.getAttribute(\"from\").split(\"/\")[0], shaOne); directi.androidteam.training.chatclient.PacketHandlers.Tag vCardTag = new directi.androidteam.training.chatclient.PacketHandlers.IQTag(\"getVCard\", tag.getAttribute(\"from\"), \"get\", new directi.androidteam.training.chatclient.PacketHandlers.VCardTag(\"vcard-temp\")); directi.androidteam.training.chatclient.Util.PacketWriter.addToWriteQueue(vCardTag.setRecipientAccount(tag.getAttribute(\"to\").split(\"/\")[0])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4107/buggy-version/src.directi.androidteam.training.chatclient.PacketHandlers.RosterHandler.java", "BodyUseAPI": ["tag.getAttribute(\"from\").split(java.lang.String)", "directi.androidteam.training.chatclient.Util.PacketWriter.addToWriteQueue(vCardTag.setRecipientAccount(tag.getAttribute(\"to\").split(\"/\")[0]))", "directi.androidteam.training.chatclient.PacketHandlers.Tag.setRecipientAccount(tag.getAttribute(\"to\").split(\"/\")[0])", "directi.androidteam.training.chatclient.PacketHandlers.Tag.getAttribute(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(tag.getAttribute(\"from\").split(\"/\")[0],java.lang.String)", "tag.getAttribute(\"to\").split(java.lang.String)", "directi.androidteam.training.chatclient.PacketHandlers.Tag.getAttribute(java.lang.String)", "directi.androidteam.training.chatclient.PacketHandlers.Tag.getAttribute(java.lang.String)"], "Fixed commit": "948b78bc6b51fe4b861acd840101cbcea2776307", "Url": "https://api.github.com/repos/vinayakbhavnani/android_chat_client", "Date": "2012-10-16T09:58:38Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ugos.jiprolog.engine.Clause.getHead()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (functor.getName().equals(\":-/2\")) strPredDef = com.ugos.jiprolog.engine.Functor.getFunctor(functor.getParams().getHead()).getName(); else strPredDef = functor.getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3267/buggy-version/src.com.ugos.jiprolog.engine.GlobalDB.java", "BodyUseAPI": ["com.ugos.jiprolog.engine.Functor.getName()", "com.ugos.jiprolog.engine.Functor.getFunctor(functor.getParams().getHead())", "com.ugos.jiprolog.engine.Functor.getFunctor(functor.getParams().getHead()).getName()", "functor.getParams().getHead()", "com.ugos.jiprolog.engine.Functor.getParams()"], "Fixed commit": "0bd311db1c386d542c5d9b26076d10a4c02df4b9", "Url": "https://api.github.com/repos/jiprolog/jiprolog", "Date": "2015-05-05T18:02:41Z"},
{"Line": "=>702", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.isInfinite()) || (res.isNaN())) { res = 0.0; }else { res = new java.math.BigDecimal(res, mathContext).doubleValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3001/buggy-version/StockTracker.src.fr.cph.stock.entities.Equity.java", "BodyUseAPI": ["java.math.BigDecimal.doubleValue()"], "Fixed commit": "b2a9ac48965d4da80b715403051a82c88fda0867", "Url": "https://api.github.com/repos/carlphilipp/stock-tracker", "Date": "2015-07-28T05:10:31Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.micromata.jira.rest.core.custom.MetaBeanDeserializer.getCustomFieldType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (customFieldType == null) { return fieldMetaBean; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7955/buggy-version/src.main.java.de.micromata.jira.rest.core.custom.MetaBeanDeserializer.java", "BodyUseAPI": [], "Fixed commit": "47e76bac165c58cee3bff1f6ac659841f9969cba", "Url": "https://api.github.com/repos/micromata/JiraRestClient", "Date": "2016-04-05T14:26:51Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.utexas.ece.mpc.gander.location.LocationHelper.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (loc != null) return edu.utexas.ece.mpc.stdata.geo.Geoshape.point(loc.getLatitude(), loc.getLongitude()); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/9020/buggy-version/src.edu.utexas.ece.mpc.gander.Gander.java", "BodyUseAPI": ["edu.utexas.ece.mpc.stdata.geo.Geoshape.point(loc.getLatitude(),loc.getLongitude())", "android.location.Location.getLongitude()", "android.location.Location.getLatitude()"], "Fixed commit": "d65539354a9bd61e4a5f5cf757bed18fc7bb6641", "Url": "https://api.github.com/repos/jonasrmichel/gander-android", "Date": "2014-08-19T18:42:07Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.plugins.coverity.CoverityPublisher.getTaOptionBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ta != null) { java.lang.String taCheck = ta.checkTaConfig(); if (!(taCheck.equals(\"Pass\"))) { throw new java.lang.RuntimeException(taCheck); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8342/buggy-version/src.main.java.jenkins.plugins.coverity.CoverityLauncherDecorator.java", "BodyUseAPI": ["jenkins.plugins.coverity.TaOptionBlock.checkTaConfig()"], "Fixed commit": "5f8c223d7a99f3b8a8761b58761b5df87d64a78c", "Url": "https://api.github.com/repos/jenkinsci/coverity-plugin", "Date": "2014-06-06T17:58:37Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.invoke(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (value != null) valueType = value.getClass();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3174/buggy-version/src.org.json.serialization.JSONConvert.java", "BodyUseAPI": ["java.lang.Object.getClass()"], "Fixed commit": "3dd95672e56ece29fadb4cab0598038f44ca92cb", "Url": "https://api.github.com/repos/XuPeiYao/JsonSerializationExtension", "Date": "2015-10-14T03:11:28Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (value != null) valueType = value.getClass();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3174/buggy-version/src.org.json.serialization.JSONConvert.java", "BodyUseAPI": ["java.lang.Object.getClass()"], "Fixed commit": "3dd95672e56ece29fadb4cab0598038f44ca92cb", "Url": "https://api.github.com/repos/XuPeiYao/JsonSerializationExtension", "Date": "2015-10-14T03:11:28Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (age > 30) age = 30;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8542/buggy-version/app.src.main.java.com.first.akashshrivastava.showernow.Calculation.java", "BodyUseAPI": [], "Fixed commit": "cf57141b437abfd5701e4669f85b05ce287d00eb", "Url": "https://api.github.com/repos/Akshshr/ShowerNow", "Date": "2017-02-07T21:28:47Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((matchDate) != null) { return new java.text.SimpleDateFormat(\"HH:mm\").format(matchDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6547/buggy-version/src.main.java.de.altenerding.biber.pinkie.business.nuLiga.entity.TeamScheduleEntry.java", "BodyUseAPI": [], "Fixed commit": "55d13590d22c6ab2742ebcc1dbe9ddc019e73807", "Url": "https://api.github.com/repos/AlexanderPraegla/Pinkie", "Date": "2017-11-09T06:31:13Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((matchDate) != null) { return new java.text.SimpleDateFormat(\"dd.MM.yyyy\").format(matchDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6547/buggy-version/src.main.java.de.altenerding.biber.pinkie.business.nuLiga.entity.TeamScheduleEntry.java", "BodyUseAPI": [], "Fixed commit": "55d13590d22c6ab2742ebcc1dbe9ddc019e73807", "Url": "https://api.github.com/repos/AlexanderPraegla/Pinkie", "Date": "2017-11-09T06:31:13Z"},
{"Line": "=>581", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mIsBackView)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2234/buggy-version/siberiadante.src.main.java.com.siberiadante.lib.view.titlebar.SDTitleLayout.java", "BodyUseAPI": [], "Fixed commit": "c4a0d00f781c451de0907aecf98dad632f0881e5", "Url": "https://api.github.com/repos/SiberiaDante/AndroidUtilLib", "Date": "2017-09-28T09:27:04Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.siberiadante.lib.util.SDStringUtil.isEmpty(mLeftText)) { mTvLeft.setOnClickListener(new com.siberiadante.lib.view.titlebar.OnClickListener() { @java.lang.Override public void onClick(android.view.View view) { ((android.app.Activity) (mContext)).finish(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2234/buggy-version/siberiadante.src.main.java.com.siberiadante.lib.view.titlebar.SDTitleLayout.java", "BodyUseAPI": [], "Fixed commit": "c4a0d00f781c451de0907aecf98dad632f0881e5", "Url": "https://api.github.com/repos/SiberiaDante/AndroidUtilLib", "Date": "2017-09-28T09:27:04Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLeftImage) != 0) { mIvLeft.setOnClickListener(new com.siberiadante.lib.view.titlebar.OnClickListener() { @java.lang.Override public void onClick(android.view.View view) { ((android.app.Activity) (mContext)).finish(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2234/buggy-version/siberiadante.src.main.java.com.siberiadante.lib.view.titlebar.SDTitleLayout.java", "BodyUseAPI": [], "Fixed commit": "c4a0d00f781c451de0907aecf98dad632f0881e5", "Url": "https://api.github.com/repos/SiberiaDante/AndroidUtilLib", "Date": "2017-09-28T09:27:04Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (values != null) { java.util.Collections.addAll(list, values); }else { list.add(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8946/buggy-version/library.src.main.java.org.mariotaku.restfu.http.MultiValueMap.java", "BodyUseAPI": ["java.util.Collections.addAll(java.util.List<V>,V[])"], "Fixed commit": "7d48e45de490a939461d53c838cce7892f9b7ca2", "Url": "https://api.github.com/repos/mariotaku/RestFu", "Date": "2016-04-01T16:02:59Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pair.second) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8946/buggy-version/library.src.main.java.org.mariotaku.restfu.RestRequest.java", "BodyUseAPI": [], "Fixed commit": "7d48e45de490a939461d53c838cce7892f9b7ca2", "Url": "https://api.github.com/repos/mariotaku/RestFu", "Date": "2016-04-01T16:02:59Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.normalize()", "java.nio.file.Paths.get(org.wso2.carbon.event.input.adapter.core.EventAdapterUtil.getAxisConfiguration().getRepository().getPath(),EventReceiverConstants.ER_CONFIG_DIRECTORY)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(resolvedPath.startsWith(baseDirPath))) { baseDirPath = java.nio.file.Paths.get(org.wso2.carbon.utils.CarbonUtils.getTmpDir(), EventReceiverConstants.TEMP_CARBON_APPS_DIRECTORY); if (!(resolvedPath.startsWith(baseDirPath))) { throw new org.wso2.carbon.event.receiver.core.exception.EventReceiverConfigurationException((\"File name contains restricted path elements. \" + file)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6007/buggy-version/components.event-receiver.org.wso2.carbon.event.receiver.core.src.main.java.org.wso2.carbon.event.receiver.core.internal.util.EventReceiverUtil.java", "BodyUseAPI": ["java.nio.file.Path.startsWith(java.nio.file.Path)"], "Fixed commit": "877e63739e864ab12c7ff11090366a14d1f5aa8f", "Url": "https://api.github.com/repos/dilini-muthumala/carbon-analytics-common", "Date": "2016-07-11T09:59:58Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.normalize()", "java.nio.file.Paths.get((((org.wso2.carbon.event.output.adapter.core.EventAdapterUtil.getAxisConfiguration().getRepository().getPath()) + (java.io.File.separator)) + (org.wso2.carbon.event.publisher.core.config.EventPublisherConstants.EF_CONFIG_DIRECTORY)))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(resolvedPath.startsWith(baseDirPath))) { baseDirPath = java.nio.file.Paths.get(org.wso2.carbon.utils.CarbonUtils.getTmpDir(), EventPublisherConstants.TEMP_CARBON_APPS_DIRECTORY); if (!(resolvedPath.startsWith(baseDirPath))) { throw new org.wso2.carbon.event.publisher.core.exception.EventPublisherConfigurationException((\"File name contains restricted path elements. \" + file)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6007/buggy-version/components.event-publisher.org.wso2.carbon.event.publisher.core.src.main.java.org.wso2.carbon.event.publisher.core.internal.util.EventPublisherUtil.java", "BodyUseAPI": ["java.nio.file.Path.startsWith(java.nio.file.Path)"], "Fixed commit": "877e63739e864ab12c7ff11090366a14d1f5aa8f", "Url": "https://api.github.com/repos/dilini-muthumala/carbon-analytics-common", "Date": "2016-07-11T09:59:58Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.google.common.base.Strings.isNullOrEmpty(s)) || (s.startsWith(\"#\"))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8369/buggy-version/src.main.java.com.royww.op.eve.conf.PropertiesReader.java", "BodyUseAPI": [], "Fixed commit": "a6c9e5082f0c8d282086c69ff23e188968abcd64", "Url": "https://api.github.com/repos/roy-ww/roy-ww-eve", "Date": "2015-12-09T15:02:07Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.equalsIgnoreCase(\"MUL A A\")) { return mul(A, A); }else if (s.equalsIgnoreCase(\"MUL B B\")) { return mul(B, B); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5805/buggy-version/src.project_2.Project_2.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "55589d96be4e35bd9cea27469c70659d4f2c65f7", "Url": "https://api.github.com/repos/kareemsuhail/iugaza_project2", "Date": "2016-12-14T07:26:41Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentQuestionNumber) >= ((quiz.getQuestions().size()) - 1)) { nextQuestionButton.setText(R.string.quizGoToResultsButtonText); }else { nextQuestionButton.setText(R.string.quizNextButtonText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6676/buggy-version/src.no.hials.muldvarp.v2.QuizActivity.java", "BodyUseAPI": [], "Fixed commit": "a053d4e5e46f25d85d952998bb73d5fc43b8b117", "Url": "https://api.github.com/repos/mikael2/Muldvarp", "Date": "2013-01-21T13:52:30Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6450/buggy-version/PoisonIvy.src.com.github.mrstampy.poisonivy.IvyLibraryRetriever.java", "BodyUseAPI": [], "Fixed commit": "06544f17493946e96097fe21156df4c8e22ffd53", "Url": "https://api.github.com/repos/mrstampy/PoisonIvy", "Date": "2014-04-12T00:04:24Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2623/buggy-version/src.main.java.com.spotify.docker.client.messages.RegistryConfigs.java", "BodyUseAPI": [], "Fixed commit": "adf8d21cc91446ab66bb8517536d87cc150980a2", "Url": "https://api.github.com/repos/spotify/docker-client", "Date": "2017-05-22T20:52:54Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (checkBox != null) { checkBox.setChecked(false); android.widget.Toast.makeText(activity, R.string.is_msg_amount_limit, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/670/buggy-version/image-selector.src.main.java.com.fubaisum.imageselector.lib.adapter.ImageItemAdapter.java", "BodyUseAPI": ["android.widget.CheckBox.setChecked(boolean)"], "Fixed commit": "5ac335293066b3abf46bafb898eb78414929d4e7", "Url": "https://api.github.com/repos/jiajieshen/ImageSelector", "Date": "2016-09-05T06:11:00Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((jsonObj.optString(\"body\").length()) > 12) && (jsonObj.optString(\"body\").substring(0, 12).equals(\"**Attention!\"))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2123/buggy-version/app.src.main.java.com.pea.jay.redditlists.model.PostFactory.java", "BodyUseAPI": [], "Fixed commit": "b293f613496398acd6bfa4e161a5101bbaf2d6a5", "Url": "https://api.github.com/repos/SeledousSystems/RedditLists", "Date": "2017-01-27T18:25:47Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((((query.getAge()) != null) || ((query.getMutatedIn()) != null)) || ((query.getSex()) != null)) || ((query.getStructure()) != null)) || ((query.getTheilerStage()) != null)) || ((query.getStructureID()) != null)) { java.util.List<org.jax.mgi.fewi.searchUtil.Filter> filters = new java.util.ArrayList<org.jax.mgi.fewi.searchUtil.Filter>(); filters.add(searchParams.getFilter()); filters.add(new org.jax.mgi.fewi.searchUtil.Filter(org.jax.mgi.fewi.searchUtil.SearchConstants.GXDHT_RELEVANCY, \"Yes\", org.jax.mgi.fewi.searchUtil.Filter.Operator.OP_EQUAL)); searchParams.setFilter(org.jax.mgi.fewi.searchUtil.Filter.and(filters)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1924/buggy-version/src.org.jax.mgi.fewi.finder.GxdHtFinder.java", "BodyUseAPI": [], "Fixed commit": "36f456f0188e6ba2a7f00fa9e5131fef68aaf323", "Url": "https://api.github.com/repos/mgijax/fewi", "Date": "2016-11-10T20:49:12Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity.isDead) { itemstack.setTagCompound(c); return true; }else { net.minecraft.client.Minecraft.getMinecraft().thePlayer.sendChatToPlayer(\"Failed to capture entity - is it protected?\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1169/buggy-version/src.powercrystals.minefactoryreloaded.animals.ItemSafariNet.java", "BodyUseAPI": [], "Fixed commit": "a35c09eae575b72d27281bf2d3907d26d34d1a3a", "Url": "https://api.github.com/repos/Emys/MineFactoryReloaded", "Date": "2013-03-07T03:54:14Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arg0.getWorkLoad()) < (this.workLoad)) return -11; else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4654/buggy-version/src.Machine.java", "BodyUseAPI": [], "Fixed commit": "dea50b46e5b871e86374eb9ebb1b3cdb1e35ad3d", "Url": "https://api.github.com/repos/Biotot/AlgoWarsBowl", "Date": "2015-04-18T22:51:10Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (entry.getValue().second)) { assignments.putAll(entry.getValue().second); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1219/buggy-version/code.jims.jims-crossbow.jims-crossbow-infrastructure.src.main.java.org.jims.modules.crossbow.infrastructure.supervisor.Supervisor.java", "BodyUseAPI": ["org.jims.modules.crossbow.objectmodel.Assignments.putAll(entry.getValue().second)", "java.util.Map.Entry<java.lang.String, org.jims.modules.crossbow.infrastructure.Pair<org.jims.modules.crossbow.objectmodel.ObjectModel, org.jims.modules.crossbow.objectmodel.Assignments>>.getValue()"], "Fixed commit": "ff53d62fd42a16139551b31825513fef3ba37646", "Url": "https://api.github.com/repos/robertboczek/solaris-crossbow", "Date": "2011-05-08T22:08:38Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((iFieldValue.equalsIgnoreCase(\"false\")) || (iFieldValue.equalsIgnoreCase(\"true\"))) iType = com.orientechnologies.orient.core.metadata.schema.OType.BOOLEAN; else { java.lang.Character c = null; if (iFieldTypes != null) { c = iFieldTypes.get(iFieldName); if (c != null) iType = com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerStringAbstract.getType((iFieldValue + c)); } if ((c == null) && (!(iFieldValue.isEmpty()))) { if (((iFieldValue.charAt(0)) == (com.orientechnologies.orient.core.id.ORID.PREFIX)) && (iFieldValue.contains(\":\"))) iType = com.orientechnologies.orient.core.metadata.schema.OType.LINK; else if (com.orientechnologies.orient.core.serialization.serializer.OStringSerializerHelper.contains(iFieldValue, '.')) iType = com.orientechnologies.orient.core.metadata.schema.OType.FLOAT; else { final java.lang.Long v = new java.lang.Long(com.orientechnologies.orient.core.serialization.serializer.OStringSerializerHelper.getStringContent(iFieldValue)); if ((v.longValue()) > 0) { if ((v.compareTo(com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerJSON.MAX_INT)) < 0) return v.intValue(); }else if ((v.compareTo(com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerJSON.MIN_INT)) > 0) return v.intValue(); return v; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5633/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerJSON.java", "BodyUseAPI": ["java.lang.String.isEmpty()", "java.lang.String.charAt(int)", "com.orientechnologies.orient.core.serialization.serializer.OStringSerializerHelper.contains(java.lang.String,char)", "com.orientechnologies.orient.core.serialization.serializer.OStringSerializerHelper.getStringContent(java.lang.String)", "com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerStringAbstract.getType(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "375c759a10d85df0558afe534b2f4514d9584b69", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2012-05-25T13:05:38Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((v.compareTo(com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerJSON.MIN_INT)) > 0) return v.intValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5633/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerJSON.java", "BodyUseAPI": ["java.lang.Long.intValue()"], "Fixed commit": "375c759a10d85df0558afe534b2f4514d9584b69", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2012-05-25T13:05:38Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mUseSplash) { mSplashScreen.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/410/buggy-version/src.de.hanneseilers.jgithubloader.GithubLoader.java", "BodyUseAPI": [], "Fixed commit": "7d6c96b114d16bb484bd2effc111f1f220a80894", "Url": "https://api.github.com/repos/hanneseilers/jGithubLoader", "Date": "2016-02-23T22:07:31Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (max == null) { max = 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4766/buggy-version/workspace.enwida.src.main.java.de.enwida.web.controller.AdminController.java", "BodyUseAPI": [], "Fixed commit": "ba750bf5c74568f0d897c59b1077241b1ad38a31", "Url": "https://api.github.com/repos/enwida/idpRepo", "Date": "2013-09-03T08:40:02Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.emc.storageos.db.client.model.Operation.isTerminalState(status)) { com.emc.storageos.util.ExportUtils.cleanStaleReferences(exportGroup.getId(), dbClient); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2185/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.block.taskcompleter.ExportUpdateCompleter.java", "BodyUseAPI": [], "Fixed commit": "808500b241b702fef0c1ea156a5a908c5b14f81e", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-02-01T00:12:12Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.emc.storageos.db.client.model.Operation.isTerminalState(status)) { com.emc.storageos.util.ExportUtils.cleanStaleReferences(exportGroup.getId(), dbClient); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2185/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.block.taskcompleter.ExportDeleteCompleter.java", "BodyUseAPI": [], "Fixed commit": "808500b241b702fef0c1ea156a5a908c5b14f81e", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-02-01T00:12:12Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prevDstReg) != null) prevDstReg.readOnly = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4953/buggy-version/src.cn.ac.nya.nsasm.NSASM.java", "BodyUseAPI": [], "Fixed commit": "2dd040ae5ede4c496c36687083cad979309577df", "Url": "https://api.github.com/repos/NSDN/jNSASM", "Date": "2017-12-25T09:31:02Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prevDstReg) != null) prevDstReg.readOnly = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4953/buggy-version/src.cn.ac.nya.nsasm.NSASM.java", "BodyUseAPI": [], "Fixed commit": "2dd040ae5ede4c496c36687083cad979309577df", "Url": "https://api.github.com/repos/NSDN/jNSASM", "Date": "2017-12-25T09:31:02Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUser(user.getUserID())) != null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2552/buggy-version/src.io.meetme.database.DatabaseManager.java", "BodyUseAPI": [], "Fixed commit": "bc36525d841662fa9d95389c50dd16a99ee0f00d", "Url": "https://api.github.com/repos/gelldur/Google_IO_2013_poznan", "Date": "2013-05-14T21:52:26Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ty - 80) >= (temp - 70)) && ((ty - 80) <= temp)) { chosenCards++; }else { chosenCards = area / 35; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6583/buggy-version/src.day170717.solitaire.TablePile.java", "BodyUseAPI": [], "Fixed commit": "0230ab13b29e025195e194adb4dd96d7521a5b83", "Url": "https://api.github.com/repos/Duelist256/CoreJava", "Date": "2017-09-08T15:52:32Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.simpletasker.Lib.language.containsKey(key)) return com.simpletasker.Lib.language.get(key);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1839/buggy-version/src.com.simpletasker.Lib.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "274fc59fe1f050664464bdccac5de84f4b8f6422", "Url": "https://api.github.com/repos/SimpleTasker/SimpleTasker", "Date": "2014-08-19T20:58:22Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connectionOpen()) { connectionPool.returnBrokenConnection(removeConnection()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2973/buggy-version/redisdata-core.src.main.java.com.github.eemmiirr.redisdata.jedis.JedisTransactionManager.java", "BodyUseAPI": [], "Fixed commit": "a5426583e1260bfe9cede89f1eddaaee0acecce7", "Url": "https://api.github.com/repos/eemmiirr/redisdata", "Date": "2014-12-18T17:12:08Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (performWholeProgramInference) { org.checkerframework.common.jaifinference.JaifFileUtils.setRelaxedMode(analysis.getTypeFactory().getProcessingEnv().getOptions().containsKey(\"relaxedInference\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6401/buggy-version/framework.src.org.checkerframework.framework.flow.CFAbstractTransfer.java", "BodyUseAPI": [], "Fixed commit": "767bbfc92de803bcf3467a1093c68495523c6e23", "Url": "https://api.github.com/repos/pbsf/checker-framework", "Date": "2015-11-19T14:47:02Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isSlidingPaneCollapsed)) { showRoomSearchView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6233/buggy-version/app.src.main.java.es.lnsd.citikey.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "493e281784315d274efd6871bbfbb2e774f1e4ca", "Url": "https://api.github.com/repos/Citikey/citikey-android", "Date": "2016-06-27T18:38:18Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mshPart[11].equals(\"2.2\")) { for (int i = 0; i < (splitted.length); i++) { if (splitted[i].startsWith(\"OBX\")) { java.lang.String[] obxPart = splitted[i].split(\"\\\\|\", (-1)); if (obxPart[2].equals(\"SN\")) { obxPart[2] = \"NM\"; splitted[i] = joinStrings(obxPart, \"|\"); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1042/buggy-version/ch.elexis.core.hl7.v2x.src.ch.elexis.hl7.HL7ReaderFactory.java", "BodyUseAPI": [], "Fixed commit": "a04059e5d63179dabad6fdfecb0aab93c564f620", "Url": "https://api.github.com/repos/elexis/elexis-3-core", "Date": "2014-10-06T14:08:21Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.exists()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (emulatorExists) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5177/buggy-version/src.main.java.hudson.plugins.android_emulator.EmulatorConfig.java", "BodyUseAPI": [], "Fixed commit": "baf9dd4547d0ea6ab28300cef62c03eb0e5b7a43", "Url": "https://api.github.com/repos/jenkinsci/android-emulator-plugin", "Date": "2011-04-08T08:27:26Z"},
{"Line": "=>746", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mProgressDialog) != null) && (mProgressDialog.isShowing())) { mProgressDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3486/buggy-version/AnkiDroid.src.main.java.com.ichi2.anki.DeckPicker.java", "BodyUseAPI": ["com.afollestad.materialdialogs.MaterialDialog.dismiss()"], "Fixed commit": "3842beed94a475a209d85460dc1e7a1839eb08ae", "Url": "https://api.github.com/repos/eginhard/Anki-Android", "Date": "2015-03-28T14:01:55Z"},
{"Line": "=>681", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["attr.getName().toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"bufferoutput\".equals(name)) this.bufferOutput = toLitBoolean(name, attr.getValue()); else if (\"displayname\".equals(name)) this.displayName = toLitString(name, attr.getValue()); else if (\"hint\".equals(name)) this.hint = toLitString(name, attr.getValue()); else if (\"description\".equals(name)) this.description = toLitString(name, attr.getValue()); else if (\"returnformat\".equals(name)) this.returnFormat = toLitString(name, attr.getValue()); else if (\"securejson\".equals(name)) this.secureJson = toLitBoolean(name, attr.getValue()); else if (\"verifyclient\".equals(name)) this.verifyClient = toLitBoolean(name, attr.getValue()); else if (\"cachedwithin\".equals(name)) { try { this.cachedWithin = railo.transformer.bytecode.util.ASMUtil.timeSpanToLong(attr.getValue()); } catch (railo.transformer.cfml.evaluator.EvaluatorException e) { throw new railo.runtime.exp.TemplateException(e.getMessage()); } }else if (\"modifier\".equals(name)) { railo.transformer.bytecode.expression.Expression val = attr.getValue(); if (val instanceof railo.transformer.bytecode.Literal) { railo.transformer.bytecode.Literal l = ((railo.transformer.bytecode.Literal) (val)); java.lang.String str = railo.commons.lang.StringUtil.emptyIfNull(l.getString()).trim(); if (\"abstract\".equalsIgnoreCase(str)) _abstract = true; else if (\"final\".equalsIgnoreCase(str)) _final = true; } }else { toLitString(name, attr.getValue()); if ((metadata) == null) metadata = new java.util.HashMap<java.lang.String, railo.transformer.bytecode.statement.tag.Attribute>(); metadata.put(attr.getName(), attr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/875/buggy-version/railo-java.railo-core.src.railo.transformer.bytecode.statement.udf.Function.java", "BodyUseAPI": ["railo.transformer.bytecode.statement.udf.Function.toLitBoolean(java.lang.String,attr.getValue())", "java.lang.String.equals(java.lang.String)", "railo.transformer.bytecode.statement.udf.Function.toLitBoolean(java.lang.String,attr.getValue())", "java.lang.String.equals(java.lang.String)", "railo.transformer.bytecode.statement.udf.Function.toLitString(java.lang.String,attr.getValue())", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "railo.transformer.bytecode.statement.udf.Function.toLitString(java.lang.String,attr.getValue())", "java.lang.String.equals(java.lang.String)", "railo.transformer.bytecode.statement.udf.Function.toLitBoolean(java.lang.String,attr.getValue())", "java.lang.String.equals(java.lang.String)", "railo.transformer.bytecode.statement.udf.Function.toLitString(java.lang.String,attr.getValue())", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "railo.transformer.bytecode.statement.udf.Function.toLitString(java.lang.String,attr.getValue())", "railo.transformer.bytecode.statement.udf.Function.toLitString(java.lang.String,attr.getValue())"], "Fixed commit": "6311eae5301f5cae8b35008f06387d7819e6d880", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-11-28T10:38:23Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((errorFilter.getTrialId()) != null) { clause.append(\" AND e.trial.id = :trialId\"); queryParameters.put(\"trialId\", errorFilter.getTrialId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/454/buggy-version/dictatetrainer-model.src.main.java.cz.muni.fi.dictatetrainer.error.repository.ErrorRepository.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,errorFilter.getTrialId())", "cz.muni.fi.dictatetrainer.error.model.filter.ErrorFilter.getTrialId()"], "Fixed commit": "03405a3a30bf16d2cda0c1f4c994133177d548cb", "Url": "https://api.github.com/repos/xrumanov/dictatetrainer", "Date": "2015-11-30T09:53:54Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.NetworkInterface.getByInetAddress(java.net.InetAddress)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (network != null) { final byte[] hardwareAddr = network.getHardwareAddress(); return com.google.common.io.BaseEncoding.base16().encode(hardwareAddr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2448/buggy-version/modules.server.server-udc.src.main.java.com.enonic.xp.server.udc.impl.UdcInfoGenerator.java", "BodyUseAPI": ["java.net.NetworkInterface.getHardwareAddress()"], "Fixed commit": "840247abd0766bc9e718623487f1ecb364e36bfc", "Url": "https://api.github.com/repos/enonic/xp", "Date": "2016-01-05T12:55:24Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((next) == null) { next = readNextEvent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8204/buggy-version/src.main.java.eventstore.ChronicleBasedEventStore.java", "BodyUseAPI": [], "Fixed commit": "08ef44c81155e5c6c93de3b3409c9270114060d6", "Url": "https://api.github.com/repos/itm/eventstore", "Date": "2014-02-12T09:50:15Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.kubik.picturetime.activities.ImageActivity.sToken) != null) { mApiService = com.example.kubik.picturetime.api.ApiClient.getAuthorizedClient(com.example.kubik.picturetime.activities.ImageActivity.sToken).create(com.example.kubik.picturetime.api.ApiInterface.class); }else { mApiService = com.example.kubik.picturetime.api.ApiClient.getClient().create(com.example.kubik.picturetime.api.ApiInterface.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3742/buggy-version/app.src.main.java.com.example.kubik.picturetime.activities.ImageActivity.java", "BodyUseAPI": [], "Fixed commit": "329479e9090242050b8f9337f1c12943d41b5ff0", "Url": "https://api.github.com/repos/RomanKubik/PictureTime", "Date": "2017-01-19T07:35:24Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cursor) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5287/buggy-version/src.de.tucottbus.kt.lcars.contributors.ETopography.java", "BodyUseAPI": [], "Fixed commit": "8eef450744a7dd238c20ed39c3973e3c1b9e151f", "Url": "https://api.github.com/repos/matthias-wolff/LCARSWT", "Date": "2015-07-21T11:29:31Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.beans.admin.AdminController.getUserFull(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((theModifiedUser.isPropertyUpdatableByUser(property.getKey())) || ((isAdmin()) && (theModifiedUser.isPropertyUpdatableByAdmin(property.getKey())))) { theModifiedUser.setValue(property.getKey(), property.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4023/buggy-version/war-core.src.main.java.com.silverpeas.socialnetwork.myProfil.control.MyProfilSessionController.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "com.stratelia.webactiv.beans.admin.UserFull.setValue(java.lang.String,java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()"], "Fixed commit": "4db1582f815e94e91f16c8eb8b1af09f062944d8", "Url": "https://api.github.com/repos/ebonnet/Silverpeas-Core", "Date": "2015-08-26T09:38:01Z"},
{"Line": "=>869", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(interest.Fulfillments.FulfillerInterests.InterestStatus.equalsIgnoreCase(\"Confirmed\"))) { if (!(expiration_tv.isShown())) { expiration_tv.setVisibility(View.VISIBLE); } expiration_tv.setText(((((((((\"Interest Expirs IN : \" + elapsedDays) + \"D :\") + elapsedHours) + \"H :\") + elapsedMinutes) + \"M :\") + elapsedSeconds) + \"S\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3744/buggy-version/app.src.main.java.com.biglynx.fulfiller.ui.InterestDetails.java", "BodyUseAPI": [], "Fixed commit": "8fa321b96afbe7aca658178a665d996be6d13d64", "Url": "https://api.github.com/repos/JgdshSeerm/Fulfiller", "Date": "2017-05-16T21:13:05Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((contacts.get(0).getName()) != null) { request.setAttribute(\"contactList\", contacts); request.setAttribute(\"department\", department); getServletContext().getRequestDispatcher(\"/WEB-INF/jsp/administrator/department/show.jsp\").forward(request, response); }else { request.setAttribute(\"department\", department); getServletContext().getRequestDispatcher(\"/WEB-INF/jsp/administrator/department/show.jsp\").forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7765/buggy-version/src.main.java.com.bodejidi.AdministratorDepartmentServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,java.util.List<com.bodejidi.Contact>)"], "Fixed commit": "23d9f187acc23491cd84a5d8a8ff795de6944e0a", "Url": "https://api.github.com/repos/baldurtectbaijiayong/finna-be-archer", "Date": "2014-07-29T08:44:58Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 1) { if (args[1].equals(\"main\")) { java.lang.System.out.println(\"\\nUpdating module manager\"); io.github.mimerme.utilconsole.Main.downloadMain(new java.lang.String[]{ null, java.nio.file.Files.readAllLines(java.nio.file.Paths.get(((io.github.mimerme.utilconsole.Main.env.get(\"UTILS_PATH\")) + \"\\\\release.REPO\"))).get(0) }); java.lang.System.exit(1); } java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7983/buggy-version/src.io.github.mimerme.utilconsole.Main.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "3490cb1f8d71e1c671bdbbf5cf53f99eb1bcb74a", "Url": "https://api.github.com/repos/Mimerme/Mimerme-s-Util-Console", "Date": "2015-07-14T05:22:49Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.crescentflare.smartmock.utility.SmartMockFileUtility.list(android.content.Context,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fileList == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7010/buggy-version/MockLibAndroid.SmartMockLib.src.main.java.com.crescentflare.smartmock.responsegenerator.SmartMockEndPointFinder.java", "BodyUseAPI": [], "Fixed commit": "5a506ecce6b5822b708307cc0de1bcb0897f0941", "Url": "https://api.github.com/repos/crescentflare/SmartMockServer", "Date": "2017-01-29T08:46:58Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (fileList != null) { java.util.List<java.lang.String> filteredList = new java.util.ArrayList<>(); for (java.lang.String fileItem : fileList) { if ((!(fileItem.toLowerCase().equals(\"thumbs.db\"))) && (!(fileItem.toLowerCase().equals(\".ds_store\")))) { filteredList.add(fileItem); } } return filteredList.toArray(new java.lang.String[filteredList.size()]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7010/buggy-version/MockLibAndroid.SmartMockLib.src.main.java.com.crescentflare.smartmock.utility.SmartMockFileUtility.java", "BodyUseAPI": [], "Fixed commit": "5a506ecce6b5822b708307cc0de1bcb0897f0941", "Url": "https://api.github.com/repos/crescentflare/SmartMockServer", "Date": "2017-01-29T08:46:58Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (in.getVersion().before(Version.V_1_5_0)) { indexUUID = in.readString(); shardId = org.elasticsearch.index.shard.ShardId.readShardId(in); }else { indexUUID = in.readOptionalString(); if (in.readBoolean()) { shardId = org.elasticsearch.index.shard.ShardId.readShardId(in); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3434/buggy-version/src.main.java.org.elasticsearch.indices.store.TransportShardActive.java", "BodyUseAPI": ["org.elasticsearch.index.shard.ShardId.readShardId(org.elasticsearch.common.io.stream.StreamInput)", "org.elasticsearch.common.io.stream.StreamInput.readBoolean()", "org.elasticsearch.common.io.stream.StreamInput.readString()", "org.elasticsearch.index.shard.ShardId.readShardId(org.elasticsearch.common.io.stream.StreamInput)", "org.elasticsearch.common.io.stream.StreamInput.readOptionalString()"], "Fixed commit": "37cec9f31808be4a0f92836de6c09fdfb51bc345", "Url": "https://api.github.com/repos/martijnvg/elasticsearch", "Date": "2014-09-16T20:31:48Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (out.getVersion().before(Version.V_1_5_0)) { out.writeString(indexUUID); shardId.writeTo(out); }else { out.writeOptionalString(indexUUID); out.writeOptionalStreamable(shardId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3434/buggy-version/src.main.java.org.elasticsearch.indices.store.TransportShardActive.java", "BodyUseAPI": ["org.elasticsearch.index.shard.ShardId.writeTo(org.elasticsearch.common.io.stream.StreamOutput)", "org.elasticsearch.common.io.stream.StreamOutput.writeString(java.lang.String)", "org.elasticsearch.common.io.stream.StreamOutput.writeOptionalStreamable(org.elasticsearch.index.shard.ShardId)", "org.elasticsearch.common.io.stream.StreamOutput.writeOptionalString(java.lang.String)"], "Fixed commit": "37cec9f31808be4a0f92836de6c09fdfb51bc345", "Url": "https://api.github.com/repos/martijnvg/elasticsearch", "Date": "2014-09-16T20:31:48Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.view.cmbQuestions.getItems().isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1655/buggy-version/src.main.java.nappydevelopment.nappy_the_ingenious.gui.mainStage.MainStageController.java", "BodyUseAPI": [], "Fixed commit": "b2bf1183a49027891d54aabc1620b4807c304f38", "Url": "https://api.github.com/repos/nappydevelopment/Nappy-the-ingenious", "Date": "2016-05-09T08:50:51Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.racenet.framework.HudItem>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (item != null) { item.vertices[0].x = x + (item.cameraX); item.vertices[0].y = y + (item.cameraY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4754/buggy-version/src.org.racenet.framework.Camera2.java", "BodyUseAPI": [], "Fixed commit": "ef5a82a567fc0ac2f108d8f85218072127eb5352", "Url": "https://api.github.com/repos/zolex/Racesow2D", "Date": "2012-04-30T08:35:26Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["InternalNode<T>.getBranch(Direction)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (child.getClass().equals(InternalNode.class)) { setBranch(dir, ((InternalNode<T>) (child)).combine(getBranchX(x, dir), getBranchY(y, dir))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5458/buggy-version/src.InternalNode.java", "BodyUseAPI": [], "Fixed commit": "9f16647d951f5ab698b46794f1098d0846b847c2", "Url": "https://api.github.com/repos/dszero/Project2", "Date": "2017-10-21T09:28:12Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (typeCode == null) { this.typeCode = new eu.europa.ec.fisheries.uvms.rules.service.business.fact.CodeType(); }else { this.typeCode = typeCode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8975/buggy-version/service.src.main.java.eu.europa.ec.fisheries.uvms.rules.service.business.fact.FluxLocationFact.java", "BodyUseAPI": [], "Fixed commit": "55d3fc273c159e621a16d3203ddfaa5b544f90bc", "Url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP", "Date": "2017-08-02T13:00:39Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (featureStartIndex < 0) { throw new java.lang.UnsupportedOperationException((\"ERROR: Failed to find constructed feature by index \" + dataSetIndex)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2894/buggy-version/src.main.java.edu.cmu.ml.rtw.generic.model.SupervisedModelLogistmarGramression.java", "BodyUseAPI": [], "Fixed commit": "859ce27c33d0407e35880a98974ad35a060269b7", "Url": "https://api.github.com/repos/cmunell/micro-util", "Date": "2015-06-16T19:06:28Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (damager == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5825/buggy-version/src.com.forgenz.mobmanager.listeners.MobListener.java", "BodyUseAPI": [], "Fixed commit": "3b266c16bd4591789f5f66d5c2456e644a07d1ae", "Url": "https://api.github.com/repos/ShadowDog007/MobManager", "Date": "2013-02-06T05:59:26Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageUri) == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5983/buggy-version/SimpleUI.src.v3.M_MakePhoto.java", "BodyUseAPI": [], "Fixed commit": "95c6c2729ce54e96687c4f466deaac13fc92dd7c", "Url": "https://api.github.com/repos/bitstars/SimpleUi", "Date": "2013-03-22T12:04:03Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uri == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5983/buggy-version/SimpleUI.src.v3.M_MakePhoto.java", "BodyUseAPI": [], "Fixed commit": "95c6c2729ce54e96687c4f466deaac13fc92dd7c", "Url": "https://api.github.com/repos/bitstars/SimpleUi", "Date": "2013-03-22T12:04:03Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (waitTime < 0) { java.lang.System.err.println(((\"waitTime = \" + waitTime) + \" turned to be 0 due to approximation errors\")); responseTimeHistogram.recordValue(serviceTime); }else { final long responseTime = waitTime + serviceTime; responseTimeHistogram.recordValue(responseTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1837/buggy-version/src.main.java.org.apache.activemq.load.generator.StatisticsSummaryGenerator.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "5d5a5332946d1173379d7d839b2839701d02ca08", "Url": "https://api.github.com/repos/franz1981/artemis-load-generator", "Date": "2017-06-09T10:44:49Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((genres) == null) return new java.lang.String[]{ TvContract.Programs.Genres.LIFE_STYLE };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7200/buggy-version/app.src.main.java.com.felkertech.n.cumulustv.JSONChannel.java", "BodyUseAPI": [], "Fixed commit": "ed11a5b5005721757bcbc4de00150a974cf5a071", "Url": "https://api.github.com/repos/Fleker/CumulusTV", "Date": "2015-08-19T06:22:43Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(request.getParameter(\"method\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (className == null) { jSONObject = new org.json.simple.JSONObject(); jSONObject.put(\"result\", \"error\"); jSONObject.put(\"error_type\", ((\"Method \" + (request.getParameter(\"method\"))) + \" no found.\")); return jSONObject; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3301/buggy-version/src.main.java.com.intouch.processor.RequestProcessor.java", "BodyUseAPI": [], "Fixed commit": "8870945ffc9f8f48b4addbc937eda34ee5c2f332", "Url": "https://api.github.com/repos/DDKatch/InTouch", "Date": "2016-04-24T21:16:01Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outDir) != null) writeFile(\".simpl.cfg\", program.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5477/buggy-version/soottocfg.src.main.java.soottocfg.soot.SootToCfg.java", "BodyUseAPI": [], "Fixed commit": "068fe8bd2d38c9cf8cb6ffabeb44dbb0ea72707e", "Url": "https://api.github.com/repos/jayhorn/jayhorn", "Date": "2016-06-22T16:15:58Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outDir) != null) writeFile(\".cfg\", program.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5477/buggy-version/soottocfg.src.main.java.soottocfg.soot.SootToCfg.java", "BodyUseAPI": [], "Fixed commit": "068fe8bd2d38c9cf8cb6ffabeb44dbb0ea72707e", "Url": "https://api.github.com/repos/jayhorn/jayhorn", "Date": "2016-06-22T16:15:58Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (kv.isDeleteFamily()) { data.get(row).get(kv.getFamily()).clear(); }else { data.get(row).get(kv.getFamily()).remove(kv.getQualifier()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8625/buggy-version/common.src.main.java.org.apache.kylin.common.util.MockHTable.java", "BodyUseAPI": ["java.util.NavigableMap<byte[], java.util.NavigableMap<byte[], java.util.NavigableMap<java.lang.Long, byte[]>>>.get(kv.getFamily())", "org.apache.hadoop.hbase.KeyValue.getQualifier()", "java.util.NavigableMap<byte[], java.util.NavigableMap<java.lang.Long, byte[]>>.clear()", "java.util.NavigableMap<byte[], java.util.NavigableMap<byte[], java.util.NavigableMap<java.lang.Long, byte[]>>>.get(kv.getFamily())", "org.apache.hadoop.hbase.KeyValue.getFamily()", "org.apache.hadoop.hbase.KeyValue.getFamily()", "java.util.NavigableMap<byte[], java.util.NavigableMap<java.lang.Long, byte[]>>.remove(kv.getQualifier())"], "Fixed commit": "d9d35f82a08812c9df965a8b488a77b013eb58bc", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2015-05-25T02:32:03Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.bx5a.minstrel.player.MasterPlayer.getInstance().getCurrentPlayableIndex()) != selectedIndex) { com.bx5a.minstrel.player.MasterPlayer.getInstance().setCurrentPlayableIndex(selectedIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/321/buggy-version/app.src.main.java.com.bx5a.minstrel.MainActivity.java", "BodyUseAPI": ["com.bx5a.minstrel.player.MasterPlayer.getInstance().setCurrentPlayableIndex(int)"], "Fixed commit": "ce08d671fce5938161bd2e4dff03917d5ff655e0", "Url": "https://api.github.com/repos/bx5a/Minstrel", "Date": "2016-05-30T15:28:49Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index < (selectedIndex)) { move(((selectedIndex) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/321/buggy-version/app.src.main.java.com.bx5a.minstrel.player.PlaylistManager.java", "BodyUseAPI": ["com.bx5a.minstrel.player.PlaylistManager.move(int)"], "Fixed commit": "ce08d671fce5938161bd2e4dff03917d5ff655e0", "Url": "https://api.github.com/repos/bx5a/Minstrel", "Date": "2016-05-30T15:28:49Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sourceIndex < (selectedIndex)) { move(((selectedIndex) - 1)); }else if (sourceIndex == (selectedIndex)) { move(destinationIndex); }else if (destinationIndex == (selectedIndex)) { move(((selectedIndex) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/321/buggy-version/app.src.main.java.com.bx5a.minstrel.player.PlaylistManager.java", "BodyUseAPI": ["com.bx5a.minstrel.player.PlaylistManager.move(int)", "com.bx5a.minstrel.player.PlaylistManager.move(int)"], "Fixed commit": "ce08d671fce5938161bd2e4dff03917d5ff655e0", "Url": "https://api.github.com/repos/bx5a/Minstrel", "Date": "2016-05-30T15:28:49Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_CANCELED)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2439/buggy-version/api_demos.src.main.java.com.github.androidsocialnetworks.apidemos.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "44764f243827616de95300f3faafbb065bd63338", "Url": "https://api.github.com/repos/antonkrasov/AndroidSocialNetworks", "Date": "2014-05-14T06:18:02Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key.contains(\"USER_PROMPT\")) { continue; }else { input = input.replace(international, english); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4583/buggy-version/src.bakatxt.international.BakaTongue.java", "BodyUseAPI": [], "Fixed commit": "4ea425fe82360e0128f4d6f6186184fd257faab7", "Url": "https://api.github.com/repos/cs2103aug2014-t09-4j/main", "Date": "2014-10-24T07:32:24Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultModel) != null) { org.cqframework.cql.cql2elm.DataType modelResult = defaultModel.resolveTypeName(typeName); if (modelResult != null) { return modelResult; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/9095/buggy-version/Src.java.cql-to-elm.src.main.java.org.cqframework.cql.cql2elm.LibraryBuilder.java", "BodyUseAPI": [], "Fixed commit": "1a4c0f50a24c0717a39bf46bc072bdc42c96c794", "Url": "https://api.github.com/repos/cqframework/clinical_quality_language", "Date": "2017-01-02T21:21:30Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((i == 24) && (com.sadmean.mc.SpawnerAdjuster.SpawnerAdjuster.permCheck(player, \"SpawnerAdjuster.SetMobs.Hostile.CaveSpider\"))) && (SpawnerAdjuster.allowCaveSpider)) { spawner.setSpawnedType(EntityType.CAVE_SPIDER); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3014/buggy-version/src.main.java.com.sadmean.mc.SpawnerAdjuster.AdjusterPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "ee67f42821ba8d74d1fa8e973515d8305559f8b7", "Url": "https://api.github.com/repos/choel/SpawnerAdjuster", "Date": "2012-03-29T18:53:06Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spawner.getSpawnedType()) == (org.bukkit.entity.EntityType.SQUID)) { if ((!(com.sadmean.mc.SpawnerAdjuster.SpawnerAdjuster.permCheck(player, \"SpawnerAdjuster.SetMobs.Neutral.Squid\"))) && (SpawnerAdjuster.mustHaveValidPermissionsToAlterSpawner)) return; i = 24; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3014/buggy-version/src.main.java.com.sadmean.mc.SpawnerAdjuster.AdjusterPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "ee67f42821ba8d74d1fa8e973515d8305559f8b7", "Url": "https://api.github.com/repos/choel/SpawnerAdjuster", "Date": "2012-03-29T18:53:06Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (issues == null) { throw new java.lang.IllegalArgumentException(\"issues should not be null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3401/buggy-version/src.main.java.hudson.plugins.mantis.MantisBuildAction.java", "BodyUseAPI": [], "Fixed commit": "7045ca4d7a59b3870ee0d0987f5a2bc3fe52aeec", "Url": "https://api.github.com/repos/jenkinsci/mantis-plugin", "Date": "2012-04-30T18:37:33Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.example.leshik.moviedb.FullPosterActivity.AUTO_HIDE) { delayedHide(com.example.leshik.moviedb.FullPosterActivity.AUTO_HIDE_DELAY_MILLIS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3439/buggy-version/app.src.main.java.com.example.leshik.moviedb.FullPosterActivity.java", "BodyUseAPI": [], "Fixed commit": "4c4bf546be760ce4e579aaa92d4ddccb27e8349c", "Url": "https://api.github.com/repos/alex-karpenko/MovieDB", "Date": "2017-01-16T21:17:45Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (json != null) { java.lang.Object status = json.get(com.newrelic.metrics.publish.binding.Request.STATUS); if (status != null) { return ((java.lang.String) (status)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2886/buggy-version/src.com.newrelic.metrics.publish.binding.Request.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Fixed commit": "1938b552c12c04ec45420fb38b93beb4f991323d", "Url": "https://api.github.com/repos/newrelic-platform/metrics_publish_java", "Date": "2013-09-03T18:17:43Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isViewUpcoming) { int sortedIndex = sortedTasks.getSourceIndex(filteredTaskListIndex); toDoListIndex = filteredTasks.getSourceIndex(sortedIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3969/buggy-version/src.main.java.seedu.todolist.model.ModelManager.java", "BodyUseAPI": [], "Fixed commit": "8e69e1b33c0afb77b1961d01c11228ef695332d6", "Url": "https://api.github.com/repos/CS2103JAN2017-W15-B1/main", "Date": "2017-04-06T09:09:37Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.sarxos.webcam.WebcamMotionDetector.getMotionArea()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (motionArea > 4) com.slyvronline.mc.utils.Utils.sendEmail(this.getName(), fileName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2330/buggy-version/webcam-tool.core.src.com.slyvronline.webcamtool.WebcamEntity.java", "BodyUseAPI": [], "Fixed commit": "1c871a780e2addfeb7f1108b1dce3d3c0d72829f", "Url": "https://api.github.com/repos/Slyvr/webcam-tool", "Date": "2015-10-30T22:09:07Z"},
{"Line": "=>1131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defImgCounter) >= 80) defImgCounter = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/755/buggy-version/src.util.window.MusicDialog.java", "BodyUseAPI": [], "Fixed commit": "6e19abd6fc884453707a9fb2f8e66e090481d8cc", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-12-16T16:07:26Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sOptionName.length()) == 1) return hasOption(sOptionName.charAt(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8364/buggy-version/jnrpe-parent.jnrpe-lib.src.main.java.it.jnrpe.plugins.PluginCommandLine.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "it.jnrpe.plugins.PluginCommandLine.hasOption(char)"], "Fixed commit": "9b1b2ca55fb6089a4477e7d7378a835df24be101", "Url": "https://api.github.com/repos/ziccardi/jnrpe-lib", "Date": "2013-04-10T13:11:50Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sOptionName.length()) == 1) return getOptionValue(sOptionName.charAt(0), sDefaultValue);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8364/buggy-version/jnrpe-parent.jnrpe-lib.src.main.java.it.jnrpe.plugins.PluginCommandLine.java", "BodyUseAPI": ["it.jnrpe.plugins.PluginCommandLine.getOptionValue(char,java.lang.String)", "java.lang.String.charAt(int)"], "Fixed commit": "9b1b2ca55fb6089a4477e7d7378a835df24be101", "Url": "https://api.github.com/repos/ziccardi/jnrpe-lib", "Date": "2013-04-10T13:11:50Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sOptionName.length()) == 1) return getOptionValue(sOptionName.charAt(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8364/buggy-version/jnrpe-parent.jnrpe-lib.src.main.java.it.jnrpe.plugins.PluginCommandLine.java", "BodyUseAPI": ["it.jnrpe.plugins.PluginCommandLine.getOptionValue(char)", "java.lang.String.charAt(int)"], "Fixed commit": "9b1b2ca55fb6089a4477e7d7378a835df24be101", "Url": "https://api.github.com/repos/ziccardi/jnrpe-lib", "Date": "2013-04-10T13:11:50Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ed == null) ed = mc.getEditions().get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/369/buggy-version/src.org.magic.api.pictures.impl.MagicCardInfoPicturesProvider.java", "BodyUseAPI": [], "Fixed commit": "4e7cf5a55d809263a7a53df19c2c8d32bfeb8824", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-07-27T11:48:35Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((previous) == 9) { if ((notifier) != null) notifier.canceled = true; (iteration)--; setVisibility(previous); }else if ((((previous) == 2) && (getUser().getInsulinRegiment().equals(\"Insulin Pen\"))) && ((unwell) == 1)) insulin = 0; else if (((previous) == 3) && ((iteration) == 1)) (iteration)--; else if ((((previous) == 4) && (!(getUser().getInsulinRegiment().equals(\"Insulin Pen\")))) && ((iteration) == 1)) { insulin = 0; }else if ((((iteration) == 1) && (!((getUser().getInsulinRegiment().equals(\"Insulin Pen\")) && ((unwell) == 0)))) && ((previous) == 2)) { (iteration)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7281/buggy-version/app.src.main.java.com.example.anna.ketoapp2.ProtocolFragment.java", "BodyUseAPI": [], "Fixed commit": "daadce2ebc04fbcf071f851602ab1bfaaf8ee2a1", "Url": "https://api.github.com/repos/AnnaSolovjova/KetoApp2", "Date": "2016-04-30T15:04:39Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (node != null) { java.lang.String text = \"\"; java.util.List<org.jsoup.nodes.Node> childs = node.childNodes(); if (((childs.size()) > 0) && ((childs.get(0)) instanceof org.jsoup.nodes.TextNode)) text = ((org.jsoup.nodes.TextNode) (childs.get(0))).getWholeText(); childs = pairHead.getRight().childNodes(); if (((childs.size()) > 0) && ((childs.get(0)) instanceof org.jsoup.nodes.TextNode)) ((org.jsoup.nodes.TextNode) (childs.get(0))).text(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4304/buggy-version/src.main.java.org.mitre.dsmiley.httpproxy.fragments.RearrangeHead.java", "BodyUseAPI": ["org.jsoup.nodes.Node.childNodes()"], "Fixed commit": "16fba909312b45d9c79057814010aa0267a8979b", "Url": "https://api.github.com/repos/relvaner/HTTP-Proxy-Servlet", "Date": "2017-11-01T21:56:00Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4711/buggy-version/sonar-plugin-api.src.main.java.org.sonar.api.utils.PathUtils.java", "BodyUseAPI": [], "Fixed commit": "43adad0053aca847f656346d1bc85e89f15d6ec0", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2015-12-14T09:24:59Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((java.lang.System.getenv(\"FILEMGR_URL\")) != null) { gov.nasa.jpl.edrn.labcas.utils.SolrUtils.SOLR_URL = (java.lang.System.getenv(\"FILEMGR_URL\").replaceAll(\"9000\", \"8983\")) + \"/solr\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7541/buggy-version/common.src.main.java.gov.nasa.jpl.edrn.labcas.utils.SolrUtils.java", "BodyUseAPI": [], "Fixed commit": "d08143644a29475f2e6c97b4a9014fa51717f152", "Url": "https://api.github.com/repos/EDRN/labcas-backend", "Date": "2016-11-15T13:13:17Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.common.GoogleApiAvailability.getInstance().isGooglePlayServicesAvailable(getContext().getApplicationContext())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (resultCode != (com.google.android.gms.common.ConnectionResult.SUCCESS)) { com.google.android.gms.common.GoogleApiAvailability.getInstance().showErrorNotification(getContext().getApplicationContext(), resultCode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2583/buggy-version/app.src.main.java.app.iamin.iamin.ui.widget.CustomMapView.java", "BodyUseAPI": ["com.google.android.gms.common.GoogleApiAvailability.getInstance().showErrorNotification(getContext().getApplicationContext(),java.lang.Integer)"], "Fixed commit": "8a09d2d10d9c382c1066e8e1b664b714fd6da30a", "Url": "https://api.github.com/repos/where2help/android", "Date": "2016-02-09T16:59:13Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (b instanceof GameLogic.Ship) { java.lang.System.err.println((\"Ship vel. = \" + (b.getVelocity()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2371/buggy-version/src.GameLogic.Map.java", "BodyUseAPI": ["Physics.Body.getVelocity()", "java.io.PrintStream.println((\"Ship vel. = \" + (b.getVelocity())))"], "Fixed commit": "39ffdc8c1f0f34332fef7285e6f8faf9df4896f8", "Url": "https://api.github.com/repos/jivanpal/spaceflight", "Date": "2017-03-23T11:34:07Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.remoteConfigurationEnabled)) { org.apache.commons.lang3.Validate.notEmpty(this.appId, \"Application ID (appId) must be set\"); org.apache.commons.lang3.Validate.notEmpty(this.cookieKey, \"Cookie Key (cookieKey) must be set\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4353/buggy-version/src.main.java.com.perimeterx.models.configuration.PXConfiguration.java", "BodyUseAPI": [], "Fixed commit": "4f9029cbdebce4b18f04b59b306651d8dcd58be9", "Url": "https://api.github.com/repos/PerimeterX/perimeterx-java-sdk", "Date": "2017-07-26T11:35:56Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (progress > 100) { progress = 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8239/buggy-version/ABC_Cloud.src.main.java.com.springapp.mvc.model.cloud.FederationOfDataCenter.java", "BodyUseAPI": [], "Fixed commit": "bbe34960c65b6db905bbb6efbbefd0d2f25a0fa3", "Url": "https://api.github.com/repos/danicopaciu/Licenta", "Date": "2015-05-18T21:50:44Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pneumaticCraft.common.progwidgets.ProgWidgetItemFilter.itemRender) == null) pneumaticCraft.common.progwidgets.ProgWidgetItemFilter.itemRender = new net.minecraft.client.renderer.entity.RenderItem();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/9245/buggy-version/src.pneumaticCraft.common.progwidgets.ProgWidgetItemFilter.java", "BodyUseAPI": [], "Fixed commit": "a683a40ca0f601f564866b53d5d7c4db9677b367", "Url": "https://api.github.com/repos/DarkStarDS9/PneumaticCraft", "Date": "2014-12-26T18:45:50Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ImageButton.getDrawable()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (drawable instanceof android.graphics.drawable.AnimatedVectorDrawable) ((android.graphics.drawable.AnimatedVectorDrawable) (drawable)).start(); else if (drawable instanceof android.support.graphics.drawable.AnimatedVectorDrawableCompat) ((android.support.graphics.drawable.AnimatedVectorDrawableCompat) (drawable)).start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5702/buggy-version/app.src.main.java.com.teinproductions.tein.pitrainer.records.TimeFragment.java", "BodyUseAPI": [], "Fixed commit": "dcb877fb3c1fa9be75036d349dc94c58fddc1127", "Url": "https://api.github.com/repos/teinvdlugt/PiTrainer", "Date": "2017-01-09T14:13:53Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ImageButton.getDrawable()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (drawable instanceof android.graphics.drawable.AnimatedVectorDrawable) ((android.graphics.drawable.AnimatedVectorDrawable) (drawable)).start(); else if (drawable instanceof android.support.graphics.drawable.AnimatedVectorDrawableCompat) ((android.support.graphics.drawable.AnimatedVectorDrawableCompat) (drawable)).start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5702/buggy-version/app.src.main.java.com.teinproductions.tein.pitrainer.PractiseFragment.java", "BodyUseAPI": [], "Fixed commit": "dcb877fb3c1fa9be75036d349dc94c58fddc1127", "Url": "https://api.github.com/repos/teinvdlugt/PiTrainer", "Date": "2017-01-09T14:13:53Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(credential)) credential = serverCredentials;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3566/buggy-version/src.main.java.com.xebialabs.xlrelease.ci.NameValuePair.java", "BodyUseAPI": [], "Fixed commit": "23771bb197646249f3098eb4593cc797c98f8f6c", "Url": "https://api.github.com/repos/xebialabs/jenkinsci-xlrelease-plugin", "Date": "2017-01-05T16:26:28Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Window.Location.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((backgroundColor != null) && (!(backgroundColor.isEmpty()))) { backgroundColor = \"#\" + (backgroundColor.replaceAll(\"[^a-f0-9]\", \"\")); com.google.gwt.dom.client.Document.get().getBody().getStyle().setBackgroundColor(backgroundColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/15/buggy-version/src.org.openremote.web.console.client.WebConsole.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "514fb06aae3c36ea6b4da6561f4ec83f551c7318", "Url": "https://api.github.com/repos/openremote/WebConsole", "Date": "2016-09-29T04:53:45Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUpdateResponse.getGameUpdates().size()) > 0) { this.viewManager.updateView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6220/buggy-version/app.src.main.java.com.gamble.unopp.GameScreenActivity.java", "BodyUseAPI": [], "Fixed commit": "e76533ee63078bab353f7582e3cefd8c4e4ec8db", "Url": "https://api.github.com/repos/hawk23/unopp", "Date": "2015-05-24T00:29:47Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a[low]) == element) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3851/buggy-version/BinarySearch.java", "BodyUseAPI": [], "Fixed commit": "9bbcbedec030e84ee2826af782cf6a149db5f464", "Url": "https://api.github.com/repos/shrimalmadhur/CodeCode", "Date": "2015-08-11T05:52:34Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mebigfatguy.fbcontrib.detect.OptionalIssues.ActiveStackOp.getMethod()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (method == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8006/buggy-version/src.main.java.com.mebigfatguy.fbcontrib.detect.OptionalIssues.java", "BodyUseAPI": [], "Fixed commit": "e0e10bb3d588b541d853a5eec9be4750b0579e2a", "Url": "https://api.github.com/repos/mebigfatguy/fb-contrib", "Date": "2017-04-25T19:22:25Z"},
{"Line": "=>666", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!result) { android.widget.Toast.makeText(context, R.string.err_export_read, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/192/buggy-version/CallMeter3G.src.main.java.de.ub0r.android.callmeter.ui.prefs.Preferences.java", "BodyUseAPI": [], "Fixed commit": "63a21e16c409a0276d758eea3b26a053fd123554", "Url": "https://api.github.com/repos/felixb/callmeter", "Date": "2014-03-26T08:21:51Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(destinateDir.isAbsolute())) { destinateDir = new java.io.File(project.getBasedir(), destination); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/599/buggy-version/sablecc-maven-plugin.src.main.java.com.github.verylazyboy.SableccCaller.java", "BodyUseAPI": [], "Fixed commit": "e7a78c93720e583aadc6fb14872ade3d8009c9c5", "Url": "https://api.github.com/repos/johnny-bui/sablecc-maven-plugin", "Date": "2013-09-03T08:52:45Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(grammarFile.isAbsolute())) { grammarFile = new java.io.File(project.getBasedir(), grammar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/599/buggy-version/sablecc-maven-plugin.src.main.java.com.github.verylazyboy.SableccCaller.java", "BodyUseAPI": [], "Fixed commit": "e7a78c93720e583aadc6fb14872ade3d8009c9c5", "Url": "https://api.github.com/repos/johnny-bui/sablecc-maven-plugin", "Date": "2013-09-03T08:52:45Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hsvArray) == null) { hsvArray = new float[3]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5319/buggy-version/app.src.main.java.com.mweser.productivitytracker.model.structures.HsvColor.java", "BodyUseAPI": [], "Fixed commit": "9abd9cc7ce3296c7178125746e8f416a968f6251", "Url": "https://api.github.com/repos/mweser/ProductivityTracker", "Date": "2017-09-22T03:15:47Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (callback.isFailed()) throw new java.lang.IllegalStateException(callback.getFailure());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7642/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.command.Table.java", "BodyUseAPI": ["org.araqne.logdb.query.command.Table.LogTraverseCallbackImpl.getFailure()"], "Fixed commit": "39c69bc20b1d8e426d919f085330d9070eec4ea6", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-08-24T11:05:11Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (beforeFirstRoundChanged) { swtRaFile.seek(Constants.playerOffsetBeforeFirstRound); for (long byteIndex = Constants.playerOffsetBeforeFirstRound; byteIndex < (Constants.roundOffset); byteIndex++) { swtRaFile.writeByte(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8503/buggy-version/swt.SwtWriter.java", "BodyUseAPI": [], "Fixed commit": "7b7b879898ac12bb02c22d747ff3beb7a4df1323", "Url": "https://api.github.com/repos/tstempfle/swtlib", "Date": "2016-07-03T14:56:57Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.groovy.ast.expr.MethodCallExpression.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((type.isEnum()) && (org.eclipse.jdt.groovy.core.util.GroovyUtils.isAnonymous(type.redirect()))) && (expression.getMethodAsString().equals(\"$INIT\"))) { visitClass(type.redirect()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8044/buggy-version/base.org.eclipse.jdt.groovy.core.src.org.eclipse.jdt.groovy.core.util.DepthFirstVisitor.java", "BodyUseAPI": ["org.codehaus.groovy.ast.ClassNode.redirect()", "org.eclipse.jdt.groovy.core.util.DepthFirstVisitor.visitClass(type.redirect())"], "Fixed commit": "5ad82f66558c30f7f64964b8edfc6a1b345f5529", "Url": "https://api.github.com/repos/groovy/groovy-eclipse", "Date": "2017-11-16T21:54:08Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data[i]) == null) break; else if ((data[i].getValue().compareTo(largestChild)) > 0) { largestChild = ((T) (data[i].getValue())); largestIndex = i; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/604/buggy-version/CS.CSLib.src.main.java.com.brianthetall.cs.Heap.java", "BodyUseAPI": ["com.brianthetall.cs.Heap.Node.getValue()", "java.lang.Comparable.compareTo(T)", "com.brianthetall.cs.Heap.Node.getValue()"], "Fixed commit": "4ff93a22d8cbdd91ff007a85a9f5f4b47286a999", "Url": "https://api.github.com/repos/brianthetall/java-learning", "Date": "2013-08-13T17:27:20Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((attachment.getImage()) != null) && ((attachment.getImage().getUrl()) != null)) && ((attachment.getImage().getWidth()) != null)) mViewHolder.photo.setDimensions(attachment.getImage().getWidth(), attachment.getImage().getHeight(), attachment.getImage().getUrl());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5574/buggy-version/app.src.main.java.org.gdg.frisbee.android.adapter.NewsAdapter.java", "BodyUseAPI": ["attachment.getImage().getWidth()", "Activity.PlusObject.Attachments.getImage()", "Activity.PlusObject.Attachments.getImage()", "Activity.PlusObject.Attachments.getImage()", "attachment.getImage().getHeight()", "org.gdg.frisbee.android.view.ResizableImageView.setDimensions(attachment.getImage().getWidth(),attachment.getImage().getHeight(),attachment.getImage().getUrl())", "attachment.getImage().getUrl()"], "Fixed commit": "ba0e5fb65613984a28408736f9c011a67e80e04e", "Url": "https://api.github.com/repos/gdg-x/frisbee", "Date": "2013-12-18T20:13:14Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((back) != null) back.next = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8405/buggy-version/algds.assign2.Deque.java", "BodyUseAPI": [], "Fixed commit": "7caa1be46fdb908319fe22de33b6e37c7570d5a9", "Url": "https://api.github.com/repos/ravi-s/mycourses", "Date": "2014-03-04T12:58:03Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((N) == 0) { front = back = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8405/buggy-version/algds.assign2.Deque.java", "BodyUseAPI": [], "Fixed commit": "7caa1be46fdb908319fe22de33b6e37c7570d5a9", "Url": "https://api.github.com/repos/ravi-s/mycourses", "Date": "2014-03-04T12:58:03Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["info.papdt.express.helper.ui.adapter.HomePackageListAdapter.getItemData(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((p.companyChineseName.length()) > 0) { holder.bigCharView.setText(p.companyChineseName.substring(0, 1)); holder.logoView.setImageDrawable(new android.graphics.drawable.ColorDrawable(ColorGenerator.MATERIAL.getColor(p.companyChineseName))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3088/buggy-version/mobile.src.main.java.info.papdt.express.helper.ui.adapter.HomePackageListAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(p.companyChineseName.substring(0, 1))", "ColorGenerator.MATERIAL.getColor(p.companyChineseName)", "p.companyChineseName.substring(int,int)", "de.hdodenhof.circleimageview.CircleImageView.setImageDrawable(android.graphics.drawable.ColorDrawable)"], "Fixed commit": "8edccdea2e2eb5943ef4e753a6465705fd577ac5", "Url": "https://api.github.com/repos/ArchieMeng/PackageTracker", "Date": "2017-01-03T08:45:44Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (URI.contains(\"/\")) { return URI.substring(((URI.lastIndexOf('/')) + 1), URI.length()); }else { return URI; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1768/buggy-version/src.org.certh.jsonqb.datamodel.LDResource.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(char)", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "24a09c3a6253d3314192a22014ba8c5e0af4a3a3", "Url": "https://api.github.com/repos/OpenGovIntelligence/json-qb-api-implementation", "Date": "2017-02-03T08:25:46Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (val.startsWith(\"http://\")) { ldr = org.certh.jsonqb.util.SPARQLUtil.getLabels(val, sparqlService); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1768/buggy-version/src.org.certh.jsonqb.util.ObservationList.java", "BodyUseAPI": ["org.certh.jsonqb.util.SPARQLUtil.getLabels(java.lang.String,java.lang.String)"], "Fixed commit": "24a09c3a6253d3314192a22014ba8c5e0af4a3a3", "Url": "https://api.github.com/repos/OpenGovIntelligence/json-qb-api-implementation", "Date": "2017-02-03T08:25:46Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((num) == 1) { return isOpen(1, 1); }else if ((num) == 2) { return ((isOpen(1, 1)) && (isOpen(2, 1))) || ((isOpen(1, 2)) && (isOpen(2, 2))); }else { return percolatesFind.connected(topSite, bottomSite); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8765/buggy-version/algorithms-1.percolation.Percolation.java", "BodyUseAPI": [], "Fixed commit": "599fa06ca959e1936b731477c516900bda21930f", "Url": "https://api.github.com/repos/theeban275/coursera-assignments", "Date": "2015-09-19T07:36:36Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((num) == 2) && (i == 2)) { return isOpen((i - 1), j); }else { return fullFind.connected(topSite, site(i, j)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8765/buggy-version/algorithms-1.percolation.Percolation.java", "BodyUseAPI": ["Percolation.isOpen(int,int)", "edu.princeton.cs.algs4.WeightedQuickUnionUF.connected(int,int)", "Percolation.site(int,int)"], "Fixed commit": "599fa06ca959e1936b731477c516900bda21930f", "Url": "https://api.github.com/repos/theeban275/coursera-assignments", "Date": "2015-09-19T07:36:36Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((adminLanguage == null) || (\"\".equals(adminLanguage))) { adminLanguage = getContext().getWiki().Param(\"celements.admin_language\"); if ((adminLanguage == null) || (\"\".equals(adminLanguage))) { adminLanguage = \"en\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/392/buggy-version/src.main.java.com.celements.web.service.WebUtilsService.java", "BodyUseAPI": [], "Fixed commit": "9ab9078ff9045dccb648c4ed4c563a9019a973cc", "Url": "https://api.github.com/repos/celements/celements-core", "Date": "2013-04-05T08:54:00Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.mylyn.tasks.ui.TasksUi.getTaskActivityManager().getActiveTask()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((activeTask != null) && ((activeTask.getTaskKey()) != null)) bugsClosed.setText(activeTask.getTaskKey());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6639/buggy-version/org.review_board.ereviewboard.subclipse.ui.src.org.review_board.ereviewboard.subclipse.internal.wizards.PublishReviewRequestPage.java", "BodyUseAPI": ["org.eclipse.mylyn.tasks.core.ITask.getTaskKey()", "org.eclipse.swt.widgets.Text.setText(activeTask.getTaskKey())"], "Fixed commit": "bdbd62c9046b1788913979856c643b0d31f5c7ec", "Url": "https://api.github.com/repos/rombert/ereviewboard", "Date": "2011-12-08T11:12:07Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.codehaus.plexus.util.StringUtils.isNotEmpty(regex)) { regexBuilder.append(\"|(\").append(regex).append(\")\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7654/buggy-version/src.main.java.de.is24.maven.enforcer.rules.Repository.java", "BodyUseAPI": [], "Fixed commit": "3e38d17a7eba75a480be58a6952fd74b64d6c8e5", "Url": "https://api.github.com/repos/ImmobilienScout24/illegal-transitive-dependency-check", "Date": "2014-09-28T15:06:00Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) == (java.lang.Integer.parseInt(daniel.broride.Utils.readCache(getApplicationContext())))) { daniel.broride.Utils.saveCache(\"\", getApplicationContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2013/buggy-version/app.src.main.java.daniel.broride.RideEditor.java", "BodyUseAPI": [], "Fixed commit": "f2f3cc03063ce0b620d6dade524b3719fc00c9e0", "Url": "https://api.github.com/repos/danielbibit/BroRide", "Date": "2016-12-23T14:58:14Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (noUsage == true) { for (ro.ieat.soso.core.jobs.TaskHistory th : job.getTaskHistory().values()) { this.taskHistory.put(th.getTaskIndex(), new ro.ieat.soso.core.jobs.TaskHistory(th)); } }else { this.taskHistory = job.getTaskHistory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8191/buggy-version/src.main.java.ro.ieat.soso.core.jobs.Job.java", "BodyUseAPI": [], "Fixed commit": "b2f87ebc4c3d872073df7a1a7f13cd8808d6bd20", "Url": "https://api.github.com/repos/adispataru/soso-core", "Date": "2016-01-12T10:41:16Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.elasticsearch.common.settings.Settings.getAsArray(ConfigConstants.LDAPS_ENABLED_SSL_CIPHERS,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((enabledCipherSuites.length) > 0) { sslConfig.setEnabledCipherSuites(enabledCipherSuites); com.floragunn.dlic.auth.ldap.backend.LDAPAuthorizationBackend.log.debug(\"enabled ssl cipher suites for ldaps {}\", java.util.Arrays.toString(enabledCipherSuites)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5797/buggy-version/src.main.java.com.floragunn.dlic.auth.ldap.backend.LDAPAuthorizationBackend.java", "BodyUseAPI": ["org.ldaptive.ssl.SslConfig.setEnabledCipherSuites(java.lang.String[])", "org.elasticsearch.common.logging.ESLogger.debug(java.lang.String,java.lang.String)", "java.util.Arrays.toString(java.lang.String[])"], "Fixed commit": "22f65828d9047151ed4f8e471472e2ef0a2f1656", "Url": "https://api.github.com/repos/floragunncom/search-guard-authbackend-ldap", "Date": "2016-12-02T12:54:15Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["project.getProjectInfo().getTechnology().getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(TechnologyTypes.IPHONES.contains(technology))) { validateAgainst(validateAgainst, project, projectCode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5777/buggy-version/framework.phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.applications.Code.java", "BodyUseAPI": [], "Fixed commit": "a67bb2359a5277004ecb6d22165a6788b1179efc", "Url": "https://api.github.com/repos/phresco/phresco", "Date": "2012-07-04T06:43:38Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(projectileMap.containsKey(o))) deadPrj.addAll(moveProjectile(((Projectile) (o))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5896/buggy-version/lab2.mazewar.MazeImpl.java", "BodyUseAPI": [], "Fixed commit": "65816fe98ddfc43d3b44dc09e6c15970a7f00676", "Url": "https://api.github.com/repos/zaaras/ECE419", "Date": "2015-02-12T16:20:26Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temp.isEmpty()) continue loop;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5069/buggy-version/src.de.hft_stuttgart.wiest_wolf.Hangman.java", "BodyUseAPI": [], "Fixed commit": "280c7a5afdabc0d4e15c9b9be6a178ce487d6754", "Url": "https://api.github.com/repos/9Lukas5/Hangman", "Date": "2016-12-09T14:43:09Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.java.backend.Parser.DateParser.getMinute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (minute == 0) { time = hour + period; }else { if (minute < 10) { time = ((hour + \":0\") + minute) + period; }else { time = ((hour + \":\") + minute) + period; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4784/buggy-version/src.main.java.backend.Parser.DateParser.java", "BodyUseAPI": [], "Fixed commit": "6a858790aa98188b606e948f85d4ef747a109858", "Url": "https://api.github.com/repos/cs2103aug2015-w15-1j/main", "Date": "2015-11-03T09:21:45Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < (getSizeChickenInventory())) mightNeedToUpdateChickenInfo = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8944/buggy-version/src.main.java.com.timwoodcreates.roost.tileentity.TileEntityChickenContainer.java", "BodyUseAPI": [], "Fixed commit": "d0e2a3b11a2bb47846329e834ddb92a7925dd571", "Url": "https://api.github.com/repos/timrwood/roost", "Date": "2017-10-01T13:28:22Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < (getSizeChickenInventory())) mightNeedToUpdateChickenInfo = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8944/buggy-version/src.main.java.com.timwoodcreates.roost.tileentity.TileEntityChickenContainer.java", "BodyUseAPI": [], "Fixed commit": "d0e2a3b11a2bb47846329e834ddb92a7925dd571", "Url": "https://api.github.com/repos/timrwood/roost", "Date": "2017-10-01T13:28:22Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((temp.length()) > 56) temp = temp.substring(1, 56);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2888/buggy-version/Rusic_Game-android.src.com.rusic_game.MainActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "e7d472afe07108429306a553c2c79efc8cb156b8", "Url": "https://api.github.com/repos/SlappyPhil/Rusic", "Date": "2013-10-30T01:04:14Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view.scene.Scene.size) != null) { i = new java.awt.image.BufferedImage(view.scene.Scene.size.width, view.scene.Scene.size.height, java.awt.image.BufferedImage.TYPE_INT_ARGB); }else { i = new java.awt.image.BufferedImage(0, 0, java.awt.image.BufferedImage.TYPE_INT_ARGB); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4480/buggy-version/FBG2.0.src.view.scene.Scene.java", "BodyUseAPI": [], "Fixed commit": "cc5e7180b33391de8b5a778db4eb48553c0b3c29", "Url": "https://api.github.com/repos/TeamFinalBoss/GameIteration2", "Date": "2015-03-15T20:02:11Z"},
{"Line": "=>925", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (checkIfRecordExists(io.github.data4all.model.DataBaseHandler.TABLE_TAGMAP, io.github.data4all.model.DataBaseHandler.KEY_TAGID, tag.getKey().getId())) { count += db.update(io.github.data4all.model.DataBaseHandler.TABLE_TAGMAP, values, ((io.github.data4all.model.DataBaseHandler.KEY_TAGID) + \"=?\"), new java.lang.String[]{ java.lang.String.valueOf(tag.getKey().getId()) }); }else { db.insert(io.github.data4all.model.DataBaseHandler.TABLE_TAGMAP, null, values); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/967/buggy-version/src.main.java.io.github.data4all.model.DataBaseHandler.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])", "android.database.sqlite.SQLiteDatabase.insert(java.lang.String,<nulltype>,android.content.ContentValues)", "java.util.Map.Entry<io.github.data4all.model.data.Tag, java.lang.String>.getKey()", "java.lang.String.valueOf(tag.getKey().getId())", "tag.getKey().getId()"], "Fixed commit": "b2a5367d38de0fd0b350d5a73acb9d7815970f43", "Url": "https://api.github.com/repos/Data4All/Data4All", "Date": "2015-02-10T15:55:09Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tmp_length > size_buffer) { tmp_length = size_buffer; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8114/buggy-version/MemoryAnalyzer.src.network.ConnectThread.java", "BodyUseAPI": [], "Fixed commit": "51612281f640e305b17ebf5b2d67fb500c1cc04a", "Url": "https://api.github.com/repos/dimagerasimov/MemoryAnalyzer", "Date": "2016-12-03T22:46:44Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(options.get(KernelOptions.ENABLE_REFLECTION_LOGGER))) { org.reflections.Reflections.log = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8858/buggy-version/core.src.main.java.io.nuun.kernel.core.internal.KernelCore.java", "BodyUseAPI": [], "Fixed commit": "de724d70fe620a6954ab810db13ea9eb55475d45", "Url": "https://api.github.com/repos/nuun-io/kernel", "Date": "2016-03-28T09:43:48Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xdi2.core.Graph.findContextNode(xdi2.core.xri3.impl.XRI3Segment,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((targetNode == null) && (lcPermission == (xdi2.core.features.linkcontracts.util.XDILinkContractPermission.LC_OP_ADD))) { targetNode = linkContractsGraph.getRootContextNode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1093/buggy-version/messaging.src.main.java.xdi2.messaging.target.interceptor.impl.LinkContractsInterceptor.java", "BodyUseAPI": [], "Fixed commit": "81e25e0f608c3cbd9e81f2f1a4c9a512ac066a50", "Url": "https://api.github.com/repos/peacekeeper/xdi2", "Date": "2012-08-14T15:36:50Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.type.equals(ValueType.INTEGER)) { if ((((java.lang.Number) (this.value)).longValue()) != (((java.lang.Number) (this.value)).doubleValue())) { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7166/buggy-version/src.main.java.com.craftfire.commons.util.ValueHolderBase.java", "BodyUseAPI": [], "Fixed commit": "c6eb3ea409f76af834a97cf75abf41306174edf6", "Url": "https://api.github.com/repos/Wolf480pl/CraftCommons", "Date": "2013-02-18T10:53:57Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((prevLaidCell != null) && ((workingCell.getOffsetTicks()) == (prevLaidCell.getOffsetTicks()))) { b = prev_b; }else if ((prevLaidCell != null) && ((workingCell.getOffsetTicks()) > (prevLaidCell.getOffsetTicks()))) { b += gapSize; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7173/buggy-version/src.main.java.org.datavyu.views.discrete.layouts.SheetLayoutWeakTemporal.java", "BodyUseAPI": ["org.datavyu.views.discrete.SpreadsheetCell.getOffsetTicks()", "org.datavyu.views.discrete.SpreadsheetCell.getOffsetTicks()"], "Fixed commit": "1e0cb8f748d942a6ae673ce9f3fb8a1d02a9cfa8", "Url": "https://api.github.com/repos/databrary/datavyu", "Date": "2013-06-26T18:04:01Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMultiple) mappingVal += \"Csv\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1627/buggy-version/xa-toolwrapper.src.main.java.eu.scape_project.xa.tw.gen.ServiceCodeCreator.java", "BodyUseAPI": [], "Fixed commit": "e158ee20e06b018523d01b3d14dfceb323afc360", "Url": "https://api.github.com/repos/openpreserve/scape", "Date": "2011-11-04T12:24:54Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((propertiesFile.exists()) && (describeFile.exists())) { map.put(\"status\", \"success\"); java.util.Map<java.lang.String, java.lang.String> propertiesMap = loadProperties(propertiesFilePath); generateNewDescribeFile(describeFilePath, newDescribeFilePath, checkMetricList, propertiesMap); }else { map.put(\"status\", \"failed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5618/buggy-version/MetricProcessor.src.main.java.com.vmware.metricprocessor.controller.MetricController.java", "BodyUseAPI": [], "Fixed commit": "3dc4dc1b48f992a608f220e89eb754f7918b10e2", "Url": "https://api.github.com/repos/zhanghyPATHof/MetricMgr", "Date": "2017-01-20T09:50:09Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (radius <= 8100) params.put(\"sort_by\", \"distance\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/751/buggy-version/app.src.main.java.com.example.jason.fooder1.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "da6b9b05d26aa68cde1f4dda7796d45b277ace0e", "Url": "https://api.github.com/repos/brenkao/CS161", "Date": "2017-05-15T22:33:27Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((location) == null) { latitude = 37.3351874; longitude = -121.88107150000002; }else { latitude = location.getLatitude(); longitude = location.getLongitude(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/751/buggy-version/app.src.main.java.com.example.jason.fooder1.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "da6b9b05d26aa68cde1f4dda7796d45b277ace0e", "Url": "https://api.github.com/repos/brenkao/CS161", "Date": "2017-05-15T22:33:27Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (model.containsVertex(node)) edges.addAll(model.outgoingEdgesOf(node));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8740/buggy-version/karma-common.src.main.java.edu.isi.karma.rep.alignment.DisplayModel.java", "BodyUseAPI": ["java.util.Set<edu.isi.karma.rep.alignment.LabeledLink>.addAll(model.outgoingEdgesOf(node))", "org.jgrapht.graph.DirectedWeightedMultigraph<edu.isi.karma.rep.alignment.Node, edu.isi.karma.rep.alignment.LabeledLink>.outgoingEdgesOf(edu.isi.karma.rep.alignment.Node)"], "Fixed commit": "beaf25b0588e7a5921709e4888177d98bb56a967", "Url": "https://api.github.com/repos/InformationIntegrationGroup/Web-Karma", "Date": "2014-08-18T21:18:10Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (modulo == 0) { modulo = 1000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/23/buggy-version/src.main.java.de.cismet.cids.custom.objectrenderer.utils.BaulastenPictureFinder.java", "BodyUseAPI": [], "Fixed commit": "3d971f9f2d40f862d7ec535890c5c15a91b5dfa5", "Url": "https://api.github.com/repos/cismet/cids-custom-wuppertal", "Date": "2013-01-18T09:39:54Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<controllers.DCollection>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((parent && ((collection.parent.length()) == 0)) || (!parent)) { if (firstTime) { firstTime = false; }else { sb.append(\", \"); } sb.append(((((((((\"{\\\"title\\\": \\\"\" + (collection.title)) + \"\\\",\") + (controllers.InstanceController.checkSelection(collection.url, targetUrl))) + \" \\\"key\\\": \\\"\") + (collection.url)) + \"\\\"\") + (controllers.InstanceController.getChildren(collection.url, targetUrl))) + \"}\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2213/buggy-version/app.controllers.InstanceController.java", "BodyUseAPI": ["controllers.InstanceController.checkSelection(collection.url,java.lang.String)", "controllers.InstanceController.getChildren(collection.url,java.lang.String)", "java.lang.StringBuffer.append(((((((((\"{\\\"title\\\": \\\"\" + (collection.title)) + \"\\\",\") + (controllers.InstanceController.checkSelection(collection.url, targetUrl))) + \" \\\"key\\\": \\\"\") + (collection.url)) + \"\\\"\") + (controllers.InstanceController.getChildren(collection.url, targetUrl))) + \"}\"))"], "Fixed commit": "5d8e06ba46aa7b5f3e686266cf759fad78790787", "Url": "https://api.github.com/repos/ukwa/w3act", "Date": "2014-04-15T14:43:51Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getData(\"minimize\")) == null) && (!(closeit))) { minimize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8643/buggy-version/src.main.java.org.iplantc.de.client.views.windows.IDropLiteAppletWindow.java", "BodyUseAPI": [], "Fixed commit": "53b3409b1890050c16ab8f4c9d637961d161a97c", "Url": "https://api.github.com/repos/iPlantCollaborativeOpenSource/de-webapp", "Date": "2012-05-29T22:51:54Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.forgotMyMobile.helpers.PreferenceHelper.isAutoForwardEnabled(getApplicationContext())) { com.forgotMyMobile.helpers.PreferenceHelper.setAutoFwd(getApplicationContext(), false); sendSMS(respondTo, \"CANNOT SET AUTO FORWARD TO SAME NUMBER\\nAUTO FORWARD STOPPED \\n\\n\\n send \\'<passcode> HELP\\' for additional commands\\n\", getApplicationContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3163/buggy-version/src.com.forgotMyMobile.services.BackgroundService.java", "BodyUseAPI": [], "Fixed commit": "f0588bcdc5b6a4f97e03923b3a0459cff13ad2be", "Url": "https://api.github.com/repos/srikanthNutigattu/ForgotMyMobile", "Date": "2014-04-26T13:14:17Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.Bike.isCollision(player2.getCenter(),int,player2.getBoundingCoordinates())", "game.Bike.isCollision(player1.getCenter(),int,player1.getBoundingCoordinates())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (P1Suicide || P2Suicide) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2075/buggy-version/src.game.GameController.java", "BodyUseAPI": [], "Fixed commit": "ae97efc32497db9bd7f83c0859ba66399eecdccd", "Url": "https://api.github.com/repos/isacarnekvist/Tron", "Date": "2014-05-05T19:01:26Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7324/buggy-version/src.main.java.com.wolfogre.service.IpService.java", "BodyUseAPI": [], "Fixed commit": "5c68c0edeb529415d411cd59aeeb2bdb8557e4e8", "Url": "https://api.github.com/repos/wolfogre/PasteBin", "Date": "2016-10-13T05:00:03Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player1Controller.player.stateKicking.isActive()) { for (javafx.scene.shape.Rectangle hurt : p2.getHurtBoxes()) { if (p1.getHitBox(1).getBoundsInParent().intersects(hurt.getBoundsInParent())) { if (!(p2.stateStunned.isActive())) { p2.stateStunned.enterCycle(CYCLE.ACTIVE); p2.setHP(((p2.getHP()) - 10)); java.lang.System.out.println(((\"Player 2 is hit - \" + (p2.getHP())) + \"HP\")); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6864/buggy-version/src.server.StageController.java", "BodyUseAPI": [], "Fixed commit": "a9a65026889bfddb805b5671e999b852349eb52b", "Url": "https://api.github.com/repos/angermark/dat055g1", "Date": "2017-03-02T21:19:09Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player2Controller.player.stateKicking.isActive()) { for (javafx.scene.shape.Rectangle hurt : p1.getHurtBoxes()) { if (p2.getHitBox(1).getBoundsInParent().intersects(hurt.getBoundsInParent())) { if (!(p1.stateStunned.isActive())) { p1.stateStunned.enterCycle(CYCLE.ACTIVE); p1.setHP(((p1.getHP()) - 20)); java.lang.System.out.println(((\"Player 1 is hit - \" + (p1.getHP())) + \"HP\")); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6864/buggy-version/src.server.StageController.java", "BodyUseAPI": [], "Fixed commit": "a9a65026889bfddb805b5671e999b852349eb52b", "Url": "https://api.github.com/repos/angermark/dat055g1", "Date": "2017-03-02T21:19:09Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(user.getEmail().equals(old.getEmail()))) { user.setEmail(cz.clovekvtisni.coordinator.util.ValueTool.normalizeEmail(user.getEmail())); systemService.saveUniqueIndexOwner(ofy(), UniqueIndexEntity.Property.EMAIL, user.getEmail(), user.getKey()); systemService.deleteUniqueIndexOwner(ofy(), UniqueIndexEntity.Property.EMAIL, old.getEmail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/918/buggy-version/coordinator-server.src.main.java.cz.clovekvtisni.coordinator.server.service.impl.UserServiceImpl.java", "BodyUseAPI": ["cz.clovekvtisni.coordinator.server.service.impl.UserEntity.getEmail()", "cz.clovekvtisni.coordinator.server.service.impl.UserEntity.getEmail()", "cz.clovekvtisni.coordinator.server.service.impl.UserEntity.getEmail()", "cz.clovekvtisni.coordinator.server.service.impl.UserEntity.setEmail(cz.clovekvtisni.coordinator.util.ValueTool.normalizeEmail(user.getEmail()))", "cz.clovekvtisni.coordinator.server.service.impl.UserEntity.getKey()", "cz.clovekvtisni.coordinator.server.service.impl.UserServiceImpl.3.deleteUniqueIndexOwner(ofy(),UniqueIndexEntity.Property.EMAIL,old.getEmail())", "cz.clovekvtisni.coordinator.util.ValueTool.normalizeEmail(user.getEmail())", "cz.clovekvtisni.coordinator.server.service.impl.UserServiceImpl.3.saveUniqueIndexOwner(ofy(),UniqueIndexEntity.Property.EMAIL,user.getEmail(),user.getKey())"], "Fixed commit": "a1e32927cd0f628848c322524de149849dcd2b20", "Url": "https://api.github.com/repos/Tomucha/coordinator", "Date": "2013-06-05T13:29:41Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.isInCreativeTab(creativeTab)) { this.getCheckedSubItems(creativeTab, itemStacks); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/328/buggy-version/src.main.java.appeng.items.AEBaseItem.java", "BodyUseAPI": ["appeng.items.AEBaseItem.getCheckedSubItems(net.minecraft.creativetab.CreativeTabs,net.minecraft.util.NonNullList<net.minecraft.item.ItemStack>)"], "Fixed commit": "d1480b27a0809d11548995a53b918865329d1684", "Url": "https://api.github.com/repos/thiakil/Applied-Energistics-2", "Date": "2017-07-11T12:00:44Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newickFile.getValue()) != null) { node = new nl.tudelft.dnainator.parser.TreeParser(getNewickFile()).parse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/9264/buggy-version/dnainator-javafx.src.main.java.nl.tudelft.dnainator.javafx.services.GraphLoadService.java", "BodyUseAPI": [], "Fixed commit": "258534649cf1d4a08a240b6b496b86b6ef3663fb", "Url": "https://api.github.com/repos/gfokkema/dnainator", "Date": "2015-06-16T19:17:27Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ret < 1) ret = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4682/buggy-version/JavaCplex.src.pvm.KernelProducts.KernelProductPoly.java", "BodyUseAPI": [], "Fixed commit": "16b0cab7fb57708253b33a6f5342135bb77c0924", "Url": "https://api.github.com/repos/imcu/dpvm", "Date": "2013-01-14T18:44:55Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ret > ((pvm.KernelProducts.KernelProductPoly.powerIntInitialCenter) + (pvm.KernelProducts.KernelProductPoly.powerIntInitialRange))) ret = (pvm.KernelProducts.KernelProductPoly.powerIntInitialCenter) + (pvm.KernelProducts.KernelProductPoly.powerIntInitialRange);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4682/buggy-version/JavaCplex.src.pvm.KernelProducts.KernelProductPoly.java", "BodyUseAPI": [], "Fixed commit": "16b0cab7fb57708253b33a6f5342135bb77c0924", "Url": "https://api.github.com/repos/imcu/dpvm", "Date": "2013-01-14T18:44:55Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.onarandombox.MultiverseCore.api.MultiverseWorld, java.util.Map<java.lang.Integer, java.util.Collection<com.onarandombox.MultiversePortals.MVPortal>>>.get(com.onarandombox.MultiverseCore.api.MultiverseWorld)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (chunksToPortals == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8843/buggy-version/src.main.java.com.onarandombox.MultiversePortals.utils.PortalManager.java", "BodyUseAPI": [], "Fixed commit": "15f492c464fbe2ec20f40c41617f10025e8bc234", "Url": "https://api.github.com/repos/Multiverse/Multiverse-Portals", "Date": "2012-03-29T06:16:07Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enemies.size()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2650/buggy-version/HomokaasuTheGame.src.com.example.homokaasuthegame.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6f06ea0b00ba5f3556f1e6444fda0558f4eadb0e", "Url": "https://api.github.com/repos/Juzmach/hackathon-hk", "Date": "2013-04-07T12:18:21Z"},
{"Line": "=>1082", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((java.lang.Boolean) (w_orderLineTable.getValueAt(i, org.spin.form.SELECT)))) { w_orderLineTable.setValueAt(true, i, org.spin.form.SELECT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5738/buggy-version/zkwebui.WEB-INF.src.org.spin.form.WLoadOrder.java", "BodyUseAPI": ["org.adempiere.webui.component.WListbox.setValueAt(boolean,int,org.spin.form.SELECT)"], "Fixed commit": "6c59b5b54d5180a58d69b853b4264566b512ba00", "Url": "https://api.github.com/repos/erpcya/FTA", "Date": "2015-02-16T01:42:43Z"},
{"Line": "=>645", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((java.lang.Boolean) (orderLineTable.getValueAt(i, org.spin.form.SELECT)))) { orderLineTable.setValueAt(true, i, org.spin.form.SELECT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5738/buggy-version/client.org.spin.form.VLoadOrder.java", "BodyUseAPI": ["org.compiere.minigrid.MiniTable.setValueAt(boolean,int,org.spin.form.SELECT)"], "Fixed commit": "6c59b5b54d5180a58d69b853b4264566b512ba00", "Url": "https://api.github.com/repos/erpcya/FTA", "Date": "2015-02-16T01:42:43Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((edgePos[1]) == 0) fillAnswerTab(solution, rubiksCubeFirstCross, edgePos[0], 1, message, \"first cross\"); else { if ((edgePos[0]) == 0) timesToTurn = 0; else if ((edgePos[0]) == 1) timesToTurn = 3; else if ((edgePos[0]) == 3) timesToTurn = 2; else if ((edgePos[0]) == 4) timesToTurn = 1; fillAnswerTab(solution, rubiksCubeFirstCross, 2, timesToTurn, message, \"first cross\"); fillAnswerTab(solution, rubiksCubeFirstCross, edgePos[0], 1, message, \"first cross\"); fillAnswerTab(solution, rubiksCubeFirstCross, 2, (4 - timesToTurn), message, \"first cross\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7399/buggy-version/SolveFirstCross.java", "BodyUseAPI": ["SolveFirstCross.fillAnswerTab(Solution,java.awt.Color[][][],int,int,java.lang.String,java.lang.String)", "SolveFirstCross.fillAnswerTab(Solution,java.awt.Color[][][],int,int,java.lang.String,java.lang.String)"], "Fixed commit": "695d5ab22cd176fc97ca556a6871e06d2a97d25f", "Url": "https://api.github.com/repos/Shweetz/Rubiks-Cube-Solver", "Date": "2015-03-07T20:41:52Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(argumentsMap.containsKey((\"--\" + arg)))) argumentsMap.put((\"--\" + arg), value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5479/buggy-version/week1-cassandra.loader.src.main.java.arguments.ArgumentsParser.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "0e338cac075559e5eee36205900e88cf3e7a4a49", "Url": "https://api.github.com/repos/Dmitry404/bdata-course", "Date": "2017-03-11T23:20:09Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(argumentsMap.containsKey((\"--\" + arg)))) argumentsMap.put((\"--\" + arg), value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5479/buggy-version/week1-cassandra-part2.src.main.java.arguments.ArgumentsParser.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "0e338cac075559e5eee36205900e88cf3e7a4a49", "Url": "https://api.github.com/repos/Dmitry404/bdata-course", "Date": "2017-03-11T23:20:09Z"},
{"Line": "=>2683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (targetWordPOS == null) { int certaintyU = 0; certaintyU += increment; this.wordPOSTable.put(new semanticMarkup.ling.learn.WordPOSKey(newWord, pos), new semanticMarkup.ling.learn.WordPOSValue(role, certaintyU, 0, null, null)); int n = 1; }else { java.lang.String oldPOS = targetWordPOS.getKey().getPOS(); if ((!(oldPOS.equals(pos))) && ((oldPOS.equals(\"b\")) || (pos.equals(\"b\")))) { java.lang.String otherPOS = (pos.equals(\"b\")) ? oldPOS : pos; pos = resolveConfilicts(newWord, \"b\", otherPOS); }else { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2156/buggy-version/src.semanticMarkup.ling.learn.UnsupervisedClauseMarkup.java", "BodyUseAPI": ["java.util.Map.Entry<semanticMarkup.ling.learn.WordPOSKey, semanticMarkup.ling.learn.WordPOSValue>.getKey()", "targetWordPOS.getKey().getPOS()"], "Fixed commit": "1a1ce8dcb7593547fd08cc867903721ca6af9a44", "Url": "https://api.github.com/repos/dongyemeng/charaparser-unsupervised", "Date": "2013-02-24T08:36:59Z"},
{"Line": "=>2655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newWord.matches(((((((\"^.*(\\b|_)(NUM|\" + (this.NUMBER)) + \"|\") + (this.CLUSTERSTRING)) + \"|\") + (this.CHARACTER)) + \")\\b.*$\"))) && (pos.matches(\"[nsp]\"))) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2156/buggy-version/src.semanticMarkup.ling.learn.UnsupervisedClauseMarkup.java", "BodyUseAPI": [], "Fixed commit": "1a1ce8dcb7593547fd08cc867903721ca6af9a44", "Url": "https://api.github.com/repos/dongyemeng/charaparser-unsupervised", "Date": "2013-02-24T08:36:59Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (letter == ' ') { geraden = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2741/buggy-version/GamesuiteHangman.src.domain.HintLetter.java", "BodyUseAPI": [], "Fixed commit": "d4d7de4a7b44da1ba1dc217596547fc646194ca2", "Url": "https://api.github.com/repos/thomascorthouts/GameSuiteHangman", "Date": "2017-05-10T11:39:31Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Exception.getCause()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((e instanceof groovy.util.ResourceException) && (cause instanceof java.io.FileNotFoundException)) { throw new org.craftercms.engine.exception.ScriptNotFoundException(cause.getMessage(), cause); }else { throw new org.craftercms.engine.exception.ScriptException(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6409/buggy-version/src.main.java.org.craftercms.engine.scripting.impl.GroovyScript.java", "BodyUseAPI": ["java.lang.Exception.getMessage()", "java.lang.Throwable.getMessage()"], "Fixed commit": "c45cb2aaa5c3c592c0e631292a18c300070867cc", "Url": "https://api.github.com/repos/avasquez614/engine", "Date": "2014-07-04T16:40:41Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.ufs.dcomp.farms.model.dao.CriteriaReviewJustificationDao.getByIdReview(review.getIdReview())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((criterias.size()) > 0) { reviewCreatedDto.add(new br.ufs.dcomp.farms.model.dto.ReviewCreateDto(review, criterias.get(0).getDsJustification(), ids)); }else { reviewCreatedDto.add(new br.ufs.dcomp.farms.model.dto.ReviewCreateDto(review, null, ids)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6548/buggy-version/src.main.java.br.ufs.dcomp.farms.model.service.SelectionService.java", "BodyUseAPI": ["java.util.List<br.ufs.dcomp.farms.model.dto.ReviewCreateDto>.add(br.ufs.dcomp.farms.model.dto.ReviewCreateDto)", "criterias.get(0).getDsJustification()", "java.util.List<br.ufs.dcomp.farms.model.entity.CriteriaReviewJustification>.get(int)"], "Fixed commit": "6b91d74b27a529eac8641031e1b635eb027824b9", "Url": "https://api.github.com/repos/andreteixeiraUFS/farms-api", "Date": "2017-03-22T16:41:09Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getRobotCount(RobotType.SOLDIER)) < (TeamConstants.MAX_NUMBER_SOLDIERS)) { while (!(build(RobotType.SOLDIER))) { battlecode.common.Clock.yield(); } state = blueteam.Gardener.GardenerState.BUILDING; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8390/buggy-version/src.blueteam.Gardener.java", "BodyUseAPI": [], "Fixed commit": "e52fbe227e6306494f40334c5c26e4701e40d861", "Url": "https://api.github.com/repos/hrnr/battlecode-2017-blueteam", "Date": "2017-03-15T08:40:55Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dbType) == null) { dbType = com.alibaba.druid.util.JdbcUtils.getDbType(dataSource.getUrl(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6753/buggy-version/src.main.java.com.alibaba.druid.wall.WallFilter.java", "BodyUseAPI": [], "Fixed commit": "04321df02cdc77de3d624d9014fb3234da1e9647", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2012-11-19T09:13:06Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.dbType) == null) || ((this.dbType.length()) == 0)) { this.dbType = com.alibaba.druid.util.JdbcUtils.getDbType(jdbcUrl, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6753/buggy-version/src.main.java.com.alibaba.druid.pool.DruidDataSource.java", "BodyUseAPI": [], "Fixed commit": "04321df02cdc77de3d624d9014fb3234da1e9647", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2012-11-19T09:13:06Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jObj.has(\"keyframes\")) { org.json.JSONArray jsonKeyframes = jObj.getJSONArray(\"keyframes\"); keyframes = new java.util.ArrayList<com.angrykings.activities.Keyframe>(); for (int i = 0; i < (jsonKeyframes.length()); ++i) { keyframes.add(new com.angrykings.activities.Keyframe(jsonKeyframes.getJSONObject(i))); } android.util.Log.i(getClass().getName(), ((\"received \" + (keyframes.size())) + \" keyframes\")); }else { android.util.Log.i(getClass().getName(), \"received 0 keyframes\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6204/buggy-version/src.com.angrykings.activities.OnlineGameActivity.java", "BodyUseAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Fixed commit": "d0499ad8b2c904f9569a26f083840db7b3ed3564", "Url": "https://api.github.com/repos/shi-314/AngryKings", "Date": "2013-12-12T14:05:05Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fragmentContainer) == (-1)) { super.onBackPressed(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/398/buggy-version/grandroid-mvp-framework.src.main.java.com.grasea.grandroid.mvp.GrandroidActivity.java", "BodyUseAPI": [], "Fixed commit": "70ed9ee3481bf7bacb1a04a02226e02bc867a03d", "Url": "https://api.github.com/repos/Grasea/Grandroid2", "Date": "2016-07-12T08:46:29Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((container) == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3269/buggy-version/src.main.java.org.concord.energy3d.model.SolarPanel.java", "BodyUseAPI": [], "Fixed commit": "c48f8dae751214718d65dae8b57daa7f78420296", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2015-03-11T17:27:05Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["securedDoc.select(\"div.gd11-pilot\").last().select(\"div.gd13v2-pilot\").first()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (secTextEle == null) { secTextEle = securedDoc.select(\"div.gd11-pilot\").last().select(\"div.compact\").first(); if (secTextEle == null) { secTextEle = securedDoc.select(\"div.gd12v1-pilot\").last(); if (secTextEle == null) { secTextEle = securedDoc.select(\"div.gd13v2-pilot\").last(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/816/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.partner.PartnerVariation1.java", "BodyUseAPI": [], "Fixed commit": "69ce6249698aeb5662db8d3a04183b9763b8546c", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2016-01-29T14:50:55Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.distances.get(i)) != (-1)) { if (min >= (this.distances.get(i))) { min = this.distances.get(i); toAdd = i; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1128/buggy-version/src.LinkState.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.get(int)", "java.util.ArrayList<java.lang.Integer>.get(int)"], "Fixed commit": "597eaca58a8045f20d3fead4d6bdffee3205b215", "Url": "https://api.github.com/repos/austinbruch/CNT4007PA3", "Date": "2015-04-04T20:49:37Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/9083/buggy-version/lens-api.src.main.java.org.apache.lens.api.APIResult.java", "BodyUseAPI": [], "Fixed commit": "b28daaadbe72a79b0cc8965e53a39e43e83a48f5", "Url": "https://api.github.com/repos/prongs/lens", "Date": "2016-08-25T07:37:10Z"},
{"Line": "=>665", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((oper == 0) && (x == 1)) { inv.subtractTotal(spread); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7607/buggy-version/src.me.smickles.DynamicMarket.DynamicMarket.java", "BodyUseAPI": [], "Fixed commit": "d6a7516670c6bb0753bcd511f1c715d9f9ab81d0", "Url": "https://api.github.com/repos/smickles/DynamicMarket", "Date": "2011-10-16T19:34:34Z"},
{"Line": "=>688", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.isEmpty()) { res = o.defaultValue().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5017/buggy-version/OpenJML.src.org.jmlspecs.openjml.Main.java", "BodyUseAPI": [], "Fixed commit": "4b0abd775b05de37d43cf17850616fbb91834fbd", "Url": "https://api.github.com/repos/OpenJML/OpenJML", "Date": "2017-04-07T03:01:27Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == 0) { if ((head) == null) { throw new java.lang.IndexOutOfBoundsException((\"Sorry no such element: \" + index)); } return head; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7427/buggy-version/data-structures.src.pl.sdacaemy.data.structures.impl.ForwardList.java", "BodyUseAPI": [], "Fixed commit": "298f37e8cb7676127ba9598ae79807ca313958f1", "Url": "https://api.github.com/repos/gelldur/SDA-AlgorithmsAndDataStructures", "Date": "2017-07-15T09:29:25Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parser) == null) { parser = new com.sun.xml.xsom.parser.XSOMParser(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6532/buggy-version/protomak-engine.src.main.java.uk.co.jemos.protomak.engine.impl.XsomXsdToProtoDomainConversionServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "f92e1d3bf7da1ff839d7ec474f8a76dd1f59c344", "Url": "https://api.github.com/repos/ewilde/protomak", "Date": "2011-06-24T20:23:14Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (redoHotKey.match(event)) { controller.handleHotKeys(\"redo\"); }else if (exitHotKey.match(event)) { stop(); }else if (helpHotKey.match(event)) { helpController.openHelpWindow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8281/buggy-version/task_catalyst.src.main.java.moustachio.task_catalyst.TaskCatalyst.java", "BodyUseAPI": ["javafx.scene.input.KeyCombination.match(javafx.scene.input.KeyEvent)", "javafx.scene.input.KeyCombination.match(javafx.scene.input.KeyEvent)"], "Fixed commit": "b0d4eafdc0f1bff30e6d7455e6ebacc2fa7748ec", "Url": "https://api.github.com/repos/cs2103aug2014-t17-4j/main", "Date": "2014-11-01T17:21:54Z"},
{"Line": "=>634", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.csstudio.simplepv.VTypeHelper.getWrappedArray(org.epics.vtype.VType)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (wrappedArray != null) setValue(wrappedArray); else setValue(((org.epics.vtype.VNumberArray) (value)).getData());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8764/buggy-version/applications.plugins.org.csstudio.opibuilder.widgets.src.org.csstudio.opibuilder.widgets.editparts.ArrayEditPart.java", "BodyUseAPI": ["org.csstudio.opibuilder.widgets.editparts.ArrayEditPart.8.setValue(java.lang.Object)"], "Fixed commit": "90b6e0a4b477190c3429553595f982ebc774ec74", "Url": "https://api.github.com/repos/ControlSystemStudio/cs-studio", "Date": "2013-08-02T19:33:25Z"},
{"Line": "=>850", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof org.epics.util.array.ListNumber) { setChildrenValue(index, new org.csstudio.opibuilder.widgets.util.ListNumberWrapper(((org.epics.util.array.ListNumber) (value))), ArrayDataType.DOUBLE_ARRAY); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8764/buggy-version/applications.plugins.org.csstudio.opibuilder.widgets.src.org.csstudio.opibuilder.widgets.editparts.ArrayEditPart.java", "BodyUseAPI": [], "Fixed commit": "90b6e0a4b477190c3429553595f982ebc774ec74", "Url": "https://api.github.com/repos/ControlSystemStudio/cs-studio", "Date": "2013-08-02T19:33:25Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (review.classdesign.jammy.service.IGoogleSessionService.class.equals(serviceInterface)) { return service; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1113/buggy-version/review.classdesign.jammy.src.review.classdesign.jammy.service.factory.GoogleSessionServiceFactory.java", "BodyUseAPI": [], "Fixed commit": "79dd61c08b5627c9248f0809104b1399575a3609", "Url": "https://api.github.com/repos/Faylixe/jammy", "Date": "2015-11-06T12:19:36Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (review.classdesign.jammy.service.ISubmissionService.class.equals(serviceInterface)) { return service; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1113/buggy-version/review.classdesign.jammy.src.review.classdesign.jammy.service.factory.SubmissionServiceFactory.java", "BodyUseAPI": [], "Fixed commit": "79dd61c08b5627c9248f0809104b1399575a3609", "Url": "https://api.github.com/repos/Faylixe/jammy", "Date": "2015-11-06T12:19:36Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cookie.getPath()) != null) { realCookie.setPath(cookie.getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8596/buggy-version/src.main.java.io.torch.pipeline.ServingWebpageHandler.java", "BodyUseAPI": ["io.netty.handler.codec.http.DefaultCookie.setPath(cookie.getPath())", "io.torch.cookie.CookieVariable.getPath()"], "Fixed commit": "27e6dbe96b99abdbb0ceac6b078bcfa47d7ebb2a", "Url": "https://api.github.com/repos/laxika/TorchWS", "Date": "2013-09-08T14:46:33Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) != null) { return this.type; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2189/buggy-version/corelib-solr.src.main.java.eu.europeana.corelib.solr.bean.impl.FullBeanImpl.java", "BodyUseAPI": [], "Fixed commit": "6adcfecf93c1a11819293293fa40ff5fba670c67", "Url": "https://api.github.com/repos/europeana/corelib", "Date": "2013-10-10T13:52:25Z"},
{"Line": "=>719", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getInputs().size()) == 0) { rewriteGeneric(p); }else { throw org.apache.calcite.util.Util.newInternal((((\"no '\" + visitMethodName) + \"' method found for class \") + (p.getClass().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5323/buggy-version/core.src.main.java.org.apache.calcite.sql2rel.RelStructuredTypeFlattener.java", "BodyUseAPI": ["org.apache.calcite.sql2rel.RelStructuredTypeFlattener.RewriteRelVisitor.rewriteGeneric(org.apache.calcite.rel.RelNode)", "org.apache.calcite.util.Util.newInternal((((\"no '\" + visitMethodName) + \"' method found for class \") + (p.getClass().getName())))", "org.apache.calcite.rel.RelNode.getClass()", "p.getClass().getName()"], "Fixed commit": "b0ca9a5a28e282c9ee389b3eb8196b6377de932a", "Url": "https://api.github.com/repos/julienledem/calcite", "Date": "2015-11-04T23:32:48Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((arg.startsWith(\"limit:\")) && ((args.length) > 6)) { if (craftoplugin.utility.Check.isInt(arg.substring(6, arg.length()))) { limit = java.lang.Integer.parseInt(arg.substring(6, arg.length())); } }else { if ((craftoplugin.utility.Check.isInt(arg)) && (b.toString().contains(\"`playerid`\"))) { page = java.lang.Integer.parseInt(arg); }else { final int playerId = this.getPlayer(arg); if (playerId > 0) { b.append(((\"AND `playerid` = \" + playerId) + \" \")); name = arg; }else { craftoplugin.core.CraftoMessenger.sendFailed(cs, \"Fehler: Der angegebene Spieler konnte nicht gefunden werden.\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/653/buggy-version/src.craftoplugin.modules.chat.ChatCommands.java", "BodyUseAPI": ["craftoplugin.utility.Check.isInt(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.Integer.parseInt(java.lang.String)", "craftoplugin.modules.chat.ChatCommands.getPlayer(java.lang.String)", "java.lang.String.length()", "craftoplugin.utility.Check.isInt(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "9c367b555422d0e263e02c45faad3a4e54ea2fe9", "Url": "https://api.github.com/repos/Craftolution/CraftoPlugin", "Date": "2015-02-25T00:13:42Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useWeakReference) listenerHolder = new com.fisherevans.eventRouter.EventRouter.WeakListenerHolder(listener); else listenerHolder = new com.fisherevans.eventRouter.EventRouter.ListenerHolder(listener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3248/buggy-version/src.com.fisherevans.eventRouter.EventRouter.java", "BodyUseAPI": [], "Fixed commit": "ef08a059c045d6d6e93d44df6d2d950cbdfe314b", "Url": "https://api.github.com/repos/fisherevans/Event-Router", "Date": "2014-02-08T21:20:21Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.irtazasafi.ilovezappos.MainActivity.findViewById(R.id.searchQuery)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((query.getText().toString().length()) == 0) { android.widget.Toast.makeText(getApplicationContext(), \"Please enter a search query\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/9273/buggy-version/app.src.main.java.com.example.irtazasafi.ilovezappos.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d9e5ab948353243201baeac7c4e332d46f2035ae", "Url": "https://api.github.com/repos/IrtazaSafi/zappos", "Date": "2017-02-10T20:13:40Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(result.getText().toString().equals(\"\"))) { operand1 = java.lang.Double.valueOf(result.getText().toString()); operand1 = -(operand1); java.lang.String op = operand1.toString(); java.lang.String[] data = op.split(\"\\\\.\"); if (data[0].equals(\"0\")) { result.setText(data[0]); }else result.setText(operand1.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2348/buggy-version/app.src.main.java.org.altervista.paologianfelici.calculator.MainActivity.java", "BodyUseAPI": ["result.getText().toString()", "android.widget.EditText.getText()", "android.widget.EditText.setText(java.lang.String)", "android.widget.EditText.setText(java.lang.String)", "java.lang.Double.valueOf(result.getText().toString())"], "Fixed commit": "b4d486e297dc3ca55084c44b3864e454332fe05f", "Url": "https://api.github.com/repos/PaoloGi/Calculator", "Date": "2016-09-06T21:47:05Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gravity.typegraph.basic.TClass.getPackage()", "org.moeaframework.core.Variable.getParameterValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cur != (src.getPackage())) { while (cur != null) { if (cur == (src.getPackage())) { interpackageMoves++; break; } cur = cur.getParent(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5851/buggy-version/org.gravity.eval.fase2018.src.org.gravity.eval.fase2018.Experiment.java", "BodyUseAPI": ["org.gravity.typegraph.basic.TClass.getPackage()", "org.gravity.typegraph.basic.TPackage.getParent()"], "Fixed commit": "7d35646d6f20873a99946c20904a8162f7fa7b40", "Url": "https://api.github.com/repos/GRaViTY-Tool/gravity-evaluation", "Date": "2017-09-20T17:55:11Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(retrieveImagesThread.isAlive())) { initiateRetrieveImagesThread(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4342/buggy-version/Client.src.main.java.slideShow.Slideshow.java", "BodyUseAPI": [], "Fixed commit": "d68e6ecd97ab83a990a66b319481152112f16edf", "Url": "https://api.github.com/repos/tobiastry/Photoapp", "Date": "2013-12-09T16:13:56Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rounds.size()) > 0) { previous = rounds.get(((rounds.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3492/buggy-version/src.model.engine.MemoSequence.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.size()", "java.util.List<java.lang.Integer>.get(int)"], "Fixed commit": "53d6baa544ed3d02c23fc62f1e2d70ddde33d9bd", "Url": "https://api.github.com/repos/igorravasi/Memo", "Date": "2015-06-07T16:32:15Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.xailabs.server.SQL.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.next()) { id = rs.getInt(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2165/buggy-version/src.de.xailabs.server.SQL.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(int)"], "Fixed commit": "58337dc4b90da07d74c26c6ca299f7cd9d9588b0", "Url": "https://api.github.com/repos/Alexeggers/Contact-List-Server", "Date": "2015-07-30T08:00:02Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.xailabs.server.SQL.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.next()) { version = rs.getInt(\"Version\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2165/buggy-version/src.de.xailabs.server.SQL.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(java.lang.String)"], "Fixed commit": "58337dc4b90da07d74c26c6ca299f7cd9d9588b0", "Url": "https://api.github.com/repos/Alexeggers/Contact-List-Server", "Date": "2015-07-30T08:00:02Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (motorMovingUp) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5567/buggy-version/raspi.src.main.java.de.loosensimnetz.iot.raspi.motor.state.MotorStateMovingUp.java", "BodyUseAPI": [], "Fixed commit": "5dc9e6735235f056357c37877455a13c6e239058", "Url": "https://api.github.com/repos/ddic/stanzer", "Date": "2017-11-12T12:07:01Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getSparseParcelableArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.HONEYCOMB)) && (viewStates == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6367/buggy-version/ActionBarSherlock.src.com.actionbarsherlock.internal.view.menu.MenuBuilder.java", "BodyUseAPI": [], "Fixed commit": "90edf4d49e628e094c5b5b0841933964f7fe49f5", "Url": "https://api.github.com/repos/sunils34/ActionBarSherlock", "Date": "2013-01-06T20:18:03Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (status.isEnd()) { org.springframework.beans.factory.support.BeanDefinitionBuilder endBuilder = org.springframework.beans.factory.support.BeanDefinitionBuilder.genericBeanDefinition(\"org.springframework.batch.core.jsr.job.flow.support.state.EndState\"); boolean exitCodeExists = org.springframework.util.StringUtils.hasText(exitCode); endBuilder.addConstructorArgValue(status); endBuilder.addConstructorArgValue((exitCodeExists ? exitCode : status.getName())); java.lang.String endName = (status == (org.springframework.batch.core.job.flow.FlowExecutionStatus.STOPPED) ? STOP_ELE : status == (org.springframework.batch.core.job.flow.FlowExecutionStatus.FAILED) ? FAIL_ELE : END_ELE) + ((endCounter)++); endBuilder.addConstructorArgValue(endName); endBuilder.addConstructorArgValue(abandon); java.lang.String nextOnEnd = (exitCodeExists) ? null : next; endState = getStateTransitionReference(parserContext, endBuilder.getBeanDefinition(), null, nextOnEnd); next = endName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5156/buggy-version/spring-batch-core.src.main.java.org.springframework.batch.core.jsr.configuration.xml.FlowParser.java", "BodyUseAPI": ["org.springframework.batch.core.job.flow.FlowExecutionStatus.getName()", "org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue((exitCodeExists ? exitCode : status.getName()))", "org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(org.springframework.batch.core.job.flow.FlowExecutionStatus)"], "Fixed commit": "a7839686526bda522cb7d1cd45d82347a348f2ee", "Url": "https://api.github.com/repos/mminella/spring-batch", "Date": "2014-01-13T23:45:02Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (endState != null) { list.add(endState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5156/buggy-version/spring-batch-core.src.main.java.org.springframework.batch.core.jsr.configuration.xml.FlowParser.java", "BodyUseAPI": ["java.util.Collection<org.springframework.beans.factory.config.BeanDefinition>.add(org.springframework.beans.factory.config.BeanDefinition)"], "Fixed commit": "a7839686526bda522cb7d1cd45d82347a348f2ee", "Url": "https://api.github.com/repos/mminella/spring-batch", "Date": "2014-01-13T23:45:02Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (content.getConstructorType().hasFieldNames()) { for (java.lang.String label : content.getConstructorType().getFieldNames()) { env = env.__remove(label); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8694/buggy-version/src.org.eclipse.imp.pdb.facts.impl.ConstructorWithKeywordParametersFacade.java", "BodyUseAPI": ["org.eclipse.imp.pdb.facts.IConstructor.getConstructorType()", "content.getConstructorType().getFieldNames()"], "Fixed commit": "790dcb9632bd8abfbe8700449f93711b23c00cd0", "Url": "https://api.github.com/repos/impulse-org/pdb.values", "Date": "2014-05-01T19:50:13Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["constraintProvider.getClass().getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (constraintsFor == null) { processingEnv.getMessager().printMessage(javax.tools.Diagnostic.Kind.WARNING, java.lang.String.format(\"ConstraintProvider %s is not annotated with %s\", constraintProvider.getClass().getName(), com.overstock.constraint.provider.ConstraintsFor.class.getName())); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7181/buggy-version/src.main.java.com.overstock.constraint.processor.Constraints.java", "BodyUseAPI": [], "Fixed commit": "6483eb9a141e3b616758a8021ccdd3e2333402fb", "Url": "https://api.github.com/repos/overstock/annotation-constraints", "Date": "2013-02-13T19:01:57Z"},
{"Line": "=>682", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<java.util.UUID, org.apache.ignite.internal.processors.query.h2.twostep.GridMapQueryExecutor.NodeResults>.get(node.id())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (nodeRess == null) { sendError(node, req.queryRequestId(), new javax.cache.CacheException((\"No node result found for request: \" + req))); return; }else if (nodeRess.cancelled(req.queryRequestId())) { sendError(node, req.queryRequestId(), new org.apache.ignite.cache.query.QueryCancelledException()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5072/buggy-version/modules.indexing.src.main.java.org.apache.ignite.internal.processors.query.h2.twostep.GridMapQueryExecutor.java", "BodyUseAPI": ["org.apache.ignite.internal.processors.query.h2.twostep.GridMapQueryExecutor.NodeResults.cancelled(req.queryRequestId())"], "Fixed commit": "6d2422d89265366b74135d41aa3d312921133736", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2016-10-27T17:24:05Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cache) != null) cache.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4133/buggy-version/src.main.org.deidentifier.arx.metric.Metric.java", "BodyUseAPI": [], "Fixed commit": "ee51596e3df716dcf5439f4f4da72489d85a5d17", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-08-09T09:04:51Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cache) == null) { cache = new java.util.HashMap<org.deidentifier.arx.framework.lattice.Node, T>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4133/buggy-version/src.main.org.deidentifier.arx.metric.Metric.java", "BodyUseAPI": [], "Fixed commit": "ee51596e3df716dcf5439f4f4da72489d85a5d17", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-08-09T09:04:51Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.fluids.FluidStack.loadFluidStackFromNBT(is.getTagCompound())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fs.getFluid()) == (com.bioxx.tfc.api.TFCFluids.LAVA)) arraylist.add(\"Infinite Hours Remaining\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1504/buggy-version/src.Common.com.bioxx.tfc.Items.ItemBlocks.ItemOilLamp.java", "BodyUseAPI": [], "Fixed commit": "f73265ae3393c6d71ed4d52b3594a2af17b81e97", "Url": "https://api.github.com/repos/Deadrik/TFCraft", "Date": "2015-03-31T20:29:19Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.fluids.FluidStack.loadFluidStackFromNBT(is.getTagCompound())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fs.getFluid()) == (com.bioxx.tfc.api.TFCFluids.OLIVEOIL)) arraylist.add((((((fs.amount) * (com.bioxx.tfc.api.TFCOptions.oilLampFuelMult)) + \" Hours Remaining (\") + (com.bioxx.tfc.api.Util.Helper.roundNumber((((fs.amount) / 250.0F) * 100.0F), 10))) + \"%)\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1504/buggy-version/src.Common.com.bioxx.tfc.Items.ItemBlocks.ItemOilLamp.java", "BodyUseAPI": ["com.bioxx.tfc.api.Util.Helper.roundNumber((((fs.amount) / 250.0F) * 100.0F),int)", "java.util.List.add((((((fs.amount) * (com.bioxx.tfc.api.TFCOptions.oilLampFuelMult)) + \" Hours Remaining (\") + (com.bioxx.tfc.api.Util.Helper.roundNumber((((fs.amount) / 250.0F) * 100.0F), 10))) + \"%)\"))"], "Fixed commit": "f73265ae3393c6d71ed4d52b3594a2af17b81e97", "Url": "https://api.github.com/repos/Deadrik/TFCraft", "Date": "2015-03-31T20:29:19Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"/\".equalsIgnoreCase(token)) && ((this.resource) == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/269/buggy-version/modules.ballerina-core.src.main.java.org.ballerinalang.services.dispatchers.uri.parser.Node.java", "BodyUseAPI": [], "Fixed commit": "2004bfa8c18d3b47a405f800cb36e457259c36e9", "Url": "https://api.github.com/repos/shafreenAnfar/ballerina", "Date": "2017-06-23T08:02:17Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tableName == null) { persisters.put(com.savoirtech.hecate.cql3.persistence.def.DefaultPersisterFactory.key(pojoType, pojoMapping.getTableName()), persister); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8758/buggy-version/hecate-cql3.src.main.java.com.savoirtech.hecate.cql3.persistence.def.DefaultPersisterFactory.java", "BodyUseAPI": [], "Fixed commit": "bc02744cfe7245ca0016fe31a116e7fb34a8b538", "Url": "https://api.github.com/repos/savoirtech/hecate", "Date": "2014-06-11T07:18:55Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((intervalPercent) <= 100) { progressBar = ((int) (((float) (intervalPercent)) * 0.7F)); if ((progressBar) <= 7) { progressVertical = progressBar; progressHorizontal = 0; }else { progressVertical = 7; progressHorizontal = (progressBar) - 6; } }else { progressVertical = 7; progressHorizontal = 64; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7127/buggy-version/src.main.java.particlephysics.gui.GuiEmitter.java", "BodyUseAPI": [], "Fixed commit": "bec3580b94d92024289c67a1d926f139d050efb3", "Url": "https://api.github.com/repos/jakimfett/ParticlePhysics", "Date": "2014-05-28T06:07:34Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((intervalPercent) <= 113) { guiParticle = ((int) ((float) ((intervalPercent) - 100))); }else { guiParticle = 13; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7127/buggy-version/src.main.java.particlephysics.gui.GuiEmitter.java", "BodyUseAPI": [], "Fixed commit": "bec3580b94d92024289c67a1d926f139d050efb3", "Url": "https://api.github.com/repos/jakimfett/ParticlePhysics", "Date": "2014-05-28T06:07:34Z"},
{"Line": "=>630", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.aware.Aware.DEBUG) { android.util.Log.d(\"Sync\", (\"Response table check (nothing is good!): \" + response)); android.util.Log.d(\"Sync\", (\"Latest: \" + latest)); android.util.Log.d(\"Sync\", (\"Study condition: \" + study_condition)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5240/buggy-version/aware-core.src.main.java.com.aware.utils.WebserviceHelper.java", "BodyUseAPI": [], "Fixed commit": "d145db0f64a01ee1aa40f03f7b024efdc8d12dfd", "Url": "https://api.github.com/repos/vedantswain/aware-client", "Date": "2017-02-22T19:28:16Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.innovateuk.ifs.application.service.CompetitionService.getById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (competition.getCompetitionStatus().equals(CompetitionStatus.PROJECT_SETUP)) { throw new org.innovateuk.ifs.commons.error.exception.ObjectNotFoundException(); }else { throw new java.lang.IllegalStateException((\"Unexpected competition state for competition: \" + competitionId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/283/buggy-version/ifs-web-service.ifs-competition-mgt-service.src.main.java.org.innovateuk.ifs.management.controller.CompetitionManagementCompetitionController.java", "BodyUseAPI": [], "Fixed commit": "45eac1269a91842023ca4140760d397e9505098e", "Url": "https://api.github.com/repos/InnovateUKGitHub/innovation-funding-service", "Date": "2017-07-31T07:59:00Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(c.isNull(c.getColumnIndex(\"provider\")))) out.append(((((\"\\t\\t\\t\\t\" + \"<provider>\") + (c.getString(c.getColumnIndex(\"provider\")))) + \"</provider>\") + \"\\n\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/12/buggy-version/app.src.main.java.eu.faircode.backpacktrack2.GPXFileWriter.java", "BodyUseAPI": ["java.lang.StringBuilder.append(((((\"\\t\\t\\t\\t\" + \"<provider>\") + (c.getString(c.getColumnIndex(\"provider\")))) + \"</provider>\") + \"\\n\"))", "android.database.Cursor.getColumnIndex(java.lang.String)", "android.database.Cursor.getString(c.getColumnIndex(\"provider\"))"], "Fixed commit": "92904543d0535e65ae844b5565fd145b4e7c53fb", "Url": "https://api.github.com/repos/M66B/BackPackTrackII", "Date": "2015-05-18T09:43:17Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(c.isNull(c.getColumnIndex(\"provider\")))) out.append(((((\"\\t\\t\\t\\t\\t\" + \"<provider>\") + (c.getString(c.getColumnIndex(\"provider\")))) + \"</provider>\") + \"\\n\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/12/buggy-version/app.src.main.java.eu.faircode.backpacktrack2.GPXFileWriter.java", "BodyUseAPI": ["android.database.Cursor.getString(c.getColumnIndex(\"provider\"))", "java.lang.StringBuilder.append(((((\"\\t\\t\\t\\t\\t\" + \"<provider>\") + (c.getString(c.getColumnIndex(\"provider\")))) + \"</provider>\") + \"\\n\"))", "android.database.Cursor.getColumnIndex(java.lang.String)"], "Fixed commit": "92904543d0535e65ae844b5565fd145b4e7c53fb", "Url": "https://api.github.com/repos/M66B/BackPackTrackII", "Date": "2015-05-18T09:43:17Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start.equals(\"unknown\")) { trip.updateStartLocale(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3785/buggy-version/Trips.src.main.java.trips.sampleapp.loop.ms.tripssampleapp.utils.TripView.java", "BodyUseAPI": [], "Fixed commit": "0a766c0763de95c6f906ca90404d5b5439e3b810", "Url": "https://api.github.com/repos/Microsoft/Loop-Sample-Trips-Android", "Date": "2016-07-09T00:47:21Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (end.equals(\"unknown\")) { trip.updateEndLocale(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3785/buggy-version/Trips.src.main.java.trips.sampleapp.loop.ms.tripssampleapp.utils.TripView.java", "BodyUseAPI": [], "Fixed commit": "0a766c0763de95c6f906ca90404d5b5439e3b810", "Url": "https://api.github.com/repos/Microsoft/Loop-Sample-Trips-Android", "Date": "2016-07-09T00:47:21Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target.has(Trait.grappler)) { diffMod += 15; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2532/buggy-version/NightgamesMod.nightgames.skills.Struggle.java", "BodyUseAPI": [], "Fixed commit": "d4abc1905dfaf9a7e7267657c02c0bac5f1b7977", "Url": "https://api.github.com/repos/nergantre/nightgamesmod", "Date": "2016-11-16T18:39:49Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target.has(Trait.grappler)) diffMod += 15;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2532/buggy-version/NightgamesMod.nightgames.skills.Struggle.java", "BodyUseAPI": [], "Fixed commit": "d4abc1905dfaf9a7e7267657c02c0bac5f1b7977", "Url": "https://api.github.com/repos/nergantre/nightgamesmod", "Date": "2016-11-16T18:39:49Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (se.crafted.chrisb.ecoCreature.drops.aspects.BonusChanceAspect.bonus.isValid()) { se.crafted.chrisb.ecoCreature.commons.LoggerUtil.getInstance().debug((((\"applying bonus multiplier \" + (se.crafted.chrisb.ecoCreature.drops.aspects.BonusChanceAspect.bonus.getMultiplier())) + \" to \") + percentage)); percentage *= se.crafted.chrisb.ecoCreature.drops.aspects.BonusChanceAspect.bonus.getMultiplier(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1555/buggy-version/src.main.java.se.crafted.chrisb.ecoCreature.drops.aspects.BonusChanceAspect.java", "BodyUseAPI": ["se.crafted.chrisb.ecoCreature.drops.categories.Bonus.getMultiplier()", "se.crafted.chrisb.ecoCreature.commons.LoggerUtil.getInstance().debug((((\"applying bonus multiplier \" + (se.crafted.chrisb.ecoCreature.drops.aspects.BonusChanceAspect.bonus.getMultiplier())) + \" to \") + percentage))", "se.crafted.chrisb.ecoCreature.drops.categories.Bonus.getMultiplier()"], "Fixed commit": "ffe7c751e2262891628cf40502ab2a89d1b6e21f", "Url": "https://api.github.com/repos/mung3r/ecoCreature", "Date": "2015-01-10T04:06:28Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((enableCACIPrediction) == true) && ((org.societies.personalisation.CAUIPrediction.impl.CAUIPrediction.caciModelExist) == true)) { if (org.societies.personalisation.CAUIPrediction.impl.CAUIPrediction.LOG.isDebugEnabled()) org.societies.personalisation.CAUIPrediction.impl.CAUIPrediction.LOG.debug(\"CAUI predictor not able to perform prediction ... CACI model is not supporting context based prediction\"); java.util.List<org.societies.personalisation.CAUI.api.model.IUserIntentAction> clearedResults = new java.util.ArrayList<org.societies.personalisation.CAUI.api.model.IUserIntentAction>(results); for (org.societies.personalisation.CAUI.api.model.IUserIntentAction actionResult : clearedResults) { if (!(actionResult.isImplementable())) { if (org.societies.personalisation.CAUIPrediction.impl.CAUIPrediction.LOG.isDebugEnabled()) org.societies.personalisation.CAUIPrediction.impl.CAUIPrediction.LOG.debug(((\"action: \" + actionResult) + \" is not implementable and will be removed\")); results.remove(actionResult); } } return new org.springframework.scheduling.annotation.AsyncResult<java.util.List<org.societies.personalisation.CAUI.api.model.IUserIntentAction>>(results); }else if (org.societies.personalisation.CAUIPrediction.impl.CAUIPrediction.LOG.isInfoEnabled()) org.societies.personalisation.CAUIPrediction.impl.CAUIPrediction.LOG.info(\"neither caci, nor caui are able to perform prediction based on ctx updated\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1079/buggy-version/personalisation.CAUIPrediction.src.main.java.org.societies.personalisation.CAUIPrediction.impl.CAUIPrediction.java", "BodyUseAPI": [], "Fixed commit": "5195727efb1dad6d973441ca3783597c043eaf90", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2013-11-02T16:27:50Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4242/buggy-version/justin.Parser.java", "BodyUseAPI": [], "Fixed commit": "dc03f129f43918d5a51937b0a1b4b20415f52c17", "Url": "https://api.github.com/repos/simondoty/345-project", "Date": "2012-10-30T19:11:03Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4242/buggy-version/justin.Parser.java", "BodyUseAPI": [], "Fixed commit": "dc03f129f43918d5a51937b0a1b4b20415f52c17", "Url": "https://api.github.com/repos/simondoty/345-project", "Date": "2012-10-30T19:11:03Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.indoorbeacon.app.model.dbmodels.DBHandler.getDB().getAllDistancesFromMedians(com.example.indoorbeacon.app.model.position.neighbor.MacToMedian[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((data.size()) == 1) return new com.example.indoorbeacon.app.model.Coordinate((-1), (-1), (-1)); else { com.example.indoorbeacon.app.model.position.neighbor.DeviationToCoord minDeviation = getMinDevToCoord(data); data = filterRPsII(minDeviation, data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4191/buggy-version/app.src.main.java.com.example.indoorbeacon.app.model.position.neighbor.Ewknn.java", "BodyUseAPI": ["com.example.indoorbeacon.app.model.position.neighbor.Ewknn.filterRPsII(com.example.indoorbeacon.app.model.position.neighbor.DeviationToCoord,java.util.ArrayList<com.example.indoorbeacon.app.model.position.neighbor.DeviationToCoord>)", "com.example.indoorbeacon.app.model.position.neighbor.Ewknn.getMinDevToCoord(java.util.ArrayList<com.example.indoorbeacon.app.model.position.neighbor.DeviationToCoord>)"], "Fixed commit": "ad2755b924dd6be8e90ea87979ccee08f83074de", "Url": "https://api.github.com/repos/GrosserStuhl/ViibeNav", "Date": "2015-09-13T23:03:10Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((p.getX()) + stringWidth) > (java.awt.Toolkit.getDefaultToolkit().getScreenSize().getWidth())) { p = new com.prairie.eemory.ui.GeomPoint((((int) (java.awt.Toolkit.getDefaultToolkit().getScreenSize().getWidth())) - stringWidth), p.getY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/174/buggy-version/com.prairie.eemory.src.com.prairie.eemory.ui.CaptureView.java", "BodyUseAPI": ["com.prairie.eemory.ui.GeomPoint.getY()"], "Fixed commit": "d3d4a3829a649ce8ed27aa5464ad5f2591d2ff6c", "Url": "https://api.github.com/repos/LTTPP/Eemory", "Date": "2015-01-06T08:50:07Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stringWidth > (java.awt.Toolkit.getDefaultToolkit().getScreenSize().getWidth())) { stringWidth = ((int) (java.awt.Toolkit.getDefaultToolkit().getScreenSize().getWidth())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/174/buggy-version/com.prairie.eemory.src.com.prairie.eemory.ui.CaptureView.java", "BodyUseAPI": [], "Fixed commit": "d3d4a3829a649ce8ed27aa5464ad5f2591d2ff6c", "Url": "https://api.github.com/repos/LTTPP/Eemory", "Date": "2015-01-06T08:50:07Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (makeDesc.getText().toString().equals(\"\")) { android.widget.Toast.makeText(getActivity(), \"Please provide a description\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4559/buggy-version/MemoryManager2.app.src.main.java.com.example.biorobot.memorymanager2.CreateReminderFragment.java", "BodyUseAPI": [], "Fixed commit": "31a17091ba0df90b7b9dbc67bbfb886b2d44efba", "Url": "https://api.github.com/repos/biocomputer/android_studio_dev", "Date": "2015-01-17T19:07:16Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (makeTime.getText().toString().equals(\"\")) { android.widget.Toast.makeText(getActivity(), \"Please provide a time\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4559/buggy-version/MemoryManager2.app.src.main.java.com.example.biorobot.memorymanager2.CreateReminderFragment.java", "BodyUseAPI": [], "Fixed commit": "31a17091ba0df90b7b9dbc67bbfb886b2d44efba", "Url": "https://api.github.com/repos/biocomputer/android_studio_dev", "Date": "2015-01-17T19:07:16Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (makeType.getText().toString().equals(\"\")) { android.widget.Toast.makeText(getActivity(), \"Please provide a type\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4559/buggy-version/MemoryManager2.app.src.main.java.com.example.biorobot.memorymanager2.CreateReminderFragment.java", "BodyUseAPI": [], "Fixed commit": "31a17091ba0df90b7b9dbc67bbfb886b2d44efba", "Url": "https://api.github.com/repos/biocomputer/android_studio_dev", "Date": "2015-01-17T19:07:16Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (makeDate.getText().toString().equals(\"\")) { android.widget.Toast.makeText(getActivity(), \"Please provide a date\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4559/buggy-version/MemoryManager2.app.src.main.java.com.example.biorobot.memorymanager2.CreateReminderFragment.java", "BodyUseAPI": [], "Fixed commit": "31a17091ba0df90b7b9dbc67bbfb886b2d44efba", "Url": "https://api.github.com/repos/biocomputer/android_studio_dev", "Date": "2015-01-17T19:07:16Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bigw.tt.fundamentallib.adapter.ViewHolderInfoManager.getViewType(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (viewType <= 0) { throw new java.lang.RuntimeException(((\"this item \" + itemClass) + \" has not been registered\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2870/buggy-version/fundamentallib.src.main.java.com.bigw.tt.fundamentallib.adapter.BasicAdapter.java", "BodyUseAPI": [], "Fixed commit": "e0c1a2de330f781fccf7eb9a74750e3ec6527853", "Url": "https://api.github.com/repos/wangfangbing/AndroidFoundation", "Date": "2017-12-15T09:10:29Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (port == null) { port = \"8082\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2628/buggy-version/src.main.java.HelloWorld.java", "BodyUseAPI": [], "Fixed commit": "982571810326b71b43f37ad3d351a2d2647e87c6", "Url": "https://api.github.com/repos/thoughtworks/level-up", "Date": "2013-12-19T21:45:16Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wasSpace) type += att.grappa.GrappaLine.TAIL_ARROW_EDGE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3740/buggy-version/grappa.src.att.grappa.GrappaLine.java", "BodyUseAPI": [], "Fixed commit": "3ef59cf2ac38994b6aa7ecd6109926d044cc6656", "Url": "https://api.github.com/repos/hammacher/ccs", "Date": "2013-05-18T13:13:45Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(java.lang.String.valueOf(len.getText())))) { if ((java.lang.Double.parseDouble(java.lang.String.valueOf(len.getText()))) == 0) { com.example.owenslaptop.interlock_app.ViewValidity.setupOutline(len); falseCheck = 1; } }else if (android.text.TextUtils.isEmpty(java.lang.String.valueOf(len.getText()))) { com.example.owenslaptop.interlock_app.ViewValidity.setupOutline(len); falseCheck = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5577/buggy-version/app.src.main.java.com.example.owenslaptop.interlock_app.Interlock_Relaying.java", "BodyUseAPI": ["com.example.owenslaptop.interlock_app.ViewValidity.setupOutline(android.widget.EditText)", "java.lang.String.valueOf(len.getText())", "android.widget.EditText.getText()", "com.example.owenslaptop.interlock_app.ViewValidity.setupOutline(android.widget.EditText)", "android.widget.EditText.getText()", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.valueOf(len.getText())", "android.text.TextUtils.isEmpty(java.lang.String)"], "Fixed commit": "6a5161f2e7a6b3e569ab59acc496d41b02b5924a", "Url": "https://api.github.com/repos/odog99/Interlock_App", "Date": "2017-05-12T19:25:28Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(java.lang.String.valueOf(wid.getText())))) { if ((java.lang.Double.parseDouble(java.lang.String.valueOf(wid.getText()))) == 0) { com.example.owenslaptop.interlock_app.ViewValidity.setupOutline(wid); falseCheck = 1; } }else if (android.text.TextUtils.isEmpty(java.lang.String.valueOf(wid.getText()))) { com.example.owenslaptop.interlock_app.ViewValidity.setupOutline(wid); falseCheck = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5577/buggy-version/app.src.main.java.com.example.owenslaptop.interlock_app.Interlock_Relaying.java", "BodyUseAPI": ["java.lang.String.valueOf(wid.getText())", "java.lang.String.valueOf(wid.getText())", "android.widget.EditText.getText()", "java.lang.Double.parseDouble(java.lang.String)", "com.example.owenslaptop.interlock_app.ViewValidity.setupOutline(android.widget.EditText)", "android.text.TextUtils.isEmpty(java.lang.String)", "com.example.owenslaptop.interlock_app.ViewValidity.setupOutline(android.widget.EditText)", "android.widget.EditText.getText()"], "Fixed commit": "6a5161f2e7a6b3e569ab59acc496d41b02b5924a", "Url": "https://api.github.com/repos/odog99/Interlock_App", "Date": "2017-05-12T19:25:28Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (getState != null) { if (getState == 1) return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/922/buggy-version/app.src.main.java.dreamteam.focus.server.BackgroundService.java", "BodyUseAPI": [], "Fixed commit": "03c71bb0a1285daba7b075da6f2688e37954fafa", "Url": "https://api.github.com/repos/tsinghal/Focus", "Date": "2017-11-26T02:51:21Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (insertedSoFar > 350) { timeBought = insertedSoFar / 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7300/buggy-version/src.paystation.domain.RateStrategyImpl.java", "BodyUseAPI": [], "Fixed commit": "2e6dce778b3f6297519af3e921a373e553cf9d27", "Url": "https://api.github.com/repos/sblcook/PayStation", "Date": "2017-09-25T14:43:15Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(script.exists())) { script = new java.io.File(s, \"/lib/gcloud.py\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5108/buggy-version/src.main.java.com.google.appengine.gcloudapp.AbstractGcloudMojo.java", "BodyUseAPI": [], "Fixed commit": "243724eab015803a933d5deaf25a9cde4b8447c6", "Url": "https://api.github.com/repos/GoogleCloudPlatform/gcloud-maven-plugin", "Date": "2015-11-25T01:22:07Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.text.SpannableStringBuilder.getSpans(int,b.length(),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((urls.length) > 0) { fileName = b.toString().substring(b.getSpanStart(urls[0]), b.getSpanEnd(urls[0])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4246/buggy-version/hipda.src.main.java.net.jejer.hipda.ui.TextViewWithEmoticon.java", "BodyUseAPI": ["android.text.SpannableStringBuilder.getSpanStart(urls[0])", "android.text.SpannableStringBuilder.getSpanEnd(urls[0])", "b.toString().substring(b.getSpanStart(urls[0]),b.getSpanEnd(urls[0]))"], "Fixed commit": "58283f3c754c83f58d11d6c43a79fb41d3764ace", "Url": "https://api.github.com/repos/GreenSkinMonster/hipda", "Date": "2015-04-22T01:53:43Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(fileName)) { fileName = ((android.widget.TextView) (view)).getText().toString(); if (fileName.contains(\" (\")) fileName = fileName.substring(0, fileName.lastIndexOf(\" (\")).trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4246/buggy-version/hipda.src.main.java.net.jejer.hipda.ui.TextViewWithEmoticon.java", "BodyUseAPI": [], "Fixed commit": "58283f3c754c83f58d11d6c43a79fb41d3764ace", "Url": "https://api.github.com/repos/GreenSkinMonster/hipda", "Date": "2015-04-22T01:53:43Z"},
{"Line": "=>1987", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getIdentity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (id.isValid()) if (id.isPersistent()) { final com.orientechnologies.orient.core.record.ORecord connected = ((com.orientechnologies.orient.core.db.record.OIdentifiable) (fieldValue)).getRecord(); if (connected == null) return true; }else return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1874/buggy-version/tools.src.main.java.com.orientechnologies.orient.console.OConsoleDatabaseApp.java", "BodyUseAPI": ["com.orientechnologies.orient.core.id.ORID.isPersistent()"], "Fixed commit": "9e80805ba3fc169ee4ac11441e1880a6efc196e6", "Url": "https://api.github.com/repos/giastfader/orientdb", "Date": "2015-04-20T17:58:39Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.umasuo.developer.domain.service.DeveloperService.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (developer.getStatus().equals(AccountStatus.VERIFIED)) { com.umasuo.developer.application.service.VerificationApplication.LOG.debug(\"Developer has bean verified, do not need to verify again.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/864/buggy-version/src.main.java.com.umasuo.developer.application.service.VerificationApplication.java", "BodyUseAPI": [], "Fixed commit": "c5d37397625e21e6b4dbfc4b1e73461246d62925", "Url": "https://api.github.com/repos/umasuo/developer", "Date": "2017-07-06T10:39:29Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keyBytes == null) { throw new java.lang.IllegalArgumentException(\"keyBytes cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5816/buggy-version/HmacHttp.src.g.p.hmachttp.RequestSigner.java", "BodyUseAPI": [], "Fixed commit": "9f7e9ec9a35f45a5550b041cc1f3c36272aef1ba", "Url": "https://api.github.com/repos/theroadninja/HmacHttp", "Date": "2015-02-22T06:34:14Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message == null) { message = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5816/buggy-version/HmacHttp.src.g.p.hmachttp.RequestSigner.java", "BodyUseAPI": [], "Fixed commit": "9f7e9ec9a35f45a5550b041cc1f3c36272aef1ba", "Url": "https://api.github.com/repos/theroadninja/HmacHttp", "Date": "2015-02-22T06:34:14Z"},
{"Line": "=>1372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (column == 1) { if (myMap == null) { newcr = ViewManager.CustomizedRow.constructRJRow(joinKeyName, joinKeyValue, joinKeyType, new java.util.HashMap<java.lang.String, java.lang.String>(), crow.getMap(\"list_item2\")); }else { newcr = ViewManager.CustomizedRow.constructRJRow(joinKeyName, joinKeyValue, joinKeyType, myMap, crow.getMap(\"list_item2\")); } }else { if (myMap == null) { newcr = ViewManager.CustomizedRow.constructRJRow(joinKeyName, joinKeyValue, joinKeyType, crow.getMap(\"list_item1\"), new java.util.HashMap<java.lang.String, java.lang.String>()); }else { newcr = ViewManager.CustomizedRow.constructRJRow(joinKeyName, joinKeyValue, joinKeyType, crow.getMap(\"list_item1\"), myMap); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/811/buggy-version/src.java.ViewManager.ViewManager.java", "BodyUseAPI": [], "Fixed commit": "6dd190a15adec41c1e43c81e245e974f231716f9", "Url": "https://api.github.com/repos/abdelrahmanbadawy/Cassandra-VMS", "Date": "2015-10-12T15:54:06Z"},
{"Line": "=>1675", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ichi2.anki.AnkiDroidApp.deck()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (deck3 == null) { ad.setEnabled(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3661/buggy-version/src.com.ichi2.anki.StudyOptions.java", "BodyUseAPI": [], "Fixed commit": "b0da75fa7fd58217571006f0ca2ad3909365dd99", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2011-10-09T16:59:48Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toUpdateClickCount) { updateParam.inc(\"clickCount\", 1); }else { updateParam.inc(\"clickCount\", 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3743/buggy-version/src.main.java.com.echarm.articlesystem.repository.article.FindArticleByIdSpecification.java", "BodyUseAPI": [], "Fixed commit": "b9c77353a0ee29c5425a251477f58c57fbc8b3a2", "Url": "https://api.github.com/repos/sevenlol/ArticleSystemService", "Date": "2015-09-06T09:08:21Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (sortFilterPage.getSortColumn().equalsIgnoreCase(\"NAME\")) proposalComparator = ProposalsColumn.NAME.getComparator();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/176/buggy-version/portlets.proposals-portlet.src.main.java.org.xcolab.portlets.proposals.wrappers.ProposalsSortFilterBean.java", "BodyUseAPI": [], "Fixed commit": "5c62356d0fbf4866e7439fdb5967c74378d7e536", "Url": "https://api.github.com/repos/jintrone/XCoLab", "Date": "2013-10-30T14:26:53Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) this.placeInQueue = null; else if ((value <= 0) || (value >= 9999999)) { this.placeInQueue = null; }else { this.placeInQueue = value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4199/buggy-version/QueueIT.Security.src.queueit.security.KnownUserBase.java", "BodyUseAPI": [], "Fixed commit": "0fb09c42cef91d035e8dd2a4265a18746215b66d", "Url": "https://api.github.com/repos/Ticketfly/QueueIT.Security-JavaEE", "Date": "2014-06-24T09:10:24Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataRoot) != null) return dataRoot.toString(); else return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8042/buggy-version/src.main.java.com.servioticy.api.commons.datamodel.Data.java", "BodyUseAPI": [], "Fixed commit": "2a77838b6a76e5a47c0074c4790bebd7d6e1d058", "Url": "https://api.github.com/repos/servioticy/servioticy-api-commons", "Date": "2014-05-08T09:45:22Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((thread) != null) { thread.stopRun(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/166/buggy-version/src.main.java.io.github.davidg95.equestricraftplugin.race.Race.java", "BodyUseAPI": [], "Fixed commit": "e11746b4fe44fab5c18669c75d617e0786d77ae8", "Url": "https://api.github.com/repos/davidg95/EquestriCraftPlugin", "Date": "2017-08-29T14:47:34Z"},
{"Line": "=>715", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.GINGERBREAD_MR1)) { mBitmapCanvas.setBitmap(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2898/buggy-version/MPChartLib.src.main.java.com.github.mikephil.charting.renderer.LineChartRenderer.java", "BodyUseAPI": [], "Fixed commit": "fe8e712ebe5e9e4fbac6e6562a96b7efe4b541b7", "Url": "https://api.github.com/repos/dzungpv/MPAndroidChart", "Date": "2016-11-04T03:34:51Z"},
{"Line": "=>985", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.GINGERBREAD_MR1)) { mBitmapCanvas.setBitmap(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2898/buggy-version/MPChartLib.src.main.java.com.github.mikephil.charting.renderer.PieChartRenderer.java", "BodyUseAPI": [], "Fixed commit": "fe8e712ebe5e9e4fbac6e6562a96b7efe4b541b7", "Url": "https://api.github.com/repos/dzungpv/MPAndroidChart", "Date": "2016-11-04T03:34:51Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.byd.audioplayer.audio.AudioLoaderManager.getInstance().getViewType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((index < 0) || (index >= (com.byd.audioplayer.audio.AudioListActivity.TAB_INDEX_AUX))) { index = com.byd.audioplayer.audio.AudioListActivity.TAB_INDEX_LOCAL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1888/buggy-version/BYDaudio.src.com.byd.audioplayer.audio.AudioListActivity.java", "BodyUseAPI": [], "Fixed commit": "d1beb2d0437ddc2f3f747111418fc18c7f0d5185", "Url": "https://api.github.com/repos/2014-1/001", "Date": "2014-05-14T15:22:40Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Character.isDigit(c0_)) { token = scanNumberOrDimension(true); }else { token = select(TokenType.PERIOD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2367/buggy-version/src.main.java.com._2gis.cartoshka.scanner.Scanner.java", "BodyUseAPI": [], "Fixed commit": "feef31cc6d7de8aa314b9aba289bc5a7adbbc3d3", "Url": "https://api.github.com/repos/2gis/cartoshka", "Date": "2015-10-11T10:37:10Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((itemList.size()) == 0) { itemNew.setUnSalePart(itemTemp.getUnSalePart()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7673/buggy-version/com.topsun.posclient.sales.ui.src.com.topsun.posclient.sales.ui.view.SalesView.java", "BodyUseAPI": [], "Fixed commit": "8e04e34765f0b4b8a4cf3eb3ba4e22ef976c7691", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2014-01-22T18:45:36Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((params != null) && ((params.size()) > 0)) { childUri = (childUri + \"?\") + (org.apache.camel.util.URISupport.createQueryString(params)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1840/buggy-version/fabric.fabric-camel.src.main.java.org.fusesource.fabric.camel.MasterComponent.java", "BodyUseAPI": ["org.apache.camel.util.URISupport.createQueryString(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "0b77ab198d1e46b654279428cc97bb4223f11871", "Url": "https://api.github.com/repos/fusesource/fuse", "Date": "2013-01-09T03:15:22Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((params != null) && ((params.size()) > 0)) { childUri = (childUri + \"?\") + (org.apache.camel.util.URISupport.createQueryString(params)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1840/buggy-version/fabric.fabric-camel.src.main.java.org.fusesource.fabric.camel.FabricComponent.java", "BodyUseAPI": ["org.apache.camel.util.URISupport.createQueryString(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "0b77ab198d1e46b654279428cc97bb4223f11871", "Url": "https://api.github.com/repos/fusesource/fuse", "Date": "2013-01-09T03:15:22Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["interfaces.GraphicsObject.getBounds()", "interfaces.Scene.getBounds()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((getPos().y) + (obj_rct.height)) > (scn_rct.height)) && ((_velocity.y) > 0.0)) _velocity.y *= -1.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8741/buggy-version/src.physics.SimpleMovingObj.java", "BodyUseAPI": [], "Fixed commit": "a5920b897c12b9487f44a28fae399112ea40d79d", "Url": "https://api.github.com/repos/YuliMatsai/FunTest", "Date": "2013-08-01T23:46:22Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getPos().y) < 0.0) && ((_velocity.y) < 0.0)) _velocity.y *= -1.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8741/buggy-version/src.physics.SimpleMovingObj.java", "BodyUseAPI": [], "Fixed commit": "a5920b897c12b9487f44a28fae399112ea40d79d", "Url": "https://api.github.com/repos/YuliMatsai/FunTest", "Date": "2013-08-01T23:46:22Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.imolli.mywarp.warpcosts.WarpCostsManager.currency.equalsIgnoreCase(\"\")) || (de.imolli.mywarp.warpcosts.WarpCostsManager.currency.equalsIgnoreCase(\" \"))) { de.imolli.mywarp.MyWarp.getPlugin().getLogger().log(java.util.logging.Level.WARNING, \"Currencyprefix is empty! Using default currencyprefix\"); de.imolli.mywarp.warpcosts.WarpCostsManager.currency = \"Money\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3437/buggy-version/src.de.imolli.mywarp.warpcosts.WarpCostsManager.java", "BodyUseAPI": [], "Fixed commit": "d9495db4c3a625649852ce0fd9d13d78d12987cd", "Url": "https://api.github.com/repos/ImOlli/MyWarp", "Date": "2017-10-01T10:57:07Z"},
{"Line": "=>636", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((casesJsonObject.get(\"caregiver\")) != null) { item.setCaregiver(casesJsonObject.get(\"caregiver\").getAsString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6334/buggy-version/app.src.main.java.org.unicef.rapidreg.sync.SyncPresenter.java", "BodyUseAPI": ["casesJsonObject.get(\"caregiver\").getAsString()", "com.google.gson.JsonObject.get(java.lang.String)", "org.unicef.rapidreg.model.Case.setCaregiver(casesJsonObject.get(\"caregiver\").getAsString())"], "Fixed commit": "1a754bbe3f72b5d348a7a8f604b0a361f031e86c", "Url": "https://api.github.com/repos/UnicefNY/RapidReg", "Date": "2016-09-06T02:38:10Z"},
{"Line": "=>656", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((casesJsonObject.get(\"caregiver\")) != null) { item.setCaregiver(casesJsonObject.get(\"caregiver\").getAsString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6334/buggy-version/app.src.main.java.org.unicef.rapidreg.sync.SyncPresenter.java", "BodyUseAPI": ["com.google.gson.JsonObject.get(java.lang.String)", "org.unicef.rapidreg.model.Case.setCaregiver(casesJsonObject.get(\"caregiver\").getAsString())", "casesJsonObject.get(\"caregiver\").getAsString()"], "Fixed commit": "1a754bbe3f72b5d348a7a8f604b0a361f031e86c", "Url": "https://api.github.com/repos/UnicefNY/RapidReg", "Date": "2016-09-06T02:38:10Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg instanceof org.bukkit.entity.Player) { argsTypes[counter] = org.bukkit.entity.Player.class; counter++; }else if (arg instanceof org.bukkit.entity.Entity) { argsTypes[counter] = org.bukkit.entity.Entity.class; counter++; }else if (arg instanceof org.bukkit.Location) { argsTypes[counter] = org.bukkit.Location.class; counter++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3415/buggy-version/Shield.src.us.twoguys.shield.ShieldPluginManager.java", "BodyUseAPI": [], "Fixed commit": "016987009af5ec02af071893bb33d133ef340572", "Url": "https://api.github.com/repos/Malikk/Shield", "Date": "2012-05-07T06:59:10Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (randInt == 1) { this.answers.add(new javax.swing.JLabel(java.lang.Integer.toString(answer))); this.answers.add(new javax.swing.JLabel(java.lang.Integer.toString(fakeAnswer1))); this.answers.add(new javax.swing.JLabel(java.lang.Integer.toString(fakeAnswer2))); }else if (randInt == 2) { this.answers.add(new javax.swing.JLabel(java.lang.Integer.toString(fakeAnswer1))); this.answers.add(new javax.swing.JLabel(java.lang.Integer.toString(answer))); this.answers.add(new javax.swing.JLabel(java.lang.Integer.toString(fakeAnswer2))); }else if (randInt == 3) { this.answers.add(new javax.swing.JLabel(java.lang.Integer.toString(fakeAnswer2))); this.answers.add(new javax.swing.JLabel(java.lang.Integer.toString(fakeAnswer1))); this.answers.add(new javax.swing.JLabel(java.lang.Integer.toString(answer))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/510/buggy-version/Fabula.src.eu.theunitry.fabula.levels.Level3.java", "BodyUseAPI": [], "Fixed commit": "331bfc9f394a64dbfcf20a9ac8661b4ca5b5eebb", "Url": "https://api.github.com/repos/The-Unitry/fabula", "Date": "2015-12-08T10:48:13Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.justaudio.audioplayer.AudioPlayer.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (audioPlayer != null) audioPlayer.killTheAppFromBackground();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8996/buggy-version/app.src.main.java.com.justaudio.audioplayer.PlayerNotificationReceiver.java", "BodyUseAPI": ["com.justaudio.audioplayer.AudioPlayer.killTheAppFromBackground()"], "Fixed commit": "26667ca4dc7816ced1e72c470ecdfacef690dbc6", "Url": "https://api.github.com/repos/sixscorpions/justaudio_android", "Date": "2017-04-04T19:15:14Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.Uri.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (uri.getPath().contains(\"/oauth/token\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2622/buggy-version/app.src.main.java.com.mattermost.mattermost.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c0c243a84e1a097a0955dad51315ef14bc409d6c", "Url": "https://api.github.com/repos/DavidLu1997/android", "Date": "2016-05-19T15:22:50Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.Uri.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (uri.getPath().contains(\"/users/sign_in\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2622/buggy-version/app.src.main.java.com.mattermost.mattermost.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c0c243a84e1a097a0955dad51315ef14bc409d6c", "Url": "https://api.github.com/repos/DavidLu1997/android", "Date": "2016-05-19T15:22:50Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.Uri.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (uri.getPath().contains(\"/oauth/authorize\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2622/buggy-version/app.src.main.java.com.mattermost.mattermost.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c0c243a84e1a097a0955dad51315ef14bc409d6c", "Url": "https://api.github.com/repos/DavidLu1997/android", "Date": "2016-05-19T15:22:50Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.Uri.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (uri.getPath().contains(\"/api/v3/user\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2622/buggy-version/app.src.main.java.com.mattermost.mattermost.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c0c243a84e1a097a0955dad51315ef14bc409d6c", "Url": "https://api.github.com/repos/DavidLu1997/android", "Date": "2016-05-19T15:22:50Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.appwidget.AppWidgetManager.getAppWidgetInfo(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((context == null) || (widgetProviderInfo == null)) { android.widget.Toast.makeText(context, ((context.getResources().getString(R.string.invalid_provider_info)) + widgetProviderInfo), Toast.LENGTH_LONG); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8994/buggy-version/ContactsWidgetICS.src.com.gmail.yuyang226.contactswidget.ContactsWidgetProvider.java", "BodyUseAPI": ["context.getResources().getString(R.string.invalid_provider_info)", "android.content.Context.getResources()", "android.widget.Toast.makeText(android.content.Context,((context.getResources().getString(R.string.invalid_provider_info)) + widgetProviderInfo),Toast.LENGTH_LONG)"], "Fixed commit": "8f40736946c0e71cf7c9a70b4c40b7f5fd17818e", "Url": "https://api.github.com/repos/yuyang226/ContactsWidgetICS", "Date": "2012-03-06T11:47:34Z"},
{"Line": "=>1439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((button_history.size()) > (running_history.size())) button_history.pop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4873/buggy-version/CalcV7.src.Model.java", "BodyUseAPI": ["java.util.Stack<java.lang.String>.pop()"], "Fixed commit": "579ed1d096baf7515626882be7a2f4de31b98b4e", "Url": "https://api.github.com/repos/Bastani/PostfixCalc", "Date": "2016-03-30T14:14:05Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((group.getRoles()) != null) && ((group.getRoles().contains(HadoopRole.HADOOP_NAMENODE_ROLE.toString())) || (group.getRoles().contains(HadoopRole.MAPR_CLDB_ROLE.toString())))) { computeOnly = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7328/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.manager.ClusterEntityManager.java", "BodyUseAPI": [], "Fixed commit": "c530ce380d75f3991c48c9a878aad502f5343f64", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-08-08T06:02:45Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) == null) { setListShown(false); mAdapter = new com.cjuega.interviews.bq.widgets.DropboxFileAdapter(getActivity(), restoreComparator(mSortMethod), this); setListAdapter(mAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5573/buggy-version/app.src.com.cjuega.interviews.bq.fragments.FileListFragment.java", "BodyUseAPI": [], "Fixed commit": "431104cdfe0abcb966af33dba42efb72a838050b", "Url": "https://api.github.com/repos/cjuega/bq_interview", "Date": "2013-10-28T13:11:58Z"},
{"Line": "=>1190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endOk == 1) { setStopButtonFalse(xYSequencing1.searchFOVtableModel_.getRowCount(), xYSequencing1.searchFOVtableModel_.getRowCount(), \"FLIM sequence\"); }else { progressBar_.setEnd(\"FLIM sequence\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/853/buggy-version/src.com.github.dougkelly88.FLIMPlateReaderGUI.GeneralGUIComponents.HCAFLIMPluginFrame.java", "BodyUseAPI": [], "Fixed commit": "8189ba16f611c6059b401a4b6760f33a18fbdfb3", "Url": "https://api.github.com/repos/imperial-photonics/openFLIM-HCA", "Date": "2016-02-15T19:56:21Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.getTarget().equals(bot_New)) { org.adempiere.webui.grid.WBPartner t = new org.adempiere.webui.grid.WBPartner(1); t.setVisible(true); org.adempiere.webui.apps.AEnv.showWindow(t); m_C_BPartner_ID = t.getC_BPartner_ID(); return; }else if ((((((e.getTarget().equals(f_name)) || (e.getTarget().equals(f_contact))) || (e.getTarget().equals(f_value))) || (e.getTarget().equals(f_email))) || (e.getTarget().equals(f_city))) || (e.getTarget().equals(f_phone))) { showKeyboard(e.getTarget(), e.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6072/buggy-version/zkwebui.WEB-INF.src.org.compiere.pos.WQueryBPartner.java", "BodyUseAPI": ["e.getTarget().equals(org.adempiere.webui.component.Textbox)", "e.getTarget().equals(org.compiere.pos.WPosTextField)", "e.getTarget().equals(org.compiere.pos.WPosTextField)", "e.getTarget().equals(org.compiere.pos.WPosTextField)", "org.zkoss.zk.ui.event.Event.getTarget()", "org.compiere.pos.WQueryBPartner.showKeyboard(e.getTarget(),e.getName())", "e.getTarget().equals(org.compiere.pos.WPosTextField)", "org.zkoss.zk.ui.event.Event.getTarget()", "org.zkoss.zk.ui.event.Event.getName()", "org.zkoss.zk.ui.event.Event.getTarget()", "org.zkoss.zk.ui.event.Event.getTarget()", "org.zkoss.zk.ui.event.Event.getTarget()", "org.zkoss.zk.ui.event.Event.getTarget()", "org.zkoss.zk.ui.event.Event.getTarget()", "e.getTarget().equals(org.compiere.pos.WPosTextField)"], "Fixed commit": "01d6c2974aa9648e23d939f5a1e403e599e5ea03", "Url": "https://api.github.com/repos/erpcya/AD-POS-WebUI", "Date": "2015-09-08T21:18:47Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { mTitleNum.setText(((\"(\" + size) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1021/buggy-version/src.com.dreamlink.communication.ui.media.MediaAudioFragment.java", "BodyUseAPI": [], "Fixed commit": "565850afba47bacb4b36a4beae91328a1abd753d", "Url": "https://api.github.com/repos/liangPATHofei1100/AndroidCommunication", "Date": "2013-09-29T02:15:13Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((be.maximvdw.modules.ModuleVersionChange) (annotation)).version().equalsIgnoreCase(moduleVersion)) { changes = ((be.maximvdw.modules.ModuleVersionChange) (annotation)).value(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/735/buggy-version/src.main.java.be.maximvdw.modules.ModuleUploaderMojo.java", "BodyUseAPI": ["java.lang.annotation.Annotation.value()"], "Fixed commit": "f790246eac752a3356ee0402a72611ba5aa22307", "Url": "https://api.github.com/repos/Maximvdw/ModuleUploader-MavenPlugin", "Date": "2017-01-21T20:28:13Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((changes) != null) { connection.data(\"changes\", changes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/735/buggy-version/src.main.java.be.maximvdw.modules.ModuleUploaderMojo.java", "BodyUseAPI": [], "Fixed commit": "f790246eac752a3356ee0402a72611ba5aa22307", "Url": "https://api.github.com/repos/Maximvdw/ModuleUploader-MavenPlugin", "Date": "2017-01-21T20:28:13Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (annotation instanceof be.maximvdw.modules.ModuleName) { moduleName = ((be.maximvdw.modules.ModuleName) (annotation)).value(); }else if (annotation instanceof be.maximvdw.modules.ModuleVersion) { moduleVersion = ((be.maximvdw.modules.ModuleVersion) (annotation)).value(); }else if (annotation instanceof be.maximvdw.modules.ModuleDescription) { moduleDescription = ((be.maximvdw.modules.ModuleDescription) (annotation)).value(); }else if (annotation instanceof be.maximvdw.modules.ModuleAuthor) { moduleAuthor = ((be.maximvdw.modules.ModuleAuthor) (annotation)).value(); }else if (annotation instanceof be.maximvdw.modules.ModulePermalink) { permalink = ((be.maximvdw.modules.ModulePermalink) (annotation)).value(); }else if (annotation instanceof be.maximvdw.modules.ModuleScreenshots) { screenshots = ((be.maximvdw.modules.ModuleScreenshots) (annotation)).value(); }else if (annotation instanceof be.maximvdw.modules.ModuleVideos) { videos = ((be.maximvdw.modules.ModuleVideos) (annotation)).value(); }else if (annotation instanceof be.maximvdw.modules.ModuleVersionChange) { if (((be.maximvdw.modules.ModuleVersionChange) (annotation)).version().equalsIgnoreCase(moduleVersion)) { changes = ((be.maximvdw.modules.ModuleVersionChange) (annotation)).value(); } }else if (annotation instanceof be.maximvdw.modules.ModuleVersionChanges) { for (be.maximvdw.modules.ModuleVersionChange change : ((be.maximvdw.modules.ModuleVersionChanges) (annotation)).value()) { if (change.version().equalsIgnoreCase(moduleVersion)) { changes = change.value(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/735/buggy-version/src.main.java.be.maximvdw.modules.ModuleUploaderMojo.java", "BodyUseAPI": [], "Fixed commit": "f790246eac752a3356ee0402a72611ba5aa22307", "Url": "https://api.github.com/repos/Maximvdw/ModuleUploader-MavenPlugin", "Date": "2017-01-21T20:28:13Z"},
{"Line": "=>1498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"finalize\".equals(method.getName()))) { method.setAccessible(true); methods.add(method); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/311/buggy-version/powermock-reflect.src.main.java.org.powermock.reflect.internal.WhiteboxImpl.java", "BodyUseAPI": ["java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)", "java.lang.reflect.Method.setAccessible(boolean)"], "Fixed commit": "2887547e2f61c3d27b717c137d813a94ff897b28", "Url": "https://api.github.com/repos/powermock/powermock", "Date": "2017-10-21T20:33:57Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { dialog = new android.app.DatePickerDialog(getActivity(), R.style.MyDatePickerDialogTheme, this, year, month, day); }else { dialog = new android.app.DatePickerDialog(getActivity(), this, year, month, day); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/659/buggy-version/app.src.main.java.ru.tulupov.alex.pluggedin.fragments.DatePickerCalendarFragment.java", "BodyUseAPI": [], "Fixed commit": "c1647d069b4c854bd908d3c653fe78097ae3b3f9", "Url": "https://api.github.com/repos/Algresh/PluggedinAndroid", "Date": "2016-08-22T10:25:05Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((cb.getRow()) % 2) != 0) { possibleSquares.add(placeHolderBtn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3144/buggy-version/checkers.src.CheckerGUI.java", "BodyUseAPI": [], "Fixed commit": "a6c2174bbd7498ecd2cc1e0000ab2b658298aff1", "Url": "https://api.github.com/repos/BubbleNet/tasty-potatoes", "Date": "2013-12-05T10:45:58Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((cb.getRow()) % 2) == 0) { possibleSquares.add(placeHolderBtn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3144/buggy-version/checkers.src.CheckerGUI.java", "BodyUseAPI": [], "Fixed commit": "a6c2174bbd7498ecd2cc1e0000ab2b658298aff1", "Url": "https://api.github.com/repos/BubbleNet/tasty-potatoes", "Date": "2013-12-05T10:45:58Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smartaleq.bukkit.dwarfcraft.events.Effect.getOutput(com.smartaleq.bukkit.dwarfcraft.events.DCPlayer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((output.getAmount()) > 0) items.add(output);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/899/buggy-version/com.smartaleq.bukkit.dwarfcraft.events.DCEntityListener.java", "BodyUseAPI": ["java.util.List<org.bukkit.inventory.ItemStack>.add(org.bukkit.inventory.ItemStack)"], "Fixed commit": "26b9a527cdfd8a37dc7f453eb5399431f069bc87", "Url": "https://api.github.com/repos/LexManos/DwarfCraft", "Date": "2011-06-03T01:52:58Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (os.contains(\"win\")) { command += \".exe\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3878/buggy-version/plugins.fr.obeo.dsl.arduino.build.src.fr.obeo.dsl.arduino.build.ArduinoBuilder.java", "BodyUseAPI": [], "Fixed commit": "36c6847aea7960799353d9df74ce4e3d3416fb5a", "Url": "https://api.github.com/repos/mbats/arduino", "Date": "2014-02-19T09:31:11Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["BufferMementoCaretaker.getLastState()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (mem == null) { return 0; }else { return mem.getCursorPos(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3173/buggy-version/AlphaTeam.src.BufferContext.java", "BodyUseAPI": ["BufferMemento.getCursorPos()"], "Fixed commit": "6535a60d7a2ad97cb8bec752eb81cf689a3b8be2", "Url": "https://api.github.com/repos/mjhickson/alpha-team", "Date": "2012-10-23T23:53:52Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.erpdevelopment.vbvm.FileHelpers.filePathForType(android.content.Context,com.erpdevelopment.vbvm.model.Lesson,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (path == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6020/buggy-version/app.src.main.java.com.erpdevelopment.vbvm.FileHelpers.java", "BodyUseAPI": [], "Fixed commit": "bd14a010e1afb3ecc853c0010263475054486bc3", "Url": "https://api.github.com/repos/VBVMI/VerseByVerse-Android", "Date": "2017-10-06T11:18:28Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (expression != null) { return new com.cronutils.parser.field.On(constraints, mapToIntegerFieldValue(expression), specialChar, nth); }else { return new com.cronutils.parser.field.On(constraints, time, specialChar, nth); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2845/buggy-version/src.main.java.com.cronutils.parser.field.FieldParser.java", "BodyUseAPI": ["com.cronutils.parser.field.FieldParser.mapToIntegerFieldValue(java.lang.String)"], "Fixed commit": "02f23bb3469856154641dac64c6b90013432e085", "Url": "https://api.github.com/repos/jmrozanec/cron-utils", "Date": "2015-06-16T02:50:22Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.ualberta.med.biobank.common.wrappers.PatientWrapper.getPnumber()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (pnumber == null) { pnumber = edu.ualberta.med.biobank.common.util.StringUtil.EMPTY_STRING; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4721/buggy-version/eclipse_ws.biobank2.src.edu.ualberta.med.biobank.forms.PatientEntryForm.java", "BodyUseAPI": [], "Fixed commit": "ed6fc89aecc07bfb4b1797c32b55c5af70197b25", "Url": "https://api.github.com/repos/cbsrbiobank/biobank", "Date": "2013-02-11T18:19:56Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.max(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (childExport > 0) out.export += childExport;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/9244/buggy-version/src.BinaryTreeMaxPath.java", "BodyUseAPI": [], "Fixed commit": "80a6af715f1d3a02da839c760da06b68dc1c2871", "Url": "https://api.github.com/repos/ghost2004/Leetcode", "Date": "2012-11-17T07:55:18Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(RobotMap.leftLimitSwitch.get())) && (!(RobotMap.rightLimitSwitch.get()))) || (Robot.shooterWheelSubsystem.getStatus())) { RobotMap.intake.set((-1)); intakeState = \"In\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2465/buggy-version/src.org.usfirst.frc.team1923.robot.subsystems.IntakeRollerSubsystem.java", "BodyUseAPI": [], "Fixed commit": "8280742fbac915436df71785f2dae22f78632d08", "Url": "https://api.github.com/repos/Team1923/Stronghold_2016", "Date": "2016-02-26T00:44:28Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((calculator == null) && (location != null)) { calculator = new com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator(new com.luckycatlabs.sunrisesunset.dto.Location(location.getLatitude(), location.getLongitude()), java.util.TimeZone.getDefault().getID()); settings.set(Key.LAST_LATITUDE, location.getLatitude()); settings.set(Key.LAST_LONGITUDE, location.getLongitude()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/281/buggy-version/src.com.alimuzaffar.sunalarm.activity.ShowStatusActivity.java", "BodyUseAPI": ["android.location.Location.getLongitude()", "com.alimuzaffar.sunalarm.util.AppSettings.set(Key.LAST_LATITUDE,location.getLatitude())", "android.location.Location.getLatitude()", "android.location.Location.getLongitude()", "com.alimuzaffar.sunalarm.util.AppSettings.set(Key.LAST_LONGITUDE,location.getLongitude())", "android.location.Location.getLatitude()"], "Fixed commit": "2f3b5fb0555a6d331e209133976e9315d19cc305", "Url": "https://api.github.com/repos/atgheb/sun-status-app", "Date": "2012-08-05T10:42:15Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temp < 200) { gray[((i * (width)) + j)] = 0; }else { gray[((i * (width)) + j)] = 255; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5977/buggy-version/Src.pre.src.main.java.com.pre.jason.ImageShapeContext.java", "BodyUseAPI": [], "Fixed commit": "56dcd37fd0a330815e2320754fa4342172696805", "Url": "https://api.github.com/repos/Mugv/SmartDraw", "Date": "2016-06-22T13:37:02Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value == (entry.getKey())) { sb = new java.lang.StringBuilder(((entry.getValue()) + \"|\")); break; }else if ((value & (entry.getKey())) == (entry.getKey())) { sb.append(entry.getValue()).append('|'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8047/buggy-version/jadx-core.src.main.java.jadx.core.xmlgen.ManifestAttributes.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.Long, java.lang.String>.getKey()", "java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(java.lang.String)", "java.util.Map.Entry<java.lang.Long, java.lang.String>.getValue()", "java.util.Map.Entry<java.lang.Long, java.lang.String>.getKey()", "java.util.Map.Entry<java.lang.Long, java.lang.String>.getValue()"], "Fixed commit": "ec0e9bcde4e959cf351c3fe8b39b463ed0ca29a8", "Url": "https://api.github.com/repos/bjzhou/jadx", "Date": "2016-12-04T03:45:45Z"},
{"Line": "=>1155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.toload.main.hd.keyboard.LIMEKeyboardBaseView.DEBUG) android.util.Log.i(net.toload.main.hd.keyboard.LIMEKeyboardBaseView.TAG, \"dismissKeyPreview() \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1147/buggy-version/LimeStudio.app.src.main.java.net.toload.main.hd.keyboard.LIMEKeyboardBaseView.java", "BodyUseAPI": [], "Fixed commit": "5b58cfc5e90373270451058426b0c167f0fb0fbd", "Url": "https://api.github.com/repos/lime-ime/limeime", "Date": "2016-07-18T16:47:52Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (result != null) { android.util.Log.i(\"Response\", result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6125/buggy-version/app.src.main.java.de.ifgi.igiapp.igi_app.MongoDB.DatabaseHandler.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,java.lang.String)"], "Fixed commit": "e0fd33179ce303436c3c52e26d34954498a3681d", "Url": "https://api.github.com/repos/froehr/IGI-app", "Date": "2014-12-01T19:09:32Z"},
{"Line": "=>1208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ref.WeakReference<com.frostwire.android.gui.fragments.SearchFragment>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((searchFragment.fallbackBannerView.getVisibility()) == (android.view.View.GONE)) { searchFragment.loadFallbackBanner(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2673/buggy-version/android.src.com.frostwire.android.gui.fragments.SearchFragment.java", "BodyUseAPI": ["com.frostwire.android.gui.fragments.SearchFragment.loadFallbackBanner()"], "Fixed commit": "18e605d4ee74d57fabea1d02cb885511616ed642", "Url": "https://api.github.com/repos/gubatron/frostwire", "Date": "2017-08-25T00:40:33Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (rawData != null) { response = validateTimeOrigin(response, rawData.timestamp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5743/buggy-version/app.src.main.java.com.google.android.vending.licensing.MyketServerManagedPolicy.java", "BodyUseAPI": ["com.google.android.vending.licensing.MyketServerManagedPolicy.validateTimeOrigin(int,rawData.timestamp)"], "Fixed commit": "d1afd3724d85fdf2d722ad63d0d75e075961a0ef", "Url": "https://api.github.com/repos/komeilkamal/Myket-Licensing-Sample", "Date": "2016-04-09T11:13:07Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pfssDatas.containsKey(url)) { pfssDatas.remove(url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/9214/buggy-version/src.org.helioviewer.jhv.plugins.pfssplugin.data.PfssCache.java", "BodyUseAPI": ["java.util.LinkedHashMap<java.lang.String, org.helioviewer.jhv.plugins.pfssplugin.data.PfssFitsFile>.remove(java.lang.String)"], "Fixed commit": "265056f63210ec6f507067f1267d173af5a6a189", "Url": "https://api.github.com/repos/Helioviewer-Project/JHelioviewer", "Date": "2015-01-26T12:22:10Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((lower[k]) < (upper[k])) this.addDistribution(new org.apache.commons.math3.distribution.UniformRealDistribution(lower[k], upper[k])); else this.addDistribution(new generation.distributions.CollapsedRealDistribution(lower[k]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1539/buggy-version/src.generation.data.HyperrectangleUniformGenerator.java", "BodyUseAPI": [], "Fixed commit": "14c7a30488053685ffd006f0e7c216038ca6b190", "Url": "https://api.github.com/repos/Roland-Winkler/EDMOAL", "Date": "2013-05-05T16:12:13Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (hasName) name = dis.readUTF();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5084/buggy-version/src.ru.iammaxim.NetLib.Client.java", "BodyUseAPI": [], "Fixed commit": "64099ddc484f17e9421310a7ba72884077577ed8", "Url": "https://api.github.com/repos/IamMaxim/InDaCellsServer", "Date": "2017-10-27T18:54:30Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((person.getAdminStatus()) == 1) { mainView.loginOk(loginView.getUserId()); loginView.resetError(); loginView.clearfields(); mainView.showAdminMenu(); mainView.showAdminHeader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4566/buggy-version/Kantine_v2.src.gwt.client.logic.Controller.java", "BodyUseAPI": [], "Fixed commit": "07d494b337b2fc2cd7182693038f10152bebecb1", "Url": "https://api.github.com/repos/magnuskr1234/KantineProjekt", "Date": "2016-03-22T13:55:49Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (arcOld == null) arc = null; else { for (edu.duke.cs.osprey.dof.deeper.ResBBState rbs : arcOld) arc.add(new edu.duke.cs.osprey.dof.deeper.ResBBState(rbs)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6659/buggy-version/src.edu.duke.cs.osprey.dof.deeper.perts.PartialStructureSwitch.java", "BodyUseAPI": [], "Fixed commit": "0a375717b27fe5a07b211179973317e84f55698c", "Url": "https://api.github.com/repos/donaldlab/OSPREY3", "Date": "2017-02-27T17:11:23Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((textSubFields[4].getText()) != \"\") { int barcodeCopies = java.lang.Integer.valueOf(textSubFields[4].getText()); java.lang.String barcode = textSubFields[1].getText(); print(barcode, barcodeCopies); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2809/buggy-version/src.garage.Operator.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "java.lang.Integer.valueOf(java.lang.String)", "javax.swing.JTextField.getText()"], "Fixed commit": "5026954cc5773329625f9bd83a4b6ebea21231f7", "Url": "https://api.github.com/repos/voidcase/TerrorGarage", "Date": "2014-05-16T19:17:45Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((textFields[4].getText()) != \"\") { int barcodeCopies = java.lang.Integer.valueOf(textFields[4].getText()); java.lang.String barcode = textFields[1].getText(); print(barcode, barcodeCopies); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2809/buggy-version/src.garage.Operator.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "java.lang.Integer.valueOf(java.lang.String)", "javax.swing.JTextField.getText()"], "Fixed commit": "5026954cc5773329625f9bd83a4b6ebea21231f7", "Url": "https://api.github.com/repos/voidcase/TerrorGarage", "Date": "2014-05-16T19:17:45Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMap) == null) { setUpMapIfNeeded(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/309/buggy-version/app.src.main.java.jog.my.memory.Excursions.MapDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "5016de9f1ae683cf6a712b70841d14d8d316194c", "Url": "https://api.github.com/repos/DSCore/CS65Project", "Date": "2015-03-09T05:48:01Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, Navigation.Link>.get(initBanner.getActionUrl())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (link == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2242/buggy-version/src.main.java.com.pratilipi.data.util.InitDataUtil.java", "BodyUseAPI": [], "Fixed commit": "7ebc3543f89e79667f7f7fb32b79a99f40429a05", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-09-10T11:09:44Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((errorFlowReply == null) && (this.errorOnTimeout)) { if (object instanceof org.springframework.messaging.Message) { throw new org.springframework.integration.MessageTimeoutException(((org.springframework.messaging.Message<?>) (object)), \"No reply received from error channel within timeout\"); }else { throw new org.springframework.integration.MessageTimeoutException(\"No reply received from error channel within timeout\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2494/buggy-version/spring-integration-core.src.main.java.org.springframework.integration.gateway.MessagingGatewaySupport.java", "BodyUseAPI": [], "Fixed commit": "89709b2eb12680d855651ff3e2733bf08084b931", "Url": "https://api.github.com/repos/garyrussell/spring-integration", "Date": "2015-07-24T20:25:19Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.createNewFile())) { throw new java.lang.RuntimeException((\"Could not create file: \" + (file.getAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/9037/buggy-version/galen-core.src.main.java.com.galenframework.actions.GalenActionConfig.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()"], "Fixed commit": "63a26b3c4847f6c9cfd6efbc4bdc968ef67b8a69", "Url": "https://api.github.com/repos/galenframework/galen", "Date": "2015-11-08T15:48:41Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.galenframework.utils.GalenUtils.findFileOrResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (stream == null) { stream = com.galenframework.utils.GalenUtils.findFileOrResourceAsStream(\"config\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/9037/buggy-version/galen-core.src.main.java.com.galenframework.config.GalenConfig.java", "BodyUseAPI": [], "Fixed commit": "63a26b3c4847f6c9cfd6efbc4bdc968ef67b8a69", "Url": "https://api.github.com/repos/galenframework/galen", "Date": "2015-11-08T15:48:41Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pieceType.equals(\"I\")) g.setColor(new java.awt.Color(255, 0, 0)); else if (pieceType.equals(\"T\")) g.setColor(new java.awt.Color(80, 80, 80)); else if (pieceType.equals(\"O\")) g.setColor(new java.awt.Color(148, 228, 255)); else if (pieceType.equals(\"L\")) g.setColor(new java.awt.Color(255, 255, 0)); else if (pieceType.equals(\"J\")) g.setColor(new java.awt.Color(255, 0, 255)); else if (pieceType.equals(\"S\")) g.setColor(new java.awt.Color(0, 0, 255)); else if (pieceType.equals(\"Z\")) g.setColor(new java.awt.Color(0, 255, 0)); else g.setColor(new java.awt.Color(255, 255, 255));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/858/buggy-version/src.program5.Piece.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "bddcdcb368469e10e440e2bec17a7ca5356df275", "Url": "https://api.github.com/repos/jtapia21/program5", "Date": "2016-04-29T04:51:08Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pieceType.equals(\"O\")) { if ((((((X) + x) < 0) || (((X) + x) >= ((Table.COLUMN) - 1))) || (((Y) + y) < 1)) || (((Y) + y) >= (Table.ROW))) { return false; } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/858/buggy-version/src.program5.Duo.java", "BodyUseAPI": [], "Fixed commit": "bddcdcb368469e10e440e2bec17a7ca5356df275", "Url": "https://api.github.com/repos/jtapia21/program5", "Date": "2016-04-29T04:51:08Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (convertableLength == 0) return java.lang.Double.NEGATIVE_INFINITY;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4274/buggy-version/src.argbeast.operators.AddRemoveRecombination.java", "BodyUseAPI": [], "Fixed commit": "7e12b0d60106dd7e8cee32ccd739fb6dc29a9551", "Url": "https://api.github.com/repos/CompEvol/ARGBEAST", "Date": "2014-05-05T06:06:36Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (examples != null) { for (com.home.templator.Example example : examples.getExampleList()) { stringBuilder.append(((\"<div class='exampleParam'>\" + (example.getValue())) + \"</div>\")); for (int i = examples.countNumberOfRepetings(); i < ((examples.countNumberOfRepetings()) * 2); i++) { steps.add(examples.getSteps().get(i)); stringBuilder.append(stepsToHtml(steps)); steps.clear(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5369/buggy-version/JBehaveReporter.src.main.java.com.home.templator.HtmlTemplator.java", "BodyUseAPI": ["com.home.templator.Examples.countNumberOfRepetings()", "com.home.templator.Examples.getExampleList()", "examples.getSteps().get(int)", "com.home.templator.Examples.getSteps()", "com.home.templator.Examples.countNumberOfRepetings()", "java.util.List<com.home.templator.Step>.add(examples.getSteps().get(i))"], "Fixed commit": "411afc2a1fad2a528d7590ecdddc919ef2136fd4", "Url": "https://api.github.com/repos/SergeyPirogov/JBehaveReporter", "Date": "2014-06-18T14:02:10Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.vrapper.platform.TextContent.getText(int,secondLnInfo.getLength())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((secondLine.length()) == 0) glue = \"\"; else if ((modelContent.getText(bolOffset, 1).charAt(0)) == ')') glue = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5166/buggy-version/net.sourceforge.vrapper.core.src.net.sourceforge.vrapper.vim.commands.JoinLinesCommand.java", "BodyUseAPI": [], "Fixed commit": "50d9c28c5a5cfefa47e8fc167bcee994a4fefaf0", "Url": "https://api.github.com/repos/vrapper/vrapper", "Date": "2012-12-30T03:37:04Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lower == upper) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3360/buggy-version/src.org.openstreetmap.josm.plugins.contourmerge.ContourMergeModel.java", "BodyUseAPI": [], "Fixed commit": "160bfa61e65f7571f92df6698cc43a90a5c480c1", "Url": "https://api.github.com/repos/Gubaer/josm-contourmerge-plugin", "Date": "2013-06-08T20:40:56Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((l.get(i).indexOf(\".0\")) == (-1)) arr[i] = l.get(i); else arr[i] = l.get(i).substring(0, l.get(i).indexOf(\".0\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5591/buggy-version/main.ConcurrentProgram.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)", "java.lang.String.substring(int,int)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "4d0d5bfa4bf8f65c00835604309f8ce2e1febe20", "Url": "https://api.github.com/repos/PaddyK/StudyWorks", "Date": "2014-06-16T07:17:41Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reportDetail) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7770/buggy-version/app.src.main.java.org.cm.podd.report.activity.ReportViewActivity.java", "BodyUseAPI": [], "Fixed commit": "32559842e6312116ab46c33500893839516de0e0", "Url": "https://api.github.com/repos/openpodd/podd-android", "Date": "2017-04-27T12:16:53Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((com.fixus.towerdefense.model.SuperimposeJME) (app)) != null) { ((com.fixus.towerdefense.model.SuperimposeJME) (app)).toogleObject(show); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6869/buggy-version/src.com.fixus.towerdefense.RadarActivity.java", "BodyUseAPI": ["com.fixus.towerdefense.RadarActivity.1.toogleObject(boolean)"], "Fixed commit": "26330b07989ec6e3880c552a159eb0a67ff4d0e6", "Url": "https://api.github.com/repos/dpacholczyk/pjatk-mgr", "Date": "2015-05-23T19:00:52Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((base.getCard().getRangePoints()) > (base.getCard().getMovementPoints())) && (!(c.isCardThumbnailEmpty()))) && ((base.getXDistanceWith(c)) <= (base.getCard().getRangePoints()))) && ((base.getYDistanceWith(c)) <= (base.getCard().getRangePoints()))) { if (c.isPlayersCastle()) { c.setCaseNonActionable(); }else if (c.isAdversaryCastle()) { c.setCaseActionable(R.color.colorBlue); }else if (c.getCard().isAdversary()) { c.setCaseActionable(R.color.colorBlue); }else { c.setCaseNonActionable(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6351/buggy-version/PTS3G10.app.src.main.java.ked.pts3g10.Gameplay.PlayerAction.java", "BodyUseAPI": ["ked.pts3g10.Interface.Case.isAdversaryCastle()", "ked.pts3g10.Interface.Case.getCard()", "c.getCard().isAdversary()", "ked.pts3g10.Interface.Case.setCaseNonActionable()", "ked.pts3g10.Interface.Case.isPlayersCastle()", "ked.pts3g10.Interface.Case.setCaseActionable(R.color.colorBlue)", "ked.pts3g10.Interface.Case.setCaseNonActionable()", "ked.pts3g10.Interface.Case.setCaseActionable(R.color.colorBlue)"], "Fixed commit": "81b32032ceb71f93a4471eadca204930517c3668", "Url": "https://api.github.com/repos/Ked57/PTS3G10", "Date": "2017-12-23T17:37:18Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["e.getInventory().getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((is != null) && ((is.getType()) == (org.bukkit.Material.INK_SACK))) { changeColorRecipe = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4909/buggy-version/src.main.java.de.robotricker.transportpipes.pipeutils.CraftUtils.java", "BodyUseAPI": [], "Fixed commit": "d28d9608d09910c278ac69936d19b405f30f8dce", "Url": "https://api.github.com/repos/RoboTricker/Transport-Pipes", "Date": "2017-05-21T12:31:35Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (session.getLoading().getValue()) { session.setLoading(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4140/buggy-version/app.src.main.java.org.mozilla.focus.session.SessionCallbackProxy.java", "BodyUseAPI": ["org.mozilla.focus.session.Session.setLoading(boolean)"], "Fixed commit": "e7684cebe0d29757c7d971021fceabf3143f2846", "Url": "https://api.github.com/repos/riyaz/focus-android", "Date": "2017-10-21T05:29:14Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (items != null) { for (T item : items) this.add(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/572/buggy-version/src.main.java.com.javalinq.implementations.QSet.java", "BodyUseAPI": [], "Fixed commit": "f98d711be0f234ae262603896403dccdc6140a81", "Url": "https://api.github.com/repos/sircodesalotOfTheRound/javaLinq", "Date": "2014-09-08T22:23:00Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ItemFood.cooldown) > 0) { (ItemFood.cooldown)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5971/buggy-version/betaexpansion.BEUpdate.java", "BodyUseAPI": [], "Fixed commit": "f8561861922f3aacd5cd2457e155cf2768827878", "Url": "https://api.github.com/repos/betaexpansion/betaexpansion", "Date": "2016-03-18T21:29:20Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tabbedPane.getSelectedIndex()) == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/637/buggy-version/src.messenger.ui.MessengerApp.java", "BodyUseAPI": [], "Fixed commit": "e1771fc67798d6f24cb0870d7d286cda523c7ad2", "Url": "https://api.github.com/repos/theKidOfArcrania/StudentMessengerApp", "Date": "2015-10-28T23:40:28Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lutsIndex < 0) return filename;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1127/buggy-version/core.data.src.main.java.imagej.data.lut.DefaultLutService.java", "BodyUseAPI": [], "Fixed commit": "6acba0c208d97195f15e970665bc2db85e1e98ce", "Url": "https://api.github.com/repos/imagej/imagej", "Date": "2013-01-11T22:50:08Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (calendar.getTime().before(minDate)) { android.util.Log.d(K9.LOG_TAG, (\"Selected date was before min date -- new date: \" + minDate)); currentRemindMe.setRemindTime(minDate); }else currentRemindMe.setRemindTime(calendar.getTime());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5949/buggy-version/k9mail.src.main.java.com.fsck.k9.activity.RemindMeList.java", "BodyUseAPI": ["com.fsck.k9.mail.RemindMe.setRemindTime(java.util.Date)", "com.fsck.k9.mail.RemindMe.setRemindTime(java.util.Date)", "java.util.Calendar.getTime()", "android.util.Log.d(K9.LOG_TAG,java.lang.String)"], "Fixed commit": "458c004948597a62ad4ba55cea2f7080fbf8bea4", "Url": "https://api.github.com/repos/FAU-Inf2/SMile", "Date": "2015-07-25T15:45:11Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isInterrupted()) { this.pushManager.enqueuePushNotification(notification); }else if (notification != null) { final com.relayrides.pushy.apns.SendableApnsPushNotification<T> sendableNotification = new com.relayrides.pushy.apns.SendableApnsPushNotification<T>(notification, ((this.sequenceNumber)++)); final java.lang.String threadName = this.getName(); if (log.isTraceEnabled()) { log.trace(java.lang.String.format(\"%s sending %s\", threadName, sendableNotification)); } this.sentNotificationBuffer.addSentNotification(sendableNotification); this.channel.write(sendableNotification).addListener(new io.netty.util.concurrent.GenericFutureListener<io.netty.channel.ChannelFuture>() { public void operationComplete(final io.netty.channel.ChannelFuture future) { if ((future.cause()) != null) { if (log.isTraceEnabled()) { log.trace(java.lang.String.format(\"%s failed to write notification %s\", threadName, sendableNotification), future.cause()); } reconnect(); final T failedNotification = sentNotificationBuffer.getAndRemoveNotificationWithSequenceNumber(sendableNotification.getSequenceNumber()); if (failedNotification != null) { pushManager.enqueuePushNotification(failedNotification); } }else { if (log.isTraceEnabled()) { log.trace(java.lang.String.format(\"%s successfully wrote notification %d\", threadName, sendableNotification.getSequenceNumber())); } } } }); if ((++(this.writesSinceLastFlush)) >= (com.relayrides.pushy.apns.ApnsClientThread.BATCH_SIZE)) { this.channel.flush(); this.writesSinceLastFlush = 0; } }else { if ((this.writesSinceLastFlush) > 0) { this.channel.flush(); this.writesSinceLastFlush = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6425/buggy-version/src.main.java.com.relayrides.pushy.apns.ApnsClientThread.java", "BodyUseAPI": [], "Fixed commit": "4a2b5dae1f2cd10cab09a1fca2ae9bf5d969b03d", "Url": "https://api.github.com/repos/relayrides/pushy", "Date": "2013-09-21T16:59:27Z"},
{"Line": "=>1152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((configuration) == null) { final org.jivesoftware.openfire.spi.ConnectionManagerImpl connectionManager = ((org.jivesoftware.openfire.spi.ConnectionManagerImpl) (org.jivesoftware.openfire.http.XMPPServer.getInstance().getConnectionManager())); configuration = connectionManager.getListener(connectionType, true).generateConnectionConfiguration(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4217/buggy-version/src.java.org.jivesoftware.openfire.http.HttpSession.java", "BodyUseAPI": [], "Fixed commit": "b0a0d6d4b29e3875ac2f889c01af6b166181aaa0", "Url": "https://api.github.com/repos/GregDThomas/Openfire", "Date": "2017-01-12T17:54:25Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSuccess) { mSession.prolong(); mLogger.debug(\"Forge exchange returned with code {}\", result.getCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3339/buggy-version/app.src.main.java.com.bolyartech.forge.skeleton.dagger.basic.app.SessionResidentComponent.java", "BodyUseAPI": [], "Fixed commit": "7c3f84d454f87566e318af76d6b909677c87df07", "Url": "https://api.github.com/repos/ogrebgr/forge-android-skeleton-basic", "Date": "2016-03-07T11:50:08Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (saveDebugInfo) { ffmpegOutputMsg = new java.io.File(((outputFilePath) + \".txt\")); processBuilder.redirectOutput(ffmpegOutputMsg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8417/buggy-version/src.com.hamoid.VideoExport.java", "BodyUseAPI": [], "Fixed commit": "bca5205cdf5901f4a0af9753a934875d5c18b01c", "Url": "https://api.github.com/repos/hamoid/video_export_processing", "Date": "2016-05-04T15:38:50Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.anddev.andengine.util.modifier.IModifier<?>.getDuration()", "org.anddev.andengine.util.modifier.IModifier<?>.getDuration()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (durationA < durationB) { return 1; }else if (durationA > durationB) { return -1; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5333/buggy-version/src.org.anddev.andengine.util.modifier.IModifier.java", "BodyUseAPI": [], "Fixed commit": "d4c20ffab28c61e5fc43c0ab136216af6e4bf60e", "Url": "https://api.github.com/repos/lopsided98/AndEngine", "Date": "2011-08-07T22:53:44Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((values.length) > 0) { buffer.append(values[0]); for (int i = 1; i < (values.length); i++) { java.lang.String value = values[i]; buffer.append(divider); buffer.append((value == null ? forNull : value)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2694/buggy-version/app.src.main.java.co.yishun.lighting.util.Util.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "bef682c41e59a8ab8d50c7c44e1fa59c29a8ae73", "Url": "https://api.github.com/repos/noproxy/Lighting", "Date": "2016-03-29T01:29:46Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (range.getKey().contains(localTime)) { return range.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/9154/buggy-version/src.main.java.com.challenge.toll.refactored.TimeRangeFeeCalculator.java", "BodyUseAPI": ["java.util.Map.Entry<com.google.common.collect.Range<java.time.LocalTime>, java.lang.Integer>.getValue()"], "Fixed commit": "3016f0560a8a93e2637b3492e27aca3c2a866836", "Url": "https://api.github.com/repos/djoulian/toll-calculator", "Date": "2016-10-21T14:44:54Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((status.getExtendedMediaEntities().length) > 0) { for (twitter4j.MediaEntity media : status.getExtendedMediaEntities()) { imageUrls.add(media.getMediaURL()); } }else { for (twitter4j.MediaEntity media : status.getMediaEntities()) { imageUrls.add(media.getMediaURL()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4658/buggy-version/Justaway.src.main.java.info.justaway.util.StatusUtil.java", "BodyUseAPI": ["twitter4j.Status.getExtendedMediaEntities()", "twitter4j.Status.getMediaEntities()"], "Fixed commit": "d5f2db1243556a85d0e54f902baf1d4e3e65d3e0", "Url": "https://api.github.com/repos/s-aska/Justaway-for-Android-Original", "Date": "2014-07-05T07:46:10Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.atomic.AtomicReference<eu.stratosphere.nephele.services.blob.AbstractBaseImpl>.getAndSet(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (impl != null) { impl.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1941/buggy-version/stratosphere-runtime.src.main.java.eu.stratosphere.nephele.services.blob.BlobService.java", "BodyUseAPI": ["eu.stratosphere.nephele.services.blob.AbstractBaseImpl.shutdown()"], "Fixed commit": "1ea8a81a55524661aa5d201157e1731b24dd9a37", "Url": "https://api.github.com/repos/warneke/incubator-flink", "Date": "2014-06-28T08:36:15Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nagarro.gde.persistence.dao.api.ApplicationAssessmentTraceDao.findById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((com.nagarro.gde.persistence.model.enums.ApplicationStatusEnum.PRE_EVALUATER_CONFLICT) != (appTrace.getStatus())) { appTrace.setStatus(ApplicationStatusEnum.IN_PROGRESS_PRE_EVALUATER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2798/buggy-version/gde-backend.src.main.java.com.nagarro.gde.service.PEEvaluationDetailsServiceImpl.java", "BodyUseAPI": ["com.nagarro.gde.persistence.model.ApplicationAssessmentTrace.setStatus(ApplicationStatusEnum.IN_PROGRESS_PRE_EVALUATER)"], "Fixed commit": "d858cb910dde9900a28841581eaf7f5d7eceba91", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-09-09T07:16:00Z"},
{"Line": "=>806", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nagarro.gde.persistence.dao.api.ApplicationAssessmentTraceDao.findById(expertDto.getAppTraceId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((com.nagarro.gde.persistence.model.enums.ApplicationStatusEnum.EXPERT_CONFLICT) != (appTrace.getStatus())) { appTrace.setStatus(ApplicationStatusEnum.IN_PROGRESS_EXPERT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2798/buggy-version/gde-backend.src.main.java.com.nagarro.gde.service.ExpertEvaluationDetailsServiceImpl.java", "BodyUseAPI": ["com.nagarro.gde.persistence.model.ApplicationAssessmentTrace.setStatus(ApplicationStatusEnum.IN_PROGRESS_EXPERT)"], "Fixed commit": "d858cb910dde9900a28841581eaf7f5d7eceba91", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-09-09T07:16:00Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isConnectorInfoSet(job))) { setConnectorInfo(job, user, new org.apache.accumulo.core.client.security.tokens.PasswordToken(pass.getBytes())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1742/buggy-version/src.main.java.org.apache.accumulo.storagehandler.HiveAccumuloTableInputFormat.java", "BodyUseAPI": ["org.apache.accumulo.storagehandler.HiveAccumuloTableInputFormat.setConnectorInfo(org.apache.accumulo.storagehandler.Job,java.lang.String,org.apache.accumulo.core.client.security.tokens.PasswordToken)"], "Fixed commit": "6b93c5998f4bc724a46cb776b9e9378b0f82778e", "Url": "https://api.github.com/repos/mahesh2013/accumulo-hive-storage-manager", "Date": "2013-09-04T16:02:46Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.auscope.nvcl.server.service.NVCLAnalyticalQueueBrowser.browseQueueStatus(java.lang.String,javax.jms.Destination)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (jobStatusList == null) jobStatusList = new java.util.ArrayList<org.auscope.nvcl.server.vo.AnalyticalJobVo>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/887/buggy-version/src.main.java.org.auscope.nvcl.server.web.controllers.RestMenuController.java", "BodyUseAPI": [], "Fixed commit": "17e8f08db29221e03ae335a67f757f6a725b6203", "Url": "https://api.github.com/repos/AuScope/NVCLAnalyticalServices", "Date": "2016-07-07T06:01:11Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (value != null) { try { data = new org.json.JSONObject(new com.google.gson.Gson().toJson(value)); } catch (org.json.JSONException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1298/buggy-version/src.android.com.blakgeek.cordova.plugin.FirebaseDatabasePlugin.java", "BodyUseAPI": ["com.google.gson.Gson.toJson(java.lang.Object)"], "Fixed commit": "8be7223b8edb13e4dfe57691ba7730ddfee3dfb9", "Url": "https://api.github.com/repos/blakgeek/cordova-plugin-firebase-database", "Date": "2016-10-13T15:52:35Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data != null) { result = new org.apache.cordova.PluginResult(status, data); }else { result = new org.apache.cordova.PluginResult(status, ((java.lang.String) (null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1298/buggy-version/src.android.com.blakgeek.cordova.plugin.FirebaseDatabasePlugin.java", "BodyUseAPI": [], "Fixed commit": "8be7223b8edb13e4dfe57691ba7730ddfee3dfb9", "Url": "https://api.github.com/repos/blakgeek/cordova-plugin-firebase-database", "Date": "2016-10-13T15:52:35Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mUsers.get(position)) == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3990/buggy-version/sage-android.Sage.app.src.main.java.blueprint.com.sage.browse.adapters.UserSpinnerAdapter.java", "BodyUseAPI": [], "Fixed commit": "0ad45a3273be97df06173bdbae44b861c2ff2a3f", "Url": "https://api.github.com/repos/calblueprint/sage-mobile", "Date": "2016-01-07T07:29:49Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.data.DataAccessor.getUser(request.getUserId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((user.getState()) != (com.pratilipi.common.type.UserState.REFERRAL)) || ((user.getSignUpSource()) != (com.pratilipi.common.type.UserSignUpSource.PRE_LAUNCH_WEBSITE))) throw new com.pratilipi.common.exception.InvalidArgumentException(\"Could not find an Author entity linked.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1454/buggy-version/src.main.java.com.pratilipi.api.impl.user.UserProcessApi.java", "BodyUseAPI": [], "Fixed commit": "eb037d8651c3a6d1648493a5180c0c2b7b7135c4", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-06-25T10:17:12Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (supportFactoryHierarchy) { org.pm4j.core.pm.PmObject pmParent = pmCtxt.getPmParent(); if (pmParent != null) { pm = this.<T, T_PM>getPmForBean(pmParent, bean); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1769/buggy-version/pm4j-core.main.java.org.pm4j.core.pm.impl.PmFactoryApiHandler.java", "BodyUseAPI": [], "Fixed commit": "4c49c62642e7481a76adee4d8d47f0c992d71b3a", "Url": "https://api.github.com/repos/pm4j/org.pm4j", "Date": "2012-03-30T09:39:35Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(org.pm4j.core.pm.PmBean.class.isAssignableFrom(beanPmClass))) { throw new org.pm4j.core.exception.PmRuntimeException((\"Only PmBean classes can be used for PmFactory configurations. Found class: \" + beanPmClass)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1769/buggy-version/pm4j-core.main.java.org.pm4j.core.pm.impl.BeanPmFactory.java", "BodyUseAPI": [], "Fixed commit": "4c49c62642e7481a76adee4d8d47f0c992d71b3a", "Url": "https://api.github.com/repos/pm4j/org.pm4j", "Date": "2012-03-30T09:39:35Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (genres.isEmpty()) { tags.add(UNCLASSIFIED_TAG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8467/buggy-version/atlas-legacy.src.main.java.org.atlasapi.system.legacy.PaTagMap.java", "BodyUseAPI": [], "Fixed commit": "9a938f6ea06e8445183cf547d339809465f7886a", "Url": "https://api.github.com/repos/atlasapi/atlas-deer", "Date": "2016-06-22T13:27:47Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerJoinEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (player.isDead()) { plugin.Debug(((((player.getName()) + \" joined \") + (player.getWorld())) + \" while dead! Ignoring event...\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4226/buggy-version/src.au.com.addstar.truehardcore.PlayerListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.getName()", "au.com.addstar.truehardcore.TrueHardcore.Debug(((((player.getName()) + \" joined \") + (player.getWorld())) + \" while dead! Ignoring event...\"))", "org.bukkit.entity.Player.getWorld()"], "Fixed commit": "d496f46d6a9ad3b13a8ae882375d7b7b64e8bfb6", "Url": "https://api.github.com/repos/addstar/TrueHardcore", "Date": "2013-10-24T10:57:24Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.util.ParamUtil.getString(javax.portlet.RenderRequest,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNotNull(groupCode)) { dictGroup = org.opencps.datamgt.service.DictGroupLocalServiceUtil.fetchByF_DictGroupCode(groupCode, groupId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5581/buggy-version/modules.frontend-web-admin.src.main.java.org.opencps.frontend.web.admin.portlet.AdminPortlet.java", "BodyUseAPI": ["org.opencps.datamgt.service.DictGroupLocalServiceUtil.fetchByF_DictGroupCode(java.lang.String,long)"], "Fixed commit": "38ba2be5f869342454ff9d631497f7be879ea3db", "Url": "https://api.github.com/repos/VietOpenCPS/opencps-v2", "Date": "2017-10-23T07:07:32Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.enumerationEvents.size()) == 0) { done = true; eof = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/714/buggy-version/src.main.java.org.encog.ml.bayesian.query.enumerate.EnumerationQuery.java", "BodyUseAPI": [], "Fixed commit": "8d6922adf8d9604d165aa22f6863e33360a4d788", "Url": "https://api.github.com/repos/encog/encog-java-core", "Date": "2011-10-28T22:46:10Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kamron.pogoiv.ScreenGrabber.grabScreen()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (screen != null) { java.lang.String appraiseText = ocr.getAppraisalText(screen); java.lang.String hash = appraiseText.substring(0, appraiseText.indexOf(\"#\")); java.lang.String text = appraiseText.substring(((appraiseText.indexOf(\"#\")) + 1)); addInfoFromAppraiseText(text, hash); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5998/buggy-version/app.src.main.java.com.kamron.pogoiv.pokeflycomponents.AutoAppraisal.java", "BodyUseAPI": ["com.kamron.pogoiv.pokeflycomponents.ocrhelper.OcrHelper.getAppraisalText(android.graphics.Bitmap)"], "Fixed commit": "6c3c78d3c74c6155198cde561c9e149eaaf3918c", "Url": "https://api.github.com/repos/thearaks/GoIV", "Date": "2017-09-25T22:31:02Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.jboss.as.jpa.transaction.ROOT_LOGGER.isTraceEnabled()) { org.jboss.as.jpa.transaction.ROOT_LOGGER.tracef(\"transaction association counter = %d for %s: \", associationCounter, org.jboss.as.jpa.transaction.TransactionUtil.getEntityManagerDetails(manager, scopedPuName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3186/buggy-version/jpa.subsystem.src.main.java.org.jboss.as.jpa.transaction.TransactionUtil.java", "BodyUseAPI": [], "Fixed commit": "5ae7ed58e832596bfde32a0d0799c87a589d17aa", "Url": "https://api.github.com/repos/scottmarlow/wildfly", "Date": "2017-04-27T00:49:06Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDepartments.size()) == 0) { android.widget.Toast.makeText(this, getString(R.string.msg_has_no_department), Toast.LENGTH_SHORT).show(); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6326/buggy-version/app.src.main.java.com.nhs3108.fhrm.activites.StaffAddingActivity.java", "BodyUseAPI": [], "Fixed commit": "a47f809541ddf4d5efa2b5b92f9335e880b9b90e", "Url": "https://api.github.com/repos/framgia/hrm_3", "Date": "2015-12-28T08:57:51Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (sort != null) { params.add(new ch.boye.httpclientandroidlib.message.BasicNameValuePair(\"sort\", sort.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3021/buggy-version/src.io.msgs.v2.RequestHelper.java", "BodyUseAPI": ["io.msgs.v2.RequestHelper.Sort.toString()", "java.util.List<ch.boye.httpclientandroidlib.NameValuePair>.add(ch.boye.httpclientandroidlib.message.BasicNameValuePair)"], "Fixed commit": "bc46b05802c6f8b7f7ba56a02db8cda768ce7e6e", "Url": "https://api.github.com/repos/egeniq/egeniq-android", "Date": "2014-03-03T15:00:53Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (tags != null) { params.add(new ch.boye.httpclientandroidlib.message.BasicNameValuePair(\"tags\", android.text.TextUtils.join(\",\", tags))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3021/buggy-version/src.io.msgs.v2.RequestHelper.java", "BodyUseAPI": ["java.util.List<ch.boye.httpclientandroidlib.NameValuePair>.add(ch.boye.httpclientandroidlib.message.BasicNameValuePair)", "android.text.TextUtils.join(java.lang.String,java.lang.String[])"], "Fixed commit": "bc46b05802c6f8b7f7ba56a02db8cda768ce7e6e", "Url": "https://api.github.com/repos/egeniq/egeniq-android", "Date": "2014-03-03T15:00:53Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((studyEvent.getSubjectEventStatus()) == (org.akaza.openclinica.bean.core.SubjectEventStatus.COMPLETED)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5297/buggy-version/core.src.main.java.org.akaza.openclinica.service.ParticipantEventService.java", "BodyUseAPI": [], "Fixed commit": "ae95eeccfaa75bedc7509ef9868a19daabb3993c", "Url": "https://api.github.com/repos/rooney/OpenClinica", "Date": "2015-11-30T07:47:47Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedAddress) { if (lais.mc851.AddressManager.removeAddress(addressName)) { android.widget.Toast.makeText(getApplicationContext(), \"Endere\ufffdo deletado\", Toast.LENGTH_SHORT).show(); startActivity(new android.content.Intent(getApplicationContext(), lais.mc851.Addresses.class)); finish(); }else { android.widget.Toast.makeText(getApplicationContext(), \"Erro ao deletar o endere\ufffdo\", Toast.LENGTH_SHORT).show(); } }else { android.widget.Toast.makeText(getApplicationContext(), \"Esse endere\ufffdo n\ufffdo foi salvo ainda\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5550/buggy-version/src.lais.mc851.AddressEdit.java", "BodyUseAPI": [], "Fixed commit": "fe38101dd30e57907a3ea45897d6c0016c24f654", "Url": "https://api.github.com/repos/lminchillo/mc851", "Date": "2013-05-22T17:52:45Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isbn) != null) { return isbn.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4557/buggy-version/worblehat-web.src.main.java.de.codecentric.psd.worblehat.web.formdata.BookBorrowFormData.java", "BodyUseAPI": [], "Fixed commit": "e2fd4bc996e47679b4c6905676939c40db6be508", "Url": "https://api.github.com/repos/scrum-for-developers/2017-07-19-C", "Date": "2017-07-20T14:09:44Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((fieldOfView) == null) || ((fieldOfView.length) != (Dungeon.level.length()))) { fieldOfView = new boolean[Dungeon.level.length()]; Dungeon.level.updateFieldOfView(this, fieldOfView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4103/buggy-version/core.src.main.java.com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Tengu.java", "BodyUseAPI": [], "Fixed commit": "4ee449c9183a297dee0a067200dc1755b6631b4d", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2017-11-09T22:39:55Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i) > 0) g.drawString(((((\"Zadania do wzi\ufffdcia: (\" + ((i) + 1)) + \"/\") + (zadania.size())) + \")\"), (((core.Window.width) / 2) - (margin)), 250);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8790/buggy-version/src.States.NewTaskState.java", "BodyUseAPI": ["org.newdawn.slick.Graphics.drawString(((((\"Zadania do wzi\ufffdcia: (\" + ((i) + 1)) + \"/\") + (zadania.size())) + \")\"),(((core.Window.width) / 2) - (margin)),int)"], "Fixed commit": "ef391e9bd5d6eefdb3a89635eeaab8093734d56d", "Url": "https://api.github.com/repos/Unknown22/Pekaton", "Date": "2016-06-05T07:02:44Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (children == null) { throw new java.lang.IllegalStateException((\"Could not process group of type \" + (group.getClass().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4059/buggy-version/avro-to-xml.src.main.java.mpigott.avro.xml.XmlSchemaWalker.java", "BodyUseAPI": [], "Fixed commit": "2fd6ebf91ec76051141af4c685f0d1a3ebd617f5", "Url": "https://api.github.com/repos/mikepigott/xml-to-avro", "Date": "2014-07-20T03:12:07Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.linkedin.pinot.common.query.context.TimerContext.getPhaseTimer(ServerQueryPhase.SCHEDULER_WAIT)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (schedulerWaitTimer != null) { schedulerWaitTimer.stopAndRecord(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1083/buggy-version/pinot-core.src.main.java.com.linkedin.pinot.core.query.executor.ServerQueryExecutorV1Impl.java", "BodyUseAPI": ["TimerContext.Timer.stopAndRecord()"], "Fixed commit": "0c53f95ebe8921f8d4c3429c421c75199781e60e", "Url": "https://api.github.com/repos/linkedin/pinot", "Date": "2016-10-02T23:26:49Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getPlayer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (player != null) player.setDisplayName(((name + (org.bukkit.ChatColor.WHITE)) + (displayName)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1075/buggy-version/src.com.rit.sucy.chat.ChatData.java", "BodyUseAPI": ["org.bukkit.entity.Player.setDisplayName(((name + (org.bukkit.ChatColor.WHITE)) + (displayName)))"], "Fixed commit": "663684d2135add8feb767fa8d5a498460f95a25c", "Url": "https://api.github.com/repos/Eniripsa96/MCCore", "Date": "2013-06-28T18:25:19Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(defaultConfig.exists())) { defaultConfig.createNewFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8284/buggy-version/HammerSponge.src.main.java.uk.co.drnaylor.minecraft.hammer.sponge.HammerSponge.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "17419806fcf3980fdca8f0eac5c6b76f39af48ed", "Url": "https://api.github.com/repos/dualspiral/Hammer", "Date": "2015-12-03T18:19:51Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentScreen) == screen) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2485/buggy-version/app.src.main.java.com.adriencadet.downthere.ui.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8f8b6db154aae6ff65165815bbe0f1cb970db7d3", "Url": "https://api.github.com/repos/acadet/downthere-android", "Date": "2016-03-19T01:51:24Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"x86\".equals(java.lang.System.getProperty(\"os.arch\")))) { org.nschmidt.ldparteditor.workbench.WorkbenchManager.primitiveCache = ((org.nschmidt.ldparteditor.workbench.PrimitiveCache) (configFileStream.readObject())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2933/buggy-version/src.org.nschmidt.ldparteditor.workbench.WorkbenchManager.java", "BodyUseAPI": [], "Fixed commit": "a5afa1bfa9b246155ed77912db82c74c4e5c1568", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-03-29T13:44:55Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"x86\".equals(java.lang.System.getProperty(\"os.arch\")))) { configFileStream.writeObject(org.nschmidt.ldparteditor.workbench.WorkbenchManager.primitiveCache); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2933/buggy-version/src.org.nschmidt.ldparteditor.workbench.WorkbenchManager.java", "BodyUseAPI": [], "Fixed commit": "a5afa1bfa9b246155ed77912db82c74c4e5c1568", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-03-29T13:44:55Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getSourceProvider().switchTaskIsRemoved())) { getSourceProvider().getProviderSwitchTask().stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7338/buggy-version/library.src.main.java.com.yayandroid.locationmanager.providers.locationprovider.DefaultLocationProvider.java", "BodyUseAPI": [], "Fixed commit": "6231f444a7eb95ed39f722ebd216927f9413162a", "Url": "https://api.github.com/repos/fightyz/LocationManager", "Date": "2017-12-06T14:39:56Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cz3002.dnp.Controller.TreatmentCtrl.getInstance().getTreatments().size()) < 1) { cz3002.dnp.Controller.NotificationCtrl.getInstance().retrieveNotifications(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8620/buggy-version/app.src.main.java.cz3002.dnp.HomepageFragment.java", "BodyUseAPI": [], "Fixed commit": "417ae165dd8274c681b136f453d2e477d30961a5", "Url": "https://api.github.com/repos/kevincherian/DNP", "Date": "2016-03-27T15:47:59Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.userService.userExistsWithEmailAddress(user.getEmailAddress())) errors.rejectValue(\"emailAddress\", \"user.validation.emailAddress.unique\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/724/buggy-version/src.main.java.com.leon.rfq.validators.UserValidator.java", "BodyUseAPI": [], "Fixed commit": "68b22827bd66f789efe60b5c7f4db27c3601b606", "Url": "https://api.github.com/repos/LeonAdeoye/RequestForQuoteSpringMVCWeb", "Date": "2015-04-23T15:50:12Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index) > (getStatements().size())) { setFinish(); }else { programorder.add(this); timeElapsed = getCurrentStatement().run(timeElapsed, programorder); if (getCurrentStatement().isFinished()) index += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3089/buggy-version/src.jumpingalien.model.statement.Sequence.java", "BodyUseAPI": [], "Fixed commit": "14c0423f8bde1460822cffaefd4e75777148101b", "Url": "https://api.github.com/repos/aagten/jumpingalien", "Date": "2015-05-23T14:20:07Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.badlogic.ashley.core.ComponentMapper<net.matthiasauer.ecstools.input.base.gestures.InputGestureEventComponent>.get(com.badlogic.ashley.core.Entity)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((event.type) == (net.matthiasauer.ecstools.input.base.gestures.InputGestureEventType.Zoom)) { float scaledZoomDistance = (-(event.argument)) / (java.lang.Math.min(Gdx.graphics.getWidth(), Gdx.graphics.getHeight())); this.containerEntity.add(this.engine.createComponent(net.matthiasauer.ecstools.graphics.camera.zoom.ZoomEventComponent.class).set(scaledZoomDistance)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6973/buggy-version/src.net.matthiasauer.ecstools.graphics.camera.zoom.InputGestureToZoomEventSystem.java", "BodyUseAPI": [], "Fixed commit": "8beeded6091bfca1c15c4dde34c9754a07c9de2a", "Url": "https://api.github.com/repos/Stromausfall/ecs-tools", "Date": "2015-10-19T20:55:40Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBottomBar) != null) { mBottomBar.onSaveInstanceState(outState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3378/buggy-version/app.src.main.java.io.github.sjakthol.stoptimes.activity.stoplist.StopListActivity.java", "BodyUseAPI": [], "Fixed commit": "2a8521575fbcf71da9f24eef8c0b8a47677250c1", "Url": "https://api.github.com/repos/sjakthol/digitransit-stoptimes-android", "Date": "2016-07-20T16:47:54Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mStopListSource) == (io.github.sjakthol.stoptimes.activity.stoplist.StopListActivity.StopListSource.NEARBY)) { updateNearbyStops(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3378/buggy-version/app.src.main.java.io.github.sjakthol.stoptimes.activity.stoplist.StopListActivity.java", "BodyUseAPI": [], "Fixed commit": "2a8521575fbcf71da9f24eef8c0b8a47677250c1", "Url": "https://api.github.com/repos/sjakthol/digitransit-stoptimes-android", "Date": "2016-07-20T16:47:54Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((referenceSpeed) < 0) { referenceSpeed = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5964/buggy-version/train-controller.src.main.java.hu.bme.mit.train.controller.TrainControllerImpl.java", "BodyUseAPI": [], "Fixed commit": "e382b1fa9879bf618b6936d2f698cccf43f0436c", "Url": "https://api.github.com/repos/FTSRG-ReteLab/MITokondrium-vcs-ci-lab", "Date": "2017-03-06T14:34:33Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.syncany.database.dao.FileHistorySqlDao.getLastVersionByFileHistoryId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fileHistory.getLastVersion().getVersion()) == latestFileVersion) { return fileHistory; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6947/buggy-version/syncany-lib.src.main.java.org.syncany.database.dao.FileHistorySqlDao.java", "BodyUseAPI": [], "Fixed commit": "70837febf6d1631980ad92da97cc60f42ae45bc7", "Url": "https://api.github.com/repos/syncany/syncany", "Date": "2015-05-05T19:23:51Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (latestFileHistoryId == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6947/buggy-version/syncany-lib.src.main.java.org.syncany.database.dao.FileHistorySqlDao.java", "BodyUseAPI": [], "Fixed commit": "70837febf6d1631980ad92da97cc60f42ae45bc7", "Url": "https://api.github.com/repos/syncany/syncany", "Date": "2015-05-05T19:23:51Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (week != 0) { sWeek += \"\u5341\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/709/buggy-version/WePeiYang.schedule.src.main.java.com.twtstudio.retrox.schedule.TimeHelper.java", "BodyUseAPI": [], "Fixed commit": "a7064f5bad48fce1a92702e2e62479624ca9ad6f", "Url": "https://api.github.com/repos/twtstudio/WePeiYang-Android", "Date": "2017-08-24T09:26:10Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mXMax) == (mXMin)) { double half = (java.lang.Math.abs(mXMax)) / 2; mXMax += half; mXMin -= half; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5/buggy-version/library.src.main.java.com.linheimx.app.library.data.Lines.java", "BodyUseAPI": [], "Fixed commit": "dd67e70f48af3458148b65cd30df7e2ee994ecf0", "Url": "https://api.github.com/repos/linheimx/LChart", "Date": "2017-03-23T06:14:06Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mYMax) == (mYMin)) { double half = (java.lang.Math.abs(mYMax)) / 2; mYMax += half; mYMin -= half; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5/buggy-version/library.src.main.java.com.linheimx.app.library.data.Lines.java", "BodyUseAPI": [], "Fixed commit": "dd67e70f48af3458148b65cd30df7e2ee994ecf0", "Url": "https://api.github.com/repos/linheimx/LChart", "Date": "2017-03-23T06:14:06Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.linheimx.app.library.data.Line.getEntries()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((list.size()) == 1) { com.linheimx.app.library.data.Entry hit = list.get(0); com.linheimx.app.library.utils.SingleF_XY xy = _MappingManager.getPxByEntry(hit); canvas.drawCircle(xy.getX(), xy.getY(), line.getCircleR(), _PaintCircle); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5/buggy-version/library.src.main.java.com.linheimx.app.library.render.LineRender.java", "BodyUseAPI": ["java.util.List<com.linheimx.app.library.data.Entry>.get(int)"], "Fixed commit": "dd67e70f48af3458148b65cd30df7e2ee994ecf0", "Url": "https://api.github.com/repos/linheimx/LChart", "Date": "2017-03-23T06:14:06Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6681/buggy-version/src.java.core.net.sharkfw.knowledgeBase.inmemory.InMemoPeerTaxonomy.java", "BodyUseAPI": [], "Fixed commit": "99d8dfd19a467a641c78fed9de51ecfbcfccfeee", "Url": "https://api.github.com/repos/SharedKnowledge/SharkFW", "Date": "2015-06-03T11:21:49Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"draw\".equals(action)) { android.content.Context context = this.cordova.getActivity().getApplicationContext(); context.startActivity(new android.content.Intent(context, in.co.geekninja.plugin.SketchActivity.class)); return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6779/buggy-version/src.android.Draw.java", "BodyUseAPI": [], "Fixed commit": "c989093740183fecd290c48faeb9f3e87bf41b1c", "Url": "https://api.github.com/repos/minto5050/cordova-plugin-draw", "Date": "2016-07-27T07:23:26Z"},
{"Line": "=>1117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pnnl.goss.powergrid.server.dao.NamedParamStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.next()) { grid.setPowergridId(rs.getInt(\"PowergridId\")); grid.setName(rs.getString(\"name\")); grid.setMrid(rs.getString(\"mrid\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4270/buggy-version/pnnl.goss.powergrid.src.pnnl.goss.powergrid.server.dao.PowergridDaoMySql.java", "BodyUseAPI": ["pnnl.goss.powergrid.datamodel.Powergrid.setPowergridId(int)", "pnnl.goss.powergrid.datamodel.Powergrid.setName(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getInt(java.lang.String)", "pnnl.goss.powergrid.datamodel.Powergrid.setMrid(java.lang.String)"], "Fixed commit": "06c8261ce1d6992136cbba4a6e7cbbf65f62562e", "Url": "https://api.github.com/repos/GridOPTICS/GOSS-Powergrid", "Date": "2015-06-30T06:13:55Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((demand.getAuditDetail()) != null) && ((demand.getAuditDetail().getLastModifiedBy()) != null)) requestInfo.getUserInfo().setId(java.lang.Long.valueOf(demand.getAuditDetail().getLastModifiedBy()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5088/buggy-version/wcms.wcms-connection.src.main.java.org.egov.wcms.transaction.utils.ConnectionUtils.java", "BodyUseAPI": ["org.egov.wcms.transaction.demand.contract.Demand.getAuditDetail()", "demand.getAuditDetail().getLastModifiedBy()", "java.lang.Long.valueOf(demand.getAuditDetail().getLastModifiedBy())", "requestInfo.getUserInfo().setId(java.lang.Long)"], "Fixed commit": "71ac78e20b31526961290f01ff32a014eed874d7", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-10-13T09:16:10Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.ihmc.robotics.stateMachines.GenericStateMachine<us.ihmc.commonWalkingControlModules.controlModules.foot.FootControlModule.ConstraintType, us.ihmc.commonWalkingControlModules.controlModules.foot.AbstractFootControlState>.isCurrentState(us.ihmc.commonWalkingControlModules.controlModules.foot.FootControlModule.ConstraintType)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isInMoveViaWaypointsState) resetCurrentState();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3564/buggy-version/CommonWalkingControlModules.src.us.ihmc.commonWalkingControlModules.controlModules.foot.FootControlModule.java", "BodyUseAPI": [], "Fixed commit": "beffd9b85ee104dfe13f99e97c1e2c28ff2114d3", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2016-06-20T15:00:05Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return org.eclipse.core.runtime.Status.OK_STATUS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7001/buggy-version/org.lunifera.runtime.web.ecview.presentation.vaadin.src.org.lunifera.runtime.web.ecview.presentation.vaadin.internal.AbstractVaadinWidgetPresenter.java", "BodyUseAPI": [], "Fixed commit": "bebaa6e2b35f04c7644a51e127ba58700fd00538", "Url": "https://api.github.com/repos/lunifera/lunifera-runtime-web", "Date": "2015-03-21T09:53:56Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.onebusaway.android.util.EmbeddedSocialUtils.isSocialEnabled(getContext())) { isSignedIn = com.microsoft.embeddedsocial.sdk.EmbeddedSocial.isSignedIn(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8690/buggy-version/onebusaway-android.src.main.java.org.onebusaway.android.ui.NavigationDrawerFragment.java", "BodyUseAPI": [], "Fixed commit": "0389d6f8182b1d99c20b4e9d2b477493f9930ce5", "Url": "https://api.github.com/repos/acrown-msft/onebusaway-android", "Date": "2017-10-26T22:51:38Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(\"\\n\".equals(lineSeparator))) { printString = printString.replace(lineSeparator, \"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5813/buggy-version/src.org.roana0229.android_xml_sorter.XmlSorterAction.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "390a74f8a6aec8b19a75e7565e9dd48cb6667a08", "Url": "https://api.github.com/repos/roana0229/android-xml-sorter", "Date": "2017-03-21T10:15:01Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null != (boundaryChainsHeads)) && ((segmentsSearcher) != null)) { net.epsilony.tb.solid.SegmentChainsIterator<net.epsilony.tb.solid.Segment> iter = new net.epsilony.tb.solid.SegmentChainsIterator(boundaryChainsHeads); java.util.LinkedList<net.epsilony.tb.solid.Segment> segments = new java.util.LinkedList<>(); while (iter.hasNext()) { segments.add(iter.next()); } segmentsSearcher.setAll(segments); realSegmentsSearcher = segmentsSearcher; }else { realSegmentsSearcher = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3066/buggy-version/src.main.java.net.epsilony.mf.model.support_domain.SupportDomainSearcherFactory.java", "BodyUseAPI": [], "Fixed commit": "d6a301733c2675173a12db3704faf4c7074421be", "Url": "https://api.github.com/repos/epsilony/mf", "Date": "2013-06-26T16:23:50Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((provider) != null) { locationManager.requestLocationUpdates(provider, MIN_TIME_INTERVAL, MIN_DISTANCE_INTERVAL, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3577/buggy-version/Aikuma.src.org.lp20.aikuma.ui.sensors.LocationDetector.java", "BodyUseAPI": [], "Fixed commit": "98df28a2ab3eff71ccc491ec67c9fdf82f6da1e4", "Url": "https://api.github.com/repos/langtech/aikuma", "Date": "2014-05-13T04:03:19Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(config.getLdapRoot().equalsIgnoreCase(chart.getRoot().getCompleteName()))) { rootOrganization.setParentDn(chart.getRoot().getParentOu()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/65/buggy-version/organizationchart.organizationchart-war.src.main.java.com.silverpeas.components.organizationchart.control.OrganizationChartSessionController.java", "BodyUseAPI": ["com.silverpeas.components.organizationchart.view.OrganizationBox.setParentDn(chart.getRoot().getParentOu())", "chart.getRoot().getParentOu()", "com.silverpeas.components.organizationchart.model.OrganizationalChart.getRoot()"], "Fixed commit": "a55608d8d0ede33cc3fad76ecef18012a447e276", "Url": "https://api.github.com/repos/neoludo/Silverpeas-Core", "Date": "2011-02-25T07:54:46Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((str.length()) > (lastname.length())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5800/buggy-version/src.indico.checkin.core.gui.RegistrantListModel.java", "BodyUseAPI": [], "Fixed commit": "1d5679d48ce3576fdfccdfa8f09741eb4908bd9d", "Url": "https://api.github.com/repos/mfasDa/indicoCheckin", "Date": "2014-04-24T12:38:12Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mjc.parser.TypeCheckVisitor.getVal(mjc.parser.Node)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((symbolTable.lookup(superClassName)) == null) { throw new mjc.parser.ReferencedMissingType(new mjc.parser.VisitorUtil.Context(className), superClassName, node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5189/buggy-version/src.mjc.parser.TypeCheckVisitor.java", "BodyUseAPI": [], "Fixed commit": "2480b5b7c034cb9c5cc73f52b54e640fe3781f6b", "Url": "https://api.github.com/repos/gj-kth/compilatrocious", "Date": "2014-04-27T14:22:12Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.plugins.java.api.tree.ClassTree.parent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parent.is(Tree.Kind.NEW_CLASS)) { report = ((org.sonar.plugins.java.api.tree.NewClassTree) (parent)).identifier(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4100/buggy-version/java-checks.src.main.java.org.sonar.java.checks.ThreadOverridesRunCheck.java", "BodyUseAPI": [], "Fixed commit": "046585ae79d0dfa0f57534cefe4b2f50eee7b989", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2016-02-18T14:00:07Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(request instanceof com.connectsdk.service.command.URLServiceSubscription)) { if (!((payload instanceof org.json.JSONObject) && (((org.json.JSONObject) (payload)).has(\"pairingType\")))) requests.remove(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/9144/buggy-version/src.com.connectsdk.service.webos.WebOSTVServiceSocketClient.java", "BodyUseAPI": [], "Fixed commit": "1adad9470f1e6897ffec3ddcf15705fff4112416", "Url": "https://api.github.com/repos/ConnectSDK/Connect-SDK-Android-Core", "Date": "2015-02-06T01:12:15Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((nxi + (_xloc)) > nxp) || ((nzi + (_zloc)) > nzp)) { edu.mines.jtk.util.Check.state(false, (\"The input image will not be padded correctly.\" + \"please increase padding or reduce xs and/or zs\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3674/buggy-version/src.weq.ZeroPad.java", "BodyUseAPI": [], "Fixed commit": "9185dbd791333622f91a16a0ce65d17a4100c516", "Url": "https://api.github.com/repos/ke0m/jsj", "Date": "2016-07-08T06:18:36Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((nxi + (_xloc)) > nxp) || ((nzi + (_zloc)) > nzp)) { edu.mines.jtk.util.Check.state(false, (\"The input image will not be padded correctly.\" + \"please increase padding or reduce xs and/or zs\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3674/buggy-version/src.weq.ZeroPad.java", "BodyUseAPI": [], "Fixed commit": "9185dbd791333622f91a16a0ce65d17a4100c516", "Url": "https://api.github.com/repos/ke0m/jsj", "Date": "2016-07-08T06:18:36Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.ednovo.gooru.application.client.gin.AppClientFactory.getCurrentPlaceToken().equals(PlaceTokens.SEARCH_RESOURCE)) { if (publisherSgstBox.isSuggestionListShowing()) { publisherSgstBox.hideSuggestionList(); } if (aggregatorSgstBox.isSuggestionListShowing()) { aggregatorSgstBox.hideSuggestionList(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8921/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gsearch.SearchAbstractView.java", "BodyUseAPI": [], "Fixed commit": "cf8b12ba9b2f361e2188fd228c5fe0717eb6c2a8", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-09-03T06:52:54Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((chebiTerm.getFormula()) != null) { org.mcisb.subliminal.shorthand.SbmlUtils.setFormula(((org.mcisb.subliminal.shorthand.Species) (sbase)), chebiTerm.getFormula()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3429/buggy-version/src.main.java.org.mcisb.subliminal.shorthand.SbmlCreator.java", "BodyUseAPI": ["org.mcisb.subliminal.shorthand.ChebiTerm.getFormula()", "org.mcisb.subliminal.shorthand.SbmlUtils.setFormula(org.mcisb.subliminal.shorthand.NamedSBase,chebiTerm.getFormula())"], "Fixed commit": "21dc95d4b9a87281602decddcb0f6c85a81018bd", "Url": "https://api.github.com/repos/mcisb/SuBliMinaLToolbox", "Date": "2016-03-10T16:46:54Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sender instanceof org.bukkit.entity.Player) { org.bukkit.entity.Player p = ((org.bukkit.entity.Player) (sender)); for (org.bukkit.entity.Player pl : org.bukkit.Bukkit.getServer().getOnlinePlayers()) pl.sendMessage(org.bukkit.ChatColor.translateAlternateColorCodes('&', ((((\"&5* \" + \"&r\") + (p.getDisplayName())) + \" &5\") + arg))); new us.cyrien.minecordbot.entity.Messenger(us.cyrien.minecordbot.main.Minecordbot.getInstance()).sendMessageToAllBoundChannel((((((\"**\" + (p.getName())) + \"** \") + \"_\") + arg) + \"_\")); }else { sender.sendMessage(\"Only players can do that execute /dme command\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3657/buggy-version/src.us.cyrien.minecordbot.commands.minecraftCommand.Dme.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(java.lang.String)"], "Fixed commit": "85ea9e3dfe5dc265d8d37c58300f7be59ea3bec6", "Url": "https://api.github.com/repos/CyR1en/Minecordbot", "Date": "2017-06-22T02:44:23Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["DTO.getCustomProperties()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((null == customProperties) || (customProperties.isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4183/buggy-version/rdap-service.src.main.java.org.restfulwhois.rdap.common.service.AbstractUpdateService.java", "BodyUseAPI": [], "Fixed commit": "37d94a9dfcfa2fd8040e97d2c0bdbe0152ddb8f0", "Url": "https://api.github.com/repos/luciferxcv/rdap", "Date": "2015-01-22T07:46:34Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((att.getExpression()) == null) { if (count > 0) select.append(\", \"); if ((att.getDataType()) instanceof org.molgenis.fieldtypes.MrefField) { select.append(\"GROUP_CONCAT(DISTINCT(\").append('`').append(att.getName()).append('`').append('.').append('`').append(att.getName()).append('`').append(\")) AS \").append('`').append(att.getName()).append('`'); }else { select.append(\"this.\").append('`').append(att.getName()).append('`'); if ((group.length()) > 0) group.append(\", this.\").append('`').append(att.getName()).append('`'); else group.append(\"this.\").append('`').append(att.getName()).append('`'); } count++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7425/buggy-version/molgenis-data-mysql.src.main.java.org.molgenis.data.mysql.MysqlRepository.java", "BodyUseAPI": ["org.molgenis.data.AttributeMetaData.getName()", "org.molgenis.data.AttributeMetaData.getName()", "java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(char)", "select.append(\"GROUP_CONCAT(DISTINCT(\").append('`').append(att.getName()).append('`').append('.').append('`').append(att.getName()).append('`').append(java.lang.String)", "select.append(\"GROUP_CONCAT(DISTINCT(\").append('`').append(att.getName()).append('`').append('.').append('`').append(att.getName()).append(char)", "org.molgenis.data.AttributeMetaData.getName()", "java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(att.getName())", "select.append(\"GROUP_CONCAT(DISTINCT(\").append('`').append(att.getName()).append('`').append('.').append('`').append(att.getName()).append('`').append(\")) AS \").append('`').append(att.getName())", "select.append(\"GROUP_CONCAT(DISTINCT(\").append('`').append(att.getName()).append('`').append(char)", "select.append(\"GROUP_CONCAT(DISTINCT(\").append('`').append(att.getName()).append('`').append('.').append('`').append(att.getName())", "java.lang.StringBuilder.append(att.getName())", "org.molgenis.data.AttributeMetaData.getName()", "select.append(\"GROUP_CONCAT(DISTINCT(\").append('`').append(att.getName()).append('`').append('.').append('`').append(att.getName()).append('`').append(\")) AS \").append('`').append(att.getName()).append(char)", "select.append(\"GROUP_CONCAT(DISTINCT(\").append('`').append(att.getName()).append('`').append('.').append('`').append(att.getName()).append('`').append(\")) AS \").append(char)", "select.append(\"GROUP_CONCAT(DISTINCT(\").append('`').append(att.getName()).append('`').append('.').append(char)", "org.molgenis.data.AttributeMetaData.getName()", "org.molgenis.data.AttributeMetaData.getName()", "java.lang.StringBuilder.append(att.getName())", "java.lang.StringBuilder.append(att.getName())", "org.molgenis.data.AttributeMetaData.getDataType()", "java.lang.StringBuilder.append(char)"], "Fixed commit": "4d7fd2343ab868b9bba80650d27cd77be78f7f58", "Url": "https://api.github.com/repos/bartcharbon/molgenis", "Date": "2015-03-10T16:10:34Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(word.equals(\"stop\"))) && (!(word.equals(\"Stop\")))) { java.lang.System.out.println(\"Invalid input. Please enter a valid input \\n\\n\\n\\n\"); }else { java.lang.System.out.println(\"Exiting program.... .... ....\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2420/buggy-version/src.InitialProj.java", "BodyUseAPI": [], "Fixed commit": "5277025d30a1a7981a7634bbb5c81e59cb915c51", "Url": "https://api.github.com/repos/eeellliii1/SloughData", "Date": "2017-10-30T17:57:49Z"},
{"Line": "=>1131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mousephenotype.cda.loads.create.load.steps.SeriesParameterValue.getIncrementStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((incrementStatus != null) && (!(incrementStatus.isEmpty()))) { dataPoint = 0.0F; }else { missing = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7013/buggy-version/loads.src.main.java.org.mousephenotype.cda.loads.create.load.steps.ExperimentLoader.java", "BodyUseAPI": [], "Fixed commit": "1fcac477ef5739d8b42e59f52f6e25cfe222733c", "Url": "https://api.github.com/repos/mpi2/PhenotypeData", "Date": "2017-03-17T13:49:22Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dbUri.getUserInfo()) != null) { java.lang.String username = dbUri.getUserInfo().split(\":\")[0]; java.lang.String password = dbUri.getUserInfo().split(\":\")[1]; basicDataSource.setUsername(username); basicDataSource.setPassword(password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3643/buggy-version/src.main.java.raceresults.config.DatabaseConfig.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.net.URI.getUserInfo()", "java.net.URI.getUserInfo()"], "Fixed commit": "f14d1a4f4962f6f0cd3ea7c83d27f64761f6456f", "Url": "https://api.github.com/repos/szaboat/raceresults", "Date": "2015-11-30T19:54:01Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_options.getMongoClient()) == null) { _mongo.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3800/buggy-version/src.main.java.com.deftlabs.lock.mongo.impl.SvcImpl.java", "BodyUseAPI": [], "Fixed commit": "c13f951c98c56b896026d82725cab7c69cf54666", "Url": "https://api.github.com/repos/peeyush-wings/mongo-java-distributed-lock", "Date": "2016-05-04T19:23:12Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.camera.PreferenceGroup.findPreference(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (isFrontCamera && (pvSt != null)) { com.android.camera.CameraSettings.removePreference(group, pvSt.getKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8842/buggy-version/src.com.android.camera.CameraSettings.java", "BodyUseAPI": ["com.android.camera.CameraSettings.removePreference(com.android.camera.PreferenceGroup,pvSt.getKey())", "com.android.camera.ListPreference.getKey()"], "Fixed commit": "62b6fcd5faee08c9041d071891428debab912585", "Url": "https://api.github.com/repos/AOSB/android_packages_apps_Camera2", "Date": "2014-01-04T21:06:34Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (loc == null) loc = new android.location.Location(android.location.LocationManager.NETWORK_PROVIDER);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7576/buggy-version/framework.src.com.phonegap.GeoListener.java", "BodyUseAPI": [], "Fixed commit": "4ff406f9dfccccef6e4ad40c31e856dabd2f3119", "Url": "https://api.github.com/repos/jayway/phonegap-android", "Date": "2010-05-06T22:43:56Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberOfLines > 10) { numberOfSpaces += 9 * 2; numberOfSpaces += (numberOfLines - 9) * 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6729/buggy-version/DisplayPyramid.java", "BodyUseAPI": [], "Fixed commit": "fd01782553edd5a628830e94003df7d95b04524e", "Url": "https://api.github.com/repos/ygchan/Java101", "Date": "2013-07-08T00:04:08Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((moveThread) != null) && ((java.lang.System.nanoTime()) > ((moveThread.threadStartTime) + (BLOCKING_TIME)))) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7269/buggy-version/Paintroid.src.main.java.org.catrobat.paintroid.listener.DrawingSurfaceListener.java", "BodyUseAPI": [], "Fixed commit": "3ccc9ad2a589973fbccd30deeaf5a6f8718ee73f", "Url": "https://api.github.com/repos/cbenkovic/Paintroid", "Date": "2017-01-26T21:56:04Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((java.io.File.separatorChar) == '\\\\') srcName = srcName.replace('\\\\', '/');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3487/buggy-version/src.soot.AbstractJasminClass.java", "BodyUseAPI": [], "Fixed commit": "6c18f3f8a1eb8048be9c634fb14cbbf0391141fe", "Url": "https://api.github.com/repos/GUIpsp/soot", "Date": "2013-07-21T14:59:47Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (newReferencePoint != null) { this.chart.setReferencePoint(newReferencePoint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1400/buggy-version/jmetalsp-consumer.src.main.java.org.uma.jmetalsp.consumer.ChartInDM2Consumer.java", "BodyUseAPI": ["org.uma.jmetalsp.consumer.ChartContainer.setReferencePoint(java.util.List<java.lang.Double>)"], "Fixed commit": "6e9992130d0f34c9ea5de631121fb7992003a2a4", "Url": "https://api.github.com/repos/jMetal/jMetalSP", "Date": "2017-07-12T09:54:23Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerSkill(dmg)) loop = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7612/buggy-version/Battle.java", "BodyUseAPI": [], "Fixed commit": "74aee393bf74c8f9267c62b542ca636b24aa2310", "Url": "https://api.github.com/repos/TomaQ/TextRPG", "Date": "2014-04-27T01:10:32Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((findByUsername(username)) != null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6975/buggy-version/src.main.java.com.herokuapp.polimiboardgamemanager.dao.UserDao.java", "BodyUseAPI": [], "Fixed commit": "ee0f61ae5d36eb20baba19c81d5eeb0456bcf00b", "Url": "https://api.github.com/repos/costi31/polimi-board-game-manager", "Date": "2017-05-25T10:39:09Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((limit) <= 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7626/buggy-version/src.net.dtl.citizenstrader_new.containers.LimitSystem.java", "BodyUseAPI": [], "Fixed commit": "2ac4adbc3637bfffde22c40324ecee1ad4a388fc", "Url": "https://api.github.com/repos/Dandielo/DtlCitizensTrader", "Date": "2012-07-15T18:46:15Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true) { android.content.Intent homeIntent = new android.content.Intent(getApplicationContext(), itp341.wang.cherrie.parkhere.HomeActivity.class); startActivityForResult(homeIntent, 0); itp341.wang.cherrie.parkhere.Debug.printToast(\"Signup Successful\", getApplicationContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8269/buggy-version/ParkHere.app.src.main.java.itp341.wang.cherrie.parkhere.SignupActivity.java", "BodyUseAPI": [], "Fixed commit": "5104ee958bda2dcf5aac2300a960dc0af5ea3f6d", "Url": "https://api.github.com/repos/cherriewang/cs310-parkhere", "Date": "2016-11-02T02:29:03Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nodesList.mNodesStatus.get(position)) == (CloudMedia.CMStatus.PUSHING.str())) { mRemoteMediaNode.stopPushMedia(new com.example.cloudmedia.CloudMedia.SimpleActionListener() { @java.lang.Override public boolean onResult(java.lang.String result) { return true; } }); }else { mRemoteMediaNode.startPushMedia(new com.example.cloudmedia.CloudMedia.SimpleActionListener() { @java.lang.Override public boolean onResult(java.lang.String result) { return true; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6013/buggy-version/democm.src.main.java.com.example.democm.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "da263782acf1711dd24f344d443e396296a77ed0", "Url": "https://api.github.com/repos/nantianyan/ExtMQTT", "Date": "2017-12-15T01:11:50Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (kitName.isEmpty()) { throw new java.lang.Exception(com.earth2me.essentials.I18n._(\"kitError2\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2505/buggy-version/Essentials.src.com.earth2me.essentials.commands.Commandkit.java", "BodyUseAPI": [], "Fixed commit": "8aab57e86b3c3fa2b890273893e63e6c840f2b5d", "Url": "https://api.github.com/repos/essentials/Essentials", "Date": "2012-08-10T01:26:23Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mPosition) != null) && ((mRestaurants) != null)) { android.content.Intent intent = new android.content.Intent(this, com.epicodus.myrestaurants.ui.RestaurantDetailActivity.class); intent.putExtra(Constants.EXTRA_KEY_POSITION, mPosition.toString()); intent.putExtra(Constants.EXTRA_KEY_RESTAURANTS, org.parceler.Parcels.wrap(mRestaurants)); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/9013/buggy-version/app.src.main.java.com.epicodus.myrestaurants.ui.SavedRestaurantListActivity.java", "BodyUseAPI": [], "Fixed commit": "041fb09cddeb7f834c1e0a835843f5c74abd5c3f", "Url": "https://api.github.com/repos/epicodus-lessons/OLD-my-restaurants", "Date": "2016-05-16T18:20:22Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.clonecomputers.lab.darwin.keyboard.KeyMap.getAction(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (action != null) { actions.offer(action); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7304/buggy-version/src.main.java.net.clonecomputers.lab.darwin.keyboard.KeyHandler.java", "BodyUseAPI": ["java.util.Queue<net.clonecomputers.lab.darwin.keyboard.KeyAction>.offer(net.clonecomputers.lab.darwin.keyboard.KeyAction)"], "Fixed commit": "e935aab7cb9842dd9ffd7469c73b21c739b267c2", "Url": "https://api.github.com/repos/LAB-Programming/DarwinsRevenge", "Date": "2015-05-06T22:51:35Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { getActivity().runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { thumbnailImage.setImageURI(localUri); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1613/buggy-version/libs.editor.WordPressEditor.src.main.java.org.wordpress.android.editor.ImageSettingsDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "1373d16f1872c2a6ec1e51332971f2c3914654ab", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2015-11-05T16:42:36Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.debug.core.DebugPlugin.getDefault().getLaunchManager().getEnvironment(org.eclipse.debug.core.ILaunchConfiguration)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (environment != null) { for (java.lang.String envProperty : environment) { int index = envProperty.indexOf('='); if (index > 0) { java.lang.String key = envProperty.substring(0, index); java.lang.String value = envProperty.substring((index + 1)); map.put(key, value); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4854/buggy-version/com.github.sdbg.debug.core.src.com.github.sdbg.debug.core.SDBGLaunchConfigWrapper.java", "BodyUseAPI": [], "Fixed commit": "868c281f8572d2710cf1870635d904e3a1a2cc62", "Url": "https://api.github.com/repos/sdbg/sdbg", "Date": "2014-03-31T20:53:26Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getLoaderManager().getLoader(kuanying.popularmovies.MainActivityFragment.MOVIE_LOADER)) == null) { getLoaderManager().initLoader(kuanying.popularmovies.MainActivityFragment.MOVIE_LOADER, null, this); }else { getLoaderManager().restartLoader(kuanying.popularmovies.MainActivityFragment.MOVIE_LOADER, null, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6231/buggy-version/app.src.main.java.kuanying.popularmovies.MainActivityFragment.java", "BodyUseAPI": ["getLoaderManager().restartLoader(int,<nulltype>,kuanying.popularmovies.MainActivityFragment)", "getLoaderManager().initLoader(int,<nulltype>,kuanying.popularmovies.MainActivityFragment)"], "Fixed commit": "1add7cf03f49e340b370934c12273937fb72bec6", "Url": "https://api.github.com/repos/kuanyingchou/popular-movies", "Date": "2015-09-11T00:29:01Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activity) instanceof com.quanturium.androcloud.activities.FilesActivity) { if (!(((com.quanturium.androcloud.activities.FilesActivity) (activity)).isDualView2())) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8897/buggy-version/src.com.quanturium.androcloud.fragments.FileDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "fb22c19c87e9b2d9c86231f8644489469ffe42c3", "Url": "https://api.github.com/repos/quanturium/AndroCloud", "Date": "2012-12-03T02:07:24Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((session.getAttribute(\"user\")) != null) { session.setAttribute(\"currentPos\", \"error404.html\"); return \"index\"; }else { return \"404\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2844/buggy-version/src.main.java.epam.ph.sg.controllers.ErrorController.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "d8c769acde02888ac63e8b7b8ce4de376453cd27", "Url": "https://api.github.com/repos/nulpteam/school", "Date": "2012-12-03T01:03:27Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((photo) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3789/buggy-version/StaveApp.app.src.main.java.dk.jbfp.staveapp.User.java", "BodyUseAPI": [], "Fixed commit": "c9bbfd6ad38581c8621dc771099c4c17888d01e5", "Url": "https://api.github.com/repos/jbfp/spelling-app", "Date": "2015-10-16T14:34:08Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((word.length()) > 0) word = word.substring(0, ((word.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6955/buggy-version/src.dict.Explorer.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "ce9215f5aac5aa5c07b8b0ec799d4f9e7a33b7dd", "Url": "https://api.github.com/repos/dieggoluis/Speed-Typer", "Date": "2016-03-25T22:27:48Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mediaPlayer) != null) && fromUser) { mediaPlayer.seekTo(progress); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4163/buggy-version/app.src.main.java.pl.bmaraszek.audiodemo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b81c5f4c322e20088723fbdac3a6cbc7cd90122a", "Url": "https://api.github.com/repos/bartekmaraszek/audioDemo", "Date": "2017-01-23T21:42:14Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((x > 150) || (y > 150)) || (x < 0)) || (y < 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4175/buggy-version/src.client.GameHall.java", "BodyUseAPI": [], "Fixed commit": "b8c0b0978f7f949751338ce1b24a1904098b578e", "Url": "https://api.github.com/repos/yangyanzhe/JungleSpeed", "Date": "2015-06-03T12:51:20Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((query == null) || (query.trim().isEmpty())) { org.greenrobot.eventbus.EventBus.getDefault().postSticky(new com.stayfprod.github.event.StopProgressEvent()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/2237/buggy-version/app.src.main.java.com.stayfprod.github.presenter.MainPresenter.java", "BodyUseAPI": [], "Fixed commit": "ac01b2d245ea300c832544b76239ba30ca6639f1", "Url": "https://api.github.com/repos/stayf/githubTest", "Date": "2016-11-24T10:35:40Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (res) { java.lang.String s = selectedFeatures.getFirst().toString(); if (s.equals(de.ovgu.featureide.fm.core.base.FeatureUtils.getRoot(featureModel).toString())) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6185/buggy-version/plugins.de.ovgu.featureide.fm.ui.src.de.ovgu.featureide.fm.ui.editors.featuremodel.actions.CalculateDependencyAction.java", "BodyUseAPI": [], "Fixed commit": "a3cbc0146ca0d24f6f3b3cbc4840c35922ba5e69", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2016-07-06T06:46:30Z"},
{"Line": "=>1194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mRadius) > 0) || ((mRadiusArray) != null)) { mOpaque = false; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7238/buggy-version/graphics.java.android.graphics.drawable.GradientDrawable.java", "BodyUseAPI": [], "Fixed commit": "c01d1045ef6c79000afc6f07a74ee7963a2092ac", "Url": "https://api.github.com/repos/STS-Dev-Team/android_frameworks_base", "Date": "2012-10-31T23:18:04Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (collectFields) fields.add(ctx.getText());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3426/buggy-version/src.soql.QueryEvaluator.java", "BodyUseAPI": [], "Fixed commit": "5eed007a117bde3a3a11330057dc8e175647f10e", "Url": "https://api.github.com/repos/Carlos-Descalzi/force-com-soql-runner", "Date": "2013-12-03T15:13:33Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (val == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3426/buggy-version/src.soql.ResultTableModel.java", "BodyUseAPI": [], "Fixed commit": "5eed007a117bde3a3a11330057dc8e175647f10e", "Url": "https://api.github.com/repos/Carlos-Descalzi/force-com-soql-runner", "Date": "2013-12-03T15:13:33Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputIndex == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8186/buggy-version/src.org.jgll.grammar.slotaction.NotPrecedeActions.java", "BodyUseAPI": [], "Fixed commit": "db1cab5fa6088468bc0b00c26cba44bc01aaec77", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2014-06-18T15:37:19Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pttView) != null) pttView.setBackgroundResource((talking ? R.color.abs__holo_blue_light : R.color.push_to_talk_background));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1835/buggy-version/src.com.morlunk.mumbleclient.app.ChannelActivity.java", "BodyUseAPI": [], "Fixed commit": "16f650d30ab82b2b4ce6ad6a455862a3f6448454", "Url": "https://api.github.com/repos/lugkhast/Plumble", "Date": "2013-04-03T16:09:30Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((current) == null) || ((directory) == null)) { return \"zzNullzz\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8314/buggy-version/MineTweaker3-API.src.main.java.minetweaker.runtime.providers.ScriptIteratorDirectory.java", "BodyUseAPI": [], "Fixed commit": "ebe55c68d25c4a2f47833ad6bf71986a0083ec81", "Url": "https://api.github.com/repos/CraftTweaker/CraftTweaker", "Date": "2016-12-08T17:15:37Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Enumeration<java.net.InetAddress>.nextElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(add.getHostName().startsWith(\"127.\"))) return add.getHostName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1263/buggy-version/src.main.java.com.github.brotherlogic.javaserver.JavaServer.java", "BodyUseAPI": ["java.net.InetAddress.getHostName()"], "Fixed commit": "33809c55c875b09acfc0af615e7a3d90fb65a67e", "Url": "https://api.github.com/repos/brotherlogic/javaserver", "Date": "2016-07-22T01:18:14Z"},
{"Line": "=>2919", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filtered.size()) == 1) { return filtered; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/627/buggy-version/base.org.codehaus.groovy22.src.org.codehaus.groovy.transform.stc.StaticTypeCheckingVisitor.java", "BodyUseAPI": [], "Fixed commit": "8e822399c5698e898a3e3c719c4c20acf1916797", "Url": "https://api.github.com/repos/groovy/groovy-eclipse", "Date": "2017-10-01T22:00:36Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.abs(offsetX)) > (java.lang.Math.abs(offsetY))) { wantV = false; }else if ((java.lang.Math.abs(offsetY)) > (java.lang.Math.abs(offsetX))) { wantV = true; }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6232/buggy-version/uiview.src.main.java.com.angcyo.uiview.design.StickLayout2.java", "BodyUseAPI": ["java.lang.Math.abs(float)", "java.lang.Math.abs(float)"], "Fixed commit": "a8d2bf830abaa7c50214d523e7f48cfce7e841e4", "Url": "https://api.github.com/repos/angcyo/RLibrary", "Date": "2017-04-22T02:02:59Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cloudstack.network.ExternalNetworkDeviceManager.NetworkDevice.getNetworkDevice(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (networkDevice == null) { throw new com.cloud.utils.exception.CloudRuntimeException((\"No network device found for \" + deviceName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8700/buggy-version/plugins.network-elements.nicira-nvp.src.com.cloud.network.element.NiciraNvpElement.java", "BodyUseAPI": [], "Fixed commit": "4683de5a923d43ce69a16adacd423050455dc486", "Url": "https://api.github.com/repos/apache/cloudstack", "Date": "2014-01-13T10:38:48Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.network.dao.NetworkDao.listByPhysicalNetwork(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (networkList == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8700/buggy-version/plugins.network-elements.nicira-nvp.src.com.cloud.network.element.NiciraNvpElement.java", "BodyUseAPI": [], "Fixed commit": "4683de5a923d43ce69a16adacd423050455dc486", "Url": "https://api.github.com/repos/apache/cloudstack", "Date": "2014-01-13T10:38:48Z"},
{"Line": "=>604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.network.dao.NetworkDao.listByPhysicalNetwork(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (networkList != null) { for (com.cloud.network.dao.NetworkVO network : networkList) { if ((network.getBroadcastDomainType()) == (com.cloud.network.Networks.BroadcastDomainType.Lswitch)) { if (((network.getState()) != (Network.State.Shutdown)) && ((network.getState()) != (Network.State.Destroy))) { throw new com.cloud.utils.exception.CloudRuntimeException(\"This Nicira Nvp device can not be deleted as there are one or more logical networks provisioned by cloudstack.\"); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8700/buggy-version/plugins.network-elements.nicira-nvp.src.com.cloud.network.element.NiciraNvpElement.java", "BodyUseAPI": [], "Fixed commit": "4683de5a923d43ce69a16adacd423050455dc486", "Url": "https://api.github.com/repos/apache/cloudstack", "Date": "2014-01-13T10:38:48Z"},
{"Line": "=>1514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (false == (file.exists())) { com.PATHoleilu.hutool.io.FileUtil.touch(file); }else if (false == (file.isFile())) { throw new java.io.IOException(com.PATHoleilu.hutool.util.StrUtil.format(\"Target file [{}] is not a file !\", com.PATHoleilu.hutool.io.FileUtil.getAbsolutePath(file))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6239/buggy-version/src.main.java.com.PATHoleilu.hutool.io.FileUtil.java", "BodyUseAPI": ["com.PATHoleilu.hutool.io.FileUtil.getAbsolutePath(java.io.File)", "java.io.File.isFile()", "com.PATHoleilu.hutool.io.FileUtil.touch(java.io.File)", "com.PATHoleilu.hutool.util.StrUtil.format(java.lang.String,java.lang.String)"], "Fixed commit": "6660860d43a930345702e6b689444e80202cf7f3", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2016-12-01T01:12:59Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.chemistry.opencmis.commons.definitions.PropertyDefinition<?>.getUpdatability()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (updatability == (org.apache.chemistry.opencmis.commons.enums.Updatability.READWRITE)) { org.modeshape.schematic.document.Document jcrValues = props.getDocument(name.getNamespaceUri()); updateProperties.put(cmisPropertyName, properties.cmisValue(pdef, name.getLocalName(), jcrValues)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1131/buggy-version/connectors.modeshape-connector-cmis.src.main.java.org.modeshape.connector.cmis.CmisConnector.java", "BodyUseAPI": [], "Fixed commit": "af9ec6fff445fbe7c4da1d308d5a024de47e879c", "Url": "https://api.github.com/repos/okulikov/modeshape", "Date": "2016-06-15T09:17:13Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentStock) > 0) (currentStock)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1934/buggy-version/SupplyChainManager.src.model.product.Product.java", "BodyUseAPI": [], "Fixed commit": "73d60f70eba059be39cb9fc3a8e339274f05012e", "Url": "https://api.github.com/repos/arianbakh/OOD", "Date": "2017-07-30T15:22:41Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Object>.get(int)", "java.util.ArrayList<java.lang.Object>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (min > max) min = max;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1934/buggy-version/SupplyChainManager.src.controller.product.ProductController.java", "BodyUseAPI": [], "Fixed commit": "73d60f70eba059be39cb9fc3a8e339274f05012e", "Url": "https://api.github.com/repos/arianbakh/OOD", "Date": "2017-07-30T15:22:41Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (object.has(\"name\")) bundle.putString(\"name\", object.getString(\"name\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1378/buggy-version/src.android-app.climbersHangout.src.main.java.com.climbershangout.climbershangout.LoginActivity.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "android.os.Bundle.putString(java.lang.String,object.getString(\"name\"))"], "Fixed commit": "bedefcbc99a539d7a77e17fcae01382e45fc4882", "Url": "https://api.github.com/repos/lyuboasenov/climbers-hangout", "Date": "2017-09-21T20:48:17Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) != 0) now.setText(df.print(new org.joda.time.LocalDateTime()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8727/buggy-version/app.src.main.java.com.vegetarianbaconite.lazyknight.app.NowFragment.java", "BodyUseAPI": [], "Fixed commit": "03fa8ba8305f2ba6e1d88737279cb4748385eef3", "Url": "https://api.github.com/repos/dc74089/LazyKnight", "Date": "2017-11-13T01:30:58Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (prop.isSubProperty()) { type = ((org.sfm.map.impl.SubPropertyMeta<T, P>) (prop)).getLeafType(); }else { type = prop.getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/718/buggy-version/src.main.java.org.sfm.map.impl.PropertyMappingsBuilder.java", "BodyUseAPI": ["org.sfm.map.impl.PropertyMeta<T, P>.getType()"], "Fixed commit": "9acb5f4edc2486376f21b4392350f79bdd94707f", "Url": "https://api.github.com/repos/arnaudroger/SimpleFlatMapper", "Date": "2015-02-22T21:14:09Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((service.getType()) == (org.cloudfoundry.operations.services.ServiceInstanceType.USER_PROVIDED)) { return \"user-provided\"; }else { return service.getService(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5112/buggy-version/plugins.org.springframework.ide.eclipse.boot.dash.src-v2.org.springframework.ide.eclipse.boot.dash.cloudfoundry.client.v2.CFWrappingV2.java", "BodyUseAPI": ["org.cloudfoundry.operations.services.ServiceInstance.getService()"], "Fixed commit": "6399cee55aca553c81a2b40e3ba1ce1fd81e1bcb", "Url": "https://api.github.com/repos/spring-projects/spring-ide", "Date": "2016-04-21T17:57:51Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mErrorImageId) != 0) { setImageResource(mErrorImageId); }else if ((mDefaultImageId) != 0) { setImageResource(mDefaultImageId); }else { setImageBitmap(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/527/buggy-version/src.com.android.volley.toolbox.NetworkImageView.java", "BodyUseAPI": [], "Fixed commit": "10bea64f91c1be06c10b89b0153e85725131e752", "Url": "https://api.github.com/repos/ohmage/ohmageAndroidLib", "Date": "2013-05-28T19:24:12Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((ab + ac) > bc) & ((ab + bc) > ac)) & ((ac + bc) > ab)) { t = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8074/buggy-version/chapter_001.src.main.java.ru.job4j.condition.Triangle.java", "BodyUseAPI": [], "Fixed commit": "eb16b0f301c12ec8c64e3bc66e1a2247b7074207", "Url": "https://api.github.com/repos/abobrovitskiy/abobrovitskiy", "Date": "2017-10-04T06:21:16Z"},
{"Line": "=>557", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(chain.getWatchingKey().getPubKeyPoint().equals(getWatchingKey().getPubKeyPoint()))) throw new com.google.bitcoin.wallet.KeyCrypterException(\"Provided AES key is wrong\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5448/buggy-version/core.src.main.java.com.google.bitcoin.wallet.DeterministicKeyChain.java", "BodyUseAPI": [], "Fixed commit": "b374ba5108328ffe18e28846ff296d48e5fa63d2", "Url": "https://api.github.com/repos/HashEngineering/dashj", "Date": "2014-04-22T20:14:21Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (city != null) { city.getBannedPlayers().add(net.kaikk.mc.gppcities.DataStore.toUUID(results.getBytes(1))); }else { instance.log(java.util.logging.Level.WARNING, ((((((\"Removing orphan ban ID(\" + (results.getInt(1))) + \") city(\") + (results.getInt(2))) + \") '\") + (city.getName())) + \"'\")); statement2.executeUpdate((\"DELETE FROM gppc_bans WHERE id = \" + (net.kaikk.mc.gppcities.DataStore.UUIDtoHexString(net.kaikk.mc.gppcities.DataStore.toUUID(results.getBytes(1)))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1243/buggy-version/src.main.java.net.kaikk.mc.gppcities.DataStore.java", "BodyUseAPI": [], "Fixed commit": "5076a4b1257b8ce381cc0990d789b206efe0d86b", "Url": "https://api.github.com/repos/KaiKikuchi/GriefPreventionPlus-Cities", "Date": "2015-12-31T00:05:59Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getGame().getState()) == (GameState.RUNNING)) { this.checkGameOver(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3906/buggy-version/src.io.github.yannici.bedwars.Game.SingleGameCycle.java", "BodyUseAPI": [], "Fixed commit": "1ecbfbccfde1e2522d651a296537694074254a56", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-04-15T08:38:53Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getGame().getState()) == (GameState.RUNNING)) { this.checkGameOver(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3906/buggy-version/src.io.github.yannici.bedwars.Game.BungeeGameCycle.java", "BodyUseAPI": [], "Fixed commit": "1ecbfbccfde1e2522d651a296537694074254a56", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-04-15T08:38:53Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Double.isNaN(fE)) || (java.lang.Double.isNaN(java.lang.Math.abs(fE)))) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7772/buggy-version/sim.Orbit.java", "BodyUseAPI": [], "Fixed commit": "f13da045a0e4c3cc39530766b5ea285e732d0ffc", "Url": "https://api.github.com/repos/amardhingra/Planet-Builder", "Date": "2015-10-14T06:02:59Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAnimator) == null) { initAnimator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/1425/buggy-version/ToggleButton.src.main.java.com.goav.toggle.ToggleButton.java", "BodyUseAPI": [], "Fixed commit": "fb46c51e4a1f38dacf815de6f2efe78686e51824", "Url": "https://api.github.com/repos/kotow-hub/ToggleButton", "Date": "2017-04-02T11:47:40Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentLinkedQueue<com.aalto.protocol.design.datastructure.Packet>.toArray(com.aalto.protocol.design.datastructure.Packet[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((i < (temp.length)) && (null != (temp[i]))) { newList.offer(temp[i]); windowLinkedList.remove(temp[i]); }else { java.lang.System.out.println(\"Array Index out of bounds exception avoided\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4019/buggy-version/IoTPublishShare.src.com.aalto.protocol.design.datastructure.MyQueue.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentLinkedQueue<com.aalto.protocol.design.datastructure.Packet>.remove(temp[i])", "java.util.concurrent.ConcurrentLinkedQueue<com.aalto.protocol.design.datastructure.Packet>.offer(temp[i])"], "Fixed commit": "bf813c817f9b268ebe50b7d551085cf528d14764", "Url": "https://api.github.com/repos/robinbj86/ProtocolDesign1", "Date": "2013-05-29T18:09:47Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nih.nci.cananolab.restful.view.edit.SampleEditGeneralBean.getErrors()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((errors.size()) > 0) { java.lang.String error = errors.get(0); if (error.contains(\"name is already in use\")) return javax.ws.rs.core.Response.ok(editBean).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8989/buggy-version/software.cananolab-webapp.src.gov.nih.nci.cananolab.restful.SampleServices.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)"], "Fixed commit": "0c967317b3fc22c17d28b25a3f87b45c3c417389", "Url": "https://api.github.com/repos/CBIIT/cananolab", "Date": "2014-08-29T16:33:27Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (repoList.get(i).equals(\"\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6059/buggy-version/src.GitScrape.java", "BodyUseAPI": [], "Fixed commit": "029c02985f543b63f734cc8a4adc773a6a1058d7", "Url": "https://api.github.com/repos/benquach16/Benkins", "Date": "2016-05-31T07:48:27Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openlmis.core.view.widget.SignatureDialog.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (arguments != null) { tvSignatureTitle.setText(arguments.getString(\"title\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7126/buggy-version/app.src.main.java.org.openlmis.core.view.widget.SignatureDialog.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)", "android.widget.TextView.setText(arguments.getString(\"title\"))"], "Fixed commit": "508695e8850d4b7ad2142ccbb6e998f436d45983", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2015-11-17T08:45:42Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((text.equals(\"1\")) || (text.equals(\"0\"))) || (text.equals(\"2\"))) { radonsoft.radoncalc.fragments.converter.inputWindow.setText(((radonsoft.radoncalc.fragments.converter.inputWindow.getText()) + text)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7305/buggy-version/app.src.main.java.radonsoft.radoncalc.fragments.converter.java", "BodyUseAPI": ["android.widget.TextView.setText(((radonsoft.radoncalc.fragments.converter.inputWindow.getText()) + text))"], "Fixed commit": "e91fee7be5f4b6fd45ff6825567e604823548659", "Url": "https://api.github.com/repos/RuslanBarcho/RadonCalc", "Date": "2017-08-20T13:28:31Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((text.equals(\"1\")) || (text.equals(\"0\"))) { radonsoft.radoncalc.fragments.converter.inputWindow.setText(((radonsoft.radoncalc.fragments.converter.inputWindow.getText()) + text)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7305/buggy-version/app.src.main.java.radonsoft.radoncalc.fragments.converter.java", "BodyUseAPI": ["android.widget.TextView.setText(((radonsoft.radoncalc.fragments.converter.inputWindow.getText()) + text))"], "Fixed commit": "e91fee7be5f4b6fd45ff6825567e604823548659", "Url": "https://api.github.com/repos/RuslanBarcho/RadonCalc", "Date": "2017-08-20T13:28:31Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (requestType != null) { com.groupon.odo.controllers.PathOverrideService.getInstance().setRequestType(pathId, requestType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/386/buggy-version/proxyui.src.main.java.com.groupon.odo.controllers.PathController.java", "BodyUseAPI": ["com.groupon.odo.controllers.PathOverrideService.getInstance().setRequestType(java.lang.Integer,java.lang.Integer)"], "Fixed commit": "d851ebcada909c7739da20ec572d653e25826512", "Url": "https://api.github.com/repos/groupon/odo", "Date": "2014-10-10T04:53:03Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.Activity.getSupportFragmentManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fragmentManager.getBackStackEntryCount()) > 0) { android.support.v4.app.FragmentManager.BackStackEntry bottomEntry = fragmentManager.getBackStackEntryAt(0); fragmentManager.popBackStackImmediate(bottomEntry.getId(), FragmentManager.POP_BACK_STACK_INCLUSIVE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4968/buggy-version/EnvSocialApp.src.com.envsocial.android.DetailsActivity.java", "BodyUseAPI": ["android.support.v4.app.FragmentManager.popBackStackImmediate(bottomEntry.getId(),FragmentManager.POP_BACK_STACK_INCLUSIVE)", "android.support.v4.app.FragmentManager.getBackStackEntryAt(int)"], "Fixed commit": "d41c6eafbd8b4fd06bbd16a4d17bb900b7672d8f", "Url": "https://api.github.com/repos/asorici/envsmth", "Date": "2012-11-27T13:38:26Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (temp == null) { in.reset(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3987/buggy-version/src.DParser.java", "BodyUseAPI": [], "Fixed commit": "26122b58ee2bde811be17fe8acb3a524f0a7702e", "Url": "https://api.github.com/repos/lucashmorais/DepSolver", "Date": "2015-03-15T23:56:24Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (temp == null) { in.reset(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3987/buggy-version/src.DParser.java", "BodyUseAPI": [], "Fixed commit": "26122b58ee2bde811be17fe8acb3a524f0a7702e", "Url": "https://api.github.com/repos/lucashmorais/DepSolver", "Date": "2015-03-15T23:56:24Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (temp == null) { in.reset(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/3987/buggy-version/src.DParser.java", "BodyUseAPI": [], "Fixed commit": "26122b58ee2bde811be17fe8acb3a524f0a7702e", "Url": "https://api.github.com/repos/lucashmorais/DepSolver", "Date": "2015-03-15T23:56:24Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((api.getCurrentUser()) != null) { edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.loggedInAs.setText((((((((getResources().getString(R.string.logged_in_as)) + \" \") + (mPrefs.getString(\"username\", \"\"))) + \", Name: \") + (edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.firstName)) + \" \") + (edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.lastInitial))); }else { edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.loggedInAs.setText((((((getResources().getString(R.string.not_logged_in)) + \", Name: \") + (edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.firstName)) + \" \") + (edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.lastInitial))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8262/buggy-version/Android.Car_Ramp_Physics_v2.src.edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.java", "BodyUseAPI": [], "Fixed commit": "3c652343dce86462a4d39aa419d110b1e5da4a33", "Url": "https://api.github.com/repos/beejisbrigit/iSENSE-Hardware", "Date": "2013-09-22T02:44:44Z"},
{"Line": "=>994", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((api.getCurrentUser()) != null) { edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.loggedInAs.setText((((((((getResources().getString(R.string.logged_in_as)) + \" \") + (data.getStringExtra(\"username\"))) + \", Name: \") + (edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.firstName)) + \" \") + (edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.lastInitial))); }else { edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.loggedInAs.setText((((((getResources().getString(R.string.not_logged_in)) + \", Name: \") + (edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.firstName)) + \" \") + (edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.lastInitial))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8262/buggy-version/Android.Car_Ramp_Physics_v2.src.edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.java", "BodyUseAPI": [], "Fixed commit": "3c652343dce86462a4d39aa419d110b1e5da4a33", "Url": "https://api.github.com/repos/beejisbrigit/iSENSE-Hardware", "Date": "2013-09-22T02:44:44Z"},
{"Line": "=>1073", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_OK)) { final android.content.SharedPreferences mPrefs = new edu.uml.cs.isense.supplements.ObscuredSharedPreferences(edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.mContext, edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.mContext.getSharedPreferences(\"USER_INFO\", Context.MODE_PRIVATE)); if (!(edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.inApp)) edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.inApp = true; if ((api.getCurrentUser()) != null) { edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.loggedInAs.setText((((((((getResources().getString(R.string.logged_in_as)) + \" \") + (mPrefs.getString(\"username\", \"\"))) + \", Name: \") + (edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.firstName)) + \" \") + (edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.lastInitial))); }else { edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.loggedInAs.setText((((((getResources().getString(R.string.not_logged_in)) + \", Name: \") + (edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.firstName)) + \" \") + (edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.lastInitial))); } }else { if (!(edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.inApp)) finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8262/buggy-version/Android.Car_Ramp_Physics_v2.src.edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.java", "BodyUseAPI": [], "Fixed commit": "3c652343dce86462a4d39aa419d110b1e5da4a33", "Url": "https://api.github.com/repos/beejisbrigit/iSENSE-Hardware", "Date": "2013-09-22T02:44:44Z"},
{"Line": "=>1106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((api.getCurrentUser()) != null) { edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.loggedInAs.setText((((((((getResources().getString(R.string.logged_in_as)) + \" \") + (mPrefs.getString(\"username\", \"\"))) + \", Name: \") + (edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.firstName)) + \" \") + (edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.lastInitial))); }else { edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.loggedInAs.setText((((((getResources().getString(R.string.not_logged_in)) + \", Name: \") + (edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.firstName)) + \" \") + (edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.lastInitial))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8262/buggy-version/Android.Car_Ramp_Physics_v2.src.edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.java", "BodyUseAPI": [], "Fixed commit": "3c652343dce86462a4d39aa419d110b1e5da4a33", "Url": "https://api.github.com/repos/beejisbrigit/iSENSE-Hardware", "Date": "2013-09-22T02:44:44Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.launchcode.models.data.TwoVarLinearEquationDao.findAll()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((oblist.size()) > 5) { for (int i = 0; i < 5; i++) { newList.add(reverselist.get(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6783/buggy-version/src.main.java.org.launchcode.controllers.AlgebraController.java", "BodyUseAPI": [], "Fixed commit": "cf50c2a8761466d3365706b24dc953f696904b2c", "Url": "https://api.github.com/repos/jaybSTL/techjobs-mvc", "Date": "2017-05-29T20:24:42Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (fo == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7794/buggy-version/node-projects.src.main.java.org.netbeans.modules.nodejs.NodeJSProjectFactory.java", "BodyUseAPI": [], "Fixed commit": "340667ed02a04fc8015fd00b011b1f3210f5e41f", "Url": "https://api.github.com/repos/timboudreau/nb-nodejs", "Date": "2014-02-18T09:45:26Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getOriginal().getLookup().lookup(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dob == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7794/buggy-version/node-projects.src.main.java.org.netbeans.modules.nodejs.node.LibraryFilterNode.java", "BodyUseAPI": [], "Fixed commit": "340667ed02a04fc8015fd00b011b1f3210f5e41f", "Url": "https://api.github.com/repos/timboudreau/nb-nodejs", "Date": "2014-02-18T09:45:26Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((fullImageLoaderThread) != null) && (fullImageLoaderThread.isAlive())) { new android.os.Handler(fullImageLoaderThread.getLooper()).post(new java.lang.Runnable() { @java.lang.Override public void run() { try { final android.graphics.Bitmap bitmap = com.squareup.picasso.Picasso.with(com.example.architecture.bad.myfigurecollection.figuredetail.FigureDetailActivity.this).load(imageUrl).get(); if (bitmap != null) { runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { imageView.setImageBitmap(bitmap); resizeImage(bitmap); } }); } } catch (java.io.IOException e) { android.util.Log.w(com.example.architecture.bad.myfigurecollection.figuredetail.FigureDetailActivity.TAG, \"Full Image not loaded.\"); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/8841/buggy-version/app.src.main.java.com.example.architecture.bad.myfigurecollection.figuredetail.FigureDetailActivity.java", "BodyUseAPI": ["android.os.HandlerThread.getLooper()", "android.os.Handler.post(java.lang.Runnable)"], "Fixed commit": "c72626c8a06f517d2858171e66c14629c686c486", "Url": "https://api.github.com/repos/spawn150/myfigurecollection-bad-architecture", "Date": "2017-03-19T09:06:07Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((task.getContents()) == null) { throw new java.lang.IllegalArgumentException(\"Contents must not be blank\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5453/buggy-version/app.services.TaskPersistenceServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "6ac876752903718d9279d897ceff54c91f211215", "Url": "https://api.github.com/repos/YogoGit/Carroll_CS389_Hibernate", "Date": "2017-03-03T15:31:02Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uri.charAt(0)) != '/') { uri = '/' + uri; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/4148/buggy-version/src.main.java.org.exist.xquery.xproc.xmlcalabash.ProcessFunction.java", "BodyUseAPI": [], "Fixed commit": "b1b28406a2419fe014205433476f495c38510ad5", "Url": "https://api.github.com/repos/eXist-db/xquery-xproc-xmlcalabash-module", "Date": "2017-03-05T17:24:55Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (leftColor > 0) leftColor--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7828/buggy-version/TP1.model.src.main.java.edu.itba.sia.E2GlobalState.java", "BodyUseAPI": [], "Fixed commit": "68d5c4c2827e101c8e282fbdb72e0e3aad07ba43", "Url": "https://api.github.com/repos/apomeran/sia", "Date": "2015-03-28T19:28:36Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (upColor > 0) upColor--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/7828/buggy-version/TP1.model.src.main.java.edu.itba.sia.E2GlobalState.java", "BodyUseAPI": [], "Fixed commit": "68d5c4c2827e101c8e282fbdb72e0e3aad07ba43", "Url": "https://api.github.com/repos/apomeran/sia", "Date": "2015-03-28T19:28:36Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.niccholaspage.nSpleef.Filter.getArenaByPlayer(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (arena == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/6793/buggy-version/src.com.niccholaspage.nSpleef.listeners.nSpleefBlockListener.java", "BodyUseAPI": [], "Fixed commit": "e170a58f7cafde121da2bb80877fb886d2398250", "Url": "https://api.github.com/repos/niccholaspage/nSpleef", "Date": "2011-04-15T19:42:58Z"},
{"Line": "=>1454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GUI.FindDates.getMonth(java.lang.String)", "GUI.FindDates.getMonth(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (thisMonth == startMonth) { if (startDay <= thisDay) { return true; } }else if (thisMonth == endMonth) { if (thisDay <= endDay) { return true; } }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V136/5497/buggy-version/GUI.java", "BodyUseAPI": [], "Fixed commit": "071181b9788abd77d0a49607532e0c6319c80578", "Url": "https://api.github.com/repos/jdang9/financial-project", "Date": "2015-04-28T16:13:31Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (new java.io.File((((dirpath + \"/sol\") + i) + \".txt\")).exists()) java.nio.file.Files.move(java.nio.file.Paths.get((((dirpath + \"/sol\") + i) + \".txt\")), java.nio.file.Paths.get((((solutionPath + \"/sol\") + i) + \".txt\")), java.nio.file.StandardCopyOption.REPLACE_EXISTING);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4625/buggy-version/Simulation.src.pgrid_opt.Main.java", "BodyUseAPI": ["java.nio.file.Paths.get(java.lang.String)", "java.nio.file.Files.move(java.nio.file.Path,java.nio.file.Path,java.nio.file.StandardCopyOption)", "java.nio.file.Paths.get(java.lang.String)"], "Fixed commit": "ccf51148ef129d747bbdb2661ad18c3ea2082cc3", "Url": "https://api.github.com/repos/B00ms/energyGridSimulation", "Date": "2016-04-18T15:01:10Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["transferCoPTrajectory.getPolynomials().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((copSegment.getFinalTime()) - (copSegment.getInitialTime())) > 0.0) { us.ihmc.commonWalkingControlModules.angularMomentumTrajectoryGenerator.YoFrameTrajectory3D cmpSegment = transferCMPTrajectory.getNextSegment(); cmpSegment.set(copSegment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9173/buggy-version/CommonWalkingControlModules.src.us.ihmc.commonWalkingControlModules.instantaneousCapturePoint.smoothCMP.ReferenceCMPTrajectoryGenerator.java", "BodyUseAPI": ["us.ihmc.commonWalkingControlModules.angularMomentumTrajectoryGenerator.YoFrameTrajectory3D.set(us.ihmc.commonWalkingControlModules.angularMomentumTrajectoryGenerator.YoFrameTrajectory3D)"], "Fixed commit": "0af51d9998cb8e3f80e4525b4ff1927c783ed324", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2017-07-25T20:48:01Z"},
{"Line": "=>775", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source.equals(target)) return msi.gama.util.GamaListFactory.create(getType().getContentType());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2275/buggy-version/msi.gama.core.src.msi.gama.util.graph.GamaGraph.java", "BodyUseAPI": [], "Fixed commit": "cb10a72ab77e45ae1f09f011a0efcea1c5b2147a", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2016-07-05T10:39:31Z"},
{"Line": "=>851", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["msi.gama.metamodel.topology.graph.AStar.getShortestPath()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (re == null) { spl3 = msi.gama.util.GamaListFactory.create(getType().getContentType()); }else { spl3 = msi.gama.util.GamaListFactory.create(scope, getType().getContentType(), re); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2275/buggy-version/msi.gama.core.src.msi.gama.util.graph.GamaGraph.java", "BodyUseAPI": ["msi.gama.util.GamaListFactory.create(msi.gama.runtime.IScope,getType().getContentType(),java.util.List)"], "Fixed commit": "cb10a72ab77e45ae1f09f011a0efcea1c5b2147a", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2016-07-05T10:39:31Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index >= (items.size())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7138/buggy-version/src.controlP5.ScrollableList.java", "BodyUseAPI": [], "Fixed commit": "3ef6bdf244703dc8f363ce7d0d4e971df17a4fc8", "Url": "https://api.github.com/repos/sojamo/controlp5", "Date": "2015-03-29T13:59:13Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aktuellesSpielfeld[Gegnerx][Gegnery]) == (Konstanten.MANA)) { aktuellesSpielfeld[Gegnerx][Gegnery] = Konstanten.MANA; aktuellesSpielfeld[altGegx][altGegy] = Konstanten.GEGNER; Gegnerx = altGegx; Gegnery = altGegy; }else if ((aktuellesSpielfeld[Gegnerx][Gegnery]) == (Konstanten.MANA)) { aktuellesSpielfeld[Gegnerx][Gegnery] = Konstanten.MANA; aktuellesSpielfeld[altGegx][altGegy] = Konstanten.GEGNER; Gegnerx = altGegx; Gegnery = altGegy; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2183/buggy-version/src.game.GameFrame.java", "BodyUseAPI": [], "Fixed commit": "933d3946008a22f247a7e2cda294f69dc7a183e9", "Url": "https://api.github.com/repos/propra13-orga/gruppe31", "Date": "2013-06-16T18:24:27Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.LOLLIPOP)) { mToolbar.setTitleTextColor(getResources().getColor(android.R.color.white)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2939/buggy-version/app.src.main.java.com.brightsilence.dev.androidphotobackup.PhotoBackupSettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "405b833e96bb0d2cfd44925c5f34fa209093da6e", "Url": "https://api.github.com/repos/bright-tools/androidphotobackup", "Date": "2015-01-11T01:14:23Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (runResume) populateListView(); else runResume = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3924/buggy-version/src.com.mhmt.autotextmate.activities.Main.java", "BodyUseAPI": [], "Fixed commit": "b11bb78d588fb5683c6eace1178345424a08fc6b", "Url": "https://api.github.com/repos/mhmtk/AutoTextMate", "Date": "2015-05-06T18:21:37Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["i.getExtras().get((((com.malcom.library.android.module.notifications.MCMNotificationModule.ANDROID_MESSAGE_KEY) + \".\") + (com.malcom.library.android.module.notifications.MCMNotificationModule.ANDROID_NOTIFICATION_SOUND_KEY)))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (soundName != null) { notificationSoundId = context.getResources().getIdentifier(soundName, \"raw\", context.getPackageName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7630/buggy-version/src.main.java.com.malcom.library.android.module.notifications.gcm.GCMIntentService.java", "BodyUseAPI": ["context.getResources().getIdentifier(java.lang.String,java.lang.String,context.getPackageName())"], "Fixed commit": "8b008b6310fbb8f061143b0e6011634e3b278bbe", "Url": "https://api.github.com/repos/MyMalcom/malcom-lib-android", "Date": "2013-07-29T15:19:23Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(imageFile.delete())) { logEvent((\"Unable to delete Bitmap \" + imagePath), \"onHandleIntent()\", LogEntry.LogLevel.Warning); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7322/buggy-version/app.src.main.java.com.brohkahn.rsswallpaper.ChangeWallpaperService.java", "BodyUseAPI": [], "Fixed commit": "2748bf4ea21d5713fcb56af63f916fea933d4472", "Url": "https://api.github.com/repos/kbrohkahn/RSS-Wallpaper", "Date": "2016-12-07T00:06:05Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6348/buggy-version/app.src.main.java.com.tejaskoundinya.wordlist.WordListFragment.java", "BodyUseAPI": [], "Fixed commit": "17eb4e2587e4548556def8d7008324e2c636338a", "Url": "https://api.github.com/repos/tejaskoundinya/WordList", "Date": "2015-06-05T13:13:03Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((taskList.getPreviousTasksSize()) == 0) && ((taskList.getSize()) != 1)) { java.lang.System.out.println(NexTask.Logic.ERROR_NOTHING_TO_UNDO); }else { taskList.undoTaskArray(); taskList.undoPrevCommand(); taskList.undoPrevTask(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3119/buggy-version/src.NexTask.Logic.java", "BodyUseAPI": ["NexTask.Storage.undoPrevCommand()", "NexTask.Storage.undoPrevTask()", "NexTask.Storage.undoTaskArray()"], "Fixed commit": "ca6e89ea27090eaaaf45778a352425d5f3064ce8", "Url": "https://api.github.com/repos/cs2103aug2015-t13-2j/main", "Date": "2015-10-14T18:15:46Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (attribs.contains(\"\\\\\\\"\")) { attribs = attribs.replace(\"\\\\\\\"\", \"\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4400/buggy-version/src.MegaHandler.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "4470ff9c70f38e17de03953629dbecdceed7e7c0", "Url": "https://api.github.com/repos/Ale46/Mega-Java", "Date": "2015-04-25T15:00:40Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (decodeGifImage) { builder.append(\"_\").append(\"decodeGifImage\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7701/buggy-version/sketch.src.main.java.me.PATHopan.sketch.request.LoadOptions.java", "BodyUseAPI": [], "Fixed commit": "fd29dee8eda4a2697d9f52c56323ae08b4c35339", "Url": "https://api.github.com/repos/panpf/sketch", "Date": "2016-11-14T08:33:45Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultedMethods[i]) == null) throw new java.lang.RuntimeException((((((\"Missing defaulted constructor for \" + (declaration.getName())) + \" with \") + (i + (firstDefaulted))) + \" parameters in \") + javaClass));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3153/buggy-version/runtime.com.redhat.ceylon.compiler.java.runtime.metamodel.AppliedClass.java", "BodyUseAPI": [], "Fixed commit": "47aeb25642ab06dc7c8c59e80c42ec24ba811ad5", "Url": "https://api.github.com/repos/ceylon/ceylon.language", "Date": "2014-04-23T16:03:14Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((test[0]) != null) { calcard_number = test[0].toString().substring(6, 22); }else { calcard_number = \"0000000000000000\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6650/buggy-version/src.cal.card.upload.OrgSyncAPI.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.Object.toString()"], "Fixed commit": "c7c96fdb2baeeda19630dd2e25082bd88faa9c8b", "Url": "https://api.github.com/repos/ckylape/CalCard", "Date": "2013-10-02T13:48:51Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target < (heading)) { while (change <= 0) { change = (heading) - (getHeading()); heading = getHeading(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2725/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.AutoDrive.java", "BodyUseAPI": [], "Fixed commit": "1b644afcf1443212782b59c160e028a9415dfece", "Url": "https://api.github.com/repos/cooler9711/RelicRecovery", "Date": "2017-12-01T00:22:27Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((heading) > target) { while (change <= 0) { change = (getHeading()) - (heading); heading = getHeading(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2725/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.AutoDrive.java", "BodyUseAPI": [], "Fixed commit": "1b644afcf1443212782b59c160e028a9415dfece", "Url": "https://api.github.com/repos/cooler9711/RelicRecovery", "Date": "2017-12-01T00:22:27Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((br.com.carlosrafaelgn.fplay.ui.UI.getForcedLocale()) != (br.com.carlosrafaelgn.fplay.ui.UI.LOCALE_NONE)) br.com.carlosrafaelgn.fplay.ui.UI.reapplyForcedLocale(getApplication());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8906/buggy-version/src.br.com.carlosrafaelgn.fplay.activity.ActivityHost.java", "BodyUseAPI": [], "Fixed commit": "6216c7bfca99abba6bed39915fdda984a18a8357", "Url": "https://api.github.com/repos/carlosrafaelgn/FPlayAndroid", "Date": "2014-12-31T14:08:51Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (p_config.getInfiniband()) { m_messageReceivers = new de.hhu.bsinfo.dxnet.MessageReceiverStore(((int) (m_ibConfig.getRequestTimeOut().getMs()))); }else { m_messageReceivers = new de.hhu.bsinfo.dxnet.MessageReceiverStore(((int) (m_nioConfig.getRequestTimeOut().getMs()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9240/buggy-version/src.de.hhu.bsinfo.dxnet.DXNet.java", "BodyUseAPI": [], "Fixed commit": "2edca42cc6849b5f4574031b9fc20d3731a7989f", "Url": "https://api.github.com/repos/hhu-bsinfo/dxram", "Date": "2017-08-31T06:39:12Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (p_config.getInfiniband()) { m_messageCreator = new de.hhu.bsinfo.dxnet.core.MessageCreator(((int) (m_ibConfig.getOugoingRingBufferSize().getBytes()))); }else { m_messageCreator = new de.hhu.bsinfo.dxnet.core.MessageCreator(((int) (m_nioConfig.getOugoingRingBufferSize().getBytes()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9240/buggy-version/src.de.hhu.bsinfo.dxnet.DXNet.java", "BodyUseAPI": [], "Fixed commit": "2edca42cc6849b5f4574031b9fc20d3731a7989f", "Url": "https://api.github.com/repos/hhu-bsinfo/dxram", "Date": "2017-08-31T06:39:12Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sid == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/425/buggy-version/src.main.java.ru.sincore.ClientManager.java", "BodyUseAPI": [], "Fixed commit": "25f81f2aa50352bf4f7e3586fdd38265f39fabdb", "Url": "https://api.github.com/repos/ValorVl/jDcHub", "Date": "2011-10-19T05:03:59Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(responseHholder.processed)) { responseHholder.wait(timeout); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2023/buggy-version/smb-core.src.main.java.org.smb.core.MessageRouter.java", "BodyUseAPI": ["org.smb.core.MessageRouter.SynchronMessageResponseHolder.wait(long)"], "Fixed commit": "ee44cfeba78f29c3792d8f9e354d1fb1230b866f", "Url": "https://api.github.com/repos/exense/djigger", "Date": "2016-10-18T10:39:37Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Date.compareTo(java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (toReturn == 0) { toReturn = title.compareTo(other.getTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4688/buggy-version/public.src.main.java.uk.ac.cam.cl.signups.api.Sheet.java", "BodyUseAPI": [], "Fixed commit": "4d0cb1dcb9e357aa1d40622fc1f389df85355b33", "Url": "https://api.github.com/repos/ucam-cl-dtg/urop-2014-signup", "Date": "2014-08-28T10:18:36Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.tassadar.multirommgr.Utils.m_downloadDir) == null) || (com.tassadar.multirommgr.Utils.m_downloadDir.isEmpty())) { com.tassadar.multirommgr.Utils.setDownloadDir(def); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5555/buggy-version/MultiROMMgr.src.main.java.com.tassadar.multirommgr.Utils.java", "BodyUseAPI": [], "Fixed commit": "48e14fdc2df403dd31220cb9d6070c7a1c2a71ad", "Url": "https://api.github.com/repos/Tasssadar/MultiROMMgr", "Date": "2015-01-20T18:45:06Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(outputDirectory.exists())) { getLog().info((\"directory does not exist: \" + (outputDirectory))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5812/buggy-version/src.main.java.com.github.klieber.phantomjs.InstallPhantomJsMojo.java", "BodyUseAPI": [], "Fixed commit": "03cbff6b47adc441caf7ef476edf2056973b07b6", "Url": "https://api.github.com/repos/klieber/phantomjs-maven-plugin", "Date": "2013-09-27T02:55:39Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(outputDirectory.mkdirs())) { getLog().info(\"unable to mkdirs\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5812/buggy-version/src.main.java.com.github.klieber.phantomjs.InstallPhantomJsMojo.java", "BodyUseAPI": [], "Fixed commit": "03cbff6b47adc441caf7ef476edf2056973b07b6", "Url": "https://api.github.com/repos/klieber/phantomjs-maven-plugin", "Date": "2013-09-27T02:55:39Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.entry.getRepositoryManager().getContextManager().getEntry(java.net.URI)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (sourceEntry != null) { sourceEntry.removeRelationSynchronized(statement, rc, this.entry.repository.getValueFactory()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3455/buggy-version/core.core-impl.src.main.java.org.entrystore.impl.MetadataImpl.java", "BodyUseAPI": ["org.entrystore.impl.EntryImpl.removeRelationSynchronized(org.openrdf.model.Statement,org.openrdf.repository.RepositoryConnection,this.entry.repository.getValueFactory())"], "Fixed commit": "cd2ef73b13adb9fb3378a9ab4f0d0a52a9090706", "Url": "https://api.github.com/repos/MetaSolutionsAB/entrystore", "Date": "2015-02-19T12:57:57Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (packsec != null) { org.eclipse.emf.common.util.EList<org.osate.aadl2.Classifier> classifiers = packsec.getOwnedClassifiers(); for (org.osate.aadl2.Classifier cl : classifiers) { org.osate.annexsupport.AnnexUtil.addDefaultSubclauses(cl, result); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6076/buggy-version/org.osate.annexsupport.src.org.osate.annexsupport.AnnexUtil.java", "BodyUseAPI": ["org.osate.aadl2.PackageSection.getOwnedClassifiers()"], "Fixed commit": "d92535a2250f09d1cf4950f111b03fb22410a505", "Url": "https://api.github.com/repos/osate/osate2-core", "Date": "2014-03-26T17:44:03Z"},
{"Line": "=>651", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jetbrains.mylyn.yt.core.YouTrackConnector.getProject(org.eclipse.mylyn.tasks.core.TaskRepository,taskData.getRoot().getMappedAttribute(TaskAttribute.PRODUCT).getValue())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((com.jetbrains.mylyn.yt.core.YouTrackTaskDataHandler.isEnableEditMode()) && (!(project.isCustomFieldsUpdated()))) { project.updateCustomFields(com.jetbrains.mylyn.yt.core.YouTrackConnector.getClient(taskRepository)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7473/buggy-version/com.jetbrains.mylyn.yt.core.src.com.jetbrains.mylyn.yt.core.YouTrackTaskDataHandler.java", "BodyUseAPI": ["com.jetbrains.youtrack.javarest.client.YouTrackProject.updateCustomFields(com.jetbrains.mylyn.yt.core.YouTrackConnector.getClient(taskRepository))"], "Fixed commit": "62b6727cc239aca05e8294f8f4fe2fc055a1bddd", "Url": "https://api.github.com/repos/Amarchuk/youtrack.mylyn.connector", "Date": "2013-10-16T14:55:26Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getArguments().getString(\"playerType\").equals(\"winner\")) { playerButton.setText(\"Winner\"); scoreLabel.setText(\"Win points\"); }else { playerButton.setText(\"Loser\"); scoreLabel.setText(\"Loss points\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1785/buggy-version/android_app.app.src.main.java.com.razorfish.ponghacksscorekeeper.ScoreFragment.java", "BodyUseAPI": [], "Fixed commit": "b842ea5766c808419f74aae75c90eea0f7286e1e", "Url": "https://api.github.com/repos/PureHacks/ponghacks", "Date": "2015-06-15T21:20:25Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (new java.io.File(opdytsConvergencefile).exists()) { playground.agarwalamit.opdyts.plots.OpdytsConvergenceChart opdytsConvergencePlotter = new playground.agarwalamit.opdyts.plots.OpdytsConvergenceChart(); opdytsConvergencePlotter.readFile((finalOUT_DIR + \"/opdyts.con\")); opdytsConvergencePlotter.plotData((finalOUT_DIR + \"/convergence.png\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7837/buggy-version/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.opdyts.patna.networkModesOnly.PatnaNetworkModesCalibrator.java", "BodyUseAPI": [], "Fixed commit": "b76fb44c88f1a0a1df3be602660f4af094a1cb04", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2017-06-17T06:40:02Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (new java.io.File(opdytsConvergencefile).exists()) { playground.agarwalamit.opdyts.plots.OpdytsConvergenceChart opdytsConvergencePlotter = new playground.agarwalamit.opdyts.plots.OpdytsConvergenceChart(); opdytsConvergencePlotter.readFile((finalOUT_DIR + \"/opdyts.con\")); opdytsConvergencePlotter.plotData((finalOUT_DIR + \"/convergence.png\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7837/buggy-version/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.opdyts.patna.allModes.PatnaUrbanOpdytsCalibrator.java", "BodyUseAPI": [], "Fixed commit": "b76fb44c88f1a0a1df3be602660f4af094a1cb04", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2017-06-17T06:40:02Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.bukkit.Bukkit.getServer().getIp().equals(\"\")) { config.addDefault(\"General.bindIp\", \"0.0.0.0\"); }else { config.addDefault(\"General.bindIp\", org.bukkit.Bukkit.getServer().getIp()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2016/buggy-version/src.me.neatmonster.spacebukkit.SpaceBukkit.java", "BodyUseAPI": [], "Fixed commit": "9eb7c860c9d719a603ea9794d76d14ba09945998", "Url": "https://api.github.com/repos/SpaceDev/SpaceBukkit", "Date": "2012-08-21T08:45:38Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((children.size()) == 0) { leftExtent = parser.getCurrentInputIndex(); rightExtent = leftExtent; }else if ((children.size()) == 1) { leftExtent = children.get(0).getLeftExtent(); rightExtent = leftExtent; }else { leftExtent = children.get(0).getLeftExtent(); rightExtent = children.get(((children.size()) - 1)).getRightExtent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3892/buggy-version/src.org.jgll.grammar.slot.HeadGrammarSlot.java", "BodyUseAPI": ["children.get(0).getLeftExtent()", "java.util.List<org.jgll.sppf.SPPFNode>.size()", "children.get(0).getLeftExtent()", "java.util.List<org.jgll.sppf.SPPFNode>.get(int)", "java.util.List<org.jgll.sppf.SPPFNode>.get(((children.size()) - 1))", "java.util.List<org.jgll.sppf.SPPFNode>.get(int)", "java.util.List<org.jgll.sppf.SPPFNode>.size()", "children.get(((children.size()) - 1)).getRightExtent()"], "Fixed commit": "0c9abf35cdddff8b6a1cc9affd0f5c5a97d3601a", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2013-11-08T10:56:54Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (builder.eof()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3834/buggy-version/src.ini4idea.lang.parser.IniParser.java", "BodyUseAPI": [], "Fixed commit": "8b5a9a1493468960b711df2001c3a87cf8fa545f", "Url": "https://api.github.com/repos/av239/ini4idea", "Date": "2012-06-19T14:04:43Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((builder.getTokenType()) == (ini4idea.lang.IniTokenTypes.KEY_CHARACTERS)) { parseAssign(builder); }else { builder.advanceLexer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3834/buggy-version/src.ini4idea.lang.parser.IniParser.java", "BodyUseAPI": ["com.intellij.lang.PsiBuilder.advanceLexer()", "ini4idea.lang.parser.IniParser.parseAssign(com.intellij.lang.PsiBuilder)"], "Fixed commit": "8b5a9a1493468960b711df2001c3a87cf8fa545f", "Url": "https://api.github.com/repos/av239/ini4idea", "Date": "2012-06-19T14:04:43Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (firstblock == null) throw new java.lang.IllegalArgumentException(\"Block cannot be null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5485/buggy-version/TrainModel.src.Train.java", "BodyUseAPI": [], "Fixed commit": "b2f838c23a5a6a6a97235bec3087690cf781db87", "Url": "https://api.github.com/repos/zoo1/ECE_1186_Trains", "Date": "2015-04-21T02:53:26Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (UID == null) throw new java.lang.IllegalArgumentException(\"UID cannot be null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5485/buggy-version/TrainModel.src.Train.java", "BodyUseAPI": [], "Fixed commit": "b2f838c23a5a6a6a97235bec3087690cf781db87", "Url": "https://api.github.com/repos/zoo1/ECE_1186_Trains", "Date": "2015-04-21T02:53:26Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (timemodifier <= 0) throw new java.lang.IllegalArgumentException(\"TimeModifier cannot be less than of equal to zero\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5485/buggy-version/TrainModel.src.Train.java", "BodyUseAPI": [], "Fixed commit": "b2f838c23a5a6a6a97235bec3087690cf781db87", "Url": "https://api.github.com/repos/zoo1/ECE_1186_Trains", "Date": "2015-04-21T02:53:26Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.ServletContext.getAttribute(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(acct.containsAccount(victimName))) { request.setAttribute(\"err\", \"doesNotExist\"); javax.servlet.RequestDispatcher dispatch = request.getRequestDispatcher(\"userHomePage.jsp\"); dispatch.forward(request, response); }else if ((!(fmgr.areFriends(victimName, ((java.lang.String) (session.getAttribute(\"username\")))))) && (!(acct.isPagePublic(victimName)))) { request.setAttribute(\"err\", \"userPrivate\"); javax.servlet.RequestDispatcher dispatch = request.getRequestDispatcher(\"userHomePage.jsp\"); dispatch.forward(request, response); }else { javax.servlet.RequestDispatcher dispatch = request.getRequestDispatcher(\"userInfoPage.jsp\"); dispatch.forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4792/buggy-version/src.userPackage.UserSearchServlet.java", "BodyUseAPI": ["userPackage.AccountManager.isPagePublic(java.lang.String)", "userPackage.FriendManager.areFriends(java.lang.String,((java.lang.String) (session.getAttribute(\"username\"))))"], "Fixed commit": "3814d32c7c120e9ee0d51177bb48207c53d5268b", "Url": "https://api.github.com/repos/chantat/CS108FinalProject", "Date": "2012-12-08T02:16:17Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((filePath.indexOf(\"!\")) != (-1)) { java.io.InputStream input = cn.dremy.hfut.hfutedulib.common.XmlParser.class.getResourceAsStream(\"/urls.xml\"); document = reader.read(input); }else { java.io.File file = new java.io.File(filePath); document = reader.read(file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4567/buggy-version/src.main.java.cn.dremy.hfut.hfutedulib.common.XmlParser.java", "BodyUseAPI": [], "Fixed commit": "6fda17926336575a8cf55acc642234eac1f1aad5", "Url": "https://api.github.com/repos/DremyGit/HfutEduLib", "Date": "2015-10-26T17:37:53Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (field.getType().toString().equals(\"double\")) { try { field.set(this, java.lang.Double.parseDouble(prop.getProperty(field.getName()))); } catch (java.lang.NumberFormatException nfe) { java.lang.System.out.println(((((\"Exception \" + nfe) + \" while trying to parse the field \") + (field.getName())) + \" for an double\")); nfe.printStackTrace(); } catch (java.lang.IllegalAccessException iae) { java.lang.System.out.println((((\"Exception \" + iae) + \" while trying to set the field \") + (field.getName()))); iae.printStackTrace(); } }else if (field.getType().toString().equals(\"boolean\")) { try { if ((prop.getProperty(field.getName()).equals(\"true\")) || (prop.getProperty(field.getName()).equals(\"false\"))) { field.set(this, java.lang.Boolean.parseBoolean(prop.getProperty(field.getName()))); }else { throw new housing.Config.BooleanFormatException(((\"For input string \\\"\" + (prop.getProperty(field.getName()))) + \"\\\"\")); } } catch (housing.Config.BooleanFormatException bfe) { java.lang.System.out.println(((((\"Exception \" + bfe) + \" while trying to parse the field \") + (field.getName())) + \" for a boolean\")); bfe.printStackTrace(); } catch (java.lang.IllegalAccessException iae) { java.lang.System.out.println((((\"Exception \" + iae) + \" while trying to set the field \") + (field.getName()))); iae.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8338/buggy-version/modelsrc.housing.Config.java", "BodyUseAPI": ["java.lang.Boolean.parseBoolean(java.lang.String)", "java.lang.reflect.Field.getName()", "java.lang.String.equals(java.lang.String)", "java.lang.reflect.Field.getName()", "java.lang.reflect.Field.getName()", "java.lang.reflect.Field.getName()", "java.lang.reflect.Field.getName()", "java.util.Properties.getProperty(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.lang.reflect.Field.getName()", "java.util.Properties.getProperty(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.util.Properties.getProperty(java.lang.String)", "java.lang.reflect.Field.set(housing.Config,double)", "java.lang.reflect.Field.getName()", "java.lang.reflect.Field.getType()", "java.lang.reflect.Field.getName()", "java.lang.Class<?>.toString()", "java.lang.reflect.Field.set(housing.Config,boolean)", "java.io.PrintStream.println(java.lang.String)", "java.util.Properties.getProperty(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.lang.reflect.Field.getName()", "java.util.Properties.getProperty(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "0e70790ebb8dc31812af6225037d919cea644c57", "Url": "https://api.github.com/repos/EconomicSL/housing-model", "Date": "2017-04-22T16:36:59Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (walletEncryptionType == (org.bitcoinj.wallet.Protos.Wallet.EncryptionType.ENCRYPTED_SCRYPT_AES)) { if (walletProto.hasEncryptionParameters()) { org.bitcoinj.wallet.Protos.ScryptParameters encryptionParameters = walletProto.getEncryptionParameters(); keyCrypter = new com.google.bitcoin.crypto.KeyCrypterScrypt(encryptionParameters); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2350/buggy-version/src.main.java.org.multibit.store.MultiBitWalletProtobufSerializer.java", "BodyUseAPI": [], "Fixed commit": "49c4515f12c2cc967ad4486180326ddaa4fdc7c9", "Url": "https://api.github.com/repos/da2ce7/multibit", "Date": "2013-01-20T18:08:37Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.multibit.store.MultiBitWalletProtobufSerializer.parseToProto(java.io.InputStream)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (walletProto.hasEncryptionType()) { walletEncryptionType = walletProto.getEncryptionType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2350/buggy-version/src.main.java.org.multibit.store.MultiBitWalletProtobufSerializer.java", "BodyUseAPI": ["com.google.bitcoin.core.Wallet.getEncryptionType()"], "Fixed commit": "49c4515f12c2cc967ad4486180326ddaa4fdc7c9", "Url": "https://api.github.com/repos/da2ce7/multibit", "Date": "2013-01-20T18:08:37Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (halfStMillis == 0) { halfStMillis = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4697/buggy-version/spf4j-core.src.main.java.org.spf4j.stackmonitor.Sampler.java", "BodyUseAPI": [], "Fixed commit": "cc410d77df7d4dbf1b357d0dbd445faf355ff201", "Url": "https://api.github.com/repos/zolyfarkas/spf4j", "Date": "2017-03-23T13:19:56Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkCornerCase(rooms)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8352/buggy-version/src.WallsAndGates.java", "BodyUseAPI": [], "Fixed commit": "49d18d134230992879d5ac40c8eb72854b9e38cf", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-08-06T18:29:19Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkCornerCase(rooms)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8352/buggy-version/src.WallsAndGates.java", "BodyUseAPI": [], "Fixed commit": "49d18d134230992879d5ac40c8eb72854b9e38cf", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-08-06T18:29:19Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"default\".equals(name)) { return \"\"; }else { return versions.iterator().next().getVersion(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8158/buggy-version/ceylon.src.main.java.com.redhat.ceylon.cmr.ceylon.RepoUsingTool.java", "BodyUseAPI": [], "Fixed commit": "867ab961fa7940bfba5711497a5d16c253a4cf2e", "Url": "https://api.github.com/repos/ceylon/ceylon-module-resolver", "Date": "2014-02-26T10:34:59Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.morbz.osmonaut.MemoryEntityMap<T>.getBucketId(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(arraySpaceAllocated(bucketId))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2185/buggy-version/src.main.java.net.morbz.osmonaut.MemoryEntityMap.java", "BodyUseAPI": [], "Fixed commit": "24d26e3f12ea952e3dde2826270a86e9cb66bb3d", "Url": "https://api.github.com/repos/MorbZ/OSMonaut", "Date": "2016-09-03T14:14:17Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(firstPreExpr.equals(exprs.get(root.data).toString()))) { return null; }else { seqMode++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7919/buggy-version/src.coverage.ObservedCoverageHelper.java", "BodyUseAPI": [], "Fixed commit": "49ffda25404f4a9128c0f68835ff4eb79d459a80", "Url": "https://api.github.com/repos/MENG2010/lustre", "Date": "2016-06-27T16:31:54Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.nexttonothing.next.mcx.McX.economy) != null) EconomyUpdater.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/292/buggy-version/src.me.nexttonothing.next.mcx.McX.java", "BodyUseAPI": [], "Fixed commit": "51f1a000718c0503786c89348436b206d3e7c948", "Url": "https://api.github.com/repos/NextToNothing/McX", "Date": "2012-08-13T19:04:45Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (catalogItem instanceof brooklyn.catalog.internal.CatalogItemDo<?, ?>) { catalogItem = ((brooklyn.catalog.internal.CatalogItemDo<?, ?>) (catalogItem)).getDto(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9096/buggy-version/core.src.main.java.brooklyn.entity.rebind.dto.MementosGenerators.java", "BodyUseAPI": [], "Fixed commit": "8542c515e9ed8572ea82b48a9d491ccd8619dc04", "Url": "https://api.github.com/repos/apache/incubator-brooklyn", "Date": "2015-03-13T09:12:02Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getIntExtra(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (position == (-1)) { android.util.Log.e(\"ChangeReminder\", \"no reminder position\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8155/buggy-version/app.src.main.java.com.devolta.dailyremind.ChangeReminder.java", "BodyUseAPI": [], "Fixed commit": "bff8cfea57eb3e2cac65bee0136ef1b833c3fc06", "Url": "https://api.github.com/repos/Devolta/DailyRemind", "Date": "2016-08-16T19:55:24Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(message)) { logEvents.add(new com.amazonaws.services.logs.model.InputLogEvent().withMessage(message).withTimestamp(time.getTime())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6027/buggy-version/src.main.java.no.cantara.cs.cloudwatch.CloudWatchLogger.java", "BodyUseAPI": ["new com.amazonaws.services.logs.model.InputLogEvent().withMessage(message).withTimestamp(long)", "com.amazonaws.services.logs.model.InputLogEvent.withMessage(java.lang.String)", "java.util.List<com.amazonaws.services.logs.model.InputLogEvent>.add(new com.amazonaws.services.logs.model.InputLogEvent().withMessage(message).withTimestamp(time.getTime()))"], "Fixed commit": "d95df2d8faba39304464ea3b22d3a70d85ca5c04", "Url": "https://api.github.com/repos/Cantara/ConfigService", "Date": "2016-04-29T07:35:01Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((move.getRow()) == 0) && ((board2[move.getRow()][move.getCol()]) == (com.wackywozniaks.games.checkers2.Checkers.RED))) board2[move.getRow()][move.getCol()] = com.wackywozniaks.games.checkers2.Checkers.RED_KING; else if (((move.getRow()) == 7) && ((board2[move.getRow()][move.getCol()]) == (com.wackywozniaks.games.checkers2.Checkers.WHITE))) board2[move.getRow()][move.getCol()] = com.wackywozniaks.games.checkers2.Checkers.WHITE_KING;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/672/buggy-version/WW-Games-2.src.main.java.com.wackywozniaks.games.checkers2.Checkers.java", "BodyUseAPI": ["com.wackywozniaks.games.checkers2.CheckersMove.getRow()", "com.wackywozniaks.games.checkers2.CheckersMove.getRow()", "com.wackywozniaks.games.checkers2.CheckersMove.getCol()", "com.wackywozniaks.games.checkers2.CheckersMove.getRow()", "com.wackywozniaks.games.checkers2.CheckersMove.getCol()", "com.wackywozniaks.games.checkers2.CheckersMove.getRow()", "com.wackywozniaks.games.checkers2.CheckersMove.getCol()"], "Fixed commit": "0cbad2217af12f2d20baabbd7d079e2c859089ee", "Url": "https://api.github.com/repos/Wacky-Wozniaks/WW-Games", "Date": "2017-05-16T22:46:15Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startVerse == null) { startChapter = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7259/buggy-version/src.main.java.com.joeldholmes.services.impl.TaoService.java", "BodyUseAPI": [], "Fixed commit": "333daab6e5dd8ac6c543b95674b737764fad793d", "Url": "https://api.github.com/repos/Holmes89/sacred-text-api", "Date": "2016-10-05T14:21:11Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (m.find()) { try { newsTime = sdf.parse(((((((((((m.group(1)) + \"-\") + (m.group(2))) + \"-\") + (m.group(3))) + \" \") + (m.group(4))) + \":\") + (m.group(5))) + \":00\")); } catch (java.text.ParseException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2994/buggy-version/src.main.java.crawler.processor.ProcessorSina.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)", "java.text.SimpleDateFormat.parse(java.lang.String)", "java.util.regex.Matcher.group(int)", "java.util.regex.Matcher.group(int)", "java.util.regex.Matcher.group(int)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "f6922d8ac97572d5bd8a2e6e447f231862bf520f", "Url": "https://api.github.com/repos/Kootain/news-crawler", "Date": "2016-07-05T08:36:07Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((artistInput.isEmpty()) || (titleInput.isEmpty())) { android.widget.Toast.makeText(com.example.rotem.beats.MyApplication.getAppContext(), \"Artist/Title can't be empty\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8594/buggy-version/app.src.main.java.com.example.rotem.beats.Dialogs.AddSongDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "c3703b3f19c8e588fc8afd5d2031e52efa3a2489", "Url": "https://api.github.com/repos/rotem-ad/Beats", "Date": "2016-08-13T22:26:48Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (path.startsWith(\"shadow\")) { importPaths = new java.util.ArrayList<java.nio.file.Path>(); importPaths.add(config.getSystemImport()); }else { importPaths = config.getImports(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5664/buggy-version/src.main.java.shadow.typecheck.TypeCollector.java", "BodyUseAPI": [], "Fixed commit": "4f3de406beff30fc174d1c717c3d815ea748a2e9", "Url": "https://api.github.com/repos/TeamShadow/shadow", "Date": "2015-06-10T19:20:42Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (url != null) { try { java.net.HttpURLConnection.setFollowRedirects(false); java.net.HttpURLConnection httpURLConnection = ((java.net.HttpURLConnection) (new java.net.URL(url).openConnection())); httpURLConnection.setRequestMethod(\"HEAD\"); if ((httpURLConnection.getResponseCode()) != (java.net.HttpURLConnection.HTTP_NOT_FOUND)) { url = null; } } catch (java.lang.Exception ex) { url = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8070/buggy-version/dockstore-webservice.src.main.java.io.dockstore.webservice.helpers.DAGHelper.java", "BodyUseAPI": ["java.net.URL.openConnection()"], "Fixed commit": "a0ff07c18392d47c27e73c489a62463db7251285", "Url": "https://api.github.com/repos/ga4gh/dockstore", "Date": "2016-10-19T16:04:53Z"},
{"Line": "=>1304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_showWings) && ((_deshonor) > 0)) { str.append(\",\"); str.append(((_deshonor) > 0 ? 1 : 0)).append(';'); }else { str.append(\";\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2864/buggy-version/src.fr.edofus.ancestra.evolutive.client.Player.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(int)"], "Fixed commit": "5a4eb630455725c03ba99db93c60c8697978a78e", "Url": "https://api.github.com/repos/F-Locos/Ancestra-Evolutive", "Date": "2014-05-02T11:31:49Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (railo.commons.lang.StringUtil.isEmpty(object)) object = railo.runtime.op.Constants.DOUBLE_ZERO;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4143/buggy-version/railo-java.railo-core.src.railo.runtime.functions.displayFormatting.DecimalFormat.java", "BodyUseAPI": [], "Fixed commit": "0b03336d3eeb9e6dcb48b61119996ad6540a5f00", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-04-18T15:23:59Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((attributes) != null) { packageToCreate.setData(attributes.getContents()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1122/buggy-version/src.main.java.com.silanis.esl.sdk.DocumentPackage.java", "BodyUseAPI": [], "Fixed commit": "25eaf223ccde3289dd087cf4b9d441dd4e895d74", "Url": "https://api.github.com/repos/silanis/esl.sdk.java", "Date": "2013-10-29T23:00:19Z"},
{"Line": "=>581", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.PriorityQueue<StaticEvent>.peek()", "java.util.PriorityQueue<StaticEvent>.poll()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((temp.getStartTime().get(java.util.Calendar.YEAR)) == (freetime.getStartTime().get(java.util.Calendar.YEAR))) && ((temp.getStartTime().get(java.util.Calendar.MONTH)) == (freetime.getStartTime().get(java.util.Calendar.MONTH)))) && (((temp.getStartTime().get(java.util.Calendar.DAY_OF_MONTH)) - (freetime.getStartTime().get(java.util.Calendar.DAY_OF_MONTH))) > 0)) { sortedfreeList.add(freetime); }else { freeList.add(freetime); sortedStaticEList.poll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/324/buggy-version/Algorithm.CalenderSort.src.EventListHandler.java", "BodyUseAPI": ["java.util.PriorityQueue<StaticEvent>.add(StaticEvent)", "java.util.PriorityQueue<StaticEvent>.add(StaticEvent)"], "Fixed commit": "bcb2969e18c4e86dbb841cabfbc7cde8a3fe86d0", "Url": "https://api.github.com/repos/ucsdCSE110wi16/CSE110W240T9", "Date": "2016-03-07T17:50:56Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, web.crawler.db.model.Doc>.get(wd.getDocHash())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (doc != null) allRanks = doc.getPageRankings(); else { java.lang.System.out.println(\"Searching: found NULL Doc !!!!!!!!!!!!\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/638/buggy-version/src.main.java.web.crawler.controller.Searching.java", "BodyUseAPI": ["web.crawler.db.model.Doc.getPageRankings()"], "Fixed commit": "253ab90e4cd7ef6473427f0acf2dc59a9ffbe7b8", "Url": "https://api.github.com/repos/AlphaDevGE/Crawler", "Date": "2016-03-20T23:22:43Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["web.crawler.db.model.Index.getDocuments()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (wordDocList == null) java.lang.System.out.println(\"wordDocList is null\"); else java.lang.System.out.println((\"wordDocList Size: \" + (wordDocList.size())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/638/buggy-version/src.main.java.web.crawler.controller.Searching.java", "BodyUseAPI": ["java.util.List<web.crawler.db.model.WordDoc>.size()", "java.io.PrintStream.println((\"wordDocList Size: \" + (wordDocList.size())))"], "Fixed commit": "253ab90e4cd7ef6473427f0acf2dc59a9ffbe7b8", "Url": "https://api.github.com/repos/AlphaDevGE/Crawler", "Date": "2016-03-20T23:22:43Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<kaaes.spotify.webapi.android.models.Artist>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (((artist != null) && ((artist.images) != null)) && ((artist.images.size()) > 0)) { kaaes.spotify.webapi.android.models.Image artistImage = artist.images.get(0); holder.name.setText(artist.name); com.squareup.picasso.Picasso.with(getActivity()).load(artistImage.url).resize(80, 80).centerCrop().into(holder.thumbnail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9108/buggy-version/app.src.main.java.edu.buffalo.pratikla.spotifystreamer.MainActivityFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(artist.name)", "artist.images.get(int)"], "Fixed commit": "04f2088618b0f47bd62d4fc3e76ccc4e42e5ce66", "Url": "https://api.github.com/repos/plade/SpotifyStreamer", "Date": "2015-06-30T22:21:46Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (src instanceof org.spongepowered.api.entity.living.player.Player) player = ((org.spongepowered.api.entity.living.player.Player) (src));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5952/buggy-version/src.main.java.net.mohron.skyclaims.command.CommandList.java", "BodyUseAPI": [], "Fixed commit": "c5b4c79e14f6e207a7241f575521556d94a75b30", "Url": "https://api.github.com/repos/DevOnTheRocks/SkyClaims", "Date": "2017-01-09T22:10:44Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(line.isEmpty())) { java.lang.String[] vertexs = line.trim().split(\"\\\\s+\"); for (java.lang.String adjVertex : vertexs) { currentAdjList.add(g.getVertex(java.lang.Integer.parseInt(adjVertex))); } currentIndex++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4419/buggy-version/src.Solver.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "3e7cd8b4cf74cd164db58fba555e2c37ea00ffd8", "Url": "https://api.github.com/repos/asclepiusaka/VertexCover", "Date": "2017-11-08T20:16:24Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.client.Minecraft.getMinecraft().getTextureManager().getTexture(TextureMap.locationBlocksTexture)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (iTextureObject == null) { com.m4thg33k.m4ththings.Utility.LogHelper.info(\"Bad texture...\"); }else { validTexture = iTextureObject.getGlTextureId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2634/buggy-version/src.main.java.com.m4thg33k.m4ththings.renderers.tiles.utilities.RendererHelper.java", "BodyUseAPI": ["net.minecraft.client.renderer.texture.ITextureObject.getGlTextureId()"], "Fixed commit": "f12b738c44e5d6c1ef964f4840517afc7505c3bb", "Url": "https://api.github.com/repos/M4thG33k/M4thThings1_8", "Date": "2016-01-21T20:55:10Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.m4thg33k.m4ththings.renderers.tiles.utilities.RendererHelper.blockTextures) == null) { com.m4thg33k.m4ththings.Utility.LogHelper.info(\"Danger Will Robinson! The texture is null...for some reason...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2634/buggy-version/src.main.java.com.m4thg33k.m4ththings.renderers.tiles.utilities.RendererHelper.java", "BodyUseAPI": [], "Fixed commit": "f12b738c44e5d6c1ef964f4840517afc7505c3bb", "Url": "https://api.github.com/repos/M4thG33k/M4thThings1_8", "Date": "2016-01-21T20:55:10Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ning.billing.util.notificationq.NotificationQueue.getNotificationForAccountAndDate(java.util.UUID,org.joda.time.DateTime)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((existingNotifications.size()) > 0) { com.ning.billing.invoice.notification.DefaultNextBillingDatePoster.log.info(java.lang.String.format(\"%s : notification for account %s and date %s already exist, skip...\", DefaultNextBillingDateNotifier.NEXT_BILLING_DATE_NOTIFIER_QUEUE, accountId, futureNotificationTime)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/528/buggy-version/invoice.src.main.java.com.ning.billing.invoice.notification.DefaultNextBillingDatePoster.java", "BodyUseAPI": [], "Fixed commit": "4c4b6483df0050627af1217628854346d4cded53", "Url": "https://api.github.com/repos/ning/killbill", "Date": "2012-07-07T05:34:30Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.technophobia.substeps.runner.builder.ScenarioNodeBuilder.log.isDebugEnabled()) { com.technophobia.substeps.runner.builder.ScenarioNodeBuilder.log.debug(((\"Failed to parse\" + (scenario.getDescription())) + \", creating dummy node\"), t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7336/buggy-version/src.main.java.com.technophobia.substeps.runner.builder.ScenarioNodeBuilder.java", "BodyUseAPI": ["org.slf4j.Logger.debug(((\"Failed to parse\" + (scenario.getDescription())) + \", creating dummy node\"),java.lang.Throwable)"], "Fixed commit": "9fdfd124f69252c4a051ee8cb88f3409f98ef233", "Url": "https://api.github.com/repos/technophobia/substeps-core", "Date": "2012-12-21T08:29:28Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.technophobia.substeps.runner.node.AbstractNodeRunner.log.isTraceEnabled()) { com.technophobia.substeps.runner.node.AbstractNodeRunner.log.trace(\"node success\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7336/buggy-version/src.main.java.com.technophobia.substeps.runner.node.AbstractNodeRunner.java", "BodyUseAPI": ["org.slf4j.Logger.trace(java.lang.String)"], "Fixed commit": "9fdfd124f69252c4a051ee8cb88f3409f98ef233", "Url": "https://api.github.com/repos/technophobia/substeps-core", "Date": "2012-12-21T08:29:28Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.technophobia.substeps.runner.node.AbstractNodeRunner.log.isDebugEnabled()) { com.technophobia.substeps.runner.node.AbstractNodeRunner.log.debug(\"node failures\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7336/buggy-version/src.main.java.com.technophobia.substeps.runner.node.AbstractNodeRunner.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "9fdfd124f69252c4a051ee8cb88f3409f98ef233", "Url": "https://api.github.com/repos/technophobia/substeps-core", "Date": "2012-12-21T08:29:28Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getInternalCycleCurriculumGrops().isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7966/buggy-version/src.main.java.net.sourceforge.fenixedu.domain.StudentCurricularPlan.java", "BodyUseAPI": [], "Fixed commit": "4cd6fd6513a4b3e3153764187b2caf063953b4b5", "Url": "https://api.github.com/repos/diutsu/fenix", "Date": "2013-11-05T18:46:08Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["entity.GameBoard.getField(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((field.getID()) != 4) { boundary.getButtonPressed(language.fieldMsg(fieldNumber)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5655/buggy-version/src.control.SequenceController.java", "BodyUseAPI": [], "Fixed commit": "d7a43543dadc9742d9bf4d238fc87190bae3bbb1", "Url": "https://api.github.com/repos/DTU-GROUP32/CDIO4", "Date": "2017-01-11T14:21:20Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.game.client.GameClient.getDelta()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (delta <= 100) gui.update(delta);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6843/buggy-version/Game.src.com.game.client.GameClient.java", "BodyUseAPI": ["com.game.client.Gui.update(float)"], "Fixed commit": "ba74e2970fc8fafdc65b5ca72c33a5699a68e53e", "Url": "https://api.github.com/repos/DevCrucio/Game", "Date": "2015-06-01T12:37:53Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.jangaroo.jooc.mxml.MxmlToModelParser.createClassNameFromNode(org.w3c.dom.Element)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (superClassName == null) { throw net.jangaroo.jooc.Jooc.error((((\"Could not resolve super class from node \" + (objectNode.getNamespaceURI())) + \":\") + (objectNode.getLocalName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7010/buggy-version/jangaroo.jangaroo-compiler.src.main.java.net.jangaroo.jooc.mxml.MxmlToModelParser.java", "BodyUseAPI": [], "Fixed commit": "6fc1c53ef17a26d719c65befc898fd18e82a4f7c", "Url": "https://api.github.com/repos/CoreMedia/jangaroo-tools", "Date": "2013-03-25T14:24:05Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (day < 0) day += assumed.length;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2393/buggy-version/RujelCurriculum.Sources.net.rujel.curriculum.WeekFootprint.java", "BodyUseAPI": [], "Fixed commit": "69b0db32cfe4fa57f5ca2dedfb0364c35902846e", "Url": "https://api.github.com/repos/baywind/rujel", "Date": "2012-03-12T09:02:34Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((course.getFixedRoomList().size()) > 0) { storage.scheduleList.add(new main.domain.Schedule(course, storage.getClassroom(course.getFixedRoomList().get(0)), storage.dayList.get(0))); }else { storage.scheduleList.add(new main.domain.Schedule(course, storage.classroomList.get(0), storage.dayList.get(0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2137/buggy-version/SchedulerFLM2.src.main.java.main.data.ImportData.java", "BodyUseAPI": ["main.data.DataStorage.getClassroom(course.getFixedRoomList().get(0))", "storage.scheduleList.add(main.domain.Schedule)", "main.domain.Course.getFixedRoomList()", "storage.scheduleList.add(main.domain.Schedule)", "course.getFixedRoomList().get(int)"], "Fixed commit": "80ad27f93757820063273546debbed7fe807c2ec", "Url": "https://api.github.com/repos/drools/sxdrools", "Date": "2012-06-19T00:47:04Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(supportedPC.replace(\" \", \"\").equals(\"\"))) { this.supportedPCList = new java.util.ArrayList<java.lang.String>(java.util.Arrays.asList(supportedPC.split(\",\"))); }else { this.supportedPCList = new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2137/buggy-version/SchedulerFLM2.src.main.java.main.domain.Course.java", "BodyUseAPI": [], "Fixed commit": "80ad27f93757820063273546debbed7fe807c2ec", "Url": "https://api.github.com/repos/drools/sxdrools", "Date": "2012-06-19T00:47:04Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(playerInfos.getStyleClass().contains(\"money\"))) playerInfos.getStyleClass().add(\"money\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2881/buggy-version/src.main.java.fr.utc.lo23.client.ihm_table.controllers.PlayerController.java", "BodyUseAPI": ["javafx.scene.control.Label.getStyleClass()", "playerInfos.getStyleClass().add(java.lang.String)"], "Fixed commit": "069ca447c050d75524db1a3d90512d269d1953de", "Url": "https://api.github.com/repos/VictorBac/LO23", "Date": "2015-12-27T01:22:02Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (closing) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2504/buggy-version/mina.src.java.com.robonobo.mina.network.LCPair.java", "BodyUseAPI": [], "Fixed commit": "3169445d44fdb1c6baac261435d539f4833610ca", "Url": "https://api.github.com/repos/macavity23/robonobo", "Date": "2011-06-28T18:29:27Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ibm.streamsx.topology.internal.core.StreamImpl.builder().isolate(com.ibm.streamsx.topology.builder.BOutput)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (end instanceof com.ibm.streamsx.topology.builder.BUnionOutput) { end = com.ibm.streamsx.topology.internal.core.StreamImpl.builder().addPassThroughOperator(end); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1118/buggy-version/java.src.com.ibm.streamsx.topology.internal.core.StreamImpl.java", "BodyUseAPI": ["com.ibm.streamsx.topology.internal.core.StreamImpl.builder().addPassThroughOperator(com.ibm.streamsx.topology.builder.BOutput)"], "Fixed commit": "8970da18ae09ff6fc41281829ad7565446a74e45", "Url": "https://api.github.com/repos/wmarshall484/streamsx.topology", "Date": "2015-08-19T22:56:57Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.catalina.connector.Request.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cookies == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8770/buggy-version/core.src.main.java.de.javakaffee.web.msm.SessionTrackerValve.java", "BodyUseAPI": [], "Fixed commit": "71200b8ec01a9aa95a1fbf4c30738b2c6ac652f2", "Url": "https://api.github.com/repos/magro/memcached-session-manager", "Date": "2011-03-16T17:19:03Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wyc.builder.GlobalGenerator.generate(wyc.builder.NameID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (other != null) { wyc.builder.Block blk = new wyc.builder.Block(1); blk.append(other); return blk; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/655/buggy-version/modules.wyc.src.wyc.builder.GlobalGenerator.java", "BodyUseAPI": ["wyc.builder.Block.append(wyc.builder.Block)"], "Fixed commit": "4c463123672493f8fb1c2835dce48752b87618b9", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2013-01-29T21:55:59Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasAttribute(\"gpus\")) neuralConfig.setGPUs(getIntArrayAttribute(\"gpus\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3947/buggy-version/src.core.src.main.java.eu.modernmt.config.xml.XMLEngineConfigBuilder.java", "BodyUseAPI": [], "Fixed commit": "e322d11892131794b6602e7507151f3d8262408b", "Url": "https://api.github.com/repos/ModernMT/MMT", "Date": "2017-12-14T18:06:29Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.contract.AssetRequest.getAsset()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(asset.getAssetCategory().getIsAssetAllow().equals(true))) errorMap.put(\"Asset_ParentCategory\", \"Cannot Create asset with parent category\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9199/buggy-version/asset.asset-services-maha.src.main.java.org.egov.web.validator.AssetValidator.java", "BodyUseAPI": [], "Fixed commit": "3e2952e70d1f7f7be93655b075b2d0f10dd745cf", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-11-24T13:04:49Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) != null) { question.setText(user.getPreguntaSeguridad()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1307/buggy-version/app.src.main.java.com.albaradocompany.jose.proyect_meme_clean.ui.activity.PasswordActivity.java", "BodyUseAPI": [], "Fixed commit": "5fd9bf7d1483df85034663cc8d078b19e1297212", "Url": "https://api.github.com/repos/josearmandoam/share_it_wip", "Date": "2017-05-04T14:50:47Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nuxeo.ecm.core.transientstore.api.TransientStoreService.getStore(java.lang.String)", "org.nuxeo.ecm.platform.rendition.lazy.AbstractLazyCachableRenditionProvider.buildRenditionKey(org.nuxeo.ecm.core.api.DocumentModel,org.nuxeo.ecm.platform.rendition.service.RenditionDefinition)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (ts.isCompleted(key)) { ts.release(key); }else { org.nuxeo.ecm.core.work.api.Work work = getRenditionWork(key, doc, def); java.lang.String workId = work.getId(); org.nuxeo.ecm.core.work.api.WorkManager wm = org.nuxeo.runtime.api.Framework.getService(org.nuxeo.ecm.core.work.api.WorkManager.class); if ((wm.find(workId, null)) == null) { wm.schedule(work, Scheduling.IF_NOT_SCHEDULED); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6956/buggy-version/nuxeo-features.nuxeo-platform-rendition.nuxeo-platform-rendition-core.src.main.java.org.nuxeo.ecm.platform.rendition.lazy.AbstractLazyCachableRenditionProvider.java", "BodyUseAPI": ["org.nuxeo.ecm.core.transientstore.api.TransientStore.release(java.lang.String)", "org.nuxeo.ecm.platform.rendition.lazy.AbstractLazyCachableRenditionProvider.getRenditionWork(java.lang.String,org.nuxeo.ecm.core.api.DocumentModel,org.nuxeo.ecm.platform.rendition.service.RenditionDefinition)"], "Fixed commit": "e90adcf4c9557996d6c83ce1d46e1321399ad431", "Url": "https://api.github.com/repos/nuxeo/nuxeo", "Date": "2016-10-30T21:28:26Z"},
{"Line": "=>536", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["communityMessage.getJoinResponse().isResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bJoined) { android.os.Parcelable joined = org.societies.android.api.cis.management.AJoinResponse.convertJoinResponse(communityMessage.getJoinResponse()); intent.putExtra(ICisSubscribed.INTENT_RETURN_VALUE, joined); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5545/buggy-version/platform-infrastructure.client-frwk.SocietiesCISManager.src.org.societies.android.platform.cis.CommunityManagementBase.java", "BodyUseAPI": [], "Fixed commit": "9008d809a3ab86cf8133c6b2bf9810415aeea1d7", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2012-11-12T17:34:47Z"},
{"Line": "=>6", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((points.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5245/buggy-version/pa093.KdTree.java", "BodyUseAPI": [], "Fixed commit": "9c37307e12e6cd5bd375f55436c3e051f0394ce3", "Url": "https://api.github.com/repos/xvitovs1/PA093-project", "Date": "2016-11-15T10:13:16Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.toString().equals(\"\")) { t.proxyAddress = getString(R.string.proxyPlaceholderText); }else { t.proxyAddress = s.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4902/buggy-version/Android.app.src.main.java.com.github.aldurd392.ifthistinydo.RuleActivity.java", "BodyUseAPI": ["android.text.Editable.toString()"], "Fixed commit": "9d6637e2f1ef30f8b4a5cb9623b40e4590b9fd16", "Url": "https://api.github.com/repos/AldurD392/IfThisTinyDo", "Date": "2014-12-28T10:52:50Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.toString().equals(\"\")) { t.uri = getString(R.string.uriPlaceholderText); }else { t.uri = s.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4902/buggy-version/Android.app.src.main.java.com.github.aldurd392.ifthistinydo.RuleActivity.java", "BodyUseAPI": ["android.text.Editable.toString()"], "Fixed commit": "9d6637e2f1ef30f8b4a5cb9623b40e4590b9fd16", "Url": "https://api.github.com/repos/AldurD392/IfThisTinyDo", "Date": "2014-12-28T10:52:50Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.facebook.presto.type.TypeRegistry.getType(com.facebook.presto.spi.type.TypeSignature)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (parameterType == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6980/buggy-version/presto-main.src.main.java.com.facebook.presto.type.TypeRegistry.java", "BodyUseAPI": [], "Fixed commit": "4cce5cbe7752c0077c3db7e1730f4bcae7a0e846", "Url": "https://api.github.com/repos/zhenPATHo/presto", "Date": "2015-02-25T19:12:00Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstTimeInvoked) { newlocation = coordinate; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3417/buggy-version/app.src.main.java.com.example.jingyuliu.glocate.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "3b81ccf2716a0d627ff4c62943d79f0fdbae853f", "Url": "https://api.github.com/repos/AkshatM/G-Locate", "Date": "2014-12-09T05:53:04Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bg0OutOfScreenRight) { mPositions[0].x = (mPositions[1].x) - (mBitmap.getWidth()); }else if (bg1OutOfScreenLeft) { mPositions[1].x = (mPositions[0].x) + (mBitmap.getWidth()); }else if (bg1OutOfScreenRight) { mPositions[1].x = (mPositions[0].x) - (mBitmap.getWidth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7097/buggy-version/MiniGames.src.main.java.org.es.minigames.common.drawable.BackgroundElement.java", "BodyUseAPI": [], "Fixed commit": "4af0296d3a0962258b44df55c5b927576fb66006", "Url": "https://api.github.com/repos/Elasticboy/android_minigames", "Date": "2013-10-11T06:45:09Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.schemaspy.view.HtmlRelationshipsPage.getDot()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dot == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5890/buggy-version/src.main.java.org.schemaspy.view.HtmlRelationshipsPage.java", "BodyUseAPI": [], "Fixed commit": "21577f226a61bf084639d58ebd2c0f1204e4011a", "Url": "https://api.github.com/repos/schemaspy/schemaspy", "Date": "2016-08-19T18:11:02Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cytoscape.view.vizmap.VisualPropertyDependency<?>.getParentVisualProperty()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((parentVP.getTargetDataType()) == key) { if ((model.contains(parentVP)) == false) model.addElement(parentVP); java.util.Set<org.cytoscape.view.model.VisualProperty<?>> props = dep.getVisualProperties(); for (org.cytoscape.view.model.VisualProperty<?> prop : props) model.removeElement(prop); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/32/buggy-version/vizmap-gui-impl.src.main.java.org.cytoscape.view.vizmap.gui.internal.DefaultViewEditorImpl.java", "BodyUseAPI": ["javax.swing.DefaultListModel.addElement(org.cytoscape.view.model.VisualProperty<?>)", "javax.swing.DefaultListModel.contains(org.cytoscape.view.model.VisualProperty<?>)"], "Fixed commit": "507ab86399c470147a6fffead76235208c86faff", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2013-01-09T19:24:54Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!withAnimation) { for (int i = 0; i < (snowValue.snowAlphas.length); i++) { snowValue.snowAlphas[i] = 255; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8554/buggy-version/app.src.main.java.com.joe.holi.view.renderers.weather.SnowCloudRenderer.java", "BodyUseAPI": [], "Fixed commit": "e7d126279f1f9a03873e03ff3e94bd4a989d6c9d", "Url": "https://api.github.com/repos/joj1989/Holiday", "Date": "2016-12-13T08:38:51Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((barrel) != null) { if (barrel.changed) barrel.update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6883/buggy-version/src.main.java.com.austinv11.peripheralsplusplus.turtles.TurtleBarrel.java", "BodyUseAPI": [], "Fixed commit": "e9e5a0b8b33b1e3c6e8bfa0dccd4b0f631c31089", "Url": "https://api.github.com/repos/austinv11/PeripheralsPlusPlus", "Date": "2014-11-08T03:25:56Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNotification) != null) mNotification.number = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/1935/buggy-version/Dimmer.src.giraffine.dimmer.DimmerService.java", "BodyUseAPI": [], "Fixed commit": "6ae45c14bd06dd8b166391643d11dcd2caf2e542", "Url": "https://api.github.com/repos/giraffine/Android-Project", "Date": "2014-02-25T01:41:49Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.card) == null) ^ ((that.card) == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/211/buggy-version/src.main.common.Move.java", "BodyUseAPI": [], "Fixed commit": "03289a2cb18a0327f2bc93946947ee3c25365635", "Url": "https://api.github.com/repos/xormrr/Durak", "Date": "2017-03-20T20:14:25Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.card) != null) { assert (that.card) != null; return this.card.equals(that.card); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/211/buggy-version/src.main.common.Move.java", "BodyUseAPI": [], "Fixed commit": "03289a2cb18a0327f2bc93946947ee3c25365635", "Url": "https://api.github.com/repos/xormrr/Durak", "Date": "2017-03-20T20:14:25Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((l.length) > 0) writer.NBTWriter.writeTagType(out, l[0].getType()); else writer.NBTWriter.writeTagType(out, TagType.TagEnd);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6509/buggy-version/src.writer.NBTWriter.java", "BodyUseAPI": ["l[0].getType()", "writer.NBTWriter.writeTagType(java.io.OutputStream,l[0].getType())"], "Fixed commit": "7b0bf7ec15d9dfdc735f8983663cc0ebf700f462", "Url": "https://api.github.com/repos/sedlak477/NBTReader", "Date": "2016-10-15T22:15:47Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pagingControl.select(\"span[class=highlight2]\").first()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentPage == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2210/buggy-version/src.org.cmu.fastcode.yelpscrapper.Util.java", "BodyUseAPI": [], "Fixed commit": "f9e2448d8902009cdcbbb19bf591c9579cbc8037", "Url": "https://api.github.com/repos/archer-fengjiang/YelpScrapper", "Date": "2012-11-19T00:44:08Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!ignoreSilence) { if (this.getStatus().containsStatus(CardStatusType.\u6c89\u9ed8)) { skillUseInfos.clear(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8799/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.CardInfo.java", "BodyUseAPI": [], "Fixed commit": "a5a6e13718ca4c2c17931e013c9b0ef9912919d0", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2016-06-05T07:18:10Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((encoded.length()) == 0) || (encoded.equals(\"<\"))) { loci.formats.in.LOGGER.debug(\"No pixel data for plane #{}\", no); return buf; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3566/buggy-version/components.formats-bsd.src.loci.formats.in.OMEXMLReader.java", "BodyUseAPI": [], "Fixed commit": "9501f9ced34fd6e794b0ac806ad2820bcc9ea6d2", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-12-02T10:32:36Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentIndex) == (arrayToIterateOver.length)) { throw new java.util.NoSuchElementException(\"attempting to iterate past the end of an array\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3413/buggy-version/LinqALike.src.LinqALike.Common.ArrayIterator.java", "BodyUseAPI": [], "Fixed commit": "57e49cc0a1d59521f8ae1fbfbaf256d7e7f579c1", "Url": "https://api.github.com/repos/Groostav/LinqALike", "Date": "2014-04-10T03:00:45Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstRun) { mDrawerToggle.setDrawerIndicatorEnabled(false); mDrawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED); firstRun = false; displayView(7); }else { displayView(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7674/buggy-version/FitnessTracker.src.se.chalmers.fitnesstracker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "08d1bef8ab4e2e82d1ac2fc51d38dc02bb67fe33", "Url": "https://api.github.com/repos/matbern/FitnessTracker", "Date": "2014-06-05T12:04:01Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getReadPreference()) == null) { java.lang.String msg = (\"Could not resolve specified ReadPreference of type \" + readPreference) + \". Read preferences are resolved from inner classes of com.mongodb.ReadPreference.\"; throw new java.lang.IllegalArgumentException(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5871/buggy-version/components.camel-mongodb.src.main.java.org.apache.camel.component.mongodb.MongoDbEndpoint.java", "BodyUseAPI": [], "Fixed commit": "1c79aef8d5c521c449f36e78e5b931b1b337e39d", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-04-13T09:17:45Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((score) - ((Config.levelScoreLimit) * (level))) >= 0) levelUp();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/831/buggy-version/src.def.game.Stats.java", "BodyUseAPI": [], "Fixed commit": "6c454f2b6e5c02b8a644fd549bf0b86f8d9f6c5d", "Url": "https://api.github.com/repos/2ATeam/STetris", "Date": "2014-05-17T14:56:37Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Project.getActivityByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (current != null) { newActivity.addPredecessor(current); current.addSuccessor(newActivity); }else { view.printDebugln((\"Cannot add predecessor relation to non-exisiting node \" + (predecessors[i]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/683/buggy-version/src.Project.java", "BodyUseAPI": ["Activity.addSuccessor(Activity)", "Activity.addPredecessor(Activity)"], "Fixed commit": "e6740effc97b3c61156db4a88c4ee8782aaa9512", "Url": "https://api.github.com/repos/mars0/Project-Manager", "Date": "2012-10-25T18:09:20Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.liveoak.container.tenancy.InternalApplication.htmlApplicationResourcePath()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (htmlAppPath.head().name().equals(application.id())) { htmlAppPath = htmlAppPath.subPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/801/buggy-version/modules.container.src.main.java.io.liveoak.container.tenancy.ApplicationConfigurationManager.java", "BodyUseAPI": ["io.liveoak.spi.ResourcePath.subPath()"], "Fixed commit": "207abffd5ef716f148d305ccd15c4d4f453c6bc0", "Url": "https://api.github.com/repos/mstruk/liveoak", "Date": "2014-10-24T19:53:32Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(htmlApp.head().name().equals(this.id))) { htmlApp.prependSegment(this.id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/801/buggy-version/modules.container.src.main.java.io.liveoak.container.tenancy.service.ApplicationService.java", "BodyUseAPI": ["io.liveoak.spi.ResourcePath.prependSegment(java.lang.String)"], "Fixed commit": "207abffd5ef716f148d305ccd15c4d4f453c6bc0", "Url": "https://api.github.com/repos/mstruk/liveoak", "Date": "2014-10-24T19:53:32Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dy) == 0) { attack = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3121/buggy-version/src.Player.java", "BodyUseAPI": [], "Fixed commit": "f6d49d24b7257d5d3693a8cb477c967f2c326d9b", "Url": "https://api.github.com/repos/cychiuae/isom3320-project-javafx-no-package", "Date": "2015-02-04T09:23:22Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (projProp.containsKey(Project.PROJECT_DESC_PROPERTY)) proj.setDescription(projProp.getProperty(Project.PROJECT_DESC_PROPERTY));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/3372/buggy-version/src.com.coder.server.ProjectManager.java", "BodyUseAPI": ["com.coder.server.struct.Project.setDescription(java.lang.String)", "java.util.Properties.getProperty(Project.PROJECT_DESC_PROPERTY)"], "Fixed commit": "b81a3dbd17e797c036dfe6c842a60d2c41f2919a", "Url": "https://api.github.com/repos/dcollin/CoderServer", "Date": "2015-11-13T15:44:02Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (month <= 4) { semester = \"SPRING\"; }else if (month <= 7) { semester = \"SUMMER\"; }else if (month <= 12) { semester = \"FALL\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/7485/buggy-version/src.edu.sc.csce740.GRADS.java", "BodyUseAPI": [], "Fixed commit": "f81ce935bc95dc492d32bfe376acb820b7a16201", "Url": "https://api.github.com/repos/fuzzley/GRADS", "Date": "2015-11-24T18:52:08Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value != null) { org.sharedhealth.mci.validation.constraintvalidator.LengthValidator.logger.debug(((\" Name [\" + value) + \"]\")); org.sharedhealth.mci.validation.constraintvalidator.LengthValidator.logger.debug(((\" length [\" + (length.lengthSize())) + \"]\")); java.lang.String trimvalue = value.trim(); org.sharedhealth.mci.validation.constraintvalidator.LengthValidator.logger.debug(((\" trim value [\" + trimvalue) + \"]\")); org.sharedhealth.mci.validation.constraintvalidator.LengthValidator.logger.debug(((\" trim lenght [\" + (trimvalue.length())) + \"]\")); if ((trimvalue.length()) > ((int) (length.lengthSize()))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/8293/buggy-version/mci-api.src.main.java.org.sharedhealth.mci.validation.constraintvalidator.LengthValidator.java", "BodyUseAPI": ["java.lang.String.trim()", "org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "8f447c2ddc5877e5830fda0573df20cb9c1afeca", "Url": "https://api.github.com/repos/SharedHealth/MCI-Resigtry", "Date": "2014-08-19T06:04:04Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["entity.Machine.getDateOfLastRevision()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (lastRevision == null) { machine.setDateOfLastRevision(revision.getDateOfRevision()); machineDao.update(machine); }else if (revision.getDateOfRevision().after(lastRevision)) { machine.setDateOfLastRevision(revision.getDateOfRevision()); machineDao.update(machine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/192/buggy-version/service.src.main.java.service.RevisionServiceImpl.java", "BodyUseAPI": ["revision.getDateOfRevision().after(java.util.Date)"], "Fixed commit": "1f031905f5eb3a7b307ecee6b6a645ccd13ada6e", "Url": "https://api.github.com/repos/cypo721/PA165-project", "Date": "2017-01-14T11:30:59Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["entity.Machine.getDateOfLastRevision()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (lastRevision == null) { machine.setDateOfLastRevision(revision.getDateOfRevision()); machineDao.update(machine); }else if (revision.getDateOfRevision().after(lastRevision)) { machine.setDateOfLastRevision(revision.getDateOfRevision()); machineDao.update(machine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/192/buggy-version/service.src.main.java.service.RevisionServiceImpl.java", "BodyUseAPI": ["revision.getDateOfRevision().after(java.util.Date)"], "Fixed commit": "1f031905f5eb3a7b307ecee6b6a645ccd13ada6e", "Url": "https://api.github.com/repos/cypo721/PA165-project", "Date": "2017-01-14T11:30:59Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_encodedBytes) == null) { int bufferLen = (chunkLength + ((chunkLength + 31) >> 5)) + 7; _encodedBytes = _recycler.allocEncodingBuffer(bufferLen); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/399/buggy-version/src.main.java.com.ning.compress.lzf.LZFCompressingInputStream.java", "BodyUseAPI": [], "Fixed commit": "074692d1c31bc85a490d949e812897961b88c1aa", "Url": "https://api.github.com/repos/ning/compress", "Date": "2013-03-07T21:28:45Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((t.txType) == (Transaction.TX_TYPES.IL)) || ((t.txType) == (Transaction.TX_TYPES.DL))) || ((t.txType) == (Transaction.TX_TYPES.SC))) || ((t.txType) == (Transaction.TX_TYPES.DC))) { for (java.util.Iterator<edu.kit.aifb.cumulus.store.Operation> it = t.getOps().iterator(); it.hasNext();) { edu.kit.aifb.cumulus.store.Operation op = it.next(); touched_entities.add(op.getParam(2).replace(\"<\", \"\").replace(\">\", \"\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9267/buggy-version/src.main.java.edu.kit.aifb.cumulus.store.ExecuteTransactions.java", "BodyUseAPI": ["t.getOps().iterator()", "edu.kit.aifb.cumulus.store.Transaction.getOps()"], "Fixed commit": "bcd6070fcd97020fbdf2f5ed110e89ed8cd1bd4d", "Url": "https://api.github.com/repos/ers-devs/ers-aggregator", "Date": "2013-12-06T12:50:12Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.sru.andgate.bitbot.ide.IDE.findViewById(R.id.ide_view_flipper)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((vf.getCurrentView()) == (vf.getChildAt(0))) promptSave(); else vf.showPrevious();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/604/buggy-version/src.edu.sru.andgate.bitbot.ide.IDE.java", "BodyUseAPI": ["android.widget.ViewFlipper.showPrevious()"], "Fixed commit": "d28dbea0c847a5ec4d420bb970059e3579ce4da3", "Url": "https://api.github.com/repos/Ciph3rzer0/BitBot", "Date": "2011-04-20T23:28:25Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.prefs.Preferences.userRoot()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((userNodeForPackage.get(\"LolnetLauncherbootstrap\", \"\")) == null) || (!(userNodeForPackage.get(\"LolnetLauncherbootstrap\", \"\").equals(\"true\")))) { downloadLatest = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9285/buggy-version/src.io.github.oxguy3.craftboot.LolnetLauncherboot.java", "BodyUseAPI": [], "Fixed commit": "bcc4272762a0a19be52a4e3320088501458e3dd6", "Url": "https://api.github.com/repos/James137137/LolnetLauncherBoot", "Date": "2015-02-10T20:48:27Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(compareMaster.isSame(filter.getAuthor(), item.getAuthor()))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6944/buggy-version/OpenRedmine.src.jp.redmine.redmineclient.db.cache.RedmineFilterModel.java", "BodyUseAPI": [], "Fixed commit": "7e0a17304f57401a72514a4588bf099ca1a7bc7e", "Url": "https://api.github.com/repos/indication/OpenRedmine", "Date": "2013-03-25T17:59:43Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(compareMaster.isSame(filter.getAssigned(), item.getAssigned()))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/6944/buggy-version/OpenRedmine.src.jp.redmine.redmineclient.db.cache.RedmineFilterModel.java", "BodyUseAPI": [], "Fixed commit": "7e0a17304f57401a72514a4588bf099ca1a7bc7e", "Url": "https://api.github.com/repos/indication/OpenRedmine", "Date": "2013-03-25T17:59:43Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxBAD != null) && (!(maxBAD.getBioAssays().containsAll(expExp.getBioAssays())))) { ubic.gemma.core.loader.expression.ExpressionExperimentPlatformSwitchService.log.warn((\"This experiment looked like it had samples run on more than one platform, \" + (\"but it also has no BioAssayDimension that is eligible to accomodate all samples. \" + \"The experiment will be switched to the merged platform, but no BioAssayDimension switch will be done.\"))); multiPlatformPerSample = false; maxBAD = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5574/buggy-version/gemma-core.src.main.java.ubic.gemma.core.loader.expression.ExpressionExperimentPlatformSwitchService.java", "BodyUseAPI": [], "Fixed commit": "6767b9968dc1a31172a67e9f640d393c11756075", "Url": "https://api.github.com/repos/PavlidisLab/Gemma", "Date": "2017-07-31T23:28:57Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((issue.line()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2515/buggy-version/server.sonar-server.src.main.java.org.sonar.server.issue.ws.SearchAction.java", "BodyUseAPI": [], "Fixed commit": "25a5e6e15c54a61631365389d95c369d7a86ac63", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-10-21T14:12:01Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(sourceBinding instanceof com.doctusoft.bean.binding.observable.ObservableValueBinding<?>)) && (!(targetBinding instanceof com.doctusoft.bean.binding.observable.ObservableValueBinding<?>))) { targetBinding.setValue(sourceBinding.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/4105/buggy-version/ds-bean-binding.src.main.java.com.doctusoft.bean.binding.Bindings.java", "BodyUseAPI": ["com.doctusoft.bean.binding.ValueBinding<T>.getValue()", "com.doctusoft.bean.binding.ValueBinding<T>.setValue(sourceBinding.getValue())"], "Fixed commit": "d56a48e22e3e7df914b055829000b54ecd06891e", "Url": "https://api.github.com/repos/Doctusoft/ds-bean", "Date": "2015-03-26T16:19:58Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fr.axicer.SpatiumUtils.Configs.ConfigManager.getDefaultConfig().getBoolean(\"pluginPrefix\")) { return fr.axicer.SpatiumUtils.Utils.ChatUtils.PLUGIN_PREFIX; }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5511/buggy-version/SpatiumUtils.src.fr.axicer.SpatiumUtils.Utils.ChatUtils.java", "BodyUseAPI": [], "Fixed commit": "206074be2495469e7e864ecfba389e76a91e4a5c", "Url": "https://api.github.com/repos/Axicer/SpatiumUtils", "Date": "2015-08-03T07:47:36Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.RandomAccessFile.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (null != currentNumber) { this.currentLine = java.lang.Long.parseLong(currentNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/9272/buggy-version/src.main.java.com.PATHoujia.dataqueue.core.LogAccessFile.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "da9c61f52efb17fb6feac20e0875bf5e98547c52", "Url": "https://api.github.com/repos/andy-huaan/data-queue", "Date": "2017-01-06T06:53:04Z"},
{"Line": "=>2148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["semanticMarkup.ling.learn.GetNounsAfterPtnReturnValue.getBoundaryWord()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (semanticMarkup.ling.learn.StringUtility.createMatcher(\"\\\\w\", bWord).find()) { sign += this.getDataHolder().updateDataHolder(bWord, \"b\", \"\", \"wordpos\", 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/2260/buggy-version/src.semanticMarkup.ling.learn.Learner.java", "BodyUseAPI": ["semanticMarkup.ling.learn.DataHolder.updateDataHolder(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"], "Fixed commit": "cc3dd27df9d3c589003a7b53c8d136c82b4fbb1d", "Url": "https://api.github.com/repos/phenoscape/charaparser-unsupervised", "Date": "2013-07-17T06:22:53Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (latLngBounds != null) googleMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(latLngBounds, ch.hearc.devmobile.travelnotebook.HomeActivity.MAP_BOUNDS_MARGIN));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V137/5785/buggy-version/src.ch.hearc.devmobile.travelnotebook.HomeActivity.java", "BodyUseAPI": ["com.google.android.gms.maps.GoogleMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(latLngBounds, ch.hearc.devmobile.travelnotebook.HomeActivity.MAP_BOUNDS_MARGIN))", "com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(com.google.android.gms.maps.model.LatLngBounds,int)"], "Fixed commit": "4dd06c9a681d126a571ab39224d66aa892cac1d4", "Url": "https://api.github.com/repos/maeberli/travelnotebook", "Date": "2014-01-03T06:43:59Z"}]}
